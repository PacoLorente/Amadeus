# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 4A 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 6D 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 5D 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 7E 47        Posicion_inicio defw $477e								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 02           Vel_left db 2 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 04           Vel_down db 4 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 6B 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_izquierda_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 203  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 204  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 205  85EF              ;														; _produzca colisión.
 206  85EF 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F2              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F2 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F5              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F5
 211  85F5
 212  85F5              ; Gestión de FRAMES.
 213  85F5
 214  85F5 00           Switch db 0
 215  85F6
 216  85F6              ; Variables de Raster y localización en pantalla.
 217  85F6
 218  85F6 00 FF        Temp_Raster defw $ff00
 219  85F8
 220  85F8              ; Rutina principal *************************************************************************************************************************************************************************
 221  85F8              ;
 222  85F8              ;	14/11/22
 223  85F8
 224  85F8 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 225  85FB
 226  85FB 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 227  85FD ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 228  85FF ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 229  8601 F3           	DI
 230  8602
 231  8602 3E 07        	ld a,%00000111
 232  8604 CD 81 92     	call Cls
 233  8607
 234  8607              ;	call Pinta_FILAS
 235  8607
 236  8607 CD 7D 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 237  860A
 238  860A 21 DD 85     	ld hl,Numero_de_entidades
 239  860D 46           	ld b,(hl)
 240  860E 04           	inc b
 241  860F 05           	dec b
 242  8610 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 243  8612
 244  8612              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 245  8612              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 246  8612              ;	Pintamos el resto de entidades:
 247  8612
 248  8612 CD 64 87     	call Inicia_punteros_de_entidades
 249  8615
 250  8615              ;	INICIA ENTIDADES!!!!!
 251  8615
 252  8615 C5           1 push bc  												; Guardo el contador de entidades.
 253  8616 CD BE 87      	call Inicia_Puntero_objeto
 254  8619 CD D1 8C     	call Draw
 255  861C CD A0 7F     	call Guarda_foto_registros
 256  861F CD 06 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 257  8622 C1           	pop bc
 258  8623 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 259  8625
 260  8625              ; 	INICIA AMADEUS!!!!!
 261  8625
 262  8625 CD 59 88     3 call Restore_Amadeus
 263  8628 CD BE 87     	call Inicia_Puntero_objeto
 264  862B CD D1 8C     	call Draw
 265  862E CD A0 7F     	call Guarda_foto_registros
 266  8631 CD 6B 88     	call Store_Amadeus
 267  8634
 268  8634              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 269  8634
 270  8634 CD 7A 87     	call Inicia_Puntero_Disparo_Entidades
 271  8637 CD 81 87     	call Inicia_Puntero_Disparo_Amadeus
 272  863A
 273  863A              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 274  863A
 275  863A CD 64 87     	call Inicia_punteros_de_entidades
 276  863D CD 47 88     	call Restore_Primera_entidad
 277  8640
 278  8640 3A DD 85     	ld a,(Numero_de_entidades)
 279  8643 3C           	inc a
 280  8644 32 DE 85     	ld (Numero_de_malotes),a
 281  8647
 282  8647 FB           2 ei
 283  8648 18 FD        	jr 2B
 284  864A
 285  864A              ; -----------------------------------------------------------------------------------
 286  864A
 287  864A              Frame
 288  864A
 289  864A              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 290  864A              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 291  864A
 292  864A 3E 02            ld a,2
 293  864C D3 FE            out ($fe),a
 294  864E CD D5 8F     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 295  8651 CD 0E 90     	call Extrae_foto_disparos
 296  8654 3E 01            ld a,1
 297  8656 D3 FE            out ($fe),a
 298  8658
 299  8658              ; ----------------------------------------------------------------------
 300  8658
 301  8658              ;	Existe colisión?????
 302  8658
 303  8658 CD 9D 8C     	call Selector_de_impactos
 304  865B
 305  865B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 306  865B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 307  865B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 308  865B
 309  865B AF           	xor a
 310  865C 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 311  865F
 312  865F CD 64 87     	call Inicia_punteros_de_entidades
 313  8662 CD 47 88     	call Restore_Primera_entidad
 314  8665
 315  8665 AF           	xor a
 316  8666 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 317  8669
 318  8669 CD 2E 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 319  866C 21 00 70     	ld hl,Album_de_fotos
 320  866F 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 321  8672              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 322  8672 3A DD 85         ld a,(Numero_de_entidades)
 323  8675 47               ld b,a
 324  8676 A7           	and a
 325  8677 28 26        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 326  8679
 327  8679              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 328  8679 3A B4 85     2 ld a,(Impacto)
 329  867C A7           	and a
 330  867D 20 FE        	jr nz,$
 331  867F              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 332  867F
 333  867F C5           	push bc
 334  8680 CD CF 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 335  8683
 336  8683 3A C9 85     	ld a,(Ctrl_0)
 337  8686 CB 67        	bit 4,a
 338  8688 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 339  868A
 340  868A              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 341  868A              ; Las entidades sólo generan disparo cuando se mueven.
 342  868A              ; 16/02/23.
 343  868A              ; [[[
 344  868A CD B4 88     	call Detecta_disparo_entidad
 345  868D              ; ]]]
 346  868D CD 2B 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 347  8690
 348  8690 21 C9 85     1 ld hl,Ctrl_0
 349  8693 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 350  8695 AF           	xor a
 351  8696 32 CA 85     	ld (Obj_dibujado),a
 352  8699
 353  8699 CD 06 88     6 call Store_Restore_entidades
 354  869C C1           	pop bc
 355  869D 10 DA        	djnz 2B
 356  869F
 357  869F              ; Tras la gestión de las entidades, ... AMADEUS.
 358  869F
 359  869F CD 59 88     4 call Restore_Amadeus
 360  86A2
 361  86A2              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 362  86A2 3A B4 85     	ld a,(Impacto)
 363  86A5 A7           	and a
 364  86A6 20 FE        	jr nz,$
 365  86A8              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 366  86A8
 367  86A8 CD FC 86     	call Mov_Amadeus
 368  86AB
 369  86AB 3A C9 85     	ld a,(Ctrl_0)
 370  86AE CB 67        	bit 4,a
 371  86B0 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 372  86B2
 373  86B2 CD 2B 87     	call Guarda_foto_entidad_a_pintar
 374  86B5
 375  86B5 21 C9 85     3 ld hl,Ctrl_0
 376  86B8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 377  86BA AF           	xor a
 378  86BB 32 CA 85     	ld (Obj_dibujado),a
 379  86BE
 380  86BE CD 6B 88     	call Store_Amadeus
 381  86C1
 382  86C1 CD 4C 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 383  86C4
 384  86C4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 385  86C4
 386  86C4 CD 88 87     	call Calcula_numero_de_malotes
 387  86C7 CD A0 87     	call Calcula_numero_de_disparotes
 388  86CA
 389  86CA 3E 04        	ld a,4
 390  86CC D3 FE        	out ($fe),a
 391  86CE C9           	ret
 392  86CF
 393  86CF              ; --------------------------------------------------------------------------------------------------------------
 394  86CF              ;
 395  86CF              ;	27/03/23
 396  86CF
 397  86CF              Mov_obj
 398  86CF
 399  86CF              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 400  86CF
 401  86CF AF           	xor a
 402  86D0 32 CA 85     	ld (Obj_dibujado),a
 403  86D3 CD 35 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 404  86D6              ;														; Obj_dibujado="0".
 405  86D6              ; Movemos Entidades malignas.
 406  86D6
 407  86D6 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 408  86D9 24           	inc h                                               ; Salimos de la rutina.
 409  86DA 25           	dec h
 410  86DB C8           	ret z
 411  86DC
 412  86DC CD 6F 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 413  86DF
 414  86DF 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 415  86E2 CB 67        	bit 4,a
 416  86E4 C8           	ret z
 417  86E5
 418  86E5              ; Ha habido desplazamiento de la entidad maligna.
 419  86E5              ; Ha llegado a zona de AMADEUS ???
 420  86E5
 421  86E5 3A A2 85     	ld a,(Coordenada_y)
 422  86E8 FE 14        	cp $14
 423  86EA D4 7D 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 424  86ED              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 425  86ED
 426  86ED              ; ---------
 427  86ED
 428  86ED 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 429  86EF 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 430  86F2 CD 35 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 431  86F5 CD 4C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 432  86F8 CD 1B 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 433  86FB C9           	ret													; _de la misma.
 434  86FC
 435  86FC              ; --------------------------------------------------------------------------------------------------------------
 436  86FC              ;
 437  86FC              ;	29/1/23
 438  86FC
 439  86FC              Mov_Amadeus
 440  86FC
 441  86FC AF           	xor a
 442  86FD 32 CA 85     	ld (Obj_dibujado),a
 443  8700 CD 35 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 444  8703              ;														; Obj_dibujado="0".
 445  8703              ; Movemos Amadeus.
 446  8703
 447  8703 CD 91 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 448  8706 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 449  8709 CB 67        	bit 4,a
 450  870B C8           	ret z
 451  870C
 452  870C              ; ---------
 453  870C
 454  870C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 455  870E 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 456  8711 CD 35 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 457  8714 CD 4C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 458  8717 CD 1B 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 459  871A C9           	ret													; _de la nave.
 460  871B
 461  871B              ; --------------------------------------------------------------------------------------------------------------
 462  871B              ;
 463  871B              ;	31/01/23
 464  871B              ;
 465  871B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 466  871B
 467  871B              Guarda_foto_entidad_a_borrar
 468  871B
 469  871B CD AB 8F     	call Prepara_draw
 470  871E CD E5 8E     	call calcula_CColumnass
 471  8721 CD 1C 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 472  8724 CD 71 8F     	call Define_rutina_de_impresion
 473  8727 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 474  872A C9           	ret
 475  872B
 476  872B              ; --------------------------------------------------------------------------------------------------------------
 477  872B              ;
 478  872B              ;	31/01/23
 479  872B              ;
 480  872B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 481  872B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 482  872B
 483  872B              Guarda_foto_entidad_a_pintar
 484  872B
 485  872B CD 58 87     	call Repone_pintar
 486  872E CD D1 8C     	call Draw
 487  8731 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 488  8734 C9           	ret
 489  8735
 490  8735              ; --------------------------------------------------------------------------------------------------------------
 491  8735              ;
 492  8735              ;
 493  8735
 494  8735 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 495  8738 3A CA 85     	ld a,(Obj_dibujado)
 496  873B A7           	and a
 497  873C 28 05        	jr z,1F
 498  873E 11 BF 85     	ld de,Variables_de_pintado
 499  8741 18 03        	jr 2F
 500  8743 11 B5 85     1 ld de,Variables_de_borrado
 501  8746 01 08 00     2 ld bc,8
 502  8749 ED B0        	ldir
 503  874B C9           	ret
 504  874C
 505  874C              ; --------------------------------------------------------------------------------------------------------------
 506  874C
 507  874C 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 508  874F 11 9B 85     	ld de,Filas
 509  8752 01 08 00     	ld bc,8
 510  8755 ED B0        	ldir
 511  8757 C9           	ret
 512  8758
 513  8758 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 514  875B 11 9B 85     	ld de,Filas
 515  875E 01 08 00     	ld bc,8
 516  8761 ED B0        	ldir
 517  8763 C9           	ret
 518  8764
 519  8764              ; *************************************************************************************************************************************************************
 520  8764              ;
 521  8764              ; 8/1/23
 522  8764              ;
 523  8764              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 524  8764              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 525  8764              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 526  8764
 527  8764              ; Destruye HL y DE !!!!!
 528  8764
 529  8764              Inicia_punteros_de_entidades
 530  8764
 531  8764 21 68 84     	ld hl,Indice_de_entidades
 532  8767 CD B8 87         call Extrae_address
 533  876A 22 D7 85         ld (Puntero_store_entidades),hl
 534  876D 21 6A 84     	ld hl,Indice_de_entidades+2
 535  8770 22 DB 85     	ld (Indice_restore),hl
 536  8773 CD B8 87     	call Extrae_address
 537  8776 22 D9 85     	ld (Puntero_restore_entidades),hl
 538  8779 C9               ret
 539  877A
 540  877A              ; *************************************************************************************************************************************************************
 541  877A              ;
 542  877A              ; 8/1/23
 543  877A              ;
 544  877A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 545  877A
 546  877A 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 547  877D 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 548  8780 C9           	ret
 549  8781 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 550  8784 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 551  8787 C9           	ret
 552  8788
 553  8788              ; -------------------------------------------------------------------------------------------------------------
 554  8788              ;
 555  8788              ; 28/2/23
 556  8788              ;
 557  8788
 558  8788              Calcula_numero_de_malotes
 559  8788
 560  8788 21 00 70     	ld hl,Album_de_fotos
 561  878B EB           	ex de,hl
 562  878C 2A E3 85     	ld hl,(Stack_snapshot)
 563  878F
 564  878F 06 00        	ld b,0
 565  8791 7D           	ld a,l
 566  8792 93           	sub e
 567  8793 28 07        	jr z,1F
 568  8795
 569  8795              ; Nº de malotes no es "0".
 570  8795
 571  8795 D6 06        2 sub 6
 572  8797 04           	inc b
 573  8798 A7           	and a
 574  8799 20 FA        	jr nz,2B
 575  879B 78           	ld a,b
 576  879C
 577  879C 32 DE 85     1 ld (Numero_de_malotes),a
 578  879F C9           	ret
 579  87A0
 580  87A0              ; -------------------------------------------------------------------------------------------------------------
 581  87A0              ;
 582  87A0              ; 28/2/23
 583  87A0              ;
 584  87A0
 585  87A0              Calcula_numero_de_disparotes
 586  87A0
 587  87A0 21 60 70     	ld hl,Album_de_fotos_disparos
 588  87A3 EB           	ex de,hl
 589  87A4 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 590  87A7
 591  87A7 06 00        	ld b,0
 592  87A9 7D           	ld a,l
 593  87AA 93           	sub e
 594  87AB 28 07        	jr z,1F
 595  87AD
 596  87AD              ; Nº de malotes no es "0".
 597  87AD
 598  87AD D6 06        2 sub 6
 599  87AF 04           	inc b
 600  87B0 A7           	and a
 601  87B1 20 FA        	jr nz,2B
 602  87B3 78           	ld a,b
 603  87B4
 604  87B4 32 E7 85     1 ld (Numero_de_disparotes),a
 605  87B7 C9           	ret
 606  87B8              ; *************************************************************************************************************************************************************
 607  87B8              ;
 608  87B8              ; 20/10/22
 609  87B8              ;
 610  87B8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 611  87B8              ;
 612  87B8              ; Destruye el puntero y DE !!!!!
 613  87B8
 614  87B8 5E           Extrae_address ld e,(hl)
 615  87B9 23           	inc hl
 616  87BA 56           	ld d,(hl)
 617  87BB 2B           	dec hl
 618  87BC EB           	ex de,hl
 619  87BD C9           	ret
 620  87BE
 621  87BE              ; *************************************************************************************************************************************************************
 622  87BE              ;
 623  87BE              ;	7/2/23
 624  87BE              ;
 625  87BE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 626  87BE              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 627  87BE              ;
 628  87BE              ;   Destruye HL y BC !!!!!,
 629  87BE              ;
 630  87BE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 631  87BE              ;					"0" ..... Izquierda.
 632  87BE
 633  87BE              Inicia_Puntero_objeto
 634  87BE
 635  87BE 3A AF 85     	ld a,(Cuad_objeto)
 636  87C1 E6 01        	and 1
 637  87C3 F5           	push af
 638  87C4 CC E2 87     	call z,Inicia_puntero_objeto_izq
 639  87C7 F1           	pop af
 640  87C8 28 2B        	jr z,1F
 641  87CA CD CF 87     	call Inicia_puntero_objeto_der
 642  87CD 18 26        	jr 1F
 643  87CF
 644  87CF              ; Arrancamos desde la parte izquierda de la pantalla.
 645  87CF              ; Iniciamos (Indice_Sprite_der).
 646  87CF
 647  87CF 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 648  87D2 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 649  87D5 CD B8 87     	call Extrae_address
 650  87D8 22 9F 85     	ld (Puntero_objeto),hl
 651  87DB
 652  87DB 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 653  87DE              ;	call Extrae_address
 654  87DE 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 655  87E1 C9           	ret
 656  87E2
 657  87E2              ; Arrancamos desde la parte derecha de la pantalla.
 658  87E2              ; Iniciamos (Indice_Sprite_izq).
 659  87E2
 660  87E2 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 661  87E5 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 662  87E8 CD B8 87     	call Extrae_address
 663  87EB 22 9F 85     	ld (Puntero_objeto),hl
 664  87EE
 665  87EE 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 666  87F1              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 667  87F1 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 668  87F4 C9           	ret
 669  87F5
 670  87F5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 671  87F5
 672  87F5 21 38 83     1 ld hl,Amadeus
 673  87F8 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 674  87FC B7 ED 42     	sub hl,bc
 675  87FF C0           	ret nz
 676  8800 21 C9 85     	ld hl,Ctrl_0
 677  8803 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 678  8805 C9           	ret 												; _de nuestra nave en los extremos.
 679  8806
 680  8806              ; *************************************************************************************************************************************************************
 681  8806              ;
 682  8806              ;	8/1/23
 683  8806              ;
 684  8806              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 685  8806              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 686  8806
 687  8806              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 688  8806              ;	_de la 2ª y 3ª entidad respectivamente.
 689  8806
 690  8806              Store_Restore_entidades
 691  8806
 692  8806 E5           	push hl
 693  8807 D5           	push de
 694  8808 C5            	push bc
 695  8809
 696  8809              ;	STORE !!!!!
 697  8809              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 698  8809
 699  8809 21 9B 85     	ld hl,Filas
 700  880C ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 701  8810 01 3B 00     	ld bc,59
 702  8813 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 703  8815
 704  8815              ; 	Entidad_sospechosa. 20/4/23
 705  8815
 706  8815 3A B4 85     	ld a,(Impacto)
 707  8818 A7           	and a
 708  8819 28 0C        	jr z,1F
 709  881B
 710  881B 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 711  881E 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 712  8821 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 713  8822 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 714  8824 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 715  8827
 716  8827              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 717  8827
 718  8827 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 719  882A 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 720  882D 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 721  8830 01 3B 00     	ld bc,59
 722  8833 ED B0        	ldir
 723  8835
 724  8835              ;	Incrementa RESTORE !!!!!
 725  8835
 726  8835 2A DB 85         ld hl,(Indice_restore)
 727  8838 23           	inc hl
 728  8839 23           	inc hl
 729  883A 22 DB 85     	ld (Indice_restore),hl
 730  883D CD B8 87         call Extrae_address
 731  8840 22 D9 85         ld (Puntero_restore_entidades),hl
 732  8843 C1           	pop bc
 733  8844 D1           	pop de
 734  8845 E1           	pop hl
 735  8846 C9           	ret
 736  8847
 737  8847              ; **************************************************************************************************
 738  8847              ;
 739  8847              ;	29/10/22
 740  8847              ;
 741  8847              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 742  8847
 743  8847 E5           Restore_Primera_entidad push hl
 744  8848 D5           	push de
 745  8849 C5            	push bc
 746  884A 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 747  884D 11 9B 85     	ld de,Filas
 748  8850 01 3B 00     	ld bc,59
 749  8853 ED B0        	ldir
 750  8855 C1           	pop bc
 751  8856 D1           	pop de
 752  8857 E1           	pop hl
 753  8858 C9           	ret
 754  8859
 755  8859              ; **************************************************************************************************
 756  8859              ;
 757  8859              ;	25/01/23
 758  8859              ;
 759  8859              ;	Restore_Amadeus
 760  8859              ;
 761  8859              ;	Cargamos en DRAW los parámetros de Amadeus.
 762  8859              ;
 763  8859
 764  8859 E5           Restore_Amadeus	push hl
 765  885A D5           	push de
 766  885B C5            	push bc
 767  885C 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 768  885F 11 9B 85     	ld de,Filas
 769  8862 01 3B 00     	ld bc,59
 770  8865 ED B0        	ldir
 771  8867 C1           	pop bc
 772  8868 D1           	pop de
 773  8869 E1           	pop hl
 774  886A C9           	ret
 775  886B
 776  886B              ; *************************************************************************************************************************************************************
 777  886B              ;
 778  886B              ;	29/01/23
 779  886B              ;
 780  886B              ;	Store_Amadeus
 781  886B              ;
 782  886B              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 783  886B              ;
 784  886B
 785  886B E5           Store_Amadeus push hl
 786  886C D5           	push de
 787  886D C5            	push bc
 788  886E 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 789  8871 11 74 84     	ld de,Amadeus_db
 790  8874 01 3B 00     	ld bc,59
 791  8877 ED B0        	ldir
 792  8879 C1           	pop bc
 793  887A D1           	pop de
 794  887B E1           	pop hl
 795  887C C9           	ret
 796  887D
 797  887D              ; **************************************************************************************************
 798  887D
 799  887D              ; Teclado.
 800  887D
 801  887D 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 802  887F DB FE        	in a,($fe)
 803  8881 E6 01        	and $01
 804  8883 28 02        	jr z,1f
 805  8885 18 F6        	jr Pulsa_ENTER
 806  8887 C9           1 ret
 807  8888
 808  8888              ; **************************************************************************************************
 809  8888              ;
 810  8888              ; Temporización.
 811  8888
 812  8888              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 813  8888              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 814  8888              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 815  8888              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 816  8888
 817  8888              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 818  8888              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 819  8888              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 820  8888
 821  8888              ; A partir de $4f61 no hace falta DELAY.
 822  8888
 823  8888              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 824  8888
 825  8888 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 826  888B 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 827  888C 78           	LD A,B
 828  888D A7           	AND A
 829  888E 20 FB        	JR NZ,wait
 830  8890 C9           	RET
 831  8891
 832  8891              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 833  8891              ;
 834  8891              ;	5/3/23
 835  8891              ;
 836  8891              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 837  8891
 838  8891              Movimiento_Amadeus
 839  8891
 840  8891              ; Disparo.
 841  8891
 842  8891 3E F7        	ld a,$f7												; "5" para disparar.
 843  8893 DB FE        	in a,($fe)
 844  8895 E6 10        	and $10
 845  8897 CC F1 88     	call z,Genera_disparo
 846  889A
 847  889A 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 848  889C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 849  889E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 850  88A0 CC 0F 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 851  88A3 3E F7        	ld a,$f7
 852  88A5 DB FE        	in a,($fe)
 853  88A7 E6 01        	and $01
 854  88A9 C8           	ret z
 855  88AA
 856  88AA 3E F7        	ld a,$f7
 857  88AC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 858  88AE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 859  88B0 CC F1 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 860  88B3 C9           	ret
 861  88B4
 862  88B4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 863  88B4              ;
 864  88B4              ;	Rutina provisional para que los malotes cagen balas.
 865  88B4
 866  88B4 3E 7F        Detecta_disparo_entidad ld a,$7f
 867  88B6 DB FE        	in a,($fe)
 868  88B8 E6 01        	and 1
 869  88BA C0           	ret nz
 870  88BB CD F1 88     	call Genera_disparo
 871  88BE C9           	ret
 872  88BF
 873  88BF              ; Pinta indicadores de FILAS. ------------------------------------------------------
 874  88BF
 875  88BF 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 876  88C2
 877  88C2              ; ----------
 878  88C2 06 20        	ld b,32
 879  88C4 E5           2 push hl
 880  88C5 C5           	push bc
 881  88C6              ; ----------
 882  88C6
 883  88C6 06 BF        	ld b,$bf
 884  88C8 36 80        1 ld (hl),%10000000
 885  88CA CD B7 8F     	call NextScan
 886  88CD 10 F9        	djnz 1B
 887  88CF
 888  88CF              ; ----------
 889  88CF C1           	pop bc
 890  88D0 E1           	pop hl
 891  88D1 2C           	inc l
 892  88D2 10 F0        	djnz 2B
 893  88D4              ; ----------
 894  88D4
 895  88D4 06 03        	ld b,3
 896  88D6 21 00 47         ld hl,$4700
 897  88D9 CD DF 88     3 call Bucle_1
 898  88DC 10 FB            djnz 3B
 899  88DE C9               ret
 900  88DF
 901  88DF C5           Bucle_1 push bc
 902  88E0 E5                   push hl
 903  88E1 D1                   pop de
 904  88E2 13                   inc de
 905  88E3 01 FF 00             ld bc,255
 906  88E6 36 FF                ld (hl),255
 907  88E8 ED B0                ldir
 908  88EA 23                   inc hl
 909  88EB 3E 07                ld a,7
 910  88ED 84                   add a,h
 911  88EE 67                   ld h,a
 912  88EF C1                   pop bc
 913  88F0 C9                   ret
 914  88F1
 915  88F1              ; ---------------------------------------------------------------
 916  88F1
 917  88F1              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88F1              ; ******************************************************************************************************************************************************************************************
   2+ 88F1              ;
   3+ 88F1              ;   17/04/23
   4+ 88F1              ;
   5+ 88F1              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88F1              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88F1              ;
   8+ 88F1              ;
   9+ 88F1              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88F1              ;
  11+ 88F1              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88F1              ;               _ hacen las entidades hacia abajo.
  13+ 88F1              ;
  14+ 88F1              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88F1              ;
  16+ 88F1              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88F1              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88F1              ;
  19+ 88F1              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88F1              ;           _ la bala.
  21+ 88F1              ;
  22+ 88F1              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88F1              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88F1              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88F1              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88F1              ;           _ en el momento de generarse la bala)).
  27+ 88F1
  28+ 88F1              Genera_disparo
  29+ 88F1
  30+ 88F1              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88F1              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88F1              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88F1              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88F1              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 88F1              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 88F1              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88F1
  38+ 88F1              ; Exclusiones:
  39+ 88F1
  40+ 88F1 3A D2 85         ld a,(Columnas)
  41+ 88F4 47               ld b,a
  42+ 88F5 3A 9C 85         ld a,(Columns)
  43+ 88F8 B8               cp b
  44+ 88F9 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88FA
  46+ 88FA              ; ----- ----- -----
  47+ 88FA
  48+ 88FA 3A C9 85         ld a,(Ctrl_0)
  49+ 88FD CB 77            bit 6,a
  50+ 88FF 20 08            jr nz,16F
  51+ 8901
  52+ 8901 3A A2 85         ld a,(Coordenada_y)
  53+ 8904 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8906 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8907 18 11            jr 14F
  56+ 8909
  57+ 8909              ; ----- ----- -----
  58+ 8909
  59+ 8909              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 8909
  61+ 8909 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 890C CD B8 87         call Extrae_address
  63+ 890F 24               inc h
  64+ 8910 25               dec h
  65+ 8911 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 8913
  67+ 8913 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 8916 A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 8917 ED 52            sbc hl,de
  70+ 8919 D0               ret nc
  71+ 891A
  72+ 891A              ; ----- ----- -----
  73+ 891A
  74+ 891A 21 00 80     14 ld hl,Indice_disparo
  75+ 891D 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 8920 4F               ld c,a
  77+ 8921 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 8923              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 8923              ;                                            ""        ""       "f9", B="1"
  80+ 8923              ;                                            ""        ""       "fb", B="2"
  81+ 8923              ;                                            ""        ""       "fb", B="3"
  82+ 8923 A7               and a
  83+ 8924 28 10            jr z,1F
  84+ 8926 E6 01            and 1
  85+ 8928 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 8929
  87+ 8929 79               ld a,c
  88+ 892A 16 F9            ld d,$f9
  89+ 892C 23           2 inc hl
  90+ 892D 23               inc hl
  91+ 892E 04               inc b
  92+ 892F BA               cp d
  93+ 8930 28 04            jr z,1F
  94+ 8932 14               inc d
  95+ 8933 14               inc d
  96+ 8934 18 F6            jr 2B
  97+ 8936
  98+ 8936 CD B8 87     1 call Extrae_address
  99+ 8939 E5               push hl
 100+ 893A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 893C DD 21 4A 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 8940
 103+ 8940              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 8940              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 8940
 106+ 8940 3A AF 85     	ld a,(Cuad_objeto)
 107+ 8943 FE 02            cp 2
 108+ 8945 38 66            jr c,3F
 109+ 8947 28 64            jr z,3F
 110+ 8949
 111+ 8949              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 8949
 113+ 8949 E6 01            and 1
 114+ 894B 28 30            jr z,4F
 115+ 894D
 116+ 894D              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 894D              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 894D              ;
 119+ 894D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 894D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 894D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 894D
 123+ 894D 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 8950
 125+ 8950              ;   Amadeus o entidad ???.
 126+ 8950
 127+ 8950 3A C9 85         ld a,(Ctrl_0)
 128+ 8953 CB 77            bit 6,a
 129+ 8955 28 0A            jr z,8F
 130+ 8957
 131+ 8957              ; 	Dispara Amadeus.
 132+ 8957
 133+ 8957 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 8959 CD C6 8F         call PreviousScan
 135+ 895C CD C6 8F         call PreviousScan
 136+ 895F
 137+ 895F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 895F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 895F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 895F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 895F
 142+ 895F 18 11            jr 10F
 143+ 8961
 144+ 8961              ; 	Dispara Entidad.
 145+ 8961
 146+ 8961 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 147+ 8964              ;                                                   ; Impacto B="$80", no hay impacto.
 148+ 8964
 149+ 8964              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 8964              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 8964
 152+ 8964 C5               push bc
 153+ 8965 06 10            ld b,16
 154+ 8967 CD B7 8F     9 call NextScan
 155+ 896A 10 FB            djnz 9B
 156+ 896C C1               pop bc
 157+ 896D CD D7 89         call Ajusta_disparo_parte_izquierda
 158+ 8970 18 06            jr 17F
 159+ 8972
 160+ 8972              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 161+ 8972              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 162+ 8972              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 163+ 8972              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 164+ 8972
 165+ 8972 CD D7 89     10 call Ajusta_disparo_parte_izquierda
 166+ 8975 CD 4C 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 8978              ;                                                      ; _al generar el disparo.
 168+ 8978
 169+ 8978              ; 	LLegados a este punto tendremos:
 170+ 8978              ;
 171+ 8978              ;       Puntero_objeto_disparo en IY.
 172+ 8978              ;       Rutinas_de_impresion en IX.
 173+ 8978              ;       Puntero_de_impresion en HL.
 174+ 8978              ;       Impacto/Dirección en BC.
 175+ 8978
 176+ 8978 CD DF 89     17 call Almacena_disparo
 177+ 897B 18 52            jr 6F                                             ; RET.
 178+ 897D
 179+ 897D              ; 	Estamos en el 4º cuadrante de pantalla.
 180+ 897D              ; 	4º CUAD. ----- ----- ----- ----- -----
 181+ 897D              ;
 182+ 897D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 183+ 897D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 184+ 897D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 185+ 897D
 186+ 897D 2A 9D 85     4 ld hl,(Posicion_actual)
 187+ 8980
 188+ 8980              ;   Amadeus o entidad ???.
 189+ 8980
 190+ 8980 3A C9 85         ld a,(Ctrl_0)
 191+ 8983 CB 77            bit 6,a
 192+ 8985 28 0A            jr z,11F
 193+ 8987
 194+ 8987              ; 	Dispara Amadeus.
 195+ 8987
 196+ 8987 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 197+ 8989 CD C6 8F         call PreviousScan
 198+ 898C CD C6 8F         call PreviousScan
 199+ 898F
 200+ 898F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 201+ 898F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 202+ 898F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 203+ 898F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 204+ 898F
 205+ 898F 18 11            jr 13F
 206+ 8991
 207+ 8991              ; 	Dispara Entidad.
 208+ 8991
 209+ 8991 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 210+ 8994              ;                                                     ; Impacto B="$80", no hay impacto.
 211+ 8994
 212+ 8994              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 213+ 8994              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 214+ 8994
 215+ 8994 C5               push bc
 216+ 8995 06 10            ld b,16
 217+ 8997 CD B7 8F     12 call NextScan
 218+ 899A 10 FB            djnz 12B
 219+ 899C C1               pop bc
 220+ 899D
 221+ 899D CD D0 89         call Ajusta_disparo_parte_derecha
 222+ 89A0 18 06            jr 18F
 223+ 89A2
 224+ 89A2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 89A2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 89A2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 89A2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 89A2
 229+ 89A2 CD D0 89     13 call Ajusta_disparo_parte_derecha
 230+ 89A5 CD 4C 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 231+ 89A8              ;                                                       ; _al generar el disparo.
 232+ 89A8
 233+ 89A8              ; LLegados a este punto tendremos:
 234+ 89A8              ;
 235+ 89A8              ;       Puntero_objeto_disparo en IY.
 236+ 89A8              ;       Rutinas_de_impresion en IX.
 237+ 89A8              ;       Puntero_de_impresion en HL.
 238+ 89A8              ;       Impacto/Dirección en BC.
 239+ 89A8
 240+ 89A8 CD DF 89     18 call Almacena_disparo
 241+ 89AB 18 22            jr 6F                                               ; RET.
 242+ 89AD
 243+ 89AD              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 244+ 89AD
 245+ 89AD 28 11        3 jr z,5F
 246+ 89AF
 247+ 89AF              ; 	1er CUAD. ----- ----- ----- ----- -----
 248+ 89AF              ;
 249+ 89AF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 250+ 89AF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 251+ 89AF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 252+ 89AF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 253+ 89AF
 254+ 89AF              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 255+ 89AF              ;	   ""        ""       "f9", B="1"
 256+ 89AF              ;	   ""        ""       "fb", B="2"
 257+ 89AF              ; 	   ""        ""       "fb", B="3"
 258+ 89AF
 259+ 89AF 2A 9D 85     	ld hl,(Posicion_actual)
 260+ 89B2 CD B7 8F     	call NextScan
 261+ 89B5
 262+ 89B5              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 263+ 89B5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 264+ 89B5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 265+ 89B5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 266+ 89B5
 267+ 89B5 CD D7 89         call Ajusta_disparo_parte_izquierda
 268+ 89B8
 269+ 89B8              ; 	No se produce impacto. B="$80"
 270+ 89B8              ; 	Dirección del proyectil hacia abajo. C="$80"
 271+ 89B8
 272+ 89B8 01 80 80         ld bc,$8080
 273+ 89BB
 274+ 89BB              ; 	LLegados a este punto tendremos:
 275+ 89BB              ;
 276+ 89BB              ;       Puntero_objeto_disparo en IY.
 277+ 89BB              ;       Rutinas_de_impresion en IX.
 278+ 89BB              ;       Puntero_de_impresion en HL.
 279+ 89BB              ;       Impacto/Dirección en BC.
 280+ 89BB
 281+ 89BB CD DF 89         call Almacena_disparo
 282+ 89BE 18 0F            jr 6F                                           ; RET.
 283+ 89C0
 284+ 89C0              ; 	Estamos en el 2º cuadrante de pantalla.
 285+ 89C0              ; 	2º CUAD. ----- ----- ----- ----- -----
 286+ 89C0              ;
 287+ 89C0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 288+ 89C0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 289+ 89C0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 290+ 89C0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 291+ 89C0
 292+ 89C0 2A 9D 85     5 ld hl,(Posicion_actual)
 293+ 89C3 CD B7 8F     	call NextScan
 294+ 89C6
 295+ 89C6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 296+ 89C6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 297+ 89C6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 298+ 89C6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 299+ 89C6
 300+ 89C6 CD D0 89         call Ajusta_disparo_parte_derecha
 301+ 89C9
 302+ 89C9              ; 	No se produce impacto. B="$80"
 303+ 89C9              ; 	Dirección del proyectil hacia abajo. C="80"
 304+ 89C9
 305+ 89C9 01 80 80     15 ld bc,$8080
 306+ 89CC
 307+ 89CC              ; 	LLegados a este punto tendremos:
 308+ 89CC              ;
 309+ 89CC              ;       Puntero_objeto_disparo en IY.
 310+ 89CC              ;       Rutinas_de_impresion en IX.
 311+ 89CC              ;       Puntero_de_impresion en HL.
 312+ 89CC              ;       Impacto/Dirección en BC.
 313+ 89CC
 314+ 89CC CD DF 89         call Almacena_disparo
 315+ 89CF
 316+ 89CF C9           6 ret
 317+ 89D0
 318+ 89D0              ; ----------------------------------------------------------------
 319+ 89D0              ;
 320+ 89D0              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 321+ 89D0              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 322+ 89D0              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 323+ 89D0
 324+ 89D0 78           Ajusta_disparo_parte_derecha ld a,b
 325+ 89D1 FE 02            cp 2
 326+ 89D3 38 01            jr c,1F
 327+ 89D5 23               inc hl
 328+ 89D6 C9           1 ret
 329+ 89D7
 330+ 89D7 78           Ajusta_disparo_parte_izquierda ld a,b
 331+ 89D8 FE 01        	cp 1
 332+ 89DA 20 01        	jr nz,1F
 333+ 89DC 2B           	dec hl
 334+ 89DD 2B           1 dec hl
 335+ 89DE C9               ret
 336+ 89DF
 337+ 89DF              ; ----------------------------------------------------------------
 338+ 89DF              ;
 339+ 89DF              ;   25/02/23
 340+ 89DF              ;
 341+ 89DF              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 342+ 89DF              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 343+ 89DF              ;
 344+ 89DF              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 345+ 89DF              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 346+ 89DF
 347+ 89DF              Almacena_disparo
 348+ 89DF
 349+ 89DF E5               push hl  										; HL contiene el puntero de impresión.
 350+ 89E0 F1               pop af
 351+ 89E1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 89E2
 353+ 89E2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 89E3 E6 01            and 1
 355+ 89E5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 89E7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 89E7              ; 	Dispara AMADEUS.
 358+ 89E7
 359+ 89E7              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 89E7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 89E7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 89E7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 89E7
 364+ 89E7 C5               push bc
 365+ 89E8 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 89EB 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 89EE A7               and a
 368+ 89EF ED 42            sbc hl,bc
 369+ 89F1 CC 81 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 89F4 C1               pop bc
 371+ 89F5 28 54            jr z,4F
 372+ 89F7
 373+ 89F7 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 89FA 23               inc hl
 375+ 89FB 23               inc hl
 376+ 89FC 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 89FF              ;                                                   ; _ Disparo_(+1).
 378+ 89FF 18 18            jr 2F
 379+ 8A01
 380+ 8A01              ; Dispara una entidad.
 381+ 8A01
 382+ 8A01 C5           1 push bc
 383+ 8A02 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 8A05 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 8A08 A7               and a
 386+ 8A09 ED 42            sbc hl,bc
 387+ 8A0B CC 7A 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 8A0E C1               pop bc
 389+ 8A0F 28 3A            jr z,4F
 390+ 8A11
 391+ 8A11 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 8A14 23               inc hl
 393+ 8A15 23               inc hl
 394+ 8A16 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 8A19              ;                                                   ; _ Disparo_(+1).
 396+ 8A19 CD B8 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 8A1C              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 8A1C              ;
 399+ 8A1C              ;                                                     Puntero_objeto_disparo en IY.
 400+ 8A1C              ;                                                     Rutinas_de_impresion en IX.
 401+ 8A1C              ;                                                     Puntero_de_impresion en HL.
 402+ 8A1C              ;                                                     Impacto/Dirección en BC.
 403+ 8A1C
 404+ 8A1C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 8A1D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 8A1E 23               inc hl                                          ; _ al siguiente.
 407+ 8A1F A7               and a
 408+ 8A20 20 C0            jr nz,3B
 409+ 8A22
 410+ 8A22 08               ex af,af
 411+ 8A23 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 8A27 F9               ld sp,hl
 413+ 8A28
 414+ 8A28 DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A2A F5               push af                                         ; Puntero de impresión.
 416+ 8A2B FD E5            push iy                                         ; Puntero objeto.
 417+ 8A2D C5               push bc                                         ; Control.
 418+ 8A2E
 419+ 8A2E ED 7B DF 85      ld sp,(Stack)
 420+ 8A32
 421+ 8A32              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A32
 423+ 8A32 21 D6 85     	ld hl,Ctrl_1
 424+ 8A35 CB C6        	set 0,(hl)
 425+ 8A37
 426+ 8A37 DD E5        	push ix
 427+ 8A39 E1               pop hl
 428+ 8A3A F5               push af
 429+ 8A3B DD E1            pop ix
 430+ 8A3D
 431+ 8A3D CD A0 7F     	call Guarda_foto_registros
 432+ 8A40
 433+ 8A40 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A43 CB 86        	res 0,(hl)
 435+ 8A45
 436+ 8A45              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A45              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A45
 439+ 8A45 CD 81 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A48 CD 7A 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A4B
 442+ 8A4B C9           4 ret
 443+ 8A4C
 444+ 8A4C              ; ----------------------------------------------------------------
 445+ 8A4C              ;
 446+ 8A4C              ;   4/3/23
 447+ 8A4C              ;
 448+ 8A4C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A4C              ;   _ al generarse el disparo.
 450+ 8A4C              ;
 451+ 8A4C              ;       "$80" ..... No se produce colisión.
 452+ 8A4C              ;       "$81" ..... Se produce colisión.
 453+ 8A4C
 454+ 8A4C              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A4C              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A4C
 457+ 8A4C
 458+ 8A4C FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A4E E5               push hl                                        ; Puntero de impresión.
 460+ 8A4F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A51 CD 6D 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A54
 463+ 8A54 7B               ld a,e
 464+ 8A55 E6 01            and 1
 465+ 8A57 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 466+ 8A59
 467+ 8A59 E1               pop hl
 468+ 8A5A E5               push hl
 469+ 8A5B CD B7 8F         call NextScan
 470+ 8A5E
 471+ 8A5E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 472+ 8A5F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 473+ 8A61 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 474+ 8A63              ;                                                  ; _ 2º scanline si esto es así.
 475+ 8A63 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 476+ 8A65 CD 6D 8A         call Bucle_2
 477+ 8A68
 478+ 8A68 43           2 ld b,e
 479+ 8A69 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 480+ 8A6A FD E1            pop iy
 481+ 8A6C C9               ret
 482+ 8A6D
 483+ 8A6D               ; ---------- ----------
 484+ 8A6D
 485+ 8A6D 06 02        Bucle_2 ld b,2
 486+ 8A6F FD 7E 00     2 ld a,(iy)
 487+ 8A72 A6               and (hl)
 488+ 8A73 28 02            jr z,1F
 489+ 8A75 1E 81            ld e,$81
 490+ 8A77 23           1 inc hl
 491+ 8A78 FD 23            inc iy
 492+ 8A7A 10 F3            djnz 2B
 493+ 8A7C C9               ret
 494+ 8A7D
 495+ 8A7D              ; -------------------------------------------------------------------------------------------------------------
 496+ 8A7D              ;
 497+ 8A7D              ;   11/04/23
 498+ 8A7D              ;
 499+ 8A7D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 500+ 8A7D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 501+ 8A7D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 502+ 8A7D              ;
 503+ 8A7D              ;   MODIFICA: HL,DE,BC,A y AF´.
 504+ 8A7D
 505+ 8A7D              Compara_coordenadas_X
 506+ 8A7D
 507+ 8A7D              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 508+ 8A7D              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 509+ 8A7D
 510+ 8A7D              ; Preparamos registros:
 511+ 8A7D
 512+ 8A7D 21 A1 85         ld hl,Filas+6
 513+ 8A80 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 514+ 8A81 23               inc hl
 515+ 8A82 23               inc hl
 516+ 8A83 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 517+ 8A84 43               ld b,e
 518+ 8A85 21 AF 85         ld hl,Filas+20
 519+ 8A88 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 520+ 8A89 21 F2 85         ld hl,Coordenadas_X_Entidad
 521+ 8A8C CD 8A 8C         call Guarda_coordenadas_X
 522+ 8A8F
 523+ 8A8F              ; Preparamos registros:
 524+ 8A8F
 525+ 8A8F 21 7A 84         ld hl,Amadeus_db+6
 526+ 8A92 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 527+ 8A93 23               inc hl
 528+ 8A94 23               inc hl
 529+ 8A95 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 530+ 8A96 7B               ld a,e
 531+ 8A97 08               ex af,af'
 532+ 8A98 21 88 84         ld hl,Amadeus_db+20
 533+ 8A9B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 534+ 8A9C 21 EF 85         ld hl,Coordenadas_X_Amadeus
 535+ 8A9F CD 8A 8C         call Guarda_coordenadas_X
 536+ 8AA2
 537+ 8AA2              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 538+ 8AA2              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 539+ 8AA2
 540+ 8AA2 04               inc b
 541+ 8AA3 05               dec b
 542+ 8AA4 28 04            jr z,1F
 543+ 8AA6 06 03            ld b,3
 544+ 8AA8 18 02            jr 2F
 545+ 8AAA 06 02        1 ld b,2
 546+ 8AAC 08           2 ex af,af'
 547+ 8AAD 3C               inc a
 548+ 8AAE 3D               dec a
 549+ 8AAF 28 04            jr z,5F
 550+ 8AB1 0E 03            ld c,3
 551+ 8AB3 18 02            jr 6F
 552+ 8AB5 0E 02        5 ld c,2
 553+ 8AB7 79           6 ld a,c
 554+ 8AB8 08               ex af,af'
 555+ 8AB9 11 F2 85         ld de,Coordenadas_X_Entidad
 556+ 8ABC 1A           4 ld a,(de)
 557+ 8ABD 21 EF 85         ld hl,Coordenadas_X_Amadeus
 558+ 8AC0 BE           3 cp (hl)
 559+ 8AC1 28 0E            jr z,7F
 560+ 8AC3 23               inc hl
 561+ 8AC4 0D               dec c
 562+ 8AC5 20 F9            jr nz,3B
 563+ 8AC7 13               inc de
 564+ 8AC8 08               ex af,af'
 565+ 8AC9 4F               ld c,a
 566+ 8ACA 08               ex af,af'
 567+ 8ACB 10 EF            djnz 4B
 568+ 8ACD
 569+ 8ACD              ; Limpiamos los almacenes de coordenadas y salimos.
 570+ 8ACD
 571+ 8ACD CD C6 8C     8 call Limpia_Coordenadas_X
 572+ 8AD0 C9               ret
 573+ 8AD1
 574+ 8AD1 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 575+ 8AD3 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 576+ 8AD6 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 577+ 8AD9 CB D6            set 2,(hl)
 578+ 8ADB 18 F0            jr 8B
 579+ 8ADD
 580+ 8ADD              ; -----------------------------------------------------------------------
 581+ 8ADD              ;
 582+ 8ADD              ;   17/04/23
 583+ 8ADD              ;
 584+ 8ADD
 585+ 8ADD              Detecta_colision_nave_entidad
 586+ 8ADD
 587+ 8ADD              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 588+ 8ADD
 589+ 8ADD 2A 9D 85         ld hl,(Posicion_actual)
 590+ 8AE0 CD 1C 8F         call Calcula_puntero_de_impresion
 591+ 8AE3
 592+ 8AE3              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 593+ 8AE3              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 594+ 8AE3
 595+ 8AE3 DD E5            push ix
 596+ 8AE5 E1               pop hl
 597+ 8AE6 E5               push hl
 598+ 8AE7
 599+ 8AE7              ; ----- ----- -----
 600+ 8AE7 1E 00            ld e,0                                         ; Indica impacto.
 601+ 8AE9 06 0A            ld b,10
 602+ 8AEB CD 1B 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 603+ 8AEE 7B               ld a,e
 604+ 8AEF FE 05            cp 5
 605+ 8AF1 38 0E            jr c,3F
 606+ 8AF3
 607+ 8AF3              ; LLegados a este punto:
 608+ 8AF3              ;
 609+ 8AF3              ;   HAY COLISIÓN !!!!!.
 610+ 8AF3              ;
 611+ 8AF3              ;   .db (Impacto) de Amadeus a "1".
 612+ 8AF3              ;   SET el bit3 de (Impacto2).
 613+ 8AF3              ;
 614+ 8AF3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 615+ 8AF3
 616+ 8AF3 21 8D 84         ld hl,Amadeus_db+25
 617+ 8AF6 36 01            ld (hl),1
 618+ 8AF8 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 619+ 8AFB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 620+ 8AFD CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 621+ 8AFF 18 18            jr 1F
 622+ 8B01
 623+ 8B01              ; -----
 624+ 8B01
 625+ 8B01 E1           3 pop hl
 626+ 8B02 CD B7 8F         call NextScan
 627+ 8B05 E5               push hl
 628+ 8B06 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 629+ 8B07 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 630+ 8B09 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 631+ 8B0B 30 0C            jr nc,1F
 632+ 8B0D              ;                                                  ; _ 2º scanline si esto es así.
 633+ 8B0D 10 DC            djnz 2B
 634+ 8B0F
 635+ 8B0F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 636+ 8B0F
 637+ 8B0F              ; LLegados a este punto:
 638+ 8B0F              ;
 639+ 8B0F              ;   NO HAY COLISIÓN !!!!!.
 640+ 8B0F              ;
 641+ 8B0F              ;   .db (Impacto) de Amadeus a "0".
 642+ 8B0F              ;   RES el bit2 de (Impacto2).
 643+ 8B0F              ;
 644+ 8B0F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 645+ 8B0F              ;   Lo colocamos a "0".
 646+ 8B0F
 647+ 8B0F 21 EC 85         ld hl,Impacto2
 648+ 8B12 CB 96            res 2,(hl)
 649+ 8B14 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 650+ 8B17 36 00            ld (hl),0
 651+ 8B19
 652+ 8B19 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 653+ 8B1A C9               ret
 654+ 8B1B
 655+ 8B1B               ; ---------- ----------
 656+ 8B1B
 657+ 8B1B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 658+ 8B1C 3A 9C 85         ld a,(Columns)
 659+ 8B1F 47               ld b,a
 660+ 8B20 FD 7E 00     2 ld a,(iy)
 661+ 8B23 BE               cp (hl)
 662+ 8B24 28 01            jr z,1F
 663+ 8B26
 664+ 8B26 1C               inc e
 665+ 8B27
 666+ 8B27 23           1 inc hl
 667+ 8B28 FD 23            inc iy
 668+ 8B2A 10 F4            djnz 2B
 669+ 8B2C C1               pop bc
 670+ 8B2D C9               ret
 671+ 8B2E
 672+ 8B2E              ; -------------------------------------------------------------------------------------------------------------
 673+ 8B2E              ;
 674+ 8B2E              ;   13/03/23
 675+ 8B2E              ;
 676+ 8B2E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 677+ 8B2E              ;
 678+ 8B2E              ;   DESTRUYE: HL,BC,DE y A.
 679+ 8B2E
 680+ 8B2E 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 681+ 8B31 7E               ld a,(hl)
 682+ 8B32 A7               and a
 683+ 8B33 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 684+ 8B34
 685+ 8B34 44               ld b,h
 686+ 8B35 4D               ld c,l
 687+ 8B36 2A E5 85         ld hl,(Stack_snapshot_disparos)
 688+ 8B39 E5               push hl
 689+ 8B3A A7               and a
 690+ 8B3B ED 42            sbc hl,bc
 691+ 8B3D E5               push hl
 692+ 8B3E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 693+ 8B3F
 694+ 8B3F E1               pop hl
 695+ 8B40 54               ld d,h
 696+ 8B41 5D               ld e,l
 697+ 8B42 1B               dec de
 698+ 8B43 ED B8            lddr                                                ; Limpiamos.
 699+ 8B45
 700+ 8B45 21 60 70         ld hl,Album_de_fotos_disparos
 701+ 8B48 22 E5 85         ld (Stack_snapshot_disparos),hl
 702+ 8B4B
 703+ 8B4B C9               ret
 704+ 8B4C
 705+ 8B4C              ; -------------------------------------------------------------------------------------------------------------
 706+ 8B4C              ;
 707+ 8B4C              ;   28/03/23
 708+ 8B4C              ;
 709+ 8B4C
 710+ 8B4C 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 711+ 8B4F 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 712+ 8B52
 713+ 8B52 CD B8 87     2 call Extrae_address
 714+ 8B55 7E               ld a,(hl)
 715+ 8B56 A7               and a
 716+ 8B57 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 717+ 8B59
 718+ 8B59              ; ----- ----- ----- ----- ----- -----
 719+ 8B59
 720+ 8B59 C5               push bc
 721+ 8B5A CD 05 8C         call foto_disparo_a_borrar
 722+ 8B5D
 723+ 8B5D              ; Existe colisión con este disparo???
 724+ 8B5D
 725+ 8B5D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 726+ 8B5E 7E               ld a,(hl)
 727+ 8B5F 2B               dec hl
 728+ 8B60 E6 01            and 1
 729+ 8B62 28 0C            jr z,9F
 730+ 8B64
 731+ 8B64              ; Elimino el disparo de la base de datos.
 732+ 8B64
 733+ 8B64 E5               push hl
 734+ 8B65 CD 7F 8C         call Elimina_disparo_de_base_de_datos
 735+ 8B68 21 EC 85         ld hl,Impacto2
 736+ 8B6B CB C6            set 0,(hl)
 737+ 8B6D E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 738+ 8B6E 18 06            jr 11F
 739+ 8B70
 740+ 8B70 CD 2E 8C     9 call Mueve_disparo
 741+ 8B73 CD 05 8C         call foto_disparo_a_borrar
 742+ 8B76
 743+ 8B76 C1           11 pop bc
 744+ 8B77 18 04            jr 7F
 745+ 8B79
 746+ 8B79              ; ----- ----- ----- ----- ----- -----
 747+ 8B79
 748+ 8B79 ED 42        1 sbc hl,bc
 749+ 8B7B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 750+ 8B7D
 751+ 8B7D 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 752+ 8B80 23               inc hl
 753+ 8B81 23               inc hl
 754+ 8B82 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 755+ 8B85 18 CB            jr 2B
 756+ 8B87
 757+ 8B87 CD 81 87     3 call Inicia_Puntero_Disparo_Amadeus
 758+ 8B8A 01 66 84         ld bc,Disparo_11
 759+ 8B8D 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 760+ 8B90
 761+ 8B90 CD B8 87     5 call Extrae_address
 762+ 8B93 7E               ld a,(hl)
 763+ 8B94 A7               and a
 764+ 8B95 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 765+ 8B97
 766+ 8B97              ; ----- ----- ----- ----- ----- -----
 767+ 8B97
 768+ 8B97 C5               push bc
 769+ 8B98 CD 05 8C         call foto_disparo_a_borrar
 770+ 8B9B
 771+ 8B9B              ; Existe colisión con este disparo???
 772+ 8B9B
 773+ 8B9B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 774+ 8B9C 7E               ld a,(hl)
 775+ 8B9D 2B               dec hl
 776+ 8B9E E6 01            and 1
 777+ 8BA0 28 48            jr z,10F
 778+ 8BA2
 779+ 8BA2              ; La colisión se produce con Amadeus???
 780+ 8BA2              ; Amadeus siempre tiene (Coordenada_y)="$16".
 781+ 8BA2
 782+ 8BA2 E5               push hl
 783+ 8BA3
 784+ 8BA3 06 04            ld b,4
 785+ 8BA5 23           16 inc hl
 786+ 8BA6 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 787+ 8BA8 CD B8 87         call Extrae_address
 788+ 8BAB CD CE 95         call Genera_coordenadas_disparo
 789+ 8BAE
 790+ 8BAE 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 791+ 8BAF FE 16            cp $16
 792+ 8BB1 38 22            jr c,15F
 793+ 8BB3
 794+ 8BB3              ; (Colisiones en filas 16 y 17).
 795+ 8BB3
 796+ 8BB3 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 797+ 8BB4
 798+ 8BB4              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 799+ 8BB4
 800+ 8BB4 21 7A 84         ld hl,Amadeus_db+6
 801+ 8BB7 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 802+ 8BB8 23               inc hl
 803+ 8BB9 23               inc hl
 804+ 8BBA 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 805+ 8BBB 21 88 84         ld hl,Amadeus_db+20
 806+ 8BBE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 807+ 8BBF 21 EF 85         ld hl,Coordenadas_X_Amadeus
 808+ 8BC2 CD 8A 8C         call Guarda_coordenadas_X
 809+ 8BC5
 810+ 8BC5 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 811+ 8BC6
 812+ 8BC6              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 813+ 8BC6
 814+ 8BC6 06 03            ld b,3
 815+ 8BC8 21 EF 85         ld hl,Coordenadas_X_Amadeus
 816+ 8BCB 7E           18 ld a,(hl)
 817+ 8BCC BA               cp d
 818+ 8BCD 20 03            jr nz,17F
 819+ 8BCF
 820+ 8BCF              ; Colisión Amadeus !!!!!!!!!!
 821+ 8BCF
 822+ 8BCF E1               pop hl
 823+ 8BD0 18 09            jr 14F
 824+ 8BD2
 825+ 8BD2 23           17 inc hl
 826+ 8BD3 10 F6            djnz 18B
 827+ 8BD5
 828+ 8BD5              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 829+ 8BD5              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 830+ 8BD5
 831+ 8BD5 E1           15 pop hl
 832+ 8BD6 23               inc hl
 833+ 8BD7 35               dec (hl)
 834+ 8BD8 2B               dec hl
 835+ 8BD9 18 0F            jr 10F
 836+ 8BDB
 837+ 8BDB              ; -----------------------debug
 838+ 8BDB
 839+ 8BDB              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 840+ 8BDB              ; _ almacén de coordenadas_X de Amadeus.
 841+ 8BDB
 842+ 8BDB E5           14 push hl
 843+ 8BDC CD 7F 8C         call Elimina_disparo_de_base_de_datos
 844+ 8BDF 21 EC 85         ld hl,Impacto2
 845+ 8BE2 CB CE            set 1,(hl)
 846+ 8BE4 CD C6 8C         call Limpia_Coordenadas_X
 847+ 8BE7
 848+ 8BE7 E1               pop hl
 849+ 8BE8 18 06            jr 12F
 850+ 8BEA
 851+ 8BEA CD 2E 8C     10 call Mueve_disparo
 852+ 8BED CD 05 8C         call foto_disparo_a_borrar
 853+ 8BF0 C1           12 pop bc
 854+ 8BF1
 855+ 8BF1 18 04            jr 8F
 856+ 8BF3
 857+ 8BF3              ; ----- ----- ----- ----- ----- -----
 858+ 8BF3
 859+ 8BF3 ED 42        4 sbc hl,bc
 860+ 8BF5 28 0A            jr z,6F
 861+ 8BF7
 862+ 8BF7 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 863+ 8BFA 23               inc hl
 864+ 8BFB 23               inc hl
 865+ 8BFC 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 866+ 8BFF 18 8F            jr 5B
 867+ 8C01
 868+ 8C01 CD 7A 87     6 call Inicia_Puntero_Disparo_Entidades
 869+ 8C04 C9               ret
 870+ 8C05
 871+ 8C05              ; ------------------------------------------------------------------
 872+ 8C05
 873+ 8C05              foto_disparo_a_borrar
 874+ 8C05
 875+ 8C05 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 876+ 8C06 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 877+ 8C07 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 878+ 8C08
 879+ 8C08 E5               push hl
 880+ 8C09 23               inc hl
 881+ 8C0A 23               inc hl
 882+ 8C0B ED 73 DF 85      ld (Stack),sp
 883+ 8C0F F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 884+ 8C10 FD E1            pop iy
 885+ 8C12 DD E1            pop ix
 886+ 8C14 E1               pop hl
 887+ 8C15 ED 7B DF 85      ld sp,(Stack)
 888+ 8C19 3A D6 85         ld a,(Ctrl_1)
 889+ 8C1C CB C7            set 0,a
 890+ 8C1E 32 D6 85         ld (Ctrl_1),a
 891+ 8C21 CD A0 7F         call Guarda_foto_registros
 892+ 8C24 3A D6 85         ld a,(Ctrl_1)
 893+ 8C27 CB 87            res 0,a
 894+ 8C29 32 D6 85         ld (Ctrl_1),a
 895+ 8C2C E1               pop hl
 896+ 8C2D C9               ret
 897+ 8C2E
 898+ 8C2E E5           Mueve_disparo push hl
 899+ 8C2F 7E               ld a,(hl)
 900+ 8C30 06 04            ld b,4
 901+ 8C32 23           1 inc hl
 902+ 8C33 10 FD            djnz 1B
 903+ 8C35
 904+ 8C35              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 905+ 8C35
 906+ 8C35 CD B8 87         call Extrae_address
 907+ 8C38
 908+ 8C38 E6 01            and 1
 909+ 8C3A 28 2A            jr z,2F
 910+ 8C3C
 911+ 8C3C              ; Disparo hacia arriba, (Amadeus).
 912+ 8C3C
 913+ 8C3C              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 914+ 8C3C              ; _ de la dificultad.
 915+ 8C3C
 916+ 8C3C CD C6 8F         call PreviousScan
 917+ 8C3F CD C6 8F         call PreviousScan
 918+ 8C42 CD C6 8F         call PreviousScan
 919+ 8C45
 920+ 8C45              ; Detecta si el disparo de Amadeus sale de pantalla:
 921+ 8C45
 922+ 8C45 7C               ld a,h
 923+ 8C46 FE 40            cp $40
 924+ 8C48 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 925+ 8C4A
 926+ 8C4A              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 927+ 8C4A
 928+ 8C4A EB               ex de,hl
 929+ 8C4B 06 04            ld b,4
 930+ 8C4D 2B           6 dec hl
 931+ 8C4E 10 FD            djnz 6B
 932+ 8C50
 933+ 8C50 CD 7F 8C         call Elimina_disparo_de_base_de_datos
 934+ 8C53
 935+ 8C53 18 0C            jr 4F
 936+ 8C55
 937+ 8C55              ; Se ha desplazado la bala, compruebo colisión.
 938+ 8C55
 939+ 8C55 D5           3 push de
 940+ 8C56 C5               push bc
 941+ 8C57 CD 4C 8A         call Comprueba_Colision
 942+ 8C5A 78               ld a,b
 943+ 8C5B C1               pop bc
 944+ 8C5C D1               pop de
 945+ 8C5D
 946+ 8C5D EB               ex de,hl
 947+ 8C5E
 948+ 8C5E 73               ld (hl),e
 949+ 8C5F 23               inc hl
 950+ 8C60 72               ld (hl),d
 951+ 8C61
 952+ 8C61 E1           4 pop hl
 953+ 8C62 23               inc hl
 954+ 8C63 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 955+ 8C64 2B               dec hl
 956+ 8C65 C9               ret
 957+ 8C66
 958+ 8C66              ; Disparo hacia abajo, (Entidad).
 959+ 8C66
 960+ 8C66              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 961+ 8C66              ; _ de la dificultad.
 962+ 8C66
 963+ 8C66 CD B7 8F     2 call NextScan
 964+ 8C69 CD B7 8F         call NextScan
 965+ 8C6C CD B7 8F         call NextScan
 966+ 8C6F
 967+ 8C6F              ; Detecta si el disparo de la entidad sale de la pantalla.
 968+ 8C6F
 969+ 8C6F 7C               ld a,h
 970+ 8C70 FE 58            cp $58
 971+ 8C72 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 972+ 8C74
 973+ 8C74 EB               ex de,hl
 974+ 8C75 06 04            ld b,4
 975+ 8C77 2B           5 dec hl
 976+ 8C78 10 FD            djnz 5B
 977+ 8C7A
 978+ 8C7A CD 7F 8C         call Elimina_disparo_de_base_de_datos
 979+ 8C7D
 980+ 8C7D 18 E2            jr 4B
 981+ 8C7F
 982+ 8C7F              ; HL apunta al primer byte de la base de datos del disparo.
 983+ 8C7F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 984+ 8C82 AF               xor a
 985+ 8C83 77               ld (hl),a
 986+ 8C84 54               ld d,h
 987+ 8C85 5D               ld e,l
 988+ 8C86 13               inc de
 989+ 8C87 ED B0            ldir
 990+ 8C89 C9               ret
 991+ 8C8A
 992+ 8C8A              ; -----------------------------------------------------------------
 993+ 8C8A              ;
 994+ 8C8A              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 995+ 8C8A              ;
 996+ 8C8A              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 997+ 8C8A              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 998+ 8C8A              ;
 999+ 8C8A              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1000+ 8C8A              ;
1001+ 8C8A              ;   INPUTS:
1002+ 8C8A              ;
1003+ 8C8A              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1004+ 8C8A              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1005+ 8C8A              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1006+ 8C8A
1007+ 8C8A              ;   MODIFICA: A, HL, DE y C
1008+ 8C8A
1009+ 8C8A 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1010+ 8C8B 79               ld a,c
1011+ 8C8C E6 01            and 1
1012+ 8C8E 20 03            jr nz,1F
1013+ 8C90 14               inc d
1014+ 8C91 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1015+ 8C93
1016+ 8C93              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1017+ 8C93              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1018+ 8C93
1019+ 8C93 15           1 dec d
1020+ 8C94 23           2 inc hl
1021+ 8C95 72               ld (hl),d
1022+ 8C96
1023+ 8C96 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1024+ 8C97 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1025+ 8C98 C8               ret z
1026+ 8C99
1027+ 8C99 AF               xor a
1028+ 8C9A 5F               ld e,a
1029+ 8C9B 18 ED            jr Guarda_coordenadas_X
1030+ 8C9D
1031+ 8C9D              ; -----------------------------------------------------------------
1032+ 8C9D              ;
1033+ 8C9D              ;   12/04/23
1034+ 8C9D              ;
1035+ 8C9D
1036+ 8C9D 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1037+ 8CA0 A7               and a
1038+ 8CA1 C8               ret z
1039+ 8CA2
1040+ 8CA2 FE 04            cp 4
1041+ 8CA4 20 09            jr nz,1F
1042+ 8CA6
1043+ 8CA6
1044+ 8CA6              ; La colisión se produce por contacto entre Amadeus y una entidad.
1045+ 8CA6
1046+ 8CA6 CD DD 8A         call Detecta_colision_nave_entidad
1047+ 8CA9
1048+ 8CA9 21 EC 85         ld hl,Impacto2
1049+ 8CAC CB 5E            bit 3,(hl)
1050+ 8CAE C0               ret nz                                               ; Existe colisión, RET.
1051+ 8CAF
1052+ 8CAF              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1053+ 8CAF              ; Primero analizamos si algún disparo impacta en Amadeus.
1054+ 8CAF
1055+ 8CAF 21 EC 85     1 ld hl,Impacto2
1056+ 8CB2 CB 4E            bit 1,(hl)
1057+ 8CB4 28 07            jr z,2F
1058+ 8CB6
1059+ 8CB6 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1060+ 8CB9 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1061+ 8CBB 18 08            jr 3F
1062+ 8CBD
1063+ 8CBD 21 EC 85     2 ld hl,Impacto2
1064+ 8CC0 CB 46            bit 0,(hl)
1065+ 8CC2 C8               ret z
1066+ 8CC3
1067+ 8CC3              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1068+ 8CC3
1069+ 8CC3 18 FE            jr $
1070+ 8CC5
1071+ 8CC5 C9           3 ret
1072+ 8CC6
1073+ 8CC6              ; -----------------------------------------------------------------
1074+ 8CC6              ;
1075+ 8CC6              ;   16/04/23
1076+ 8CC6              ;
1077+ 8CC6
1078+ 8CC6 AF           Limpia_Coordenadas_X xor a
1079+ 8CC7 06 06            ld b,6
1080+ 8CC9 21 EF 85         ld hl,Coordenadas_X_Amadeus
1081+ 8CCC 77           1 ld (hl),a
1082+ 8CCD 23               inc hl
1083+ 8CCE 10 FC            djnz 1B
1084+ 8CD0 C9               ret
# file closed: Disparo.asm
 918  8CD1              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8CD1              ; ******************************************************************************************************************************************************************************************
   2+ 8CD1              ;
   3+ 8CD1              ; 01/23
   4+ 8CD1              ;
   5+ 8CD1              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8CD1
   7+ 8CD1 CD AB 8F     Draw call Prepara_draw
   8+ 8CD4 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8CD5 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8CD6 28 05        	jr z,2F
  11+ 8CD8
  12+ 8CD8 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8CDB 18 0C        	jr 1F
  14+ 8CDD 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8CE0 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8CE3 CD 72 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8CE6              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8CE6 CD F1 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8CE9 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8CEC CB 6F        	bit 5,a
  21+ 8CEE 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8CF0
  23+ 8CF0 CD 08 8D     	call Comprueba_limite_horizontal
  24+ 8CF3 CD 98 8D     	call Comprueba_limite_vertical
  25+ 8CF6
  26+ 8CF6              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8CF6
  28+ 8CF6 CD E5 8E     3 call calcula_CColumnass
  29+ 8CF9 CD 1C 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8CFC CD 71 8F     	call Define_rutina_de_impresion
  31+ 8CFF
  32+ 8CFF 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D02 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8D04 32 C9 85     	ld (Ctrl_0),a
  35+ 8D07
  36+ 8D07 C9           	ret
  37+ 8D08
  38+ 8D08              ; *******************************************************************************************************************************************************************************************
  39+ 8D08              ;	21/01/23
  40+ 8D08              ;
  41+ 8D08              ; 	Comprueba_limite_horizontal.
  42+ 8D08              ;
  43+ 8D08              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8D08              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8D08              ;
  46+ 8D08              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8D08              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8D08              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8D08              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8D08
  51+ 8D08
  52+ 8D08
  53+ 8D08 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8D0B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8D0D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8D0F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8D11 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8D14 18 09            jr 6F
  59+ 8D16 CB 5F        1 bit 3,a
  60+ 8D18 28 0A            jr z,2F
  61+ 8D1A E6 F7            and $f7
  62+ 8D1C 32 C9 85         ld (Ctrl_0),a
  63+ 8D1F CD 72 8E     6 call Inicializacion
  64+ 8D22 18 5B            jr 5F
  65+ 8D24 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8D25
  67+ 8D25              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8D25              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8D25
  70+ 8D25 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8D26 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8D29 CD 77 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8D2C 67           	ld h,a
  74+ 8D2D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8D2E CD 77 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8D31 67           	ld h,a
  77+ 8D32 A7           	and a
  78+ 8D33 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8D35 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8D36 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8D39 FE 02        	cp 2
  82+ 8D3B 38 1E        	jr c,3F
  83+ 8D3D 28 1C        	jr z,3F
  84+ 8D3F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8D40 28 23            jr z,7F
  86+ 8D42 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8D44 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8D46 E1           	pop hl
  89+ 8D47
  90+ 8D47              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8D47              ; _para indicar con E="2" en caso necesario.
  92+ 8D47
  93+ 8D47 E5               push hl
  94+ 8D48 C5               push bc
  95+ 8D49 CD 77 92     	call calcula_tercio
  96+ 8D4C FE 01        	cp 1
  97+ 8D4E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8D50 CD 80 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D53 28 26            jr z,9F
 100+ 8D55 38 24            jr c,9F
 101+ 8D57 1E 00        11 ld e,0
 102+ 8D59 18 22            jr 8F
 103+ 8D5B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D5C 28 07        	jr z, 7F
 105+ 8D5E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D60 1E 00         	ld e,0
 107+ 8D62 E1           	pop hl
 108+ 8D63 18 04        	jr 4F
 109+ 8D65 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D67 18 15            jr 10F
 111+ 8D69
 112+ 8D69              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D69              ; _para indicar con E="2" en caso necesario.
 114+ 8D69
 115+ 8D69 E5           4 push hl
 116+ 8D6A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D6B CD 77 92     	call calcula_tercio
 118+ 8D6E FE 01        	cp 1
 119+ 8D70 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D72 CD 80 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D75 28 04            jr z,9F
 122+ 8D77 30 02            jr nc,9F
 123+ 8D79 18 02        	jr 8F
 124+ 8D7B 1E 02        9 ld e,2
 125+ 8D7D C1           8 pop bc
 126+ 8D7E E1           10 pop hl
 127+ 8D7F C9           5 ret
 128+ 8D80
 129+ 8D80              ; --------------------
 130+ 8D80              ;
 131+ 8D80              ; 25/08/22
 132+ 8D80
 133+ 8D80 CD 77 92     Comprueba_centro call calcula_tercio
 134+ 8D83 67               ld h,a
 135+ 8D84 08           	ex af,af
 136+ 8D85 FE 02        	cp 2
 137+ 8D87 38 07        	jr c,1F
 138+ 8D89 28 05        	jr z,1F
 139+ 8D8B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D8E 18 03        	jr 2F
 141+ 8D90 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D93 08           2 ex af,af
 143+ 8D94 A7               and a
 144+ 8D95 ED 42            sbc hl,bc
 145+ 8D97 C9               ret
 146+ 8D98
 147+ 8D98              ; *********************************************************************************************************************************************************************************************
 148+ 8D98              ;
 149+ 8D98              ;   16/8/22
 150+ 8D98              ;
 151+ 8D98              ;	Comprueba_limite_vertical
 152+ 8D98              ;
 153+ 8D98              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D98              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D98              ;
 156+ 8D98
 157+ 8D98 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D9B 7D           	ld a,l
 159+ 8D9C E6 1F        	and $1F
 160+ 8D9E 57           	ld d,a
 161+ 8D9F 3A D5 85     	ld a,(Limite_vertical)
 162+ 8DA2 BA           	cp d 											; Límite - Posición.
 163+ 8DA3 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8DA4 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8DA7 CB 47        	bit 0,a
 166+ 8DA9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8DAB
 168+ 8DAB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8DAB
 170+ 8DAB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8DAC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8DAE
 173+ 8DAE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8DAE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8DAE
 176+ 8DAE 3A A1 85         ld a,(Coordenada_X)
 177+ 8DB1 16 0F            ld d,Centro_izquierda
 178+ 8DB3 A7               and a
 179+ 8DB4 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8DB5 28 1E            jr z,3F
 181+ 8DB7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8DB9              ;                                                    ; _salimos sin modificar nada.
 183+ 8DB9 18 0E            jr 2F
 184+ 8DBB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8DBC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8DBE
 187+ 8DBE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8DBE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8DBE
 190+ 8DBE 3A A1 85         ld a,(Coordenada_X)
 191+ 8DC1 16 10            ld d,Centro_derecha
 192+ 8DC3 A7               and a
 193+ 8DC4 92               sub d
 194+ 8DC5 28 0E            jr z,3F
 195+ 8DC7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8DC9              ;                                                    ; _salimos sin modificar nada.
 197+ 8DC9 CB 43        2 bit 0,e
 198+ 8DCB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8DCD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8DCE CD 62 8E         call Modificaccionne
 201+ 8DD1 C1           	pop bc
 202+ 8DD2 CD 72 8E         call Inicializacion
 203+ 8DD5 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8DD6
 205+ 8DD6              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8DD6
 207+ 8DD6 C5           4 push bc
 208+ 8DD7 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8DDA 0A           	ld a,(bc)
 210+ 8DDB 3D           	dec a
 211+ 8DDC 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8DDD 7D           	ld a,l
 213+ 8DDE 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8DDF CB 47        	bit 0,a
 215+ 8DE1 28 03        	jr z,5F
 216+ 8DE3 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8DE4 18 2E        	jr 7F
 218+ 8DE6
 219+ 8DE6              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8DE6
 221+ 8DE6 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8DE7 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8DE8 3A C9 85     	ld a,(Ctrl_0)
 224+ 8DEB CB 4F        	bit 1,a
 225+ 8DED 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8DEF F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8DF0
 228+ 8DF0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8DF0
 230+ 8DF0 1C               inc e
 231+ 8DF1 1D               dec e
 232+ 8DF2 20 07            jr nz,12F
 233+ 8DF4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8DF5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8DF6 22 9D 85     	ld (Posicion_actual),hl
 236+ 8DF9 18 44        13 jr 9F
 237+ 8DFB CB 43        12 bit 0,e
 238+ 8DFD 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DFF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DFF C1           	pop bc
 241+ 8E00 18 D3        	jr 3B
 242+ 8E02 80           14 add b
 243+ 8E03 6F               ld l,a
 244+ 8E04 22 9D 85     	ld (Posicion_actual),hl
 245+ 8E07 CD 62 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8E0A 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8E0C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8E0E 32 C9 85         ld (Ctrl_0),a
 249+ 8E11 F1           	pop af
 250+ 8E12 18 2B        	jr 9F
 251+ 8E14
 252+ 8E14              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8E14
 254+ 8E14 F5           7 push af
 255+ 8E15 3A C9 85     	ld a,(Ctrl_0)
 256+ 8E18 CB 47        	bit 0,a
 257+ 8E1A 20 1D        	jr nz,8F
 258+ 8E1C F1           	pop af
 259+ 8E1D
 260+ 8E1D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8E1D
 262+ 8E1D 1C           	inc e
 263+ 8E1E 1D               dec e
 264+ 8E1F 20 07            jr nz,10F
 265+ 8E21 90           	sub b
 266+ 8E22 6F               ld l,a
 267+ 8E23 22 9D 85     	ld (Posicion_actual),hl
 268+ 8E26 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8E28              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8E28 CB 43        10 bit 0,e
 271+ 8E2A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8E2C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8E2C C1           	pop bc
 274+ 8E2D 18 A6        	jr 3B
 275+ 8E2F 90           16 sub b
 276+ 8E30 6F               ld l,a
 277+ 8E31 22 9D 85     	ld (Posicion_actual),hl
 278+ 8E34 CD 62 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8E37 18 06            jr 9F
 280+ 8E39 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8E3B 32 C9 85         ld (Ctrl_0),a
 282+ 8E3E F1           	pop af
 283+ 8E3F C1           9 pop bc
 284+ 8E40 1E 00        	ld e,0
 285+ 8E42 CD 72 8E         call Inicializacion
 286+ 8E45 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8E46 08           	ex af,af
 288+ 8E47 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8E48 18 8B            jr 3B
 290+ 8E4A
 291+ 8E4A              ; --------------------
 292+ 8E4A
 293+ 8E4A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8E4C CD C6 8F     1 call PreviousScan
 295+ 8E4F 10 FB            djnz 1B
 296+ 8E51 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E54 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E55 C9           	ret
 299+ 8E56
 300+ 8E56              ; --------------------
 301+ 8E56
 302+ 8E56 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E58 CD B7 8F     1 call NextScan
 304+ 8E5B 10 FB            djnz 1B
 305+ 8E5D 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E60 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E61 C9           	ret
 308+ 8E62
 309+ 8E62              ; --------------------
 310+ 8E62              ;
 311+ 8E62              ;	22/01/23
 312+ 8E62              ;
 313+ 8E62              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E62              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E62              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E62
 317+ 8E62
 318+ 8E62              Modificaccionne
 319+ 8E62
 320+ 8E62 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E65 FE 02        	cp 2
 322+ 8E67 CC 4A 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E6A DC 4A 8E         call c,Modifica_Pos_actual
 324+ 8E6D C8           	ret z
 325+ 8E6E CD 56 8E         call Modifica_Pos_actual2
 326+ 8E71 C9               ret
 327+ 8E72
 328+ 8E72              ; *************************************************************************************************************************************************************************************************
 329+ 8E72              ;
 330+ 8E72              ;	13/8/22
 331+ 8E72              ;
 332+ 8E72              ;	Inicializacion
 333+ 8E72              ;
 334+ 8E72              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E72              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E72              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E72              ;
 338+ 8E72              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E72              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E72              ;	_ desaparece/aparece.
 341+ 8E72
 342+ 8E72              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E72              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E72              ;
 345+ 8E72              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E72              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E72              ; 		   [E] ="0"
 348+ 8E72
 349+ 8E72              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E72
 351+ 8E72 CD 77 92     Inicializacion call calcula_tercio
 352+ 8E75 28 36        	jr z,primit
 353+ 8E77 E6 02        	and 2
 354+ 8E79 20 07        	jr nz,segmit
 355+ 8E7B 7D           	ld a,l
 356+ 8E7C FE 7F        	cp $7f
 357+ 8E7E 38 2D        	jr c,primit
 358+ 8E80 28 2B        	jr z,primit
 359+ 8E82 CD DF 8E     segmit call column
 360+ 8E85 38 13        	jr c,tercuad
 361+ 8E87 3E 04        cuarcuad ld a,4
 362+ 8E89 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E8C 21 20 48     	ld hl,$4820
 364+ 8E8F 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E92 21 D5 85     	ld hl,Limite_vertical
 366+ 8E95 36 0D        	ld (hl),$0d
 367+ 8E97 08           	ex af,af
 368+ 8E98 18 3C        	jr 1F
 369+ 8E9A              tercuad
 370+ 8E9A 3E 03        	ld a,3
 371+ 8E9C 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E9F 21 20 48     	ld hl,$4820
 373+ 8EA2 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8EA5 21 D5 85     	ld hl,Limite_vertical
 375+ 8EA8 36 12        	ld (hl),$12
 376+ 8EAA 08           	ex af,af
 377+ 8EAB 18 29        	jr 1F
 378+ 8EAD CD DF 8E     primit call column
 379+ 8EB0 38 13        	jr c, primcuad
 380+ 8EB2              segcuad
 381+ 8EB2 3E 02        	ld a,2
 382+ 8EB4 32 AF 85     	ld (Cuad_objeto),a
 383+ 8EB7 21 C0 4F     	ld hl,$4fc0
 384+ 8EBA 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8EBD 21 D5 85     	ld hl,Limite_vertical
 386+ 8EC0 36 0D        	ld (hl),$0d
 387+ 8EC2 08           	ex af,af
 388+ 8EC3 18 11        	jr 1F
 389+ 8EC5              primcuad
 390+ 8EC5 3E 01        	ld a,1
 391+ 8EC7 32 AF 85     	ld (Cuad_objeto),a
 392+ 8ECA 21 C0 4F     	ld hl,$4fc0
 393+ 8ECD 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8ED0 21 D5 85     	ld hl,Limite_vertical
 395+ 8ED3 36 12        	ld (hl),$12
 396+ 8ED5 08           	ex af,af
 397+ 8ED6 CD A3 95     1 call Genera_coordenadas
 398+ 8ED9 21 C9 85     	ld hl,Ctrl_0
 399+ 8EDC CB EE        	set 5,(hl)
 400+ 8EDE C9           	ret
 401+ 8EDF
 402+ 8EDF              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8EDF
 404+ 8EDF              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8EDF              ;
 406+ 8EDF              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8EDF
 408+ 8EDF 7D           column ld a,l
 409+ 8EE0 E6 1F        	and $1f
 410+ 8EE2 FE 10         	cp $10
 411+ 8EE4 C9            	ret
 412+ 8EE5
 413+ 8EE5              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8EE5              ;
 415+ 8EE5              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8EE5              ;
 417+ 8EE5              ; 14/12/22
 418+ 8EE5              ;
 419+ 8EE5              ;	Modifica: A y BC.
 420+ 8EE5
 421+ 8EE5 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8EE8 E6 01        	and 1
 423+ 8EEA 28 17        	jr z,1F
 424+ 8EEC
 425+ 8EEC              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8EEC
 427+ 8EEC 3A A1 85     	ld a,(Coordenada_X)
 428+ 8EEF 47           	ld b,a
 429+ 8EF0 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8EF1 79           	ld a,c
 431+ 8EF2 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8EF3 38 08        	jr c,2F
 433+ 8EF5 47           	ld b,a
 434+ 8EF6 79           	ld a,c
 435+ 8EF7 90           	sub b
 436+ 8EF8 32 D2 85     	ld (Columnas),a
 437+ 8EFB 18 1B        	jr 4F
 438+ 8EFD 79           2 ld a,c
 439+ 8EFE 32 D2 85     	ld (Columnas),a
 440+ 8F01 18 15        	jr 4F
 441+ 8F03
 442+ 8F03              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8F03
 444+ 8F03 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8F06 81           	add c
 446+ 8F07 3D           	dec a
 447+ 8F08 D6 1F        	sub $1f
 448+ 8F0A 38 08        	jr c,3F
 449+ 8F0C 47           	ld b,a
 450+ 8F0D 79           	ld a,c
 451+ 8F0E 90           	sub b
 452+ 8F0F 32 D2 85     	ld (Columnas),a
 453+ 8F12 18 04        	jr 4F
 454+ 8F14 79           3 ld a,c
 455+ 8F15 32 D2 85     	ld (Columnas),a
 456+ 8F18 D9           4 exx
 457+ 8F19 4F           	ld c,a
 458+ 8F1A D9           	exx
 459+ 8F1B C9            ret
 460+ 8F1C
 461+ 8F1C              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8F1C              ;
 463+ 8F1C              ; 7/1/23
 464+ 8F1C              ;
 465+ 8F1C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8F1C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8F1C              ;
 468+ 8F1C              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8F1C              ;	DESTRUYE: HL,B Y A.
 470+ 8F1C
 471+ 8F1C 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8F1F FE 02        	cp 2
 473+ 8F21 38 18        	jr c,1F
 474+ 8F23 28 16        	jr z,1F
 475+ 8F25 E6 01        	and 1
 476+ 8F27 28 0D        	jr z,3F
 477+ 8F29
 478+ 8F29              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8F29
 480+ 8F29 CD 65 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8F2C
 482+ 8F2C 7D           9 ld a,l
 483+ 8F2D E6 1F        	and $1f
 484+ 8F2F 28 2A        	jr z,7F
 485+ 8F31 2B           	dec hl
 486+ 8F32 10 F8        	djnz 9B
 487+ 8F34 18 25        	jr 7F
 488+ 8F36
 489+ 8F36              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8F36
 491+ 8F36 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8F39 18 20        	jr 7F
 493+ 8F3B
 494+ 8F3B 28 14        1 jr z,2F
 495+ 8F3D
 496+ 8F3D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8F3D
 498+ 8F3D CD 65 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8F40 7D           4 ld a,l
 500+ 8F41 E6 1F        	and $1f
 501+ 8F43 28 03        	jr z,6F
 502+ 8F45 2B           	dec hl
 503+ 8F46 10 F8        	djnz 4B
 504+ 8F48 06 0F        6 ld b,15
 505+ 8F4A CD C6 8F     5 call PreviousScan
 506+ 8F4D 10 FB        	djnz 5B
 507+ 8F4F 18 0A        	jr 7F
 508+ 8F51
 509+ 8F51              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8F51
 511+ 8F51 CD 65 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F54 06 0F        	ld b,15
 513+ 8F56 CD C6 8F     8 call PreviousScan
 514+ 8F59 10 FB        	djnz 8B
 515+ 8F5B
 516+ 8F5B E5           7 push hl
 517+ 8F5C DD E1        	pop ix
 518+ 8F5E
 519+ 8F5E 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F61 E5           	push hl
 521+ 8F62 FD E1        	pop iy
 522+ 8F64
 523+ 8F64 C9           	ret
 524+ 8F65
 525+ 8F65              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F65              ;
 527+ 8F65              ;	2/1/23
 528+ 8F65              ;
 529+ 8F65              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F65              ;
 531+ 8F65              ;	Tras esta rutina tenemos:
 532+ 8F65              ;
 533+ 8F65              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F65              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F65              ;
 536+ 8F65              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F65
 538+ 8F65 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F68 3A D2 85     	ld a,(Columnas)
 540+ 8F6B 3D           	dec a
 541+ 8F6C 20 01        	jr nz,1F
 542+ 8F6E 3C           	inc a
 543+ 8F6F 47           1 ld b,a
 544+ 8F70 C9           	ret
 545+ 8F71
 546+ 8F71              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F71              ;
 548+ 8F71              ;	3/1/23
 549+ 8F71              ;
 550+ 8F71              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F71              ;
 552+ 8F71              ;	Destruye: A,B,HL y DE.
 553+ 8F71
 554+ 8F71              Define_rutina_de_impresion
 555+ 8F71
 556+ 8F71 3A 9C 85     	ld a,(Columns)
 557+ 8F74 47           	ld b,a
 558+ 8F75 3A D2 85     	ld a,(Columnas)
 559+ 8F78 B8           	cp b
 560+ 8F79 20 0D        	jr nz,2f
 561+ 8F7B
 562+ 8F7B              ;	La entidad se imprime entera.
 563+ 8F7B
 564+ 8F7B 21 47 90     	ld hl, Indice_entidades_completas
 565+ 8F7E E6 01        	and 1
 566+ 8F80 28 02        	jr z,1F
 567+ 8F82
 568+ 8F82 23           	inc hl
 569+ 8F83 23           	inc hl
 570+ 8F84
 571+ 8F84 CD B8 87     1 call Extrae_address
 572+ 8F87 C9           	ret		;	ret
 573+ 8F88
 574+ 8F88              ;	La entidad no se imprime entera en pantalla.
 575+ 8F88
 576+ 8F88 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F8B E6 01        	and 1
 578+ 8F8D 28 17        	jr z,3F
 579+ 8F8F
 580+ 8F8F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F8F
 582+ 8F8F 21 4B 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F92 3A 9C 85     4 ld a,(Columns)
 584+ 8F95 E6 01        	and 1
 585+ 8F97 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F99
 587+ 8F99 23           	inc hl
 588+ 8F9A 23           	inc hl
 589+ 8F9B
 590+ 8F9B 3A D2 85     	ld a,(Columnas)
 591+ 8F9E E6 01        	and 1
 592+ 8FA0 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8FA2
 594+ 8FA2 23           	inc hl
 595+ 8FA3 23           	inc hl
 596+ 8FA4
 597+ 8FA4 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8FA6
 599+ 8FA6 21 51 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8FA9 18 E7        	jr 4B
 601+ 8FAB
 602+ 8FAB              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8FAB              ;
 604+ 8FAB              ;	Prepara_draw
 605+ 8FAB              ;
 606+ 8FAB              ;	Es una rutina de carga.
 607+ 8FAB              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8FAB              ;
 609+ 8FAB              ;	FUNCIONAMIENTO:
 610+ 8FAB              ;
 611+ 8FAB              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8FAB              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8FAB              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8FAB              ;
 615+ 8FAB              ;	DESTRUYE:
 616+ 8FAB              ;
 617+ 8FAB              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8FAB
 619+ 8FAB 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8FAE 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8FAF 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8FB0 4E           	ld c,(hl)
 623+ 8FB1 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8FB4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8FB6 C9           	ret
 626+ 8FB7
 627+ 8FB7              ;----------------------------------------------------------------------------------------------------------------
 628+ 8FB7              ;
 629+ 8FB7              ;	5/08/22
 630+ 8FB7              ;
 631+ 8FB7              ;   NextScan.
 632+ 8FB7              ;
 633+ 8FB7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8FB7              ;
 635+ 8FB7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8FB7              ;
 637+ 8FB7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8FB7              ;
 639+ 8FB7              ;       DESTRUIDOS: AF y HL !!!
 640+ 8FB7              ;
 641+ 8FB7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8FB7              ;
 643+ 8FB7
 644+ 8FB7 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8FB8 7C               ld a,h
 646+ 8FB9 E6 07            and 7
 647+ 8FBB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8FBC
 649+ 8FBC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8FBD C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8FBF 6F               ld l,a
 652+ 8FC0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8FC1
 654+ 8FC1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8FC2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8FC4 67               ld h,a
 657+ 8FC5 C9               ret
 658+ 8FC6
 659+ 8FC6              ;----------------------------------------------------------------------------------------------------------------
 660+ 8FC6              ;
 661+ 8FC6              ;	5/08/22
 662+ 8FC6              ;
 663+ 8FC6              ;   PreviousScan.
 664+ 8FC6              ;
 665+ 8FC6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8FC6              ;
 667+ 8FC6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8FC6              ;
 669+ 8FC6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8FC6              ;
 671+ 8FC6              ;       DESTRUIDOS: AF y HL !!!
 672+ 8FC6              ;
 673+ 8FC6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8FC6              ;
 675+ 8FC6
 676+ 8FC6 7C           PreviousScan ld a,h
 677+ 8FC7 25               dec h               ; Dec H.
 678+ 8FC8 E6 07            and 7
 679+ 8FCA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8FCB
 681+ 8FCB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8FCC D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8FCE 6F               ld l,a
 684+ 8FCF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8FD0
 686+ 8FD0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8FD1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8FD3 67               ld h,a
 689+ 8FD4 C9               ret
 690+ 8FD5
 691+ 8FD5              ; -----------------------------------------------------------------------------------
 692+ 8FD5              ;
 693+ 8FD5              ;	28/2/23
 694+ 8FD5              ;
 695+ 8FD5              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8FD5              ;	Extrae fotos de Album_de_fotos.
 697+ 8FD5
 698+ 8FD5 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 8FD8 A7           	and a
 700+ 8FD9 C8           	ret z
 701+ 8FDA ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8FDE 31 00 70     	ld sp,Album_de_fotos
 703+ 8FE1
 704+ 8FE1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8FE3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8FE4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8FE5
 708+ 8FE5 ED 73 E1 85  	ld (Stack_2),sp
 709+ 8FE9 ED 7B DF 85  	ld sp,(Stack)
 710+ 8FED
 711+ 8FED              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8FED
 713+ 8FED 3E CD        	ld a,$cd
 714+ 8FEF 32 F7 8F     	ld (Imprime),a
 715+ 8FF2 EB           	ex de,hl
 716+ 8FF3 22 F8 8F     	ld (Imprime+1),hl
 717+ 8FF6 EB           	ex de,hl
 718+ 8FF7
 719+ 8FF7              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8FF7
 721+ 8FF7 00 00 00     Imprime db 0,0,0
 722+ 8FFA
 723+ 8FFA 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8FFD 3D           	dec a
 725+ 8FFE 28 09        	jr z,1F
 726+ 9000 32 DE 85      	ld (Numero_de_malotes),a
 727+ 9003
 728+ 9003 ED 7B E1 85   	ld sp,(Stack_2)
 729+ 9007 18 D8        	jr 2B
 730+ 9009
 731+ 9009 AF           1 xor a
 732+ 900A 32 E1 85     	ld (Stack_2),a
 733+ 900D C9           	ret
 734+ 900E
 735+ 900E              ; -----------------------------------------------------------------------------------
 736+ 900E              ;
 737+ 900E              ;	28/2/23
 738+ 900E              ;
 739+ 900E              ;	Pinta los disparos generados.
 740+ 900E
 741+ 900E              Extrae_foto_disparos
 742+ 900E
 743+ 900E 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 9011 A7           	and a
 745+ 9012 C8           	ret z
 746+ 9013 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9017 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 901A
 749+ 901A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 901C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 901D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 901E
 753+ 901E ED 73 E1 85  	ld (Stack_2),sp
 754+ 9022 ED 7B DF 85  	ld sp,(Stack)
 755+ 9026
 756+ 9026              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9026
 758+ 9026 3E CD        	ld a,$cd
 759+ 9028 32 30 90     	ld (Imprime2),a
 760+ 902B EB           	ex de,hl
 761+ 902C 22 31 90     	ld (Imprime2+1),hl
 762+ 902F EB           	ex de,hl
 763+ 9030
 764+ 9030              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9030
 766+ 9030 00 00 00     Imprime2 db 0,0,0
 767+ 9033
 768+ 9033 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 9036 3D           	dec a
 770+ 9037 28 09        	jr z,1F
 771+ 9039 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 903C
 773+ 903C ED 7B E1 85  	ld sp,(Stack_2)
 774+ 9040 18 D8        	jr 2B
 775+ 9042
 776+ 9042 AF           1 xor a
 777+ 9043 32 E1 85     	ld (Stack_2),a
 778+ 9046 C9           	ret
 779+ 9047
# file closed: Draw_XOR.asm
 919  9047              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9047              ;   índices de Rutinas de impresión.
   2+ 9047
   3+ 9047 57 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9049 84 90            defw Pinta_Amadeus_3x2
   5+ 904B
   6+ 904B DA 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 904D 7A 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 904F 2E 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9051
  10+ 9051 04 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9053 08 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9055 BC 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9057
  14+ 9057
  15+ 9057              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9057              ;
  17+ 9057              ;   12/12/22
  18+ 9057              ;
  19+ 9057              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9057              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9057              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9057              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9057              ;
  24+ 9057              ;   Modifica: DE y HL.
  25+ 9057
  26+ 9057 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 905B FD F9        	ld sp,iy
  28+ 905D 06 10            ld b,16
  29+ 905F D1           1 pop de
  30+ 9060 7B               ld a,e
  31+ 9061 AE               xor (hl)
  32+ 9062 77           	ld (hl),a
  33+ 9063 23           	inc hl
  34+ 9064 7A               ld a,d
  35+ 9065 AE               xor (hl)
  36+ 9066 77           	ld (hl),a
  37+ 9067 2B           	dec hl
  38+ 9068 24           	inc h
  39+ 9069 7C               ld a,h
  40+ 906A E6 07            and 7
  41+ 906C 20 0A            jr nz,2F
  42+ 906E 7D               ld a,l
  43+ 906F C6 20            add a,$20
  44+ 9071 6F               ld l,a
  45+ 9072 38 04            jr c,2F
  46+ 9074 7C               ld a,h
  47+ 9075 D6 08            sub 8
  48+ 9077 67               ld h,a
  49+ 9078 7C           2 ld a,h
  50+ 9079 FE 58            cp $58
  51+ 907B 28 02            jr z,3F
  52+ 907D 10 E0            djnz 1B
  53+ 907F ED 7B DF 85  3 ld sp,(Stack)
  54+ 9083 C9           	ret
  55+ 9084
  56+ 9084 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9088 FD F9        	ld sp,iy
  58+ 908A 06 08            ld b,8
  59+ 908C D1           1 pop de
  60+ 908D 7B               ld a,e
  61+ 908E AE               xor (hl)
  62+ 908F 77           	ld (hl),a
  63+ 9090 23           	inc hl
  64+ 9091 7A               ld a,d
  65+ 9092 AE               xor (hl)
  66+ 9093 77           	ld (hl),a
  67+ 9094 23           	inc hl
  68+ 9095 D1           	pop de
  69+ 9096 7B               ld a,e
  70+ 9097 AE               xor (hl)
  71+ 9098 77           	ld (hl),a
  72+ 9099 2B           	dec hl
  73+ 909A 2B           	dec hl
  74+ 909B 24           	inc h
  75+ 909C 7C               ld a,h
  76+ 909D E6 07            and 7
  77+ 909F 20 0A            jr nz,2F
  78+ 90A1 7D               ld a,l
  79+ 90A2 C6 20            add a,$20
  80+ 90A4 6F               ld l,a
  81+ 90A5 38 04            jr c,2F
  82+ 90A7 7C               ld a,h
  83+ 90A8 D6 08            sub 8
  84+ 90AA 67               ld h,a
  85+ 90AB 7C           2 ld a,h
  86+ 90AC FE 58            cp $58
  87+ 90AE 28 25            jr z,4F
  88+ 90B0 7A               ld a,d
  89+ 90B1 AE               xor (hl)
  90+ 90B2 77               ld (hl),a
  91+ 90B3 D1           	pop de
  92+ 90B4 23           	inc hl
  93+ 90B5 7B               ld a,e
  94+ 90B6 AE               xor (hl)
  95+ 90B7 77           	ld (hl),a
  96+ 90B8 23           	inc hl
  97+ 90B9 7A               ld a,d
  98+ 90BA AE               xor (hl)
  99+ 90BB 77           	ld (hl),a
 100+ 90BC 2B           	dec hl
 101+ 90BD 2B           	dec hl
 102+ 90BE 24           	inc h
 103+ 90BF 7C               ld a,h
 104+ 90C0 E6 07            and 7
 105+ 90C2 20 0A            jr nz,3F
 106+ 90C4 7D               ld a,l
 107+ 90C5 C6 20            add a,$20
 108+ 90C7 6F               ld l,a
 109+ 90C8 38 04            jr c,3F
 110+ 90CA 7C               ld a,h
 111+ 90CB D6 08            sub 8
 112+ 90CD 67               ld h,a
 113+ 90CE 7C           3 ld a,h
 114+ 90CF FE 58            cp $58
 115+ 90D1 28 02            jr z,4F
 116+ 90D3 10 B7            djnz 1B
 117+ 90D5 ED 7B DF 85  4 ld sp,(Stack)
 118+ 90D9 C9           	ret
 119+ 90DA
 120+ 90DA              ; ---------------------------------------------------
 121+ 90DA
 122+ 90DA ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 90DE FD F9        	ld sp,iy
 124+ 90E0
 125+ 90E0              ; >>>
 126+ 90E0
 127+ 90E0 06 10            ld b,16
 128+ 90E2 D1           1 pop de
 129+ 90E3 7A           	ld a,d
 130+ 90E4 AE           	xor (hl)
 131+ 90E5 77           	ld (hl),a
 132+ 90E6 24           	inc h
 133+ 90E7 7C               ld a,h
 134+ 90E8 E6 07            and 7
 135+ 90EA 20 0C            jr nz,2F
 136+ 90EC 7D               ld a,l
 137+ 90ED C6 20            add a,$20
 138+ 90EF 6F               ld l,a
 139+ 90F0 38 06            jr c,2F
 140+ 90F2 7C               ld a,h
 141+ 90F3 D6 08            sub 8
 142+ 90F5 67               ld h,a
 143+ 90F6 18 00            jr 2F
 144+ 90F8 7C           2 ld a,h
 145+ 90F9 FE 58            cp $58
 146+ 90FB 28 02            jr z,3F
 147+ 90FD 10 E3            djnz 1B
 148+ 90FF ED 7B DF 85  3 ld sp,(Stack)
 149+ 9103 C9           	ret
 150+ 9104
 151+ 9104 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9108 FD F9        	ld sp,iy
 153+ 910A
 154+ 910A              ; >>>
 155+ 910A
 156+ 910A 06 10            ld b,16
 157+ 910C D1           1 pop de
 158+ 910D 7B           	ld a,e
 159+ 910E AE           	xor (hl)
 160+ 910F 77           	ld (hl),a
 161+ 9110 24           	inc h
 162+ 9111 7C               ld a,h
 163+ 9112 E6 07            and 7
 164+ 9114 20 0C            jr nz,2F
 165+ 9116 7D               ld a,l
 166+ 9117 C6 20            add a,$20
 167+ 9119 6F               ld l,a
 168+ 911A 38 06            jr c,2F
 169+ 911C 7C               ld a,h
 170+ 911D D6 08            sub 8
 171+ 911F 67               ld h,a
 172+ 9120 18 00            jr 2F
 173+ 9122 7C           2 ld a,h
 174+ 9123 FE 58            cp $58
 175+ 9125 28 02            jr z,3F
 176+ 9127 10 E3            djnz 1B
 177+ 9129 ED 7B DF 85  3 ld sp,(Stack)
 178+ 912D C9           	ret
 179+ 912E
 180+ 912E              ; ---------------------------------------------------
 181+ 912E
 182+ 912E ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9132 FD F9        	ld sp,iy
 184+ 9134 06 08            ld b,8
 185+ 9136 D1           1 pop de
 186+ 9137 7A           	ld a,d
 187+ 9138 AE           	xor (hl)
 188+ 9139 77           	ld (hl),a
 189+ 913A 23           	inc hl
 190+ 913B D1           	pop de
 191+ 913C 7B           	ld a,e
 192+ 913D AE           	xor (hl)
 193+ 913E 77           	ld (hl),a
 194+ 913F 2B           	dec hl
 195+ 9140 24            	inc h
 196+ 9141 7C               ld a,h
 197+ 9142 E6 07            and 7
 198+ 9144 20 0A            jr nz,2F
 199+ 9146 7D               ld a,l
 200+ 9147 C6 20            add a,$20
 201+ 9149 6F               ld l,a
 202+ 914A 38 04            jr c,2F
 203+ 914C 7C               ld a,h
 204+ 914D D6 08            sub 8
 205+ 914F 67               ld h,a
 206+ 9150 7C           2 ld a,h
 207+ 9151 FE 58            cp $58
 208+ 9153 28 20            jr z,4F
 209+ 9155 D1               pop de
 210+ 9156 7B           	ld a,e
 211+ 9157 AE           	xor (hl)
 212+ 9158 77           	ld (hl),a
 213+ 9159 23           	inc hl
 214+ 915A 7A           	ld a,d
 215+ 915B AE           	xor (hl)
 216+ 915C 77           	ld (hl),a
 217+ 915D 2B           	dec hl
 218+ 915E 24           	inc h
 219+ 915F 7C               ld a,h
 220+ 9160 E6 07            and 7
 221+ 9162 20 0A            jr nz,3F
 222+ 9164 7D               ld a,l
 223+ 9165 C6 20            add a,$20
 224+ 9167 6F               ld l,a
 225+ 9168 38 04            jr c,3F
 226+ 916A 7C               ld a,h
 227+ 916B D6 08            sub 8
 228+ 916D 67               ld h,a
 229+ 916E 7C           3 ld a,h
 230+ 916F FE 58            cp $58
 231+ 9171 28 02            jr z,4F
 232+ 9173 10 C1            djnz 1B
 233+ 9175 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9179 C9           	ret
 235+ 917A
 236+ 917A ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 917E FD F9        	ld sp,iy
 238+ 9180 06 08            ld b,8
 239+ 9182 D1           1 pop de
 240+ 9183 D1           	pop de
 241+ 9184 7B           	ld a,e
 242+ 9185 AE           	xor (hl)
 243+ 9186 77           	ld (hl),a
 244+ 9187 24            	inc h
 245+ 9188 7C               ld a,h
 246+ 9189 E6 07            and 7
 247+ 918B 20 0A            jr nz,2F
 248+ 918D 7D               ld a,l
 249+ 918E C6 20            add a,$20
 250+ 9190 6F               ld l,a
 251+ 9191 38 04            jr c,2F
 252+ 9193 7C               ld a,h
 253+ 9194 D6 08            sub 8
 254+ 9196 67               ld h,a
 255+ 9197 7C           2 ld a,h
 256+ 9198 FE 58            cp $58
 257+ 919A 28 1B            jr z,4F
 258+ 919C D1               pop de
 259+ 919D 7A           	ld a,d
 260+ 919E AE           	xor (hl)
 261+ 919F 77           	ld (hl),a
 262+ 91A0 24           	inc h
 263+ 91A1 7C               ld a,h
 264+ 91A2 E6 07            and 7
 265+ 91A4 20 0A            jr nz,3F
 266+ 91A6 7D               ld a,l
 267+ 91A7 C6 20            add a,$20
 268+ 91A9 6F               ld l,a
 269+ 91AA 38 04            jr c,3F
 270+ 91AC 7C               ld a,h
 271+ 91AD D6 08            sub 8
 272+ 91AF 67               ld h,a
 273+ 91B0 7C           3 ld a,h
 274+ 91B1 FE 58            cp $58
 275+ 91B3 28 02            jr z,4F
 276+ 91B5 10 CB            djnz 1B
 277+ 91B7 ED 7B DF 85  4 ld sp,(Stack)
 278+ 91BB C9           	ret
 279+ 91BC
 280+ 91BC ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 91C0 FD F9        	ld sp,iy
 282+ 91C2 06 08            ld b,8
 283+ 91C4 D1           1 pop de
 284+ 91C5 7B           	ld a,e
 285+ 91C6 AE           	xor (hl)
 286+ 91C7 77           	ld (hl),a
 287+ 91C8 23           	inc hl
 288+ 91C9 7A           	ld a,d
 289+ 91CA AE           	xor (hl)
 290+ 91CB 77           	ld (hl),a
 291+ 91CC 2B           	dec hl
 292+ 91CD 24             	inc h
 293+ 91CE 7C               ld a,h
 294+ 91CF E6 07            and 7
 295+ 91D1 20 0A            jr nz,2F
 296+ 91D3 7D               ld a,l
 297+ 91D4 C6 20            add a,$20
 298+ 91D6 6F               ld l,a
 299+ 91D7 38 04            jr c,2F
 300+ 91D9 7C               ld a,h
 301+ 91DA D6 08            sub 8
 302+ 91DC 67               ld h,a
 303+ 91DD 7C           2 ld a,h
 304+ 91DE FE 58            cp $58
 305+ 91E0 28 21            jr z,4F
 306+ 91E2 D1               pop de
 307+ 91E3 7A           	ld a,d
 308+ 91E4 AE           	xor (hl)
 309+ 91E5 77           	ld (hl),a
 310+ 91E6 23           	inc hl
 311+ 91E7 D1               pop de
 312+ 91E8 7B           	ld a,e
 313+ 91E9 AE           	xor (hl)
 314+ 91EA 77           	ld (hl),a
 315+ 91EB 2B           	dec hl
 316+ 91EC 24           	inc h
 317+ 91ED 7C               ld a,h
 318+ 91EE E6 07            and 7
 319+ 91F0 20 0A            jr nz,3F
 320+ 91F2 7D               ld a,l
 321+ 91F3 C6 20            add a,$20
 322+ 91F5 6F               ld l,a
 323+ 91F6 38 04            jr c,3F
 324+ 91F8 7C               ld a,h
 325+ 91F9 D6 08            sub 8
 326+ 91FB 67               ld h,a
 327+ 91FC 7C           3 ld a,h
 328+ 91FD FE 58            cp $58
 329+ 91FF 28 02            jr z,4F
 330+ 9201 10 C1            djnz 1B
 331+ 9203 ED 7B DF 85  4 ld sp,(Stack)
 332+ 9207 C9           	ret
 333+ 9208
 334+ 9208 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 920C FD F9        	ld sp,iy
 336+ 920E 06 08            ld b,8
 337+ 9210 D1           1 pop de
 338+ 9211 7B           	ld a,e
 339+ 9212 AE           	xor (hl)
 340+ 9213 77           	ld (hl),a
 341+ 9214 24            	inc h
 342+ 9215 7C               ld a,h
 343+ 9216 E6 07            and 7
 344+ 9218 20 0A            jr nz,2F
 345+ 921A 7D               ld a,l
 346+ 921B C6 20            add a,$20
 347+ 921D 6F               ld l,a
 348+ 921E 38 04            jr c,2F
 349+ 9220 7C               ld a,h
 350+ 9221 D6 08            sub 8
 351+ 9223 67               ld h,a
 352+ 9224 7C           2 ld a,h
 353+ 9225 FE 58            cp $58
 354+ 9227 28 1C            jr z,4F
 355+ 9229 D1               pop de
 356+ 922A 7A           	ld a,d
 357+ 922B AE           	xor (hl)
 358+ 922C 77           	ld (hl),a
 359+ 922D 24           	inc h
 360+ 922E 7C               ld a,h
 361+ 922F E6 07            and 7
 362+ 9231 20 0A            jr nz,3F
 363+ 9233 7D               ld a,l
 364+ 9234 C6 20            add a,$20
 365+ 9236 6F               ld l,a
 366+ 9237 38 04            jr c,3F
 367+ 9239 7C               ld a,h
 368+ 923A D6 08            sub 8
 369+ 923C 67               ld h,a
 370+ 923D 7C           3 ld a,h
 371+ 923E FE 58            cp $58
 372+ 9240 28 03            jr z,4F
 373+ 9242 D1               pop de
 374+ 9243 10 CB            djnz 1B
 375+ 9245 ED 7B DF 85  4 ld sp,(Stack)
 376+ 9249 C9           	ret
 377+ 924A
 378+ 924A              ; ---------------------------------------------------
 379+ 924A              ;
 380+ 924A              ;   27/02/23
 381+ 924A              ;
 382+ 924A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 924A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 924A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 924A
 386+ 924A ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 924E FD F9            ld sp,iy
 388+ 9250 06 02            ld b,2
 389+ 9252 D1           1 pop de
 390+ 9253 7B               ld a,e
 391+ 9254 AE               xor (hl)
 392+ 9255 77               ld (hl),a
 393+ 9256 23               inc hl
 394+ 9257 7A               ld a,d
 395+ 9258 AE               xor (hl)
 396+ 9259 77               ld (hl),a
 397+ 925A 2B               dec hl
 398+ 925B
 399+ 925B 24               inc h
 400+ 925C 7C               ld a,h
 401+ 925D E6 07            and 7
 402+ 925F 20 0A            jr nz,2F
 403+ 9261 7D               ld a,l
 404+ 9262 C6 20            add a,$20
 405+ 9264 6F               ld l,a
 406+ 9265 38 04            jr c,2F
 407+ 9267 7C               ld a,h
 408+ 9268 D6 08            sub 8
 409+ 926A 67               ld h,a
 410+ 926B 7C           2 ld a,h
 411+ 926C FE 58            cp $58
 412+ 926E 28 02            jr z,3F
 413+ 9270
 414+ 9270 10 E0            djnz 1B
 415+ 9272 ED 7B DF 85  3 ld sp,(Stack)
 416+ 9276 C9               ret
 417+ 9277
# file closed: Rutinas_de_impresion_sprites.asm
 920  9277              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9277              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9277              ;
   3+ 9277              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9277              ;
   5+ 9277              ; *****************************************************************************************************************************************************************************************
   6+ 9277              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9277
   8+ 9277 7C           calcula_tercio ld a,h
   9+ 9278 E6 18        	and $18
  10+ 927A CB 2F        	sra a
  11+ 927C CB 2F        	sra a
  12+ 927E CB 2F        	sra a
  13+ 9280 C9           	ret
  14+ 9281
# file closed: calcula_tercio.asm
 921  9281              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9281              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9281              ;
   3+ 9281              ;
   4+ 9281              ;	CLS.
   5+ 9281              ;
   6+ 9281              ;	Limpia la pantalla y define sus atributos.
   7+ 9281              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9281              ;
   9+ 9281              ;	COLORES: 0 ..... NEGRO
  10+ 9281              ;    		 1 ..... AZUL
  11+ 9281              ; 			 2 ..... ROJO
  12+ 9281              ;			 3 ..... MAGENTA
  13+ 9281              ; 			 4 ..... VERDE
  14+ 9281              ; 			 5 ..... CIAN
  15+ 9281              ;			 6 ..... AMARILLO
  16+ 9281              ; 			 7 ..... BLANCO
  17+ 9281              ;
  18+ 9281              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9281              ;
  20+ 9281              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9281
  22+ 9281
  23+ 9281 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9284 11 01 40     	LD DE,$4001
  25+ 9287 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 928A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 928C ED B0        	LDIR
  28+ 928E 01 FF 02     	LD BC,767
  29+ 9291 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9292 ED B0        	LDIR
  31+ 9294 C9           	ret
  32+ 9295
# file closed: Cls.asm
 922  9295              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9295              ; ******************************************************************************************************************************************************************************************
   2+ 9295              ;
   3+ 9295              ;   22/01/23
   4+ 9295              ;
   5+ 9295              ;	Mov_down
   6+ 9295              ;
   7+ 9295              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9295              ;
   9+ 9295              ;
  10+ 9295 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9298 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 929A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 929A              ; 																	; _ en el caso de que no lo haya.
  14+ 929A 3A B3 85     	ld a,(Vel_down)
  15+ 929D 47           	ld b,a
  16+ 929E 2A 9D 85         ld hl,(Posicion_actual)
  17+ 92A1 CD 77 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 92A4 E6 02        	and 2
  19+ 92A6 28 0F        	jr z,1F
  20+ 92A8
  21+ 92A8              ; Nos encontramos en el último tercio de pantalla.
  22+ 92A8              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 92A8
  24+ 92A8 7C           	ld a,h
  25+ 92A9 FE 57        	cp $57
  26+ 92AB 20 0A        	jr nz,1F
  27+ 92AD 7D           	ld a,l
  28+ 92AE C6 20        	add $20
  29+ 92B0 30 05        	jr nc,1F
  30+ 92B2
  31+ 92B2              ; ------------------------------
  32+ 92B2 CD 8D 95     	call Reaparece_arriba
  33+ 92B5              ;	call Reinicio
  34+ 92B5              ; ------------------------------
  35+ 92B5
  36+ 92B5 18 08        	jr 3F
  37+ 92B7 CD B7 8F     1 call NextScan
  38+ 92BA 22 9D 85     	ld (Posicion_actual),hl
  39+ 92BD 10 E2            djnz 2B
  40+ 92BF CD A3 95     3 call Genera_coordenadas
  41+ 92C2 C9           	ret
  42+ 92C3
  43+ 92C3              ; ******************************************************************************************************************************************************************************************
  44+ 92C3              ;
  45+ 92C3              ;   22/01/23
  46+ 92C3              ;
  47+ 92C3              ;	Mov_up
  48+ 92C3              ;
  49+ 92C3              ; 	Mueve el Sprite hacia arriba.
  50+ 92C3              ;
  51+ 92C3              ;
  52+ 92C3 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 92C6 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 92C8              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 92C8              ; 																		; _ en el caso de que no lo haya.
  56+ 92C8 3A B2 85     	ld a,(Vel_up)
  57+ 92CB 47           	ld b,a
  58+ 92CC 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 92CF CD 77 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 92D2 A7           	and a
  61+ 92D3 20 10        	jr nz,1F
  62+ 92D5
  63+ 92D5              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 92D5              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 92D5
  66+ 92D5 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 92D6 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 92D8 20 0B            jr nz,1F
  69+ 92DA 7D               ld a,l
  70+ 92DB D6 20            sub $20
  71+ 92DD 30 06            jr nc,1F
  72+ 92DF 25               dec h
  73+ 92E0
  74+ 92E0              ; -----------------------------
  75+ 92E0 CD 7D 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 92E3              ;	call Reinicio
  77+ 92E3              ; -----------------------------
  78+ 92E3
  79+ 92E3 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 92E5 CD C6 8F     1 call PreviousScan
  81+ 92E8 22 9D 85     	ld (Posicion_actual),hl
  82+ 92EB 10 E2            djnz 3B
  83+ 92ED CD A3 95     2 call Genera_coordenadas
  84+ 92F0 C9           	ret
  85+ 92F1
  86+ 92F1              ; ******************************************************************************************************************************************************************************************
  87+ 92F1              ;
  88+ 92F1              ;	19/10/22
  89+ 92F1              ;
  90+ 92F1              ;	Mov_right.
  91+ 92F1              ;
  92+ 92F1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 92F1              ;
  94+ 92F1
  95+ 92F1 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 92F4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 92F6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 92F6              ; 																	; _ en el caso de que no lo haya.
  99+ 92F6 3A C9 85     	ld a,(Ctrl_0)
 100+ 92F9 CB 77        	bit 6,a
 101+ 92FB 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 92FD
 103+ 92FD CD 2B 95     	call Stop_Amadeus_right
 104+ 9300 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9301 18 4D        	jr 8F
 106+ 9303
 107+ 9303 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9306 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9308 20 46        	jr nz,8F
 110+ 930A
 111+ 930A 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 930D A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 930E 28 40        	jr z,8F
 114+ 9310
 115+ 9310              ; ---------- ---------- ----------
 116+ 9310              ;
 117+ 9310              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9310
 119+ 9310 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9313 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9315 28 11        	jr z,1F
 122+ 9317 38 06        	jr c,6F
 123+ 9319 FE 04        	cp 4
 124+ 931B 28 14        	jr z,7F
 125+ 931D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 931F
 127+ 931F              ; ---------- ---------- ----------
 128+ 931F              ;
 129+ 931F              ; Perfiles de velocidad
 130+ 931F              ;
 131+ 931F
 132+ 931F 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9322 FE FE        	cp $fe
 134+ 9324 20 2A        	jr nz,8F
 135+ 9326 18 10        	jr 3F
 136+ 9328 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 932B FE FD        	cp $fd
 138+ 932D 20 21        	jr nz,8F
 139+ 932F 18 07        	jr 3F
 140+ 9331 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9334 FE FB        	cp $fb
 142+ 9336 20 18        	jr nz,8F
 143+ 9338
 144+ 9338              ; ---------- ---------- ----------
 145+ 9338
 146+ 9338              3
 147+ 9338 CD 6B 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 933B              ;	call Reinicio
 149+ 933B
 150+ 933B              ; ---------- ---------- ----------
 151+ 933B              ;
 152+ 933B              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 933B
 154+ 933B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 933D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 933E CD 57 93     	call DESPLZ_DER
 157+ 9341 C1           	pop bc
 158+ 9342 10 F9        	djnz 5B
 159+ 9344 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9347 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9348 22 9D 85     	ld (Posicion_actual),hl
 162+ 934B CD A3 95     	call Genera_coordenadas
 163+ 934E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9350
 165+ 9350              ; ---------- ---------- ----------
 166+ 9350
 167+ 9350 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 9353 CD 57 93     	call DESPLZ_DER
 169+ 9356 C9           2 ret
 170+ 9357
 171+ 9357              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9357              ;
 173+ 9357              ;	22/9/22
 174+ 9357              ;
 175+ 9357
 176+ 9357 CD 66 93     DESPLZ_DER call Desplaza_derecha
 177+ 935A CD B2 93         call modifica_parametros_1er_DESPLZ_2
 178+ 935D CD DB 93         call Ciclo_completo
 179+ 9360 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9363 CB FE        	set 7,(hl)
 181+ 9365 C9           	ret
 182+ 9366
 183+ 9366              ; ******************************************************************************************************************************************************************************************
 184+ 9366              ;	15/02/23
 185+ 9366              ;
 186+ 9366
 187+ 9366 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9369 47           	ld b,a
 189+ 936A 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 936D 23           1 inc hl
 191+ 936E 23           	inc hl
 192+ 936F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9371 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9374 CD B8 87     	call Extrae_address
 195+ 9377 22 9F 85     	ld (Puntero_objeto),hl
 196+ 937A
 197+ 937A              ; Modifica (Puntero_DESPLZ_izq).
 198+ 937A
 199+ 937A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 937A              ; Cuántos movimientos hemos hecho ??
 201+ 937A              ; DE contiene (Puntero_DESPLZ_der).
 202+ 937A
 203+ 937A 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 937D EB           	ex de,hl
 205+ 937E A7           	and a
 206+ 937F ED 52        	sbc hl,de
 207+ 9381 CB 3D        	srl l
 208+ 9383 3E 08        6 ld a,8
 209+ 9385 95           	sub l
 210+ 9386 30 1E        	jr nc,3F
 211+ 9388
 212+ 9388              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9388              ; B="0".
 214+ 9388
 215+ 9388 04           4 inc b
 216+ 9389 3C           	inc a
 217+ 938A 20 FC        	jr nz,4B
 218+ 938C 78           	ld a,b
 219+ 938D 08           	ex af,af
 220+ 938E 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9391 23           5 inc hl
 222+ 9392 23           	inc hl
 223+ 9393 10 FC        	djnz 5B
 224+ 9395 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9398 CD B8 87     	call Extrae_address
 226+ 939B 22 9F 85     	ld (Puntero_objeto),hl
 227+ 939E
 228+ 939E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 939E              ; _(Posicion_actual).
 230+ 939E
 231+ 939E 21 9D 85     	ld hl,Posicion_actual
 232+ 93A1 34           	inc (hl)
 233+ 93A2 08               ex af,af
 234+ 93A3 6F           	ld l,a
 235+ 93A4 18 DD        	jr 6B
 236+ 93A6
 237+ 93A6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 93A6
 239+ 93A6 47           3 ld b,a
 240+ 93A7 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 93AA 23           2 inc hl
 242+ 93AB 23           	inc hl
 243+ 93AC 10 FC        	djnz 2B
 244+ 93AE 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 93B1 C9           8 ret
 246+ 93B2
 247+ 93B2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 93B2              ;
 249+ 93B2              ;	24/7/22
 250+ 93B2              ;
 251+ 93B2              ;	modifica_parametros_1er_DESPLZ_2
 252+ 93B2              ;
 253+ 93B2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 93B2              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 93B2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 93B2
 257+ 93B2 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 93B5 A7           	and a
 259+ 93B6 20 1F        	jr nz,1F
 260+ 93B8 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 93BA 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 93BD
 263+ 93BD 21 9C 85     	ld hl,Columns
 264+ 93C0 34           	inc (hl)
 265+ 93C1 3A AF 85     	ld a,(Cuad_objeto)
 266+ 93C4 E6 01        	and 1
 267+ 93C6 28 0F        	jr z,1F
 268+ 93C8 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 93CB 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 93CC 22 9D 85     	ld (Posicion_actual),hl
 271+ 93CF CD A3 95     	call Genera_coordenadas
 272+ 93D2 CD 37 95     	call Inc_CTRL_DESPLZ
 273+ 93D5 18 03        	jr 2F
 274+ 93D7 CD 37 95     1 call Inc_CTRL_DESPLZ
 275+ 93DA C9           2 ret
 276+ 93DB
 277+ 93DB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 93DB              ;
 279+ 93DB              ;	24/7/22
 280+ 93DB              ;
 281+ 93DB              ;	Ciclo_completo.
 282+ 93DB              ;
 283+ 93DB              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 93DB              ;
 285+ 93DB              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 93DB              ; 	Decrementamos (Columns).
 287+ 93DB              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 93DB              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 93DB
 290+ 93DB
 291+ 93DB 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 93DE FE FF        	cp $ff
 293+ 93E0 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 93E2 E6 F0        	and $f0
 295+ 93E4 20 28        	jr nz,3F
 296+ 93E6
 297+ 93E6              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 93E6
 299+ 93E6 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 93E9 47           	ld b,a
 301+ 93EA 3E F8        	ld a,$f8
 302+ 93EC 80           	add b
 303+ 93ED 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 93F0 18 1C        	jr 3F
 305+ 93F2 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 93F5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 93F6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 93F7 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 93FA 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 93FD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93FF 20 0A        	jr nz,2F
 312+ 9401 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9404 23           	inc hl
 314+ 9405 22 9D 85     	ld (Posicion_actual),hl
 315+ 9408 CD A3 95     	call Genera_coordenadas
 316+ 940B
 317+ 940B              ; Inicia el puntero de Sprite.
 318+ 940B
 319+ 940B CD CF 87     2 call Inicia_puntero_objeto_der
 320+ 940E C9           3 ret
 321+ 940F
 322+ 940F              ; ******************************************************************************************************************************************************************************************
 323+ 940F              ;
 324+ 940F              ;	15/02/23
 325+ 940F              ;
 326+ 940F              ;	Mov_left.
 327+ 940F              ;
 328+ 940F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 940F              ;
 330+ 940F              Mov_left
 331+ 940F
 332+ 940F 21 C9 85     	ld hl,Ctrl_0
 333+ 9412 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9414              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9414              ; 																	; _ en el caso de que no lo haya.
 336+ 9414 3A C9 85     	ld a,(Ctrl_0)
 337+ 9417 CB 77        	bit 6,a
 338+ 9419 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 941B
 340+ 941B CD 31 95     	call Stop_Amadeus_left
 341+ 941E C8           	ret z
 342+ 941F 20 4A        	jr nz,8F
 343+ 9421
 344+ 9421 3A A1 85     11 ld a,(Coordenada_X)
 345+ 9424 A7           	and a
 346+ 9425 20 44        	jr nz,8F
 347+ 9427
 348+ 9427 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 942A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 942B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 942D
 352+ 942D              ; ---------- ---------- ----------
 353+ 942D
 354+ 942D 3A B0 85     	ld a,(Vel_left)
 355+ 9430 FE 02        	cp 2
 356+ 9432 28 0F        	jr z,1F
 357+ 9434 38 04        	jr c,6F
 358+ 9436 FE 04        	cp 4
 359+ 9438 28 12        	jr z,7F
 360+ 943A
 361+ 943A              ; ---------- ---------- ----------
 362+ 943A
 363+ 943A 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 943D FE F8        	cp $f8
 365+ 943F 20 2A        	jr nz,8F
 366+ 9441 18 10        	jr 4F
 367+ 9443 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 9446 FE F9        	cp $f9
 369+ 9448 20 21        	jr nz,8F
 370+ 944A 18 07        	jr 4F
 371+ 944C 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 944F FE FB        	cp $fb
 373+ 9451 20 18        	jr nz,8F
 374+ 9453
 375+ 9453              ; ---------- ---------- ----------
 376+ 9453
 377+ 9453              4
 378+ 9453 CD 59 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9456              ;	call Reinicio
 380+ 9456
 381+ 9456              ; ---------- ---------- ----------
 382+ 9456
 383+ 9456 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9458 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9459
 386+ 9459              ;	ld hl,(Indice_Sprite_izq)
 387+ 9459              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9459
 389+ 9459 CD 72 94     	call DESPLZ_IZQ
 390+ 945C C1           	pop bc
 391+ 945D 10 F9        	djnz 5B
 392+ 945F 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9462 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9463 22 9D 85     	ld (Posicion_actual),hl
 395+ 9466 CD A3 95     	call Genera_coordenadas
 396+ 9469 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 946B
 398+ 946B              ; ---------- ---------- ----------
 399+ 946B
 400+ 946B              ; Movemos, no hay recolocación.
 401+ 946B
 402+ 946B 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 946E CD 72 94     	call DESPLZ_IZQ
 404+ 9471 C9           2 ret
 405+ 9472
 406+ 9472              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9472              ;
 408+ 9472              ;	22/9/22
 409+ 9472
 410+ 9472              DESPLZ_IZQ
 411+ 9472
 412+ 9472 CD 81 94     	call Desplaza_izquierda
 413+ 9475 CD CD 94         call modifica_parametros_1er_DESPLZ
 414+ 9478 CD F5 94     	call Ciclo_completo_2
 415+ 947B 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 947E CB BE        	res 7,(hl)
 417+ 9480 C9           	ret
 418+ 9481
 419+ 9481              Desplaza_izquierda
 420+ 9481
 421+ 9481 3A B0 85     	ld a,(Vel_left)
 422+ 9484 47           	ld b,a
 423+ 9485 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9488 23           1 inc hl
 425+ 9489 23           	inc hl
 426+ 948A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 948C 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 948F CD B8 87     	call Extrae_address
 429+ 9492 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9495
 431+ 9495              ; Modifica (Puntero_DESPLZ_der).
 432+ 9495
 433+ 9495              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9495              ; Cuántos movimientos hemos hecho ??
 435+ 9495              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9495
 437+ 9495 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9498 EB           	ex de,hl
 439+ 9499 A7           	and a
 440+ 949A ED 52        	sbc hl,de
 441+ 949C CB 3D        	srl l
 442+ 949E 3E 08        6 ld a,8
 443+ 94A0 95           	sub l
 444+ 94A1 30 1E        	jr nc,3F
 445+ 94A3
 446+ 94A3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 94A3              ; B="0".
 448+ 94A3
 449+ 94A3 04           4 inc b
 450+ 94A4 3C           	inc a
 451+ 94A5 20 FC        	jr nz,4B
 452+ 94A7 78           	ld a,b
 453+ 94A8 08           	ex af,af
 454+ 94A9 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 94AC 23           5 inc hl
 456+ 94AD 23           	inc hl
 457+ 94AE 10 FC        	djnz 5B
 458+ 94B0 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 94B3 CD B8 87     	call Extrae_address
 460+ 94B6 22 9F 85     	ld (Puntero_objeto),hl
 461+ 94B9
 462+ 94B9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 94B9              ; _(Posicion_actual).
 464+ 94B9
 465+ 94B9 21 9D 85     	ld hl,Posicion_actual
 466+ 94BC 35           	dec (hl)
 467+ 94BD 08           	ex af,af
 468+ 94BE 6F           	ld l,a
 469+ 94BF 18 DD        	jr 6B
 470+ 94C1
 471+ 94C1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 94C1
 473+ 94C1 47           3 ld b,a
 474+ 94C2 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 94C5 23           2 inc hl
 476+ 94C6 23           	inc hl
 477+ 94C7 10 FC        	djnz 2B
 478+ 94C9 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 94CC C9           8 ret
 480+ 94CD
 481+ 94CD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 94CD              ;
 483+ 94CD              ;	modifica_parametros_1er_DESPLZ
 484+ 94CD              ;
 485+ 94CD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 94CD              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 94CD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 94CD
 489+ 94CD 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 94D0 A7           	and a
 491+ 94D1 20 1E        	jr nz,1F
 492+ 94D3 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 94D4 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 94D7 21 9C 85     	ld hl,Columns
 495+ 94DA 34           	inc (hl)
 496+ 94DB 3A AF 85     	ld a,(Cuad_objeto)
 497+ 94DE E6 01        	and 1
 498+ 94E0 20 0F        	jr nz,1F
 499+ 94E2 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 94E5 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 94E6 22 9D 85     	ld (Posicion_actual),hl
 502+ 94E9 CD A3 95     	call Genera_coordenadas
 503+ 94EC CD 48 95     	call Dec_CTRL_DESPLZ
 504+ 94EF 18 03        	jr 2F
 505+ 94F1 CD 48 95     1 call Dec_CTRL_DESPLZ
 506+ 94F4 C9           2 ret
 507+ 94F5
 508+ 94F5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 94F5
 510+ 94F5 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 94F8 FE F7        	cp $f7
 512+ 94FA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 94FC 30 2C        	jr nc,3F
 514+ 94FE
 515+ 94FE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94FE
 517+ 94FE 06 00        	ld b,0
 518+ 9500 04           4 inc b
 519+ 9501 3C           	inc a
 520+ 9502 FE F7        	cp $f7
 521+ 9504 20 FA        	jr nz,4B
 522+ 9506 3E FF        	ld a,$ff
 523+ 9508 90           	sub b
 524+ 9509 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 950C 18 1C        	jr 3F
 526+ 950E
 527+ 950E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 950E
 529+ 950E 21 9C 85     1 ld hl,Columns
 530+ 9511 35           	dec (hl)
 531+ 9512 AF           	xor a
 532+ 9513 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 9516 3A AF 85     	ld a,(Cuad_objeto)
 534+ 9519 E6 01        	and 1
 535+ 951B 28 0A        	jr z,2F
 536+ 951D 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9520 2B           	dec hl
 538+ 9521 22 9D 85     	ld (Posicion_actual),hl
 539+ 9524 CD A3 95     	call Genera_coordenadas
 540+ 9527
 541+ 9527              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9527
 543+ 9527 CD E2 87     2 call Inicia_puntero_objeto_izq
 544+ 952A C9           3 ret
 545+ 952B
 546+ 952B              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 952B              ;
 548+ 952B              ;	19/10/22
 549+ 952B              ;
 550+ 952B              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 952B              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 952B
 553+ 952B 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 952E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9530 C9           	ret
 556+ 9531
 557+ 9531              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9531              ;
 559+ 9531              ;	19/10/22
 560+ 9531              ;
 561+ 9531              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9531              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9531
 564+ 9531 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9534 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9536 C9           	ret
 567+ 9537
 568+ 9537              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9537              ;
 570+ 9537              ;	24/7/22
 571+ 9537              ;
 572+ 9537              ;	Inc_CTRL_DESPLZ
 573+ 9537              ;
 574+ 9537              ;
 575+ 9537              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9537
 577+ 9537 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 953A 3A B1 85     	ld a,(Vel_right)
 579+ 953D A7           	and a
 580+ 953E 28 06        	jr z,1F
 581+ 9540 47           	ld b,a
 582+ 9541 34           3 inc (hl)
 583+ 9542 10 FD        	djnz 3B
 584+ 9544 18 01        	jr 2F
 585+ 9546 34           1 inc (hl)
 586+ 9547 C9           2 ret
 587+ 9548
 588+ 9548              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9548              ;
 590+ 9548              ;	5/2/23
 591+ 9548              ;
 592+ 9548              ;	Dec_CTRL_DESPLZ
 593+ 9548              ;
 594+ 9548              ;
 595+ 9548              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9548
 597+ 9548 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 954B 3A B0 85     	ld a,(Vel_left)
 599+ 954E A7           	and a
 600+ 954F 28 06        	jr z,1F
 601+ 9551 47           	ld b,a
 602+ 9552 35           3 dec (hl)
 603+ 9553 10 FD        	djnz 3B
 604+ 9555 18 01        	jr 2F
 605+ 9557 35           1 dec (hl)
 606+ 9558 C9           2 ret
 607+ 9559
 608+ 9559              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9559
 610+ 9559 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 955C 01 1F 00     	ld bc,31
 612+ 955F A7           	and a
 613+ 9560 ED 4A        	adc hl,bc
 614+ 9562 22 9D 85     	ld (Posicion_actual),hl
 615+ 9565 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9568 CB C6        	set 0,(hl)
 617+ 956A C9           	ret
 618+ 956B
 619+ 956B              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 956B
 621+ 956B 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 956E 01 1F 00     	ld bc,31
 623+ 9571 A7           	and a
 624+ 9572 ED 42        	sbc hl,bc
 625+ 9574 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9577 21 C9 85     	ld hl,Ctrl_0
 627+ 957A CB CE        	set 1,(hl)
 628+ 957C C9           	ret
 629+ 957D
 630+ 957D              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 957D
 632+ 957D 24           Reaparece_abajo inc h
 633+ 957E 01 E0 17     	ld bc,$17e0
 634+ 9581 A7           	and a
 635+ 9582 ED 4A        	adc hl,bc
 636+ 9584 22 9D 85     	ld (Posicion_actual),hl
 637+ 9587 21 C9 85     	ld hl,Ctrl_0
 638+ 958A CB D6        	set 2,(hl)
 639+ 958C C9           	ret
 640+ 958D
 641+ 958D              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 958D
 643+ 958D 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9590 A7           	and a
 645+ 9591 ED 42        	sbc hl,bc
 646+ 9593 22 9D 85     	ld (Posicion_actual),hl
 647+ 9596 21 C9 85     	ld hl,Ctrl_0
 648+ 9599 CB DE        	set 3,(hl)
 649+ 959B C9           	ret
 650+ 959C
 651+ 959C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 959C
 653+ 959C 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 959F 22 9D 85     	ld (Posicion_actual),hl
 655+ 95A2 C9           	ret
# file closed: Direcciones.asm
 923  95A3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 95A3              ; ------------------------------------------------------------------------
   2+ 95A3              ;
   3+ 95A3              ;	02/04/23
   4+ 95A3              ;
   5+ 95A3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 95A3              ;	Fila superior "0", Columna izquierda "0".
   7+ 95A3              ;
   8+ 95A3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 95A3              ;
  10+ 95A3              ;	Modifica: A,BC y DE.
  11+ 95A3
  12+ 95A3 C5           Genera_coordenadas push bc
  13+ 95A4 E5           	push hl
  14+ 95A5 D5           	push de
  15+ 95A6
  16+ 95A6 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 95A9
  18+ 95A9 7D           	ld a,l
  19+ 95AA E6 1F        	and $1f
  20+ 95AC 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 95AF
  22+ 95AF CD 77 92     	call calcula_tercio
  23+ 95B2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 95B3
  25+ 95B3 1E 00        	ld e,0
  26+ 95B5 7D           	ld a,l
  27+ 95B6 E6 E0        	and $e0
  28+ 95B8 28 01        	jr z,1F
  29+ 95BA 04           	inc b
  30+ 95BB
  31+ 95BB 04           1 inc b
  32+ 95BC 05           	dec b
  33+ 95BD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 95BF              ;														; _ , salimos.
  35+ 95BF 1C           3 inc e
  36+ 95C0 D6 20        	sub 32
  37+ 95C2 20 FB        	jr nz,3B
  38+ 95C4 10 F5        	djnz 1B
  39+ 95C6
  40+ 95C6 7B           2 ld a,e
  41+ 95C7 32 A2 85     	ld (Coordenada_y),a
  42+ 95CA
  43+ 95CA D1           	pop de
  44+ 95CB E1           	pop hl
  45+ 95CC C1           	pop bc
  46+ 95CD
  47+ 95CD C9           	ret
  48+ 95CE
  49+ 95CE              ; ------------------------------------------------------------------------
  50+ 95CE              ;	28/03/23
  51+ 95CE              ;
  52+ 95CE              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 95CE              ;	Fila superior "0", Columna izquierda "0".
  54+ 95CE              ;
  55+ 95CE              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 95CE              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 95CE              ;
  58+ 95CE              ;		DE="$120d"
  59+ 95CE              ;
  60+ 95CE              ;		D, (Coordenada_X), Columnas, $12
  61+ 95CE              ;		E, (Coordenada_y), Filas, $0d
  62+ 95CE              ;
  63+ 95CE              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 95CE
  65+ 95CE              ;	Modifica: A,BC y DE.
  66+ 95CE
  67+ 95CE
  68+ 95CE              Genera_coordenadas_disparo
  69+ 95CE
  70+ 95CE              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 95CE
  72+ 95CE 7D           	ld a,l
  73+ 95CF E6 1F        	and $1f
  74+ 95D1 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 95D2 CD 77 92     	call calcula_tercio
  76+ 95D5 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 95D6 1E 00        	ld e,0
  78+ 95D8 7D           	ld a,l
  79+ 95D9 E6 E0        	and $e0
  80+ 95DB 28 01        	jr z,1F
  81+ 95DD 04           	inc b
  82+ 95DE 1C           1 inc e
  83+ 95DF D6 20        	sub 32
  84+ 95E1 20 FB        	jr nz,1B
  85+ 95E3 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 95E5 C9           	ret
  87+ 95E6
# file closed: Genera_coordenadas.asm
 924  95E6              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 95E6
   2+ 95E6
   3+ 95E6              ;   11/8/22
   4+ 95E6              ;
   5+ 95E6              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 95E6              ;
   7+ 95E6              ;   Mov_obj.asm
   8+ 95E6              ;
   9+ 95E6              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 95E6              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 95E6              ;
  12+ 95E6              ;   Codificación:
  13+ 95E6              ;
  14+ 95E6              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 95E6
  16+ 95E6              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 95E6
  18+ 95E6 02 40 00     Arriba db 2,%01000000,0
  19+ 95E9 02 80 00     Abajo db 2,%10000000,0
  20+ 95EC 02 20 00     Derecha db 2,%00100000,0
  21+ 95EF 02 10 00     Izquierda db 2,%00010000,0
  22+ 95F2 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 95F6 60 42 60 40
  22+ 95FA 63
  23+ 95FB 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95FF 22 A3 80 A0
  24+ 9603 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9607 84 A0 83 A0
  25+ 960B 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 960F 80 A3 22 A0
  26+ 9613 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9617 40 60 42 60
  27+ 961B 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 961F
  29+ 961F 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9623 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9627 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 962B 84 00
  32+ 962D 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9631 84 00
  33+ 9633 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9637 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 963B 1F 1F 1F 1F
  35+ 963F 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9643 1F 1F 1F 1F
  35+ 9647 1F
  36+ 9648 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 964C 2F 2F 2F 2F
  36+ 9650 2F 2F
  37+ 9652 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9656 2F 2F 00
  38+ 9659
  39+ 9659              ; ----- ----- ----- ----- -----
  40+ 9659
  41+ 9659 37 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 965B 33 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 965D EF 95        Indice_mov_Izquierda defw Izquierda
  44+ 965F EC 95        Indice_mov_Derecha defw Derecha
  45+ 9661 E9 95        Indice_mov_Abajo defw Abajo
  46+ 9663 E6 95        Indice_mov_Arriba defw Arriba
  47+ 9665 23 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9667 27 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9669 1F 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 966B 2D 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 966D F2 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 966F              ; ----- ----- ----- ----- -----
  53+ 966F
  54+ 966F 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9672 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9673 28 02            jr z,1F
  57+ 9675 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9677 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 967A C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 967C 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 967F              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 967F 2A CD 85         ld hl,(Puntero_mov)
  63+ 9682 7E               ld a,(hl)
  64+ 9683 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9686 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9687 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 968A
  68+ 968A 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 968D A7               and a
  70+ 968E 20 0C            jr nz,12F
  71+ 9690 2A CD 85         ld hl,(Puntero_mov)
  72+ 9693 7E               ld a,(hl)
  73+ 9694 A7               and a
  74+ 9695 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9697 E6 0F            and $0f
  76+ 9699 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 969C              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 969C 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 969F CB 7E            bit 7,(hl)
  80+ 96A1 28 03            jr z,2F
  81+ 96A3 CD 95 92         call Mov_down
  82+ 96A6 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 96A9 CB 76            bit 6,(hl)
  84+ 96AB 28 03            jr z,3F
  85+ 96AD CD C3 92         call Mov_up
  86+ 96B0 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 96B3 CB 6E            bit 5,(hl)
  88+ 96B5 28 03            jr z,4F
  89+ 96B7 CD F1 92         call Mov_right
  90+ 96BA 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 96BD CB 66            bit 4,(hl)
  92+ 96BF 28 03            jr z,5F
  93+ 96C1 CD 0F 94         call Mov_left
  94+ 96C4
  95+ 96C4              ; ---------- --------- --------- ---------- ----------
  96+ 96C4
  97+ 96C4 3A D1 85     5 ld a,(Repetimos_db)
  98+ 96C7 A7               and a
  99+ 96C8 28 07            jr z,6F
 100+ 96CA 3D               dec a
 101+ 96CB 32 D1 85         ld (Repetimos_db),a
 102+ 96CE 28 01            jr z,6f
 103+ 96D0 C9           11 ret
 104+ 96D1 21 CF 85     6 ld hl,Contador_db_mov
 105+ 96D4 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 96D5 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 96D8 23               inc hl
 108+ 96D9 22 CD 85         ld (Puntero_mov),hl
 109+ 96DC 18 F2            jr 11B
 110+ 96DE 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 96E1 3A D0 85         ld a,(Incrementa_puntero)
 112+ 96E4 47               ld b,a
 113+ 96E5 23           8 inc hl
 114+ 96E6 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 96E8 5E               ld e,(hl)
 116+ 96E9 23               inc hl
 117+ 96EA 56               ld d,(hl)
 118+ 96EB EB               ex de,hl
 119+ 96EC 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 96EF 18 DF            jr 11B
 121+ 96F1
 122+ 96F1              ; ---------- --------- --------- ---------- ----------
 123+ 96F1              ;
 124+ 96F1              ;   11/8/22
 125+ 96F1              ;
 126+ 96F1              ;   Prepara_Puntero_mov
 127+ 96F1
 128+ 96F1 E5           Prepara_Puntero_mov push hl
 129+ 96F2 D5               push de
 130+ 96F3 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 96F6 5E               ld e,(hl)
 132+ 96F7 23               inc hl
 133+ 96F8 56               ld d,(hl)
 134+ 96F9 EB               ex de,hl
 135+ 96FA 22 CD 85         ld (Puntero_mov),hl
 136+ 96FD D1               pop de
 137+ 96FE E1               pop hl
 138+ 96FF C9               ret
 139+ 9700
 140+ 9700              ; ---------- --------- --------- ---------- ----------
 141+ 9700              ;
 142+ 9700              ;   11/8/22
 143+ 9700              ;
 144+ 9700              ;   Reinicia_el_movimiento
 145+ 9700
 146+ 9700 CD F1 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9703 AF               xor a
 148+ 9704 32 CF 85         ld (Contador_db_mov),a
 149+ 9707 32 D0 85         ld (Incrementa_puntero),a
 150+ 970A C3 6F 96         jp Movimiento
 151+ 970D C9               ret
 152+ 970E              ; ---------- --------- --------- ---------- ----------
 153+ 970E
 154+ 970E
 155+ 970E
 156+ 970E
 157+ 970E
 158+ 970E
 159+ 970E
 160+ 970E
 161+ 970E
 162+ 970E
 163+ 970E
 164+ 970E
 165+ 970E
 166+ 970E
 167+ 970E
 168+ 970E
 169+ 970E
 170+ 970E
# file closed: Patrones_de_mov.asm
 925  970E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 970E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 970E              ;
   3+ 970E              ;	3/1/23
   4+ 970E              ;
   5+ 970E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 970E
   7+ 970E              ;	ADC HL,SP	LD (addr),SP
   8+ 970E              ;	ADD HL,SP	LD SP,(addr)
   9+ 970E              ;	ADD IX,SP	LD SP,nn
  10+ 970E              ; 	ADD IY,SP	LD SP,HL
  11+ 970E              ;				LD SP,IX
  12+ 970E              ;	DEC SP		LD SP,IY
  13+ 970E
  14+ 970E              ;	EX (SP),HL
  15+ 970E              ;	EX (SP),IX
  16+ 970E              ;	EX (SP),IY
  17+ 970E
  18+ 970E              ;	INC SP
  19+ 970E
  20+ 970E
  21+ 970E                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 926  7FD4
 927  7FD4              	SAVESNA "Pruebas.sna", START
 928  7FD4
 929  7FD4
 930  7FD4
# file closed: Banco_de_pruebas.asm
