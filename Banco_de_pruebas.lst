# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD 25 8E     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 43 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 49 89        	defw End_Snapshot_1
 267+ 8500 4D 89        	defw End_Snapshot_2
 268+ 8502 51 89        	defw End_Snapshot_3
 269+ 8504 45 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 4B 89        	defw End_Snapshot_disparos_1
 271+ 8508 4F 89        	defw End_Snapshot_disparos_2
 272+ 850A 53 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E1 85        	defw Caja_1
  98+ 858E 24 86        	defw Caja_2
  99+ 8590 67 86        	defw Caja_3
 100+ 8592 AA 86        	defw Caja_4
 101+ 8594 ED 86        	defw Caja_5
 102+ 8596 30 87        	defw Caja_6
 103+ 8598 73 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00        	db 0,0											; Variables_de_borrado
 129+ 85BA 00 00        	defw 0											;	" " " " " " "
 130+ 85BC 00 00        	defw 0											;	" " " " " " "
 131+ 85BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 132+ 85C2
 133+ 85C2 00 00        	db 0,0											; Variables_de_pintado
 134+ 85C4 00 00        	defw 0											;	" " " " " " "
 135+ 85C6 00 00        	defw 0											;	" " " " " " "
 136+ 85C8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85CC
 138+ 85CC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 139+ 85CE
 140+ 85CE 00           	db 0											; (Autoriza_movimiento).
 141+ 85CF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 141+ 85D3 00 00
 142+ 85D5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 143+ 85D8
 144+ 85D8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85DA 00           	db 0											; (Cola_de_desplazamiento).
 146+ 85DB
 147+ 85DB 00           	db 0 											; (Columnas).
 148+ 85DC 00 00        	defw 0											; (Limite_horizontal).
 149+ 85DE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 150+ 85E1
 151+ 85E1              ; ---------- ---------- ---------- ---------- ----------
 152+ 85E1
 153+ 85E1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 154+ 85E3 00 00        	defw 0											; (Posicion_actual).
 155+ 85E5 00 00        	defw 0 											; (Puntero_objeto).
 156+ 85E7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 157+ 85EA
 158+ 85EA 00           	db %00000000 									; (Attr).
 159+ 85EB
 160+ 85EB 00 00        	defw 0											; (Indice_Sprite_der).
 161+ 85ED 00 00        	defw 0											; (Indice_Sprite_izq).
 162+ 85EF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 163+ 85F1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 164+ 85F3
 165+ 85F3 00 00        	defw 0											; (Posicion_inicio).
 166+ 85F5 00           	db 0											; (Cuad_objeto).
 167+ 85F6
 168+ 85F6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 169+ 85FA
 170+ 85FA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 171+ 85FB
 172+ 85FB 00 00        	db 0,0										    ; Variables_de_borrado
 173+ 85FD 00 00        	defw 0											;	" " " " " " "
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 176+ 8605
 177+ 8605 00 00        	db 0,0											; Variables_de_pintado
 178+ 8607 00 00        	defw 0											;	" " " " " " "
 179+ 8609 00 00        	defw 0											;	" " " " " " "
 180+ 860B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860F
 182+ 860F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 183+ 8611
 184+ 8611 00           	db 0											; (Autoriza_movimiento).
 185+ 8612 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 185+ 8616 00 00
 186+ 8618 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 187+ 861B
 188+ 861B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 189+ 861D 00           	db 0											; (Cola_de_desplazamiento).
 190+ 861E
 191+ 861E 00           	db 0 											; (Columnas).
 192+ 861F 00 00        	defw 0											; (Limite_horizontal).
 193+ 8621 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 194+ 8624
 195+ 8624              ; ---------- ---------- ---------- ---------- ----------
 196+ 8624
 197+ 8624 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 198+ 8626 00 00        	defw 0											; (Posicion_actual).
 199+ 8628 00 00        	defw 0 											; (Puntero_objeto).
 200+ 862A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 201+ 862D
 202+ 862D 00           	db %00000000 									; (Attr).
 203+ 862E
 204+ 862E 00 00        	defw 0											; (Indice_Sprite_der).
 205+ 8630 00 00        	defw 0											; (Indice_Sprite_izq).
 206+ 8632 00 00        	defw 0											; (Puntero_DESPLZ_der).
 207+ 8634 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 208+ 8636
 209+ 8636 00 00        	defw 0											; (Posicion_inicio).
 210+ 8638 00           	db 0											; (Cuad_objeto).
 211+ 8639
 212+ 8639 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 213+ 863D
 214+ 863D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 215+ 863E
 216+ 863E 00 00        	db 0,0										    ; Variables_de_borrado
 217+ 8640 00 00        	defw 0											;	" " " " " " "
 218+ 8642 00 00        	defw 0											;	" " " " " " "
 219+ 8644 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 8648
 221+ 8648 00 00        	db 0,0											; Variables_de_pintado
 222+ 864A 00 00        	defw 0											;	" " " " " " "
 223+ 864C 00 00        	defw 0											;	" " " " " " "
 224+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 8652
 226+ 8652 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 227+ 8654
 228+ 8654 00           	db 0											; (Autoriza_movimiento).
 229+ 8655 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 229+ 8659 00 00
 230+ 865B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 231+ 865E
 232+ 865E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 233+ 8660 00           	db 0											; (Cola_de_desplazamiento).
 234+ 8661
 235+ 8661 00           	db 0 											; (Columnas).
 236+ 8662 00 00        	defw 0											; (Limite_horizontal).
 237+ 8664 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 238+ 8667
 239+ 8667              ; ---------- ---------- ---------- ---------- ----------
 240+ 8667
 241+ 8667 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 242+ 8669 00 00        	defw 0											; (Posicion_actual).
 243+ 866B 00 00        	defw 0 											; (Puntero_objeto).
 244+ 866D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 245+ 8670
 246+ 8670 00           	db %00000000 									; (Attr).
 247+ 8671
 248+ 8671 00 00        	defw 0											; (Indice_Sprite_der).
 249+ 8673 00 00        	defw 0											; (Indice_Sprite_izq).
 250+ 8675 00 00        	defw 0											; (Puntero_DESPLZ_der).
 251+ 8677 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 252+ 8679
 253+ 8679 00 00        	defw 0											; (Posicion_inicio).
 254+ 867B 00           	db 0											; (Cuad_objeto).
 255+ 867C
 256+ 867C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 257+ 8680
 258+ 8680 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 259+ 8681
 260+ 8681 00 00        	db 0,0										    ; Variables_de_borrado
 261+ 8683 00 00        	defw 0											;	" " " " " " "
 262+ 8685 00 00        	defw 0											;	" " " " " " "
 263+ 8687 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 868B
 265+ 868B 00 00        	db 0,0											; Variables_de_pintado
 266+ 868D 00 00        	defw 0											;	" " " " " " "
 267+ 868F 00 00        	defw 0											;	" " " " " " "
 268+ 8691 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8695
 270+ 8695 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 8697
 272+ 8697 00           	db 0											; (Autoriza_movimiento).
 273+ 8698 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 869C 00 00
 274+ 869E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 86A1
 276+ 86A1 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 86A3 00           	db 0											; (Cola_de_desplazamiento).
 278+ 86A4
 279+ 86A4 00           	db 0 											; (Columnas).
 280+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 281+ 86A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 86AA
 283+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 284+ 86AA
 285+ 86AA 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 86AC 00 00        	defw 0											; (Posicion_actual).
 287+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 288+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 86B3
 290+ 86B3 00           	db %00000000 									; (Attr).
 291+ 86B4
 292+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 86BC
 297+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 298+ 86BE 00           	db 0											; (Cuad_objeto).
 299+ 86BF
 300+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 86C3
 302+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 86C4
 304+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 305+ 86C6 00 00        	defw 0											;	" " " " " " "
 306+ 86C8 00 00        	defw 0											;	" " " " " " "
 307+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 308+ 86CE
 309+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 310+ 86D0 00 00        	defw 0											;	" " " " " " "
 311+ 86D2 00 00        	defw 0											;	" " " " " " "
 312+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D8
 314+ 86D8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 315+ 86DA
 316+ 86DA 00           	db 0											; (Autoriza_movimiento).
 317+ 86DB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 317+ 86DF 00 00
 318+ 86E1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 319+ 86E4
 320+ 86E4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86E6 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86E7
 323+ 86E7 00           	db 0 											; (Columnas).
 324+ 86E8 00 00        	defw 0											; (Limite_horizontal).
 325+ 86EA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86ED
 327+ 86ED              ; ---------- ---------- ---------- ---------- ----------
 328+ 86ED
 329+ 86ED 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86EF 00 00        	defw 0											; (Posicion_actual).
 331+ 86F1 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86F3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86F6
 334+ 86F6 00           	db %00000000 									; (Attr).
 335+ 86F7
 336+ 86F7 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86F9 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86FB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86FD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86FF
 341+ 86FF 00 00        	defw 0											; (Posicion_inicio).
 342+ 8701 00           	db 0											; (Cuad_objeto).
 343+ 8702
 344+ 8702 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 8706
 346+ 8706 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 8707
 348+ 8707 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 8709 00 00        	defw 0											;	" " " " " " "
 350+ 870B 00 00        	defw 0											;	" " " " " " "
 351+ 870D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 8711
 353+ 8711 00 00        	db 0,0											; Variables_de_pintado
 354+ 8713 00 00        	defw 0											;	" " " " " " "
 355+ 8715 00 00        	defw 0											;	" " " " " " "
 356+ 8717 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 871B
 358+ 871B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 871D
 360+ 871D 00           	db 0											; (Autoriza_movimiento).
 361+ 871E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8722 00 00
 362+ 8724 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 363+ 8727
 364+ 8727 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 365+ 8729 00           	db 0											; (Cola_de_desplazamiento).
 366+ 872A
 367+ 872A 00           	db 0 											; (Columnas).
 368+ 872B 00 00        	defw 0											; (Limite_horizontal).
 369+ 872D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 370+ 8730
 371+ 8730              ; ---------- ---------- ---------- ---------- ----------
 372+ 8730
 373+ 8730 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 374+ 8732 00 00        	defw 0											; (Posicion_actual).
 375+ 8734 00 00        	defw 0 											; (Puntero_objeto).
 376+ 8736 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 377+ 8739
 378+ 8739 00           	db %00000000 									; (Attr).
 379+ 873A
 380+ 873A 00 00        	defw 0											; (Indice_Sprite_der).
 381+ 873C 00 00        	defw 0											; (Indice_Sprite_izq).
 382+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 383+ 8740 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 384+ 8742
 385+ 8742 00 00        	defw 0											; (Posicion_inicio).
 386+ 8744 00           	db 0											; (Cuad_objeto).
 387+ 8745
 388+ 8745 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 389+ 8749
 390+ 8749 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 391+ 874A
 392+ 874A 00 00        	db 0,0										    ; Variables_de_borrado
 393+ 874C 00 00        	defw 0											;	" " " " " " "
 394+ 874E 00 00        	defw 0											;	" " " " " " "
 395+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 8754
 397+ 8754 00 00        	db 0,0											; Variables_de_pintado
 398+ 8756 00 00        	defw 0											;	" " " " " " "
 399+ 8758 00 00        	defw 0											;	" " " " " " "
 400+ 875A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875E
 402+ 875E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 403+ 8760
 404+ 8760 00           	db 0											; (Autoriza_movimiento).
 405+ 8761 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 405+ 8765 00 00
 406+ 8767 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 407+ 876A
 408+ 876A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 409+ 876C 00           	db 0											; (Cola_de_desplazamiento).
 410+ 876D
 411+ 876D 00           	db 0 											; (Columnas).
 412+ 876E 00 00        	defw 0											; (Limite_horizontal).
 413+ 8770 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 414+ 8773
 415+ 8773              ; ---------- ---------- ---------- ---------- ----------
 416+ 8773
 417+ 8773 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 418+ 8775 00 00        	defw 0											; (Posicion_actual).
 419+ 8777 00 00        	defw 0 											; (Puntero_objeto).
 420+ 8779 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 421+ 877C
 422+ 877C 00           	db %00000000 									; (Attr).
 423+ 877D
 424+ 877D 00 00        	defw 0											; (Indice_Sprite_der).
 425+ 877F 00 00        	defw 0											; (Indice_Sprite_izq).
 426+ 8781 00 00        	defw 0											; (Puntero_DESPLZ_der).
 427+ 8783 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 428+ 8785
 429+ 8785 00 00        	defw 0											; (Posicion_inicio).
 430+ 8787 00           	db 0											; (Cuad_objeto).
 431+ 8788
 432+ 8788 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 433+ 878C
 434+ 878C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 435+ 878D
 436+ 878D 00 00        	db 0,0										    ; Variables_de_borrado
 437+ 878F 00 00        	defw 0											;	" " " " " " "
 438+ 8791 00 00        	defw 0											;	" " " " " " "
 439+ 8793 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 440+ 8797
 441+ 8797 00 00        	db 0,0											; Variables_de_pintado
 442+ 8799 00 00        	defw 0											;	" " " " " " "
 443+ 879B 00 00        	defw 0											;	" " " " " " "
 444+ 879D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 87A1
 446+ 87A1 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 447+ 87A3
 448+ 87A3 00           	db 0											; (Autoriza_movimiento).
 449+ 87A4 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 449+ 87A8 00 00
 450+ 87AA 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 451+ 87AD
 452+ 87AD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 453+ 87AF 00           	db 0											; (Cola_de_desplazamiento).
 454+ 87B0
 455+ 87B0 00           	db 0 											; (Columnas).
 456+ 87B1 00 00        	defw 0											; (Limite_horizontal).
 457+ 87B3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 458+ 87B6
 459+ 87B6              ; -------------------------------------------------------------------------------------
 460+ 87B6              ;
 461+ 87B6              ;	20/05/23
 462+ 87B6              ;
 463+ 87B6              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 464+ 87B6              ;
 465+ 87B6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 466+ 87B6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 467+ 87B6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 468+ 87B6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 469+ 87B6
 470+ 87B6              Indice_de_entidades
 471+ 87B6
 472+ 87B6 BA 87        	defw Entidad_1
 473+ 87B8 CA 87        	defw Entidad_2
 474+ 87BA
 475+ 87BA              ;	BADSAT, (Satélite malvado).
 476+ 87BA
 477+ 87BA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 478+ 87BC 04           	db %00000100									; (Attr).
 479+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 480+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 481+ 87C1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 482+ 87C3 01           	db 1											; (Cuad_objeto).
 483+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 484+ 87C8 8F 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 485+ 87CA
 486+ 87CA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 487+ 87CC 02           	db %00000010									; (Attr).
 488+ 87CD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 489+ 87CF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 490+ 87D1 40 50        	defw $5040                                      ; (Posicion_inicio).
 491+ 87D3 01           	db 1											; (Cuad_objeto).
 492+ 87D4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 493+ 87D8 8F 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 494+ 87DA
# file closed: Cajas_y_disparos.asm
  22  87DA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87DA              ; 13/05/23
   2+ 87DA
   3+ 87DA              Indice_de_niveles
   4+ 87DA
   5+ 87DA E8 87        	defw Nivel_1
   6+ 87DC EB 87        	defw Nivel_2
   7+ 87DE F8 87        	defw Nivel_3
   8+ 87E0 08 88        	defw Nivel_4
   9+ 87E2 1A 88        	defw Nivel_5
  10+ 87E4              ;	...
  11+ 87E4              ;	...
  12+ 87E4              ;	+ Niveles ...
  13+ 87E4
  14+ 87E4 00 00        	defw 0
  15+ 87E6 00 00        	defw 0
  16+ 87E8
  17+ 87E8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87E9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87EB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87EC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87F0 01 02
  21+ 87F2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87F6 01 02
  22+ 87F8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87F9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87FD 01
  24+ 87FE 03 01 01 01  	db 3,1,1,1,1
  24+ 8802 01
  25+ 8803 03 01 01 01  	db 3,1,1,1,1
  25+ 8807 01
  26+ 8808 11           Nivel_4 db 17									; Nº de entidades.
  27+ 8809 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 880D 01
  28+ 880E 04 01 01 01  	db 4,1,1,1,1
  28+ 8812 01
  29+ 8813 04 01 01 01  	db 4,1,1,1,1
  29+ 8817 01
  30+ 8818 02 03        	db 2,3
  31+ 881A 14           Nivel_5 db 20									; Nº de entidades.
  32+ 881B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 881F 01
  33+ 8820 05 01 01 01  	db 5,1,1,1,1
  33+ 8824 01
  34+ 8825 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8829 01
  35+ 882A 05 01 01 01  	db 5,1,1,1,1
  35+ 882E 01
  36+ 882F
  37+ 882F              ;---------------------------------------------------------------------------------------------------------------
  38+ 882F              ;
  39+ 882F              ;   3/9/23
  40+ 882F              ;
  41+ 882F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 882F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 882F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 882F              ;	_en la caja DRAW correspondiente.
  45+ 882F              ;
  46+ 882F              ;	MODIFICA: HL,DE y A.
  47+ 882F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 882F
  49+ 882F              Inicializa_Punteros_de_nivel
  50+ 882F
  51+ 882F 21 DA 87     	ld hl,Indice_de_niveles
  52+ 8832 22 80 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8835 CD FB 8C     	call Extrae_address
  54+ 8838 7E           	ld a,(hl)
  55+ 8839 32 31 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 883C 23           	inc hl
  57+ 883D 22 82 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8840 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8841
  60+ 8841              ;---------------------------------------------------------------------------------------------------------------
  61+ 8841              ;
  62+ 8841              ;   13/5/23
  63+ 8841              ;
  64+ 8841              ;	Destruye A,BC,HL,DE
  65+ 8841
  66+ 8841              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8841              ;	_del juego.
  68+ 8841
  69+ 8841              Prepara_cajas
  70+ 8841
  71+ 8841              ; Preparamos los punteros de las cajas.
  72+ 8841
  73+ 8841 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8844 CD FB 8C     	call Extrae_address
  75+ 8847 CD 84 88     	call Avanza_caja
  76+ 884A
  77+ 884A CD C8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 884D
  79+ 884D 2A 82 89     	ld hl,(Datos_de_nivel)
  80+ 8850
  81+ 8850              ; HL está en los datos del nivel correspondiente.
  82+ 8850              ; B actuará como contador de cajas.
  83+ 8850
  84+ 8850 C5           1 push bc
  85+ 8851
  86+ 8851 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8852 CD 75 88     	call PreparaBC
  88+ 8855
  89+ 8855 21 B6 87     	ld hl,Indice_de_entidades
  90+ 8858 CD 7D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 885B 22 37 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 885E
  93+ 885E CD 8E 88     	call Datos_de_entidad_a_caja
  94+ 8861
  95+ 8861 2A 2F 89     	ld hl,(Indice_restore_caja)
  96+ 8864 CD FB 8C     	call Extrae_address
  97+ 8867 CD 84 88     	call Avanza_caja
  98+ 886A
  99+ 886A 2A 82 89     	ld hl,(Datos_de_nivel)
 100+ 886D 23           	inc hl
 101+ 886E 22 82 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8871
 103+ 8871 C1           	pop bc
 104+ 8872 10 DC        	djnz 1B
 105+ 8874 C9           	ret
 106+ 8875
 107+ 8875 CB 27        PreparaBC sla a
 108+ 8877 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8879 4F           	ld c,a
 110+ 887A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 887C C9           	ret
 112+ 887D
 113+ 887D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 887E ED 4A        	adc hl,bc
 115+ 8880 CD FB 8C     	call Extrae_address
 116+ 8883 C9           	ret
 117+ 8884
 118+ 8884 22 2B 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8887 13           	inc de
 120+ 8888 13           	inc de
 121+ 8889 EB           	ex de,hl
 122+ 888A 22 2F 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 888D C9           	ret
 124+ 888E
 125+ 888E              Datos_de_entidad_a_caja
 126+ 888E
 127+ 888E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 888E
 129+ 888E
 130+ 888E ED 5B 2B 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8892
 132+ 8892 01 02 00     	ld bc,2
 133+ 8895 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8897
 135+ 8897 01 07 00     	ld bc,7
 136+ 889A CD C2 88     	call Situa_DE
 137+ 889D
 138+ 889D 01 05 00     	ld bc,5
 139+ 88A0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A2
 141+ 88A2 01 04 00     	ld bc,4
 142+ 88A5 CD C2 88     	call Situa_DE
 143+ 88A8
 144+ 88A8 01 07 00     	ld bc,7
 145+ 88AB ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88AD
 147+ 88AD 01 18 00     	ld bc,24
 148+ 88B0 CD C2 88     	call Situa_DE
 149+ 88B3
 150+ 88B3 01 02 00     	ld bc,2
 151+ 88B6 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88B8
 153+ 88B8              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88B8              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88B8
 156+ 88B8 01 0F 00     	ld bc,15									; *****
 157+ 88BB CD C2 88     	call Situa_DE
 158+ 88BE
 159+ 88BE 3E 03        	ld a,3
 160+ 88C0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88C1
 162+ 88C1 C9           	ret
 163+ 88C2
 164+ 88C2 EB           Situa_DE ex de,hl
 165+ 88C3 A7           	and a
 166+ 88C4 ED 4A        	adc hl,bc
 167+ 88C6 EB           	ex de,hl
 168+ 88C7 C9           	ret
 169+ 88C8
 170+ 88C8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88C8              ;
 172+ 88C8              ;	21/5/23
 173+ 88C8              ;
 174+ 88C8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88C8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88C8              ;
 177+ 88C8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88C8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88C8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88C8              ;
 181+ 88C8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88C8              ;	MODIFICA: A y B.
 183+ 88C8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88C8
 185+ 88C8              Admin_num_entidades
 186+ 88C8
 187+ 88C8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88C8
 189+ 88C8 3A 31 89     	ld a,(Numero_de_entidades)
 190+ 88CB A7           	and a
 191+ 88CC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88CC              ;	jr z,$
 193+ 88CC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88CC
 195+ 88CC 20 03        	jr nz,3F
 196+ 88CE
 197+ 88CE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88CE
 199+ 88CE CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88D1
 201+ 88D1 3A 31 89     3 ld a,(Numero_de_entidades)
 202+ 88D4 FE 0A        	cp 10
 203+ 88D6 38 08        	jr c,1F
 204+ 88D8
 205+ 88D8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88D8              ; Actualizamos variables.
 207+ 88D8
 208+ 88D8 3E 0A        	ld a,10
 209+ 88DA 32 32 89     	ld (Numero_parcial_de_entidades),a
 210+ 88DD 47           	ld b,a
 211+ 88DE 18 04        	jr 2F
 212+ 88E0
 213+ 88E0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88E0              ; (Numero_de_entidades)="0".
 215+ 88E0
 216+ 88E0 32 32 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88E3 47           	ld b,a
 218+ 88E4 C9           2 ret
# file closed: Niveles.asm
  23  88E5
  24  88E5              ; ******************************************************************************************************************************************************************************************
  25  88E5              ; Constantes.
  26  88E5              ; ******************************************************************************************************************************************************************************************
  27  88E5              ;
  28  88E5              ; 4/9/23
  29  88E5              ;
  30  88E5              ; Constantes generales.
  31  88E5              ;
  32  88E5
  33  88E5              Sprite_vacio equ $f000
  34  88E5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  88E5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  88E5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  88E5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  88E5
  39  88E5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  88E5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  88E5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  42  88E5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  88E5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  88E5              ;
  45  88E5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  46  88E5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  47  88E5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  48  88E5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  49  88E5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  50  88E5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  51  88E5
  52  88E5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
  53  88E5
  54  88E5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  55  88E5
  56  88E5              ; ******************************************************************************************************************************************************************************************
  57  88E5              ; Variables.
  58  88E5              ; ******************************************************************************************************************************************************************************************
  59  88E5              ;
  60  88E5              ; 28/07/23
  61  88E5              ;
  62  88E5              ; Variables de DRAW. (Motor principal).
  63  88E5              ;
  64  88E5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  65  88E5
  66  88E5 00           Filas db 0												; Filas. [DRAW]
  67  88E6 00           Columns db 0  											; Nº de columnas. [DRAW]
  68  88E7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  69  88E9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  70  88EB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  71  88EC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  72  88ED
  73  88ED              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  74  88ED
  75  88ED 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  76  88EE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  77  88EE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  78  88EE 00           Attr db 0												; Atributos de la entidad:
  79  88EF
  80  88EF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  81  88EF              ;
  82  88EF              ;	COLORES: 0 ..... NEGRO
  83  88EF              ;    		 1 ..... AZUL
  84  88EF              ; 			 2 ..... ROJO
  85  88EF              ;			 3 ..... MAGENTA
  86  88EF              ; 			 4 ..... VERDE
  87  88EF              ; 			 5 ..... CIAN
  88  88EF              ;			 6 ..... AMARILLO
  89  88EF              ; 			 7 ..... BLANCO
  90  88EF
  91  88EF 00 00        Indice_Sprite_der defw 0
  92  88F1 00 00        Indice_Sprite_izq defw 0
  93  88F3 00 00        Puntero_DESPLZ_der defw 0
  94  88F5 00 00        Puntero_DESPLZ_izq defw 0
  95  88F7
  96  88F7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  97  88F9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  98  88FA
  99  88FA              ; Variables de objeto. (Características).
 100  88FA
 101  88FA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 102  88FB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 103  88FC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 104  88FD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 105  88FE
 106  88FE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 107  88FF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 108  88FF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 109  88FF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 110  8901 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 111  8903 00 00        	defw 0
 112  8905 00 00 00 00  	db 0,0,0,0
 113  8909
 114  8909 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 115  890B 00 00        	defw 0
 116  890D 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 117  890F 00 00 00 00  	db 0,0,0,0
 118  8913
 119  8913              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 120  8913
 121  8913 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 122  8914              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 123  8914              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 124  8914              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 125  8914              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 126  8914              ;
 127  8914              ; 														DESCRIPCIÖN:
 128  8914              ;
 129  8914              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 130  8914              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 131  8914              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 132  8914              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 133  8914              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 134  8914              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 135  8914              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 136  8914              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 137  8914              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 138  8914              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 139  8914              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 140  8914              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 141  8914              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 142  8914              ;
 143  8914              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 144  8914              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 145  8914              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 146  8914
 147  8914 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 148  8915
 149  8915              ; Movimiento. ------------------------------------------------------------------------------------------------------
 150  8915
 151  8915 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 152  8916 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 153  8918 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 154  891A 00 00        Puntero_indice_mov_bucle defw 0							;
 155  891C              ;
 156  891C              ;
 157  891C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 158  891D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 159  891D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 160  891D 00           Incrementa_puntero_backup db 0
 161  891E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 162  891F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 163  891F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 164  8920 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 165  8921 00           Cola_de_desplazamiento db 0								; Este byte indica:
 166  8922              ;
 167  8922              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 168  8922              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 169  8922              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 170  8922              ;
 171  8922              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 172  8922              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 173  8922              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 174  8922              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 175  8922              ;
 176  8922              ;														;	"$ff" ..... Bucle infinito de repetición.
 177  8922              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 178  8922              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 179  8922
 180  8922
 181  8922              ; Variables de funcionamiento. [DRAW].
 182  8922
 183  8922 00           Columnas db 0
 184  8923 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 185  8925              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  8925 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 187  8926
 188  8926              ; variables de control general.
 189  8926
 190  8926 00           Ctrl_2 db 0
 191  8927              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 192  8927              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 193  8927              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 194  8927              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 195  8927              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 196  8927              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 197  8927              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 198  8927              ;
 199  8927              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 200  8927              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 201  8927              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 202  8927              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 203  8927              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 204  8927
 205  8927 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 206  8928
 207  8928              ;! 67 Bytes por entidad.
 208  8928
 209  8928              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 210  8928              ;					         		---------;      ;---------
 211  8928
 212  8928
 213  8928              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 214  8928
 215  8928 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 216  8929
 217  8929              ;														DESCRIPCIÓN:
 218  8929              ;
 219  8929              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 220  8929              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 221  8929              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 222  8929              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 223  8929              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 224  8929              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 225  8929
 226  8929              ;														BIT 3, Recarga de nueva oleada.
 227  8929              ;														BIT 4, Recarga de nueva oleada.
 228  8929              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 229  8929              ;														BIT 6, **** Frame completo.
 230  8929
 231  8929 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 232  892B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 233  892B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 234  892B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 235  892B
 236  892B
 237  892B
 238  892B              ; Gestión de ENTIDADES y CAJAS.
 239  892B
 240  892B 00 00        Puntero_store_caja defw 0
 241  892D 00 00        Puntero_restore_caja defw 0
 242  892F 00 00        Indice_restore_caja defw 0
 243  8931 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 244  8932 00           Numero_parcial_de_entidades db 0
 245  8933 00           Entidades_en_curso db 0									; ..... ..... .....
 246  8934 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 247  8935              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 248  8935              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 249  8935              ;														; _ (Numero_de_malotes)="0".
 250  8935 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 251  8937 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 252  8939              ;														; _ puntero (Indice_entidades).
 253  8939
 254  8939
 255  8939              ;---------------------------------------------------------------------------------------------------------------
 256  8939              ;
 257  8939              ;	2/9/23
 258  8939              ;
 259  8939              ;	Álbumes.
 260  8939
 261  8939 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 262  893B              ;														; _variable para almacenar lo posición del puntero_
 263  893B              ; 														; _de pila, SP.
 264  893B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 265  893D              ;														; La utiliza la rutina [Extrae_foto_registros].
 266  893D 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 267  893F 00 00        Stack_snapshot defw 0
 268  8941 00 00        Stack_snapshot_disparos defw 0
 269  8943
 270  8943 00 00        End_Snapshot defw 0
 271  8945              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 272  8945 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 273  8947              ;														; _el snapshot de los registros del siguiente disparo.
 274  8947              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 275  8947 00 00        End_Snapshot_Amadeus defw 0
 276  8949 00 00        End_Snapshot_1 defw 0
 277  894B 00 00        End_Snapshot_disparos_1 defw 0
 278  894D 00 00        End_Snapshot_2 defw 0
 279  894F 00 00        End_Snapshot_disparos_2 defw 0
 280  8951 00 00        End_Snapshot_3 defw 0
 281  8953 00 00        End_Snapshot_disparos_3 defw 0
 282  8955
 283  8955 00 00        Puntero_indice_album_de_fotos defw 0
 284  8957 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 285  8959
 286  8959 00 00        Puntero_indice_End_Snapshot defw 0
 287  895B 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 288  895D 00 00        Puntero_de_End_Snapshot defw 0
 289  895F 00 00        Puntero_de_End_Snapshot_disparos defw 0
 290  8961
 291  8961              ;---------------------------------------------------------------------------------------------------------------
 292  8961
 293  8961              ; Gestión de Disparos.
 294  8961
 295  8961 00           Numero_de_disparotes db 0
 296  8962 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 297  8964 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 298  8966 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 299  8967              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 300  8967              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 301  8967 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 302  8969              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 303  8969              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 304  8969              ;														; _produzca colisión.
 305  8969 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 306  896B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 307  896B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 308  896E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 309  896E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 310  8971              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 311  8971 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 312  8973 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 313  8974
 314  8974              ;---------------------------------------------------------------------------------------------------------------
 315  8974
 316  8974              ; Relojes y temporizaciones.
 317  8974
 318  8974 00           Contador_de_frames db 0
 319  8975 00           Contador_de_frames_2 db 0
 320  8976
 321  8976 04           Clock_explosion db 4
 322  8977 1E           Clock_Entidades_en_curso db 30
 323  8978 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 324  8979              ;														; Repite la oleada de entidades.
 325  8979 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 326  897A 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 327  897B 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 328  897C
 329  897C 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 330  897D 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 331  897E 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 332  897F
 333  897F              ;---------------------------------------------------------------------------------------------------------------
 334  897F
 335  897F              ; Gestión de NIVELES.
 336  897F
 337  897F 00           Nivel db 0												; Nivel actual del juego.
 338  8980 00 00        Puntero_indice_NIVELES defw 0
 339  8982 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 340  8984              ; 														; _ que definen el NIVEL.
 341  8984              ; Y todo comienza aquí .....
 342  8984              ;
 343  8984              ; Rutina principal *************************************************************************************************************************************************************************
 344  8984              ;
 345  8984              ;	14/11/22
 346  8984
 347  8984              START
 348  8984
 349  8984 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 350  8987 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 351  8989 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 352  898B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 353  898D F3           	DI
 354  898E
 355  898E 3E 07        	ld a,%00000111
 356  8990 CD BC 99     	call Cls
 357  8993
 358  8993 CD D4 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 359  8996
 360  8996              ; INICIALIZACIÓN.
 361  8996
 362  8996 CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 363  8999
 364  8999 CD 41 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 365  899C
 366  899C CD 10 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 367  899F              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 368  899F CD 26 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 369  89A2              ;													     ; _ malotes antes de guardar ninguna foto.
 370  89A2              ; ----------
 371  89A2
 372  89A2 CD 84 8D     	call Restore_entidad
 373  89A5
 374  89A5 21 32 89     	ld hl,Numero_parcial_de_entidades
 375  89A8 46           	ld b,(hl)
 376  89A9 04           	inc b
 377  89AA 05           	dec b
 378  89AB 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 379  89AD
 380  89AD              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 381  89AD              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 382  89AD              ;	Pintamos el resto de entidades:
 383  89AD
 384  89AD              ;	INICIA ENTIDADES !!!!!
 385  89AD
 386  89AD C5           1 push bc  												; Guardo el contador de entidades.
 387  89AE CD B7 8B     	call Inicia_entidad
 388  89B1 C1           	pop bc
 389  89B2 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 390  89B4
 391  89B4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 392  89B4              ; (Esto se dá cuando se inicia una nueva oleada).
 393  89B4
 394  89B4 3A 28 89     	ld a,(Ctrl_1)
 395  89B7 CB 5F        	bit 3,a
 396  89B9 20 18        	jr nz,5F											; Loop
 397  89BB
 398  89BB              ; 	INICIA AMADEUS !!!!!
 399  89BB
 400  89BB CD AB 8D     3 call Restore_Amadeus
 401  89BE CD 01 8D     	call Inicia_Puntero_objeto
 402  89C1 CD AF 93     	call Draw
 403  89C4 CD A0 7F     	call Guarda_foto_registros
 404  89C7 11 9E 85     	ld de,Amadeus_db
 405  89CA CD BD 8D     	call Store_Amadeus
 406  89CD
 407  89CD              ; 	INICIA DISPAROS !!!!!
 408  89CD
 409  89CD CD 88 8C     	call Inicia_Puntero_Disparo_Entidades
 410  89D0 CD 8F 8C     	call Inicia_Puntero_Disparo_Amadeus
 411  89D3
 412  89D3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 413  89D3
 414  89D3 CD 10 8C     5 call Inicia_punteros_de_cajas
 415  89D6 CD 84 8D     	call Restore_entidad
 416  89D9
 417  89D9 3A 28 89     	ld a,(Ctrl_1)
 418  89DC CB 5F        	bit 3,a
 419  89DE 28 0A        	jr z,6F
 420  89E0
 421  89E0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 422  89E0
 423  89E0 21 28 89     	ld hl,Ctrl_1
 424  89E3 CB 9E        	res 3,(hl)
 425  89E5 CD AF 8C     	call Calcula_numero_de_malotes
 426  89E8 18 0A        	jr Main
 427  89EA
 428  89EA              ; ----------
 429  89EA
 430  89EA 3A 32 89     6 ld a,(Numero_parcial_de_entidades)
 431  89ED 32 34 89     	ld (Numero_de_malotes),a
 432  89F0
 433  89F0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  89F0              ; _ tenemos calculado (Numero_de_malotes).
 435  89F0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  89F0              ; _ para situarnos en el siguiente album.
 437  89F0
 438  89F0 CD 57 8C     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  89F3 F3           	di
 440  89F4              ; ------------------------------------
 441  89F4
 442  89F4              Main
 443  89F4              ;
 444  89F4              ;	3/8/23
 445  89F4
 446  89F4              ;! debugging del bueno!!!!!!!!!!!
 447  89F4 F3           	di
 448  89F5 3A 74 89     	ld a,(Contador_de_frames)
 449  89F8 FE 01        	cp 1
 450  89FA 28 FE        	jr z,$
 451  89FC              ;! debugging del bueno!!!!!!!!!!!
 452  89FC
 453  89FC              ;!	; Analizar esta vuelta. Hay bug. Se guardan datos en los Albumes_de_fotos_1,2 y 3.
 454  89FC              ;!	; Deberíamos llegar a FRAME sin ningún dato guardado, (si no movemos Amadeus), hasta que el (Contador_de_frames)="$1e".
 455  89FC
 456  89FC FB           	ei
 457  89FD
 458  89FD 3A 77 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 459  8A00 47           	ld b,a
 460  8A01 3A 74 89     	ld a,(Contador_de_frames)
 461  8A04 B8           	cp b
 462  8A05 20 18        	jr nz,13F
 463  8A07
 464  8A07 3A 32 89     	ld a,(Numero_parcial_de_entidades)
 465  8A0A 47           	ld b,a
 466  8A0B 3A 33 89     	ld a,(Entidades_en_curso)
 467  8A0E B8           	cp b
 468  8A0F 28 0E        	jr z,13F
 469  8A11 30 0C        	jr nc,13F
 470  8A13
 471  8A13 3C           	inc a
 472  8A14 32 33 89     	ld (Entidades_en_curso),a
 473  8A17
 474  8A17 3A 77 89     	ld a,(Clock_Entidades_en_curso)
 475  8A1A
 476  8A1A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 477  8A1A              ;! _ IMPREDECIBLE !!!!
 478  8A1A
 479  8A1A C6 64        	add 100
 480  8A1C 32 77 89     	ld (Clock_Entidades_en_curso),a
 481  8A1F
 482  8A1F              ; Habilita disparos.
 483  8A1F
 484  8A1F 21 79 89     13 ld hl,Disparo_Amadeus
 485  8A22 11 7B 89     	ld de,CLOCK_repone_disparo_Amadeus
 486  8A25 CD 80 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 487  8A28
 488  8A28 21 7C 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 489  8A2B 11 7E 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 490  8A2E CD 80 9D     	call Habilita_disparos
 491  8A31
 492  8A31              ; COLISIONES.
 493  8A31
 494  8A31 CD 91 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 495  8A34
 496  8A34              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 497  8A34              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 498  8A34              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 499  8A34
 500  8A34 AF           	xor a
 501  8A35 32 66 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 502  8A38
 503  8A38 CD 10 8C     	call Inicia_punteros_de_cajas
 504  8A3B CD 84 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 505  8A3E              ; 														; _ en DRAW.
 506  8A3E 3A E5 88     	ld a,(Filas)
 507  8A41 A7           	and a
 508  8A42 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 509  8A44 CD 96 8D     	call Incrementa_punteros_de_cajas
 510  8A47 18 F2        	jr 12B
 511  8A49
 512  8A49              ; ---------------------------------------------------------------------------------------
 513  8A49
 514  8A49 3A 32 89     10 ld a,(Numero_parcial_de_entidades)
 515  8A4C 47               ld b,a
 516  8A4D A7           	and a
 517  8A4E 20 14        	jr nz,11F
 518  8A50
 519  8A50 21 28 89     	ld hl,Ctrl_1
 520  8A53 CB 66        	bit 4,(hl)
 521  8A55 C2 E1 8A     	jp nz,16F
 522  8A58
 523  8A58 21 28 89     	ld hl,Ctrl_1
 524  8A5B CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 525  8A5D
 526  8A5D 3A 74 89     	ld a,(Contador_de_frames)
 527  8A60 3C           	inc a
 528  8A61 32 78 89     	ld (Activa_recarga_cajas),a
 529  8A64
 530  8A64              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 531  8A64
 532  8A64 3A 33 89     11 ld a,(Entidades_en_curso)
 533  8A67 A7           	and a
 534  8A68 CA E1 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 535  8A6B 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 536  8A6C
 537  8A6C              ; Código que ejecutamos con cada entidad:
 538  8A6C              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 539  8A6C
 540  8A6C C5           15 push bc 												; Nº de entidades en curso.
 541  8A6D
 542  8A6D              ; Impacto ???
 543  8A6D
 544  8A6D 3A FE 88     	ld a,(Impacto)
 545  8A70 A7           	and a
 546  8A71 28 2D        	jr z,8F
 547  8A73
 548  8A73              ; Hay Impacto en esta entidad.
 549  8A73
 550  8A73 21 76 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 551  8A76 35           	dec (hl)
 552  8A77 20 62        	jr nz,17F
 553  8A79
 554  8A79              ;! Velocidad de la animación de la explosión.
 555  8A79
 556  8A79 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 557  8A7B              ;														; _,(velocidad de la explosión).
 558  8A7B CD C7 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 559  8A7E
 560  8A7E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 561  8A7E
 562  8A7E 3A 26 89     	ld a,(Ctrl_2)
 563  8A81 CB 4F        	bit 1,a
 564  8A83 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 565  8A85
 566  8A85              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 567  8A85
 568  8A85 3A ED 88     	ld a,(CTRL_DESPLZ)
 569  8A88 A7           	and a
 570  8A89 20 08        	jr nz,18F
 571  8A8B
 572  8A8B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 573  8A8E 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 574  8A91 18 06        	jr 19F
 575  8A93
 576  8A93 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 577  8A96 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 578  8A99
 579  8A99 21 26 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 580  8A9C CB CE        	set 1,(hl)
 581  8A9E 18 22        	jr 7F
 582  8AA0
 583  8AA0              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 584  8AA0              ; _con las coordenadas de la entidad almacenada en DRAW.
 585  8AA0
 586  8AA0 3A 28 89     8 ld a,(Ctrl_1)
 587  8AA3 CB 57        	bit 2,a
 588  8AA5 28 1B        	jr z,7F
 589  8AA7
 590  8AA7 2A 69 89     	ld hl,(Coordenadas_disparo_certero)
 591  8AAA EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 592  8AAB              ;														; E contiene la coordenada_X del disparo.
 593  8AAB 2A EB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 594  8AAE              ;														; H FILA, (Coordenada_y de la entidad).
 595  8AAE A7           	and a
 596  8AAF ED 52        	sbc hl,de
 597  8AB1
 598  8AB1 CD C8 92     	call Determina_resultado_comparativa
 599  8AB4
 600  8AB4 78           	ld a,b
 601  8AB5 A7           	and a
 602  8AB6 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 603  8AB8
 604  8AB8              ; ----- ----- -----
 605  8AB8
 606  8AB8 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 607  8ABA 32 FE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 608  8ABD
 609  8ABD 21 28 89     	ld hl,Ctrl_1
 610  8AC0 CB 96        	res 2,(hl)
 611  8AC2
 612  8AC2 CD 39 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 613  8AC5
 614  8AC5 3A 13 89     	ld a,(Ctrl_0)
 615  8AC8 CB 67        	bit 4,a
 616  8ACA 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 617  8ACC
 618  8ACC              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 619  8ACC              ; [[[
 620  8ACC CD 1F 8E     	call Detecta_disparo_entidad
 621  8ACF              ; ]]]
 622  8ACF CD D7 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 623  8AD2
 624  8AD2 21 13 89     	ld hl,Ctrl_0
 625  8AD5 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 626  8AD7 AF           	xor a
 627  8AD8 32 14 89     	ld (Obj_dibujado),a
 628  8ADB
 629  8ADB CD 49 8D     17 call Store_Restore_cajas
 630  8ADE
 631  8ADE C1           	pop bc
 632  8ADF 10 8B        	djnz 15B
 633  8AE1
 634  8AE1              ; ------------------------------------
 635  8AE1
 636  8AE1              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 637  8AE1              ; Hemos gestionado todas las unidades.
 638  8AE1              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 639  8AE1
 640  8AE1              ;	ld hl,Ctrl_1
 641  8AE1              ;	res 2,(hl)
 642  8AE1
 643  8AE1              ; ------------------------------------
 644  8AE1
 645  8AE1              ; Tras la gestión de las entidades, ... AMADEUS.
 646  8AE1
 647  8AE1 CD AB 8D     16 call Restore_Amadeus
 648  8AE4
 649  8AE4              ;! Activa/desactiva impacto con Amadeus.
 650  8AE4
 651  8AE4 3A FE 88     	ld a,(Impacto)
 652  8AE7 A7           	and a
 653  8AE8 20 FE        	jr nz,$
 654  8AEA
 655  8AEA CD 98 8B     	call Mov_Amadeus
 656  8AED
 657  8AED 3A 13 89     	ld a,(Ctrl_0)
 658  8AF0 CB 67        	bit 4,a
 659  8AF2 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 660  8AF4
 661  8AF4 CD D7 8B     	call Guarda_foto_entidad_a_pintar
 662  8AF7
 663  8AF7 21 13 89     14 ld hl,Ctrl_0
 664  8AFA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 665  8AFC
 666  8AFC AF           	xor a
 667  8AFD 32 14 89     	ld (Obj_dibujado),a
 668  8B00
 669  8B00 11 9E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 670  8B03 CD BD 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 671  8B06
 672  8B06              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 673  8B06
 674  8B06              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 675  8B06
 676  8B06              ;	call Calcula_numero_de_disparotes
 677  8B06
 678  8B06 CD 57 8C      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 679  8B09              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 680  8B09              ;														; _ interrupción.
 681  8B09 3E 04        	ld a,4
 682  8B0B D3 FE        	out ($fe),a
 683  8B0D
 684  8B0D              ; ----------------------------------------
 685  8B0D
 686  8B0D 3A 28 89     	ld a,(Ctrl_1) 										; Existe Loop?
 687  8B10 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 688  8B12 CA F4 89     	jp z,Main
 689  8B15
 690  8B15              ; -----
 691  8B15              ;	(((
 692  8B15
 693  8B15 3A 74 89     	ld a,(Contador_de_frames)
 694  8B18 47           	ld b,a
 695  8B19 3A 78 89     	ld a,(Activa_recarga_cajas)
 696  8B1C B8           	cp b
 697  8B1D 28 08        	jr z,20F
 698  8B1F
 699  8B1F 21 28 89     	ld hl,Ctrl_1
 700  8B22 CB E6        	set 4,(hl)
 701  8B24 C3 F4 89     	jp Main
 702  8B27
 703  8B27 21 28 89     20 ld hl,Ctrl_1
 704  8B2A CB A6        	res 4,(hl)
 705  8B2C F3           	di
 706  8B2D
 707  8B2D 3A 74 89     	ld a,(Contador_de_frames)
 708  8B30
 709  8B30              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 710  8B30              ;! _ IMPREDECIBLE !!!!
 711  8B30
 712  8B30 C6 0A        	add 10
 713  8B32 32 77 89     	ld (Clock_Entidades_en_curso),a
 714  8B35
 715  8B35 C3 99 89     	jp 4B
 716  8B38
 717  8B38 C9           	ret
 718  8B39
 719  8B39              ; --------------------------------------------------------------------------------------------------------------
 720  8B39              ;
 721  8B39              ;	27/05/23
 722  8B39
 723  8B39              Mov_obj
 724  8B39
 725  8B39 3A 26 89     	ld a,(Ctrl_2)
 726  8B3C CB 4F        	bit 1,a
 727  8B3E 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 728  8B40
 729  8B40              ; Explosión:
 730  8B40
 731  8B40 3A 27 89     	ld a,(Frames_explosion)
 732  8B43 A7           	and a
 733  8B44 20 11        	jr nz,4F
 734  8B46
 735  8B46              ; Una alimaña menos!!!!!!!!!1
 736  8B46
 737  8B46 CD C6 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 738  8B49 21 32 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 739  8B4C 35           	dec (hl)
 740  8B4D 21 33 89     	ld hl,Entidades_en_curso
 741  8B50 35           	dec (hl)
 742  8B51 21 31 89     	ld hl,Numero_de_entidades
 743  8B54 35           	dec (hl)
 744  8B55 18 40        	jr 3F
 745  8B57
 746  8B57              ; -----
 747  8B57
 748  8B57              ;	`Movemos´ la explosión.
 749  8B57
 750  8B57 2A F3 88     4 ld hl,(Puntero_DESPLZ_der)
 751  8B5A 23           	inc hl
 752  8B5B 23           	inc hl
 753  8B5C 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 754  8B5F CD FB 8C     	call Extrae_address
 755  8B62 22 E9 88     	ld (Puntero_objeto),hl
 756  8B65
 757  8B65 21 27 89     	ld hl,Frames_explosion
 758  8B68 35           	dec (hl)
 759  8B69
 760  8B69 CD C7 8B     	call Guarda_foto_entidad_a_borrar
 761  8B6C 18 29        	jr 3F
 762  8B6E
 763  8B6E AF           2 xor a
 764  8B6F 32 14 89     	ld (Obj_dibujado),a
 765  8B72 32 13 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 766  8B75              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 767  8B75              ; 														; _de la entidad.
 768  8B75 CD E1 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 769  8B78              ;														; Obj_dibujado="0".
 770  8B78              ; Movemos Entidades malignas.
 771  8B78
 772  8B78              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 773  8B78              ;	and a 												; _a movernos. (Limitador_de_entidades).
 774  8B78              ;	ret z
 775  8B78
 776  8B78 CD 2B 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 777  8B7B
 778  8B7B 3A 13 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 779  8B7E CB 67        	bit 4,a
 780  8B80 C8           	ret z
 781  8B81
 782  8B81              ; Ha habido desplazamiento de la entidad maligna.
 783  8B81              ; Ha llegado a zona de AMADEUS ???
 784  8B81
 785  8B81 3A EC 88     	ld a,(Coordenada_y)
 786  8B84 FE 14        	cp $14
 787  8B86 D4 56 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 788  8B89              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 789  8B89              ; ---------
 790  8B89
 791  8B89 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 792  8B8B 32 14 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 793  8B8E CD E1 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 794  8B91 CD F8 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 795  8B94 CD C7 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 796  8B97 C9           3 ret													; _de la misma.
 797  8B98
 798  8B98              ; --------------------------------------------------------------------------------------------------------------
 799  8B98              ;
 800  8B98              ;	29/1/23
 801  8B98
 802  8B98              Mov_Amadeus
 803  8B98
 804  8B98 AF           	xor a
 805  8B99 32 14 89     	ld (Obj_dibujado),a
 806  8B9C CD E1 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 807  8B9F              ;														; Obj_dibujado="0".
 808  8B9F              ; Movemos Amadeus.
 809  8B9F
 810  8B9F CD E8 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 811  8BA2 3A 13 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 812  8BA5 CB 67        	bit 4,a
 813  8BA7 C8           	ret z
 814  8BA8
 815  8BA8              ; ---------
 816  8BA8
 817  8BA8 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 818  8BAA 32 14 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 819  8BAD CD E1 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 820  8BB0 CD F8 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 821  8BB3 CD C7 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 822  8BB6 C9           	ret													; _de la nave.
 823  8BB7
 824  8BB7              ; -----------------------------------------------------------------------------------
 825  8BB7
 826  8BB7 CD 01 8D     Inicia_entidad	call Inicia_Puntero_objeto
 827  8BBA CD D0 99     	call Recompone_posicion_inicio
 828  8BBD CD AF 93     	call Draw
 829  8BC0 CD A0 7F     	call Guarda_foto_registros
 830  8BC3 CD 49 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 831  8BC6 C9           	ret
 832  8BC7
 833  8BC7              ; --------------------------------------------------------------------------------------------------------------
 834  8BC7              ;
 835  8BC7              ;	31/8/23
 836  8BC7              ;
 837  8BC7              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 838  8BC7
 839  8BC7              Guarda_foto_entidad_a_borrar
 840  8BC7
 841  8BC7 CD 93 96     	call Prepara_draw
 842  8BCA CD C3 95     	call calcula_CColumnass
 843  8BCD CD FA 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 844  8BD0 CD 59 96     	call Define_rutina_de_impresion
 845  8BD3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 846  8BD6 C9           	ret
 847  8BD7
 848  8BD7              ; --------------------------------------------------------------------------------------------------------------
 849  8BD7              ;
 850  8BD7              ;	31/08/23
 851  8BD7              ;
 852  8BD7              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 853  8BD7              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 854  8BD7
 855  8BD7              Guarda_foto_entidad_a_pintar
 856  8BD7
 857  8BD7 CD 04 8C     	call Repone_pintar
 858  8BDA CD AF 93     	call Draw
 859  8BDD CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 860  8BE0 C9           	ret
 861  8BE1
 862  8BE1              ; --------------------------------------------------------------------------------------------------------------
 863  8BE1              ;
 864  8BE1              ;
 865  8BE1
 866  8BE1 21 E5 88     Prepara_var_pintado_borrado	ld hl,Filas
 867  8BE4 3A 14 89     	ld a,(Obj_dibujado)
 868  8BE7 A7           	and a
 869  8BE8 28 05        	jr z,1F
 870  8BEA 11 09 89     	ld de,Variables_de_pintado
 871  8BED 18 03        	jr 2F
 872  8BEF 11 FF 88     1 ld de,Variables_de_borrado
 873  8BF2 01 08 00     2 ld bc,8
 874  8BF5 ED B0        	ldir
 875  8BF7 C9           	ret
 876  8BF8
 877  8BF8              ; --------------------------------------------------------------------------------------------------------------
 878  8BF8
 879  8BF8 21 FF 88     Repone_borrar ld hl,Variables_de_borrado
 880  8BFB 11 E5 88     	ld de,Filas
 881  8BFE 01 08 00     	ld bc,8
 882  8C01 ED B0        	ldir
 883  8C03 C9           	ret
 884  8C04
 885  8C04 21 09 89     Repone_pintar ld hl,Variables_de_pintado
 886  8C07 11 E5 88     	ld de,Filas
 887  8C0A 01 08 00     	ld bc,8
 888  8C0D ED B0        	ldir
 889  8C0F C9           	ret
 890  8C10
 891  8C10              ; *************************************************************************************************************************************************************
 892  8C10              ;
 893  8C10              ; 8/1/23
 894  8C10              ;
 895  8C10              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 896  8C10              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 897  8C10              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 898  8C10
 899  8C10              ; Destruye HL y DE !!!!!
 900  8C10
 901  8C10              Inicia_punteros_de_cajas
 902  8C10
 903  8C10 21 8C 85     	ld hl,Indice_de_cajas
 904  8C13 CD FB 8C         call Extrae_address
 905  8C16 22 2B 89         ld (Puntero_store_caja),hl
 906  8C19 21 8E 85     	ld hl,Indice_de_cajas+2
 907  8C1C 22 2F 89     	ld (Indice_restore_caja),hl
 908  8C1F CD FB 8C     	call Extrae_address
 909  8C22 22 2D 89     	ld (Puntero_restore_caja),hl
 910  8C25 C9               ret
 911  8C26
 912  8C26              ; ---------------------------------------------------------------
 913  8C26              ;
 914  8C26              ;	9/8/23
 915  8C26              ;
 916  8C26              ;	Inicialización y gestión de álbumes de fotos y cajas.
 917  8C26
 918  8C26              Inicia_punteros_de_albumes_y_malotes
 919  8C26
 920  8C26 21 EC 84     	ld hl,Indice_album_de_fotos
 921  8C29 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
 922  8C2C CD FB 8C     	call Extrae_address
 923  8C2F 22 3F 89     	ld (Stack_snapshot),hl
 924  8C32
 925  8C32 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 926  8C35 22 57 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 927  8C38 CD FB 8C     	call Extrae_address
 928  8C3B 22 41 89     	ld (Stack_snapshot_disparos),hl
 929  8C3E
 930  8C3E 21 FC 84     	ld hl,Indice_End_Snapshot
 931  8C41 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
 932  8C44 CD FB 8C     	call Extrae_address
 933  8C47 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
 934  8C4A
 935  8C4A 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 936  8C4D 22 5B 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 937  8C50 CD FB 8C     	call Extrae_address
 938  8C53 22 5F 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 939  8C56
 940  8C56 C9           	ret
 941  8C57
 942  8C57              ;	2/9/23
 943  8C57
 944  8C57              Avanza_puntero_de_album_de_fotos_y_malotes
 945  8C57
 946  8C57              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 947  8C57
 948  8C57              ; Estamos en el último álbum del índice???.
 949  8C57
 950  8C57 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
 951  8C5A 01 F2 84     	ld bc,Indice_album_de_fotos+6
 952  8C5D A7           	and a
 953  8C5E ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 954  8C60 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 955  8C62
 956  8C62 21 28 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 957  8C65 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 958  8C67 76           	halt
 959  8C68 C9           	ret
 960  8C69
 961  8C69 F3           1 di
 962  8C6A 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
 963  8C6D 23           	inc hl
 964  8C6E 23           	inc hl
 965  8C6F 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
 966  8C72 CD FB 8C     	call Extrae_address
 967  8C75 22 3F 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 968  8C78
 969  8C78 2A 59 89     	ld hl,(Puntero_indice_End_Snapshot)
 970  8C7B 23           	inc hl
 971  8C7C 23           	inc hl
 972  8C7D 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
 973  8C80 CD FB 8C     	call Extrae_address
 974  8C83 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
 975  8C86 FB           	ei
 976  8C87
 977  8C87 C9           	ret
 978  8C88
 979  8C88              ; *************************************************************************************************************************************************************
 980  8C88              ;
 981  8C88              ; 8/1/23
 982  8C88              ;
 983  8C88              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 984  8C88
 985  8C88 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 986  8C8B 22 62 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 987  8C8E C9           	ret
 988  8C8F 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 989  8C92 22 64 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 990  8C95 C9           	ret
 991  8C96
 992  8C96              ; -------------------------------------------------------------------------------------------------------------
 993  8C96              ;
 994  8C96              ; 4/9/23
 995  8C96              ;
 996  8C96
 997  8C96              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 998  8C96
 999  8C96 2A 47 89     Limpia_album_Amadeus ld hl,(End_Snapshot_Amadeus)
1000  8C99 01 A0 72     	ld bc,Album_de_fotos_Amadeus
1001  8C9C A7           	and a
1002  8C9D ED 42        	sbc hl,bc
1003  8C9F
1004  8C9F 45           	ld b,l
1005  8CA0
1006  8CA0 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1007  8CA3 36 00        1 ld (hl),0
1008  8CA5 23           	inc hl
1009  8CA6 10 FB        	djnz 1B
1010  8CA8
1011  8CA8              ; Restauramos (End_Snapshot_Amadeus).
1012  8CA8
1013  8CA8 21 00 00     	ld hl,0
1014  8CAB 22 47 89     	ld (End_Snapshot_Amadeus),hl
1015  8CAE
1016  8CAE C9           	ret
1017  8CAF
1018  8CAF              ; -------------------------------------------------------------------------------------------------------------
1019  8CAF              ;
1020  8CAF              ; 4/9/23
1021  8CAF              ;
1022  8CAF
1023  8CAF              Calcula_numero_de_malotes
1024  8CAF
1025  8CAF 21 00 70     	ld hl,Album_de_fotos
1026  8CB2 EB           	ex de,hl
1027  8CB3 2A 43 89     	ld hl,(End_Snapshot)
1028  8CB6
1029  8CB6 06 00        4 ld b,0
1030  8CB8 7D           	ld a,l
1031  8CB9 93           	sub e
1032  8CBA 28 07        	jr z,1F
1033  8CBC
1034  8CBC              ; Nº de malotes no es "0".
1035  8CBC
1036  8CBC D6 06        2 sub 6
1037  8CBE 04           	inc b
1038  8CBF A7           	and a
1039  8CC0 20 FA        	jr nz,2B
1040  8CC2 78           	ld a,b
1041  8CC3
1042  8CC3 32 34 89     1 ld (Numero_de_malotes),a
1043  8CC6 C9           	ret
1044  8CC7
1045  8CC7              ; -------------------------------------------------------------------------------------------------------------
1046  8CC7              ;
1047  8CC7              ; 4/9/23
1048  8CC7              ;
1049  8CC7
1050  8CC7              Calcula_malotes_Amadeus
1051  8CC7
1052  8CC7 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1053  8CCA EB           	ex de,hl
1054  8CCB 2A 47 89     	ld hl,(End_Snapshot_Amadeus)
1055  8CCE
1056  8CCE 7C           	ld a,h
1057  8CCF A7           	and a
1058  8CD0 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1059  8CD2
1060  8CD2 06 00        	ld b,0
1061  8CD4 7D           	ld a,l
1062  8CD5 93           	sub e
1063  8CD6 28 07        	jr z,1F
1064  8CD8
1065  8CD8              ; Nº de malotes no es "0".
1066  8CD8
1067  8CD8 D6 06        2 sub 6
1068  8CDA 04           	inc b
1069  8CDB A7           	and a
1070  8CDC 20 FA        	jr nz,2B
1071  8CDE 78           	ld a,b
1072  8CDF
1073  8CDF 32 34 89     1 ld (Numero_de_malotes),a
1074  8CE2 C9           	ret
1075  8CE3
1076  8CE3              ; -------------------------------------------------------------------------------------------------------------
1077  8CE3              ;
1078  8CE3              ; 28/2/23
1079  8CE3              ;
1080  8CE3
1081  8CE3              Calcula_numero_de_disparotes
1082  8CE3
1083  8CE3 21 50 71     	ld hl,Album_de_fotos_disparos
1084  8CE6 EB           	ex de,hl
1085  8CE7 2A 5F 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1086  8CEA
1087  8CEA 06 00        	ld b,0
1088  8CEC 7D           	ld a,l
1089  8CED 93           	sub e
1090  8CEE 28 07        	jr z,1F
1091  8CF0
1092  8CF0              ; Nº de malotes no es "0".
1093  8CF0
1094  8CF0 D6 06        2 sub 6
1095  8CF2 04           	inc b
1096  8CF3 A7           	and a
1097  8CF4 20 FA        	jr nz,2B
1098  8CF6 78           	ld a,b
1099  8CF7
1100  8CF7 32 61 89     1 ld (Numero_de_disparotes),a
1101  8CFA C9           	ret
1102  8CFB
1103  8CFB              ; *************************************************************************************************************************************************************
1104  8CFB              ;
1105  8CFB              ; 20/10/22
1106  8CFB              ;
1107  8CFB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1108  8CFB              ;
1109  8CFB              ; Destruye el puntero y DE !!!!!
1110  8CFB
1111  8CFB 5E           Extrae_address ld e,(hl)
1112  8CFC 23           	inc hl
1113  8CFD 56           	ld d,(hl)
1114  8CFE 2B           	dec hl
1115  8CFF EB           	ex de,hl
1116  8D00 C9           	ret
1117  8D01
1118  8D01              ; *************************************************************************************************************************************************************
1119  8D01              ;
1120  8D01              ;	7/2/23
1121  8D01              ;
1122  8D01              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1123  8D01              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1124  8D01              ;
1125  8D01              ;   Destruye HL y BC !!!!!,
1126  8D01              ;
1127  8D01              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1128  8D01              ;					"0" ..... Izquierda.
1129  8D01
1130  8D01              Inicia_Puntero_objeto
1131  8D01
1132  8D01 3A F9 88     	ld a,(Cuad_objeto)
1133  8D04 E6 01        	and 1
1134  8D06 F5           	push af
1135  8D07 CC 25 8D     	call z,Inicia_puntero_objeto_izq
1136  8D0A F1           	pop af
1137  8D0B 28 2B        	jr z,1F
1138  8D0D CD 12 8D     	call Inicia_puntero_objeto_der
1139  8D10 18 26        	jr 1F
1140  8D12
1141  8D12              ; Arrancamos desde la parte izquierda de la pantalla.
1142  8D12              ; Iniciamos (Indice_Sprite_der).
1143  8D12
1144  8D12 2A EF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1145  8D15 22 F3 88     	ld (Puntero_DESPLZ_der),hl
1146  8D18 CD FB 8C     	call Extrae_address
1147  8D1B 22 E9 88     	ld (Puntero_objeto),hl
1148  8D1E
1149  8D1E 2A F1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1150  8D21 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
1151  8D24 C9           	ret
1152  8D25
1153  8D25              ; Arrancamos desde la parte derecha de la pantalla.
1154  8D25              ; Iniciamos (Indice_Sprite_izq).
1155  8D25
1156  8D25 2A F1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1157  8D28 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
1158  8D2B CD FB 8C     	call Extrae_address
1159  8D2E 22 E9 88     	ld (Puntero_objeto),hl
1160  8D31
1161  8D31 2A EF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1162  8D34 22 F3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1163  8D37 C9           	ret
1164  8D38
1165  8D38              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1166  8D38
1167  8D38 21 40 83     1 ld hl,Amadeus
1168  8D3B ED 4B E9 88  	ld bc,(Puntero_objeto)
1169  8D3F B7 ED 42     	sub hl,bc
1170  8D42 C0           	ret nz
1171  8D43 21 13 89     	ld hl,Ctrl_0
1172  8D46 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1173  8D48 C9           	ret 												; _de nuestra nave en los extremos.
1174  8D49
1175  8D49              ; *************************************************************************************************************************************************************
1176  8D49              ;
1177  8D49              ;	14/5/23
1178  8D49              ;
1179  8D49              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1180  8D49              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1181  8D49
1182  8D49              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1183  8D49              ;	_de la 2ª y 3ª entidad respectivamente.
1184  8D49
1185  8D49              Store_Restore_cajas
1186  8D49
1187  8D49 E5           	push hl
1188  8D4A D5           	push de
1189  8D4B C5            	push bc
1190  8D4C
1191  8D4C              ;	STORE !!!!!
1192  8D4C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1193  8D4C
1194  8D4C 21 E5 88     	ld hl,Filas
1195  8D4F ED 5B 2B 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1196  8D53 01 43 00     	ld bc,67
1197  8D56 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1198  8D58
1199  8D58              ; 	Entidad_sospechosa. 20/4/23
1200  8D58
1201  8D58 3A FE 88     	ld a,(Impacto)
1202  8D5B A7           	and a
1203  8D5C 28 0C        	jr z,1F
1204  8D5E
1205  8D5E 2A 2B 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1206  8D61 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1207  8D64 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1208  8D65 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1209  8D67 22 67 89     	ld (Entidad_sospechosa_de_colision),hl
1210  8D6A
1211  8D6A              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1212  8D6A
1213  8D6A 2A 2D 89     1 ld hl,(Puntero_restore_caja)
1214  8D6D 7E           	ld a,(hl)
1215  8D6E A7           	and a
1216  8D6F F5           	push af
1217  8D70 28 08        	jr z,2F
1218  8D72
1219  8D72 11 E5 88     	ld de,Filas
1220  8D75 01 43 00     	ld bc,67
1221  8D78 ED B0        	ldir
1222  8D7A
1223  8D7A CD 96 8D     2 call Incrementa_punteros_de_cajas
1224  8D7D F1           	pop af
1225  8D7E 28 EA        	jr z,1B
1226  8D80
1227  8D80 C1           	pop bc
1228  8D81 D1           	pop de
1229  8D82 E1           	pop hl
1230  8D83
1231  8D83 C9           	ret
1232  8D84
1233  8D84              ; **************************************************************************************************
1234  8D84              ;
1235  8D84              ;	12/05/23
1236  8D84              ;
1237  8D84              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1238  8D84
1239  8D84 E5           Restore_entidad push hl
1240  8D85 D5           	push de
1241  8D86 C5            	push bc
1242  8D87
1243  8D87 2A 2B 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1244  8D8A 11 E5 88     	ld de,Filas
1245  8D8D 01 43 00     	ld bc,67
1246  8D90 ED B0        	ldir
1247  8D92
1248  8D92 C1           	pop bc
1249  8D93 D1           	pop de
1250  8D94 E1           	pop hl
1251  8D95 C9           	ret
1252  8D96
1253  8D96
1254  8D96              ; **************************************************************************************************
1255  8D96              ;
1256  8D96              ;	08/05/23
1257  8D96              ;
1258  8D96              ;	Incrementamos los dos punteros de entidades. (+1).
1259  8D96
1260  8D96 2A 2D 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1261  8D99 22 2B 89     	ld (Puntero_store_caja),hl
1262  8D9C 2A 2F 89     	ld hl,(Indice_restore_caja)
1263  8D9F 23           	inc hl
1264  8DA0 23           	inc hl
1265  8DA1 22 2F 89     	ld (Indice_restore_caja),hl
1266  8DA4 CD FB 8C         call Extrae_address
1267  8DA7 22 2D 89         ld (Puntero_restore_caja),hl
1268  8DAA C9               ret
1269  8DAB
1270  8DAB              ; **************************************************************************************************
1271  8DAB              ;
1272  8DAB              ;	25/01/23
1273  8DAB              ;
1274  8DAB              ;	Restore_Amadeus
1275  8DAB              ;
1276  8DAB              ;	Cargamos en DRAW los parámetros de Amadeus.
1277  8DAB              ;
1278  8DAB
1279  8DAB E5           Restore_Amadeus	push hl
1280  8DAC D5           	push de
1281  8DAD C5            	push bc
1282  8DAE 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1283  8DB1 11 E5 88     	ld de,Filas
1284  8DB4 01 43 00     	ld bc,67
1285  8DB7 ED B0        	ldir
1286  8DB9 C1           	pop bc
1287  8DBA D1           	pop de
1288  8DBB E1           	pop hl
1289  8DBC C9           	ret
1290  8DBD
1291  8DBD              ; *************************************************************************************************************************************************************
1292  8DBD              ;
1293  8DBD              ;	29/04/23
1294  8DBD              ;
1295  8DBD              ;	Store_Amadeus
1296  8DBD              ;
1297  8DBD              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1298  8DBD              ;
1299  8DBD              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1300  8DBD              ;
1301  8DBD              ;	DESTRUYE: HL y BC y DE.
1302  8DBD
1303  8DBD 21 E5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1304  8DC0 01 43 00     	ld bc,67
1305  8DC3 ED B0        	ldir
1306  8DC5 C9           	ret
1307  8DC6
1308  8DC6              ; -----------------------------------------------------------
1309  8DC6              ;
1310  8DC6              ;	27/04/23
1311  8DC6              ;
1312  8DC6              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1313  8DC6              ;
1314  8DC6              ;	Destruye: HL,BC,DE,A
1315  8DC6
1316  8DC6 21 E5 88     Borra_datos_entidad ld hl,Filas
1317  8DC9 01 42 00     	ld bc,66
1318  8DCC AF           	xor a
1319  8DCD 77           	ld (hl),a
1320  8DCE 11 E6 88     	ld de,Filas+1
1321  8DD1 ED B0        	ldir
1322  8DD3 C9           	ret
1323  8DD4
1324  8DD4              ; -----------------------------------------------------------
1325  8DD4
1326  8DD4              ; Teclado.
1327  8DD4
1328  8DD4 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1329  8DD6 DB FE        	in a,($fe)
1330  8DD8 E6 01        	and $01
1331  8DDA 28 02        	jr z,1f
1332  8DDC 18 F6        	jr Pulsa_ENTER
1333  8DDE C9           1 ret
1334  8DDF
1335  8DDF              ; **************************************************************************************************
1336  8DDF              ;
1337  8DDF              ; Temporización.
1338  8DDF
1339  8DDF              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1340  8DDF              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1341  8DDF              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1342  8DDF              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1343  8DDF
1344  8DDF              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1345  8DDF              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1346  8DDF              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1347  8DDF
1348  8DDF              ; A partir de $4f61 no hace falta DELAY.
1349  8DDF
1350  8DDF              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1351  8DDF
1352  8DDF 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1353  8DE2 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1354  8DE3 78           	LD A,B
1355  8DE4 A7           	AND A
1356  8DE5 20 FB        	JR NZ,wait
1357  8DE7 C9           	RET
1358  8DE8
1359  8DE8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1360  8DE8              ;
1361  8DE8              ;	5/3/23
1362  8DE8              ;
1363  8DE8              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1364  8DE8
1365  8DE8              Movimiento_Amadeus
1366  8DE8
1367  8DE8              ; Disparo.
1368  8DE8
1369  8DE8 3A 79 89     	ld a,(Disparo_Amadeus)
1370  8DEB A7           	and a
1371  8DEC 20 02        	jr nz,1F
1372  8DEE 18 15        	jr 2F
1373  8DF0
1374  8DF0 3E F7        1 ld a,$f7													; "5" para disparar.
1375  8DF2 DB FE        	in a,($fe)
1376  8DF4 E6 10        	and $10
1377  8DF6
1378  8DF6 F5           	push af
1379  8DF7 CC B9 8E     	call z,Genera_disparo
1380  8DFA F1           	pop af
1381  8DFB 20 08        	jr nz,2F
1382  8DFD
1383  8DFD 3A 79 89     	ld a,(Disparo_Amadeus)
1384  8E00 EE 01        	xor 1
1385  8E02 32 79 89     	ld (Disparo_Amadeus),a
1386  8E05
1387  8E05 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1388  8E07 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1389  8E09 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1390  8E0B CC 8A 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1391  8E0E 3E F7        	ld a,$f7
1392  8E10 DB FE        	in a,($fe)
1393  8E12 E6 01        	and $01
1394  8E14 C8           	ret z
1395  8E15
1396  8E15 3E F7        	ld a,$f7
1397  8E17 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1398  8E19 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1399  8E1B CC 6C 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1400  8E1E C9           	ret
1401  8E1F
1402  8E1F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1403  8E1F              ;
1404  8E1F              ;	Rutina provisional para que los malotes cagen balas.
1405  8E1F
1406  8E1F              Detecta_disparo_entidad
1407  8E1F
1408  8E1F 3A 7C 89     	ld a,(Disparo_entidad)
1409  8E22 A7           	and a
1410  8E23 C8           	ret z
1411  8E24
1412  8E24              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1413  8E24
1414  8E24              ;	ld a,$7f				; Detecta SPACE.
1415  8E24              ;	in a,($fe)
1416  8E24              ;	and 1
1417  8E24              ;	ret nz
1418  8E24
1419  8E24              ;	call Genera_disparo
1420  8E24 C9           	ret
1421  8E25
1422  8E25              ; ----------------------------------------------------------------------
1423  8E25              ;
1424  8E25              ;	11/8/23
1425  8E25
1426  8E25              Frame
1427  8E25
1428  8E25              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1429  8E25              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1430  8E25
1431  8E25              ; PINTAMOS.
1432  8E25
1433  8E25 ED 73 3D 89  	ld (Stack_3),sp
1434  8E29
1435  8E29              ; Guardamos registros y SP.
1436  8E29
1437  8E29 08           	ex af,af'
1438  8E2A F5           	push af	;af'
1439  8E2B D9           	exx
1440  8E2C E5           	push hl	;hl'
1441  8E2D D5           	push de	;de'
1442  8E2E C5           	push bc	;bc'
1443  8E2F D9           	exx
1444  8E30 E5           	push hl	;hl
1445  8E31 D5           	push de	;de
1446  8E32 C5           	push bc	;bc
1447  8E33 08           	ex af,af'
1448  8E34 F5           	push af	;af
1449  8E35 DD E5        	push ix
1450  8E37 FD E5        	push iy
1451  8E39
1452  8E39 3E 02        	ld a,2
1453  8E3B D3 FE            out ($fe),a											; Rojo.
1454  8E3D
1455  8E3D              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1456  8E3D              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1457  8E3D
1458  8E3D 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
1459  8E40 01 EC 84     	ld bc,Indice_album_de_fotos
1460  8E43 A7           	and a
1461  8E44 ED 42        	sbc hl,bc
1462  8E46 28 57        	jr z,6F
1463  8E48
1464  8E48 CD AF 8C     	call Calcula_numero_de_malotes
1465  8E4B CD BD 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1466  8E4E
1467  8E4E CD C7 8C     	call Calcula_malotes_Amadeus
1468  8E51 CD 3F 97     	call Extrae_foto_Amadeus
1469  8E54 CD 96 8C     	call Limpia_album_Amadeus
1470  8E57
1471  8E57              ;	call Extrae_foto_disparos
1472  8E57 3E 01            ld a,1
1473  8E59 D3 FE            out ($fe),a											; Azul.
1474  8E5B
1475  8E5B              ; 	Gestiona albumes de fotos.
1476  8E5B
1477  8E5B              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1478  8E5B CD AD 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1479  8E5E
1480  8E5E              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1481  8E5E
1482  8E5E 3A 28 89     	ld a,(Ctrl_1)
1483  8E61 CB 6F        	bit 5,a
1484  8E63 20 24        	jr nz,1F
1485  8E65
1486  8E65              ; No hemos terminado de guardar el último FRAME.
1487  8E65
1488  8E65 2A 55 89     	ld hl,(Puntero_indice_album_de_fotos)
1489  8E68              ;	ld bc,Indice_album_de_fotos
1490  8E68 2B           	dec hl
1491  8E69 2B           	dec hl
1492  8E6A
1493  8E6A              ;	ld a,l
1494  8E6A              ;	sub c
1495  8E6A              ;	jr z,$
1496  8E6A
1497  8E6A 22 55 89     	ld (Puntero_indice_album_de_fotos),hl
1498  8E6D
1499  8E6D 2A 59 89     	ld hl,(Puntero_indice_End_Snapshot)
1500  8E70 2B           	dec hl
1501  8E71 2B           	dec hl
1502  8E72 22 59 89     	ld (Puntero_indice_End_Snapshot),hl
1503  8E75 CD FB 8C     	call Extrae_address
1504  8E78 22 5D 89     	ld (Puntero_de_End_Snapshot),hl
1505  8E7B
1506  8E7B CD FB 8C     	call Extrae_address
1507  8E7E
1508  8E7E              ; Esta vacío este album???
1509  8E7E
1510  8E7E 24           	inc h
1511  8E7F 25           	dec h
1512  8E80 20 02        	jr nz,5F
1513  8E82
1514  8E82              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1515  8E82
1516  8E82 18 05        	jr 1F
1517  8E84
1518  8E84 22 3F 89     5 ld (Stack_snapshot),hl
1519  8E87 18 09        	jr 2F
1520  8E89
1521  8E89              ; FRAME completo.
1522  8E89
1523  8E89 2A 55 89     1 ld hl,(Puntero_indice_album_de_fotos)
1524  8E8C CD FB 8C     	call Extrae_address
1525  8E8F 22 3F 89     	ld (Stack_snapshot),hl
1526  8E92
1527  8E92              ;	En este punto:
1528  8E92
1529  8E92              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1530  8E92              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1531  8E92
1532  8E92              ; RELOJES.
1533  8E92
1534  8E92 21 74 89     2 ld hl,Contador_de_frames
1535  8E95 7E           	ld a,(hl)
1536  8E96 FE FF        	cp $ff
1537  8E98 20 04        	jr nz,3F
1538  8E9A 34           	inc (hl)
1539  8E9B 21 75 89     	ld hl,Contador_de_frames_2
1540  8E9E 34           3 inc (hl)											; 0 - 255
1541  8E9F
1542  8E9F 21 28 89     6 ld hl,Ctrl_1
1543  8EA2 CB AE        	res 5,(hl)
1544  8EA4
1545  8EA4              ; Recuperamos registros y SP.
1546  8EA4
1547  8EA4 FD E1        	pop iy
1548  8EA6 DD E1        	pop ix
1549  8EA8 F1           	pop af
1550  8EA9 C1           	pop bc
1551  8EAA D1           	pop de
1552  8EAB E1           	pop hl
1553  8EAC D9           	exx
1554  8EAD C1           	pop bc
1555  8EAE D1           	pop de
1556  8EAF E1           	pop hl
1557  8EB0 08           	ex af,af'
1558  8EB1 F1           	pop af
1559  8EB2 08           	ex af,af'
1560  8EB3 D9           	exx
1561  8EB4
1562  8EB4 ED 7B 3D 89  	ld sp,(Stack_3)
1563  8EB8 C9           	ret
1564  8EB9
1565  8EB9              ; ---------------------------------------------------------------
1566  8EB9
1567  8EB9              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EB9              ; ******************************************************************************************************************************************************************************************
   2+ 8EB9              ;
   3+ 8EB9              ;   21/07/23
   4+ 8EB9              ;
   5+ 8EB9              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EB9              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EB9              ;
   8+ 8EB9              ;
   9+ 8EB9              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EB9              ;
  11+ 8EB9              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EB9              ;               _ hacen las entidades hacia abajo.
  13+ 8EB9              ;
  14+ 8EB9              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EB9              ;
  16+ 8EB9              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EB9              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EB9              ;
  19+ 8EB9              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EB9              ;           _ la bala.
  21+ 8EB9              ;
  22+ 8EB9              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EB9              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EB9              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EB9              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EB9              ;           _ en el momento de generarse la bala)).
  27+ 8EB9
  28+ 8EB9              Genera_disparo
  29+ 8EB9
  30+ 8EB9              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EB9              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EB9              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EB9              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EB9              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EB9              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EB9              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EB9
  38+ 8EB9              ; Exclusiones:
  39+ 8EB9
  40+ 8EB9 3A FD 88         ld a,(Vel_down)
  41+ 8EBC 47               ld b,a
  42+ 8EBD 3A 73 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EC0 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EC1 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EC2 3A 22 89         ld a,(Columnas)
  46+ 8EC5 47               ld b,a
  47+ 8EC6 3A E6 88         ld a,(Columns)
  48+ 8EC9 B8               cp b
  49+ 8ECA C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8ECB
  51+ 8ECB              ; ----- ----- -----
  52+ 8ECB
  53+ 8ECB 3A 13 89         ld a,(Ctrl_0)
  54+ 8ECE CB 77            bit 6,a
  55+ 8ED0 20 06            jr nz,14F
  56+ 8ED2
  57+ 8ED2 3A EC 88         ld a,(Coordenada_y)
  58+ 8ED5 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ED7 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8ED8
  61+ 8ED8 21 00 80     14 ld hl,Indice_disparo
  62+ 8EDB 3A ED 88         ld a,(CTRL_DESPLZ)
  63+ 8EDE 4F               ld c,a
  64+ 8EDF 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EE1              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EE1              ;                                            ""        ""       "f9", B="1"
  67+ 8EE1              ;                                            ""        ""       "fb", B="2"
  68+ 8EE1              ;                                            ""        ""       "fb", B="3"
  69+ 8EE1 A7               and a
  70+ 8EE2 28 10            jr z,1F
  71+ 8EE4 E6 01            and 1
  72+ 8EE6 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EE7
  74+ 8EE7 79               ld a,c
  75+ 8EE8 16 F9            ld d,$f9
  76+ 8EEA 23           2 inc hl
  77+ 8EEB 23               inc hl
  78+ 8EEC 04               inc b
  79+ 8EED BA               cp d
  80+ 8EEE 28 04            jr z,1F
  81+ 8EF0 14               inc d
  82+ 8EF1 14               inc d
  83+ 8EF2 18 F6            jr 2B
  84+ 8EF4
  85+ 8EF4 CD FB 8C     1 call Extrae_address
  86+ 8EF7 E5               push hl
  87+ 8EF8 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EFA DD 21 85 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EFE
  90+ 8EFE              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EFE              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EFE
  93+ 8EFE 3A 13 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F01 CB 77            bit 6,a
  95+ 8F03 20 04            jr nz,19F
  96+ 8F05
  97+ 8F05 AF               xor a
  98+ 8F06 32 7C 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F09
 100+ 8F09 3A F9 88     19 ld a,(Cuad_objeto)
 101+ 8F0C FE 02            cp 2
 102+ 8F0E 38 66            jr c,3F
 103+ 8F10 28 64            jr z,3F
 104+ 8F12
 105+ 8F12              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F12
 107+ 8F12 E6 01            and 1
 108+ 8F14 28 30            jr z,4F
 109+ 8F16
 110+ 8F16              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F16              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F16              ;
 113+ 8F16              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F16              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F16              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F16
 117+ 8F16 2A E7 88     	ld hl,(Posicion_actual)
 118+ 8F19
 119+ 8F19              ;   Amadeus o entidad ???.
 120+ 8F19
 121+ 8F19 3A 13 89         ld a,(Ctrl_0)
 122+ 8F1C CB 77            bit 6,a
 123+ 8F1E 28 0A            jr z,8F
 124+ 8F20
 125+ 8F20              ; 	Dispara Amadeus.
 126+ 8F20
 127+ 8F20 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F22 CD AE 96         call PreviousScan
 129+ 8F25 CD AE 96         call PreviousScan
 130+ 8F28
 131+ 8F28              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F28              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F28              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F28
 136+ 8F28 18 11            jr 10F
 137+ 8F2A
 138+ 8F2A              ; 	Dispara Entidad.
 139+ 8F2A
 140+ 8F2A 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F2D              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F2D
 143+ 8F2D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F2D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F2D
 146+ 8F2D C5               push bc
 147+ 8F2E 06 10            ld b,16
 148+ 8F30 CD 9F 96     9 call NextScan
 149+ 8F33 10 FB            djnz 9B
 150+ 8F35 C1               pop bc
 151+ 8F36 CD A0 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F39 18 06            jr 17F
 153+ 8F3B
 154+ 8F3B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F3B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F3B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F3B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F3B
 159+ 8F3B CD A0 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F3E CD 15 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F41              ;                                                      ; _al generar el disparo.
 162+ 8F41
 163+ 8F41              ; 	LLegados a este punto tendremos:
 164+ 8F41              ;
 165+ 8F41              ;       Puntero_objeto_disparo en IY.
 166+ 8F41              ;       Rutinas_de_impresion en IX.
 167+ 8F41              ;       Puntero_de_impresion en HL.
 168+ 8F41              ;       Impacto/Dirección en BC.
 169+ 8F41
 170+ 8F41 CD A8 8F     17 call Almacena_disparo
 171+ 8F44 18 52            jr 6F                                             ; RET.
 172+ 8F46
 173+ 8F46              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F46              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F46              ;
 176+ 8F46              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F46              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F46              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F46
 180+ 8F46 2A E7 88     4 ld hl,(Posicion_actual)
 181+ 8F49
 182+ 8F49              ;   Amadeus o entidad ???.
 183+ 8F49
 184+ 8F49 3A 13 89         ld a,(Ctrl_0)
 185+ 8F4C CB 77            bit 6,a
 186+ 8F4E 28 0A            jr z,11F
 187+ 8F50
 188+ 8F50              ; 	Dispara Amadeus.
 189+ 8F50
 190+ 8F50 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F52 CD AE 96         call PreviousScan
 192+ 8F55 CD AE 96         call PreviousScan
 193+ 8F58
 194+ 8F58              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F58              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F58              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F58              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F58
 199+ 8F58 18 11            jr 13F
 200+ 8F5A
 201+ 8F5A              ; 	Dispara Entidad.
 202+ 8F5A
 203+ 8F5A 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F5D              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F5D
 206+ 8F5D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F5D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F5D
 209+ 8F5D C5               push bc
 210+ 8F5E 06 10            ld b,16
 211+ 8F60 CD 9F 96     12 call NextScan
 212+ 8F63 10 FB            djnz 12B
 213+ 8F65 C1               pop bc
 214+ 8F66
 215+ 8F66 CD 99 8F         call Ajusta_disparo_parte_derecha
 216+ 8F69 18 06            jr 18F
 217+ 8F6B
 218+ 8F6B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F6B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F6B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F6B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F6B
 223+ 8F6B CD 99 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F6E CD 15 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F71              ;                                                       ; _al generar el disparo.
 226+ 8F71
 227+ 8F71              ; LLegados a este punto tendremos:
 228+ 8F71              ;
 229+ 8F71              ;       Puntero_objeto_disparo en IY.
 230+ 8F71              ;       Rutinas_de_impresion en IX.
 231+ 8F71              ;       Puntero_de_impresion en HL.
 232+ 8F71              ;       Impacto/Dirección en BC.
 233+ 8F71
 234+ 8F71 CD A8 8F     18 call Almacena_disparo
 235+ 8F74 18 22            jr 6F                                               ; RET.
 236+ 8F76
 237+ 8F76              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F76
 239+ 8F76 28 11        3 jr z,5F
 240+ 8F78
 241+ 8F78              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F78              ;
 243+ 8F78              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F78              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F78              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F78              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F78
 248+ 8F78              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F78              ;	   ""        ""       "f9", B="1"
 250+ 8F78              ;	   ""        ""       "fb", B="2"
 251+ 8F78              ; 	   ""        ""       "fb", B="3"
 252+ 8F78
 253+ 8F78 2A E7 88     	ld hl,(Posicion_actual)
 254+ 8F7B CD 9F 96     	call NextScan
 255+ 8F7E
 256+ 8F7E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F7E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F7E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F7E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F7E
 261+ 8F7E CD A0 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F81
 263+ 8F81              ; 	No se produce impacto. B="$80"
 264+ 8F81              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F81
 266+ 8F81 01 80 80         ld bc,$8080
 267+ 8F84
 268+ 8F84              ; 	LLegados a este punto tendremos:
 269+ 8F84              ;
 270+ 8F84              ;       Puntero_objeto_disparo en IY.
 271+ 8F84              ;       Rutinas_de_impresion en IX.
 272+ 8F84              ;       Puntero_de_impresion en HL.
 273+ 8F84              ;       Impacto/Dirección en BC.
 274+ 8F84
 275+ 8F84 CD A8 8F         call Almacena_disparo
 276+ 8F87 18 0F            jr 6F                                           ; RET.
 277+ 8F89
 278+ 8F89              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F89              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F89              ;
 281+ 8F89              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F89              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F89              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F89              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F89
 286+ 8F89 2A E7 88     5 ld hl,(Posicion_actual)
 287+ 8F8C CD 9F 96     	call NextScan
 288+ 8F8F
 289+ 8F8F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F8F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F8F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F8F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F8F
 294+ 8F8F CD 99 8F         call Ajusta_disparo_parte_derecha
 295+ 8F92
 296+ 8F92              ; 	No se produce impacto. B="$80"
 297+ 8F92              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F92
 299+ 8F92 01 80 80     15 ld bc,$8080
 300+ 8F95
 301+ 8F95              ; 	LLegados a este punto tendremos:
 302+ 8F95              ;
 303+ 8F95              ;       Puntero_objeto_disparo en IY.
 304+ 8F95              ;       Rutinas_de_impresion en IX.
 305+ 8F95              ;       Puntero_de_impresion en HL.
 306+ 8F95              ;       Impacto/Dirección en BC.
 307+ 8F95
 308+ 8F95 CD A8 8F         call Almacena_disparo
 309+ 8F98
 310+ 8F98 C9           6 ret
 311+ 8F99
 312+ 8F99              ; ----------------------------------------------------------------
 313+ 8F99              ;
 314+ 8F99              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F99              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F99              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F99
 318+ 8F99 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F9A FE 02            cp 2
 320+ 8F9C 38 01            jr c,1F
 321+ 8F9E 23               inc hl
 322+ 8F9F C9           1 ret
 323+ 8FA0
 324+ 8FA0 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FA1 FE 01        	cp 1
 326+ 8FA3 20 01        	jr nz,1F
 327+ 8FA5 2B           	dec hl
 328+ 8FA6 2B           1 dec hl
 329+ 8FA7 C9               ret
 330+ 8FA8
 331+ 8FA8              ; ----------------------------------------------------------------
 332+ 8FA8              ;
 333+ 8FA8              ;   25/02/23
 334+ 8FA8              ;
 335+ 8FA8              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FA8              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FA8              ;
 338+ 8FA8              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FA8              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FA8
 341+ 8FA8              Almacena_disparo
 342+ 8FA8
 343+ 8FA8 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FA9 F1               pop af
 345+ 8FAA 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FAB
 347+ 8FAB 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FAC E6 01            and 1
 349+ 8FAE 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FB0              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FB0              ; 	Dispara AMADEUS.
 352+ 8FB0
 353+ 8FB0              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FB0              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FB0              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FB0              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FB0
 358+ 8FB0 C5               push bc
 359+ 8FB1 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FB4 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FB7 A7               and a
 362+ 8FB8 ED 42            sbc hl,bc
 363+ 8FBA CC 8F 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FBD C1               pop bc
 365+ 8FBE 28 54            jr z,4F
 366+ 8FC0
 367+ 8FC0 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FC3 23               inc hl
 369+ 8FC4 23               inc hl
 370+ 8FC5 22 64 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FC8              ;                                                   ; _ Disparo_(+1).
 372+ 8FC8 18 18            jr 2F
 373+ 8FCA
 374+ 8FCA              ; Dispara una entidad.
 375+ 8FCA
 376+ 8FCA C5           1 push bc
 377+ 8FCB 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FCE 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FD1 A7               and a
 380+ 8FD2 ED 42            sbc hl,bc
 381+ 8FD4 CC 88 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FD7 C1               pop bc
 383+ 8FD8 28 3A            jr z,4F
 384+ 8FDA
 385+ 8FDA 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FDD 23               inc hl
 387+ 8FDE 23               inc hl
 388+ 8FDF 22 62 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FE2              ;                                                   ; _ Disparo_(+1).
 390+ 8FE2 CD FB 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FE5              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FE5              ;
 393+ 8FE5              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FE5              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FE5              ;                                                     Puntero_de_impresion en HL.
 396+ 8FE5              ;                                                     Impacto/Dirección en BC.
 397+ 8FE5
 398+ 8FE5 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FE6 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FE7 23               inc hl                                          ; _ al siguiente.
 401+ 8FE8 A7               and a
 402+ 8FE9 20 C0            jr nz,3B
 403+ 8FEB
 404+ 8FEB 08               ex af,af
 405+ 8FEC ED 73 39 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FF0 F9               ld sp,hl
 407+ 8FF1
 408+ 8FF1 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FF3 F5               push af                                         ; Puntero de impresión.
 410+ 8FF4 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FF6 C5               push bc                                         ; Control.
 412+ 8FF7
 413+ 8FF7 ED 7B 39 89      ld sp,(Stack)
 414+ 8FFB
 415+ 8FFB              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FFB
 417+ 8FFB 21 28 89     	ld hl,Ctrl_1
 418+ 8FFE CB C6        	set 0,(hl)
 419+ 9000
 420+ 9000 DD E5        	push ix
 421+ 9002 E1               pop hl
 422+ 9003 F5               push af
 423+ 9004 DD E1            pop ix
 424+ 9006
 425+ 9006 CD A0 7F     	call Guarda_foto_registros
 426+ 9009
 427+ 9009 21 28 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 900C CB 86        	res 0,(hl)
 429+ 900E
 430+ 900E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 900E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 900E
 433+ 900E CD 8F 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9011 CD 88 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9014
 436+ 9014 C9           4 ret
 437+ 9015
 438+ 9015              ; ----------------------------------------------------------------
 439+ 9015              ;
 440+ 9015              ;   4/3/23
 441+ 9015              ;
 442+ 9015              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9015              ;   _ al generarse el disparo.
 444+ 9015              ;
 445+ 9015              ;       "$80" ..... No se produce colisión.
 446+ 9015              ;       "$81" ..... Se produce colisión.
 447+ 9015              ;
 448+ 9015              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9015              ;         _ que forman el disparo.
 450+ 9015
 451+ 9015
 452+ 9015              Comprueba_Colision
 453+ 9015
 454+ 9015              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9015
 456+ 9015 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9017 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9018
 459+ 9018 CD 4E 90         call Modifica_H_Velocidad_disparo
 460+ 901B
 461+ 901B 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 901C FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 901E 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9020
 465+ 9020 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9022 CD 3E 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9025
 468+ 9025 7B               ld a,e
 469+ 9026 E6 01            and 1
 470+ 9028 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 902A              ;                                                  ; _ para activar IMPACTO.
 472+ 902A E1               pop hl
 473+ 902B E5               push hl
 474+ 902C CD 9F 96         call NextScan
 475+ 902F
 476+ 902F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9030 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9032 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9034              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9034 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9036 CD 3E 90         call Bucle_2
 482+ 9039
 483+ 9039 43           1 ld b,e
 484+ 903A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 903B FD E1            pop iy
 486+ 903D C9               ret
 487+ 903E
 488+ 903E              ; ---------- ----------
 489+ 903E
 490+ 903E 06 02        Bucle_2 ld b,2
 491+ 9040 FD 7E 00     2 ld a,(iy)
 492+ 9043 A6               and (hl)
 493+ 9044 28 02            jr z,1F
 494+ 9046 1E 81            ld e,$81
 495+ 9048 23           1 inc hl
 496+ 9049 FD 23            inc iy
 497+ 904B 10 F3            djnz 2B
 498+ 904D C9               ret
 499+ 904E
 500+ 904E              ; ---------- ----------
 501+ 904E              ;
 502+ 904E              ;   21/7/23
 503+ 904E
 504+ 904E              Modifica_H_Velocidad_disparo
 505+ 904E
 506+ 904E 3A 73 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9051 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9053 D0               ret nc                                         ; _ incrementamos H.
 509+ 9054 24               inc h
 510+ 9055
 511+ 9055 C9               ret
 512+ 9056
 513+ 9056              ; -------------------------------------------------------------------------------------------------------------
 514+ 9056              ;
 515+ 9056              ;   11/04/23
 516+ 9056              ;
 517+ 9056              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9056              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9056              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9056              ;
 521+ 9056              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9056
 523+ 9056              Compara_coordenadas_X
 524+ 9056
 525+ 9056              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9056              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9056
 528+ 9056              ; Preparamos registros:
 529+ 9056
 530+ 9056 21 EB 88         ld hl,Filas+6
 531+ 9059 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 905A 23               inc hl
 533+ 905B 23               inc hl
 534+ 905C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 905D 43               ld b,e
 536+ 905E
 537+ 905E 21 F9 88         ld hl,Filas+20
 538+ 9061 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9062 21 6E 89         ld hl,Coordenadas_X_Entidad
 540+ 9065 CD 81 92         call Guarda_coordenadas_X
 541+ 9068
 542+ 9068              ; Preparamos registros:
 543+ 9068
 544+ 9068 21 A4 85         ld hl,Amadeus_db+6
 545+ 906B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 906C 23               inc hl
 547+ 906D 23               inc hl
 548+ 906E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 906F 7B               ld a,e
 550+ 9070 08               ex af,af'
 551+ 9071 21 B2 85         ld hl,Amadeus_db+20
 552+ 9074 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9075 21 6B 89         ld hl,Coordenadas_X_Amadeus
 554+ 9078 CD 81 92         call Guarda_coordenadas_X
 555+ 907B
 556+ 907B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 907B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 907B
 559+ 907B 04               inc b
 560+ 907C 05               dec b
 561+ 907D 28 04            jr z,1F
 562+ 907F 06 03            ld b,3
 563+ 9081 18 02            jr 2F
 564+ 9083 06 02        1 ld b,2
 565+ 9085 08           2 ex af,af'
 566+ 9086 3C               inc a
 567+ 9087 3D               dec a
 568+ 9088 28 04            jr z,5F
 569+ 908A 0E 03            ld c,3
 570+ 908C 18 02            jr 6F
 571+ 908E 0E 02        5 ld c,2
 572+ 9090 79           6 ld a,c
 573+ 9091 08               ex af,af'
 574+ 9092 11 6E 89         ld de,Coordenadas_X_Entidad
 575+ 9095 1A           4 ld a,(de)
 576+ 9096 21 6B 89         ld hl,Coordenadas_X_Amadeus
 577+ 9099 BE           3 cp (hl)
 578+ 909A 28 0E            jr z,7F
 579+ 909C 23               inc hl
 580+ 909D 0D               dec c
 581+ 909E 20 F9            jr nz,3B
 582+ 90A0 13               inc de
 583+ 90A1 08               ex af,af'
 584+ 90A2 4F               ld c,a
 585+ 90A3 08               ex af,af'
 586+ 90A4 10 EF            djnz 4B
 587+ 90A6
 588+ 90A6              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90A6
 590+ 90A6 CD BD 92     8 call Limpia_Coordenadas_X
 591+ 90A9 C9               ret
 592+ 90AA
 593+ 90AA 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90AC 32 FE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90AF 21 66 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90B2 CB D6            set 2,(hl)
 597+ 90B4 18 F0            jr 8B
 598+ 90B6
 599+ 90B6              ; -----------------------------------------------------------------------
 600+ 90B6              ;
 601+ 90B6              ;   17/04/23
 602+ 90B6              ;
 603+ 90B6
 604+ 90B6              Detecta_colision_nave_entidad
 605+ 90B6
 606+ 90B6              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90B6
 608+ 90B6 2A E7 88         ld hl,(Posicion_actual)
 609+ 90B9 CD FA 95         call Calcula_puntero_de_impresion
 610+ 90BC
 611+ 90BC              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90BC              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90BC
 614+ 90BC DD E5            push ix
 615+ 90BE E1               pop hl
 616+ 90BF E5               push hl
 617+ 90C0
 618+ 90C0              ; ----- ----- -----
 619+ 90C0 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90C2 06 0A            ld b,10
 621+ 90C4 CD F4 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90C7 7B               ld a,e
 623+ 90C8 FE 05            cp 5
 624+ 90CA 38 0E            jr c,3F
 625+ 90CC
 626+ 90CC              ; LLegados a este punto:
 627+ 90CC              ;
 628+ 90CC              ;   HAY COLISIÓN !!!!!.
 629+ 90CC              ;
 630+ 90CC              ;   .db (Impacto) de Amadeus a "1".
 631+ 90CC              ;   SET el bit3 de (Impacto2).
 632+ 90CC              ;
 633+ 90CC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90CC
 635+ 90CC 21 B7 85         ld hl,Amadeus_db+25
 636+ 90CF 36 01            ld (hl),1
 637+ 90D1 21 66 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90D4 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90D6 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90D8 18 18            jr 1F
 641+ 90DA
 642+ 90DA              ; -----
 643+ 90DA
 644+ 90DA E1           3 pop hl
 645+ 90DB CD 9F 96         call NextScan
 646+ 90DE E5               push hl
 647+ 90DF 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90E0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90E2 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90E4 30 0C            jr nc,1F
 651+ 90E6              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90E6 10 DC            djnz 2B
 653+ 90E8
 654+ 90E8              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90E8
 656+ 90E8              ; LLegados a este punto:
 657+ 90E8              ;
 658+ 90E8              ;   NO HAY COLISIÓN !!!!!.
 659+ 90E8              ;
 660+ 90E8              ;   .db (Impacto) de Amadeus a "0".
 661+ 90E8              ;   RES el bit2 de (Impacto2).
 662+ 90E8              ;
 663+ 90E8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90E8              ;   Lo colocamos a "0".
 665+ 90E8
 666+ 90E8 21 66 89         ld hl,Impacto2
 667+ 90EB CB 96            res 2,(hl)
 668+ 90ED 2A 67 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90F0 36 00            ld (hl),0
 670+ 90F2
 671+ 90F2 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90F3 C9               ret
 673+ 90F4
 674+ 90F4               ; ---------- ----------
 675+ 90F4
 676+ 90F4 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90F5 3A E6 88         ld a,(Columns)
 678+ 90F8 47               ld b,a
 679+ 90F9 FD 7E 00     2 ld a,(iy)
 680+ 90FC BE               cp (hl)
 681+ 90FD 28 01            jr z,1F
 682+ 90FF
 683+ 90FF 1C               inc e
 684+ 9100
 685+ 9100 23           1 inc hl
 686+ 9101 FD 23            inc iy
 687+ 9103 10 F4            djnz 2B
 688+ 9105 C1               pop bc
 689+ 9106 C9               ret
 690+ 9107
 691+ 9107              ; -------------------------------------------------------------------------------------------------------------
 692+ 9107              ;
 693+ 9107              ;   13/03/23
 694+ 9107              ;
 695+ 9107              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9107              ;
 697+ 9107              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9107
 699+ 9107 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 910A 7E               ld a,(hl)
 701+ 910B A7               and a
 702+ 910C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 910D
 704+ 910D 44               ld b,h
 705+ 910E 4D               ld c,l
 706+ 910F 2A 41 89         ld hl,(Stack_snapshot_disparos)
 707+ 9112 E5               push hl
 708+ 9113 A7               and a
 709+ 9114 ED 42            sbc hl,bc
 710+ 9116 E5               push hl
 711+ 9117 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9118
 713+ 9118 E1               pop hl
 714+ 9119 54               ld d,h
 715+ 911A 5D               ld e,l
 716+ 911B 1B               dec de
 717+ 911C ED B8            lddr                                                ; Limpiamos.
 718+ 911E
 719+ 911E 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9121 22 41 89         ld (Stack_snapshot_disparos),hl
 721+ 9124
 722+ 9124 C9               ret
 723+ 9125
 724+ 9125              ; -------------------------------------------------------------------------------------------------------------
 725+ 9125              ;
 726+ 9125              ;   18/07/23
 727+ 9125              ;
 728+ 9125
 729+ 9125              Motor_de_disparos
 730+ 9125
 731+ 9125              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9125
 733+ 9125 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9128 2A 64 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 912B
 736+ 912B CD FB 8C     2 call Extrae_address
 737+ 912E 7E               ld a,(hl)
 738+ 912F A7               and a
 739+ 9130 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9132
 741+ 9132              ; ----- ----- ----- ----- ----- -----
 742+ 9132
 743+ 9132 C5               push bc
 744+ 9133 CD F7 91         call foto_disparo_a_borrar
 745+ 9136
 746+ 9136              ; Existe colisión con este disparo???
 747+ 9136
 748+ 9136 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9137 7E               ld a,(hl)
 750+ 9138 2B               dec hl
 751+ 9139 E6 01            and 1
 752+ 913B 28 1D            jr z,9F
 753+ 913D
 754+ 913D              ;   En este punto:
 755+ 913D              ;
 756+ 913D              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 913D              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 913D              ;   _con la entidad).
 759+ 913D              ;
 760+ 913D              ;   Disparo_2A defw 0                                ; Control.
 761+ 913D              ;    defw 0                                          ; Puntero objeto.
 762+ 913D              ;    defw 0                                          ; Puntero de impresión.
 763+ 913D              ;    defw 0                                          ; Rutina de impresión.
 764+ 913D
 765+ 913D E5               push hl
 766+ 913E
 767+ 913E 06 04            ld b,4
 768+ 9140 23           19 inc hl
 769+ 9141 10 FD            djnz 19B
 770+ 9143
 771+ 9143 CD FB 8C         call Extrae_address
 772+ 9146 CD 68 9D         call Genera_coordenadas_disparo
 773+ 9149
 774+ 9149              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9149
 776+ 9149 21 69 89         ld hl,Coordenadas_disparo_certero
 777+ 914C 72               ld (hl),d
 778+ 914D 23               inc hl
 779+ 914E 73               ld (hl),e
 780+ 914F
 781+ 914F              ; Elimino el disparo de la base de datos.
 782+ 914F
 783+ 914F E1               pop hl
 784+ 9150 CD 76 92         call Elimina_disparo_de_base_de_datos
 785+ 9153 21 66 89         ld hl,Impacto2
 786+ 9156 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9158
 788+ 9158 18 06            jr 11F
 789+ 915A
 790+ 915A CD 20 92     9 call Mueve_disparo
 791+ 915D CD F7 91         call foto_disparo_a_borrar
 792+ 9160
 793+ 9160 C1           11 pop bc
 794+ 9161 18 04            jr 7F
 795+ 9163
 796+ 9163              ; ----- ----- ----- ----- ----- -----
 797+ 9163
 798+ 9163 ED 42        1 sbc hl,bc
 799+ 9165 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9167
 801+ 9167 2A 64 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 916A 23               inc hl
 803+ 916B 23               inc hl
 804+ 916C 22 64 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 916F 18 BA            jr 2B
 806+ 9171
 807+ 9171 CD 8F 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9174              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9174
 810+ 9174              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9174
 812+ 9174 01 8A 85         ld bc,Disparo_11
 813+ 9177 2A 62 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 917A
 815+ 917A CD FB 8C     5 call Extrae_address
 816+ 917D 7E               ld a,(hl)
 817+ 917E A7               and a
 818+ 917F 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9181
 820+ 9181              ; ----- ----- ----- ----- ----- -----
 821+ 9181
 822+ 9181 C5               push bc
 823+ 9182 CD F7 91         call foto_disparo_a_borrar
 824+ 9185
 825+ 9185              ; Existe colisión con este disparo???
 826+ 9185
 827+ 9185 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9186 7E               ld a,(hl)
 829+ 9187 2B               dec hl
 830+ 9188 E6 01            and 1
 831+ 918A 28 4D            jr z,10F
 832+ 918C
 833+ 918C              ;! La colisión se produce con Amadeus???
 834+ 918C              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 918C
 836+ 918C E5               push hl
 837+ 918D
 838+ 918D 06 04            ld b,4
 839+ 918F 23           16 inc hl
 840+ 9190 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9192
 842+ 9192 CD FB 8C         call Extrae_address
 843+ 9195 CD 68 9D         call Genera_coordenadas_disparo
 844+ 9198
 845+ 9198 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9199 FE 16            cp $16
 847+ 919B 38 2A            jr c,15F
 848+ 919D
 849+ 919D
 850+ 919D              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 919D
 852+ 919D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 919E
 854+ 919E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 919E
 856+ 919E
 857+ 919E 2A 71 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91A1
 859+ 91A1              ; Coordenada X de Amadeus en D.
 860+ 91A1
 861+ 91A1 7D               ld a,l
 862+ 91A2 E6 1F            and $1F
 863+ 91A4 57               ld d,a
 864+ 91A5
 865+ 91A5 21 A6 85         ld hl,Amadeus_db+8
 866+ 91A8 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91A9
 868+ 91A9 21 6B 89         ld hl,Coordenadas_X_Amadeus
 869+ 91AC CD 81 92         call Guarda_coordenadas_X
 870+ 91AF
 871+ 91AF D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91B0
 873+ 91B0              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91B0
 875+ 91B0 06 02            ld b,2
 876+ 91B2 C5           20 push bc
 877+ 91B3
 878+ 91B3 06 03            ld b,3
 879+ 91B5 21 6B 89         ld hl,Coordenadas_X_Amadeus
 880+ 91B8 7E           18 ld a,(hl)
 881+ 91B9 BA               cp d
 882+ 91BA 20 04            jr nz,17F
 883+ 91BC
 884+ 91BC              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91BC
 886+ 91BC C1               pop bc
 887+ 91BD E1               pop hl
 888+ 91BE 18 0D            jr 14F
 889+ 91C0
 890+ 91C0 23           17 inc hl
 891+ 91C1 10 F5            djnz 18B
 892+ 91C3
 893+ 91C3 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91C4
 895+ 91C4 C1               pop bc
 896+ 91C5 10 EB            djnz 20B
 897+ 91C7
 898+ 91C7
 899+ 91C7              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91C7              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91C7
 902+ 91C7 E1           15 pop hl
 903+ 91C8 23               inc hl
 904+ 91C9 35               dec (hl)
 905+ 91CA 2B               dec hl
 906+ 91CB 18 0C            jr 10F
 907+ 91CD
 908+ 91CD              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91CD              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91CD
 911+ 91CD E5           14 push hl
 912+ 91CE CD 76 92         call Elimina_disparo_de_base_de_datos
 913+ 91D1 21 66 89         ld hl,Impacto2
 914+ 91D4 CB CE            set 1,(hl)
 915+ 91D6 E1               pop hl
 916+ 91D7 18 06            jr 12F
 917+ 91D9
 918+ 91D9              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91D9
 920+ 91D9 CD 20 92     10 call Mueve_disparo
 921+ 91DC CD F7 91         call foto_disparo_a_borrar
 922+ 91DF C1           12 pop bc
 923+ 91E0
 924+ 91E0 18 04            jr 8F
 925+ 91E2
 926+ 91E2              ; ----- ----- ----- ----- ----- -----
 927+ 91E2
 928+ 91E2 ED 42        4 sbc hl,bc
 929+ 91E4 28 0A            jr z,6F
 930+ 91E6
 931+ 91E6 2A 62 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91E9 23               inc hl
 933+ 91EA 23               inc hl
 934+ 91EB 22 62 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91EE 18 8A            jr 5B
 936+ 91F0
 937+ 91F0 CD 88 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91F3 CD BD 92         call Limpia_Coordenadas_X
 939+ 91F6 C9               ret
 940+ 91F7
 941+ 91F7              ; ------------------------------------------------------------------
 942+ 91F7
 943+ 91F7              foto_disparo_a_borrar
 944+ 91F7
 945+ 91F7 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91F8 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91F9 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91FA
 949+ 91FA E5               push hl
 950+ 91FB 23               inc hl
 951+ 91FC 23               inc hl
 952+ 91FD ED 73 39 89      ld (Stack),sp
 953+ 9201 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9202 FD E1            pop iy
 955+ 9204 DD E1            pop ix
 956+ 9206 E1               pop hl
 957+ 9207 ED 7B 39 89      ld sp,(Stack)
 958+ 920B 3A 28 89         ld a,(Ctrl_1)
 959+ 920E CB C7            set 0,a
 960+ 9210 32 28 89         ld (Ctrl_1),a
 961+ 9213 CD A0 7F         call Guarda_foto_registros
 962+ 9216 3A 28 89         ld a,(Ctrl_1)
 963+ 9219 CB 87            res 0,a
 964+ 921B 32 28 89         ld (Ctrl_1),a
 965+ 921E E1               pop hl
 966+ 921F C9               ret
 967+ 9220
 968+ 9220              ;---------------------------------------------------
 969+ 9220              ;
 970+ 9220              ;   18/07/23
 971+ 9220              ;
 972+ 9220
 973+ 9220              Mueve_disparo
 974+ 9220
 975+ 9220              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9220              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9220              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9220
 979+ 9220 E5               push hl
 980+ 9221
 981+ 9221 7E               ld a,(hl)
 982+ 9222
 983+ 9222 06 04            ld b,4
 984+ 9224 23           1 inc hl
 985+ 9225 10 FD            djnz 1B
 986+ 9227
 987+ 9227              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9227
 989+ 9227 CD FB 8C         call Extrae_address
 990+ 922A
 991+ 922A E6 01            and 1
 992+ 922C 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 922E
 994+ 922E              ; Disparo hacia arriba, (Amadeus).
 995+ 922E
 996+ 922E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 922E              ; _ de la dificultad.
 998+ 922E
 999+ 922E CD AE 96         call PreviousScan
1000+ 9231 CD AE 96         call PreviousScan
1001+ 9234 CD AE 96         call PreviousScan
1002+ 9237 CD AE 96         call PreviousScan
1003+ 923A
1004+ 923A              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 923A
1006+ 923A 7C               ld a,h
1007+ 923B FE 40            cp $40
1008+ 923D 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 923F
1010+ 923F              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 923F
1012+ 923F EB               ex de,hl
1013+ 9240 06 04            ld b,4
1014+ 9242 2B           6 dec hl
1015+ 9243 10 FD            djnz 6B
1016+ 9245
1017+ 9245 CD 76 92         call Elimina_disparo_de_base_de_datos
1018+ 9248 E1               pop hl
1019+ 9249 18 10            jr 7F
1020+ 924B
1021+ 924B              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 924B              ; HL contiene el puntero de impresión del disparo.
1023+ 924B              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 924B
1025+ 924B D5           3 push de
1026+ 924C C5               push bc
1027+ 924D
1028+ 924D CD 15 90         call Comprueba_Colision
1029+ 9250
1030+ 9250              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9250
1032+ 9250 78               ld a,b
1033+ 9251
1034+ 9251 C1               pop bc
1035+ 9252 D1               pop de
1036+ 9253
1037+ 9253 EB               ex de,hl
1038+ 9254
1039+ 9254 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9255 23               inc hl                                      ; _ movimiento.
1041+ 9256 72               ld (hl),d
1042+ 9257
1043+ 9257 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9258
1045+ 9258 23               inc hl                                      ; _ en curso.
1046+ 9259 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 925A 2B               dec hl
1048+ 925B
1049+ 925B C9           7 ret
1050+ 925C
1051+ 925C              ; Disparo hacia abajo, (Entidad).
1052+ 925C
1053+ 925C 3A 73 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 925F 47               ld b,a
1055+ 9260
1056+ 9260 CD 9F 96     4 call NextScan
1057+ 9263 10 FB            djnz 4B
1058+ 9265
1059+ 9265              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9265
1061+ 9265 7C               ld a,h
1062+ 9266 FE 58            cp $58
1063+ 9268 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 926A
1065+ 926A EB               ex de,hl
1066+ 926B 06 04            ld b,4
1067+ 926D 2B           5 dec hl
1068+ 926E 10 FD            djnz 5B
1069+ 9270
1070+ 9270 CD 76 92         call Elimina_disparo_de_base_de_datos
1071+ 9273 E1               pop hl
1072+ 9274 18 E5            jr 7B
1073+ 9276
1074+ 9276              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9276
1076+ 9276 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9279 AF               xor a
1078+ 927A 77               ld (hl),a
1079+ 927B 54               ld d,h
1080+ 927C 5D               ld e,l
1081+ 927D 13               inc de
1082+ 927E ED B0            ldir
1083+ 9280 C9               ret
1084+ 9281
1085+ 9281              ; -----------------------------------------------------------------
1086+ 9281              ;
1087+ 9281              ;   19/7/23
1088+ 9281              ;
1089+ 9281              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9281              ;
1091+ 9281              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9281              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9281              ;
1094+ 9281              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9281              ;
1096+ 9281              ;   INPUTS:
1097+ 9281              ;
1098+ 9281              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9281              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9281
1101+ 9281              ;   MODIFICA: A, HL, BC y DE.
1102+ 9281
1103+ 9281              Guarda_coordenadas_X
1104+ 9281
1105+ 9281 7B               ld a,e
1106+ 9282 A7               and a
1107+ 9283 20 04            jr nz,1F
1108+ 9285
1109+ 9285 06 02            ld b,2
1110+ 9287 18 02            jr 2F
1111+ 9289
1112+ 9289 06 03        1 ld b,3
1113+ 928B 72           2 ld (hl),d
1114+ 928C 23               inc hl
1115+ 928D 14               inc d
1116+ 928E 10 FB            djnz 2B
1117+ 9290
1118+ 9290 C9               ret
1119+ 9291
1120+ 9291              ; -----------------------------------------------------------------
1121+ 9291              ;
1122+ 9291              ;   12/04/23
1123+ 9291              ;
1124+ 9291
1125+ 9291 3A 66 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9294 A7               and a
1127+ 9295 C8               ret z
1128+ 9296
1129+ 9296 FE 04            cp 4
1130+ 9298 20 09            jr nz,1F
1131+ 929A
1132+ 929A
1133+ 929A              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 929A
1135+ 929A CD B6 90         call Detecta_colision_nave_entidad
1136+ 929D
1137+ 929D 21 66 89         ld hl,Impacto2
1138+ 92A0 CB 5E            bit 3,(hl)
1139+ 92A2 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92A3
1141+ 92A3              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92A3              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92A3
1144+ 92A3 21 66 89     1 ld hl,Impacto2
1145+ 92A6 CB 4E            bit 1,(hl)
1146+ 92A8 28 07            jr z,2F
1147+ 92AA
1148+ 92AA 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92AD 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92AF 18 0B            jr 3F
1151+ 92B1
1152+ 92B1 21 66 89     2 ld hl,Impacto2
1153+ 92B4 CB 46            bit 0,(hl)
1154+ 92B6 C8               ret z
1155+ 92B7
1156+ 92B7              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92B7
1158+ 92B7 21 28 89         ld hl,Ctrl_1
1159+ 92BA CB D6            set 2,(hl)
1160+ 92BC
1161+ 92BC C9           3 ret
1162+ 92BD
1163+ 92BD              ; -----------------------------------------------------------------
1164+ 92BD              ;
1165+ 92BD              ;   19/7/23
1166+ 92BD              ;
1167+ 92BD              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92BD
1169+ 92BD AF           Limpia_Coordenadas_X xor a
1170+ 92BE 06 06            ld b,6
1171+ 92C0 21 6B 89         ld hl,Coordenadas_X_Amadeus
1172+ 92C3 77           1 ld (hl),a
1173+ 92C4 23               inc hl
1174+ 92C5 10 FC            djnz 1B
1175+ 92C7 C9               ret
1176+ 92C8
1177+ 92C8              ; -----------------------------------------------------------------
1178+ 92C8              ;
1179+ 92C8              ;   25/04/23
1180+ 92C8              ;
1181+ 92C8
1182+ 92C8              Determina_resultado_comparativa
1183+ 92C8
1184+ 92C8              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92C8              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92C8              ;
1187+ 92C8              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92C8              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92C8              ;
1190+ 92C8              ;   SBC HL,DE
1191+ 92C8
1192+ 92C8              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92C8              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92C8
1195+ 92C8              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92C8              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92C8
1198+ 92C8
1199+ 92C8 3A F9 88         ld a,(Cuad_objeto)
1200+ 92CB FE 02            cp 2
1201+ 92CD 28 26            jr z,2F
1202+ 92CF 38 24            jr c,2F
1203+ 92D1
1204+ 92D1              ; Cuadrantes 3º y 4º
1205+ 92D1
1206+ 92D1 E6 01            and 1
1207+ 92D3 28 10            jr z,4F
1208+ 92D5
1209+ 92D5              ; Cuadrante 3º
1210+ 92D5
1211+ 92D5 7C               ld a,h
1212+ 92D6 06 00            ld b,0
1213+ 92D8
1214+ 92D8 CD 63 93         call Compara_cositas_H3
1215+ 92DB
1216+ 92DB 04               inc b
1217+ 92DC 05               dec b
1218+ 92DD C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92DE
1220+ 92DE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92DF 06 00            ld b,0
1222+ 92E1
1223+ 92E1 CD 75 93         call Compara_cositas_L3
1224+ 92E4 C9               ret
1225+ 92E5
1226+ 92E5              ; Cuadrante 4º
1227+ 92E5
1228+ 92E5 7C           4 ld a,h
1229+ 92E6 06 00            ld b,0
1230+ 92E8
1231+ 92E8 CD 87 93         call Compara_cositas_H4
1232+ 92EB
1233+ 92EB 04               inc b
1234+ 92EC 05               dec b
1235+ 92ED C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92EE
1237+ 92EE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92EF 06 00            ld b,0
1239+ 92F1
1240+ 92F1 CD 9D 93         call Compara_cositas_L4
1241+ 92F4 C9               ret
1242+ 92F5
1243+ 92F5              ; Cuadrantes 1º y 2º.
1244+ 92F5
1245+ 92F5 28 10        2 jr z,3F
1246+ 92F7
1247+ 92F7              ; 1er Cuadrante
1248+ 92F7
1249+ 92F7 7C               ld a,h
1250+ 92F8 06 00            ld b,0
1251+ 92FA
1252+ 92FA CD 3B 93         call Compara_cositas_H1
1253+ 92FD
1254+ 92FD 04               inc b
1255+ 92FE 05               dec b
1256+ 92FF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9300
1258+ 9300 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9301 06 00            ld b,0
1260+ 9303
1261+ 9303 CD 51 93         call Compara_cositas_L1
1262+ 9306 C9               ret
1263+ 9307
1264+ 9307
1265+ 9307              ; 2º Cuadrante
1266+ 9307
1267+ 9307 7C           3 ld a,h
1268+ 9308 06 00            ld b,0
1269+ 930A
1270+ 930A CD 17 93         call Compara_cositas_H2
1271+ 930D
1272+ 930D 04               inc b
1273+ 930E 05               dec b
1274+ 930F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9310
1276+ 9310 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9311 06 00            ld b,0
1278+ 9313
1279+ 9313 CD 29 93         call Compara_cositas_L2
1280+ 9316 C9               ret
1281+ 9317
1282+ 9317 A7           Compara_cositas_H2 and a
1283+ 9318 28 0D            jr z,1F
1284+ 931A              ;    cp $fd
1285+ 931A              ;    jr z,1F
1286+ 931A              ;    cp $fe
1287+ 931A              ;    jr z,1F
1288+ 931A FE FF            cp $ff
1289+ 931C 28 09            jr z,1F
1290+ 931E FE 01            cp $01
1291+ 9320 28 05            jr z,1F
1292+ 9322 FE 02            cp $02
1293+ 9324 28 01            jr z,1F
1294+ 9326 C0               ret nz
1295+ 9327 04           1 inc b
1296+ 9328 C9               ret
1297+ 9329
1298+ 9329 A7           Compara_cositas_L2 and a
1299+ 932A 28 0D            jr z,1F
1300+ 932C              ;    cp $fd
1301+ 932C              ;    jr z,1F
1302+ 932C FE FE            cp $fe
1303+ 932E 28 09            jr z,1F
1304+ 9330 FE FF            cp $ff
1305+ 9332 28 05            jr z,1F
1306+ 9334 FE 01            cp $01
1307+ 9336 28 01            jr z,1F
1308+ 9338              ;    cp $02
1309+ 9338              ;    jr z,1F
1310+ 9338 C0               ret nz
1311+ 9339 04           1 inc b
1312+ 933A C9               ret
1313+ 933B
1314+ 933B A7           Compara_cositas_H1 and a
1315+ 933C 28 11            jr z,1F
1316+ 933E              ;    cp $fd
1317+ 933E              ;    jr z,1F
1318+ 933E              ;    cp $fe
1319+ 933E              ;    jr z,1F
1320+ 933E FE FF            cp $ff
1321+ 9340 28 0D            jr z,1F
1322+ 9342 FE 01            cp $01
1323+ 9344 28 09            jr z,1F
1324+ 9346 FE 02            cp $02
1325+ 9348 28 05            jr z,1F
1326+ 934A FE 03            cp $03
1327+ 934C 28 01            jr z,1F
1328+ 934E C0               ret nz
1329+ 934F 04           1 inc b
1330+ 9350 C9               ret
1331+ 9351
1332+ 9351 A7           Compara_cositas_L1 and a
1333+ 9352 28 0D            jr z,1F
1334+ 9354              ;    cp $fd
1335+ 9354              ;    jr z,1F
1336+ 9354              ;    cp $fe
1337+ 9354              ;    jr z,1F
1338+ 9354              ;    cp $ff
1339+ 9354              ;    jr z,1F
1340+ 9354 FE 01            cp $01
1341+ 9356 28 09            jr z,1F
1342+ 9358 FE 02            cp $02
1343+ 935A 28 05            jr z,1F
1344+ 935C FE 03            cp $03
1345+ 935E 28 01            jr z,1F
1346+ 9360 C0               ret nz
1347+ 9361 04           1 inc b
1348+ 9362 C9               ret
1349+ 9363
1350+ 9363 A7           Compara_cositas_H3 and a
1351+ 9364 28 0D            jr z,1F
1352+ 9366              ;    cp $fd
1353+ 9366              ;    jr z,1F
1354+ 9366 FE FE            cp $fe
1355+ 9368 28 09            jr z,1F
1356+ 936A FE FF            cp $ff
1357+ 936C 28 05            jr z,1F
1358+ 936E FE 01            cp $01
1359+ 9370 28 01            jr z,1F
1360+ 9372              ;    cp $02
1361+ 9372              ;    jr z,1F
1362+ 9372              ;    cp $03
1363+ 9372              ;    jr z,1F
1364+ 9372 C0               ret nz
1365+ 9373 04           1 inc b
1366+ 9374 C9               ret
1367+ 9375
1368+ 9375 A7           Compara_cositas_L3 and a
1369+ 9376 28 0D            jr z,1F
1370+ 9378              ;    cp $fd
1371+ 9378              ;    jr z,1F
1372+ 9378              ;    cp $fe
1373+ 9378              ;    jr z,1F
1374+ 9378              ;    cp $ff
1375+ 9378              ;    jr z,1F
1376+ 9378 FE 01            cp $01
1377+ 937A 28 09            jr z,1F
1378+ 937C FE 02            cp $02
1379+ 937E 28 05            jr z,1F
1380+ 9380 FE 03            cp $03
1381+ 9382 28 01            jr z,1F
1382+ 9384 C0               ret nz
1383+ 9385 04           1 inc b
1384+ 9386 C9               ret
1385+ 9387
1386+ 9387 A7           Compara_cositas_H4 and a
1387+ 9388 28 11            jr z,1F
1388+ 938A FE FD            cp $fd
1389+ 938C 28 0D            jr z,1F
1390+ 938E FE FE            cp $fe
1391+ 9390 28 09            jr z,1F
1392+ 9392 FE FF            cp $ff
1393+ 9394 28 05            jr z,1F
1394+ 9396 FE 01            cp $01
1395+ 9398 28 01            jr z,1F
1396+ 939A              ;    cp $02
1397+ 939A              ;    jr z,1F
1398+ 939A              ;    cp $03
1399+ 939A              ;    jr z,1F
1400+ 939A C0               ret nz
1401+ 939B 04           1 inc b
1402+ 939C C9               ret
1403+ 939D
1404+ 939D A7           Compara_cositas_L4 and a
1405+ 939E 28 0D            jr z,1F
1406+ 93A0              ;    cp $fd
1407+ 93A0              ;    jr z,1F
1408+ 93A0 FE FE            cp $fe
1409+ 93A2 28 09            jr z,1F
1410+ 93A4 FE FF            cp $ff
1411+ 93A6 28 05            jr z,1F
1412+ 93A8 FE 01            cp $01
1413+ 93AA 28 01            jr z,1F
1414+ 93AC              ;    cp $02
1415+ 93AC              ;    jr z,1F
1416+ 93AC              ;    cp $03
1417+ 93AC              ;    jr z,1F
1418+ 93AC C0               ret nz
1419+ 93AD 04           1 inc b
1420+ 93AE C9               ret
# file closed: Disparo.asm
1568  93AF              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93AF              ; ******************************************************************************************************************************************************************************************
   2+ 93AF              ;
   3+ 93AF              ; 26/06/23
   4+ 93AF              ;
   5+ 93AF              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93AF
   7+ 93AF CD 93 96     Draw call Prepara_draw
   8+ 93B2 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93B3 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93B4 28 05        	jr z,2F
  11+ 93B6
  12+ 93B6 3A F9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93B9 18 0C        	jr 1F
  14+ 93BB
  15+ 93BB 2A F7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93BE 22 E7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93C1 CD 50 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93C4              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93C4 CD F5 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93C7
  21+ 93C7 3A 13 89     1 ld a,(Ctrl_0)
  22+ 93CA CB 6F        	bit 5,a
  23+ 93CC 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93CE
  25+ 93CE CD E6 93     	call Comprueba_limite_horizontal
  26+ 93D1 CD 76 94     	call Comprueba_limite_vertical
  27+ 93D4
  28+ 93D4              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93D4              ; -----------------------
  30+ 93D4              ; -----------------------
  31+ 93D4              ; -----------------------
  32+ 93D4
  33+ 93D4 CD C3 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93D7 CD FA 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93DA CD 59 96     	call Define_rutina_de_impresion
  36+ 93DD
  37+ 93DD 3A 13 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93E0 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93E2 32 13 89     	ld (Ctrl_0),a
  40+ 93E5
  41+ 93E5 C9           	ret
  42+ 93E6
  43+ 93E6              ; *******************************************************************************************************************************************************************************************
  44+ 93E6              ;	21/01/23
  45+ 93E6              ;
  46+ 93E6              ; 	Comprueba_limite_horizontal.
  47+ 93E6              ;
  48+ 93E6              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93E6              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93E6              ;
  51+ 93E6              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93E6              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93E6              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93E6              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93E6
  56+ 93E6
  57+ 93E6
  58+ 93E6 3A 13 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93E9 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93EB 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93ED E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93EF 32 13 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93F2 18 09            jr 6F
  64+ 93F4 CB 5F        1 bit 3,a
  65+ 93F6 28 0A            jr z,2F
  66+ 93F8 E6 F7            and $f7
  67+ 93FA 32 13 89         ld (Ctrl_0),a
  68+ 93FD CD 50 95     6 call Inicializacion
  69+ 9400 18 5B            jr 5F
  70+ 9402 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9403
  72+ 9403              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9403              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9403
  75+ 9403 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9404 2A 23 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9407 CD B2 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 940A 67           	ld h,a
  79+ 940B EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 940C CD B2 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 940F 67           	ld h,a
  82+ 9410 A7           	and a
  83+ 9411 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9413 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9414 3A F9 88     	ld a,(Cuad_objeto)
  86+ 9417 FE 02        	cp 2
  87+ 9419 38 1E        	jr c,3F
  88+ 941B 28 1C        	jr z,3F
  89+ 941D 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 941E 28 23            jr z,7F
  91+ 9420 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9422 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9424 E1           	pop hl
  94+ 9425
  95+ 9425              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9425              ; _para indicar con E="2" en caso necesario.
  97+ 9425
  98+ 9425 E5               push hl
  99+ 9426 C5               push bc
 100+ 9427 CD B2 99     	call calcula_tercio
 101+ 942A FE 01        	cp 1
 102+ 942C 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 942E CD 5E 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9431 28 26            jr z,9F
 105+ 9433 38 24            jr c,9F
 106+ 9435 1E 00        11 ld e,0
 107+ 9437 18 22            jr 8F
 108+ 9439 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 943A 28 07        	jr z, 7F
 110+ 943C 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 943E 1E 00         	ld e,0
 112+ 9440 E1           	pop hl
 113+ 9441 18 04        	jr 4F
 114+ 9443 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9445 18 15            jr 10F
 116+ 9447
 117+ 9447              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9447              ; _para indicar con E="2" en caso necesario.
 119+ 9447
 120+ 9447 E5           4 push hl
 121+ 9448 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9449 CD B2 99     	call calcula_tercio
 123+ 944C FE 01        	cp 1
 124+ 944E 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9450 CD 5E 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9453 28 04            jr z,9F
 127+ 9455 30 02            jr nc,9F
 128+ 9457 18 02        	jr 8F
 129+ 9459 1E 02        9 ld e,2
 130+ 945B C1           8 pop bc
 131+ 945C E1           10 pop hl
 132+ 945D C9           5 ret
 133+ 945E
 134+ 945E              ; --------------------
 135+ 945E              ;
 136+ 945E              ; 25/08/22
 137+ 945E
 138+ 945E CD B2 99     Comprueba_centro call calcula_tercio
 139+ 9461 67               ld h,a
 140+ 9462 08           	ex af,af
 141+ 9463 FE 02        	cp 2
 142+ 9465 38 07        	jr c,1F
 143+ 9467 28 05        	jr z,1F
 144+ 9469 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 946C 18 03        	jr 2F
 146+ 946E 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9471 08           2 ex af,af
 148+ 9472 A7               and a
 149+ 9473 ED 42            sbc hl,bc
 150+ 9475 C9               ret
 151+ 9476
 152+ 9476              ; *********************************************************************************************************************************************************************************************
 153+ 9476              ;
 154+ 9476              ;   16/8/22
 155+ 9476              ;
 156+ 9476              ;	Comprueba_limite_vertical
 157+ 9476              ;
 158+ 9476              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9476              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9476              ;
 161+ 9476
 162+ 9476 2A E7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9479 7D           	ld a,l
 164+ 947A E6 1F        	and $1F
 165+ 947C 57           	ld d,a
 166+ 947D 3A 25 89     	ld a,(Limite_vertical)
 167+ 9480 BA           	cp d 											; Límite - Posición.
 168+ 9481 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9482 3A F9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9485 CB 47        	bit 0,a
 171+ 9487 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9489
 173+ 9489              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9489
 175+ 9489 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 948A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 948C
 178+ 948C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 948C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 948C
 181+ 948C 3A EB 88         ld a,(Coordenada_X)
 182+ 948F 16 0F            ld d,Centro_izquierda
 183+ 9491 A7               and a
 184+ 9492 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9493 28 1E            jr z,3F
 186+ 9495 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9497              ;                                                    ; _salimos sin modificar nada.
 188+ 9497 18 0E            jr 2F
 189+ 9499 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 949A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 949C
 192+ 949C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 949C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 949C
 195+ 949C 3A EB 88         ld a,(Coordenada_X)
 196+ 949F 16 10            ld d,Centro_derecha
 197+ 94A1 A7               and a
 198+ 94A2 92               sub d
 199+ 94A3 28 0E            jr z,3F
 200+ 94A5 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94A7              ;                                                    ; _salimos sin modificar nada.
 202+ 94A7 CB 43        2 bit 0,e
 203+ 94A9 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94AB C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94AC CD 40 95         call Modificaccionne
 206+ 94AF C1           	pop bc
 207+ 94B0 CD 50 95         call Inicializacion
 208+ 94B3 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94B4
 210+ 94B4              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94B4
 212+ 94B4 C5           4 push bc
 213+ 94B5 01 E6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94B8 0A           	ld a,(bc)
 215+ 94B9 3D           	dec a
 216+ 94BA 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94BB 7D           	ld a,l
 218+ 94BC 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94BD CB 47        	bit 0,a
 220+ 94BF 28 03        	jr z,5F
 221+ 94C1 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94C2 18 2E        	jr 7F
 223+ 94C4
 224+ 94C4              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94C4
 226+ 94C4 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94C5 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94C6 3A 13 89     	ld a,(Ctrl_0)
 229+ 94C9 CB 4F        	bit 1,a
 230+ 94CB 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94CD F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94CE
 233+ 94CE              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94CE
 235+ 94CE 1C               inc e
 236+ 94CF 1D               dec e
 237+ 94D0 20 07            jr nz,12F
 238+ 94D2 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94D3 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94D4 22 E7 88     	ld (Posicion_actual),hl
 241+ 94D7 18 44        13 jr 9F
 242+ 94D9 CB 43        12 bit 0,e
 243+ 94DB 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94DD              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94DD C1           	pop bc
 246+ 94DE 18 D3        	jr 3B
 247+ 94E0 80           14 add b
 248+ 94E1 6F               ld l,a
 249+ 94E2 22 E7 88     	ld (Posicion_actual),hl
 250+ 94E5 CD 40 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94E8 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94EA E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94EC 32 13 89         ld (Ctrl_0),a
 254+ 94EF F1           	pop af
 255+ 94F0 18 2B        	jr 9F
 256+ 94F2
 257+ 94F2              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94F2
 259+ 94F2 F5           7 push af
 260+ 94F3 3A 13 89     	ld a,(Ctrl_0)
 261+ 94F6 CB 47        	bit 0,a
 262+ 94F8 20 1D        	jr nz,8F
 263+ 94FA F1           	pop af
 264+ 94FB
 265+ 94FB              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94FB
 267+ 94FB 1C           	inc e
 268+ 94FC 1D               dec e
 269+ 94FD 20 07            jr nz,10F
 270+ 94FF 90           	sub b
 271+ 9500 6F               ld l,a
 272+ 9501 22 E7 88     	ld (Posicion_actual),hl
 273+ 9504 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9506              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9506 CB 43        10 bit 0,e
 276+ 9508 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 950A              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 950A C1           	pop bc
 279+ 950B 18 A6        	jr 3B
 280+ 950D 90           16 sub b
 281+ 950E 6F               ld l,a
 282+ 950F 22 E7 88     	ld (Posicion_actual),hl
 283+ 9512 CD 40 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9515 18 06            jr 9F
 285+ 9517 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9519 32 13 89         ld (Ctrl_0),a
 287+ 951C F1           	pop af
 288+ 951D C1           9 pop bc
 289+ 951E 1E 00        	ld e,0
 290+ 9520 CD 50 95         call Inicializacion
 291+ 9523 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9524 08           	ex af,af
 293+ 9525 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9526 18 8B            jr 3B
 295+ 9528
 296+ 9528              ; --------------------
 297+ 9528
 298+ 9528 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 952A CD AE 96     1 call PreviousScan
 300+ 952D 10 FB            djnz 1B
 301+ 952F 22 E7 88     	ld (Posicion_actual),hl
 302+ 9532 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9533 C9           	ret
 304+ 9534
 305+ 9534              ; --------------------
 306+ 9534
 307+ 9534 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9536 CD 9F 96     1 call NextScan
 309+ 9539 10 FB            djnz 1B
 310+ 953B 22 E7 88     	ld (Posicion_actual),hl
 311+ 953E AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 953F C9           	ret
 313+ 9540
 314+ 9540              ; --------------------
 315+ 9540              ;
 316+ 9540              ;	22/01/23
 317+ 9540              ;
 318+ 9540              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9540              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9540              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9540
 322+ 9540
 323+ 9540              Modificaccionne
 324+ 9540
 325+ 9540 3A F9 88     	ld a,(Cuad_objeto)
 326+ 9543 FE 02        	cp 2
 327+ 9545 CC 28 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9548 DC 28 95         call c,Modifica_Pos_actual
 329+ 954B C8           	ret z
 330+ 954C CD 34 95         call Modifica_Pos_actual2
 331+ 954F C9               ret
 332+ 9550
 333+ 9550              ; *************************************************************************************************************************************************************************************************
 334+ 9550              ;
 335+ 9550              ;	13/8/22
 336+ 9550              ;
 337+ 9550              ;	Inicializacion
 338+ 9550              ;
 339+ 9550              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9550              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9550              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9550              ;
 343+ 9550              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9550              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9550              ;	_ desaparece/aparece.
 346+ 9550
 347+ 9550              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9550              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9550              ;
 350+ 9550              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9550              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9550              ; 		   [E] ="0"
 353+ 9550
 354+ 9550              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9550
 356+ 9550 CD B2 99     Inicializacion call calcula_tercio
 357+ 9553 28 36        	jr z,primit
 358+ 9555 E6 02        	and 2
 359+ 9557 20 07        	jr nz,segmit
 360+ 9559 7D           	ld a,l
 361+ 955A FE 7F        	cp $7f
 362+ 955C 38 2D        	jr c,primit
 363+ 955E 28 2B        	jr z,primit
 364+ 9560 CD BD 95     segmit call column
 365+ 9563 38 13        	jr c,tercuad
 366+ 9565 3E 04        cuarcuad ld a,4
 367+ 9567 32 F9 88     	ld (Cuad_objeto),a
 368+ 956A 21 20 48     	ld hl,$4820
 369+ 956D 22 23 89     	ld (Limite_horizontal),hl
 370+ 9570 21 25 89     	ld hl,Limite_vertical
 371+ 9573 36 0D        	ld (hl),$0d
 372+ 9575 08           	ex af,af
 373+ 9576 18 3C        	jr 1F
 374+ 9578              tercuad
 375+ 9578 3E 03        	ld a,3
 376+ 957A 32 F9 88     	ld (Cuad_objeto),a
 377+ 957D 21 20 48     	ld hl,$4820
 378+ 9580 22 23 89     	ld (Limite_horizontal),hl
 379+ 9583 21 25 89     	ld hl,Limite_vertical
 380+ 9586 36 12        	ld (hl),$12
 381+ 9588 08           	ex af,af
 382+ 9589 18 29        	jr 1F
 383+ 958B CD BD 95     primit call column
 384+ 958E 38 13        	jr c, primcuad
 385+ 9590              segcuad
 386+ 9590 3E 02        	ld a,2
 387+ 9592 32 F9 88     	ld (Cuad_objeto),a
 388+ 9595 21 C0 4F     	ld hl,$4fc0
 389+ 9598 22 23 89     	ld (Limite_horizontal),hl
 390+ 959B 21 25 89     	ld hl,Limite_vertical
 391+ 959E 36 0D        	ld (hl),$0d
 392+ 95A0 08           	ex af,af
 393+ 95A1 18 11        	jr 1F
 394+ 95A3              primcuad
 395+ 95A3 3E 01        	ld a,1
 396+ 95A5 32 F9 88     	ld (Cuad_objeto),a
 397+ 95A8 21 C0 4F     	ld hl,$4fc0
 398+ 95AB 22 23 89     	ld (Limite_horizontal),hl
 399+ 95AE 21 25 89     	ld hl,Limite_vertical
 400+ 95B1 36 12        	ld (hl),$12
 401+ 95B3 08           	ex af,af
 402+ 95B4 CD 3D 9D     1 call Genera_coordenadas
 403+ 95B7 21 13 89     	ld hl,Ctrl_0
 404+ 95BA CB EE        	set 5,(hl)
 405+ 95BC C9           	ret
 406+ 95BD
 407+ 95BD              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95BD
 409+ 95BD              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95BD              ;
 411+ 95BD              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95BD
 413+ 95BD 7D           column ld a,l
 414+ 95BE E6 1F        	and $1f
 415+ 95C0 FE 10         	cp $10
 416+ 95C2 C9            	ret
 417+ 95C3
 418+ 95C3              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95C3              ;
 420+ 95C3              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95C3              ;
 422+ 95C3              ; 14/12/22
 423+ 95C3              ;
 424+ 95C3              ;	Modifica: A y BC.
 425+ 95C3
 426+ 95C3 3A F9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95C6 E6 01        	and 1
 428+ 95C8 28 17        	jr z,1F
 429+ 95CA
 430+ 95CA              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95CA
 432+ 95CA 3A EB 88     	ld a,(Coordenada_X)
 433+ 95CD 47           	ld b,a
 434+ 95CE 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95CF 79           	ld a,c
 436+ 95D0 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95D1 38 08        	jr c,2F
 438+ 95D3 47           	ld b,a
 439+ 95D4 79           	ld a,c
 440+ 95D5 90           	sub b
 441+ 95D6 32 22 89     	ld (Columnas),a
 442+ 95D9 18 1B        	jr 4F
 443+ 95DB 79           2 ld a,c
 444+ 95DC 32 22 89     	ld (Columnas),a
 445+ 95DF 18 15        	jr 4F
 446+ 95E1
 447+ 95E1              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95E1
 449+ 95E1 3A EB 88     1 ld a,(Coordenada_X)
 450+ 95E4 81           	add c
 451+ 95E5 3D           	dec a
 452+ 95E6 D6 1F        	sub $1f
 453+ 95E8 38 08        	jr c,3F
 454+ 95EA 47           	ld b,a
 455+ 95EB 79           	ld a,c
 456+ 95EC 90           	sub b
 457+ 95ED 32 22 89     	ld (Columnas),a
 458+ 95F0 18 04        	jr 4F
 459+ 95F2 79           3 ld a,c
 460+ 95F3 32 22 89     	ld (Columnas),a
 461+ 95F6 D9           4 exx
 462+ 95F7 4F           	ld c,a
 463+ 95F8 D9           	exx
 464+ 95F9 C9            ret
 465+ 95FA
 466+ 95FA              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95FA              ;
 468+ 95FA              ;   19/7/23
 469+ 95FA              ;
 470+ 95FA              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95FA              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95FA              ;
 473+ 95FA              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95FA              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95FA              ;
 476+ 95FA              ;	DESTRUYE: HL,B Y A.
 477+ 95FA
 478+ 95FA 3A F9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95FD FE 02        	cp 2
 480+ 95FF 38 18        	jr c,1F
 481+ 9601 28 16        	jr z,1F
 482+ 9603 E6 01        	and 1
 483+ 9605 28 0D        	jr z,3F
 484+ 9607
 485+ 9607              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9607
 487+ 9607 CD 4D 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 960A
 489+ 960A 7D           9 ld a,l
 490+ 960B E6 1F        	and $1f
 491+ 960D 28 2A        	jr z,7F
 492+ 960F 2B           	dec hl
 493+ 9610 10 F8        	djnz 9B
 494+ 9612 18 25        	jr 7F
 495+ 9614
 496+ 9614              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9614
 498+ 9614 2A E7 88     3 ld hl,(Posicion_actual)
 499+ 9617 18 20        	jr 7F
 500+ 9619
 501+ 9619 28 14        1 jr z,2F
 502+ 961B
 503+ 961B              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 961B
 505+ 961B CD 4D 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 961E
 507+ 961E 7D           4 ld a,l
 508+ 961F E6 1F        	and $1f
 509+ 9621 28 03        	jr z,6F
 510+ 9623 2B           	dec hl
 511+ 9624 10 F8        	djnz 4B
 512+ 9626 06 0F        6 ld b,15
 513+ 9628 CD AE 96     5 call PreviousScan
 514+ 962B 10 FB        	djnz 5B
 515+ 962D 18 0A        	jr 7F
 516+ 962F
 517+ 962F              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 962F
 519+ 962F CD 4D 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9632 06 0F        	ld b,15
 521+ 9634 CD AE 96     8 call PreviousScan
 522+ 9637 10 FB        	djnz 8B
 523+ 9639
 524+ 9639 E5           7 push hl
 525+ 963A DD E1        	pop ix
 526+ 963C
 527+ 963C 2A E9 88     	ld hl,(Puntero_objeto)
 528+ 963F E5           	push hl
 529+ 9640 FD E1        	pop iy
 530+ 9642
 531+ 9642              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9642
 533+ 9642 3A 13 89     	ld a,(Ctrl_0)
 534+ 9645 CB 77        	bit 6,a
 535+ 9647 C8           	ret z
 536+ 9648
 537+ 9648              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9648              ; _ entidad / Amadeus´.
 539+ 9648
 540+ 9648 DD 22 71 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 964C
 542+ 964C C9           	ret
 543+ 964D
 544+ 964D              ; --------------------------------------------------------------------------------------------------------------------
 545+ 964D              ;
 546+ 964D              ;	2/1/23
 547+ 964D              ;
 548+ 964D              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 964D              ;
 550+ 964D              ;	Tras esta rutina tenemos:
 551+ 964D              ;
 552+ 964D              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 964D              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 964D              ;
 555+ 964D              ;	DESTRUYE!!!!! HL,B y A.
 556+ 964D
 557+ 964D 2A E7 88     Operandos ld hl,(Posicion_actual)
 558+ 9650 3A 22 89     	ld a,(Columnas)
 559+ 9653 3D           	dec a
 560+ 9654 20 01        	jr nz,1F
 561+ 9656 3C           	inc a
 562+ 9657 47           1 ld b,a
 563+ 9658 C9           	ret
 564+ 9659
 565+ 9659              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9659              ;
 567+ 9659              ;	3/1/23
 568+ 9659              ;
 569+ 9659              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9659              ;
 571+ 9659              ;	Destruye: A,B,HL y DE.
 572+ 9659
 573+ 9659              Define_rutina_de_impresion
 574+ 9659
 575+ 9659 3A E6 88     	ld a,(Columns)
 576+ 965C 47           	ld b,a
 577+ 965D 3A 22 89     	ld a,(Columnas)
 578+ 9660 B8           	cp b
 579+ 9661 20 0D        	jr nz,2f
 580+ 9663
 581+ 9663              ;	La entidad se imprime entera.
 582+ 9663
 583+ 9663 21 82 97     	ld hl, Indice_entidades_completas
 584+ 9666 E6 01        	and 1
 585+ 9668 28 02        	jr z,1F
 586+ 966A
 587+ 966A 23           	inc hl
 588+ 966B 23           	inc hl
 589+ 966C
 590+ 966C CD FB 8C     1 call Extrae_address
 591+ 966F C9           	ret		;	ret
 592+ 9670
 593+ 9670              ;	La entidad no se imprime entera en pantalla.
 594+ 9670
 595+ 9670 3A F9 88     2 ld a,(Cuad_objeto)
 596+ 9673 E6 01        	and 1
 597+ 9675 28 17        	jr z,3F
 598+ 9677
 599+ 9677              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9677
 601+ 9677 21 86 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 967A 3A E6 88     4 ld a,(Columns)
 603+ 967D E6 01        	and 1
 604+ 967F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9681
 606+ 9681 23           	inc hl
 607+ 9682 23           	inc hl
 608+ 9683
 609+ 9683 3A 22 89     	ld a,(Columnas)
 610+ 9686 E6 01        	and 1
 611+ 9688 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 968A
 613+ 968A 23           	inc hl
 614+ 968B 23           	inc hl
 615+ 968C
 616+ 968C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 968E
 618+ 968E 21 8C 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9691 18 E7        	jr 4B
 620+ 9693
 621+ 9693              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9693              ;
 623+ 9693              ;	Prepara_draw
 624+ 9693              ;
 625+ 9693              ;	Es una rutina de carga.
 626+ 9693              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9693              ;
 628+ 9693              ;	FUNCIONAMIENTO:
 629+ 9693              ;
 630+ 9693              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9693              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9693              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9693              ;
 634+ 9693              ;	DESTRUYE:
 635+ 9693              ;
 636+ 9693              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9693
 638+ 9693 21 E5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9696 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9697 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9698 4E           	ld c,(hl)
 642+ 9699 2A E7 88     	ld hl,(Posicion_actual)
 643+ 969C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 969E C9           	ret
 645+ 969F
 646+ 969F              ;----------------------------------------------------------------------------------------------------------------
 647+ 969F              ;
 648+ 969F              ;	5/08/22
 649+ 969F              ;
 650+ 969F              ;   NextScan.
 651+ 969F              ;
 652+ 969F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 969F              ;
 654+ 969F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 969F              ;
 656+ 969F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 969F              ;
 658+ 969F              ;       DESTRUIDOS: AF y HL !!!
 659+ 969F              ;
 660+ 969F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 969F              ;
 662+ 969F
 663+ 969F 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96A0 7C               ld a,h
 665+ 96A1 E6 07            and 7
 666+ 96A3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96A4
 668+ 96A4 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96A5 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96A7 6F               ld l,a
 671+ 96A8 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96A9
 673+ 96A9 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96AA D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96AC 67               ld h,a
 676+ 96AD C9               ret
 677+ 96AE
 678+ 96AE              ;----------------------------------------------------------------------------------------------------------------
 679+ 96AE              ;
 680+ 96AE              ;	5/08/22
 681+ 96AE              ;
 682+ 96AE              ;   PreviousScan.
 683+ 96AE              ;
 684+ 96AE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96AE              ;
 686+ 96AE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96AE              ;
 688+ 96AE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96AE              ;
 690+ 96AE              ;       DESTRUIDOS: AF y HL !!!
 691+ 96AE              ;
 692+ 96AE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96AE              ;
 694+ 96AE
 695+ 96AE 7C           PreviousScan ld a,h
 696+ 96AF 25               dec h               ; Dec H.
 697+ 96B0 E6 07            and 7
 698+ 96B2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96B3
 700+ 96B3 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96B4 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96B6 6F               ld l,a
 703+ 96B7 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96B8
 705+ 96B8 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96B9 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96BB 67               ld h,a
 708+ 96BC C9               ret
 709+ 96BD
 710+ 96BD              ; -----------------------------------------------------------------------------------
 711+ 96BD              ;
 712+ 96BD              ;	31/7/23
 713+ 96BD              ;
 714+ 96BD              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96BD              ;	Extrae fotos de Album_de_fotos.
 716+ 96BD
 717+ 96BD              Extrae_foto_entidades
 718+ 96BD
 719+ 96BD 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96C0 7E           	ld a,(hl)
 721+ 96C1 A7           	and a
 722+ 96C2 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96C3
 724+ 96C3 3A 34 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96C6 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96C7 C8           	ret z
 727+ 96C8
 728+ 96C8              ; -----------------------------------
 729+ 96C8
 730+ 96C8 ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96CC 31 00 70     	ld sp,Album_de_fotos
 732+ 96CF
 733+ 96CF FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96D1 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96D2 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96D3
 737+ 96D3 ED 73 3B 89  	ld (Stack_2),sp
 738+ 96D7 ED 7B 39 89  	ld sp,(Stack)
 739+ 96DB
 740+ 96DB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96DB
 742+ 96DB 3E CD        	ld a,$cd
 743+ 96DD 32 E5 96     	ld (Imprime),a
 744+ 96E0 EB           	ex de,hl
 745+ 96E1 22 E6 96     	ld (Imprime+1),hl
 746+ 96E4 EB           	ex de,hl
 747+ 96E5
 748+ 96E5              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96E5
 750+ 96E5 00 00 00     Imprime db 0,0,0
 751+ 96E8
 752+ 96E8 ED 73 39 89  	ld (Stack),sp
 753+ 96EC
 754+ 96EC 3A 34 89     	ld a,(Numero_de_malotes)
 755+ 96EF 3D           	dec a
 756+ 96F0 28 09        	jr z,1F
 757+ 96F2 32 34 89      	ld (Numero_de_malotes),a
 758+ 96F5
 759+ 96F5 ED 7B 3B 89  	ld sp,(Stack_2)
 760+ 96F9 18 D4        	jr 2B
 761+ 96FB
 762+ 96FB AF           1 xor a
 763+ 96FC 32 3B 89     	ld (Stack_2),a
 764+ 96FF
 765+ 96FF C9           	ret
 766+ 9700
 767+ 9700              ; -----------------------------------------------------------------------------------
 768+ 9700              ;
 769+ 9700              ;	28/2/23
 770+ 9700              ;
 771+ 9700              ;	Pinta los disparos generados.
 772+ 9700
 773+ 9700              Extrae_foto_disparos
 774+ 9700
 775+ 9700 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 9703 7E               ld a,(hl)
 777+ 9704 A7               and a
 778+ 9705 C8               ret z
 779+ 9706
 780+ 9706 3A 61 89     	ld a,(Numero_de_disparotes)
 781+ 9709 A7           	and a
 782+ 970A C8           	ret z
 783+ 970B ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 970F 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9712
 786+ 9712 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 9714 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 9715 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 9716
 790+ 9716 ED 73 3B 89  	ld (Stack_2),sp
 791+ 971A ED 7B 39 89  	ld sp,(Stack)
 792+ 971E
 793+ 971E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 971E
 795+ 971E 3E CD        	ld a,$cd
 796+ 9720 32 28 97     	ld (Imprime2),a
 797+ 9723 EB           	ex de,hl
 798+ 9724 22 29 97     	ld (Imprime2+1),hl
 799+ 9727 EB           	ex de,hl
 800+ 9728
 801+ 9728              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 9728
 803+ 9728 00 00 00     Imprime2 db 0,0,0
 804+ 972B
 805+ 972B 3A 61 89     	ld a,(Numero_de_disparotes)
 806+ 972E 3D           	dec a
 807+ 972F 28 09        	jr z,1F
 808+ 9731 32 61 89      	ld (Numero_de_disparotes),a
 809+ 9734
 810+ 9734 ED 7B 3B 89  	ld sp,(Stack_2)
 811+ 9738 18 D8        	jr 2B
 812+ 973A
 813+ 973A AF           1 xor a
 814+ 973B 32 3B 89     	ld (Stack_2),a
 815+ 973E C9           	ret
 816+ 973F
 817+ 973F              ; -----------------------------------------------------------------------------------
 818+ 973F              ;
 819+ 973F              ;	4/9/23
 820+ 973F              ;
 821+ 973F              ;	Rutina principal de pintado de Amadeus.
 822+ 973F              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 973F
 824+ 973F              Extrae_foto_Amadeus
 825+ 973F
 826+ 973F              ;	jr $
 827+ 973F
 828+ 973F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 829+ 9742 7E           	ld a,(hl)
 830+ 9743 A7           	and a
 831+ 9744 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9745
 833+ 9745 3A 34 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9748 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9749 C8           	ret z
 836+ 974A
 837+ 974A              ; -----------------------------------
 838+ 974A
 839+ 974A ED 73 39 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 974E 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 841+ 9751
 842+ 9751 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 9753 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 9754 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9755
 846+ 9755 ED 73 3B 89  	ld (Stack_2),sp
 847+ 9759 ED 7B 39 89  	ld sp,(Stack)
 848+ 975D
 849+ 975D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 975D
 851+ 975D 3E CD        	ld a,$cd
 852+ 975F 32 67 97     	ld (Imprime_Amadeus),a
 853+ 9762 EB           	ex de,hl
 854+ 9763 22 68 97     	ld (Imprime_Amadeus+1),hl
 855+ 9766 EB           	ex de,hl
 856+ 9767
 857+ 9767              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9767
 859+ 9767 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 976A
 861+ 976A ED 73 39 89  	ld (Stack),sp
 862+ 976E
 863+ 976E 3A 34 89     	ld a,(Numero_de_malotes)
 864+ 9771 3D           	dec a
 865+ 9772 28 09        	jr z,1F
 866+ 9774 32 34 89      	ld (Numero_de_malotes),a
 867+ 9777
 868+ 9777 ED 7B 3B 89  	ld sp,(Stack_2)
 869+ 977B 18 D4        	jr 2B
 870+ 977D
 871+ 977D AF           1 xor a
 872+ 977E 32 3B 89     	ld (Stack_2),a
 873+ 9781
 874+ 9781 C9           	ret
# file closed: Draw_XOR.asm
1569  9782              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9782              ;   índices de Rutinas de impresión.
   2+ 9782
   3+ 9782 92 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9784 BF 97            defw Pinta_Amadeus_3x2
   5+ 9786
   6+ 9786 15 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9788 B5 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 978A 69 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 978C
  10+ 978C 3F 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 978E 43 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9790 F7 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9792
  14+ 9792
  15+ 9792              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9792              ;
  17+ 9792              ;   12/12/22
  18+ 9792              ;
  19+ 9792              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9792              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9792              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9792              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9792              ;
  24+ 9792              ;   Modifica: DE y HL.
  25+ 9792
  26+ 9792 ED 73 39 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9796 FD F9        	ld sp,iy
  28+ 9798 06 10            ld b,16
  29+ 979A D1           1 pop de
  30+ 979B 7B               ld a,e
  31+ 979C AE               xor (hl)
  32+ 979D 77           	ld (hl),a
  33+ 979E 23           	inc hl
  34+ 979F 7A               ld a,d
  35+ 97A0 AE               xor (hl)
  36+ 97A1 77           	ld (hl),a
  37+ 97A2 2B           	dec hl
  38+ 97A3 24           	inc h
  39+ 97A4 7C               ld a,h
  40+ 97A5 E6 07            and 7
  41+ 97A7 20 0A            jr nz,2F
  42+ 97A9 7D               ld a,l
  43+ 97AA C6 20            add a,$20
  44+ 97AC 6F               ld l,a
  45+ 97AD 38 04            jr c,2F
  46+ 97AF 7C               ld a,h
  47+ 97B0 D6 08            sub 8
  48+ 97B2 67               ld h,a
  49+ 97B3 7C           2 ld a,h
  50+ 97B4 FE 58            cp $58
  51+ 97B6 28 02            jr z,3F
  52+ 97B8 10 E0            djnz 1B
  53+ 97BA ED 7B 39 89  3 ld sp,(Stack)
  54+ 97BE C9           	ret
  55+ 97BF
  56+ 97BF ED 73 39 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97C3 FD F9        	ld sp,iy
  58+ 97C5 06 08            ld b,8
  59+ 97C7 D1           1 pop de
  60+ 97C8 7B               ld a,e
  61+ 97C9 AE               xor (hl)
  62+ 97CA 77           	ld (hl),a
  63+ 97CB 23           	inc hl
  64+ 97CC 7A               ld a,d
  65+ 97CD AE               xor (hl)
  66+ 97CE 77           	ld (hl),a
  67+ 97CF 23           	inc hl
  68+ 97D0 D1           	pop de
  69+ 97D1 7B               ld a,e
  70+ 97D2 AE               xor (hl)
  71+ 97D3 77           	ld (hl),a
  72+ 97D4 2B           	dec hl
  73+ 97D5 2B           	dec hl
  74+ 97D6 24           	inc h
  75+ 97D7 7C               ld a,h
  76+ 97D8 E6 07            and 7
  77+ 97DA 20 0A            jr nz,2F
  78+ 97DC 7D               ld a,l
  79+ 97DD C6 20            add a,$20
  80+ 97DF 6F               ld l,a
  81+ 97E0 38 04            jr c,2F
  82+ 97E2 7C               ld a,h
  83+ 97E3 D6 08            sub 8
  84+ 97E5 67               ld h,a
  85+ 97E6 7C           2 ld a,h
  86+ 97E7 FE 58            cp $58
  87+ 97E9 28 25            jr z,4F
  88+ 97EB 7A               ld a,d
  89+ 97EC AE               xor (hl)
  90+ 97ED 77               ld (hl),a
  91+ 97EE D1           	pop de
  92+ 97EF 23           	inc hl
  93+ 97F0 7B               ld a,e
  94+ 97F1 AE               xor (hl)
  95+ 97F2 77           	ld (hl),a
  96+ 97F3 23           	inc hl
  97+ 97F4 7A               ld a,d
  98+ 97F5 AE               xor (hl)
  99+ 97F6 77           	ld (hl),a
 100+ 97F7 2B           	dec hl
 101+ 97F8 2B           	dec hl
 102+ 97F9 24           	inc h
 103+ 97FA 7C               ld a,h
 104+ 97FB E6 07            and 7
 105+ 97FD 20 0A            jr nz,3F
 106+ 97FF 7D               ld a,l
 107+ 9800 C6 20            add a,$20
 108+ 9802 6F               ld l,a
 109+ 9803 38 04            jr c,3F
 110+ 9805 7C               ld a,h
 111+ 9806 D6 08            sub 8
 112+ 9808 67               ld h,a
 113+ 9809 7C           3 ld a,h
 114+ 980A FE 58            cp $58
 115+ 980C 28 02            jr z,4F
 116+ 980E 10 B7            djnz 1B
 117+ 9810 ED 7B 39 89  4 ld sp,(Stack)
 118+ 9814 C9           	ret
 119+ 9815
 120+ 9815              ; ---------------------------------------------------
 121+ 9815
 122+ 9815 ED 73 39 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9819 FD F9        	ld sp,iy
 124+ 981B
 125+ 981B              ; >>>
 126+ 981B
 127+ 981B 06 10            ld b,16
 128+ 981D D1           1 pop de
 129+ 981E 7A           	ld a,d
 130+ 981F AE           	xor (hl)
 131+ 9820 77           	ld (hl),a
 132+ 9821 24           	inc h
 133+ 9822 7C               ld a,h
 134+ 9823 E6 07            and 7
 135+ 9825 20 0C            jr nz,2F
 136+ 9827 7D               ld a,l
 137+ 9828 C6 20            add a,$20
 138+ 982A 6F               ld l,a
 139+ 982B 38 06            jr c,2F
 140+ 982D 7C               ld a,h
 141+ 982E D6 08            sub 8
 142+ 9830 67               ld h,a
 143+ 9831 18 00            jr 2F
 144+ 9833 7C           2 ld a,h
 145+ 9834 FE 58            cp $58
 146+ 9836 28 02            jr z,3F
 147+ 9838 10 E3            djnz 1B
 148+ 983A ED 7B 39 89  3 ld sp,(Stack)
 149+ 983E C9           	ret
 150+ 983F
 151+ 983F ED 73 39 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9843 FD F9        	ld sp,iy
 153+ 9845
 154+ 9845              ; >>>
 155+ 9845
 156+ 9845 06 10            ld b,16
 157+ 9847 D1           1 pop de
 158+ 9848 7B           	ld a,e
 159+ 9849 AE           	xor (hl)
 160+ 984A 77           	ld (hl),a
 161+ 984B 24           	inc h
 162+ 984C 7C               ld a,h
 163+ 984D E6 07            and 7
 164+ 984F 20 0C            jr nz,2F
 165+ 9851 7D               ld a,l
 166+ 9852 C6 20            add a,$20
 167+ 9854 6F               ld l,a
 168+ 9855 38 06            jr c,2F
 169+ 9857 7C               ld a,h
 170+ 9858 D6 08            sub 8
 171+ 985A 67               ld h,a
 172+ 985B 18 00            jr 2F
 173+ 985D 7C           2 ld a,h
 174+ 985E FE 58            cp $58
 175+ 9860 28 02            jr z,3F
 176+ 9862 10 E3            djnz 1B
 177+ 9864 ED 7B 39 89  3 ld sp,(Stack)
 178+ 9868 C9           	ret
 179+ 9869
 180+ 9869              ; ---------------------------------------------------
 181+ 9869
 182+ 9869 ED 73 39 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 986D FD F9        	ld sp,iy
 184+ 986F 06 08            ld b,8
 185+ 9871 D1           1 pop de
 186+ 9872 7A           	ld a,d
 187+ 9873 AE           	xor (hl)
 188+ 9874 77           	ld (hl),a
 189+ 9875 23           	inc hl
 190+ 9876 D1           	pop de
 191+ 9877 7B           	ld a,e
 192+ 9878 AE           	xor (hl)
 193+ 9879 77           	ld (hl),a
 194+ 987A 2B           	dec hl
 195+ 987B 24            	inc h
 196+ 987C 7C               ld a,h
 197+ 987D E6 07            and 7
 198+ 987F 20 0A            jr nz,2F
 199+ 9881 7D               ld a,l
 200+ 9882 C6 20            add a,$20
 201+ 9884 6F               ld l,a
 202+ 9885 38 04            jr c,2F
 203+ 9887 7C               ld a,h
 204+ 9888 D6 08            sub 8
 205+ 988A 67               ld h,a
 206+ 988B 7C           2 ld a,h
 207+ 988C FE 58            cp $58
 208+ 988E 28 20            jr z,4F
 209+ 9890 D1               pop de
 210+ 9891 7B           	ld a,e
 211+ 9892 AE           	xor (hl)
 212+ 9893 77           	ld (hl),a
 213+ 9894 23           	inc hl
 214+ 9895 7A           	ld a,d
 215+ 9896 AE           	xor (hl)
 216+ 9897 77           	ld (hl),a
 217+ 9898 2B           	dec hl
 218+ 9899 24           	inc h
 219+ 989A 7C               ld a,h
 220+ 989B E6 07            and 7
 221+ 989D 20 0A            jr nz,3F
 222+ 989F 7D               ld a,l
 223+ 98A0 C6 20            add a,$20
 224+ 98A2 6F               ld l,a
 225+ 98A3 38 04            jr c,3F
 226+ 98A5 7C               ld a,h
 227+ 98A6 D6 08            sub 8
 228+ 98A8 67               ld h,a
 229+ 98A9 7C           3 ld a,h
 230+ 98AA FE 58            cp $58
 231+ 98AC 28 02            jr z,4F
 232+ 98AE 10 C1            djnz 1B
 233+ 98B0 ED 7B 39 89  4 ld sp,(Stack)
 234+ 98B4 C9           	ret
 235+ 98B5
 236+ 98B5 ED 73 39 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98B9 FD F9        	ld sp,iy
 238+ 98BB 06 08            ld b,8
 239+ 98BD D1           1 pop de
 240+ 98BE D1           	pop de
 241+ 98BF 7B           	ld a,e
 242+ 98C0 AE           	xor (hl)
 243+ 98C1 77           	ld (hl),a
 244+ 98C2 24            	inc h
 245+ 98C3 7C               ld a,h
 246+ 98C4 E6 07            and 7
 247+ 98C6 20 0A            jr nz,2F
 248+ 98C8 7D               ld a,l
 249+ 98C9 C6 20            add a,$20
 250+ 98CB 6F               ld l,a
 251+ 98CC 38 04            jr c,2F
 252+ 98CE 7C               ld a,h
 253+ 98CF D6 08            sub 8
 254+ 98D1 67               ld h,a
 255+ 98D2 7C           2 ld a,h
 256+ 98D3 FE 58            cp $58
 257+ 98D5 28 1B            jr z,4F
 258+ 98D7 D1               pop de
 259+ 98D8 7A           	ld a,d
 260+ 98D9 AE           	xor (hl)
 261+ 98DA 77           	ld (hl),a
 262+ 98DB 24           	inc h
 263+ 98DC 7C               ld a,h
 264+ 98DD E6 07            and 7
 265+ 98DF 20 0A            jr nz,3F
 266+ 98E1 7D               ld a,l
 267+ 98E2 C6 20            add a,$20
 268+ 98E4 6F               ld l,a
 269+ 98E5 38 04            jr c,3F
 270+ 98E7 7C               ld a,h
 271+ 98E8 D6 08            sub 8
 272+ 98EA 67               ld h,a
 273+ 98EB 7C           3 ld a,h
 274+ 98EC FE 58            cp $58
 275+ 98EE 28 02            jr z,4F
 276+ 98F0 10 CB            djnz 1B
 277+ 98F2 ED 7B 39 89  4 ld sp,(Stack)
 278+ 98F6 C9           	ret
 279+ 98F7
 280+ 98F7 ED 73 39 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98FB FD F9        	ld sp,iy
 282+ 98FD 06 08            ld b,8
 283+ 98FF D1           1 pop de
 284+ 9900 7B           	ld a,e
 285+ 9901 AE           	xor (hl)
 286+ 9902 77           	ld (hl),a
 287+ 9903 23           	inc hl
 288+ 9904 7A           	ld a,d
 289+ 9905 AE           	xor (hl)
 290+ 9906 77           	ld (hl),a
 291+ 9907 2B           	dec hl
 292+ 9908 24             	inc h
 293+ 9909 7C               ld a,h
 294+ 990A E6 07            and 7
 295+ 990C 20 0A            jr nz,2F
 296+ 990E 7D               ld a,l
 297+ 990F C6 20            add a,$20
 298+ 9911 6F               ld l,a
 299+ 9912 38 04            jr c,2F
 300+ 9914 7C               ld a,h
 301+ 9915 D6 08            sub 8
 302+ 9917 67               ld h,a
 303+ 9918 7C           2 ld a,h
 304+ 9919 FE 58            cp $58
 305+ 991B 28 21            jr z,4F
 306+ 991D D1               pop de
 307+ 991E 7A           	ld a,d
 308+ 991F AE           	xor (hl)
 309+ 9920 77           	ld (hl),a
 310+ 9921 23           	inc hl
 311+ 9922 D1               pop de
 312+ 9923 7B           	ld a,e
 313+ 9924 AE           	xor (hl)
 314+ 9925 77           	ld (hl),a
 315+ 9926 2B           	dec hl
 316+ 9927 24           	inc h
 317+ 9928 7C               ld a,h
 318+ 9929 E6 07            and 7
 319+ 992B 20 0A            jr nz,3F
 320+ 992D 7D               ld a,l
 321+ 992E C6 20            add a,$20
 322+ 9930 6F               ld l,a
 323+ 9931 38 04            jr c,3F
 324+ 9933 7C               ld a,h
 325+ 9934 D6 08            sub 8
 326+ 9936 67               ld h,a
 327+ 9937 7C           3 ld a,h
 328+ 9938 FE 58            cp $58
 329+ 993A 28 02            jr z,4F
 330+ 993C 10 C1            djnz 1B
 331+ 993E ED 7B 39 89  4 ld sp,(Stack)
 332+ 9942 C9           	ret
 333+ 9943
 334+ 9943 ED 73 39 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9947 FD F9        	ld sp,iy
 336+ 9949 06 08            ld b,8
 337+ 994B D1           1 pop de
 338+ 994C 7B           	ld a,e
 339+ 994D AE           	xor (hl)
 340+ 994E 77           	ld (hl),a
 341+ 994F 24            	inc h
 342+ 9950 7C               ld a,h
 343+ 9951 E6 07            and 7
 344+ 9953 20 0A            jr nz,2F
 345+ 9955 7D               ld a,l
 346+ 9956 C6 20            add a,$20
 347+ 9958 6F               ld l,a
 348+ 9959 38 04            jr c,2F
 349+ 995B 7C               ld a,h
 350+ 995C D6 08            sub 8
 351+ 995E 67               ld h,a
 352+ 995F 7C           2 ld a,h
 353+ 9960 FE 58            cp $58
 354+ 9962 28 1C            jr z,4F
 355+ 9964 D1               pop de
 356+ 9965 7A           	ld a,d
 357+ 9966 AE           	xor (hl)
 358+ 9967 77           	ld (hl),a
 359+ 9968 24           	inc h
 360+ 9969 7C               ld a,h
 361+ 996A E6 07            and 7
 362+ 996C 20 0A            jr nz,3F
 363+ 996E 7D               ld a,l
 364+ 996F C6 20            add a,$20
 365+ 9971 6F               ld l,a
 366+ 9972 38 04            jr c,3F
 367+ 9974 7C               ld a,h
 368+ 9975 D6 08            sub 8
 369+ 9977 67               ld h,a
 370+ 9978 7C           3 ld a,h
 371+ 9979 FE 58            cp $58
 372+ 997B 28 03            jr z,4F
 373+ 997D D1               pop de
 374+ 997E 10 CB            djnz 1B
 375+ 9980 ED 7B 39 89  4 ld sp,(Stack)
 376+ 9984 C9           	ret
 377+ 9985
 378+ 9985              ; ---------------------------------------------------
 379+ 9985              ;
 380+ 9985              ;   27/02/23
 381+ 9985              ;
 382+ 9985              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9985              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9985              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9985
 386+ 9985 ED 73 39 89  Pinta_Disparo ld (Stack),sp
 387+ 9989 FD F9            ld sp,iy
 388+ 998B 06 03            ld b,3
 389+ 998D D1           1 pop de
 390+ 998E 7B               ld a,e
 391+ 998F AE               xor (hl)
 392+ 9990 77               ld (hl),a
 393+ 9991 23               inc hl
 394+ 9992 7A               ld a,d
 395+ 9993 AE               xor (hl)
 396+ 9994 77               ld (hl),a
 397+ 9995 2B               dec hl
 398+ 9996
 399+ 9996 24               inc h
 400+ 9997 7C               ld a,h
 401+ 9998 E6 07            and 7
 402+ 999A 20 0A            jr nz,2F
 403+ 999C 7D               ld a,l
 404+ 999D C6 20            add a,$20
 405+ 999F 6F               ld l,a
 406+ 99A0 38 04            jr c,2F
 407+ 99A2 7C               ld a,h
 408+ 99A3 D6 08            sub 8
 409+ 99A5 67               ld h,a
 410+ 99A6 7C           2 ld a,h
 411+ 99A7 FE 58            cp $58
 412+ 99A9 28 02            jr z,3F
 413+ 99AB
 414+ 99AB 10 E0            djnz 1B
 415+ 99AD ED 7B 39 89  3 ld sp,(Stack)
 416+ 99B1 C9               ret
 417+ 99B2
# file closed: Rutinas_de_impresion_sprites.asm
1570  99B2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99B2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99B2              ;
   3+ 99B2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99B2              ;
   5+ 99B2              ; *****************************************************************************************************************************************************************************************
   6+ 99B2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99B2
   8+ 99B2 7C           calcula_tercio ld a,h
   9+ 99B3 E6 18        	and $18
  10+ 99B5 CB 2F        	sra a
  11+ 99B7 CB 2F        	sra a
  12+ 99B9 CB 2F        	sra a
  13+ 99BB C9           	ret
  14+ 99BC
# file closed: calcula_tercio.asm
1571  99BC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99BC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99BC              ;
   3+ 99BC              ;
   4+ 99BC              ;	CLS.
   5+ 99BC              ;
   6+ 99BC              ;	Limpia la pantalla y define sus atributos.
   7+ 99BC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99BC              ;
   9+ 99BC              ;	COLORES: 0 ..... NEGRO
  10+ 99BC              ;    		 1 ..... AZUL
  11+ 99BC              ; 			 2 ..... ROJO
  12+ 99BC              ;			 3 ..... MAGENTA
  13+ 99BC              ; 			 4 ..... VERDE
  14+ 99BC              ; 			 5 ..... CIAN
  15+ 99BC              ;			 6 ..... AMARILLO
  16+ 99BC              ; 			 7 ..... BLANCO
  17+ 99BC              ;
  18+ 99BC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99BC              ;
  20+ 99BC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99BC
  22+ 99BC
  23+ 99BC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99BF 11 01 40     	LD DE,$4001
  25+ 99C2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99C5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99C7 ED B0        	LDIR
  28+ 99C9 01 FF 02     	LD BC,767
  29+ 99CC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99CD ED B0        	LDIR
  31+ 99CF C9           	ret
  32+ 99D0
# file closed: Cls.asm
1572  99D0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D0              ; ******************************************************************************************************************************************************************************************
   2+ 99D0              ;
   3+ 99D0              ;   20/05/23
   4+ 99D0              ;
   5+ 99D0              ;	Recompone_posicion_inicio
   6+ 99D0              ;
   7+ 99D0              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99D0              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99D0              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99D0              ;	_ a una u otra rutina.
  11+ 99D0
  12+ 99D0              Recompone_posicion_inicio
  13+ 99D0
  14+ 99D0 2A F7 88     	ld hl,(Posicion_inicio)
  15+ 99D3 7D           	ld a,l
  16+ 99D4 E6 1F        	and $1f
  17+ 99D6 28 16        	jr z,1F
  18+ 99D8
  19+ 99D8 FE 1F        	cp $1f
  20+ 99DA 28 0D        	jr z,3F
  21+ 99DC
  22+ 99DC 21 26 89     	ld hl,Ctrl_2
  23+ 99DF CB C6        	set 0,(hl)
  24+ 99E1 2A E9 88     	ld hl,(Puntero_objeto)
  25+ 99E4 22 29 89     	ld (Repone_puntero_objeto),hl
  26+ 99E7 18 08        	jr 2F
  27+ 99E9
  28+ 99E9 CD 8A 9B     3 call Mov_left
  29+ 99EC 18 03        	jr 2F
  30+ 99EE
  31+ 99EE CD 6C 9A     1 call Mov_right
  32+ 99F1 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99F4 22 E9 88     	ld (Puntero_objeto),hl
  34+ 99F7 C9           	ret
  35+ 99F8
  36+ 99F8              ; ******************************************************************************************************************************************************************************************
  37+ 99F8              ;
  38+ 99F8              ;   27/05/23
  39+ 99F8              ;
  40+ 99F8              ;	Mov_down
  41+ 99F8              ;
  42+ 99F8              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99F8              ;
  44+ 99F8              ;
  45+ 99F8              Mov_down
  46+ 99F8
  47+ 99F8 CD 5A 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99FB              ;																	; _ repone (Puntero_objeto).
  49+ 99FB 21 13 89     	ld hl,Ctrl_0
  50+ 99FE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A00              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A00              ; 																	; _ en el caso de que no lo haya.
  53+ 9A00 3A FD 88     	ld a,(Vel_down)
  54+ 9A03 47           	ld b,a
  55+ 9A04 2A E7 88         ld hl,(Posicion_actual)
  56+ 9A07 CD B2 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A0A E6 02        	and 2
  58+ 9A0C 28 0F        	jr z,1F
  59+ 9A0E
  60+ 9A0E              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A0E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A0E
  63+ 9A0E 7C           	ld a,h
  64+ 9A0F FE 57        	cp $57
  65+ 9A11 20 0A        	jr nz,1F
  66+ 9A13
  67+ 9A13 7D           	ld a,l
  68+ 9A14 C6 20        	add $20
  69+ 9A16 30 05        	jr nc,1F
  70+ 9A18
  71+ 9A18              ; ------------------------------
  72+ 9A18              ;	call Reaparece_arriba
  73+ 9A18 CD 17 9D     	call Reinicio
  74+ 9A1B              ; ------------------------------
  75+ 9A1B
  76+ 9A1B 18 08        	jr 3F
  77+ 9A1D CD 9F 96     1 call NextScan
  78+ 9A20 22 E7 88     	ld (Posicion_actual),hl
  79+ 9A23 10 E2            djnz 2B
  80+ 9A25 CD 3D 9D     3 call Genera_coordenadas
  81+ 9A28 C9           	ret
  82+ 9A29
  83+ 9A29              ; ******************************************************************************************************************************************************************************************
  84+ 9A29              ;
  85+ 9A29              ;   27/05/23
  86+ 9A29              ;
  87+ 9A29              ;	Mov_up
  88+ 9A29              ;
  89+ 9A29              ; 	Mueve el Sprite hacia arriba.
  90+ 9A29              ;
  91+ 9A29              ;
  92+ 9A29              Mov_up
  93+ 9A29
  94+ 9A29 CD 5A 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A2C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A2C 21 13 89     	ld hl,Ctrl_0
  97+ 9A2F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A31              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A31              ; 																		; _ en el caso de que no lo haya.
 100+ 9A31 3A FC 88     	ld a,(Vel_up)
 101+ 9A34 47           	ld b,a
 102+ 9A35 2A E7 88     	ld hl,(Posicion_actual)
 103+ 9A38 CD B2 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A3B A7           	and a
 105+ 9A3C 20 10        	jr nz,1F
 106+ 9A3E
 107+ 9A3E              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A3E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A3E
 110+ 9A3E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A3F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A41 20 0B            jr nz,1F
 113+ 9A43 7D               ld a,l
 114+ 9A44 D6 20            sub $20
 115+ 9A46 30 06            jr nc,1F
 116+ 9A48 25               dec h
 117+ 9A49
 118+ 9A49              ; -----------------------------
 119+ 9A49 CD F8 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A4C              ;	call Reinicio
 121+ 9A4C              ; -----------------------------
 122+ 9A4C
 123+ 9A4C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A4E CD AE 96     1 call PreviousScan
 125+ 9A51 22 E7 88     	ld (Posicion_actual),hl
 126+ 9A54 10 E2            djnz 3B
 127+ 9A56 CD 3D 9D     2 call Genera_coordenadas
 128+ 9A59 C9           	ret
 129+ 9A5A
 130+ 9A5A              ; -----------------------------
 131+ 9A5A              ;
 132+ 9A5A              ;	27/5/23
 133+ 9A5A              ;
 134+ 9A5A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A5A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A5A              ;
 137+ 9A5A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A5A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A5A              ;
 140+ 9A5A              ;	Modifica: A y (Puntero_objeto).
 141+ 9A5A
 142+ 9A5A 3A 26 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A5D CB 47        	bit 0,a
 144+ 9A5F C8           	ret z
 145+ 9A60 CB 87        	res 0,a
 146+ 9A62 32 26 89     	ld (Ctrl_2),a
 147+ 9A65 2A 29 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A68 22 E9 88     	ld (Puntero_objeto),hl
 149+ 9A6B C9           	ret
 150+ 9A6C
 151+ 9A6C              ; ******************************************************************************************************************************************************************************************
 152+ 9A6C              ;
 153+ 9A6C              ;	19/10/22
 154+ 9A6C              ;
 155+ 9A6C              ;	Mov_right.
 156+ 9A6C              ;
 157+ 9A6C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A6C              ;
 159+ 9A6C
 160+ 9A6C 21 13 89     Mov_right ld hl,Ctrl_0
 161+ 9A6F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A71              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A71              ; 																	; _ en el caso de que no lo haya.
 164+ 9A71 3A 13 89     	ld a,(Ctrl_0)
 165+ 9A74 CB 77        	bit 6,a
 166+ 9A76 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A78
 168+ 9A78 CD A6 9C     	call Stop_Amadeus_right
 169+ 9A7B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A7C 18 4D        	jr 8F
 171+ 9A7E
 172+ 9A7E 3A EB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A81 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A83 20 46        	jr nz,8F
 175+ 9A85
 176+ 9A85 3A ED 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A88 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A89 28 40        	jr z,8F
 179+ 9A8B
 180+ 9A8B              ; ---------- ---------- ----------
 181+ 9A8B              ;
 182+ 9A8B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A8B
 184+ 9A8B 3A FB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A8E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A90 28 11        	jr z,1F
 187+ 9A92 38 06        	jr c,6F
 188+ 9A94 FE 04        	cp 4
 189+ 9A96 28 14        	jr z,7F
 190+ 9A98 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A9A
 192+ 9A9A              ; ---------- ---------- ----------
 193+ 9A9A              ;
 194+ 9A9A              ; Perfiles de velocidad
 195+ 9A9A              ;
 196+ 9A9A
 197+ 9A9A 3A ED 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A9D FE FE        	cp $fe
 199+ 9A9F 20 2A        	jr nz,8F
 200+ 9AA1 18 10        	jr 3F
 201+ 9AA3 3A ED 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AA6 FE FD        	cp $fd
 203+ 9AA8 20 21        	jr nz,8F
 204+ 9AAA 18 07        	jr 3F
 205+ 9AAC 3A ED 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AAF FE FB        	cp $fb
 207+ 9AB1 20 18        	jr nz,8F
 208+ 9AB3
 209+ 9AB3              ; ---------- ---------- ----------
 210+ 9AB3
 211+ 9AB3              3
 212+ 9AB3 CD E6 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AB6              ;	call Reinicio
 214+ 9AB6
 215+ 9AB6              ; ---------- ---------- ----------
 216+ 9AB6              ;
 217+ 9AB6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AB6
 219+ 9AB6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AB8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AB9 CD D2 9A     	call DESPLZ_DER
 222+ 9ABC C1           	pop bc
 223+ 9ABD 10 F9        	djnz 5B
 224+ 9ABF 2A E7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AC2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AC3 22 E7 88     	ld (Posicion_actual),hl
 227+ 9AC6 CD 3D 9D     	call Genera_coordenadas
 228+ 9AC9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9ACB
 230+ 9ACB              ; ---------- ---------- ----------
 231+ 9ACB
 232+ 9ACB 2A E7 88     8 ld hl,(Posicion_actual)
 233+ 9ACE CD D2 9A     	call DESPLZ_DER
 234+ 9AD1 C9           2 ret
 235+ 9AD2
 236+ 9AD2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AD2              ;
 238+ 9AD2              ;	22/9/22
 239+ 9AD2              ;
 240+ 9AD2
 241+ 9AD2 CD E1 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AD5 CD 2D 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AD8 CD 56 9B         call Ciclo_completo
 244+ 9ADB 21 13 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9ADE CB FE        	set 7,(hl)
 246+ 9AE0 C9           	ret
 247+ 9AE1
 248+ 9AE1              ; ******************************************************************************************************************************************************************************************
 249+ 9AE1              ;	15/02/23
 250+ 9AE1              ;
 251+ 9AE1
 252+ 9AE1 3A FB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AE4 47           	ld b,a
 254+ 9AE5 2A F3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AE8 23           1 inc hl
 256+ 9AE9 23           	inc hl
 257+ 9AEA 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AEC 22 F3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AEF CD FB 8C     	call Extrae_address
 260+ 9AF2 22 E9 88     	ld (Puntero_objeto),hl
 261+ 9AF5
 262+ 9AF5              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AF5
 264+ 9AF5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AF5              ; Cuántos movimientos hemos hecho ??
 266+ 9AF5              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AF5
 268+ 9AF5 2A EF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AF8 EB           	ex de,hl
 270+ 9AF9 A7           	and a
 271+ 9AFA ED 52        	sbc hl,de
 272+ 9AFC CB 3D        	srl l
 273+ 9AFE 3E 08        6 ld a,8
 274+ 9B00 95           	sub l
 275+ 9B01 30 1E        	jr nc,3F
 276+ 9B03
 277+ 9B03              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B03              ; B="0".
 279+ 9B03
 280+ 9B03 04           4 inc b
 281+ 9B04 3C           	inc a
 282+ 9B05 20 FC        	jr nz,4B
 283+ 9B07 78           	ld a,b
 284+ 9B08 08           	ex af,af
 285+ 9B09 2A EF 88     	ld hl,(Indice_Sprite_der)
 286+ 9B0C 23           5 inc hl
 287+ 9B0D 23           	inc hl
 288+ 9B0E 10 FC        	djnz 5B
 289+ 9B10 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B13 CD FB 8C     	call Extrae_address
 291+ 9B16 22 E9 88     	ld (Puntero_objeto),hl
 292+ 9B19
 293+ 9B19              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B19              ; _(Posicion_actual).
 295+ 9B19
 296+ 9B19 21 E7 88     	ld hl,Posicion_actual
 297+ 9B1C 34           	inc (hl)
 298+ 9B1D 08               ex af,af
 299+ 9B1E 6F           	ld l,a
 300+ 9B1F 18 DD        	jr 6B
 301+ 9B21
 302+ 9B21              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B21
 304+ 9B21 47           3 ld b,a
 305+ 9B22 2A F1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B25 23           2 inc hl
 307+ 9B26 23           	inc hl
 308+ 9B27 10 FC        	djnz 2B
 309+ 9B29 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B2C C9           8 ret
 311+ 9B2D
 312+ 9B2D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B2D              ;
 314+ 9B2D              ;	24/7/22
 315+ 9B2D              ;
 316+ 9B2D              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B2D              ;
 318+ 9B2D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B2D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B2D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B2D
 322+ 9B2D 3A ED 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B30 A7           	and a
 324+ 9B31 20 1F        	jr nz,1F
 325+ 9B33 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B35 32 ED 88         ld (CTRL_DESPLZ),a
 327+ 9B38
 328+ 9B38 21 E6 88     	ld hl,Columns
 329+ 9B3B 34           	inc (hl)
 330+ 9B3C 3A F9 88     	ld a,(Cuad_objeto)
 331+ 9B3F E6 01        	and 1
 332+ 9B41 28 0F        	jr z,1F
 333+ 9B43 2A E7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B46 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B47 22 E7 88     	ld (Posicion_actual),hl
 336+ 9B4A CD 3D 9D     	call Genera_coordenadas
 337+ 9B4D CD B2 9C     	call Inc_CTRL_DESPLZ
 338+ 9B50 18 03        	jr 2F
 339+ 9B52 CD B2 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B55 C9           2 ret
 341+ 9B56
 342+ 9B56              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B56              ;
 344+ 9B56              ;	24/7/22
 345+ 9B56              ;
 346+ 9B56              ;	Ciclo_completo.
 347+ 9B56              ;
 348+ 9B56              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B56              ;
 350+ 9B56              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B56              ; 	Decrementamos (Columns).
 352+ 9B56              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B56              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B56
 355+ 9B56
 356+ 9B56 3A ED 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B59 FE FF        	cp $ff
 358+ 9B5B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B5D E6 F0        	and $f0
 360+ 9B5F 20 28        	jr nz,3F
 361+ 9B61
 362+ 9B61              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B61
 364+ 9B61 3A ED 88     	ld a,(CTRL_DESPLZ)
 365+ 9B64 47           	ld b,a
 366+ 9B65 3E F8        	ld a,$f8
 367+ 9B67 80           	add b
 368+ 9B68 32 ED 88     	ld (CTRL_DESPLZ),a
 369+ 9B6B 18 1C        	jr 3F
 370+ 9B6D 21 E6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B70 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B71 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B72 32 ED 88     	ld (CTRL_DESPLZ),a
 374+ 9B75 3A F9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B78 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B7A 20 0A        	jr nz,2F
 377+ 9B7C 2A E7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B7F 23           	inc hl
 379+ 9B80 22 E7 88     	ld (Posicion_actual),hl
 380+ 9B83 CD 3D 9D     	call Genera_coordenadas
 381+ 9B86
 382+ 9B86              ; Inicia el puntero de Sprite.
 383+ 9B86
 384+ 9B86 CD 12 8D     2 call Inicia_puntero_objeto_der
 385+ 9B89 C9           3 ret
 386+ 9B8A
 387+ 9B8A              ; ******************************************************************************************************************************************************************************************
 388+ 9B8A              ;
 389+ 9B8A              ;	15/02/23
 390+ 9B8A              ;
 391+ 9B8A              ;	Mov_left.
 392+ 9B8A              ;
 393+ 9B8A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B8A              ;
 395+ 9B8A 21 13 89     Mov_left ld hl,Ctrl_0
 396+ 9B8D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B8F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B8F              ; 																	; _ en el caso de que no lo haya.
 399+ 9B8F 3A 13 89     	ld a,(Ctrl_0)
 400+ 9B92 CB 77        	bit 6,a
 401+ 9B94 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B96
 403+ 9B96 CD AC 9C     	call Stop_Amadeus_left
 404+ 9B99 C8           	ret z
 405+ 9B9A 20 4A        	jr nz,8F
 406+ 9B9C
 407+ 9B9C 3A EB 88     11 ld a,(Coordenada_X)
 408+ 9B9F A7           	and a
 409+ 9BA0 20 44        	jr nz,8F
 410+ 9BA2
 411+ 9BA2 3A ED 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BA5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BA6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BA8
 415+ 9BA8              ; ---------- ---------- ----------
 416+ 9BA8
 417+ 9BA8 3A FA 88     	ld a,(Vel_left)
 418+ 9BAB FE 02        	cp 2
 419+ 9BAD 28 0F        	jr z,1F
 420+ 9BAF 38 04        	jr c,6F
 421+ 9BB1 FE 04        	cp 4
 422+ 9BB3 28 12        	jr z,7F
 423+ 9BB5
 424+ 9BB5              ; ---------- ---------- ----------
 425+ 9BB5
 426+ 9BB5 3A ED 88     6 ld a,(CTRL_DESPLZ)
 427+ 9BB8 FE F8        	cp $f8
 428+ 9BBA 20 2A        	jr nz,8F
 429+ 9BBC 18 10        	jr 4F
 430+ 9BBE 3A ED 88     1 ld a,(CTRL_DESPLZ)
 431+ 9BC1 FE F9        	cp $f9
 432+ 9BC3 20 21        	jr nz,8F
 433+ 9BC5 18 07        	jr 4F
 434+ 9BC7 3A ED 88     7 ld a,(CTRL_DESPLZ)
 435+ 9BCA FE FB        	cp $fb
 436+ 9BCC 20 18        	jr nz,8F
 437+ 9BCE
 438+ 9BCE              ; ---------- ---------- ----------
 439+ 9BCE
 440+ 9BCE              4
 441+ 9BCE CD D4 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BD1              ;	call Reinicio
 443+ 9BD1
 444+ 9BD1              ; ---------- ---------- ----------
 445+ 9BD1
 446+ 9BD1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BD3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BD4
 449+ 9BD4              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BD4              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BD4
 452+ 9BD4 CD ED 9B     	call DESPLZ_IZQ
 453+ 9BD7 C1           	pop bc
 454+ 9BD8 10 F9        	djnz 5B
 455+ 9BDA 2A E7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BDD 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BDE 22 E7 88     	ld (Posicion_actual),hl
 458+ 9BE1 CD 3D 9D     	call Genera_coordenadas
 459+ 9BE4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BE6
 461+ 9BE6              ; ---------- ---------- ----------
 462+ 9BE6
 463+ 9BE6              ; Movemos, no hay recolocación.
 464+ 9BE6
 465+ 9BE6 2A E7 88     8 ld hl,(Posicion_actual)
 466+ 9BE9 CD ED 9B     	call DESPLZ_IZQ
 467+ 9BEC C9           2 ret
 468+ 9BED
 469+ 9BED              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BED              ;
 471+ 9BED              ;	22/9/22
 472+ 9BED
 473+ 9BED              DESPLZ_IZQ
 474+ 9BED
 475+ 9BED CD FC 9B     	call Desplaza_izquierda
 476+ 9BF0 CD 48 9C         call modifica_parametros_1er_DESPLZ
 477+ 9BF3 CD 70 9C     	call Ciclo_completo_2
 478+ 9BF6 21 13 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9BF9 CB BE        	res 7,(hl)
 480+ 9BFB C9           	ret
 481+ 9BFC
 482+ 9BFC              Desplaza_izquierda
 483+ 9BFC
 484+ 9BFC 3A FA 88     	ld a,(Vel_left)
 485+ 9BFF 47           	ld b,a
 486+ 9C00 2A F5 88     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C03 23           1 inc hl
 488+ 9C04 23           	inc hl
 489+ 9C05 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C07 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C0A CD FB 8C     	call Extrae_address
 492+ 9C0D 22 E9 88     	ld (Puntero_objeto),hl
 493+ 9C10
 494+ 9C10              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C10
 496+ 9C10              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C10              ; Cuántos movimientos hemos hecho ??
 498+ 9C10              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C10
 500+ 9C10 2A F1 88     7 ld hl,(Indice_Sprite_izq)
 501+ 9C13 EB           	ex de,hl
 502+ 9C14 A7           	and a
 503+ 9C15 ED 52        	sbc hl,de
 504+ 9C17 CB 3D        	srl l
 505+ 9C19 3E 08        6 ld a,8
 506+ 9C1B 95           	sub l
 507+ 9C1C 30 1E        	jr nc,3F
 508+ 9C1E
 509+ 9C1E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C1E              ; B="0".
 511+ 9C1E
 512+ 9C1E 04           4 inc b
 513+ 9C1F 3C           	inc a
 514+ 9C20 20 FC        	jr nz,4B
 515+ 9C22 78           	ld a,b
 516+ 9C23 08           	ex af,af
 517+ 9C24 2A F1 88     	ld hl,(Indice_Sprite_izq)
 518+ 9C27 23           5 inc hl
 519+ 9C28 23           	inc hl
 520+ 9C29 10 FC        	djnz 5B
 521+ 9C2B 22 F5 88     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C2E CD FB 8C     	call Extrae_address
 523+ 9C31 22 E9 88     	ld (Puntero_objeto),hl
 524+ 9C34
 525+ 9C34              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C34              ; _(Posicion_actual).
 527+ 9C34
 528+ 9C34 21 E7 88     	ld hl,Posicion_actual
 529+ 9C37 35           	dec (hl)
 530+ 9C38 08           	ex af,af
 531+ 9C39 6F           	ld l,a
 532+ 9C3A 18 DD        	jr 6B
 533+ 9C3C
 534+ 9C3C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C3C
 536+ 9C3C 47           3 ld b,a
 537+ 9C3D 2A EF 88     	ld hl,(Indice_Sprite_der)
 538+ 9C40 23           2 inc hl
 539+ 9C41 23           	inc hl
 540+ 9C42 10 FC        	djnz 2B
 541+ 9C44 22 F3 88     	ld (Puntero_DESPLZ_der),hl
 542+ 9C47 C9           8 ret
 543+ 9C48
 544+ 9C48              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C48              ;
 546+ 9C48              ;	modifica_parametros_1er_DESPLZ
 547+ 9C48              ;
 548+ 9C48              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C48              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C48              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C48
 552+ 9C48 3A ED 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C4B A7           	and a
 554+ 9C4C 20 1E        	jr nz,1F
 555+ 9C4E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C4F 32 ED 88         ld (CTRL_DESPLZ),a
 557+ 9C52 21 E6 88     	ld hl,Columns
 558+ 9C55 34           	inc (hl)
 559+ 9C56 3A F9 88     	ld a,(Cuad_objeto)
 560+ 9C59 E6 01        	and 1
 561+ 9C5B 20 0F        	jr nz,1F
 562+ 9C5D 2A E7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C60 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C61 22 E7 88     	ld (Posicion_actual),hl
 565+ 9C64 CD 3D 9D     	call Genera_coordenadas
 566+ 9C67 CD C3 9C     	call Dec_CTRL_DESPLZ
 567+ 9C6A 18 03        	jr 2F
 568+ 9C6C CD C3 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C6F C9           2 ret
 570+ 9C70
 571+ 9C70              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C70
 573+ 9C70 3A ED 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C73 FE F7        	cp $f7
 575+ 9C75 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C77 30 2C        	jr nc,3F
 577+ 9C79
 578+ 9C79              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C79
 580+ 9C79 06 00        	ld b,0
 581+ 9C7B 04           4 inc b
 582+ 9C7C 3C           	inc a
 583+ 9C7D FE F7        	cp $f7
 584+ 9C7F 20 FA        	jr nz,4B
 585+ 9C81 3E FF        	ld a,$ff
 586+ 9C83 90           	sub b
 587+ 9C84 32 ED 88     	ld (CTRL_DESPLZ),a
 588+ 9C87 18 1C        	jr 3F
 589+ 9C89
 590+ 9C89              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C89
 592+ 9C89 21 E6 88     1 ld hl,Columns
 593+ 9C8C 35           	dec (hl)
 594+ 9C8D AF           	xor a
 595+ 9C8E 32 ED 88     	ld (CTRL_DESPLZ),a
 596+ 9C91 3A F9 88     	ld a,(Cuad_objeto)
 597+ 9C94 E6 01        	and 1
 598+ 9C96 28 0A        	jr z,2F
 599+ 9C98 2A E7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C9B 2B           	dec hl
 601+ 9C9C 22 E7 88     	ld (Posicion_actual),hl
 602+ 9C9F CD 3D 9D     	call Genera_coordenadas
 603+ 9CA2
 604+ 9CA2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CA2
 606+ 9CA2 CD 25 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CA5 C9           3 ret
 608+ 9CA6
 609+ 9CA6              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CA6              ;
 611+ 9CA6              ;	19/10/22
 612+ 9CA6              ;
 613+ 9CA6              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CA6              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CA6
 616+ 9CA6 3A EB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CA9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CAB C9           	ret
 619+ 9CAC
 620+ 9CAC              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CAC              ;
 622+ 9CAC              ;	19/10/22
 623+ 9CAC              ;
 624+ 9CAC              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CAC              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CAC
 627+ 9CAC 3A EB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CAF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CB1 C9           	ret
 630+ 9CB2
 631+ 9CB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CB2              ;
 633+ 9CB2              ;	24/7/22
 634+ 9CB2              ;
 635+ 9CB2              ;	Inc_CTRL_DESPLZ
 636+ 9CB2              ;
 637+ 9CB2              ;
 638+ 9CB2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CB2
 640+ 9CB2 21 ED 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CB5 3A FB 88     	ld a,(Vel_right)
 642+ 9CB8 A7           	and a
 643+ 9CB9 28 06        	jr z,1F
 644+ 9CBB 47           	ld b,a
 645+ 9CBC 34           3 inc (hl)
 646+ 9CBD 10 FD        	djnz 3B
 647+ 9CBF 18 01        	jr 2F
 648+ 9CC1 34           1 inc (hl)
 649+ 9CC2 C9           2 ret
 650+ 9CC3
 651+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CC3              ;
 653+ 9CC3              ;	5/2/23
 654+ 9CC3              ;
 655+ 9CC3              ;	Dec_CTRL_DESPLZ
 656+ 9CC3              ;
 657+ 9CC3              ;
 658+ 9CC3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CC3
 660+ 9CC3 21 ED 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CC6 3A FA 88     	ld a,(Vel_left)
 662+ 9CC9 A7           	and a
 663+ 9CCA 28 06        	jr z,1F
 664+ 9CCC 47           	ld b,a
 665+ 9CCD 35           3 dec (hl)
 666+ 9CCE 10 FD        	djnz 3B
 667+ 9CD0 18 01        	jr 2F
 668+ 9CD2 35           1 dec (hl)
 669+ 9CD3 C9           2 ret
 670+ 9CD4
 671+ 9CD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CD4
 673+ 9CD4 2A E7 88     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CD7 01 1F 00     	ld bc,31
 675+ 9CDA A7           	and a
 676+ 9CDB ED 4A        	adc hl,bc
 677+ 9CDD 22 E7 88     	ld (Posicion_actual),hl
 678+ 9CE0 21 13 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CE3 CB C6        	set 0,(hl)
 680+ 9CE5 C9           	ret
 681+ 9CE6
 682+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CE6
 684+ 9CE6 2A E7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CE9 01 1F 00     	ld bc,31
 686+ 9CEC A7           	and a
 687+ 9CED ED 42        	sbc hl,bc
 688+ 9CEF 22 E7 88     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CF2 21 13 89     	ld hl,Ctrl_0
 690+ 9CF5 CB CE        	set 1,(hl)
 691+ 9CF7 C9           	ret
 692+ 9CF8
 693+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9CF8
 695+ 9CF8 24           Reaparece_abajo inc h
 696+ 9CF9 01 E0 17     	ld bc,$17e0
 697+ 9CFC A7           	and a
 698+ 9CFD ED 4A        	adc hl,bc
 699+ 9CFF 22 E7 88     	ld (Posicion_actual),hl
 700+ 9D02 21 13 89     	ld hl,Ctrl_0
 701+ 9D05 CB D6        	set 2,(hl)
 702+ 9D07 C9           	ret
 703+ 9D08
 704+ 9D08              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D08
 706+ 9D08 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D0B A7           	and a
 708+ 9D0C ED 42        	sbc hl,bc
 709+ 9D0E 22 E7 88     	ld (Posicion_actual),hl
 710+ 9D11 21 13 89     	ld hl,Ctrl_0
 711+ 9D14 CB DE        	set 3,(hl)
 712+ 9D16 C9           	ret
 713+ 9D17
 714+ 9D17              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D17              ;
 716+ 9D17              ;	15/07/23
 717+ 9D17
 718+ 9D17              Reinicio
 719+ 9D17
 720+ 9D17              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D17
 722+ 9D17 AF           	xor a
 723+ 9D18 21 1A 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D1B CD 39 9D     	call Limpia_contenido_hl
 725+ 9D1E
 726+ 9D1E 21 E7 88     	ld hl,Posicion_actual
 727+ 9D21 CD 39 9D     	call Limpia_contenido_hl
 728+ 9D24
 729+ 9D24 CD 6B A0     	call Inicializa_Puntero_indice_mov
 730+ 9D27 CD F5 9F     	call Inicia_Puntero_mov
 731+ 9D2A
 732+ 9D2A 21 1C 89     	ld hl,Incrementa_puntero
 733+ 9D2D 06 05        	ld b,5
 734+ 9D2F 77           1 ld (hl),a
 735+ 9D30 23           	inc hl
 736+ 9D31 10 FC        	djnz 1B
 737+ 9D33
 738+ 9D33 21 26 89     	ld hl,Ctrl_2
 739+ 9D36 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D38
 741+ 9D38 C9           	ret
 742+ 9D39
 743+ 9D39 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D3A 23           	inc hl
 745+ 9D3B 77           	ld (hl),a
 746+ 9D3C C9           	ret
 747+ 9D3D
 748+ 9D3D
# file closed: Direcciones.asm
1573  9D3D              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D3D              ; ------------------------------------------------------------------------
   2+ 9D3D              ;
   3+ 9D3D              ;	02/04/23
   4+ 9D3D              ;
   5+ 9D3D              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D3D              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D3D              ;
   8+ 9D3D              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D3D              ;
  10+ 9D3D              ;	Modifica: A,BC y DE.
  11+ 9D3D
  12+ 9D3D C5           Genera_coordenadas push bc
  13+ 9D3E E5           	push hl
  14+ 9D3F D5           	push de
  15+ 9D40
  16+ 9D40 2A E7 88     	ld hl,(Posicion_actual)
  17+ 9D43
  18+ 9D43 7D           	ld a,l
  19+ 9D44 E6 1F        	and $1f
  20+ 9D46 32 EB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D49
  22+ 9D49 CD B2 99     	call calcula_tercio
  23+ 9D4C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D4D
  25+ 9D4D 1E 00        	ld e,0
  26+ 9D4F 7D           	ld a,l
  27+ 9D50 E6 E0        	and $e0
  28+ 9D52 28 01        	jr z,1F
  29+ 9D54 04           	inc b
  30+ 9D55
  31+ 9D55 04           1 inc b
  32+ 9D56 05           	dec b
  33+ 9D57 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D59              ;														; _ , salimos.
  35+ 9D59 1C           3 inc e
  36+ 9D5A D6 20        	sub 32
  37+ 9D5C 20 FB        	jr nz,3B
  38+ 9D5E 10 F5        	djnz 1B
  39+ 9D60
  40+ 9D60 7B           2 ld a,e
  41+ 9D61 32 EC 88     	ld (Coordenada_y),a
  42+ 9D64
  43+ 9D64 D1           	pop de
  44+ 9D65 E1           	pop hl
  45+ 9D66 C1           	pop bc
  46+ 9D67
  47+ 9D67 C9           	ret
  48+ 9D68
  49+ 9D68              ; ------------------------------------------------------------------------
  50+ 9D68              ;	28/05/23
  51+ 9D68              ;
  52+ 9D68              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D68              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D68              ;
  55+ 9D68              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D68              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D68              ;
  58+ 9D68              ;		DE="$120d"
  59+ 9D68              ;
  60+ 9D68              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D68              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D68              ;
  63+ 9D68              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D68
  65+ 9D68              ;	Modifica: A,BC y DE.
  66+ 9D68
  67+ 9D68
  68+ 9D68              Genera_coordenadas_disparo
  69+ 9D68
  70+ 9D68              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D68
  72+ 9D68 7D           	ld a,l
  73+ 9D69 E6 1F        	and $1f
  74+ 9D6B 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D6C CD B2 99     	call calcula_tercio
  76+ 9D6F 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D70 1E 00        	ld e,0
  78+ 9D72 7D           	ld a,l
  79+ 9D73 E6 E0        	and $e0
  80+ 9D75 28 01        	jr z,1F
  81+ 9D77 04           	inc b
  82+ 9D78 1C           1 inc e
  83+ 9D79 D6 20        	sub 32
  84+ 9D7B 20 FB        	jr nz,1B
  85+ 9D7D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D7F C9           	ret
  87+ 9D80
# file closed: Genera_coordenadas.asm
1574  9D80              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D80              ; Relojes y temporizaciones.
   2+ 9D80
   3+ 9D80              ; ------------------------------------------------------
   4+ 9D80              ;
   5+ 9D80              ;	16/7/23
   6+ 9D80              ;
   7+ 9D80              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D80              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D80              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D80              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D80              ;
  12+ 9D80              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D80              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D80
  15+ 9D80              ; Disparo_entidad db 1
  16+ 9D80              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D80              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D80
  19+ 9D80              Habilita_disparos
  20+ 9D80
  21+ 9D80 7E           	ld a,(hl)
  22+ 9D81 A7           	and a
  23+ 9D82 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D83
  25+ 9D83 EB           	ex de,hl
  26+ 9D84
  27+ 9D84 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D85 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D86
  30+ 9D86              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D86
  32+ 9D86 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D87 7E           	ld a,(hl)
  34+ 9D88 23           	inc hl
  35+ 9D89 77           	ld (hl),a
  36+ 9D8A
  37+ 9D8A EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D8B 3E 01        	ld a,1
  39+ 9D8D 77           	ld (hl),a
  40+ 9D8E C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1575  9D8F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D8F
   2+ 9D8F
   3+ 9D8F              ;   07/07/23
   4+ 9D8F              ;
   5+ 9D8F              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D8F              ;
   7+ 9D8F              ;   Codificación:
   8+ 9D8F              ;
   9+ 9D8F              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D8F              ;
  11+ 9D8F              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D8F              ;
  13+ 9D8F              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D8F              ;
  15+ 9D8F              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D8F              ;
  17+ 9D8F              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D8F              ;                               ..... %01000010 Vel_up 4
  19+ 9D8F              ;                                               Vel_down 2
  20+ 9D8F              ;                               ..... $42
  21+ 9D8F              ;
  22+ 9D8F              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D8F              ;
  24+ 9D8F              ;                               ..... %01000010 Vel_left 4
  25+ 9D8F              ;                                               Vel_right 2
  26+ 9D8F              ;                               ..... $42
  27+ 9D8F              ;
  28+ 9D8F              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D8F              ;
  30+ 9D8F              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D8F              ;
  32+ 9D8F              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D8F              ;
  34+ 9D8F              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D8F              ;                                     $53
  36+ 9D8F              ;
  37+ 9D8F              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D8F              ;
  39+ 9D8F              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D8F              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D8F              ;
  42+ 9D8F              ;                       Arriba ..... $81
  43+ 9D8F              ;                       Arriba - izquierda ..... $a1
  44+ 9D8F              ;                       Arriba - derecha ..... $91
  45+ 9D8F              ;
  46+ 9D8F              ;                       Abajo ..... $41
  47+ 9D8F              ;                       Abajo - izquierda ..... $61
  48+ 9D8F              ;                       Abajo - derecha ..... $51
  49+ 9D8F              ;
  50+ 9D8F              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D8F              ;
  52+ 9D8F              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D8F              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D8F              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D8F              ;
  56+ 9D8F              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D8F              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D8F              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D8F              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D8F              ;
  61+ 9D8F              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D8F              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D8F              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D8F              ;
  65+ 9D8F              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D8F              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D8F              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D8F              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D8F
  70+ 9D8F              ; ----- ----- ----- ----- -----
  71+ 9D8F
  72+ 9D8F BB 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D91 C3 9D            defw F_1
  74+ 9D93 CD 9D            defw F_2
  75+ 9D95 D7 9D            defw Codo_abajo_derecha
  76+ 9D97 0B 9E            defw Derecha_y_subiendo
  77+ 9D99 15 9E            defw Derecha_y_subiendo_1
  78+ 9D9B 1F 9E            defw F_3
  79+ 9D9D 29 9E            defw F_4
  80+ 9D9F 33 9E            defw Derecha_y_bajando
  81+ 9DA1 3D 9E            defw Derecha_y_bajando_1
  82+ 9DA3 47 9E            defw Derecha_y_bajando_2
  83+ 9DA5 51 9E            defw Codo_derecha_abajo
  84+ 9DA7 81 9E            defw Codo_abajo_izq.
  85+ 9DA9 B5 9E            defw Izquierda_y_subiendo
  86+ 9DAB BF 9E            defw Izquierda_y_subiendo_1
  87+ 9DAD C9 9E            defw F_5
  88+ 9DAF D3 9E            defw F_6
  89+ 9DB1 DD 9E            defw Izquierda_y_bajando
  90+ 9DB3 E7 9E            defw Izquierda_y_bajando_1
  91+ 9DB5 F1 9E            defw Izquierda_y_bajando_2
  92+ 9DB7 FB 9E            defw Codo_izquierda_abajo
  93+ 9DB9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DBB
  95+ 9DBB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DBF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DC3
  98+ 9DC3 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DC7 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DCB 08 00
 100+ 9DCD 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD1 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DD5 0F FE
 102+ 9DD7
 103+ 9DD7 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DDB 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DDF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DE3 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DE7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DEB 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DEF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DF3 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DF7 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DFB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DFF 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E03 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E07 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E0B
 117+ 9E0B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E0F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E13 06 00
 119+ 9E15
 120+ 9E15 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E19 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E1D 02 00
 122+ 9E1F
 123+ 9E1F 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E23 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E27 04 00
 125+ 9E29 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E2D 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E31 08 00
 127+ 9E33
 128+ 9E33 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E37 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E3B 02 00
 130+ 9E3D
 131+ 9E3D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E41 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E45 06 00
 133+ 9E47
 134+ 9E47 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E4B 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E4F 06 00
 136+ 9E51
 137+ 9E51              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E51
 139+ 9E51 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E55 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E59 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E5D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E61 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E65 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E6D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E71 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E75 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E79 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E7D 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E81
 152+ 9E81 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E85 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E89 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E8D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E91 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E95 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E99 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E9D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EA5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EAD 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EB5
 166+ 9EB5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EBD 06 00
 168+ 9EBF
 169+ 9EBF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EC3 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EC7 02 00
 171+ 9EC9
 172+ 9EC9 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ECD 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED1 04 00
 174+ 9ED3 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ED7 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EDB 08 00
 176+ 9EDD
 177+ 9EDD 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE1 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EE5 02 00
 179+ 9EE7
 180+ 9EE7 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EEB 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EEF 06 00
 182+ 9EF1
 183+ 9EF1 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EF5 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF9 06 00
 185+ 9EFB
 186+ 9EFB 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EFF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F03 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F07 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F0B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F0F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F13 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F17 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F1B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F1F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F23 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F27 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F2B
 199+ 9F2B              ; ----- ----- ----- ----- -----
 200+ 9F2B              ;
 201+ 9F2B              ;   27/06/23
 202+ 9F2B
 203+ 9F2B              Movimiento
 204+ 9F2B
 205+ 9F2B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F2B
 207+ 9F2B              ;    ld hl,(Posicion_actual)
 208+ 9F2B
 209+ 9F2B FB               ei
 210+ 9F2C
 211+ 9F2C 3A 26 89         ld a,(Ctrl_2)
 212+ 9F2F CB 57            bit 2,a
 213+ 9F31 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F33
 215+ 9F33 2A 18 89         ld hl,(Puntero_mov)
 216+ 9F36 7E               ld a,(hl)
 217+ 9F37
 218+ 9F37              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F37
 220+ 9F37              Inicia_desplazamiento.
 221+ 9F37
 222+ 9F37              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F37
 224+ 9F37 CD 2C A0         call Ajusta_velocidad_desplazamiento
 225+ 9F3A
 226+ 9F3A              ; Iniciamos (Repetimos_mov).
 227+ 9F3A
 228+ 9F3A 7E               ld a,(hl)
 229+ 9F3B E6 0F            and $0f
 230+ 9F3D 32 1E 89         ld (Repetimos_desplazamiento),a
 231+ 9F40 32 1F 89         ld (Repetimos_desplazamiento_backup),a
 232+ 9F43
 233+ 9F43              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F43
 235+ 9F43 23               inc hl
 236+ 9F44 7E               ld a,(hl)
 237+ 9F45 32 21 89         ld (Cola_de_desplazamiento),a
 238+ 9F48 2B               dec hl
 239+ 9F49
 240+ 9F49 21 26 89         ld hl,Ctrl_2
 241+ 9F4C CB D6            set 2,(hl)
 242+ 9F4E
 243+ 9F4E              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F4E              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F4E
 246+ 9F4E              Desplazamiento_iniciado
 247+ 9F4E
 248+ 9F4E CD 00 A0         call Aplica_desplazamiento
 249+ 9F51
 250+ 9F51 3A 26 89         ld a,(Ctrl_2)
 251+ 9F54 CB 67            bit 4,a
 252+ 9F56 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F57
 254+ 9F57 21 1E 89     3 ld hl,Repetimos_desplazamiento
 255+ 9F5A 35               dec (hl)
 256+ 9F5B C0               ret nz
 257+ 9F5C
 258+ 9F5C              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F5C              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F5C              ; Analiza (Cola_de_desplazamiento).
 261+ 9F5C
 262+ 9F5C 3A 21 89     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F5F A7               and a
 264+ 9F60 CC 55 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F63 28 30            jr z,Reinicia_el_movimiento
 266+ 9F65
 267+ 9F65 FE FF            cp $ff
 268+ 9F67 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F69
 270+ 9F69 FE FE            cp $fe
 271+ 9F6B CC D9 9F         call z,Fijamos_bucle
 272+ 9F6E 28 25            jr z,Reinicia_el_movimiento
 273+ 9F70
 274+ 9F70 FE FD            cp $fd
 275+ 9F72 20 11            jr nz,1F
 276+ 9F74
 277+ 9F74              ; ---
 278+ 9F74              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F74
 280+ 9F74 3A 26 89         ld a,(Ctrl_2)
 281+ 9F77 CB 5F            bit 3,a
 282+ 9F79 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F7B
 284+ 9F7B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F7B
 286+ 9F7B 21 26 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F7E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F80
 289+ 9F80 CD EA 9F         call Inicia_Repetimos_movimiento
 290+ 9F83 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F85              ; ---
 292+ 9F85
 293+ 9F85 FE 01        1 cp 1
 294+ 9F87 CA C3 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F8A
 296+ 9F8A 3D               dec a
 297+ 9F8B 32 21 89         ld (Cola_de_desplazamiento),a
 298+ 9F8E
 299+ 9F8E 3A 1F 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F91 32 1E 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F94              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F94 C9               ret
 303+ 9F95
 304+ 9F95              Reinicia_el_movimiento
 305+ 9F95
 306+ 9F95 F3               di
 307+ 9F96
 308+ 9F96 3A 26 89         ld a,(Ctrl_2)
 309+ 9F99 CB 5F            bit 3,a
 310+ 9F9B 28 1B            jr z,2F
 311+ 9F9D
 312+ 9F9D              ; (Cola_de_desplazamiento)="254".
 313+ 9F9D
 314+ 9F9D 21 20 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FA0 35               dec (hl)
 316+ 9FA1 20 15            jr nz,2F
 317+ 9FA3
 318+ 9FA3              ; Fin de las repeticiones del último movimiento.
 319+ 9FA3
 320+ 9FA3 21 26 89         ld hl,Ctrl_2
 321+ 9FA6 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FA8
 323+ 9FA8 2A 18 89         ld hl,(Puntero_mov)
 324+ 9FAB 23               inc hl
 325+ 9FAC 23               inc hl
 326+ 9FAD 23               inc hl
 327+ 9FAE 22 18 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FB1              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FB1 7E               ld a,(hl)
 330+ 9FB2 32 21 89         ld (Cola_de_desplazamiento),a
 331+ 9FB5
 332+ 9FB5 C3 5C 9F         jp Cola
 333+ 9FB8
 334+ 9FB8 CD F5 9F     2 call Inicia_Puntero_mov
 335+ 9FBB
 336+ 9FBB 21 26 89         ld hl,Ctrl_2
 337+ 9FBE CB 96            res 2,(hl)
 338+ 9FC0
 339+ 9FC0 C3 2B 9F         jp Movimiento
 340+ 9FC3
 341+ 9FC3              Siguiente_desplazamiento
 342+ 9FC3
 343+ 9FC3              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FC3              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FC3
 346+ 9FC3 21 26 89         ld hl,Ctrl_2
 347+ 9FC6 CB 96            res 2,(hl)
 348+ 9FC8
 349+ 9FC8 2A 18 89         ld hl,(Puntero_mov)
 350+ 9FCB 23               inc hl
 351+ 9FCC 23               inc hl
 352+ 9FCD 22 18 89         ld (Puntero_mov),hl
 353+ 9FD0
 354+ 9FD0 7E               ld a,(hl)
 355+ 9FD1 A7               and a
 356+ 9FD2 CC 55 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FD5 CA 95 9F         jp z,Reinicia_el_movimiento
 358+ 9FD8
 359+ 9FD8 C9               ret
 360+ 9FD9              ; Subrutinas -----------------------------------------
 361+ 9FD9              ; ---------- --------- --------- ---------- ----------
 362+ 9FD9              ;
 363+ 9FD9              ;   24/07/23
 364+ 9FD9              ;
 365+ 9FD9              ;   Fijamos_bucle
 366+ 9FD9              ;
 367+ 9FD9              ;
 368+ 9FD9
 369+ 9FD9              Fijamos_bucle
 370+ 9FD9
 371+ 9FD9 3A 1C 89         ld a,(Incrementa_puntero)
 372+ 9FDC 3C               inc a
 373+ 9FDD 32 1D 89         ld (Incrementa_puntero_backup),a
 374+ 9FE0
 375+ 9FE0 CD 55 A0         call Incrementa_Puntero_indice_mov
 376+ 9FE3 2A 16 89         ld hl,(Puntero_indice_mov)
 377+ 9FE6 22 1A 89         ld (Puntero_indice_mov_bucle),hl
 378+ 9FE9 C9               ret
 379+ 9FEA
 380+ 9FEA              ; ---------- --------- --------- ---------- ----------
 381+ 9FEA              ;
 382+ 9FEA              ;   07/7/23
 383+ 9FEA              ;
 384+ 9FEA              ;   Inicia_Repetimos_movimiento
 385+ 9FEA              ;
 386+ 9FEA              ;
 387+ 9FEA
 388+ 9FEA              Inicia_Repetimos_movimiento
 389+ 9FEA
 390+ 9FEA              ; Iniciamos (Repetimos_movimiento).
 391+ 9FEA
 392+ 9FEA DD 2A 18 89      ld ix,(Puntero_mov)
 393+ 9FEE DD 7E 02         ld a,(ix+2)
 394+ 9FF1 32 20 89         ld (Repetimos_movimiento),a
 395+ 9FF4
 396+ 9FF4 C9               ret
 397+ 9FF5
 398+ 9FF5              ; ---------- --------- --------- ---------- ----------
 399+ 9FF5              ;
 400+ 9FF5              ;   26/6/23
 401+ 9FF5              ;
 402+ 9FF5              ;   Inicia_Puntero_mov
 403+ 9FF5              ;
 404+ 9FF5              ;
 405+ 9FF5
 406+ 9FF5 2A 16 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FF8 5E               ld e,(hl)
 408+ 9FF9 23               inc hl
 409+ 9FFA 56               ld d,(hl)
 410+ 9FFB EB               ex de,hl
 411+ 9FFC 22 18 89         ld (Puntero_mov),hl
 412+ 9FFF C9               ret
 413+ A000
 414+ A000              ; ---------- --------- --------- ---------- ----------
 415+ A000              ;
 416+ A000              ;   27/06/23
 417+ A000              ;
 418+ A000              ;   Aplica_movimiento.
 419+ A000
 420+ A000              Aplica_desplazamiento
 421+ A000
 422+ A000              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ A000
 424+ A000 2A 18 89         ld hl, (Puntero_mov)
 425+ A003
 426+ A003 7E               ld a,(hl)
 427+ A004 E6 F0            and $f0
 428+ A006 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ A007
 430+ A007 CB 7E            bit 7,(hl)
 431+ A009 28 03            jr z,1F
 432+ A00B CD 29 9A         call Mov_up
 433+ A00E 2A 18 89     1 ld hl, (Puntero_mov)
 434+ A011 CB 76            bit 6,(hl)
 435+ A013 28 03            jr z,2F
 436+ A015 CD F8 99         call Mov_down
 437+ A018 2A 18 89     2 ld hl, (Puntero_mov)
 438+ A01B CB 6E            bit 5,(hl)
 439+ A01D 28 03            jr z,3F
 440+ A01F CD 8A 9B         call Mov_left
 441+ A022 2A 18 89     3 ld hl, (Puntero_mov)
 442+ A025 CB 66            bit 4,(hl)
 443+ A027 C8               ret z
 444+ A028 CD 6C 9A         call Mov_right
 445+ A02B C9               ret
 446+ A02C
 447+ A02C              ; ---------- --------- --------- ---------- ----------
 448+ A02C              ;
 449+ A02C              ;   26/06/23
 450+ A02C              ;
 451+ A02C              ;   Ajusta_velocidad_desplazamiento.
 452+ A02C
 453+ A02C              Ajusta_velocidad_desplazamiento
 454+ A02C
 455+ A02C              ; 1er byte de la cadena de movimiento.
 456+ A02C              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A02C
 458+ A02C CD 4A A0         call Extrae_nibble_alto
 459+ A02F
 460+ A02F 32 FC 88         ld (Vel_up),a
 461+ A032 79               ld a,c
 462+ A033 E6 0F            and $0f
 463+ A035 32 FD 88         ld (Vel_down),a
 464+ A038
 465+ A038              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A038              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A038
 468+ A038 23               inc hl
 469+ A039 CD 4A A0         call Extrae_nibble_alto
 470+ A03C
 471+ A03C 32 FA 88         ld (Vel_left),a
 472+ A03F 79               ld a,c
 473+ A040 E6 0F            and $0f
 474+ A042 32 FB 88         ld (Vel_right),a
 475+ A045
 476+ A045              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A045
 478+ A045 23               inc hl
 479+ A046 22 18 89         ld (Puntero_mov),hl
 480+ A049 C9               ret
 481+ A04A
 482+ A04A 06 04        Extrae_nibble_alto ld b,4
 483+ A04C 7E               ld a,(hl)
 484+ A04D 4F               ld c,a
 485+ A04E E6 F0            and $f0
 486+ A050 CB 3F        1 srl a
 487+ A052 10 FC            djnz 1B
 488+ A054 C9               ret
 489+ A055
 490+ A055              ; ---------- --------- --------- ---------- ----------
 491+ A055              ;
 492+ A055              ;   5/7/23
 493+ A055              ;
 494+ A055              ;   Incrementa_Puntero_indice_mov
 495+ A055
 496+ A055              Incrementa_Puntero_indice_mov
 497+ A055
 498+ A055 21 1C 89         ld hl,Incrementa_puntero
 499+ A058 34               inc (hl)
 500+ A059
 501+ A059 2A 16 89         ld hl,(Puntero_indice_mov)
 502+ A05C 01 02 00         ld bc,2
 503+ A05F A7               and a
 504+ A060 09               add hl,bc
 505+ A061 22 16 89         ld (Puntero_indice_mov),hl
 506+ A064
 507+ A064 7E               ld a,(hl)
 508+ A065 A7               and a
 509+ A066
 510+ A066              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A066
 512+ A066              ;    jr z,$
 513+ A066
 514+ A066              ;! Reinicia el Patrón de movimiento.
 515+ A066
 516+ A066 CC 6B A0         call z,Inicializa_Puntero_indice_mov
 517+ A069
 518+ A069 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A06A
 520+ A06A C9               ret
 521+ A06B
 522+ A06B
 523+ A06B              ; ---------- --------- --------- ---------- ----------
 524+ A06B              ;
 525+ A06B              ;   24/07/23
 526+ A06B              ;
 527+ A06B              ;   Inicializa_Puntero_indice_mov
 528+ A06B
 529+ A06B              Inicializa_Puntero_indice_mov
 530+ A06B
 531+ A06B              ; Existe etiqueta de bucle principal???
 532+ A06B
 533+ A06B 2A 1A 89         ld hl,(Puntero_indice_mov_bucle)
 534+ A06E 24               inc h
 535+ A06F 25               dec h
 536+ A070 28 05            jr z,2F
 537+ A072
 538+ A072 22 16 89         ld (Puntero_indice_mov),hl
 539+ A075 18 14            jr 3F
 540+ A077
 541+ A077              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A077
 543+ A077 3A 1C 89     2 ld a,(Incrementa_puntero)
 544+ A07A 47               ld b,a
 545+ A07B
 546+ A07B 2A 16 89         ld hl,(Puntero_indice_mov)
 547+ A07E 2B           1 dec hl
 548+ A07F 2B               dec hl
 549+ A080 10 FC            djnz 1B
 550+ A082 22 16 89         ld (Puntero_indice_mov),hl
 551+ A085
 552+ A085 AF               xor a
 553+ A086 32 1C 89         ld (Incrementa_puntero),a
 554+ A089 18 06            jr 4F
 555+ A08B
 556+ A08B 3A 1D 89     3 ld a,(Incrementa_puntero_backup)
 557+ A08E 32 1C 89         ld (Incrementa_puntero),a
 558+ A091 C9           4 ret
 559+ A092
 560+ A092
 561+ A092
# file closed: Patrones_de_mov.asm
1576  A092              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A092              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A092              ;
   3+ A092              ;	4/9/23
   4+ A092              ;
   5+ A092              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A092
   7+ A092              ;	ADC HL,SP	LD (addr),SP
   8+ A092              ;	ADD HL,SP	LD SP,(addr)
   9+ A092              ;	ADD IX,SP	LD SP,nn
  10+ A092              ; 	ADD IY,SP	LD SP,HL
  11+ A092              ;				LD SP,IX
  12+ A092              ;	DEC SP		LD SP,IY
  13+ A092
  14+ A092              ;	EX (SP),HL
  15+ A092              ;	EX (SP),IX
  16+ A092              ;	EX (SP),IY
  17+ A092
  18+ A092              ;	INC SP
  19+ A092
  20+ A092                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 39 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 28 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 41 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A 13 89     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 21 A0 72         ld hl,Album_de_fotos_Amadeus
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 3F 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 28 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 41 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 12            jr 6F
  75+ 7FDD
  76+ 7FDD 3A 13 89     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 08            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 47 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 39 89      ld sp,(Stack)
  82+ 7FEB C9               ret
  83+ 7FEC
  84+ 7FEC 22 3F 89     8 ld (Stack_snapshot),hl
  85+ 7FEF ED 7B 39 89  6 ld sp,(Stack)
  86+ 7FF3
  87+ 7FF3              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  88+ 7FF3
  89+ 7FF3 5D               ld e,l
  90+ 7FF4 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  91+ 7FF5
  92+ 7FF5 2A 5D 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  93+ 7FF8 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  94+ 7FF9 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  95+ 7FFA 72               ld (hl),d                                     ; _ álbum a otro.
  96+ 7FFB
  97+ 7FFB FB               ei
  98+ 7FFC
  99+ 7FFC C9               ret
 100+ 7FFD
 101+ 7FFD              ; ------------------------------------------------
 102+ 7FFD              ;
 103+ 7FFD              ;   3/08/23
 104+ 7FFD              ;
 105+ 7FFD              ;   La rutina estará situada justo después de:
 106+ 7FFD              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 107+ 7FFD              ;
 108+ 7FFD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFD
 111+ 7FFD                  org $72ad
 112+ 72AD
 113+ 72AD              Gestiona_albumes_de_fotos
 114+ 72AD
 115+ 72AD              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72AD              ;   Vaciamos Album_de_fotos.
 117+ 72AD
 118+ 72AD              ;   Album_de_fotos. Contiene datos ???
 119+ 72AD
 120+ 72AD 21 01 70         ld hl,Album_de_fotos+1
 121+ 72B0 7E               ld a,(hl)
 122+ 72B1 A7               and a
 123+ 72B2 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72B4
 125+ 72B4 2A 43 89         ld hl,(End_Snapshot)
 126+ 72B7 01 00 70         ld bc,Album_de_fotos
 127+ 72BA 11 01 70         ld de,Album_de_fotos+1
 128+ 72BD AF               xor a
 129+ 72BE 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72BF
 131+ 72BF CD 4F 73         call Limpia_album
 132+ 72C2
 133+ 72C2 21 00 00         ld hl,0
 134+ 72C5 22 43 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72C8
 136+ 72C8              ; ----- ----- ----- -----
 137+ 72C8
 138+ 72C8              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72C8
 140+ 72C8 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72CB 7E               ld a,(hl)
 142+ 72CC A7               and a
 143+ 72CD 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72CF              ;                               ; _ información del album2 al album1.
 145+ 72CF
 146+ 72CF              ; ----- ----- ----- -----
 147+ 72CF              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72CF
 149+ 72CF 2A 49 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D2 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72D5 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72D8
 153+ 72D8 CD 4F 73         call Limpia_album
 154+ 72DB
 155+ 72DB              ;   Calculamos (End_Snapshot)
 156+ 72DB
 157+ 72DB A7               and a
 158+ 72DC ED 4A            adc hl,bc
 159+ 72DE 22 43 89         ld (End_Snapshot),hl
 160+ 72E1
 161+ 72E1              ;   Limpiamos Album_de_fotos_1.
 162+ 72E1
 163+ 72E1 2A 49 89         ld hl,(End_Snapshot_1)
 164+ 72E4 01 54 70         ld bc,Album_de_fotos_1
 165+ 72E7 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72EA AF               xor a
 167+ 72EB 02               ld (bc),a
 168+ 72EC
 169+ 72EC CD 4F 73         call Limpia_album
 170+ 72EF
 171+ 72EF 21 00 00         ld hl,0
 172+ 72F2 22 49 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72F5
 174+ 72F5              ; ----- ----- ----- -----
 175+ 72F5
 176+ 72F5              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72F5
 178+ 72F5 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72F8 7E               ld a,(hl)
 180+ 72F9 A7               and a
 181+ 72FA 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 72FC              ;                               ; _ información del album3 al album2.
 183+ 72FC              ; ----- ----- ----- -----
 184+ 72FC              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 72FC
 186+ 72FC 2A 4D 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 72FF 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7302 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 7305
 190+ 7305 CD 4F 73         call Limpia_album
 191+ 7308
 192+ 7308              ;   Calculamos (End_Snapshot_1):
 193+ 7308
 194+ 7308 A7               and a
 195+ 7309 ED 4A            adc hl,bc
 196+ 730B 22 49 89         ld (End_Snapshot_1),hl
 197+ 730E
 198+ 730E              ;   Limpiamos Album_de_fotos_2.
 199+ 730E
 200+ 730E 2A 4D 89         ld hl,(End_Snapshot_2)
 201+ 7311 01 A8 70         ld bc,Album_de_fotos_2
 202+ 7314 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 7317 AF               xor a
 204+ 7318 02               ld (bc),a
 205+ 7319
 206+ 7319 CD 4F 73         call Limpia_album
 207+ 731C
 208+ 731C 21 00 00         ld hl,0
 209+ 731F 22 4D 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7322
 211+ 7322              ; ----- ----- ----- -----
 212+ 7322
 213+ 7322              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7322
 215+ 7322 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 7325 7E               ld a,(hl)
 217+ 7326 A7               and a
 218+ 7327 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 7328
 220+ 7328              ; ----- ----- ----- -----
 221+ 7328              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 7328
 223+ 7328 2A 51 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 732B 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 732E 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7331
 227+ 7331 CD 4F 73         call Limpia_album
 228+ 7334
 229+ 7334              ;   Calculamos (End_Snapshot_2):
 230+ 7334
 231+ 7334 A7               and a
 232+ 7335 ED 4A            adc hl,bc
 233+ 7337 22 4D 89         ld (End_Snapshot_2),hl
 234+ 733A
 235+ 733A              ;   Limpiamos Album_de_fotos_3.
 236+ 733A
 237+ 733A 2A 51 89         ld hl,(End_Snapshot_3)
 238+ 733D 01 FC 70         ld bc,Album_de_fotos_3
 239+ 7340 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7343 AF               xor a
 241+ 7344 02               ld (bc),a
 242+ 7345
 243+ 7345 CD 4F 73         call Limpia_album
 244+ 7348
 245+ 7348 21 00 00         ld hl,0
 246+ 734B 22 51 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 734E C9               ret
 248+ 734F
 249+ 734F              ; ----------------------------------------------------
 250+ 734F              ;
 251+ 734F              ;   10/8/23
 252+ 734F              ;
 253+ 734F              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 734F              ;
 255+ 734F              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 734F              ;           BC ..... Dirección de inicio del álbum.
 257+ 734F              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 734F
 259+ 734F              ;    ld hl,(End_Snapshot)
 260+ 734F              ;    ld bc,Album_de_fotos
 261+ 734F              ;    ld de,Album_de_fotos+1
 262+ 734F
 263+ 734F              ;   MODIFICA: A,HL,BC y DE.
 264+ 734F
 265+ 734F              Limpia_album
 266+ 734F D5               push de            ; Guardo DESTINO.
 267+ 7350 C5               push bc            ; Guardo ORIGEN.
 268+ 7351 ED 42            sbc hl,bc
 269+ 7353 4D               ld c,l
 270+ 7354 44               ld b,h
 271+ 7355 E1               pop hl
 272+ 7356 C5               push bc
 273+ 7357 ED B0            ldir
 274+ 7359 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 735A E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 735B C9               ret                         ; _ a otro).
 277+ 735C              ;
 278+ 735C
 279+ 735C              ; -----------------------------------------------
 280+ 735C
 281+ 735C
 282+ 735C
 283+ 735C
 284+ 735C
# file closed: Guarda_foto_registros.asm
1577  735C
1578  735C              	SAVESNA "Pruebas.sna", START
1579  735C
1580  735C
1581  735C
1582  735C
# file closed: Banco_de_pruebas.asm
