# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 23 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 9B 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 48 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD C7 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 46 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 46 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 49 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD D7 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7C 83        	defw Disparo_f9
  13+ 8374 80 83        	defw Disparo_fb
  14+ 8376 84 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  19+ 837C              ; Disparo (CTRL_DESPLZ)="f9"
  20+ 837C 00 60        Disparo_f9 DEFB $00,$60
  21+ 837E 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  22+ 8380              ; Disparo (CTRL_DESPLZ)="fb"
  23+ 8380 18 00        Disparo_fb DEFB $18,$00
  24+ 8382 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  25+ 8384              ; Disparo (CTRL_DESPLZ)="fd"
  26+ 8384 06 00        Disparo_fd DEFB $06,$00
  27+ 8386 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  28+ 8388
  29+ 8388              ; ----------------------------------------------------------------------------------------
  30+ 8388
  31+ 8388              ; Badsat_izq. 2x2.
  32+ 8388
  33+ 8388 98 83        Indice_Badsat_izq defw Badsat_izquierda
  34+ 838A 00 85        	defw Badsat_izq_fe
  35+ 838C C0 84        	defw Badsat_izq_fd
  36+ 838E 90 84        	defw Badsat_izq_fc
  37+ 8390 60 84        	defw Badsat_izq_fb
  38+ 8392 30 84        	defw Badsat_izq_fa
  39+ 8394 00 84        	defw Badsat_izq_f9
  40+ 8396 C8 83        	defw Badsat_izq_f8
  41+ 8398
  42+ 8398 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  43+ 839B 02 14 00     	DEFB 	$02,$14,$00
  44+ 839E 02 2A 00     	DEFB 	$02,$2A,$00
  45+ 83A1 02 55 00     	DEFB 	$02,$55,$00
  46+ 83A4 02 AA 00     	DEFB	$02,$AA,$00
  47+ 83A7 02 54 00     	DEFB 	$02,$54,$00
  48+ 83AA 7F E8 00     	DEFB 	$7F,$E8,$00
  49+ 83AD 03 60 00     	DEFB 	$03,$60,$00
  50+ 83B0 0A E0 00     	DEFB	$0A,$E0,$00
  51+ 83B3 17 F8 00     	DEFB 	$17,$F8,$00
  52+ 83B6 2B E8 00     	DEFB 	$2B,$E8,$00
  53+ 83B9 54 40 00     	DEFB 	$54,$40,$00
  54+ 83BC AA 60 00     	DEFB	$AA,$60,$00
  55+ 83BF 54 00 00     	DEFB 	$54,$00,$00
  56+ 83C2 28 00 00     	DEFB 	$28,$00,$00
  57+ 83C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  58+ 83C8
  59+ 83C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  59+ 83CC 0A 00 01 15
  60+ 83D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  60+ 83D4 01 55 00 01
  61+ 83D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  61+ 83DC 00 01 B0 00
  62+ 83E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  62+ 83E4 FC 00 15 F4
  63+ 83E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  63+ 83EC 55 30 00 2A
  64+ 83F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  64+ 83F4 00 08 00 00
  65+ 83F8
  66+ 83F8              	org $8400
  67+ 8400
  68+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  68+ 8404 85 00 00 8A
  69+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  69+ 840C 00 AA 80 00
  70+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  70+ 8414 00 00 D8 00
  71+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  71+ 841C FE 00 0A FA
  72+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  72+ 8424 2A 98 00 15
  73+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  73+ 842C 00 04 00 00
  74+ 8430
  75+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  75+ 8434 42 80 00 45
  76+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  76+ 843C 00 55 40 00
  77+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  77+ 8444 00 00 6C 00
  78+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  78+ 844C FF 00 05 7D
  79+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  79+ 8454 15 4C 00 0A
  80+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  80+ 845C 00 02 00 00
  81+ 8460
  82+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  82+ 8464 21 40 00 22
  83+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  83+ 846C 00 2A A0 00
  84+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  84+ 8474 80 00 36 00
  85+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  85+ 847C 7F 80 02 BE
  86+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  86+ 8484 0A A6 00 05
  87+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  87+ 848C 00 01 00 00
  88+ 8490
  89+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  89+ 8494 10 A0 00 11
  90+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  90+ 849C 00 15 50 00
  91+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  91+ 84A4 40 00 1B 00
  92+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  92+ 84AC BF C0 01 5F
  93+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  93+ 84B4 05 53 00 02
  94+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  94+ 84BC 00 00 80 00
  95+ 84C0
  96+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  96+ 84C4 08 50 00 08
  97+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  97+ 84CC 00 0A A8 00
  98+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  98+ 84D4 A0 00 0D 80
  99+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  99+ 84DC 5F F8 00 AF
 100+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 100+ 84E4 02 A9 00 01
 101+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 101+ 84EC 00 00 40 00
 102+ 84F0
 103+ 84F0              	org $8500
 104+ 8500
 105+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 105+ 8504 04 28 00 04
 106+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 106+ 850C 00 05 54 00
 107+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 107+ 8514 D0 00 06 C0
 108+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 108+ 851C 2F FC 00 57
 109+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 109+ 8524 01 54 80 00
 110+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 110+ 852C 00 00 20 00
 111+ 8530
 112+ 8530
 113+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 114+ 8532 70 85        	defw Badsat_der_f8
 115+ 8534 A0 85        	defw Badsat_der_f9
 116+ 8536 D0 85        	defw Badsat_der_fa
 117+ 8538 00 86        	defw Badsat_der_fb
 118+ 853A 30 86        	defw Badsat_der_fc
 119+ 853C 60 86        	defw Badsat_der_fd
 120+ 853E 90 86        	defw Badsat_der_fe
 121+ 8540
 122+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 123+ 8543 28 40 00     	DEFB    $28,$40,$00
 124+ 8546 54 40 00     	DEFB	$54,$40,$00
 125+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 126+ 854C 55 40 00     	DEFB	$55,$40,$00
 127+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 128+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 129+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 130+ 8558 07 50 00     	DEFB	$07,$50,$00
 131+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 132+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 133+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 134+ 8564 06 55 00     	DEFB	$06,$55,$00
 135+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 136+ 856A 00 14 00     	DEFB	$00,$14,$00
 137+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 138+ 8570
 139+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 139+ 8574 20 00 2A 20
 140+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 140+ 857C 2A A0 00 15
 141+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 141+ 8584 00 03 60 00
 142+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 142+ 858C F4 00 0B EA
 143+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 143+ 8594 03 2A 80 00
 144+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 144+ 859C 00 00 04 00
 145+ 85A0
 146+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 146+ 85A4 10 00 15 10
 147+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 147+ 85AC 15 50 00 0A
 148+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 148+ 85B4 80 01 B0 00
 149+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 149+ 85BC FA 00 05 F5
 150+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 150+ 85C4 01 95 40 00
 151+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 151+ 85CC 00 00 02 00
 152+ 85D0
 153+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 153+ 85D4 08 00 0A 88
 154+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 154+ 85DC 0A A8 00 05
 155+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 155+ 85E4 C0 00 D8 00
 156+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 156+ 85EC FD 00 02 FA
 157+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 157+ 85F4 00 CA A0 00
 158+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 158+ 85FC 80 00 01 00
 159+ 8600
 160+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 160+ 8604 84 00 05 44
 161+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 161+ 860C 05 54 00 02
 162+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 162+ 8614 E0 00 6C 00
 163+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 163+ 861C FE 80 01 7D
 164+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 164+ 8624 00 65 50 00
 165+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 165+ 862C 40 00 00 80
 166+ 8630
 167+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8634 42 00 02 A2
 168+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 863C 02 AA 00 01
 169+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8644 F0 00 36 00
 170+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 864C FF 40 00 BE
 171+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8654 00 32 A8 00
 172+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 865C A0 00 00 40
 173+ 8660
 174+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8664 A1 00 01 51
 175+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 866C 01 55 00 00
 176+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8674 F8 00 1B 00
 177+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 867C FF A0 00 1F
 178+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8684 00 09 54 00
 179+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 868C 50 00 00 20
 180+ 8690
 181+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8694 50 80 00 A8
 182+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 869C 00 AA 80 00
 183+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 86A4 FC 00 0D 80
 184+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 86AC FF D0 00 0F
 185+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 86B4 00 04 AA 00
 186+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 86BC 28 00 00 10
 187+ 86C0
 188+ 86C0              ; ----------------------------------------------------------------------------------------
 189+ 86C0
 190+ 86C0              ; Amadeus. 2x2.
 191+ 86C0
 192+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 193+ 86C2 00 00        	defw 0
 194+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 195+ 86C6 00 00        	defw 0
 196+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 197+ 86CA 00 00        	defw 0
 198+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 199+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 200+ 86D0
 201+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 202+ 86D2 00 00        	defw 0
 203+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 204+ 86D6 00 00        	defw 0
 205+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 206+ 86DA 00 00        	defw 0
 207+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 208+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 209+ 86E0
 210+ 86E0              	org $8700
 211+ 8700
 212+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 213+ 8703 23 C4 00     	DEFB	$23,$C4,0
 214+ 8706 26 64 00     	DEFB	$26,$64,0
 215+ 8709 24 24 00     	DEFB	$24,$24,0
 216+ 870C 2C 34 00     	DEFB	$2C,$34,0
 217+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 218+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 219+ 8715 67 E6 00     	DEFB	$67,$E6,0
 220+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 222+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 223+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 224+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 225+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 226+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 227+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 8730
 229+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 229+ 8734 F1 00 09 99
 230+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 230+ 873C 0B 0D 00 1B
 231+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 231+ 8744 80 19 F9 80
 232+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 232+ 874C F3 C0 3D FB
 233+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 233+ 8754 3E F7 C0 3E
 234+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 234+ 875C 40 1C 63 80
 235+ 8760
 236+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 236+ 8764 3C 40 02 66
 237+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 237+ 876C 02 C3 40 06
 238+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 238+ 8774 60 06 7E 60
 239+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 239+ 877C 3C F0 0F 7E
 240+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 240+ 8784 0F BD F0 0F
 241+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 241+ 878C 10 07 18 E0
 242+ 8790
 243+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 243+ 8794 8F 10 00 99
 244+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 244+ 879C 00 B0 D0 01
 245+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 245+ 87A4 D8 01 9F 98
 246+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 246+ 87AC CF 3C 03 DF
 247+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 247+ 87B4 03 EF 7C 03
 248+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 248+ 87BC 44 01 C6 38
 249+ 87C0
 250+ 87C0              ; ----------------------------------------------------------------------------------------
 251+ 87C0
 252+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 253+ 87C2 00 88        	defw Explosion_entidades_2
 254+ 87C4 30 88        	defw Explosion_entidades_3
 255+ 87C6
 256+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 257+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 258+ 87CC 04 38 40     	DEFB	$04,$38,$40
 259+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 260+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 261+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 262+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 263+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 264+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 265+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 266+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 267+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 268+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 269+ 87ED 03 00 40     	DEFB	$03,$00,$40
 270+ 87F0 04 00 00     	DEFB	$04,$00,$00
 271+ 87F3 08 00 00     	DEFB	$08,$00,$00
 272+ 87F6
 273+ 87F6              	org $8800
 274+ 8800
 275+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 275+ 8804 38 10 03 BC
 276+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 276+ 880C 04 06 C0 00
 277+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 277+ 8814 00 03 DD 80
 278+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 278+ 881C 3A 70 01 9C
 279+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 279+ 8824 04 F8 80 06
 280+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 280+ 882C 00 00 00 00
 281+ 8830
 282+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 282+ 8834 00 20 08 00
 283+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 283+ 883C 00 06 00 00
 284+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 284+ 8844 00 00 14 30
 285+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 285+ 884C 38 00 01 08
 286+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 286+ 8854 00 80 00 04
 287+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 287+ 885C 10 08 00 20
 288+ 8860
 289+ 8860              ; ------------------------------------------
 290+ 8860
 291+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 292+ 8862 96 88        	defw Explosion_Amadeus_2
 293+ 8864 C6 88        	defw Explosion_Amadeus_3
 294+ 8866
 295+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 296+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 297+ 886C 02 66 56     	DEFB	$02,$66,$56
 298+ 886F 02 42 48     	DEFB	$02,$42,$48
 299+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 300+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 301+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 302+ 887B 06 79 68     	DEFB	$06,$79,$68
 303+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 304+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 305+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 306+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 307+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 308+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 309+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 310+ 8893 07 19 80     	DEFB	$07,$19,$80
 311+ 8896
 312+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 313+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 314+ 889C 00 66 56     	DEFB	$00,$66,$56
 315+ 889F 04 42 48     	DEFB	$04,$42,$48
 316+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 317+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 318+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 319+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 320+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 321+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 322+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 323+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 324+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 325+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 326+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 327+ 88C3 07 19 80     	DEFB	$07,$19,$80
 328+ 88C6
 329+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 330+ 88C9 00 00 00     	DEFB	$00,$00,$00
 331+ 88CC 00 00 00     	DEFB	$00,$00,$00
 332+ 88CF 00 00 40     	DEFB	$00,$00,$40
 333+ 88D2 00 00 30     	DEFB	$00,$00,$30
 334+ 88D5 00 00 08     	DEFB	$00,$00,$08
 335+ 88D8 00 82 40     	DEFB	$00,$82,$40
 336+ 88DB 04 04 68     	DEFB	$04,$04,$68
 337+ 88DE 04 20 58     	DEFB	$04,$20,$58
 338+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 339+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 340+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 341+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 342+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 343+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 344+ 88F3 07 11 80     	DEFB	$07,$11,$80
 345+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F1 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 36 89        	defw Disparo_2
  40+ 8927 3B 89        	defw Disparo_3
  41+ 8929 40 89        	defw Disparo_4
  42+ 892B 45 89        	defw Disparo_5
  43+ 892D 4A 89        	defw Disparo_6
  44+ 892F 4F 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00           	db 0											; Control.
  49+ 8936
  50+ 8936 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8938 00 00        	defw 0											; Puntero de impresión.
  52+ 893A 00           	db 0											; Control.
  53+ 893B
  54+ 893B 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893D 00 00        	defw 0											; Puntero de impresión.
  56+ 893F 00           	db 0											; Control.
  57+ 8940
  58+ 8940 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8942 00 00        	defw 0											; Puntero de impresión.
  60+ 8944 00           	db 0											; Control.
  61+ 8945
  62+ 8945 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 8947 00 00        	defw 0											; Puntero de impresión.
  64+ 8949 00           	db 0											; Control.
  65+ 894A
  66+ 894A 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 894C 00 00        	defw 0											; Puntero de impresión.
  68+ 894E 00           	db 0											; Control.
  69+ 894F
  70+ 894F 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8951 00 00        	defw 0											; Puntero de impresión.
  72+ 8953 00           	db 0											; Control.
  73+ 8954
  74+ 8954              ; -------------------------------------------------------------------------------------
  75+ 8954              ;
  76+ 8954              ;	Índice de cajas de entidades.
  77+ 8954              ;
  78+ 8954              ;	18/1/24
  79+ 8954              ;
  80+ 8954
  81+ 8954              Indice_de_cajas_de_entidades
  82+ 8954
  83+ 8954 72 89        	defw Caja_1
  84+ 8956 7E 89        	defw Caja_2
  85+ 8958 8A 89        	defw Caja_3
  86+ 895A 96 89        	defw Caja_4
  87+ 895C A2 89        	defw Caja_5
  88+ 895E AE 89        	defw Caja_6
  89+ 8960 BA 89        	defw Caja_7
  90+ 8962
  91+ 8962 00 00        	defw 0
  92+ 8964 00 00        	defw 0
  93+ 8966
  94+ 8966              ; -------------------------
  95+ 8966
  96+ 8966              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8966
  98+ 8966              ;	db 0
  99+ 8966
 100+ 8966              ; ---------- ---------- ---------- ---------- ----------
 101+ 8966              ;
 102+ 8966              ;	28/05/24
 103+ 8966              ;
 104+ 8966              ; 	Cada caja tiene 14 bytes !!!
 105+ 8966              ;
 106+ 8966              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8966
 108+ 8966 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8967 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8969 00           	db 0												; (Contador_de_vueltas).
 111+ 896A 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 896B 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 896D 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 896F 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8971 00           	db 0												; (Velocidad).
 116+ 8972
 117+ 8972              ; ---------- ---------- ---------- ---------- ----------
 118+ 8972              ;
 119+ 8972              ;	22/01/24
 120+ 8972              ;
 121+ 8972              ; 	Cada caja tiene 12 bytes !!!
 122+ 8972
 123+ 8972 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8975 00           	db 0												; (Contador_de_vueltas).
 125+ 8976 00           	db 0												; (Impacto).
 126+ 8977 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8979 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 897B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 897D 00           	db 0												; (Velocidad).
 130+ 897E
 131+ 897E              ; ---------- ---------- ---------- ---------- ----------
 132+ 897E
 133+ 897E 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8981 00           	db 0 												; (Contador_de_vueltas).
 135+ 8982 00           	db 0												; (Impacto).
 136+ 8983 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8985 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8987 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8989 00           	db 0												; (Velocidad).
 140+ 898A
 141+ 898A              ; ---------- ---------- ---------- ---------- ----------
 142+ 898A
 143+ 898A 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 898D 00           	db 0 												; (Contador_de_vueltas).
 145+ 898E 00           	db 0												; (Impacto).
 146+ 898F 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8991 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 8993 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 8995 00           	db 0												; (Velocidad).
 150+ 8996
 151+ 8996              ; ---------- ---------- ---------- ---------- ----------
 152+ 8996
 153+ 8996 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 8999 00           	db 0 												; (Contador_de_vueltas).
 155+ 899A 00           	db 0												; (Impacto).
 156+ 899B 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 899D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 899F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A1 00           	db 0												; (Velocidad).
 160+ 89A2
 161+ 89A2              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A2
 163+ 89A2 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89A5 00           	db 0 												; (Contador_de_vueltas).
 165+ 89A6 00           	db 0												; (Impacto).
 166+ 89A7 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89A9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89AB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89AD 00           	db 0												; (Velocidad).
 170+ 89AE
 171+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 172+ 89AE
 173+ 89AE 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B1 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B2 00           	db 0												; (Impacto).
 176+ 89B3 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89B5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89B7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89B9 00           	db 0												; (Velocidad).
 180+ 89BA
 181+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 182+ 89BA
 183+ 89BA 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89BD 00           	db 0 												; (Contador_de_vueltas).
 185+ 89BE 00           	db 0												; (Impacto).
 186+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89C5 00           	db 0												; (Velocidad).
 190+ 89C6
 191+ 89C6              ; -------------------------------------------------------------------------------------
 192+ 89C6              ;
 193+ 89C6              ;	11/1/24
 194+ 89C6              ;
 195+ 89C6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89C6              ;
 197+ 89C6              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89C6              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89C6              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89C6              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89C6
 202+ 89C6              Indice_de_definiciones_de_entidades
 203+ 89C6
 204+ 89C6 CA 89        	defw Entidad_1
 205+ 89C8 D7 89        	defw Entidad_2
 206+ 89CA
 207+ 89CA              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89CA
 209+ 89CA              ;	BADSAT, (Satélite malvado).
 210+ 89CA
 211+ 89CA 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89CD 01           	db 1												; (Contador_de_vueltas).
 213+ 89CE 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D0 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D2 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89D4 01           	db 1												; (Cuad_objeto).
 217+ 89D5 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89D7
 219+ 89D7 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89DA 01           	db 1												; (Contador_de_vueltas).
 221+ 89DB 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89DD 88 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89DF 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E1 01           	db 1												; (Cuad_objeto).
 225+ 89E2 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89E4
 227+ 89E4              ; -------------------------------------------------------------------------------------
 228+ 89E4              ;
 229+ 89E4              ;	28/05/24
 230+ 89E4              ;
 231+ 89E4              ;	Definición de Amadeus.
 232+ 89E4              ;
 233+ 89E4              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89E4              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89E4
 236+ 89E4 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89E7 00           	db 0												; (Contador_de_vueltas).
 238+ 89E8 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89EA D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89EC C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89EE 03           	db 3												; (Cuad_objeto).
 242+ 89EF 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F1
   2+ 89F1
   3+ 89F1              ;   07/07/23
   4+ 89F1              ;
   5+ 89F1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F1              ;
   7+ 89F1              ;   Codificación:
   8+ 89F1              ;
   9+ 89F1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F1              ;
  11+ 89F1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F1              ;
  13+ 89F1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F1              ;
  15+ 89F1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F1              ;
  17+ 89F1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F1              ;                               ..... %01000010 Vel_up 4
  19+ 89F1              ;                                               Vel_down 2
  20+ 89F1              ;                               ..... $42
  21+ 89F1              ;
  22+ 89F1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F1              ;
  24+ 89F1              ;                               ..... %01000010 Vel_left 4
  25+ 89F1              ;                                               Vel_right 2
  26+ 89F1              ;                               ..... $42
  27+ 89F1              ;
  28+ 89F1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F1              ;
  30+ 89F1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F1              ;
  32+ 89F1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F1              ;
  34+ 89F1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F1              ;                                     $53
  36+ 89F1              ;
  37+ 89F1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F1              ;
  39+ 89F1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F1              ;
  42+ 89F1              ;                       Arriba ..... $81
  43+ 89F1              ;                       Arriba - izquierda ..... $a1
  44+ 89F1              ;                       Arriba - derecha ..... $91
  45+ 89F1              ;
  46+ 89F1              ;                       Abajo ..... $41
  47+ 89F1              ;                       Abajo - izquierda ..... $61
  48+ 89F1              ;                       Abajo - derecha ..... $51
  49+ 89F1              ;
  50+ 89F1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F1              ;
  52+ 89F1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F1              ;
  56+ 89F1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F1              ;
  61+ 89F1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F1              ;
  65+ 89F1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F1
  70+ 89F1              ; ----- ----- ----- ----- -----
  71+ 89F1
  72+ 89F1 1D 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89F3 25 8A            defw F_1
  74+ 89F5 2F 8A            defw F_2
  75+ 89F7 39 8A            defw Codo_abajo_derecha
  76+ 89F9 6D 8A            defw Derecha_y_subiendo
  77+ 89FB 77 8A            defw Derecha_y_subiendo_1
  78+ 89FD 81 8A            defw F_3
  79+ 89FF 8B 8A            defw F_4
  80+ 8A01 95 8A            defw Derecha_y_bajando
  81+ 8A03 9F 8A            defw Derecha_y_bajando_1
  82+ 8A05 A9 8A            defw Derecha_y_bajando_2
  83+ 8A07 B3 8A            defw Codo_derecha_abajo
  84+ 8A09 E3 8A            defw Codo_abajo_izq.
  85+ 8A0B 17 8B            defw Izquierda_y_subiendo
  86+ 8A0D 21 8B            defw Izquierda_y_subiendo_1
  87+ 8A0F 2B 8B            defw F_5
  88+ 8A11 35 8B            defw F_6
  89+ 8A13 3F 8B            defw Izquierda_y_bajando
  90+ 8A15 49 8B            defw Izquierda_y_bajando_1
  91+ 8A17 53 8B            defw Izquierda_y_bajando_2
  92+ 8A19 5D 8B            defw Codo_izquierda_abajo
  93+ 8A1B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A1D
  95+ 8A1D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A21 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A25
  98+ 8A25 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A29 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A2D 08 00
 100+ 8A2F
 101+ 8A2F 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A33 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A37 0F FE
 103+ 8A39
 104+ 8A39 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A3D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A41 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A45 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A4D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A55 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A59 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A5D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A61 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A65 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A69 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A6D
 118+ 8A6D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A71 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A75 06 00
 120+ 8A77
 121+ 8A77 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A7B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A7F 02 00
 123+ 8A81
 124+ 8A81 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A85 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A89 04 00
 126+ 8A8B
 127+ 8A8B 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A8F 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A93 08 00
 129+ 8A95
 130+ 8A95 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8A99 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8A9D 02 00
 132+ 8A9F
 133+ 8A9F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AA3 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AA7 06 00
 135+ 8AA9
 136+ 8AA9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB1 06 00
 138+ 8AB3
 139+ 8AB3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AB3
 141+ 8AB3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AB7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8ABB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ABF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AC3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AC7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8ACB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ACF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AD3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AD7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8ADB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8ADF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AE3
 154+ 8AE3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AE7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AEB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AEF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AF3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AF7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8AFB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8AFF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B03 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B07 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B0B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B0F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B13 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B17
 168+ 8B17 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B1B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B1F 06 00
 170+ 8B21
 171+ 8B21 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B29 02 00
 173+ 8B2B
 174+ 8B2B 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B2F 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B33 04 00
 176+ 8B35
 177+ 8B35 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B39 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B3D 08 00
 179+ 8B3F
 180+ 8B3F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B43 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B47 02 00
 182+ 8B49
 183+ 8B49 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B4D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B51 06 00
 185+ 8B53
 186+ 8B53 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B5B 06 00
 188+ 8B5D
 189+ 8B5D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B61 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B65 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B69 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B6D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B71 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B75 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B79 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B7D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B81 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B85 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B89 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B8D
 202+ 8B8D
 203+ 8B8D
 204+ 8B8D
 205+ 8B8D
 206+ 8B8D
 207+ 8B8D
 208+ 8B8D
 209+ 8B8D
 210+ 8B8D
# file closed: Patrones_de_mov.asm
 143  8B8D              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B8D              ; 19/1/24
   2+ 8B8D
   3+ 8B8D              Indice_de_niveles
   4+ 8B8D
   5+ 8B8D 95 8B        	defw Nivel_1
   6+ 8B8F A0 8B        	defw Nivel_2
   7+ 8B91
   8+ 8B91              ;	...
   9+ 8B91              ;	...
  10+ 8B91              ;	+ Niveles ...
  11+ 8B91
  12+ 8B91 00 00        	defw 0
  13+ 8B93 00 00        	defw 0
  14+ 8B95
  15+ 8B95 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B96 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8B9A 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8B9E 01 01
  18+ 8BA0
  19+ 8BA0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA1 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA5 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BA9 01 02
  22+ 8BAB 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BAF 01 02
  23+ 8BB1
# file closed: Niveles.asm
 144  8BB1
 145  8BB1              ; --------------------------------------------------------------------------------
 146  8BB1              ;
 147  8BB1              ; 12/05/24
 148  8BB1              ;
 149  8BB1              ; Parámetros DRAW.
 150  8BB1              ;
 151  8BB1
 152  8BB1              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB1
 154  8BB1 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BB2              ;															- Patrón de movimiento.
 156  8BB2 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BB3 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BB4
 159  8BB4 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BB5              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BB5
 162  8BB5              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BB5              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BB5              ; Ejemplos.
 165  8BB5
 166  8BB5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BB5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BB5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BB5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BB5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BB5
 172  8BB5 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BB6              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BB6              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BB6
 176  8BB6 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BB8              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BB8
 179  8BB8 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BBA
 181  8BBA              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BBA
 183  8BBA 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BBC              ;														; _palabras que componen el "movimiento_masticado".
 185  8BBC
 186  8BBC              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BBC
 188  8BBC 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BBD              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BBD              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BBD              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BBD              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BBD
 194  8BBD 00           Ctrl_2 db 0
 195  8BBE              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BBE              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BBE              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BBE              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BBE              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BBE              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BBE              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BBE              ;
 203  8BBE              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BBE              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BBE              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BBE              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BBE              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BBE              ;														BIT 4, ???
 209  8BBE              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BBE
 211  8BBE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BBF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BBF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BBF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BBF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BBF              ;
 217  8BBF              ; 														DESCRIPCIÖN:
 218  8BBF              ;
 219  8BBF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BBF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BBF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BBF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BBF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BBF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BBF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BBF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BBF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BBF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BBF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BBF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BBF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BBF              ;
 233  8BBF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BBF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BBF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BBF
 237  8BBF              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BBF
 239  8BBF 00           Filas db 0												; Filas. [DRAW]
 240  8BC0 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC1 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BC3 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BC5
 244  8BC5              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BC5
 246  8BC5 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BC6              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BC6              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BC6
 250  8BC6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BC6
 252  8BC6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BC6              ;
 254  8BC6              ;	COLORES: 0 ..... NEGRO
 255  8BC6              ;    		 1 ..... AZUL
 256  8BC6              ; 			 2 ..... ROJO
 257  8BC6              ;			 3 ..... MAGENTA
 258  8BC6              ; 			 4 ..... VERDE
 259  8BC6              ; 			 5 ..... CIAN
 260  8BC6              ;			 6 ..... AMARILLO
 261  8BC6              ; 			 7 ..... BLANCO
 262  8BC6
 263  8BC6 00 00        Indice_Sprite_der defw 0
 264  8BC8 00 00        Indice_Sprite_izq defw 0
 265  8BCA 00 00        Puntero_DESPLZ_der defw 0
 266  8BCC 00 00        Puntero_DESPLZ_izq defw 0
 267  8BCE
 268  8BCE 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD1 00           Columnas db 0
 271  8BD2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BD4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BD4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD5
 275  8BD5              ; variables de control general.
 276  8BD5
 277  8BD5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BD6
 279  8BD6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BD6
 281  8BD6              Perfiles_de_velocidad
 282  8BD6
 283  8BD6 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BD7 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BD8 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BD9 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BDA
 288  8BDA              ; Contadores de 16 bits.
 289  8BDA
 290  8BDA 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BE2
 295  8BE2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BE2
 297  8BE2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BE4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BE6 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BE8              ;
 301  8BE8              ;
 302  8BE8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BE9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BE9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BE9 00           Incrementa_puntero_backup db 0
 306  8BEA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BEB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BEB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BEC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BED 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BEE              ;
 312  8BEE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BEE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BEE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BEE              ;
 316  8BEE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BEE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BEE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BEE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BEE              ;
 321  8BEE              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BEE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BEE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BEE
 325  8BEE 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BEF
 327  8BEF              ;														DESCRIPCIÓN:
 328  8BEF              ;
 329  8BEF              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BEF              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BEF              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BEF              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BEF              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BEF              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BEF
 336  8BEF              ;														BIT 3, Recarga de nueva oleada.
 337  8BEF              ;														BIT 4, Recarga de nueva oleada.
 338  8BEF              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BEF              ;														BIT 6, **** Frame completo.
 340  8BEF              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BEF
 342  8BEF 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF1              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF1              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF1              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF1
 347  8BF1              ; Gestión de ENTIDADES y CAJAS.
 348  8BF1
 349  8BF1 00 00        Puntero_store_caja defw 0
 350  8BF3 00 00        Puntero_restore_caja defw 0
 351  8BF5 00 00        Indice_restore_caja defw 0
 352  8BF7 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BF8 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8BF9 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8BFA
 356  8BFA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8BFC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8BFE              ;														; _ puntero (Indice_entidades).
 359  8BFE
 360  8BFE              ;---------------------------------------------------------------------------------------------------------------
 361  8BFE              ;
 362  8BFE              ;	11/09/24
 363  8BFE              ;
 364  8BFE              ;	Álbumes.
 365  8BFE
 366  8BFE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C00              ;														; _variable para almacenar lo posición del puntero_
 368  8C00              ; 														; _de pila, SP.
 369  8C00 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C02              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C02
 372  8C02              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C02
 374  8C02 00 00        Album_de_pintado defw 0
 375  8C04 00 00        Album_de_borrado defw 0
 376  8C06 00 00        Album_de_pintado_Amadeus defw 0
 377  8C08 00 00        Album_de_borrado_Amadeus defw 0
 378  8C0A 00 00        Album_de_pintado_disparos defw 0
 379  8C0C 00 00        Album_de_borrado_disparos defw 0
 380  8C0E
 381  8C0E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C10 00           Num_de_bytes_album_de_disparos db 0
 383  8C11 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C12
 385  8C12 00           Numero_de_disparos_de_entidades db 0
 386  8C13
 387  8C13 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C14              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 389  8C14
 390  8C14 00 00        Puntero_rancio_disparos_album defw 0
 391  8C16
 392  8C16 00 00        Techo_Scanlines_album defw 0
 393  8C18 00 00        Techo_Scanlines_album_2 defw 0
 394  8C1A 00           Switch db 0
 395  8C1B 00 00        Techo defw 0
 396  8C1D 00 00        Scanlines_album_SP defw 0
 397  8C1F 00 89        India_SP defw Tabla_de_pintado
 398  8C21 03 89        India_2_SP defw Tabla_de_pintado+3
 399  8C23
 400  8C23 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  8C24              ;
 402  8C24              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  8C24              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  8C24              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  8C24              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  8C24              ;																Habilita el borrado/pintado de sprites.
 407  8C24              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  8C24              ;																_ a la baja.
 409  8C24              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  8C24              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 411  8C24              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 412  8C24              ; 																_ el último frame de la explosión de nuestra nave.
 413  8C24              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 414  8C24              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 415  8C24
 416  8C24 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  8C25              ;
 418  8C25              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  8C25              ;
 420  8C25              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  8C25              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  8C25              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  8C25              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  8C25              ;
 425  8C25              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  8C25              ;															_ masticados ya generados.
 427  8C25              ;
 428  8C25              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  8C25              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  8C25              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  8C25              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  8C25
 433  8C25 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 434  8C26              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 435  8C26              ; Gestión de Disparos.
 436  8C26
 437  8C26 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 438  8C28 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 439  8C2A
 440  8C2A 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C2B
 442  8C2B              ;
 443  8C2B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C2B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C2B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C2B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C2B
 448  8C2B
 449  8C2B
 450  8C2B
 451  8C2B
 452  8C2B
 453  8C2B
 454  8C2B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C2D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C2D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C2D
 458  8C2D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C2F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C2F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C32              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C32 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C35              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C35
 465  8C35              ;---------------------------------------------------------------------------------------------------------------
 466  8C35
 467  8C35              ; Relojes y temporizaciones.
 468  8C35
 469  8C35 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 470  8C36 05           Clock_explosion_Amadeus db 5
 471  8C37 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C38
 473  8C38 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C3A
 475  8C3A 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 476  8C3C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 477  8C3D              ;														; Repite la oleada de entidades.
 478  8C3D              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 479  8C3D              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 480  8C3D              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 481  8C3D
 482  8C3D              ;---------------------------------------------------------------------------------------------------------------
 483  8C3D
 484  8C3D              ; Gestión de NIVELES.
 485  8C3D
 486  8C3D 00           Nivel db 0												; Nivel actual del juego.
 487  8C3E 00 00        Puntero_indice_NIVELES defw 0
 488  8C40 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 489  8C42              ; 														; _ que definen el NIVEL.
 490  8C42
 491  8C42              ; ---------------------------------------------------------------------------------------------------------------
 492  8C42
 493  8C42              ; Temporizaciones Shield.
 494  8C42
 495  8C42 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 496  8C46 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 497  8C48 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 498  8C49 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 499  8C4A 00           Shield_3 db 0
 500  8C4B
 501  8C4B 06           Lives db 6
 502  8C4C
 503  8C4C              ; 	INICIO  *************************************************************************************************************************************************************************
 504  8C4C              ;
 505  8C4C              ;	5/1/24
 506  8C4C
 507  8C4C              START
 508  8C4C
 509  8C4C 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  8C4F 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 511  8C51 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  8C53 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  8C55 F3           	DI
 514  8C56
 515  8C56              ; Limpiamos pantalla.
 516  8C56
 517  8C56 3E 07        	ld a,%00000111
 518  8C58 CD 64 94     	call Cls
 519  8C5B CD BC 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 520  8C5E
 521  8C5E              ; INICIALIZACIÓN.
 522  8C5E
 523  8C5E 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 524  8C60 CD 09 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 525  8C63 CD 53 8E     	call Extrae_numero_aleatorio_y_avanza
 526  8C66
 527  8C66 6F           	ld l,a
 528  8C67 26 00        	ld h,0
 529  8C69 22 3A 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 530  8C6C
 531  8C6C              ;	Inicializa 1er Nivel.
 532  8C6C
 533  8C6C 21 8D 8B     	ld hl,Indice_de_niveles
 534  8C6F 22 3E 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 535  8C72 CD 39 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 536  8C75              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 537  8C75              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 538  8C75              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 539  8C75
 540  8C75              ;	Inicia los álbumes de líneas.
 541  8C75
 542  8C75 CD 0C 90     	call Inicia_albumes_de_lineas
 543  8C78              ;
 544  8C78 CD 1C 90     	call Inicia_albumes_de_lineas_Amadeus
 545  8C7B CD 29 90     	call Inicia_albumes_de_disparos
 546  8C7E
 547  8C7E
 548  8C7E CD 7E 92     4 call Inicia_Entidades
 549  8C81 CD E1 92     	call Inicia_Amadeus
 550  8C84
 551  8C84              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 552  8C84              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 553  8C84              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 554  8C84
 555  8C84 11 66 89     	ld de,Amadeus_BOX
 556  8C87 CD 34 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 557  8C8A CD 24 93     	call Limpiamos_bandeja_DRAW
 558  8C8D
 559  8C8D              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 560  8C8D
 561  8C8D 06 3C        	ld b,60
 562  8C8F CD 06 9D     2 call Amadeus_a_izquierda
 563  8C92 10 FB        	djnz 2B
 564  8C94
 565  8C94 CD EA 8F     	call Genera_datos_de_impresion_Amadeus
 566  8C97
 567  8C97              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 568  8C97
 569  8C97 CD 3C 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 570  8C9A              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 571  8C9A
 572  8C9A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 573  8C9A              ; (Esto se dá cuando se inicia una nueva oleada).
 574  8C9A
 575  8C9A              ;	ld a,(Ctrl_1)
 576  8C9A              ;	bit 3,a
 577  8C9A              ;	jr nz,5F											 ; Loop
 578  8C9A
 579  8C9A              ;	ld de,Amadeus_db
 580  8C9A              ;	call Store_Amadeus
 581  8C9A
 582  8C9A              ; 	INICIA DISPAROS !!!!!
 583  8C9A
 584  8C9A CD 52 90     	call Inicia_Puntero_Disparo_Entidades
 585  8C9D
 586  8C9D              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 587  8C9D
 588  8C9D              ;5 call Inicia_punteros_de_cajas
 589  8C9D              ;	call Restore_entidad
 590  8C9D
 591  8C9D              ;	ld a,(Ctrl_1)
 592  8C9D              ;	bit 3,a
 593  8C9D              ;	jr z,6F
 594  8C9D
 595  8C9D              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 596  8C9D
 597  8C9D              ;	ld hl,Ctrl_1
 598  8C9D              ;	res 3,(hl)
 599  8C9D              ;	jr Main
 600  8C9D
 601  8C9D              ; Damos por concluida la construcción del FRAME.
 602  8C9D              ;
 603  8C9D
 604  8C9D CD C7 90     	call Inicia_Shield
 605  8CA0
 606  8CA0
 607  8CA0 2A 1D 8C     6 ld hl,(Scanlines_album_SP)
 608  8CA3 22 16 8C     	ld (Techo_Scanlines_album),hl
 609  8CA6
 610  8CA6 2A 04 8C     	ld hl,(Album_de_borrado)
 611  8CA9 22 1D 8C     	ld (Scanlines_album_SP),hl
 612  8CAC
 613  8CAC 21 00 89     	ld hl,Tabla_de_pintado
 614  8CAF 22 1F 8C     	ld (India_SP),hl
 615  8CB2
 616  8CB2 21 23 8C     	ld hl,Ctrl_3
 617  8CB5 CB C6        	set 0,(hl) 											; Indica Frame completo.
 618  8CB7 CB D6        	set 2,(hl)
 619  8CB9 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 620  8CBB
 621  8CBB FB           	ei 													; Ha de apuntar a $5c3a.
 622  8CBC
 623  8CBC 76           	halt
 624  8CBD
 625  8CBD              ; ------------------------------------
 626  8CBD
 627  8CBD              Main
 628  8CBD              ;
 629  8CBD              ; 22/08/24
 630  8CBD
 631  8CBD              ; Gestión de disparos.
 632  8CBD
 633  8CBD CD ED 9E     	call Limpia_album_de_borrado_disparos
 634  8CC0 CD 3A 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 635  8CC3 CD 29 9F     	call Motor_Disparos
 636  8CC6
 637  8CC6              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 638  8CC6              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 639  8CC6              ; Este hecho lo indica el bit2 de (Impacto2).
 640  8CC6
 641  8CC6 CD 05 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 642  8CC9
 643  8CC9              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 644  8CC9
 645  8CC9 2A 3A 8C     	ld hl,(Clock_next_entity)
 646  8CCC ED 4B 78 5C  	ld bc,(FRAMES)
 647  8CD0 A7           	and a
 648  8CD1 ED 42        	sbc hl,bc
 649  8CD3 20 16        	jr nz,1F
 650  8CD5
 651  8CD5              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 652  8CD5              ; _ (Clock_next_entity) para la siguiente entidad.
 653  8CD5
 654  8CD5 3A F8 8B     	ld a,(Numero_parcial_de_entidades)
 655  8CD8 47           	ld b,a
 656  8CD9 3A F9 8B     	ld a,(Entidades_en_curso)
 657  8CDC B8           	cp b
 658  8CDD 28 0C        	jr z,1F
 659  8CDF 30 0A        	jr nc,1F
 660  8CE1
 661  8CE1 3C           	inc a
 662  8CE2 32 F9 8B     	ld (Entidades_en_curso),a
 663  8CE5
 664  8CE5              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 665  8CE5
 666  8CE5 CD 53 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 667  8CE8 CD 6F 8E     	call Define_Clock_next_entity
 668  8CEB
 669  8CEB 3A F9 8B     1 ld a,(Entidades_en_curso)
 670  8CEE A7           	and a
 671  8CEF CA 62 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 672  8CF2 47           	ld b,a												; No hay entidades que gestionar.
 673  8CF3
 674  8CF3              ; ( Código que ejecutamos con cada entidad: ).
 675  8CF3
 676  8CF3              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 677  8CF3              ;
 678  8CF3              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 679  8CF3
 680  8CF3 21 00 89     	ld hl,Tabla_de_pintado
 681  8CF6 22 1F 8C     	ld (India_SP),hl
 682  8CF9
 683  8CF9 21 23 8C     	ld hl,Ctrl_3
 684  8CFC CB D6        	set 2,(hl)
 685  8CFE CD 0F 8E     	call Change
 686  8D01
 687  8D01 C5           2 push bc 												; Nº de entidades en curso.
 688  8D02
 689  8D02 CD 94 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 690  8D05 ED 5B 1D 8C  	ld de,(Scanlines_album_SP)
 691  8D09
 692  8D09              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 693  8D09
 694  8D09              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 695  8D09              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 696  8D09
 697  8D09 3A 2A 8C     	ld a,(Impacto2)
 698  8D0C CB 5F        	bit 3,a
 699  8D0E C4 B3 9E     	call nz,Compara_con_coordenadas_de_disparo
 700  8D11
 701  8D11 3A B5 8B     	ld a,(Impacto)
 702  8D14 CB 4F        	bit 1,a
 703  8D16 C4 A4 91     	call nz,Genera_explosion
 704  8D19 20 2A        	jr nz,Gestiona_siguiente_entidad
 705  8D1B
 706  8D1B 3A B5 8B     	ld a,(Impacto)
 707  8D1E A7           	and a
 708  8D1F 28 0C        	jr z,3F
 709  8D21
 710  8D21              ; IMPACTO en entidad por colisión con Amadeus.
 711  8D21
 712  8D21              ; 5/7/24
 713  8D21              ; Nota importante:
 714  8D21              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 715  8D21              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 716  8D21              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 717  8D21
 718  8D21 3A 6A 89     	ld a,(Impacto_Amadeus)
 719  8D24 A7           	and a
 720  8D25 C4 A4 91     	call nz,Genera_explosion
 721  8D28 20 1B        	jr nz,Gestiona_siguiente_entidad
 722  8D2A
 723  8D2A              ; Falsa colisión !!!
 724  8D2A
 725  8D2A 32 B5 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 726  8D2D
 727  8D2D              ; -------------------------------------------
 728  8D2D
 729  8D2D CD B3 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 730  8D30 CD EF 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 731  8D33 CD A3 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 732  8D36 CD A4 94     	call Genera_datos_de_impresion
 733  8D39 CD 47 93     	call Decrementa_Contador_de_mov_masticados
 734  8D3C
 735  8D3C              ; -------------------------------------------
 736  8D3C
 737  8D3C              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 738  8D3C
 739  8D3C 2A B6 8B     	ld hl,(Puntero_de_impresion)
 740  8D3F CD 78 94     	call Genera_coordenadas
 741  8D42
 742  8D42 CD 83 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 743  8D45
 744  8D45              Gestiona_siguiente_entidad
 745  8D45
 746  8D45 CD 19 93      	call Store_Restore_cajas
 747  8D48 C1           	pop bc
 748  8D49 10 B6        	djnz 2B
 749  8D4B
 750  8D4B              ; Hemos gestionado todas las entidades.
 751  8D4B
 752  8D4B              ; ----- ----- -----
 753  8D4B
 754  8D4B CD C7 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 755  8D4E CD DE 8E     	call Ordena_tabla_de_impresion
 756  8D51 CD 3C 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 757  8D54
 758  8D54              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 759  8D54              ; Hemos gestionado todas las unidades.
 760  8D54              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 761  8D54
 762  8D54              ;	ld hl,Ctrl_1
 763  8D54              ;	res 2,(hl)
 764  8D54
 765  8D54 CD 84 8E     	call Borra_diferencia
 766  8D57
 767  8D57 3A 23 8C     	ld a,(Ctrl_3)
 768  8D5A CB 5F        	bit 3,a
 769  8D5C 20 04        	jr nz,Gestion_de_Amadeus
 770  8D5E
 771  8D5E EB           	ex de,hl
 772  8D5F 71           	ld (hl),c
 773  8D60 2C           	inc l
 774  8D61 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 775  8D62
 776  8D62
 777  8D62              ;! GESTIONA AMADEUS !!!!!!!!!!
 778  8D62
 779  8D62              Gestion_de_Amadeus
 780  8D62
 781  8D62 21 23 8C     	ld hl,Ctrl_3
 782  8D65 CB 76        	bit 6,(hl)
 783  8D67 28 13        	jr z,Amadeus_vivo
 784  8D69
 785  8D69              ; Amadeus ha sido destruido.
 786  8D69              ; Decrementa (Temp_new_live).
 787  8D69
 788  8D69 21 37 8C     	ld hl,Temp_new_live
 789  8D6C 35           	dec (hl)
 790  8D6D 20 26        	jr nz,End_frame
 791  8D6F
 792  8D6F              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 793  8D6F
 794  8D6F 21 4B 8C     	ld hl,Lives
 795  8D72 35           	dec (hl)
 796  8D73
 797  8D73              ;! Fin del juego
 798  8D73
 799  8D73 F3           	di
 800  8D74 28 FE        	jr z,$
 801  8D76 FB           	ei
 802  8D77
 803  8D77              ; Nueva nave.
 804  8D77
 805  8D77 CD B5 8D     	call Reinicia_Amadeus
 806  8D7A 18 19        	jr End_frame
 807  8D7C
 808  8D7C              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 809  8D7C
 810  8D7C              Amadeus_vivo
 811  8D7C
 812  8D7C 3A 6A 89     	ld a,(Impacto_Amadeus)
 813  8D7F A7           	and a
 814  8D80 C4 D4 91     	call nz, Genera_explosion_Amadeus
 815  8D83 20 10        	jr nz, End_frame
 816  8D85
 817  8D85 CD 81 91     	call Teclado
 818  8D88
 819  8D88 21 23 8C     	ld hl,Ctrl_3
 820  8D8B CB 6E        	bit 5,(hl)
 821  8D8D 28 06        	jr z,End_frame
 822  8D8F
 823  8D8F              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 824  8D8F
 825  8D8F CD 2A 8E     	call Change_Amadeus
 826  8D92 CD EA 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 827  8D95
 828  8D95              End_frame
 829  8D95
 830  8D95              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 831  8D95              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 832  8D95
 833  8D95 CD CC 9F     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 834  8D98 CD 03 9F     	call Calcula_bytes_pintado_disparos
 835  8D9B CD 10 9F     	call Limpia_album_de_pintado_disparos
 836  8D9E
 837  8D9E              ; ------------ ------------- --------------
 838  8D9E
 839  8D9E 2A 04 8C     	ld hl,(Album_de_borrado)
 840  8DA1 22 1D 8C     	ld (Scanlines_album_SP),hl
 841  8DA4
 842  8DA4 21 23 8C     	ld hl,Ctrl_3
 843  8DA7 CB C6        	set 0,(hl) 											; Indica Frame completo.
 844  8DA9 CB 9E        	res 3,(hl)
 845  8DAB CB A6        	res 4,(hl)
 846  8DAD
 847  8DAD AF           	xor a
 848  8DAE D3 FE        	out ($fe),a
 849  8DB0
 850  8DB0 76           	halt
 851  8DB1
 852  8DB1              ; ----------------------------------------
 853  8DB1
 854  8DB1              ;	ld a,(Ctrl_1) 										; Existe Loop?
 855  8DB1              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 856  8DB1 CA BD 8C     	jp z,Main
 857  8DB4
 858  8DB4              ; ----------------------------------------
 859  8DB4
 860  8DB4              ; RECARGA DE NUEVA OLEADA.
 861  8DB4
 862  8DB4              ;	ld a,(Contador_de_frames)
 863  8DB4              ;	ld b,a
 864  8DB4              ;	ld a,(Activa_recarga_cajas)
 865  8DB4              ;	cp b
 866  8DB4              ;	jr z,20F
 867  8DB4
 868  8DB4              ;	ld hl,Ctrl_1
 869  8DB4              ;	set 4,(hl)
 870  8DB4              ;	jp Main
 871  8DB4
 872  8DB4              ;20 ld hl,Ctrl_1
 873  8DB4              ;	res 4,(hl)
 874  8DB4
 875  8DB4              ;	ld a,(Contador_de_frames)
 876  8DB4
 877  8DB4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 878  8DB4              ;! _ IMPREDECIBLE !!!!
 879  8DB4
 880  8DB4              ;	add 10
 881  8DB4              ;	ld (Clock_next_entity),a
 882  8DB4
 883  8DB4              ;	jp 4B
 884  8DB4
 885  8DB4 C9           	ret
 886  8DB5
 887  8DB5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 888  8DB5              ;
 889  8DB5              ;	16/11/23
 890  8DB5
 891  8DB5              ;;Gestiona_Amadeus
 892  8DB5
 893  8DB5              ;! Activa/desactiva impacto con Amadeus.
 894  8DB5
 895  8DB5              ;	ld a,(Impacto)
 896  8DB5              ;	and a
 897  8DB5              ;	jr nz,2F
 898  8DB5
 899  8DB5              ;;	call Mov_Amadeus
 900  8DB5
 901  8DB5              ;;2 ld a,(Ctrl_0)
 902  8DB5              ;;	bit 4,a
 903  8DB5              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 904  8DB5
 905  8DB5              ;;	call Guarda_foto_entidad_a_pintar
 906  8DB5              ;;	call Guarda_datos_de_borrado_Amadeus
 907  8DB5
 908  8DB5              ;;1 ld hl,Ctrl_0
 909  8DB5              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 910  8DB5
 911  8DB5              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 912  8DB5
 913  8DB5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 914  8DB5
 915  8DB5              ;	call Calcula_numero_de_disparotes
 916  8DB5
 917  8DB5              ;;	ret
 918  8DB5
 919  8DB5              ; -----------------------------
 920  8DB5              ;
 921  8DB5              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 922  8DB5              ;
 923  8DB5              ;	INPUTS: B a de estar a "0".
 924  8DB5
 925  8DB5              ;Prepara_Borra_sprites
 926  8DB5
 927  8DB5              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 928  8DB5              ;	ld a,l
 929  8DB5              ;	ret z
 930  8DB5
 931  8DB5              ;	srl a
 932  8DB5
 933  8DB5              ;2 sub 16
 934  8DB5              ;	jr z,1F
 935  8DB5              ;	inc b
 936  8DB5              ;	jr 2B
 937  8DB5
 938  8DB5              ;1 inc b
 939  8DB5
 940  8DB5              ;	exx
 941  8DB5              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 942  8DB5              ;	exx
 943  8DB5
 944  8DB5              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 945  8DB5              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 946  8DB5
 947  8DB5              ;	ret
 948  8DB5
 949  8DB5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 950  8DB5              ;
 951  8DB5              ;	24/07/24
 952  8DB5
 953  8DB5              Reinicia_Amadeus
 954  8DB5
 955  8DB5              ;	Reinicia posición y estado.
 956  8DB5
 957  8DB5 21 CF 50     	ld hl,$50cf
 958  8DB8 22 6B 89     	ld (p.imp.amadeus),hl
 959  8DBB 21 F0 E0     	ld hl,$e0f0
 960  8DBE 22 6D 89     	ld (Pamm_Amadeus),hl
 961  8DC1 21 3D 00     	ld hl,$003d
 962  8DC4 22 6F 89     	ld (Comm_Amadeus),hl
 963  8DC7
 964  8DC7              ;	limpiamos el álbum de borrado.
 965  8DC7
 966  8DC7 2A 08 8C     	ld hl,(Album_de_borrado_Amadeus)
 967  8DCA
 968  8DCA AF           	xor a
 969  8DCB 77           	ld (hl),a
 970  8DCC
 971  8DCC E5           	push hl
 972  8DCD D1           	pop de
 973  8DCE 13           	inc de
 974  8DCF
 975  8DCF 01 23 00     	ld bc,35
 976  8DD2 ED B0        	ldir
 977  8DD4
 978  8DD4 CD EA 8F     	call Genera_datos_de_impresion_Amadeus
 979  8DD7
 980  8DD7              ;	Reinicia temporizaciones.
 981  8DD7
 982  8DD7 CD C7 90     	call Inicia_Shield
 983  8DDA
 984  8DDA 3E 5A        	ld a,90
 985  8DDC 32 48 8C     	ld (Shield),a
 986  8DDF
 987  8DDF 3E 64        	ld a,100
 988  8DE1 32 37 8C     	ld (Temp_new_live),a
 989  8DE4
 990  8DE4              ; 	Restauramos el FLAG: Amadeus vivo.
 991  8DE4
 992  8DE4 21 23 8C     	ld hl,Ctrl_3
 993  8DE7 CB B6        	res 6,(hl)
 994  8DE9
 995  8DE9              ;	Fuerza la impresión de la nave en el siguiente frame.
 996  8DE9
 997  8DE9 21 23 8C      	ld hl,Ctrl_3
 998  8DEC CB EE        	set 5,(hl)
 999  8DEE
1000  8DEE C9           	ret
1001  8DEF
1002  8DEF              ; --------------------------------------------------------------------------------------------------------------
1003  8DEF              ;
1004  8DEF              ;	12/05/24
1005  8DEF
1006  8DEF 3A BC 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1007  8DF2 CB 27        	sla a
1008  8DF4 32 BC 8B     	ld (Velocidad),a
1009  8DF7 E6 10        	and $10
1010  8DF9 C8           	ret z
1011  8DFA
1012  8DFA              ; Restaura (Velocidad) a razón del nº de vueltas.
1013  8DFA
1014  8DFA 3A B4 8B     	ld a,(Contador_de_vueltas)
1015  8DFD CB 2F        	sra a
1016  8DFF CB 2F        	sra a
1017  8E01 32 BC 8B     	ld (Velocidad),a
1018  8E04
1019  8E04 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1020  8E07 23           	inc hl
1021  8E08 23           	inc hl
1022  8E09 23           	inc hl
1023  8E0A 23           	inc hl
1024  8E0B 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1025  8E0E
1026  8E0E C9           	ret
1027  8E0F
1028  8E0F              ; --------------------------------------------------------------------------------------------------------------
1029  8E0F              ;
1030  8E0F              ;	25/08/24
1031  8E0F
1032  8E0F              Change
1033  8E0F
1034  8E0F 3A 1A 8C     	ld a,(Switch)
1035  8E12 EE 01        	xor 1
1036  8E14 32 1A 8C     	ld (Switch),a
1037  8E17 2A 02 8C     	ld hl,(Album_de_pintado)
1038  8E1A ED 5B 04 8C  	ld de,(Album_de_borrado)
1039  8E1E EB           	ex de,hl
1040  8E1F 22 02 8C     	ld (Album_de_pintado),hl
1041  8E22 22 1D 8C     	ld (Scanlines_album_SP),hl
1042  8E25 ED 53 04 8C  	ld (Album_de_borrado),de
1043  8E29 C9           	ret
1044  8E2A
1045  8E2A              Change_Amadeus
1046  8E2A
1047  8E2A 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
1048  8E2D ED 5B 08 8C  	ld de,(Album_de_borrado_Amadeus)
1049  8E31 EB           	ex de,hl
1050  8E32 22 06 8C     	ld (Album_de_pintado_Amadeus),hl
1051  8E35 ED 53 08 8C  	ld (Album_de_borrado_Amadeus),de
1052  8E39 C9           	ret
1053  8E3A
1054  8E3A              Change_Disparos
1055  8E3A
1056  8E3A 2A 0A 8C     	ld hl,(Album_de_pintado_disparos)
1057  8E3D ED 5B 0C 8C  	ld de,(Album_de_borrado_disparos)
1058  8E41 EB           	ex de,hl
1059  8E42 22 0A 8C     	ld (Album_de_pintado_disparos),hl
1060  8E45 ED 53 0C 8C  	ld (Album_de_borrado_disparos),de
1061  8E49 22 0E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1062  8E4C
1063  8E4C 3A 10 8C     	ld a,(Num_de_bytes_album_de_disparos)
1064  8E4F 32 11 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1065  8E52
1066  8E52 C9           	ret
1067  8E53
1068  8E53              ; ------------------------------------
1069  8E53              ;
1070  8E53              ; 1/05/24
1071  8E53
1072  8E53              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1073  8E53              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1074  8E53
1075  8E53              ;	DESTRUYE: HL,DE,A
1076  8E53              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1077  8E53
1078  8E53              ;	Variables implicadas: (RND_SP).
1079  8E53
1080  8E53              Extrae_numero_aleatorio_y_avanza
1081  8E53
1082  8E53 21 00 89     	ld hl,Tabla_de_pintado
1083  8E56 EB           	ex de,hl
1084  8E57 2A 38 8C     	ld hl,(RND_SP)
1085  8E5A EB           	ex de,hl
1086  8E5B A7           	and a
1087  8E5C ED 52        	sbc hl,de
1088  8E5E
1089  8E5E 2A 38 8C     	ld hl,(RND_SP)
1090  8E61 20 06        	jr nz,1F
1091  8E63
1092  8E63              ; Sitúa HL al principio de la tabla de nº aleatorios.
1093  8E63
1094  8E63 21 F6 88     	ld hl,Numeros_aleatorios
1095  8E66 22 38 8C     	ld (RND_SP),HL
1096  8E69
1097  8E69              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1098  8E69
1099  8E69 7E           1 ld a,(hl)
1100  8E6A 23           	inc hl
1101  8E6B 22 38 8C     	ld (RND_SP),hl
1102  8E6E C9           	ret
1103  8E6F
1104  8E6F              ; ------------------------------------
1105  8E6F              ;
1106  8E6F              ; 1/05/24
1107  8E6F
1108  8E6F              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1109  8E6F              ; (1 a 4 segundos).
1110  8E6F              ; Actualizamos (Clock_next_entity) con A.
1111  8E6F
1112  8E6F              ;	DESTRUYE: A y B.
1113  8E6F              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1114  8E6F              ;			 Actualiza (Clock_next_entity) con A.
1115  8E6F
1116  8E6F              ;	Variables implicadas: (Clock_next_entity).
1117  8E6F
1118  8E6F              ; Notas:
1119  8E6F
1120  8E6F              ; 	$32 1 seg.
1121  8E6F              ; 	$64 2 seg.
1122  8E6F              ; 	$96 3 seg.
1123  8E6F              ; 	$c8 4 seg.
1124  8E6F              ; 	$fa 5 seg.
1125  8E6F
1126  8E6F              ; $ffff 1310,7 seg, 22 minutos.
1127  8E6F
1128  8E6F              ;	$0100  5 seg. aproximadamente.
1129  8E6F              ;	$0200 10 seg. aproximadamente.
1130  8E6F              ;	$0300 15 seg. aproximadamente.
1131  8E6F              ;	$0400 20 seg. aproximadamente.
1132  8E6F              ;	$0500 25 seg. aproximadamente.
1133  8E6F              ;	$0600 30 seg. aproximadamente.
1134  8E6F
1135  8E6F              Define_Clock_next_entity
1136  8E6F
1137  8E6F FE 34        	cp $34
1138  8E71 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1139  8E73
1140  8E73              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1141  8E73
1142  8E73 4F           3 ld c,a
1143  8E74 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1144  8E76 2A 78 5C     	ld hl,(FRAMES)
1145  8E79 A7           	and a
1146  8E7A ED 4A        	adc hl,bc
1147  8E7C 22 3A 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1148  8E7F C9           	ret
1149  8E80
1150  8E80 3E 34        1 ld a,$34
1151  8E82 18 EF        	jr 3B
1152  8E84
1153  8E84              ; ------------------------------------
1154  8E84              ;
1155  8E84              ; 18/03/24
1156  8E84
1157  8E84              Borra_diferencia
1158  8E84
1159  8E84 ED 4B 1D 8C  	ld bc,(Scanlines_album_SP)
1160  8E88
1161  8E88 3A 1A 8C     	ld a,(Switch)
1162  8E8B A7           	and a
1163  8E8C 28 08        	jr z,2F
1164  8E8E
1165  8E8E 2A 18 8C     	ld hl,(Techo_Scanlines_album_2)
1166  8E91 11 18 8C     	ld de,Techo_Scanlines_album_2
1167  8E94 18 06        	jr 3F
1168  8E96
1169  8E96 2A 16 8C     2 ld hl,(Techo_Scanlines_album)
1170  8E99 11 16 8C     	ld de,Techo_Scanlines_album
1171  8E9C
1172  8E9C              ; Diferencia.
1173  8E9C
1174  8E9C ED 42        3 sbc hl,bc
1175  8E9E
1176  8E9E C8           	ret z
1177  8E9F D8           	ret c
1178  8EA0
1179  8EA0              ; Nuevo techo, (más bajo que el anterior).
1180  8EA0              ; Fijamos nuevo techo y borramos bytes sobrantes.
1181  8EA0
1182  8EA0 EB           	ex de,hl
1183  8EA1
1184  8EA1 71           	ld (hl),c
1185  8EA2 2C           	inc l
1186  8EA3 70           	ld (hl),b
1187  8EA4
1188  8EA4 AF           	xor a
1189  8EA5 43           	ld b,e
1190  8EA6
1191  8EA6 2A 1D 8C     	ld hl,(Scanlines_album_SP)
1192  8EA9
1193  8EA9 77           1 ld (hl),a
1194  8EAA 23           	inc hl
1195  8EAB 10 FC        	djnz 1B
1196  8EAD
1197  8EAD              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1198  8EAD
1199  8EAD 21 23 8C     	ld hl,Ctrl_3
1200  8EB0 CB DE        	set 3,(hl)
1201  8EB2
1202  8EB2 C9           	ret
1203  8EB3
1204  8EB3              ; --------------------------------------------------------------------------------------------------------------
1205  8EB3              ;
1206  8EB3              ;	26/3/24
1207  8EB3
1208  8EB3              Recauda_informacion_de_entidad_en_curso
1209  8EB3
1210  8EB3              ; Almacena la Coordenada Y de la entidad en curso.
1211  8EB3
1212  8EB3              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1213  8EB3
1214  8EB3 3A B3 8B     	ld a,(Coordenada_y)
1215  8EB6 2A 1F 8C     	ld hl,(India_SP)
1216  8EB9 77           	ld (hl),a
1217  8EBA 2C           	inc l
1218  8EBB
1219  8EBB              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1220  8EBB
1221  8EBB ED 5B 1D 8C  	ld de,(Scanlines_album_SP)
1222  8EBF
1223  8EBF 73           	ld (hl),e
1224  8EC0 2C           	inc l
1225  8EC1 72           	ld (hl),d
1226  8EC2 2C           	inc l
1227  8EC3
1228  8EC3 22 1F 8C     	ld (India_SP),hl
1229  8EC6
1230  8EC6 C9           	ret
1231  8EC7
1232  8EC7              ; --------------------------------------------------------------------------------------------------------------
1233  8EC7              ;
1234  8EC7              ;	27/03/24
1235  8EC7              ;
1236  8EC7
1237  8EC7              Inicializa_India_y_limpia_Tabla_de_impresion
1238  8EC7
1239  8EC7 2A 1F 8C     	ld hl,(India_SP)
1240  8ECA 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1241  8ECD
1242  8ECD 79           	ld a,c
1243  8ECE 95           	sub l
1244  8ECF 28 06        	jr z,2F
1245  8ED1 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1246  8ED2              ;														; _ y pasamos a inicializar (India_SP).
1247  8ED2 AF           	xor a
1248  8ED3
1249  8ED3 77           1 ld (hl),a
1250  8ED4 2C           	inc l
1251  8ED5 10 FC        	djnz 1B												; Limpia Tabla.
1252  8ED7
1253  8ED7 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1254  8EDA 22 1F 8C     	ld (India_SP),hl
1255  8EDD
1256  8EDD C9           	ret
1257  8EDE
1258  8EDE              ; --------------------------------------------------------------------------------------------------------------
1259  8EDE              ;
1260  8EDE              ;	31/3/24
1261  8EDE
1262  8EDE              Ordena_tabla_de_impresion
1263  8EDE
1264  8EDE              ; 5794 T/states.
1265  8EDE              ; 6278 T/states.
1266  8EDE              ; 5310 T/states.
1267  8EDE
1268  8EDE              ; Inicializamos punteros (India_SP) e (India_2_SP).
1269  8EDE              ; Inicializamos contador de comparaciones, [C].
1270  8EDE              ; Cargamos los registros A y B para efectuar comparación.
1271  8EDE
1272  8EDE FD 2E 00     	ld iyl,0
1273  8EE1
1274  8EE1 3A F9 8B     	ld a,(Entidades_en_curso)
1275  8EE4 FE 04        	cp 4 	;	4
1276  8EE6 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1277  8EE7
1278  8EE7 3D           	dec a
1279  8EE8 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1280  8EE9 51           	ld d,c 										; Copia de respaldo.
1281  8EEA
1282  8EEA 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1283  8EEB
1284  8EEB 21 03 89     	ld hl,Tabla_de_pintado+3
1285  8EEE 46           	ld b,(hl)
1286  8EEF 22 21 8C     	ld (India_2_SP),hl
1287  8EF2
1288  8EF2 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1289  8EF3 DC 1B 8F     	call c, Avanza_India_2_SP
1290  8EF6 CC 1B 8F     	call z, Avanza_India_2_SP
1291  8EF9
1292  8EF9 FD 2D        	dec iyl
1293  8EFB 28 18        	jr z,2F
1294  8EFD
1295  8EFD
1296  8EFD              ; --------------------------------------------------------------------------------------------------------------
1297  8EFD              ;
1298  8EFD              ;	7/4/24
1299  8EFD
1300  8EFD              Trueque
1301  8EFD
1302  8EFD              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1303  8EFD              ;  			A contiene en nº de fila de (India_SP).
1304  8EFD              ;			HL contiene (India_2_SP).
1305  8EFD
1306  8EFD D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1307  8EFE E5           	push hl										; Preservo (India_2_SP).
1308  8EFF
1309  8EFF ED 5B 1F 8C  	ld de,(India_SP)
1310  8F03 EB           	ex de,hl
1311  8F04 70           	ld (hl),b
1312  8F05 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1313  8F06
1314  8F06 CD 47 8F     	call Intercambia_1_byte
1315  8F09 CD 47 8F     	call Intercambia_1_byte
1316  8F0C
1317  8F0C
1318  8F0C              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1319  8F0C              ; Recuperamos (India_2_SP) en HL.
1320  8F0C
1321  8F0C 2A 1F 8C     	ld hl,(India_SP)
1322  8F0F 7E           	ld a,(hl)
1323  8F10
1324  8F10 E1           	pop hl
1325  8F11 D1           	pop de
1326  8F12
1327  8F12              ; --------------------------------------------------------------------------------------------------------------
1328  8F12
1329  8F12 CD 1B 8F     	call Avanza_India_2_SP
1330  8F15
1331  8F15 14           2 inc d
1332  8F16 15           	dec d
1333  8F17 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1334  8F18 18 D8        	jr 1B
1335  8F1A
1336  8F1A C9           	ret
1337  8F1B
1338  8F1B              ; ----- ----- ----- ----- -----
1339  8F1B
1340  8F1B              Avanza_India_2_SP
1341  8F1B
1342  8F1B 0D           	dec c
1343  8F1C 28 0A        	jr z,Avanza_punteros_indios
1344  8F1E
1345  8F1E FD 2C        	inc iyl
1346  8F20
1347  8F20 2C           	inc l
1348  8F21 2C           	inc l
1349  8F22 2C           	inc l
1350  8F23
1351  8F23 46           	ld b,(hl)
1352  8F24 22 21 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1353  8F27
1354  8F27 C9           	ret
1355  8F28
1356  8F28              ; ----- ----- ----- ----- -----
1357  8F28
1358  8F28              Avanza_punteros_indios
1359  8F28
1360  8F28 15           	dec d
1361  8F29 28 15        	jr z,Prepara_salida
1362  8F2B
1363  8F2B 4A           	ld c,d
1364  8F2C
1365  8F2C 2A 1F 8C     	ld hl,(India_SP)
1366  8F2F 2C           	inc l
1367  8F30 2C           	inc l
1368  8F31 2C           	inc l
1369  8F32 7E           	ld a,(hl)
1370  8F33 22 1F 8C     	ld (India_SP),hl
1371  8F36
1372  8F36 2C           	inc l
1373  8F37 2C           	inc l
1374  8F38 2C           	inc l
1375  8F39 46           	ld b,(hl)
1376  8F3A 22 21 8C     	ld (India_2_SP),hl
1377  8F3D
1378  8F3D FD 2C        	inc iyl
1379  8F3F
1380  8F3F C9           	ret
1381  8F40
1382  8F40              Prepara_salida
1383  8F40
1384  8F40 21 00 89     	ld hl,Tabla_de_pintado
1385  8F43 22 1F 8C     	ld (India_SP),hl
1386  8F46 C9           	ret
1387  8F47
1388  8F47
1389  8F47 2C           Intercambia_1_byte inc l
1390  8F48 1C           	inc e
1391  8F49 46           	ld b,(hl)
1392  8F4A 1A           	ld a,(de)
1393  8F4B EB           	ex de,hl
1394  8F4C 70           	ld (hl),b
1395  8F4D 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1396  8F4E C9           	ret
1397  8F4F
1398  8F4F              ; -----------------------------------------------------------------------------------
1399  8F4F              ;
1400  8F4F              ;	20/01/24
1401  8F4F              ;
1402  8F4F              ;
1403  8F4F
1404  8F4F              Construye_movimientos_masticados_entidad
1405  8F4F
1406  8F4F 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1407  8F52 E5           	push hl
1408  8F53 CD 96 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1409  8F56              ;															; _ el (Contador_de_mov_masticados).
1410  8F56 CD 5F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1411  8F59              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1412  8F59 CD 8C 99     	call Recompone_posicion_inicio
1413  8F5C
1414  8F5C CD BC 96     1 call Draw
1415  8F5F CD 7B 8F     	call Guarda_movimiento_masticado
1416  8F62
1417  8F62 CD 39 9D     	call Movimiento
1418  8F65
1419  8F65 3A 23 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1420  8F68 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1421  8F6A 28 F0        	jr z,1B
1422  8F6C
1423  8F6C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1424  8F6C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1425  8F6C
1426  8F6C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1427  8F6D 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1428  8F70
1429  8F70              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1430  8F70
1431  8F70 CD 9D 9E     	call Situa_en_contador_general_de_mov_masticados
1432  8F73
1433  8F73              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1434  8F73              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1435  8F73
1436  8F73 ED 4B BA 8B  	ld bc,(Contador_de_mov_masticados)
1437  8F77
1438  8F77 71           	ld (hl),c
1439  8F78 23           	inc hl
1440  8F79 70           	ld (hl),b
1441  8F7A
1442  8F7A C9           	ret
1443  8F7B
1444  8F7B              ; -----------------------------------------------------------------------------------
1445  8F7B              ;
1446  8F7B              ;	28/12/23
1447  8F7B              ;
1448  8F7B              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1449  8F7B              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1450  8F7B
1451  8F7B              Guarda_movimiento_masticado
1452  8F7B
1453  8F7B ED 73 FE 8B  	ld (Stack),sp
1454  8F7F ED 7B B8 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1455  8F83
1456  8F83 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1457  8F85 FD E5            push iy 												; Pushea Puntero_objeto.
1458  8F87
1459  8F87 ED 7B FE 8B      ld sp,(Stack)
1460  8F8B
1461  8F8B 2A BA 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1462  8F8E 23           	inc hl
1463  8F8F 22 BA 8B     	ld (Contador_de_mov_masticados),hl
1464  8F92
1465  8F92 CD 96 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1466  8F95              ;															; _ el (Contador_de_mov_masticados).
1467  8F95 C9               ret
1468  8F96
1469  8F96              ; --------------------------------------------------------------------------------------------------------------
1470  8F96              ;
1471  8F96              ;	12/1/24
1472  8F96              ;
1473  8F96              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1474  8F96
1475  8F96              Actualiza_Puntero_de_almacen_de_mov_masticados
1476  8F96
1477  8F96 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1478  8F99 01 04 00     	ld bc,4
1479  8F9C A7           	and a
1480  8F9D ED 4A        	adc hl,bc
1481  8F9F 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1482  8FA2 C9           	ret
1483  8FA3
1484  8FA3              ; --------------------------------------------------------------------------------------------------------------
1485  8FA3              ;
1486  8FA3              ;	24/03/24
1487  8FA3              ;
1488  8FA3              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1489  8FA3              ;
1490  8FA3              ;	IX contiene el puntero de impresión.
1491  8FA3              ;	DE contiene (Puntero_objeto).
1492  8FA3
1493  8FA3
1494  8FA3              Cargamos_registros_con_mov_masticado
1495  8FA3
1496  8FA3 ED 73 FE 8B  	ld (Stack),sp
1497  8FA7 ED 7B B8 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1498  8FAB
1499  8FAB D1           	pop de 															; DE contiene Puntero_objeto
1500  8FAC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1501  8FAE
1502  8FAE ED 73 B8 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1503  8FB2 ED 7B FE 8B  	ld sp,(Stack)
1504  8FB6
1505  8FB6 7B           	ld a,e
1506  8FB7 82           	add d															; Comprueba si ya no hay datos en el almacén.
1507  8FB8
1508  8FB8 CC 4F 93     	call z,Reinicia_entidad_maliciosa
1509  8FBB
1510  8FBB C9           	ret
1511  8FBC
1512  8FBC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1513  8FBC              ;
1514  8FBC              ;	22/7/24
1515  8FBC
1516  8FBC              Cargamos_registros_con_explosion
1517  8FBC
1518  8FBC
1519  8FBC 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1520  8FBF CD 59 90     	call Extrae_address
1521  8FC2
1522  8FC2 5D           	ld e,l
1523  8FC3 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1524  8FC4
1525  8FC4 DD 2A B6 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1526  8FC8
1527  8FC8 C9           	ret
1528  8FC9
1529  8FC9
1530  8FC9              Cargamos_registros_con_explosion_Amadeus
1531  8FC9
1532  8FC9 2A 6D 89     	ld hl,(Pamm_Amadeus)
1533  8FCC CD 59 90     	call Extrae_address
1534  8FCF
1535  8FCF 5D           	ld e,l
1536  8FD0 54           	ld d,h
1537  8FD1
1538  8FD1 DD 2A 6B 89  	ld ix,(p.imp.amadeus)
1539  8FD5
1540  8FD5 C9           	ret
1541  8FD6
1542  8FD6              ; --------------------------------------------------------------------------------------------------------------
1543  8FD6              ;
1544  8FD6              ;	17/06/24
1545  8FD6              ;
1546  8FD6              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1547  8FD6              ;
1548  8FD6              ;	IX contiene el puntero de impresión.
1549  8FD6              ;	DE contiene (Puntero_objeto).
1550  8FD6
1551  8FD6
1552  8FD6              Cargamos_registros_con_mov_masticado_Amadeus
1553  8FD6
1554  8FD6 ED 73 FE 8B  	ld (Stack),sp
1555  8FDA ED 7B 6D 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1556  8FDE D1           	pop de 															; DE contiene Puntero_objeto
1557  8FDF DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1558  8FE1 DD 22 6B 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1559  8FE5 ED 7B FE 8B  	ld sp,(Stack)
1560  8FE9 C9           	ret
1561  8FEA
1562  8FEA              ; ---------------------------------------------------------------------------------------------------------------------
1563  8FEA              ;
1564  8FEA              ;	18/6/24
1565  8FEA              ;
1566  8FEA              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1567  8FEA
1568  8FEA              Genera_datos_de_impresion_Amadeus
1569  8FEA
1570  8FEA 3A 6A 89     	ld a,(Impacto_Amadeus)
1571  8FED A7           	and a
1572  8FEE 20 03        	jr nz,1F
1573  8FF0
1574  8FF0              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1575  8FF0              ; _apuntando a la correspondiente explosión.
1576  8FF0
1577  8FF0 CD D6 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1578  8FF3
1579  8FF3 DD 7D        1 ld a,ixl
1580  8FF5 E6 1F        	and $1f
1581  8FF7 32 67 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1582  8FFA
1583  8FFA 2A 1D 8C     	ld hl,(Scanlines_album_SP)
1584  8FFD E5           	push hl
1585  8FFE
1586  8FFE 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
1587  9001 22 1D 8C     	ld (Scanlines_album_SP),hl
1588  9004
1589  9004 CD A4 94     	call Genera_datos_de_impresion
1590  9007
1591  9007 E1           	pop hl
1592  9008 22 1D 8C     	ld (Scanlines_album_SP),hl
1593  900B
1594  900B C9           	ret
1595  900C
1596  900C              ; ---------------------------------------------------------------------------------------------------------------------
1597  900C              ;
1598  900C              ;	13/03/24
1599  900C              ;
1600  900C              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1601  900C
1602  900C              Inicia_albumes_de_lineas
1603  900C
1604  900C 21 00 80     	ld hl,Scanlines_album
1605  900F 22 02 8C     	ld (Album_de_pintado),hl
1606  9012 22 1D 8C     	ld (Scanlines_album_SP),hl
1607  9015
1608  9015 21 1A 81     	ld hl,Scanlines_album_2
1609  9018 22 04 8C     	ld (Album_de_borrado),hl
1610  901B
1611  901B C9           	ret
1612  901C
1613  901C              Inicia_albumes_de_lineas_Amadeus
1614  901C
1615  901C 21 34 82     	ld hl,Amadeus_scanlines_album
1616  901F 22 06 8C     	ld (Album_de_pintado_Amadeus),hl
1617  9022 21 58 82     	ld hl,Amadeus_scanlines_album_2
1618  9025 22 08 8C     	ld (Album_de_borrado_Amadeus),hl
1619  9028
1620  9028 C9           	ret
1621  9029
1622  9029              Inicia_albumes_de_disparos
1623  9029
1624  9029 21 7C 82     	ld hl,Disparos_scanlines_album
1625  902C 22 0A 8C     	ld (Album_de_pintado_disparos),hl
1626  902F 21 B8 82     	ld hl,Disparos_scanlines_album_2
1627  9032 22 0C 8C     	ld (Album_de_borrado_disparos),hl
1628  9035
1629  9035 21 7C 82     	ld hl,Disparos_scanlines_album
1630  9038 22 0E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1631  903B
1632  903B C9           	ret
1633  903C
1634  903C              ; ---------------------------------------------------------------------------------------------------------------------
1635  903C              ;
1636  903C              ; 8/1/23
1637  903C              ;
1638  903C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1639  903C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1640  903C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1641  903C
1642  903C              ; Destruye HL y DE !!!!!
1643  903C
1644  903C              Inicia_punteros_de_cajas
1645  903C
1646  903C 21 54 89     	ld hl,Indice_de_cajas_de_entidades
1647  903F CD 59 90         call Extrae_address
1648  9042 22 F1 8B         ld (Puntero_store_caja),hl
1649  9045 21 56 89     	ld hl,Indice_de_cajas_de_entidades+2
1650  9048 22 F5 8B     	ld (Indice_restore_caja),hl
1651  904B CD 59 90     	call Extrae_address
1652  904E 22 F3 8B     	ld (Puntero_restore_caja),hl
1653  9051 C9               ret
1654  9052
1655  9052              ; *************************************************************************************************************************************************************
1656  9052              ;
1657  9052              ; 8/1/23
1658  9052              ;
1659  9052              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1660  9052
1661  9052 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1662  9055 22 26 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1663  9058 C9           	ret
1664  9059
1665  9059              ; *************************************************************************************************************************************************************
1666  9059              ;
1667  9059              ; 20/10/22
1668  9059              ;
1669  9059              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1670  9059              ;
1671  9059              ; Destruye el puntero y DE !!!!!
1672  9059
1673  9059 5E           Extrae_address ld e,(hl)
1674  905A 23           	inc hl
1675  905B 56           	ld d,(hl)
1676  905C 2B           	dec hl
1677  905D EB           	ex de,hl
1678  905E C9           	ret
1679  905F
1680  905F              ; *************************************************************************************************************************************************************
1681  905F              ;
1682  905F              ;	20/1/24
1683  905F              ;
1684  905F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1685  905F              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1686  905F              ;
1687  905F              ;   Destruye HL y BC !!!!!,
1688  905F              ;
1689  905F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1690  905F              ;					"0" ..... Izquierda.
1691  905F
1692  905F              Inicia_Puntero_objeto
1693  905F
1694  905F 3A D0 8B     	ld a,(Cuad_objeto)
1695  9062 E6 01        	and 1
1696  9064 F5           	push af
1697  9065 CC 81 90     	call z,Inicia_puntero_objeto_izq
1698  9068 F1           	pop af
1699  9069 C8           	ret z
1700  906A CD 6E 90     	call Inicia_puntero_objeto_der
1701  906D C9           	ret
1702  906E
1703  906E              ; Arrancamos desde la parte izquierda de la pantalla.
1704  906E              ; Iniciamos (Indice_Sprite_der).
1705  906E
1706  906E 2A C6 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1707  9071 22 CA 8B     	ld (Puntero_DESPLZ_der),hl
1708  9074 CD 59 90     	call Extrae_address
1709  9077 22 C3 8B     	ld (Puntero_objeto),hl
1710  907A
1711  907A 2A C8 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1712  907D 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
1713  9080 C9           	ret
1714  9081
1715  9081              ; Arrancamos desde la parte derecha de la pantalla.
1716  9081              ; Iniciamos (Indice_Sprite_izq).
1717  9081
1718  9081 2A C8 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1719  9084 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
1720  9087 CD 59 90     	call Extrae_address
1721  908A 22 C3 8B     	ld (Puntero_objeto),hl
1722  908D
1723  908D 2A C6 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1724  9090 22 CA 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1725  9093 C9           	ret
1726  9094
1727  9094              ; **************************************************************************************************
1728  9094              ;
1729  9094              ;	06/07/24
1730  9094              ;
1731  9094              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1732  9094
1733  9094              Restore_entidad
1734  9094
1735  9094 2A F1 8B     	ld hl,(Puntero_store_caja)
1736  9097 7E           	ld a,(hl)
1737  9098 A7           	and a
1738  9099 CC A7 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1739  909C 28 F6        	jr z,Restore_entidad
1740  909E
1741  909E 11 B1 8B     	ld de,Bandeja_DRAW
1742  90A1 01 0C 00     	ld bc,12
1743  90A4 ED B0        	ldir
1744  90A6 C9           	ret
1745  90A7
1746  90A7              ; **************************************************************************************************
1747  90A7              ;
1748  90A7              ;	08/05/23
1749  90A7              ;
1750  90A7              ;	Incrementamos los dos punteros de entidades. (+1).
1751  90A7
1752  90A7              Incrementa_punteros_de_cajas
1753  90A7
1754  90A7 2A F3 8B     	ld hl,(Puntero_restore_caja)
1755  90AA 22 F1 8B     	ld (Puntero_store_caja),hl
1756  90AD 2A F5 8B     	ld hl,(Indice_restore_caja)
1757  90B0 23           	inc hl
1758  90B1 23           	inc hl
1759  90B2 22 F5 8B     	ld (Indice_restore_caja),hl
1760  90B5 CD 59 90         call Extrae_address
1761  90B8 22 F3 8B         ld (Puntero_restore_caja),hl
1762  90BB C9               ret
1763  90BC
1764  90BC              ; -----------------------------------------------------------
1765  90BC
1766  90BC              ; Teclado.
1767  90BC
1768  90BC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1769  90BE DB FE        	in a,($fe)
1770  90C0 E6 01        	and $01
1771  90C2 28 02        	jr z,1f
1772  90C4 18 F6        	jr Pulsa_ENTER
1773  90C6 C9           1 ret
1774  90C7
1775  90C7              ; **************************************************************************************************
1776  90C7              ;
1777  90C7              ; Temporización.
1778  90C7
1779  90C7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1780  90C7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1781  90C7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1782  90C7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1783  90C7
1784  90C7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1785  90C7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1786  90C7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1787  90C7
1788  90C7              ; A partir de $4f61 no hace falta DELAY.
1789  90C7
1790  90C7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1791  90C7
1792  90C7              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1793  90C7              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1794  90C7              ;	LD A,B
1795  90C7              ;	AND A
1796  90C7              ;	JR NZ,wait
1797  90C7              ;	RET
1798  90C7
1799  90C7              ; ---------------------------------------------------------------------------------------------------------------
1800  90C7              ;
1801  90C7              ;	13/07/24
1802  90C7              ;
1803  90C7
1804  90C7              Inicia_Shield
1805  90C7
1806  90C7 21 42 8C     	ld hl,Datos_Shield
1807  90CA 22 46 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1808  90CD
1809  90CD 7E           	ld a,(hl)
1810  90CE 32 49 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1811  90D1
1812  90D1 3E 01        	ld a,1
1813  90D3 32 4A 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1814  90D6
1815  90D6 C9           	ret
1816  90D7
1817  90D7              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1818  90D7              ;
1819  90D7              ;	4/6/24
1820  90D7              ;
1821  90D7              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1822  90D7              ;
1823  90D7              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1824  90D7              ;
1825  90D7
1826  90D7              Actualiza_pantalla
1827  90D7
1828  90D7 3E 02        	ld a,2
1829  90D9 D3 FE        	out ($fe),a
1830  90DB
1831  90DB 3A 23 8C     	ld a,(Ctrl_3)
1832  90DE CB 57        	bit 2,a
1833  90E0 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1834  90E2
1835  90E2              Borrando_entidades
1836  90E2
1837  90E2 2A 1D 8C     	ld hl,(Scanlines_album_SP)
1838  90E5 CD 59 90     	call Extrae_address
1839  90E8 24           	inc h
1840  90E9 25           	dec h
1841  90EA 28 05        	jr z,Pintando_entidades
1842  90EC CD 99 95     	call Pinta_Sprites
1843  90EF 18 F1        	jr Borrando_entidades
1844  90F1
1845  90F1              Pintando_entidades
1846  90F1
1847  90F1 2A 1F 8C     	ld hl,(India_SP)
1848  90F4 2C           	inc l
1849  90F5 CD 59 90     	call Extrae_address
1850  90F8 24           	inc h
1851  90F9 25           	dec h
1852  90FA 28 0E        	jr z,Ejecuta_escudo
1853  90FC 1C           	inc e
1854  90FD 1C           	inc e
1855  90FE ED 53 1F 8C  	ld (India_SP),de
1856  9102 CD 59 90     	call Extrae_address
1857  9105 CD 99 95     	call Pinta_Sprites
1858  9108 18 E7        	jr Pintando_entidades
1859  910A
1860  910A              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1861  910A
1862  910A              Ejecuta_escudo
1863  910A
1864  910A 3A 48 8C     	ld a,(Shield)
1865  910D A7           	and a
1866  910E 20 2F        	jr nz,Aplica_Shield
1867  9110
1868  9110              Borrando_Amadeus
1869  9110
1870  9110 21 23 8C     	ld hl,Ctrl_3
1871  9113 CB 6E        	bit 5,(hl)
1872  9115 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1873  9117
1874  9117 2A 08 8C     	ld hl,(Album_de_borrado_Amadeus)
1875  911A CD 59 90     	call Extrae_address
1876  911D 24           	inc h
1877  911E 25           	dec h
1878  911F 28 03        	jr z,Pintando_Amadeus
1879  9121 CD 99 95     	call Pinta_Sprites
1880  9124
1881  9124              Pintando_Amadeus
1882  9124
1883  9124 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
1884  9127 CD 59 90     	call Extrae_address
1885  912A 24           	inc h
1886  912B 25           	dec h
1887  912C 28 03        	jr z,1F
1888  912E CD 99 95     	call Pinta_Sprites
1889  9131
1890  9131              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1891  9131
1892  9131 21 23 8C     1 ld hl,Ctrl_3
1893  9134 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1894  9136 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1895  9138 CB AE        	res 5,(hl)
1896  913A
1897  913A 3E 01        	ld a,1												; Borde azul.
1898  913C D3 FE        	out ($fe),a
1899  913E
1900  913E C9           	ret
1901  913F
1902  913F              Aplica_Shield
1903  913F
1904  913F              ;	Bit 1 "1" (Shield_3) Sólo borra.
1905  913F              ;		  "0"     ""     Borra/Pinta.
1906  913F              ;	Bit 2    ""  RET.	 No borra, no pinta.
1907  913F
1908  913F 21 4A 8C     	ld hl,Shield_3
1909  9142
1910  9142 CB 5E        	bit 3,(hl)
1911  9144 20 DE        	jr nz,Pintando_Amadeus
1912  9146
1913  9146 CB 56        	bit 2,(hl)
1914  9148 20 E7        	jr nz,1B
1915  914A
1916  914A CB 4E        	bit 1,(hl)
1917  914C C4 53 91     	call nz,Borra_Amadeus_shield
1918  914F
1919  914F 28 BF        	jr z,Borrando_Amadeus
1920  9151 18 DE        	jr 1B
1921  9153
1922  9153              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1923  9153
1924  9153              Borra_Amadeus_shield
1925  9153
1926  9153 3A 23 8C     	ld a,(Ctrl_3)
1927  9156 CB 6F        	bit 5,a
1928  9158 28 08        	jr z,1F
1929  915A
1930  915A 2A 08 8C     	ld hl,(Album_de_borrado_Amadeus)
1931  915D CD 59 90     	call Extrae_address
1932  9160 18 06        	jr 2F
1933  9162
1934  9162 2A 06 8C     1 ld hl,(Album_de_pintado_Amadeus)
1935  9165 CD 59 90     	call Extrae_address
1936  9168
1937  9168 CD 99 95     2 call Pinta_Sprites
1938  916B
1939  916B AF           	xor a
1940  916C 3C           	inc a											; Asegura NZ en la salida de la rutina.
1941  916D
1942  916D C9           	ret
1943  916E
1944  916E              Pinta_Amadeus_shield
1945  916E
1946  916E 2A 06 8C     	ld hl,(Album_de_pintado_Amadeus)
1947  9171 CD 59 90     	call Extrae_address
1948  9174 CD 99 95     	call Pinta_Sprites
1949  9177
1950  9177 AF           	xor a
1951  9178 3C           	inc a											; Asegura NZ en la salida de la rutina.
1952  9179
1953  9179 C9           	ret
1954  917A
1955  917A              Borra_Pinta_Amadeus_shield
1956  917A
1957  917A CD 53 91     	call Borra_Amadeus_shield
1958  917D CD 6E 91     	call Pinta_Amadeus_shield
1959  9180 C9           	ret
1960  9181
1961  9181              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1962  9181              ;
1963  9181              ;	19/6/24
1964  9181              ;
1965  9181
1966  9181              Teclado
1967  9181
1968  9181              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1969  9181
1970  9181 3E F7        	ld a,$f7												; "5" para disparar.
1971  9183 DB FE        	in a,($fe)
1972  9185 E6 10        	and $10
1973  9187
1974  9187 CC 03 A0     	call z,Genera_disparo_Amadeus
1975  918A
1976  918A 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1977  918C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1978  918E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1979  9190 CC 06 9D         call z,Amadeus_a_izquierda
1980  9193
1981  9193 3E F7        	ld a,$f7
1982  9195 DB FE        	in a,($fe)
1983  9197 E6 01        	and $01
1984  9199 C8           	ret z
1985  919A
1986  919A 3E F7        	ld a,$f7
1987  919C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1988  919E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1989  91A0 CC 1E 9D     	call z,Amadeus_a_derecha
1990  91A3
1991  91A3 C9           	ret
1992  91A4
1993  91A4              ; ------------------------------------------------------------------------------------------------------------------------
1994  91A4              ;
1995  91A4              ;	06/07/24
1996  91A4              ;
1997  91A4
1998  91A4              Genera_explosion
1999  91A4
2000  91A4 21 35 8C     	ld hl,Clock_explosion
2001  91A7 35           	dec (hl)
2002  91A8 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2003  91AA
2004  91AA              Borra_entidad_colisionada
2005  91AA
2006  91AA CD B3 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2007  91AD CD BC 8F     	call Cargamos_registros_con_explosion
2008  91B0 CD A4 94     	call Genera_datos_de_impresion
2009  91B3
2010  91B3 AF           	xor a
2011  91B4 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2012  91B5
2013  91B5 C9           	ret
2014  91B6
2015  91B6              Siguiente_frame_explosion
2016  91B6
2017  91B6 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2018  91B8
2019  91B8              ; Avanza Frame de explosión.
2020  91B8
2021  91B8 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2022  91BB 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2023  91BE
2024  91BE 79           	ld a,c
2025  91BF 95           	sub l
2026  91C0 20 0B        	jr nz,1F
2027  91C2
2028  91C2              ; Fín de la entidad !!!!!!!!!!!!!
2029  91C2
2030  91C2 21 F8 8B     	ld hl,Numero_parcial_de_entidades
2031  91C5 35           	dec (hl)
2032  91C6 23           	inc hl
2033  91C7 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2034  91C8
2035  91C8 CD 24 93     	call Limpiamos_bandeja_DRAW
2036  91CB 18 DD        	jr Borra_entidad_colisionada
2037  91CD
2038  91CD 23           1 inc hl
2039  91CE 23           	inc hl
2040  91CF 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2041  91D2 18 D6        	jr Borra_entidad_colisionada
2042  91D4
2043  91D4              ; ----- ----- ----- ----- -----
2044  91D4
2045  91D4              Genera_explosion_Amadeus
2046  91D4
2047  91D4 21 36 8C     	ld hl,Clock_explosion_Amadeus
2048  91D7 35           	dec (hl)
2049  91D8 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2050  91DA
2051  91DA              Borra_Amadeus_impactado
2052  91DA
2053  91DA CD 2A 8E     	call Change_Amadeus
2054  91DD CD C9 8F     	call Cargamos_registros_con_explosion_Amadeus
2055  91E0 CD EA 8F     	call Genera_datos_de_impresion_Amadeus
2056  91E3
2057  91E3 21 23 8C     	ld hl,Ctrl_3
2058  91E6 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2059  91E8
2060  91E8 AF           	xor a
2061  91E9 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2062  91EA
2063  91EA C9           	ret
2064  91EB
2065  91EB              Siguiente_frame_explosion_Amadeus
2066  91EB
2067  91EB 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2068  91ED
2069  91ED              ; Avanza Frame de explosión.
2070  91ED
2071  91ED 2A 6D 89     	ld hl,(Pamm_Amadeus)
2072  91F0 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2073  91F3
2074  91F3 79           	ld a,c
2075  91F4 95           	sub l
2076  91F5 20 0B        	jr nz,1F
2077  91F7
2078  91F7              ; Fín de Amadeus !!!!!!!!!!!!!
2079  91F7              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2080  91F7
2081  91F7 AF           	xor a
2082  91F8 32 6A 89     	ld (Impacto_Amadeus),a
2083  91FB 21 23 8C     	ld hl,Ctrl_3
2084  91FE CB F6        	set 6,(hl)
2085  9200
2086  9200 18 D8        	jr Borra_Amadeus_impactado
2087  9202
2088  9202 23           1 inc hl
2089  9203 23           	inc hl
2090  9204 22 6D 89     	ld (Pamm_Amadeus),hl
2091  9207 18 D1        	jr Borra_Amadeus_impactado
2092  9209
2093  9209              ; ---------------------------------------------------------------
2094  9209
2095  9209              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9209              ; ******************************************************************************************************************************************************************************************
   2+ 9209              ;
   3+ 9209              ;   21/04/24
   4+ 9209              ;
   5+ 9209              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9209              ;   (XOR) bit a bit.
   7+ 9209              ;
   8+ 9209              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9209
  10+ 9209              Derivando_RND
  11+ 9209
  12+ 9209 21 F6 88         ld hl,Numeros_aleatorios
  13+ 920C
  14+ 920C ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 920E C5               push bc
  16+ 920F              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 920F 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9212              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9212
  20+ 9212 A7           6 and a                                 ; Carry a "0".
  21+ 9213 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9215 30 02            jr nc,1F
  23+ 9217
  24+ 9217 CB C1            set 0,c
  25+ 9219
  26+ 9219 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 921A E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 921C 5F               ld e,a
  29+ 921D
  30+ 921D 7A               ld a,d
  31+ 921E E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9220 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9222
  34+ 9222 CB 3F            srl a
  35+ 9224
  36+ 9224 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9225
  38+ 9225 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9226 28 04            jr z,4F
  40+ 9228
  41+ 9228 CB FF            set 7,a
  42+ 922A 18 02            jr 5F
  43+ 922C
  44+ 922C CB BF        4 res 7,a
  45+ 922E
  46+ 922E CB 21        5 sla c
  47+ 9230 10 E0            djnz 6B
  48+ 9232
  49+ 9232 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9233
  51+ 9233 77               ld (hl),a
  52+ 9234 23               inc hl
  53+ 9235 C1               pop bc
  54+ 9236 10 D4            djnz 3B
  55+ 9238
  56+ 9238 C9               ret
  57+ 9239
  58+ 9239
  59+ 9239
# file closed: RND_Derivando.asm
2096  9239              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9239              ;---------------------------------------------------------------------------------------------------------------
   2+ 9239              ;
   3+ 9239              ;   8/3/24
   4+ 9239              ;
   5+ 9239              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9239              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9239              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9239              ;	_ de la 1ª entidad del Nivel.
   9+ 9239              ;
  10+ 9239              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9239
  12+ 9239              ;	MODIFICA: HL,DE y A.
  13+ 9239              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9239
  15+ 9239              Inicializa_Nivel
  16+ 9239
  17+ 9239 2A 3E 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 923C CD 59 90     	call Extrae_address
  19+ 923F 7E           	ld a,(hl)
  20+ 9240 32 F7 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9243 23           	inc hl
  22+ 9244 CD 51 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9247 22 40 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 924A CD 5A 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 924D
  26+ 924D CD 6B 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9250 C9           	ret
  28+ 9251
  29+ 9251              ; ----------------------
  30+ 9251
  31+ 9251 11 D6 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9254 01 04 00     	ld bc,4
  33+ 9257 ED B0        	ldir
  34+ 9259 C9           	ret
  35+ 925A
  36+ 925A 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 925B CD F5 93         call Calcula_salto_en_BC
  38+ 925E 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9261 A7               and a
  40+ 9262 ED 4A            adc hl,bc
  41+ 9264 CD 59 90         call Extrae_address
  42+ 9267 22 E2 8B         ld (Puntero_indice_mov),hl
  43+ 926A C9               ret
  44+ 926B
  45+ 926B 3A B1 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 926E CD F5 93     	call Calcula_salto_en_BC
  47+ 9271 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9274 A7               and a
  49+ 9275 ED 4A            adc hl,bc
  50+ 9277 CD 59 90         call Extrae_address
  51+ 927A 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 927D C9           	ret
  53+ 927E
  54+ 927E              ;---------------------------------------------------------------------------------------------------------------
  55+ 927E              ;
  56+ 927E              ;   5/1/24
  57+ 927E              ;
  58+ 927E              ;	Destruye A,BC,HL,DE
  59+ 927E
  60+ 927E              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 927E              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 927E
  63+ 927E              Inicia_Entidades
  64+ 927E
  65+ 927E              ; Preparamos los punteros de las cajas de entidades:
  66+ 927E
  67+ 927E CD 3C 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9281              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9281 CD 3D 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9284
  71+ 9284 2A 40 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9287
  73+ 9287 22 40 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 928A
  75+ 928A CD A3 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 928D
  77+ 928D 2A 40 8C     	ld hl,(Datos_de_nivel)
  78+ 9290
  79+ 9290              ; En este punto:
  80+ 9290              ;
  81+ 9290              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9290              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9290
  84+ 9290 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9291
  86+ 9291 7E           	ld a,(hl)
  87+ 9292 CD 0F 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9295
  89+ 9295 CD 07 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9298
  91+ 9298              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9298
  93+ 9298 CD C5 93     	call Busca_mov_masticados_segun_tipo
  94+ 929B
  95+ 929B A7           	and a
  96+ 929C 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 929E
  98+ 929E              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 929E
 100+ 929E              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 929E              ;	_ de este tipo de entidad.
 102+ 929E
 103+ 929E CD 9D 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92A1 CD AA 9E     	call Transfiere_datos_de_contadores
 105+ 92A4
 106+ 92A4 18 06        	jr 4F
 107+ 92A6
 108+ 92A6 CD 4F 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92A9
 110+ 92A9              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92A9              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92A9              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92A9              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92A9              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92A9
 116+ 92A9 CD 83 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92AC              ;																; _ Mov_masticados ya generados.
 118+ 92AC
 119+ 92AC CD A3 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92AF
 121+ 92AF DD E5        	push ix
 122+ 92B1 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92B2
 124+ 92B2 D5           	push de
 125+ 92B3 CD 78 94     	call Genera_coordenadas
 126+ 92B6
 127+ 92B6 ED 5B 1D 8C  	ld de,(Scanlines_album_SP)
 128+ 92BA CD B3 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92BD D1           	pop de
 130+ 92BE
 131+ 92BE CD A4 94     	call Genera_datos_de_impresion
 132+ 92C1              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92C1              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92C1              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92C1              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92C1
 137+ 92C1 CD 47 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92C4
 139+ 92C4              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92C4
 141+ 92C4 ED 5B F1 8B  	ld de,(Puntero_store_caja)
 142+ 92C8 CD 34 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92CB
 144+ 92CB CD 24 93     	call Limpiamos_bandeja_DRAW
 145+ 92CE CD A7 90     	call Incrementa_punteros_de_cajas
 146+ 92D1
 147+ 92D1              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92D1              ; _ entidad del Nivel.
 149+ 92D1
 150+ 92D1 3A 24 8C     	ld a,(Ctrl_4)
 151+ 92D4 E6 F0        	and $f0
 152+ 92D6 32 24 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92D9
 154+ 92D9              ; Siguiente entidad del Nivel.
 155+ 92D9
 156+ 92D9 2A 40 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92DC 23           	inc hl 														; _ entidad del Nivel.
 158+ 92DD
 159+ 92DD C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92DE
 161+ 92DE 10 A7        	djnz 2B
 162+ 92E0
 163+ 92E0 C9           	ret
 164+ 92E1
 165+ 92E1              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92E1              ;
 167+ 92E1              ;	27/5/24
 168+ 92E1              ;
 169+ 92E1              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92E1              ;
 171+ 92E1
 172+ 92E1              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92E1              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92E1
 175+ 92E1 21 E4 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92E4 CD 07 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92E7
 178+ 92E7
 179+ 92E7              Construye_movimientos_masticados_Amadeus
 180+ 92E7
 181+ 92E7 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92EA CD 96 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92ED              ;															; _ el (Contador_de_mov_masticados).
 184+ 92ED CD 5F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92F0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92F0
 187+ 92F0              ; Generamos movimientos masticados de Amadeus.
 188+ 92F0
 189+ 92F0 06 79        	ld b,121												; $0079, 121d.
 190+ 92F2
 191+ 92F2 C5           1 push bc
 192+ 92F3 CD BC 96     	call Draw
 193+ 92F6 CD 7B 8F     	call Guarda_movimiento_masticado
 194+ 92F9
 195+ 92F9 CD 30 9A     	call Mov_right
 196+ 92FC CD 30 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 92FF
 198+ 92FF C1           	pop bc
 199+ 9300 10 F0        	djnz 1B
 200+ 9302
 201+ 9302              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9302
 203+ 9302              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9302              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9302
 206+ 9302 2A B8 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9305 01 08 00     	ld bc,8
 208+ 9308 A7           	and a
 209+ 9309 ED 42        	sbc hl,bc
 210+ 930B 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 930E
 212+ 930E C9           	ret
 213+ 930F
 214+ 930F              ; ---------------------------------------------------------------------
 215+ 930F              ;
 216+ 930F              ;	10/02/24
 217+ 930F              ;
 218+ 930F              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 930F              ;
 220+ 930F              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 930F
 222+ 930F              Definicion_segun_tipo
 223+ 930F
 224+ 930F CD F5 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9312 21 C6 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9315 CD FD 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9318 C9           	ret
 228+ 9319
 229+ 9319              ; ---------------------------------------------------------------------
 230+ 9319              ;
 231+ 9319              ;	6/7/24
 232+ 9319
 233+ 9319
 234+ 9319              Store_Restore_cajas
 235+ 9319
 236+ 9319 ED 5B F1 8B  	ld de,(Puntero_store_caja)
 237+ 931D CD 34 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9320 CD A7 90     	call Incrementa_punteros_de_cajas
 239+ 9323 C9           	ret
 240+ 9324
 241+ 9324              ; ---------------------------------------------------------------------
 242+ 9324              ;
 243+ 9324              ;	23/6/24
 244+ 9324              ;
 245+ 9324              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9324              ;
 247+ 9324              ;	MODIFY: HL
 248+ 9324
 249+ 9324              Limpiamos_bandeja_DRAW
 250+ 9324
 251+ 9324 ED 73 FE 8B  	ld (Stack),sp
 252+ 9328 31 D6 8B     	ld sp,Vel_left
 253+ 932B
 254+ 932B AF           	xor a
 255+ 932C 67           	ld h,a
 256+ 932D 6F           	ld l,a
 257+ 932E
 258+ 932E E5           	push hl
 259+ 932F E5           	push hl
 260+ 9330 E5           	push hl
 261+ 9331 E5           	push hl
 262+ 9332 E5           	push hl
 263+ 9333 E5           	push hl
 264+ 9334 E5           	push hl
 265+ 9335 E5           	push hl
 266+ 9336 E5           	push hl
 267+ 9337 E5           	push hl
 268+ 9338 E5           	push hl
 269+ 9339 E5           	push hl
 270+ 933A E5           	push hl
 271+ 933B E5           	push hl
 272+ 933C E5           	push hl
 273+ 933D E5           	push hl
 274+ 933E E5           	push hl
 275+ 933F E5           	push hl
 276+ 9340
 277+ 9340 33           	inc sp
 278+ 9341
 279+ 9341 E5           	push hl
 280+ 9342 ED 7B FE 8B  	ld sp,(Stack)
 281+ 9346
 282+ 9346 C9           	ret
 283+ 9347
 284+ 9347              ; ---------------------------------------------------------------------
 285+ 9347              ;
 286+ 9347              ;	24/03/24
 287+ 9347
 288+ 9347 2A BA 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 934A 2B           	dec hl
 290+ 934B 22 BA 8B     	ld (Contador_de_mov_masticados),hl
 291+ 934E C9           	ret
 292+ 934F
 293+ 934F              ; ---------------------------------------------------------------------
 294+ 934F              ;
 295+ 934F              ;	8/5/24
 296+ 934F
 297+ 934F              Reinicia_entidad_maliciosa
 298+ 934F
 299+ 934F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 934F
 301+ 934F CD 9D 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9352 CD AA 9E     	call Transfiere_datos_de_contadores
 303+ 9355
 304+ 9355              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9355
 306+ 9355 3A B1 8B     	ld a,(Tipo)
 307+ 9358 CD 0F 93     	call Definicion_segun_tipo
 308+ 935B
 309+ 935B E5           	push hl
 310+ 935C DD E1        	pop ix
 311+ 935E
 312+ 935E DD 6E 0B     	ld l,(ix+11)
 313+ 9361 DD 66 0C     	ld h,(ix+12)
 314+ 9364
 315+ 9364 22 B8 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9367
 317+ 9367 CD A3 8F     	call Cargamos_registros_con_mov_masticado
 318+ 936A
 319+ 936A              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 936A              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 936A              ; Ejemplos.
 322+ 936A
 323+ 936A              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 936A              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 936A              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 936A              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 936A              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 936A
 329+ 936A 21 B4 8B     	ld hl,Contador_de_vueltas
 330+ 936D CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 936F
 332+ 936F 7E           	ld a,(hl)
 333+ 9370 CB 2F        	sra a
 334+ 9372 CB 2F        	sra a
 335+ 9374
 336+ 9374 32 BC 8B     	ld (Velocidad),a
 337+ 9377
 338+ 9377 3E 40        	ld a,$40
 339+ 9379 BE           	cp (hl)
 340+ 937A C0           	ret nz
 341+ 937B
 342+ 937B              ; Límitador.
 343+ 937B
 344+ 937B              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 937B
 346+ 937B CB 2E        	sra (hl)
 347+ 937D 21 BC 8B     	ld hl,Velocidad
 348+ 9380 CB 2E        	sra (hl)
 349+ 9382
 350+ 9382 C9           	ret
 351+ 9383
 352+ 9383              ; ---------------------------------------------------------------------
 353+ 9383              ;
 354+ 9383              ;	22/01/24
 355+ 9383
 356+ 9383 21 24 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 9386 CB 46        	bit 0,(hl)
 358+ 9388 20 0D        	jr nz,1F
 359+ 938A CB 4E        	bit 1,(hl)
 360+ 938C 20 0C        	jr nz,2F
 361+ 938E CB 56        	bit 2,(hl)
 362+ 9390 20 0B        	jr nz,3F
 363+ 9392 CB 5E        	bit 3,(hl)
 364+ 9394 20 0A        	jr nz,4F
 365+ 9396 C9           	ret
 366+ 9397
 367+ 9397 CB E6        1 set 4,(hl)
 368+ 9399 C9           	ret
 369+ 939A CB EE        2 set 5,(hl)
 370+ 939C C9           	ret
 371+ 939D CB F6        3 set 6,(hl)
 372+ 939F C9           	ret
 373+ 93A0 CB FE        4 set 7,(hl)
 374+ 93A2 C9           	ret
 375+ 93A3
 376+ 93A3              ; ---------------------------------------------------------------------
 377+ 93A3              ;
 378+ 93A3              ;	23/01/24
 379+ 93A3              ;
 380+ 93A3              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93A3              ;
 382+ 93A3              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93A3              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93A3              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93A3              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93A3
 387+ 93A3              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93A3
 389+ 93A3 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93A4 3D           	dec a
 391+ 93A5 20 06        	jr nz,1F
 392+ 93A7
 393+ 93A7              ; --- Tipo_1
 394+ 93A7
 395+ 93A7 21 24 8C     	ld hl,Ctrl_4
 396+ 93AA CB C6        	set 0,(hl)
 397+ 93AC C9           	ret
 398+ 93AD
 399+ 93AD 3D           1 dec a
 400+ 93AE 20 06        	jr nz,2F
 401+ 93B0
 402+ 93B0              ; --- Tipo_2
 403+ 93B0
 404+ 93B0 21 24 8C     	ld hl,Ctrl_4
 405+ 93B3 CB CE        	set 1,(hl)
 406+ 93B5 C9           	ret
 407+ 93B6
 408+ 93B6 3D           2 dec a
 409+ 93B7 20 06        	jr nz,3F
 410+ 93B9
 411+ 93B9              ; --- Tipo_3
 412+ 93B9
 413+ 93B9 21 24 8C     	ld hl,Ctrl_4
 414+ 93BC CB D6        	set 2,(hl)
 415+ 93BE C9           	ret
 416+ 93BF
 417+ 93BF              ; --- Tipo_3
 418+ 93BF
 419+ 93BF 21 24 8C     3 ld hl,Ctrl_4
 420+ 93C2 CB D6        	set 2,(hl)
 421+ 93C4 C9           	ret
 422+ 93C5
 423+ 93C5              ; ---------------------------------------------------------------------
 424+ 93C5              ;
 425+ 93C5              ;	22/01/24
 426+ 93C5
 427+ 93C5 21 24 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93C8 CB 46        	bit 0,(hl)
 429+ 93CA 20 0E        	jr nz,1F
 430+ 93CC
 431+ 93CC CB 4E        	bit 1,(hl)
 432+ 93CE 20 10        	jr nz,2F
 433+ 93D0
 434+ 93D0 CB 56        	bit 2,(hl)
 435+ 93D2 20 12        	jr nz,3F
 436+ 93D4
 437+ 93D4 CB 5E        	bit 3,(hl)
 438+ 93D6 20 14        	jr nz,4F
 439+ 93D8 18 19        	jr 6F
 440+ 93DA
 441+ 93DA              ; Entidad_de_Tipo_1.
 442+ 93DA
 443+ 93DA CB 66        1 bit 4,(hl)
 444+ 93DC 28 15        	jr z,6F
 445+ 93DE 18 10        	jr 5F
 446+ 93E0
 447+ 93E0              ; Entidad_de_Tipo_2.
 448+ 93E0
 449+ 93E0 CB 6E        2 bit 5,(hl)
 450+ 93E2 28 0F        	jr z,6F
 451+ 93E4 18 0A        	jr 5F
 452+ 93E6
 453+ 93E6              ; Entidad_de_Tipo_3.
 454+ 93E6
 455+ 93E6 CB 76        3 bit 6,(hl)
 456+ 93E8 28 09        	jr z,6F
 457+ 93EA 18 04        	jr 5F
 458+ 93EC
 459+ 93EC              ; Entidad_de_Tipo_4.
 460+ 93EC
 461+ 93EC CB 7E        4 bit 7,(hl)
 462+ 93EE 28 03        	jr z,6F
 463+ 93F0
 464+ 93F0              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93F0
 466+ 93F0 AF           5 xor a
 467+ 93F1 3C           	inc a
 468+ 93F2 C9           	ret
 469+ 93F3
 470+ 93F3              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93F3
 472+ 93F3 AF           6 xor a
 473+ 93F4 C9           	ret
 474+ 93F5
 475+ 93F5              ;	------------------------------------------------------------------------------------
 476+ 93F5              ;
 477+ 93F5              ;	12/01/24
 478+ 93F5              ;
 479+ 93F5              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93F5              ;
 481+ 93F5              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93F5              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93F5
 484+ 93F5 CB 27        Calcula_salto_en_BC sla a
 485+ 93F7 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93F9 4F           	ld c,a
 487+ 93FA 06 00        	ld b,0
 488+ 93FC C9           	ret
 489+ 93FD
 490+ 93FD              ; ------------------------------------------------------------------
 491+ 93FD              ;
 492+ 93FD              ;	19/1/24
 493+ 93FD              ;
 494+ 93FD              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93FD              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93FD
 497+ 93FD A7           Situa_en_datos_de_definicion and a
 498+ 93FE ED 4A        	adc hl,bc
 499+ 9400 CD 59 90     	call Extrae_address
 500+ 9403 22 FC 8B         ld (Datos_de_entidad),hl
 501+ 9406 C9           	ret
 502+ 9407
 503+ 9407              ; ------------------------------------------------------------------
 504+ 9407
 505+ 9407              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9407              ; 	inc de
 507+ 9407              ; 	inc de
 508+ 9407              ; 	ex de,hl
 509+ 9407              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9407              ; 	ret
 511+ 9407
 512+ 9407              ; ----------------------------------------------------------------------------------------------------------
 513+ 9407              ;
 514+ 9407              ;	24/6/24
 515+ 9407              ;
 516+ 9407              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9407              ;	_ de entidad.
 518+ 9407              ;
 519+ 9407              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9407              ;
 521+ 9407              ;
 522+ 9407              ;	MODIFICA: HL,DE y BC
 523+ 9407
 524+ 9407
 525+ 9407              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9407
 527+ 9407 11 B1 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 940A 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 940B 12           	ld (de),a
 530+ 940C 23           	inc hl
 531+ 940D              ;
 532+ 940D 11 BF 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9410 01 02 00     	ld bc,2
 534+ 9413 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9415              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9415 11 B4 8B     	ld de,Contador_de_vueltas
 537+ 9418 7E           	ld a,(hl)
 538+ 9419 12           	ld (de),a
 539+ 941A 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 941B
 541+ 941B 11 C6 8B     	ld de,Indice_Sprite_der
 542+ 941E 01 04 00     	ld bc,4
 543+ 9421 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9423
 545+ 9423 11 CE 8B     	ld de,Posicion_inicio
 546+ 9426 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9429 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 942B
 549+ 942B 11 B8 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 942E 01 02 00     	ld bc,2
 551+ 9431 ED B0        	ldir
 552+ 9433
 553+ 9433 C9           	ret
 554+ 9434
 555+ 9434              ; ----------------------------------------------------------------------------------------------------------
 556+ 9434              ;
 557+ 9434              ;	1/8/24
 558+ 9434              ;
 559+ 9434
 560+ 9434              Parametros_de_bandeja_DRAW_a_caja
 561+ 9434
 562+ 9434 21 B1 8B     	ld hl,Bandeja_DRAW
 563+ 9437 01 0C 00     	ld bc,12
 564+ 943A ED B0        	ldir
 565+ 943C C9           	ret
 566+ 943D
 567+ 943D              ;---------------------------------------------------------------------------------------------------------------
 568+ 943D              ;
 569+ 943D              ;	5/1/24
 570+ 943D              ;
 571+ 943D              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 943D              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 943D              ;
 574+ 943D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 943D              ;
 576+ 943D              ;	(Numero_parcial_de_entidades)="7".
 577+ 943D              ;
 578+ 943D              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 943D              ;
 580+ 943D              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 943D              ;
 582+ 943D              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 943D              ;	MODIFICA: A y B.
 584+ 943D              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 943D
 586+ 943D              Inicializa_Numero_parcial_de_entidades
 587+ 943D
 588+ 943D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 943D
 590+ 943D 3A F7 8B     	ld a,(Numero_de_entidades)
 591+ 9440 A7           	and a
 592+ 9441
 593+ 9441              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9441              ;	jr z,$
 595+ 9441              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9441
 597+ 9441 20 03        	jr nz,3F
 598+ 9443
 599+ 9443              ; ---------- ---------- ----------
 600+ 9443
 601+ 9443              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9443              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9443
 604+ 9443 CD 39 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9446
 606+ 9446              ; ---------- ---------- ----------
 607+ 9446
 608+ 9446 3A F7 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9449 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 944B 38 08        	jr c,1F
 611+ 944D
 612+ 944D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 944D              ; Actualizamos variables.
 614+ 944D
 615+ 944D 3E 07        	ld a,7
 616+ 944F 32 F8 8B     	ld (Numero_parcial_de_entidades),a
 617+ 9452 47           	ld b,a
 618+ 9453 18 04        	jr 2F
 619+ 9455
 620+ 9455              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9455              ; (Numero_de_entidades)="0".
 622+ 9455
 623+ 9455 32 F8 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 9458 47           	ld b,a
 625+ 9459 C9           2 ret
 626+ 945A
# file closed: Rutinas_de_inicio_y_niveles.asm
2097  945A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 945A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 945A              ;
   3+ 945A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 945A              ;
   5+ 945A              ; *****************************************************************************************************************************************************************************************
   6+ 945A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 945A
   8+ 945A 7C           calcula_tercio ld a,h
   9+ 945B E6 18        	and $18
  10+ 945D CB 2F        	sra a
  11+ 945F CB 2F        	sra a
  12+ 9461 CB 2F        	sra a
  13+ 9463 C9           	ret
  14+ 9464
# file closed: calcula_tercio.asm
2098  9464              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9464              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9464              ;
   3+ 9464              ;
   4+ 9464              ;	CLS.
   5+ 9464              ;
   6+ 9464              ;	Limpia la pantalla y define sus atributos.
   7+ 9464              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9464              ;
   9+ 9464              ;	COLORES: 0 ..... NEGRO
  10+ 9464              ;    		 1 ..... AZUL
  11+ 9464              ; 			 2 ..... ROJO
  12+ 9464              ;			 3 ..... MAGENTA
  13+ 9464              ; 			 4 ..... VERDE
  14+ 9464              ; 			 5 ..... CIAN
  15+ 9464              ;			 6 ..... AMARILLO
  16+ 9464              ; 			 7 ..... BLANCO
  17+ 9464              ;
  18+ 9464              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9464              ;
  20+ 9464              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9464
  22+ 9464
  23+ 9464 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9467 11 01 40     	LD DE,$4001
  25+ 946A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 946D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 946F ED B0        	LDIR
  28+ 9471 01 FF 02     	LD BC,767
  29+ 9474 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9475 ED B0        	LDIR
  31+ 9477 C9           	ret
  32+ 9478
# file closed: Cls.asm
2099  9478              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9478              ; ------------------------------------------------------------------------
   2+ 9478              ;
   3+ 9478              ;	30/1/24
   4+ 9478              ;
   5+ 9478              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9478              ;	Fila superior "0", Columna izquierda "0".
   7+ 9478              ;
   8+ 9478              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9478              ;
  10+ 9478              ;	Modifica: A,BC y DE.
  11+ 9478
  12+ 9478 7D           Genera_coordenadas ld a,l
  13+ 9479 E6 1F        	and $1f
  14+ 947B 32 B2 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 947E
  16+ 947E 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 947F FE 40        	cp $40
  18+ 9481 38 1C        	jr c,4F
  19+ 9483
  20+ 9483 CD 5A 94     	call calcula_tercio
  21+ 9486 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9487
  23+ 9487 1E 00        	ld e,0
  24+ 9489 7D           	ld a,l
  25+ 948A E6 E0        	and $e0
  26+ 948C 28 01        	jr z,1F
  27+ 948E 04           	inc b
  28+ 948F
  29+ 948F 04           1 inc b
  30+ 9490 05           	dec b
  31+ 9491 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9493              ;														; _ , salimos.
  33+ 9493 1C           3 inc e
  34+ 9494 D6 20        	sub 32
  35+ 9496 20 FB        	jr nz,3B
  36+ 9498 10 F5        	djnz 1B
  37+ 949A
  38+ 949A 7B           2 ld a,e
  39+ 949B 32 B3 8B     	ld (Coordenada_y),a
  40+ 949E C9           	ret
  41+ 949F
  42+ 949F AF           4 xor a
  43+ 94A0 32 B3 8B     	ld (Coordenada_y),a
  44+ 94A3 C9           	ret
  45+ 94A4
# file closed: Genera_coordenadas.asm
2100  94A4              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94A4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94A4              ;
   3+ 94A4              ;	11/03/24
   4+ 94A4              ;
   5+ 94A4              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94A4              ;   DE contiene Puntero_objeto.
   7+ 94A4              ;   IX contiene el Puntero de impresión.
   8+ 94A4
   9+ 94A4              Genera_datos_de_impresion
  10+ 94A4
  11+ 94A4 ED 73 FE 8B      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94A8
  13+ 94A8 31 B8 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94AB DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94AD
  16+ 94AD 2A 1D 8C         ld hl,(Scanlines_album_SP)
  17+ 94B0
  18+ 94B0 3E 05            ld a,5
  19+ 94B2 85               add l
  20+ 94B3 6F               ld l,a
  21+ 94B4
  22+ 94B4 F9               ld sp,hl
  23+ 94B5 22 1D 8C         ld (Scanlines_album_SP),hl
  24+ 94B8
  25+ 94B8 21 00 00         ld hl,0
  26+ 94BB
  27+ 94BB DD E5            push ix
  28+ 94BD 3B               dec sp
  29+ 94BE ED 7A            adc hl,sp
  30+ 94C0 D5               push de
  31+ 94C1
  32+ 94C1              ; Recuperamos SP.
  33+ 94C1
  34+ 94C1 ED 7B FE 8B      ld sp,(Stack)
  35+ 94C5
  36+ 94C5 E5               push hl
  37+ 94C6 F1               pop af
  38+ 94C7 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94C8
  40+ 94C8              ; Tenemos el encabezado listo.
  41+ 94C8              ; Preparamos registros para generar los scanlines.
  42+ 94C8
  43+ 94C8 DD E5            push ix
  44+ 94CA E1               pop hl                                          ; 1er scanline en HL.
  45+ 94CB
  46+ 94CB ED 5B 1D 8C      ld de,(Scanlines_album_SP)
  47+ 94CF
  48+ 94CF              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94CF              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94CF
  51+ 94CF 7C               ld a,h
  52+ 94D0 FE 50            cp $50
  53+ 94D2 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94D4
  55+ 94D4 20 05            jr nz,2F
  56+ 94D6
  57+ 94D6 7D               ld a,l
  58+ 94D7 FE E0            cp $e0
  59+ 94D9 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94DB
  61+ 94DB 7D           2 ld a,l
  62+ 94DC FE C0            cp $c0
  63+ 94DE D2 70 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94E1
  65+ 94E1              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94E1
  67+ 94E1 CD 6E 99         call NextScan
  68+ 94E4 EB               ex de,hl
  69+ 94E5
  70+ 94E5 73               ld (hl),e
  71+ 94E6 23               inc hl
  72+ 94E7 72               ld (hl),d
  73+ 94E8 23               inc hl
  74+ 94E9
  75+ 94E9 EB               ex de,hl
  76+ 94EA
  77+ 94EA CD 6E 99         call NextScan
  78+ 94ED EB               ex de,hl
  79+ 94EE
  80+ 94EE 73               ld (hl),e
  81+ 94EF 23               inc hl
  82+ 94F0 72               ld (hl),d
  83+ 94F1 23               inc hl
  84+ 94F2
  85+ 94F2 EB               ex de,hl
  86+ 94F3
  87+ 94F3 CD 6E 99         call NextScan
  88+ 94F6 EB               ex de,hl
  89+ 94F7
  90+ 94F7 73               ld (hl),e
  91+ 94F8 23               inc hl
  92+ 94F9 72               ld (hl),d
  93+ 94FA 23               inc hl
  94+ 94FB
  95+ 94FB EB               ex de,hl
  96+ 94FC
  97+ 94FC CD 6E 99         call NextScan
  98+ 94FF EB               ex de,hl
  99+ 9500
 100+ 9500 73               ld (hl),e
 101+ 9501 23               inc hl
 102+ 9502 72               ld (hl),d
 103+ 9503 23               inc hl
 104+ 9504
 105+ 9504 EB               ex de,hl
 106+ 9505
 107+ 9505 CD 6E 99         call NextScan
 108+ 9508 EB               ex de,hl
 109+ 9509
 110+ 9509 73               ld (hl),e
 111+ 950A 23               inc hl
 112+ 950B 72               ld (hl),d
 113+ 950C 23               inc hl
 114+ 950D
 115+ 950D EB               ex de,hl
 116+ 950E
 117+ 950E CD 6E 99         call NextScan
 118+ 9511 EB               ex de,hl
 119+ 9512
 120+ 9512 73               ld (hl),e
 121+ 9513 23               inc hl
 122+ 9514 72               ld (hl),d
 123+ 9515 23               inc hl
 124+ 9516
 125+ 9516 EB               ex de,hl
 126+ 9517
 127+ 9517 CD 6E 99         call NextScan
 128+ 951A EB               ex de,hl
 129+ 951B
 130+ 951B 73               ld (hl),e
 131+ 951C 23               inc hl
 132+ 951D 72               ld (hl),d
 133+ 951E 23               inc hl
 134+ 951F
 135+ 951F EB               ex de,hl
 136+ 9520
 137+ 9520 CD 6E 99         call NextScan
 138+ 9523 EB               ex de,hl
 139+ 9524
 140+ 9524 73               ld (hl),e
 141+ 9525 23               inc hl
 142+ 9526 72               ld (hl),d
 143+ 9527 23               inc hl
 144+ 9528
 145+ 9528 EB               ex de,hl
 146+ 9529
 147+ 9529 CD 6E 99         call NextScan
 148+ 952C EB               ex de,hl
 149+ 952D
 150+ 952D 73               ld (hl),e
 151+ 952E 23               inc hl
 152+ 952F 72               ld (hl),d
 153+ 9530 23               inc hl
 154+ 9531
 155+ 9531 EB               ex de,hl
 156+ 9532
 157+ 9532 CD 6E 99         call NextScan
 158+ 9535 EB               ex de,hl
 159+ 9536
 160+ 9536 73               ld (hl),e
 161+ 9537 23               inc hl
 162+ 9538 72               ld (hl),d
 163+ 9539 23               inc hl
 164+ 953A
 165+ 953A EB               ex de,hl
 166+ 953B
 167+ 953B CD 6E 99         call NextScan
 168+ 953E EB               ex de,hl
 169+ 953F
 170+ 953F 73               ld (hl),e
 171+ 9540 23               inc hl
 172+ 9541 72               ld (hl),d
 173+ 9542 23               inc hl
 174+ 9543
 175+ 9543 EB               ex de,hl
 176+ 9544
 177+ 9544 CD 6E 99         call NextScan
 178+ 9547 EB               ex de,hl
 179+ 9548
 180+ 9548 73               ld (hl),e
 181+ 9549 23               inc hl
 182+ 954A 72               ld (hl),d
 183+ 954B 23               inc hl
 184+ 954C
 185+ 954C EB               ex de,hl
 186+ 954D
 187+ 954D CD 6E 99         call NextScan
 188+ 9550 EB               ex de,hl
 189+ 9551
 190+ 9551 73               ld (hl),e
 191+ 9552 23               inc hl
 192+ 9553 72               ld (hl),d
 193+ 9554 23               inc hl
 194+ 9555
 195+ 9555 EB               ex de,hl
 196+ 9556
 197+ 9556 CD 6E 99         call NextScan
 198+ 9559 EB               ex de,hl
 199+ 955A
 200+ 955A 73               ld (hl),e
 201+ 955B 23               inc hl
 202+ 955C 72               ld (hl),d
 203+ 955D 23               inc hl
 204+ 955E
 205+ 955E EB               ex de,hl
 206+ 955F
 207+ 955F CD 6E 99         call NextScan
 208+ 9562 EB               ex de,hl
 209+ 9563
 210+ 9563 73               ld (hl),e
 211+ 9564 23               inc hl
 212+ 9565 72               ld (hl),d
 213+ 9566 23               inc hl
 214+ 9567
 215+ 9567              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9567
 217+ 9567 22 1D 8C         ld (Scanlines_album_SP),hl
 218+ 956A
 219+ 956A              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 956A
 221+ 956A 08               ex af,af
 222+ 956B
 223+ 956B F5               push af
 224+ 956C E1               pop hl
 225+ 956D
 226+ 956D 36 10            ld (hl),16
 227+ 956F
 228+ 956F C9               ret
 229+ 9570
 230+ 9570              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9570
 232+ 9570              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9570
 234+ 9570 3E 57            ld a,$57
 235+ 9572 94               sub h
 236+ 9573 47               ld b,a
 237+ 9574
 238+ 9574 3E DF            ld a,$df
 239+ 9576 BD               cp l
 240+ 9577 38 04            jr c,1F
 241+ 9579
 242+ 9579 3E 08            ld a,8
 243+ 957B 80               add b
 244+ 957C 47               ld b,a
 245+ 957D
 246+ 957D              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 957D              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 957D
 249+ 957D 48           1 ld c,b
 250+ 957E 0C               inc c
 251+ 957F
 252+ 957F 04               inc b
 253+ 9580 05               dec b
 254+ 9581 20 02            jr nz,3F
 255+ 9583
 256+ 9583 18 0B            jr 6F
 257+ 9585
 258+ 9585 CD 6E 99     3 call NextScan
 259+ 9588 EB               ex de,hl
 260+ 9589
 261+ 9589 73               ld (hl),e
 262+ 958A 23               inc hl
 263+ 958B 72               ld (hl),d
 264+ 958C 23               inc hl
 265+ 958D
 266+ 958D EB               ex de,hl
 267+ 958E 10 F5            djnz 3B
 268+ 9590
 269+ 9590 ED 53 1D 8C  6 ld (Scanlines_album_SP),de
 270+ 9594
 271+ 9594 08           5 ex af,af
 272+ 9595 F5               push af
 273+ 9596 E1               pop hl
 274+ 9597
 275+ 9597 71               ld (hl),c
 276+ 9598
 277+ 9598 C9               ret
 278+ 9599
# file closed: Genera_datos_de_impresion.asm
2101  9599              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9599              ; -----------------------------------------------------------------------------
   2+ 9599              ;
   3+ 9599              ;   11/03/24
   4+ 9599              ;
   5+ 9599
   6+ 9599              Pinta_Sprites
   7+ 9599
   8+ 9599              ;    ld hl,(Scanlines_album_SP)
   9+ 9599              ;    call Extrae_address
  10+ 9599
  11+ 9599              ;    inc h
  12+ 9599              ;    dec h
  13+ 9599              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9599
  15+ 9599 ED 73 FE 8B      ld (Stack),sp
  16+ 959D
  17+ 959D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 959E              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 959E 2C               inc l
  20+ 959F 2C               inc l
  21+ 95A0
  22+ 95A0 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95A1
  24+ 95A1 2C               inc l
  25+ 95A2 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95A3
  27+ 95A3              ;   Seleccionamos rutina de impresión:
  28+ 95A3
  29+ 95A3 3E 10            ld a,16
  30+ 95A5 B8               cp b
  31+ 95A6 C2 A2 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95A9
  33+ 95A9              ;   Rutinas:
  34+ 95A9
  35+ 95A9              Pinta_rapido    ;   1520 t/states.
  36+ 95A9
  37+ 95A9 E1               pop hl
  38+ 95AA
  39+ 95AA 1A               ld a,(de)
  40+ 95AB AE               xor (hl)
  41+ 95AC 77               ld (hl),a
  42+ 95AD 2C               inc l
  43+ 95AE 1C               inc e
  44+ 95AF 1A               ld a,(de)
  45+ 95B0 AE               xor (hl)
  46+ 95B1 77               ld (hl),a
  47+ 95B2 2C               inc l
  48+ 95B3 1C               inc e
  49+ 95B4 1A               ld a,(de)
  50+ 95B5 AE               xor (hl)
  51+ 95B6 77               ld (hl),a
  52+ 95B7 13               inc de
  53+ 95B8
  54+ 95B8 E1               pop hl
  55+ 95B9
  56+ 95B9 1A               ld a,(de)
  57+ 95BA AE               xor (hl)
  58+ 95BB 77               ld (hl),a
  59+ 95BC 2C               inc l
  60+ 95BD 1C               inc e
  61+ 95BE 1A               ld a,(de)
  62+ 95BF AE               xor (hl)
  63+ 95C0 77               ld (hl),a
  64+ 95C1 2C               inc l
  65+ 95C2 1C               inc e
  66+ 95C3 1A               ld a,(de)
  67+ 95C4 AE               xor (hl)
  68+ 95C5 77               ld (hl),a
  69+ 95C6 13               inc de
  70+ 95C7
  71+ 95C7 E1               pop hl
  72+ 95C8
  73+ 95C8 1A               ld a,(de)
  74+ 95C9 AE               xor (hl)
  75+ 95CA 77               ld (hl),a
  76+ 95CB 2C               inc l
  77+ 95CC 1C               inc e
  78+ 95CD 1A               ld a,(de)
  79+ 95CE AE               xor (hl)
  80+ 95CF 77               ld (hl),a
  81+ 95D0 2C               inc l
  82+ 95D1 1C               inc e
  83+ 95D2 1A               ld a,(de)
  84+ 95D3 AE               xor (hl)
  85+ 95D4 77               ld (hl),a
  86+ 95D5 13               inc de
  87+ 95D6
  88+ 95D6 E1               pop hl
  89+ 95D7
  90+ 95D7 1A               ld a,(de)
  91+ 95D8 AE               xor (hl)
  92+ 95D9 77               ld (hl),a
  93+ 95DA 2C               inc l
  94+ 95DB 1C               inc e
  95+ 95DC 1A               ld a,(de)
  96+ 95DD AE               xor (hl)
  97+ 95DE 77               ld (hl),a
  98+ 95DF 2C               inc l
  99+ 95E0 1C               inc e
 100+ 95E1 1A               ld a,(de)
 101+ 95E2 AE               xor (hl)
 102+ 95E3 77               ld (hl),a
 103+ 95E4 13               inc de
 104+ 95E5
 105+ 95E5 E1               pop hl
 106+ 95E6
 107+ 95E6 1A               ld a,(de)
 108+ 95E7 AE               xor (hl)
 109+ 95E8 77               ld (hl),a
 110+ 95E9 2C               inc l
 111+ 95EA 1C               inc e
 112+ 95EB 1A               ld a,(de)
 113+ 95EC AE               xor (hl)
 114+ 95ED 77               ld (hl),a
 115+ 95EE 2C               inc l
 116+ 95EF 1C               inc e
 117+ 95F0 1A               ld a,(de)
 118+ 95F1 AE               xor (hl)
 119+ 95F2 77               ld (hl),a
 120+ 95F3 13               inc de
 121+ 95F4
 122+ 95F4 E1               pop hl
 123+ 95F5
 124+ 95F5 1A               ld a,(de)
 125+ 95F6 AE               xor (hl)
 126+ 95F7 77               ld (hl),a
 127+ 95F8 2C               inc l
 128+ 95F9 1C               inc e
 129+ 95FA 1A               ld a,(de)
 130+ 95FB AE               xor (hl)
 131+ 95FC 77               ld (hl),a
 132+ 95FD 2C               inc l
 133+ 95FE 1C               inc e
 134+ 95FF 1A               ld a,(de)
 135+ 9600 AE               xor (hl)
 136+ 9601 77               ld (hl),a
 137+ 9602 13               inc de
 138+ 9603
 139+ 9603 E1               pop hl
 140+ 9604
 141+ 9604 1A               ld a,(de)
 142+ 9605 AE               xor (hl)
 143+ 9606 77               ld (hl),a
 144+ 9607 2C               inc l
 145+ 9608 1C               inc e
 146+ 9609 1A               ld a,(de)
 147+ 960A AE               xor (hl)
 148+ 960B 77               ld (hl),a
 149+ 960C 2C               inc l
 150+ 960D 1C               inc e
 151+ 960E 1A               ld a,(de)
 152+ 960F AE               xor (hl)
 153+ 9610 77               ld (hl),a
 154+ 9611 13               inc de
 155+ 9612
 156+ 9612 E1               pop hl
 157+ 9613
 158+ 9613 1A               ld a,(de)
 159+ 9614 AE               xor (hl)
 160+ 9615 77               ld (hl),a
 161+ 9616 2C               inc l
 162+ 9617 1C               inc e
 163+ 9618 1A               ld a,(de)
 164+ 9619 AE               xor (hl)
 165+ 961A 77               ld (hl),a
 166+ 961B 2C               inc l
 167+ 961C 1C               inc e
 168+ 961D 1A               ld a,(de)
 169+ 961E AE               xor (hl)
 170+ 961F 77               ld (hl),a
 171+ 9620 13               inc de
 172+ 9621
 173+ 9621 E1               pop hl
 174+ 9622
 175+ 9622 1A               ld a,(de)
 176+ 9623 AE               xor (hl)
 177+ 9624 77               ld (hl),a
 178+ 9625 2C               inc l
 179+ 9626 1C               inc e
 180+ 9627 1A               ld a,(de)
 181+ 9628 AE               xor (hl)
 182+ 9629 77               ld (hl),a
 183+ 962A 2C               inc l
 184+ 962B 1C               inc e
 185+ 962C 1A               ld a,(de)
 186+ 962D AE               xor (hl)
 187+ 962E 77               ld (hl),a
 188+ 962F 13               inc de
 189+ 9630
 190+ 9630 E1               pop hl
 191+ 9631
 192+ 9631 1A               ld a,(de)
 193+ 9632 AE               xor (hl)
 194+ 9633 77               ld (hl),a
 195+ 9634 2C               inc l
 196+ 9635 1C               inc e
 197+ 9636 1A               ld a,(de)
 198+ 9637 AE               xor (hl)
 199+ 9638 77               ld (hl),a
 200+ 9639 2C               inc l
 201+ 963A 1C               inc e
 202+ 963B 1A               ld a,(de)
 203+ 963C AE               xor (hl)
 204+ 963D 77               ld (hl),a
 205+ 963E 13               inc de
 206+ 963F
 207+ 963F E1               pop hl
 208+ 9640
 209+ 9640 1A               ld a,(de)
 210+ 9641 AE               xor (hl)
 211+ 9642 77               ld (hl),a
 212+ 9643 2C               inc l
 213+ 9644 1C               inc e
 214+ 9645 1A               ld a,(de)
 215+ 9646 AE               xor (hl)
 216+ 9647 77               ld (hl),a
 217+ 9648 2C               inc l
 218+ 9649 1C               inc e
 219+ 964A 1A               ld a,(de)
 220+ 964B AE               xor (hl)
 221+ 964C 77               ld (hl),a
 222+ 964D 13               inc de
 223+ 964E
 224+ 964E E1               pop hl
 225+ 964F
 226+ 964F 1A               ld a,(de)
 227+ 9650 AE               xor (hl)
 228+ 9651 77               ld (hl),a
 229+ 9652 2C               inc l
 230+ 9653 1C               inc e
 231+ 9654 1A               ld a,(de)
 232+ 9655 AE               xor (hl)
 233+ 9656 77               ld (hl),a
 234+ 9657 2C               inc l
 235+ 9658 1C               inc e
 236+ 9659 1A               ld a,(de)
 237+ 965A AE               xor (hl)
 238+ 965B 77               ld (hl),a
 239+ 965C 13               inc de
 240+ 965D
 241+ 965D E1               pop hl
 242+ 965E
 243+ 965E 1A               ld a,(de)
 244+ 965F AE               xor (hl)
 245+ 9660 77               ld (hl),a
 246+ 9661 2C               inc l
 247+ 9662 1C               inc e
 248+ 9663 1A               ld a,(de)
 249+ 9664 AE               xor (hl)
 250+ 9665 77               ld (hl),a
 251+ 9666 2C               inc l
 252+ 9667 1C               inc e
 253+ 9668 1A               ld a,(de)
 254+ 9669 AE               xor (hl)
 255+ 966A 77               ld (hl),a
 256+ 966B 13               inc de
 257+ 966C
 258+ 966C E1               pop hl
 259+ 966D
 260+ 966D 1A               ld a,(de)
 261+ 966E AE               xor (hl)
 262+ 966F 77               ld (hl),a
 263+ 9670 2C               inc l
 264+ 9671 1C               inc e
 265+ 9672 1A               ld a,(de)
 266+ 9673 AE               xor (hl)
 267+ 9674 77               ld (hl),a
 268+ 9675 2C               inc l
 269+ 9676 1C               inc e
 270+ 9677 1A               ld a,(de)
 271+ 9678 AE               xor (hl)
 272+ 9679 77               ld (hl),a
 273+ 967A 13               inc de
 274+ 967B
 275+ 967B E1               pop hl
 276+ 967C
 277+ 967C 1A               ld a,(de)
 278+ 967D AE               xor (hl)
 279+ 967E 77               ld (hl),a
 280+ 967F 2C               inc l
 281+ 9680 1C               inc e
 282+ 9681 1A               ld a,(de)
 283+ 9682 AE               xor (hl)
 284+ 9683 77               ld (hl),a
 285+ 9684 2C               inc l
 286+ 9685 1C               inc e
 287+ 9686 1A               ld a,(de)
 288+ 9687 AE               xor (hl)
 289+ 9688 77               ld (hl),a
 290+ 9689 13               inc de
 291+ 968A
 292+ 968A E1               pop hl
 293+ 968B
 294+ 968B 1A               ld a,(de)
 295+ 968C AE               xor (hl)
 296+ 968D 77               ld (hl),a
 297+ 968E 2C               inc l
 298+ 968F 1C               inc e
 299+ 9690 1A               ld a,(de)
 300+ 9691 AE               xor (hl)
 301+ 9692 77               ld (hl),a
 302+ 9693 2C               inc l
 303+ 9694 1C               inc e
 304+ 9695 1A               ld a,(de)
 305+ 9696 AE               xor (hl)
 306+ 9697 77               ld (hl),a
 307+ 9698 13               inc de
 308+ 9699
 309+ 9699 ED 73 1D 8C      ld (Scanlines_album_SP),sp
 310+ 969D ED 7B FE 8B      ld sp,(Stack)
 311+ 96A1 C9               ret
 312+ 96A2
 313+ 96A2              Pinta_lento
 314+ 96A2
 315+ 96A2 E1           1 pop hl
 316+ 96A3
 317+ 96A3 1A               ld a,(de)
 318+ 96A4 AE               xor (hl)
 319+ 96A5 77               ld (hl),a
 320+ 96A6 2C               inc l
 321+ 96A7 1C               inc e
 322+ 96A8 1A               ld a,(de)
 323+ 96A9 AE               xor (hl)
 324+ 96AA 77               ld (hl),a
 325+ 96AB 2C               inc l
 326+ 96AC 1C               inc e
 327+ 96AD 1A               ld a,(de)
 328+ 96AE AE               xor (hl)
 329+ 96AF 77               ld (hl),a
 330+ 96B0 13               inc de
 331+ 96B1
 332+ 96B1 10 EF            djnz 1B
 333+ 96B3
 334+ 96B3 ED 73 1D 8C      ld (Scanlines_album_SP),sp
 335+ 96B7 ED 7B FE 8B      ld sp,(Stack)
 336+ 96BB C9               ret
# file closed: Pinta_Sprites.asm
2102  96BC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96BC              ; ******************************************************************************************************************************************************************************************
   2+ 96BC              ;
   3+ 96BC              ; 26/06/23
   4+ 96BC              ;
   5+ 96BC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96BC
   7+ 96BC              Draw
   8+ 96BC
   9+ 96BC CD 62 99     	call Prepara_draw
  10+ 96BF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96C0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96C1 28 05        	jr z,2F
  13+ 96C3
  14+ 96C3 3A D0 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96C6 18 0C        	jr 1F
  16+ 96C8
  17+ 96C8 2A CE 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96CB 22 C1 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96CE CD 5A 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96D1              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96D1
  22+ 96D1 CD 01 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96D4
  24+ 96D4 3A BE 8B     1 ld a,(Ctrl_0)
  25+ 96D7 CB 6F        	bit 5,a
  26+ 96D9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96DB
  28+ 96DB CD F0 96     	call Comprueba_limite_horizontal
  29+ 96DE CD 80 97     	call Comprueba_limite_vertical
  30+ 96E1
  31+ 96E1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96E1              ; -----------------------
  33+ 96E1              ; -----------------------
  34+ 96E1              ; -----------------------
  35+ 96E1
  36+ 96E1 CD D6 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96E4 CD 0D 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96E7
  39+ 96E7 3A BE 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96EA CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96EC 32 BE 8B     	ld (Ctrl_0),a
  42+ 96EF
  43+ 96EF C9           	ret
  44+ 96F0
  45+ 96F0              ; *******************************************************************************************************************************************************************************************
  46+ 96F0              ;	21/01/23
  47+ 96F0              ;
  48+ 96F0              ; 	Comprueba_limite_horizontal.
  49+ 96F0              ;
  50+ 96F0              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96F0              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96F0              ;
  53+ 96F0              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96F0              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96F0              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96F0              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96F0
  58+ 96F0
  59+ 96F0
  60+ 96F0 3A BE 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96F3 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96F5 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96F7 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96F9 32 BE 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96FC 18 09            jr 6F
  66+ 96FE CB 5F        1 bit 3,a
  67+ 9700 28 0A            jr z,2F
  68+ 9702 E6 F7            and $f7
  69+ 9704 32 BE 8B         ld (Ctrl_0),a
  70+ 9707 CD 5A 98     6 call Inicializacion
  71+ 970A 18 5B            jr 5F
  72+ 970C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 970D
  74+ 970D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 970D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 970D
  77+ 970D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 970E 2A D2 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9711 CD 5A 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9714 67           	ld h,a
  81+ 9715 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9716 CD 5A 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9719 67           	ld h,a
  84+ 971A A7           	and a
  85+ 971B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 971D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 971E 3A D0 8B     	ld a,(Cuad_objeto)
  88+ 9721 FE 02        	cp 2
  89+ 9723 38 1E        	jr c,3F
  90+ 9725 28 1C        	jr z,3F
  91+ 9727 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9728 28 23            jr z,7F
  93+ 972A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 972C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 972E E1           	pop hl
  96+ 972F
  97+ 972F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 972F              ; _para indicar con E="2" en caso necesario.
  99+ 972F
 100+ 972F E5               push hl
 101+ 9730 C5               push bc
 102+ 9731 CD 5A 94     	call calcula_tercio
 103+ 9734 FE 01        	cp 1
 104+ 9736 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9738 CD 68 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 973B 28 26            jr z,9F
 107+ 973D 38 24            jr c,9F
 108+ 973F 1E 00        11 ld e,0
 109+ 9741 18 22            jr 8F
 110+ 9743 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9744 28 07        	jr z, 7F
 112+ 9746 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9748 1E 00         	ld e,0
 114+ 974A E1           	pop hl
 115+ 974B 18 04        	jr 4F
 116+ 974D 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 974F 18 15            jr 10F
 118+ 9751
 119+ 9751              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9751              ; _para indicar con E="2" en caso necesario.
 121+ 9751
 122+ 9751 E5           4 push hl
 123+ 9752 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9753 CD 5A 94     	call calcula_tercio
 125+ 9756 FE 01        	cp 1
 126+ 9758 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 975A CD 68 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 975D 28 04            jr z,9F
 129+ 975F 30 02            jr nc,9F
 130+ 9761 18 02        	jr 8F
 131+ 9763 1E 02        9 ld e,2
 132+ 9765 C1           8 pop bc
 133+ 9766 E1           10 pop hl
 134+ 9767 C9           5 ret
 135+ 9768
 136+ 9768              ; --------------------
 137+ 9768              ;
 138+ 9768              ; 25/08/22
 139+ 9768
 140+ 9768 CD 5A 94     Comprueba_centro call calcula_tercio
 141+ 976B 67               ld h,a
 142+ 976C 08           	ex af,af
 143+ 976D FE 02        	cp 2
 144+ 976F 38 07        	jr c,1F
 145+ 9771 28 05        	jr z,1F
 146+ 9773 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9776 18 03        	jr 2F
 148+ 9778 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 977B 08           2 ex af,af
 150+ 977C A7               and a
 151+ 977D ED 42            sbc hl,bc
 152+ 977F C9               ret
 153+ 9780
 154+ 9780              ; *********************************************************************************************************************************************************************************************
 155+ 9780              ;
 156+ 9780              ;   16/8/22
 157+ 9780              ;
 158+ 9780              ;	Comprueba_limite_vertical
 159+ 9780              ;
 160+ 9780              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9780              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9780              ;
 163+ 9780
 164+ 9780 2A C1 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9783 7D           	ld a,l
 166+ 9784 E6 1F        	and $1F
 167+ 9786 57           	ld d,a
 168+ 9787 3A D4 8B     	ld a,(Limite_vertical)
 169+ 978A BA           	cp d 											; Límite - Posición.
 170+ 978B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 978C 3A D0 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 978F CB 47        	bit 0,a
 173+ 9791 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9793
 175+ 9793              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9793
 177+ 9793 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9794 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9796
 180+ 9796              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9796              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9796
 183+ 9796 3A B2 8B         ld a,(Coordenada_X)
 184+ 9799 16 0F            ld d,Centro_izquierda
 185+ 979B A7               and a
 186+ 979C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 979D 28 1E            jr z,3F
 188+ 979F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97A1              ;                                                    ; _salimos sin modificar nada.
 190+ 97A1 18 0E            jr 2F
 191+ 97A3 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97A4 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97A6
 194+ 97A6              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97A6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97A6
 197+ 97A6 3A B2 8B         ld a,(Coordenada_X)
 198+ 97A9 16 10            ld d,Centro_derecha
 199+ 97AB A7               and a
 200+ 97AC 92               sub d
 201+ 97AD 28 0E            jr z,3F
 202+ 97AF 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97B1              ;                                                    ; _salimos sin modificar nada.
 204+ 97B1 CB 43        2 bit 0,e
 205+ 97B3 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97B5 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97B6 CD 4A 98         call Modificaccionne
 208+ 97B9 C1           	pop bc
 209+ 97BA CD 5A 98         call Inicializacion
 210+ 97BD C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97BE
 212+ 97BE              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97BE
 214+ 97BE C5           4 push bc
 215+ 97BF 01 C0 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97C2 0A           	ld a,(bc)
 217+ 97C3 3D           	dec a
 218+ 97C4 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97C5 7D           	ld a,l
 220+ 97C6 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97C7 CB 47        	bit 0,a
 222+ 97C9 28 03        	jr z,5F
 223+ 97CB 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97CC 18 2E        	jr 7F
 225+ 97CE
 226+ 97CE              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97CE
 228+ 97CE 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97CF F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97D0 3A BE 8B     	ld a,(Ctrl_0)
 231+ 97D3 CB 4F        	bit 1,a
 232+ 97D5 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97D7 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97D8
 235+ 97D8              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97D8
 237+ 97D8 1C               inc e
 238+ 97D9 1D               dec e
 239+ 97DA 20 07            jr nz,12F
 240+ 97DC 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97DD 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97DE 22 C1 8B     	ld (Posicion_actual),hl
 243+ 97E1 18 44        13 jr 9F
 244+ 97E3 CB 43        12 bit 0,e
 245+ 97E5 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97E7              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97E7 C1           	pop bc
 248+ 97E8 18 D3        	jr 3B
 249+ 97EA 80           14 add b
 250+ 97EB 6F               ld l,a
 251+ 97EC 22 C1 8B     	ld (Posicion_actual),hl
 252+ 97EF CD 4A 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97F2 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97F4 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97F6 32 BE 8B         ld (Ctrl_0),a
 256+ 97F9 F1           	pop af
 257+ 97FA 18 2B        	jr 9F
 258+ 97FC
 259+ 97FC              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97FC
 261+ 97FC F5           7 push af
 262+ 97FD 3A BE 8B     	ld a,(Ctrl_0)
 263+ 9800 CB 47        	bit 0,a
 264+ 9802 20 1D        	jr nz,8F
 265+ 9804 F1           	pop af
 266+ 9805
 267+ 9805              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9805
 269+ 9805 1C           	inc e
 270+ 9806 1D               dec e
 271+ 9807 20 07            jr nz,10F
 272+ 9809 90           	sub b
 273+ 980A 6F               ld l,a
 274+ 980B 22 C1 8B     	ld (Posicion_actual),hl
 275+ 980E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9810              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9810 CB 43        10 bit 0,e
 278+ 9812 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9814              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9814 C1           	pop bc
 281+ 9815 18 A6        	jr 3B
 282+ 9817 90           16 sub b
 283+ 9818 6F               ld l,a
 284+ 9819 22 C1 8B     	ld (Posicion_actual),hl
 285+ 981C CD 4A 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 981F 18 06            jr 9F
 287+ 9821 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9823 32 BE 8B         ld (Ctrl_0),a
 289+ 9826 F1           	pop af
 290+ 9827 C1           9 pop bc
 291+ 9828 1E 00        	ld e,0
 292+ 982A CD 5A 98         call Inicializacion
 293+ 982D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 982E 08           	ex af,af
 295+ 982F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9830 18 8B            jr 3B
 297+ 9832
 298+ 9832              ; --------------------
 299+ 9832
 300+ 9832 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9834 CD 7D 99     1 call PreviousScan
 302+ 9837 10 FB            djnz 1B
 303+ 9839 22 C1 8B     	ld (Posicion_actual),hl
 304+ 983C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 983D C9           	ret
 306+ 983E
 307+ 983E              ; --------------------
 308+ 983E
 309+ 983E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9840 CD 6E 99     1 call NextScan
 311+ 9843 10 FB            djnz 1B
 312+ 9845 22 C1 8B     	ld (Posicion_actual),hl
 313+ 9848 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9849 C9           	ret
 315+ 984A
 316+ 984A              ; --------------------
 317+ 984A              ;
 318+ 984A              ;	22/01/23
 319+ 984A              ;
 320+ 984A              ;	E="1". Hemos cambiado de cuadrante.
 321+ 984A              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 984A              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 984A
 324+ 984A
 325+ 984A              Modificaccionne
 326+ 984A
 327+ 984A 3A D0 8B     	ld a,(Cuad_objeto)
 328+ 984D FE 02        	cp 2
 329+ 984F CC 32 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9852 DC 32 98         call c,Modifica_Pos_actual
 331+ 9855 C8           	ret z
 332+ 9856 CD 3E 98         call Modifica_Pos_actual2
 333+ 9859 C9               ret
 334+ 985A
 335+ 985A              ; *************************************************************************************************************************************************************************************************
 336+ 985A              ;
 337+ 985A              ;	13/8/22
 338+ 985A              ;
 339+ 985A              ;	Inicializacion
 340+ 985A              ;
 341+ 985A              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 985A              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 985A              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 985A              ;
 345+ 985A              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 985A              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 985A              ;	_ desaparece/aparece.
 348+ 985A
 349+ 985A              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 985A              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 985A              ;
 352+ 985A              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 985A              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 985A              ; 		   [E] ="0"
 355+ 985A
 356+ 985A              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 985A
 358+ 985A CD 5A 94     Inicializacion call calcula_tercio
 359+ 985D 28 36        	jr z,primit
 360+ 985F E6 02        	and 2
 361+ 9861 20 07        	jr nz,segmit
 362+ 9863 7D           	ld a,l
 363+ 9864 FE 7F        	cp $7f
 364+ 9866 38 2D        	jr c,primit
 365+ 9868 28 2B        	jr z,primit
 366+ 986A CD D0 98     segmit call column
 367+ 986D 38 13        	jr c,tercuad
 368+ 986F 3E 04        cuarcuad ld a,4
 369+ 9871 32 D0 8B     	ld (Cuad_objeto),a
 370+ 9874 21 20 48     	ld hl,$4820
 371+ 9877 22 D2 8B     	ld (Limite_horizontal),hl
 372+ 987A 21 D4 8B     	ld hl,Limite_vertical
 373+ 987D 36 0D        	ld (hl),$0d
 374+ 987F 08           	ex af,af
 375+ 9880 18 3C        	jr 1F
 376+ 9882              tercuad
 377+ 9882 3E 03        	ld a,3
 378+ 9884 32 D0 8B     	ld (Cuad_objeto),a
 379+ 9887 21 20 48     	ld hl,$4820
 380+ 988A 22 D2 8B     	ld (Limite_horizontal),hl
 381+ 988D 21 D4 8B     	ld hl,Limite_vertical
 382+ 9890 36 12        	ld (hl),$12
 383+ 9892 08           	ex af,af
 384+ 9893 18 29        	jr 1F
 385+ 9895 CD D0 98     primit call column
 386+ 9898 38 13        	jr c, primcuad
 387+ 989A              segcuad
 388+ 989A 3E 02        	ld a,2
 389+ 989C 32 D0 8B     	ld (Cuad_objeto),a
 390+ 989F 21 C0 4F     	ld hl,$4fc0
 391+ 98A2 22 D2 8B     	ld (Limite_horizontal),hl
 392+ 98A5 21 D4 8B     	ld hl,Limite_vertical
 393+ 98A8 36 0D        	ld (hl),$0d
 394+ 98AA 08           	ex af,af
 395+ 98AB 18 11        	jr 1F
 396+ 98AD              primcuad
 397+ 98AD 3E 01        	ld a,1
 398+ 98AF 32 D0 8B     	ld (Cuad_objeto),a
 399+ 98B2 21 C0 4F     	ld hl,$4fc0
 400+ 98B5 22 D2 8B     	ld (Limite_horizontal),hl
 401+ 98B8 21 D4 8B     	ld hl,Limite_vertical
 402+ 98BB 36 12        	ld (hl),$12
 403+ 98BD 08           	ex af,af
 404+ 98BE
 405+ 98BE C5           1 push bc
 406+ 98BF E5           	push hl
 407+ 98C0 D5           	push de
 408+ 98C1
 409+ 98C1 2A C1 8B     	ld hl,(Posicion_actual)
 410+ 98C4 CD 78 94     	call Genera_coordenadas
 411+ 98C7
 412+ 98C7 D1           	pop de
 413+ 98C8 E1           	pop hl
 414+ 98C9 C1           	pop bc
 415+ 98CA
 416+ 98CA 21 BE 8B     	ld hl,Ctrl_0
 417+ 98CD CB EE        	set 5,(hl)
 418+ 98CF C9           	ret
 419+ 98D0
 420+ 98D0              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98D0
 422+ 98D0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98D0              ;
 424+ 98D0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98D0
 426+ 98D0 7D           column ld a,l
 427+ 98D1 E6 1F        	and $1f
 428+ 98D3 FE 10         	cp $10
 429+ 98D5 C9            	ret
 430+ 98D6
 431+ 98D6              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98D6              ;
 433+ 98D6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98D6              ;
 435+ 98D6              ; 14/12/22
 436+ 98D6              ;
 437+ 98D6              ;	Modifica: A y BC.
 438+ 98D6
 439+ 98D6 3A D0 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98D9 E6 01        	and 1
 441+ 98DB 28 17        	jr z,1F
 442+ 98DD
 443+ 98DD              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98DD
 445+ 98DD 3A B2 8B     	ld a,(Coordenada_X)
 446+ 98E0 47           	ld b,a
 447+ 98E1 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98E2 79           	ld a,c
 449+ 98E3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98E4 38 08        	jr c,2F
 451+ 98E6 47           	ld b,a
 452+ 98E7 79           	ld a,c
 453+ 98E8 90           	sub b
 454+ 98E9 32 D1 8B     	ld (Columnas),a
 455+ 98EC 18 1B        	jr 4F
 456+ 98EE 79           2 ld a,c
 457+ 98EF 32 D1 8B     	ld (Columnas),a
 458+ 98F2 18 15        	jr 4F
 459+ 98F4
 460+ 98F4              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98F4
 462+ 98F4 3A B2 8B     1 ld a,(Coordenada_X)
 463+ 98F7 81           	add c
 464+ 98F8 3D           	dec a
 465+ 98F9 D6 1F        	sub $1f
 466+ 98FB 38 08        	jr c,3F
 467+ 98FD 47           	ld b,a
 468+ 98FE 79           	ld a,c
 469+ 98FF 90           	sub b
 470+ 9900 32 D1 8B     	ld (Columnas),a
 471+ 9903 18 04        	jr 4F
 472+ 9905 79           3 ld a,c
 473+ 9906 32 D1 8B     	ld (Columnas),a
 474+ 9909 D9           4 exx
 475+ 990A 4F           	ld c,a
 476+ 990B D9           	exx
 477+ 990C C9            ret
 478+ 990D
 479+ 990D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 990D              ;
 481+ 990D              ;   19/7/23
 482+ 990D              ;
 483+ 990D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 990D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 990D              ;
 486+ 990D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 990D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 990D              ;
 489+ 990D              ;	DESTRUYE: HL,B Y A.
 490+ 990D
 491+ 990D 3A D0 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9910 FE 02        	cp 2
 493+ 9912 38 18        	jr c,1F
 494+ 9914 28 16        	jr z,1F
 495+ 9916 E6 01        	and 1
 496+ 9918 28 0D        	jr z,3F
 497+ 991A
 498+ 991A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 991A
 500+ 991A CD 56 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 991D
 502+ 991D 7D           9 ld a,l
 503+ 991E E6 1F        	and $1f
 504+ 9920 28 2A        	jr z,7F
 505+ 9922 2B           	dec hl
 506+ 9923 10 F8        	djnz 9B
 507+ 9925 18 25        	jr 7F
 508+ 9927
 509+ 9927              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9927
 511+ 9927 2A C1 8B     3 ld hl,(Posicion_actual)
 512+ 992A 18 20        	jr 7F
 513+ 992C
 514+ 992C 28 14        1 jr z,2F
 515+ 992E
 516+ 992E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 992E
 518+ 992E CD 56 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9931
 520+ 9931 7D           4 ld a,l
 521+ 9932 E6 1F        	and $1f
 522+ 9934 28 03        	jr z,6F
 523+ 9936 2B           	dec hl
 524+ 9937 10 F8        	djnz 4B
 525+ 9939 06 0F        6 ld b,15
 526+ 993B CD 7D 99     5 call PreviousScan
 527+ 993E 10 FB        	djnz 5B
 528+ 9940 18 0A        	jr 7F
 529+ 9942
 530+ 9942              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9942
 532+ 9942 CD 56 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9945 06 0F        	ld b,15
 534+ 9947 CD 7D 99     8 call PreviousScan
 535+ 994A 10 FB        	djnz 8B
 536+ 994C
 537+ 994C E5           7 push hl
 538+ 994D DD E1        	pop ix
 539+ 994F
 540+ 994F 2A C3 8B     	ld hl,(Puntero_objeto)
 541+ 9952 E5           	push hl
 542+ 9953 FD E1        	pop iy
 543+ 9955
 544+ 9955 C9           	ret
 545+ 9956
 546+ 9956              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9956              ;
 548+ 9956              ;	2/1/23
 549+ 9956              ;
 550+ 9956              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9956              ;
 552+ 9956              ;	Tras esta rutina tenemos:
 553+ 9956              ;
 554+ 9956              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9956              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9956              ;
 557+ 9956              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9956
 559+ 9956 2A C1 8B     Operandos ld hl,(Posicion_actual)
 560+ 9959 3A D1 8B     	ld a,(Columnas)
 561+ 995C 3D           	dec a
 562+ 995D 20 01        	jr nz,1F
 563+ 995F 3C           	inc a
 564+ 9960 47           1 ld b,a
 565+ 9961 C9           	ret
 566+ 9962
 567+ 9962              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9962              ;
 569+ 9962              ;	Prepara_draw
 570+ 9962              ;
 571+ 9962              ;	Es una rutina de carga.
 572+ 9962              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9962              ;
 574+ 9962              ;	FUNCIONAMIENTO:
 575+ 9962              ;
 576+ 9962              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9962              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9962              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9962              ;
 580+ 9962              ;	DESTRUYE:
 581+ 9962              ;
 582+ 9962              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9962
 584+ 9962 21 BF 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9965 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9966 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9967 4E           	ld c,(hl)
 588+ 9968 2A C1 8B     	ld hl,(Posicion_actual)
 589+ 996B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 996D C9           	ret
 591+ 996E
 592+ 996E              ;----------------------------------------------------------------------------------------------------------------
 593+ 996E              ;
 594+ 996E              ;	5/08/22
 595+ 996E              ;
 596+ 996E              ;   NextScan.
 597+ 996E              ;
 598+ 996E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 996E              ;
 600+ 996E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 996E              ;
 602+ 996E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 996E              ;
 604+ 996E              ;       DESTRUIDOS: AF y HL !!!
 605+ 996E              ;
 606+ 996E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 996E              ;
 608+ 996E
 609+ 996E 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 996F 7C               ld a,h
 611+ 9970 E6 07            and 7
 612+ 9972 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9973
 614+ 9973 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9974 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9976 6F               ld l,a
 617+ 9977 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9978
 619+ 9978 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9979 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 997B 67               ld h,a
 622+ 997C C9               ret
 623+ 997D
 624+ 997D              ;----------------------------------------------------------------------------------------------------------------
 625+ 997D              ;
 626+ 997D              ;	5/08/22
 627+ 997D              ;
 628+ 997D              ;   PreviousScan.
 629+ 997D              ;
 630+ 997D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 997D              ;
 632+ 997D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 997D              ;
 634+ 997D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 997D              ;
 636+ 997D              ;       DESTRUIDOS: AF y HL !!!
 637+ 997D              ;
 638+ 997D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 997D              ;
 640+ 997D
 641+ 997D 7C           PreviousScan ld a,h
 642+ 997E 25               dec h               ; Dec H.
 643+ 997F E6 07            and 7
 644+ 9981 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9982
 646+ 9982 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9983 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9985 6F               ld l,a
 649+ 9986 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9987
 651+ 9987 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9988 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 998A 67               ld h,a
 654+ 998B C9               ret
 655+ 998C
 656+ 998C
 657+ 998C
 658+ 998C
 659+ 998C
 660+ 998C
 661+ 998C
 662+ 998C
 663+ 998C
 664+ 998C
 665+ 998C
 666+ 998C
# file closed: Draw_XOR.asm
2103  998C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998C
   2+ 998C              ; ******************************************************************************************************************************************************************************************
   3+ 998C              ;
   4+ 998C              ;   20/05/23
   5+ 998C              ;
   6+ 998C              ;	Recompone_posicion_inicio
   7+ 998C              ;
   8+ 998C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 998C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 998C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 998C              ;	_ a una u otra rutina.
  12+ 998C
  13+ 998C              Recompone_posicion_inicio
  14+ 998C
  15+ 998C 2A CE 8B     	ld hl,(Posicion_inicio)
  16+ 998F 7D           	ld a,l
  17+ 9990 E6 1F        	and $1f
  18+ 9992 28 16        	jr z,1F
  19+ 9994
  20+ 9994 FE 1F        	cp $1f
  21+ 9996 28 0D        	jr z,3F
  22+ 9998
  23+ 9998 21 BD 8B     	ld hl,Ctrl_2
  24+ 999B CB C6        	set 0,(hl)
  25+ 999D 2A C3 8B     	ld hl,(Puntero_objeto)
  26+ 99A0 22 EF 8B     	ld (Repone_puntero_objeto),hl
  27+ 99A3 18 08        	jr 2F
  28+ 99A5
  29+ 99A5 CD 53 9B     3 call Mov_left
  30+ 99A8 18 03        	jr 2F
  31+ 99AA
  32+ 99AA CD 30 9A     1 call Mov_right
  33+ 99AD 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99B0 22 C3 8B     	ld (Puntero_objeto),hl
  35+ 99B3 C9           	ret
  36+ 99B4
  37+ 99B4              ; ******************************************************************************************************************************************************************************************
  38+ 99B4              ;
  39+ 99B4              ;   27/05/23
  40+ 99B4              ;
  41+ 99B4              ;	Mov_down
  42+ 99B4              ;
  43+ 99B4              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99B4              ;
  45+ 99B4              ;
  46+ 99B4              Mov_down
  47+ 99B4
  48+ 99B4 CD 1E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99B7              ;																	; _ repone (Puntero_objeto).
  50+ 99B7 21 BE 8B     	ld hl,Ctrl_0
  51+ 99BA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99BC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99BC              ; 																	; _ en el caso de que no lo haya.
  54+ 99BC 3A D9 8B     	ld a,(Vel_down)
  55+ 99BF 47           	ld b,a
  56+ 99C0 2A C1 8B         ld hl,(Posicion_actual)
  57+ 99C3 CD 5A 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99C6 E6 02        	and 2
  59+ 99C8 28 17        	jr z,1F
  60+ 99CA
  61+ 99CA              ; Nos encontramos en el último tercio de pantalla.
  62+ 99CA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99CA
  64+ 99CA 7C           	ld a,h
  65+ 99CB FE 57        	cp $57
  66+ 99CD 20 12        	jr nz,1F
  67+ 99CF
  68+ 99CF 7D           	ld a,l
  69+ 99D0 C6 20        	add $20
  70+ 99D2 30 0D        	jr nc,1F
  71+ 99D4
  72+ 99D4              ; ------------------------------
  73+ 99D4              ;
  74+ 99D4              ;	12/01/24
  75+ 99D4
  76+ 99D4              ;	call Reaparece_arriba
  77+ 99D4 CD E0 9C     	call Reinicio
  78+ 99D7
  79+ 99D7              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99D7
  81+ 99D7 3A 23 8C     	ld a,(Ctrl_3)
  82+ 99DA CB CF        	set 1,a
  83+ 99DC 32 23 8C     	ld (Ctrl_3),a
  84+ 99DF
  85+ 99DF 18 08        	jr 3F
  86+ 99E1              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99E1              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99E1              ; ------------------------------
  89+ 99E1
  90+ 99E1 CD 6E 99     1 call NextScan
  91+ 99E4 22 C1 8B     	ld (Posicion_actual),hl
  92+ 99E7 10 DA            djnz 2B
  93+ 99E9 CD 78 94     3 call Genera_coordenadas
  94+ 99EC C9           	ret
  95+ 99ED
  96+ 99ED              ; ******************************************************************************************************************************************************************************************
  97+ 99ED              ;
  98+ 99ED              ;   27/05/23
  99+ 99ED              ;
 100+ 99ED              ;	Mov_up
 101+ 99ED              ;
 102+ 99ED              ; 	Mueve el Sprite hacia arriba.
 103+ 99ED              ;
 104+ 99ED              ;
 105+ 99ED              Mov_up
 106+ 99ED
 107+ 99ED CD 1E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99F0              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99F0 21 BE 8B     	ld hl,Ctrl_0
 110+ 99F3 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99F5              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99F5              ; 																		; _ en el caso de que no lo haya.
 113+ 99F5 3A D8 8B     	ld a,(Vel_up)
 114+ 99F8 47           	ld b,a
 115+ 99F9 2A C1 8B     	ld hl,(Posicion_actual)
 116+ 99FC CD 5A 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 99FF A7           	and a
 118+ 9A00 20 10        	jr nz,1F
 119+ 9A02
 120+ 9A02              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A02              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A02
 123+ 9A02 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A03 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A05 20 0B            jr nz,1F
 126+ 9A07 7D               ld a,l
 127+ 9A08 D6 20            sub $20
 128+ 9A0A 30 06            jr nc,1F
 129+ 9A0C 25               dec h
 130+ 9A0D
 131+ 9A0D              ; -----------------------------
 132+ 9A0D CD C1 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A10              ;	call Reinicio
 134+ 9A10              ; -----------------------------
 135+ 9A10
 136+ 9A10 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A12 CD 7D 99     1 call PreviousScan
 138+ 9A15 22 C1 8B     	ld (Posicion_actual),hl
 139+ 9A18 10 E2            djnz 3B
 140+ 9A1A CD 78 94     2 call Genera_coordenadas
 141+ 9A1D C9           	ret
 142+ 9A1E
 143+ 9A1E              ; -----------------------------
 144+ 9A1E              ;
 145+ 9A1E              ;	27/5/23
 146+ 9A1E              ;
 147+ 9A1E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A1E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A1E              ;
 150+ 9A1E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A1E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A1E              ;
 153+ 9A1E              ;	Modifica: A y (Puntero_objeto).
 154+ 9A1E
 155+ 9A1E 3A BD 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A21 CB 47        	bit 0,a
 157+ 9A23 C8           	ret z
 158+ 9A24 CB 87        	res 0,a
 159+ 9A26 32 BD 8B     	ld (Ctrl_2),a
 160+ 9A29 2A EF 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A2C 22 C3 8B     	ld (Puntero_objeto),hl
 162+ 9A2F C9           	ret
 163+ 9A30
 164+ 9A30              ; ******************************************************************************************************************************************************************************************
 165+ 9A30              ;
 166+ 9A30              ;	19/10/22
 167+ 9A30              ;
 168+ 9A30              ;	Mov_right.
 169+ 9A30              ;
 170+ 9A30              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A30              ;
 172+ 9A30
 173+ 9A30 3A BE 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A33 CB 77        	bit 6,a
 175+ 9A35 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A37
 177+ 9A37 CD 6F 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A3A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A3B
 180+ 9A3B 21 BE 8B     	ld hl,Ctrl_0
 181+ 9A3E CB E6        	set 4,(hl)
 182+ 9A40 18 52        	jr 8F
 183+ 9A42
 184+ 9A42 21 BE 8B     10 ld hl,Ctrl_0
 185+ 9A45 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A47              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A47              ; 																	; _ en el caso de que no lo haya.
 188+ 9A47 3A B2 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A4A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A4C 20 46        	jr nz,8F
 191+ 9A4E
 192+ 9A4E 3A C5 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A51 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A52 28 40        	jr z,8F
 195+ 9A54
 196+ 9A54              ; ---------- ---------- ----------
 197+ 9A54              ;
 198+ 9A54              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A54
 200+ 9A54 3A D7 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A57 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A59 28 11        	jr z,1F
 203+ 9A5B 38 06        	jr c,6F
 204+ 9A5D FE 04        	cp 4
 205+ 9A5F 28 14        	jr z,7F
 206+ 9A61 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A63
 208+ 9A63              ; ---------- ---------- ----------
 209+ 9A63              ;
 210+ 9A63              ; Perfiles de velocidad
 211+ 9A63              ;
 212+ 9A63
 213+ 9A63 3A C5 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A66 FE FE        	cp $fe
 215+ 9A68 20 2A        	jr nz,8F
 216+ 9A6A 18 10        	jr 3F
 217+ 9A6C 3A C5 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A6F FE FD        	cp $fd
 219+ 9A71 20 21        	jr nz,8F
 220+ 9A73 18 07        	jr 3F
 221+ 9A75 3A C5 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A78 FE FB        	cp $fb
 223+ 9A7A 20 18        	jr nz,8F
 224+ 9A7C
 225+ 9A7C              ; ---------- ---------- ----------
 226+ 9A7C
 227+ 9A7C              3
 228+ 9A7C CD AF 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A7F              ;	call Reinicio
 230+ 9A7F
 231+ 9A7F              ; ---------- ---------- ----------
 232+ 9A7F              ;
 233+ 9A7F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A7F
 235+ 9A7F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A81 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A82 CD 9B 9A     	call DESPLZ_DER
 238+ 9A85 C1           	pop bc
 239+ 9A86 10 F9        	djnz 5B
 240+ 9A88 2A C1 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A8B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A8C 22 C1 8B     	ld (Posicion_actual),hl
 243+ 9A8F CD 78 94     	call Genera_coordenadas
 244+ 9A92 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A94
 246+ 9A94              ; ---------- ---------- ----------
 247+ 9A94
 248+ 9A94 2A C1 8B     8 ld hl,(Posicion_actual)
 249+ 9A97 CD 9B 9A     	call DESPLZ_DER
 250+ 9A9A C9           2 ret
 251+ 9A9B
 252+ 9A9B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A9B              ;
 254+ 9A9B              ;	22/9/22
 255+ 9A9B              ;
 256+ 9A9B
 257+ 9A9B CD AA 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A9E CD F6 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9AA1 CD 1F 9B         call Ciclo_completo
 260+ 9AA4 21 BE 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AA7 CB FE        	set 7,(hl)
 262+ 9AA9 C9           	ret
 263+ 9AAA
 264+ 9AAA              ; ******************************************************************************************************************************************************************************************
 265+ 9AAA              ;	15/02/23
 266+ 9AAA              ;
 267+ 9AAA
 268+ 9AAA 3A D7 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AAD 47           	ld b,a
 270+ 9AAE 2A CA 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AB1 23           1 inc hl
 272+ 9AB2 23           	inc hl
 273+ 9AB3 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AB5 22 CA 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AB8 CD 59 90     	call Extrae_address
 276+ 9ABB 22 C3 8B     	ld (Puntero_objeto),hl
 277+ 9ABE
 278+ 9ABE              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9ABE
 280+ 9ABE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9ABE              ; Cuántos movimientos hemos hecho ??
 282+ 9ABE              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9ABE
 284+ 9ABE 2A C6 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AC1 EB           	ex de,hl
 286+ 9AC2 A7           	and a
 287+ 9AC3 ED 52        	sbc hl,de
 288+ 9AC5 CB 3D        	srl l
 289+ 9AC7 3E 08        6 ld a,8
 290+ 9AC9 95           	sub l
 291+ 9ACA 30 1E        	jr nc,3F
 292+ 9ACC
 293+ 9ACC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9ACC              ; B="0".
 295+ 9ACC
 296+ 9ACC 04           4 inc b
 297+ 9ACD 3C           	inc a
 298+ 9ACE 20 FC        	jr nz,4B
 299+ 9AD0 78           	ld a,b
 300+ 9AD1 08           	ex af,af
 301+ 9AD2 2A C6 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AD5 23           5 inc hl
 303+ 9AD6 23           	inc hl
 304+ 9AD7 10 FC        	djnz 5B
 305+ 9AD9 22 CA 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9ADC CD 59 90     	call Extrae_address
 307+ 9ADF 22 C3 8B     	ld (Puntero_objeto),hl
 308+ 9AE2
 309+ 9AE2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AE2              ; _(Posicion_actual).
 311+ 9AE2
 312+ 9AE2 21 C1 8B     	ld hl,Posicion_actual
 313+ 9AE5 34           	inc (hl)
 314+ 9AE6 08               ex af,af
 315+ 9AE7 6F           	ld l,a
 316+ 9AE8 18 DD        	jr 6B
 317+ 9AEA
 318+ 9AEA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AEA
 320+ 9AEA 47           3 ld b,a
 321+ 9AEB 2A C8 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9AEE 23           2 inc hl
 323+ 9AEF 23           	inc hl
 324+ 9AF0 10 FC        	djnz 2B
 325+ 9AF2 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AF5 C9           8 ret
 327+ 9AF6
 328+ 9AF6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AF6              ;
 330+ 9AF6              ;	24/7/22
 331+ 9AF6              ;
 332+ 9AF6              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AF6              ;
 334+ 9AF6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AF6              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AF6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AF6
 338+ 9AF6 3A C5 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AF9 A7           	and a
 340+ 9AFA 20 1F        	jr nz,1F
 341+ 9AFC D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9AFE 32 C5 8B         ld (CTRL_DESPLZ),a
 343+ 9B01
 344+ 9B01 21 C0 8B     	ld hl,Columns
 345+ 9B04 34           	inc (hl)
 346+ 9B05 3A D0 8B     	ld a,(Cuad_objeto)
 347+ 9B08 E6 01        	and 1
 348+ 9B0A 28 0F        	jr z,1F
 349+ 9B0C 2A C1 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B0F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B10 22 C1 8B     	ld (Posicion_actual),hl
 352+ 9B13 CD 78 94     	call Genera_coordenadas
 353+ 9B16 CD 7B 9C     	call Inc_CTRL_DESPLZ
 354+ 9B19 18 03        	jr 2F
 355+ 9B1B CD 7B 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B1E C9           2 ret
 357+ 9B1F
 358+ 9B1F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B1F              ;
 360+ 9B1F              ;	24/7/22
 361+ 9B1F              ;
 362+ 9B1F              ;	Ciclo_completo.
 363+ 9B1F              ;
 364+ 9B1F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B1F              ;
 366+ 9B1F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B1F              ; 	Decrementamos (Columns).
 368+ 9B1F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B1F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B1F
 371+ 9B1F
 372+ 9B1F 3A C5 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B22 FE FF        	cp $ff
 374+ 9B24 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B26 E6 F0        	and $f0
 376+ 9B28 20 28        	jr nz,3F
 377+ 9B2A
 378+ 9B2A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B2A
 380+ 9B2A 3A C5 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B2D 47           	ld b,a
 382+ 9B2E 3E F8        	ld a,$f8
 383+ 9B30 80           	add b
 384+ 9B31 32 C5 8B     	ld (CTRL_DESPLZ),a
 385+ 9B34 18 1C        	jr 3F
 386+ 9B36 21 C0 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B39 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B3A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B3B 32 C5 8B     	ld (CTRL_DESPLZ),a
 390+ 9B3E 3A D0 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B41 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B43 20 0A        	jr nz,2F
 393+ 9B45 2A C1 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B48 23           	inc hl
 395+ 9B49 22 C1 8B     	ld (Posicion_actual),hl
 396+ 9B4C CD 78 94     	call Genera_coordenadas
 397+ 9B4F
 398+ 9B4F              ; Inicia el puntero de Sprite.
 399+ 9B4F
 400+ 9B4F CD 6E 90     2 call Inicia_puntero_objeto_der
 401+ 9B52 C9           3 ret
 402+ 9B53
 403+ 9B53              ; ******************************************************************************************************************************************************************************************
 404+ 9B53              ;
 405+ 9B53              ;	15/02/23
 406+ 9B53              ;
 407+ 9B53              ;	Mov_left.
 408+ 9B53              ;
 409+ 9B53              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B53              ;
 411+ 9B53              Mov_left
 412+ 9B53
 413+ 9B53 21 BE 8B     	ld hl,Ctrl_0
 414+ 9B56 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B58              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B58              ; 																	; _ en el caso de que no lo haya.
 417+ 9B58 3A BE 8B     	ld a,(Ctrl_0)
 418+ 9B5B CB 77        	bit 6,a
 419+ 9B5D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B5F
 421+ 9B5F CD 75 9C     	call Stop_Amadeus_left
 422+ 9B62 C8           	ret z
 423+ 9B63 20 4A        	jr nz,8F
 424+ 9B65
 425+ 9B65 3A B2 8B     11 ld a,(Coordenada_X)
 426+ 9B68 A7           	and a
 427+ 9B69 20 44        	jr nz,8F
 428+ 9B6B
 429+ 9B6B 3A C5 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B6E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B6F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B71
 433+ 9B71              ; ---------- ---------- ----------
 434+ 9B71
 435+ 9B71 3A D6 8B     	ld a,(Vel_left)
 436+ 9B74 FE 02        	cp 2
 437+ 9B76 28 0F        	jr z,1F
 438+ 9B78 38 04        	jr c,6F
 439+ 9B7A FE 04        	cp 4
 440+ 9B7C 28 12        	jr z,7F
 441+ 9B7E
 442+ 9B7E              ; ---------- ---------- ----------
 443+ 9B7E
 444+ 9B7E 3A C5 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B81 FE F8        	cp $f8
 446+ 9B83 20 2A        	jr nz,8F
 447+ 9B85 18 10        	jr 4F
 448+ 9B87 3A C5 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B8A FE F9        	cp $f9
 450+ 9B8C 20 21        	jr nz,8F
 451+ 9B8E 18 07        	jr 4F
 452+ 9B90 3A C5 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B93 FE FB        	cp $fb
 454+ 9B95 20 18        	jr nz,8F
 455+ 9B97
 456+ 9B97              ; ---------- ---------- ----------
 457+ 9B97
 458+ 9B97              4
 459+ 9B97 CD 9D 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B9A              ;	call Reinicio
 461+ 9B9A
 462+ 9B9A              ; ---------- ---------- ----------
 463+ 9B9A
 464+ 9B9A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B9C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B9D
 467+ 9B9D              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B9D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B9D
 470+ 9B9D CD B6 9B     	call DESPLZ_IZQ
 471+ 9BA0 C1           	pop bc
 472+ 9BA1 10 F9        	djnz 5B
 473+ 9BA3 2A C1 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BA6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BA7 22 C1 8B     	ld (Posicion_actual),hl
 476+ 9BAA CD 78 94     	call Genera_coordenadas
 477+ 9BAD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BAF
 479+ 9BAF              ; ---------- ---------- ----------
 480+ 9BAF
 481+ 9BAF              ; Movemos, no hay recolocación.
 482+ 9BAF
 483+ 9BAF 2A C1 8B     8 ld hl,(Posicion_actual)
 484+ 9BB2 CD B6 9B     	call DESPLZ_IZQ
 485+ 9BB5 C9           2 ret
 486+ 9BB6
 487+ 9BB6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BB6              ;
 489+ 9BB6              ;	22/9/22
 490+ 9BB6
 491+ 9BB6              DESPLZ_IZQ
 492+ 9BB6
 493+ 9BB6 CD C5 9B     	call Desplaza_izquierda
 494+ 9BB9 CD 11 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BBC CD 39 9C     	call Ciclo_completo_2
 496+ 9BBF 21 BE 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BC2 CB BE        	res 7,(hl)
 498+ 9BC4 C9           	ret
 499+ 9BC5
 500+ 9BC5              Desplaza_izquierda
 501+ 9BC5
 502+ 9BC5 3A D6 8B     	ld a,(Vel_left)
 503+ 9BC8 47           	ld b,a
 504+ 9BC9 2A CC 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BCC 23           1 inc hl
 506+ 9BCD 23           	inc hl
 507+ 9BCE 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BD0 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BD3 CD 59 90     	call Extrae_address
 510+ 9BD6 22 C3 8B     	ld (Puntero_objeto),hl
 511+ 9BD9
 512+ 9BD9              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BD9
 514+ 9BD9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BD9              ; Cuántos movimientos hemos hecho ??
 516+ 9BD9              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BD9
 518+ 9BD9 2A C8 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BDC EB           	ex de,hl
 520+ 9BDD A7           	and a
 521+ 9BDE ED 52        	sbc hl,de
 522+ 9BE0 CB 3D        	srl l
 523+ 9BE2 3E 08        6 ld a,8
 524+ 9BE4 95           	sub l
 525+ 9BE5 30 1E        	jr nc,3F
 526+ 9BE7
 527+ 9BE7              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BE7              ; B="0".
 529+ 9BE7
 530+ 9BE7 04           4 inc b
 531+ 9BE8 3C           	inc a
 532+ 9BE9 20 FC        	jr nz,4B
 533+ 9BEB 78           	ld a,b
 534+ 9BEC 08           	ex af,af
 535+ 9BED 2A C8 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BF0 23           5 inc hl
 537+ 9BF1 23           	inc hl
 538+ 9BF2 10 FC        	djnz 5B
 539+ 9BF4 22 CC 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BF7 CD 59 90     	call Extrae_address
 541+ 9BFA 22 C3 8B     	ld (Puntero_objeto),hl
 542+ 9BFD
 543+ 9BFD              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BFD              ; _(Posicion_actual).
 545+ 9BFD
 546+ 9BFD 21 C1 8B     	ld hl,Posicion_actual
 547+ 9C00 35           	dec (hl)
 548+ 9C01 08           	ex af,af
 549+ 9C02 6F           	ld l,a
 550+ 9C03 18 DD        	jr 6B
 551+ 9C05
 552+ 9C05              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C05
 554+ 9C05 47           3 ld b,a
 555+ 9C06 2A C6 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C09 23           2 inc hl
 557+ 9C0A 23           	inc hl
 558+ 9C0B 10 FC        	djnz 2B
 559+ 9C0D 22 CA 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C10 C9           8 ret
 561+ 9C11
 562+ 9C11              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C11              ;
 564+ 9C11              ;	modifica_parametros_1er_DESPLZ
 565+ 9C11              ;
 566+ 9C11              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C11              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C11              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C11
 570+ 9C11 3A C5 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C14 A7           	and a
 572+ 9C15 20 1E        	jr nz,1F
 573+ 9C17 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C18 32 C5 8B         ld (CTRL_DESPLZ),a
 575+ 9C1B 21 C0 8B     	ld hl,Columns
 576+ 9C1E 34           	inc (hl)
 577+ 9C1F 3A D0 8B     	ld a,(Cuad_objeto)
 578+ 9C22 E6 01        	and 1
 579+ 9C24 20 0F        	jr nz,1F
 580+ 9C26 2A C1 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C29 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C2A 22 C1 8B     	ld (Posicion_actual),hl
 583+ 9C2D CD 78 94     	call Genera_coordenadas
 584+ 9C30 CD 8C 9C     	call Dec_CTRL_DESPLZ
 585+ 9C33 18 03        	jr 2F
 586+ 9C35 CD 8C 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C38 C9           2 ret
 588+ 9C39
 589+ 9C39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C39
 591+ 9C39 3A C5 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C3C FE F7        	cp $f7
 593+ 9C3E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C40 30 2C        	jr nc,3F
 595+ 9C42
 596+ 9C42              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C42
 598+ 9C42 06 00        	ld b,0
 599+ 9C44 04           4 inc b
 600+ 9C45 3C           	inc a
 601+ 9C46 FE F7        	cp $f7
 602+ 9C48 20 FA        	jr nz,4B
 603+ 9C4A 3E FF        	ld a,$ff
 604+ 9C4C 90           	sub b
 605+ 9C4D 32 C5 8B     	ld (CTRL_DESPLZ),a
 606+ 9C50 18 1C        	jr 3F
 607+ 9C52
 608+ 9C52              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C52
 610+ 9C52 21 C0 8B     1 ld hl,Columns
 611+ 9C55 35           	dec (hl)
 612+ 9C56 AF           	xor a
 613+ 9C57 32 C5 8B     	ld (CTRL_DESPLZ),a
 614+ 9C5A 3A D0 8B     	ld a,(Cuad_objeto)
 615+ 9C5D E6 01        	and 1
 616+ 9C5F 28 0A        	jr z,2F
 617+ 9C61 2A C1 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C64 2B           	dec hl
 619+ 9C65 22 C1 8B     	ld (Posicion_actual),hl
 620+ 9C68 CD 78 94     	call Genera_coordenadas
 621+ 9C6B
 622+ 9C6B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C6B
 624+ 9C6B CD 81 90     2 call Inicia_puntero_objeto_izq
 625+ 9C6E C9           3 ret
 626+ 9C6F
 627+ 9C6F              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C6F              ;
 629+ 9C6F              ;	19/10/22
 630+ 9C6F              ;
 631+ 9C6F              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C6F              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C6F
 634+ 9C6F 3A B2 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C72 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C74 C9           	ret
 637+ 9C75
 638+ 9C75              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C75              ;
 640+ 9C75              ;	19/10/22
 641+ 9C75              ;
 642+ 9C75              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C75              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C75
 645+ 9C75 3A B2 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C78 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C7A C9           	ret
 648+ 9C7B
 649+ 9C7B              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C7B              ;
 651+ 9C7B              ;	24/7/22
 652+ 9C7B              ;
 653+ 9C7B              ;	Inc_CTRL_DESPLZ
 654+ 9C7B              ;
 655+ 9C7B              ;
 656+ 9C7B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C7B
 658+ 9C7B 21 C5 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C7E 3A D7 8B     	ld a,(Vel_right)
 660+ 9C81 A7           	and a
 661+ 9C82 28 06        	jr z,1F
 662+ 9C84 47           	ld b,a
 663+ 9C85 34           3 inc (hl)
 664+ 9C86 10 FD        	djnz 3B
 665+ 9C88 18 01        	jr 2F
 666+ 9C8A 34           1 inc (hl)
 667+ 9C8B C9           2 ret
 668+ 9C8C
 669+ 9C8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C8C              ;
 671+ 9C8C              ;	5/2/23
 672+ 9C8C              ;
 673+ 9C8C              ;	Dec_CTRL_DESPLZ
 674+ 9C8C              ;
 675+ 9C8C              ;
 676+ 9C8C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C8C
 678+ 9C8C 21 C5 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C8F 3A D6 8B     	ld a,(Vel_left)
 680+ 9C92 A7           	and a
 681+ 9C93 28 06        	jr z,1F
 682+ 9C95 47           	ld b,a
 683+ 9C96 35           3 dec (hl)
 684+ 9C97 10 FD        	djnz 3B
 685+ 9C99 18 01        	jr 2F
 686+ 9C9B 35           1 dec (hl)
 687+ 9C9C C9           2 ret
 688+ 9C9D
 689+ 9C9D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C9D
 691+ 9C9D 2A C1 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CA0 01 1F 00     	ld bc,31
 693+ 9CA3 A7           	and a
 694+ 9CA4 ED 4A        	adc hl,bc
 695+ 9CA6 22 C1 8B     	ld (Posicion_actual),hl
 696+ 9CA9 21 BE 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CAC CB C6        	set 0,(hl)
 698+ 9CAE C9           	ret
 699+ 9CAF
 700+ 9CAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CAF
 702+ 9CAF 2A C1 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CB2 01 1F 00     	ld bc,31
 704+ 9CB5 A7           	and a
 705+ 9CB6 ED 42        	sbc hl,bc
 706+ 9CB8 22 C1 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CBB 21 BE 8B     	ld hl,Ctrl_0
 708+ 9CBE CB CE        	set 1,(hl)
 709+ 9CC0 C9           	ret
 710+ 9CC1
 711+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CC1
 713+ 9CC1 24           Reaparece_abajo inc h
 714+ 9CC2 01 E0 17     	ld bc,$17e0
 715+ 9CC5 A7           	and a
 716+ 9CC6 ED 4A        	adc hl,bc
 717+ 9CC8 22 C1 8B     	ld (Posicion_actual),hl
 718+ 9CCB 21 BE 8B     	ld hl,Ctrl_0
 719+ 9CCE CB D6        	set 2,(hl)
 720+ 9CD0 C9           	ret
 721+ 9CD1
 722+ 9CD1              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CD1
 724+ 9CD1 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CD4 A7           	and a
 726+ 9CD5 ED 42        	sbc hl,bc
 727+ 9CD7 22 C1 8B     	ld (Posicion_actual),hl
 728+ 9CDA 21 BE 8B     	ld hl,Ctrl_0
 729+ 9CDD CB DE        	set 3,(hl)
 730+ 9CDF C9           	ret
 731+ 9CE0
 732+ 9CE0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CE0              ;
 734+ 9CE0              ;	15/07/23
 735+ 9CE0
 736+ 9CE0              Reinicio
 737+ 9CE0
 738+ 9CE0              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CE0
 740+ 9CE0 AF           	xor a
 741+ 9CE1 21 E6 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CE4 CD 02 9D     	call Limpia_contenido_hl
 743+ 9CE7
 744+ 9CE7 21 C1 8B     	ld hl,Posicion_actual
 745+ 9CEA CD 02 9D     	call Limpia_contenido_hl
 746+ 9CED
 747+ 9CED CD 5A 92     	call Inicializa_Puntero_indice_mov
 748+ 9CF0 CD 01 9E     	call Inicia_Puntero_mov
 749+ 9CF3
 750+ 9CF3 21 E8 8B     	ld hl,Incrementa_puntero
 751+ 9CF6 06 05        	ld b,5
 752+ 9CF8 77           1 ld (hl),a
 753+ 9CF9 23           	inc hl
 754+ 9CFA 10 FC        	djnz 1B
 755+ 9CFC
 756+ 9CFC 21 BD 8B     	ld hl,Ctrl_2
 757+ 9CFF CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D01
 759+ 9D01 C9           	ret
 760+ 9D02
 761+ 9D02 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D03 23           	inc hl
 763+ 9D04 77           	ld (hl),a
 764+ 9D05 C9           	ret
 765+ 9D06
 766+ 9D06              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D06              ;
 768+ 9D06              ;	18/6/24
 769+ 9D06              ;
 770+ 9D06
 771+ 9D06              Amadeus_a_izquierda
 772+ 9D06
 773+ 9D06              ;	Actualiza contador de movimientos.
 774+ 9D06
 775+ 9D06 21 6F 89     	ld hl,Comm_Amadeus
 776+ 9D09 35           	dec (hl)
 777+ 9D0A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D0C
 779+ 9D0C 2A 6D 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D0F 2B           	dec hl
 781+ 9D10 2B           	dec hl
 782+ 9D11 2B           	dec hl
 783+ 9D12 2B           	dec hl
 784+ 9D13 22 6D 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D16
 786+ 9D16 21 23 8C     	ld hl,Ctrl_3
 787+ 9D19 CB EE        	set 5,(hl)
 788+ 9D1B
 789+ 9D1B C9           	ret
 790+ 9D1C
 791+ 9D1C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D1D C9           	ret
 793+ 9D1E
 794+ 9D1E
 795+ 9D1E              Amadeus_a_derecha
 796+ 9D1E
 797+ 9D1E              ;	Actualiza contador de movimientos.
 798+ 9D1E
 799+ 9D1E 21 6F 89     	ld hl,Comm_Amadeus
 800+ 9D21 34           	inc (hl)
 801+ 9D22 3E 7A        	ld a,$7a
 802+ 9D24 BE           	cp (hl)
 803+ 9D25 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D27
 805+ 9D27 2A 6D 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D2A 23           	inc hl
 807+ 9D2B 23           	inc hl
 808+ 9D2C 23           	inc hl
 809+ 9D2D 23           	inc hl
 810+ 9D2E 22 6D 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D31
 812+ 9D31 21 23 8C     	ld hl,Ctrl_3
 813+ 9D34 CB EE        	set 5,(hl)
 814+ 9D36 C9           	ret
 815+ 9D37
 816+ 9D37 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D38 C9           	ret
# file closed: Direcciones.asm
2104  9D39              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D39              ; ----- ----- ----- ----- -----
   2+ 9D39              ;
   3+ 9D39              ;   28/12/23
   4+ 9D39
   5+ 9D39              Movimiento
   6+ 9D39
   7+ 9D39              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D39
   9+ 9D39 3A BD 8B         ld a,(Ctrl_2)
  10+ 9D3C CB 57            bit 2,a
  11+ 9D3E 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D40
  13+ 9D40 2A E4 8B         ld hl,(Puntero_mov)
  14+ 9D43 7E               ld a,(hl)
  15+ 9D44
  16+ 9D44              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D44
  18+ 9D44              Inicia_desplazamiento.
  19+ 9D44
  20+ 9D44              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D44
  22+ 9D44 CD 37 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D47
  24+ 9D47              ; Iniciamos (Repetimos_mov).
  25+ 9D47
  26+ 9D47 7E               ld a,(hl)
  27+ 9D48 E6 0F            and $0f
  28+ 9D4A 32 EA 8B         ld (Repetimos_desplazamiento),a
  29+ 9D4D 32 EB 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D50
  31+ 9D50              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D50
  33+ 9D50 23               inc hl
  34+ 9D51 7E               ld a,(hl)
  35+ 9D52 32 ED 8B         ld (Cola_de_desplazamiento),a
  36+ 9D55 2B               dec hl
  37+ 9D56
  38+ 9D56 21 BD 8B         ld hl,Ctrl_2
  39+ 9D59 CB D6            set 2,(hl)
  40+ 9D5B
  41+ 9D5B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D5B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D5B
  44+ 9D5B              Desplazamiento_iniciado
  45+ 9D5B
  46+ 9D5B CD 0B 9E         call Aplica_desplazamiento
  47+ 9D5E
  48+ 9D5E              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D5E
  50+ 9D5E 3A 23 8C         ld a,(Ctrl_3)
  51+ 9D61 CB 4F            bit 1,a
  52+ 9D63 C0               ret nz
  53+ 9D64
  54+ 9D64 21 EA 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D67 35               dec (hl)
  56+ 9D68 C0               ret nz
  57+ 9D69
  58+ 9D69              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D69              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D69              ; Analiza (Cola_de_desplazamiento).
  61+ 9D69
  62+ 9D69 3A ED 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D6C A7               and a
  64+ 9D6D CC 60 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D70 28 30            jr z,Reinicia_el_movimiento
  66+ 9D72
  67+ 9D72 FE FF            cp $ff
  68+ 9D74 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D76
  70+ 9D76 FE FE            cp $fe
  71+ 9D78 CC E5 9D         call z,Fijamos_bucle
  72+ 9D7B 28 25            jr z,Reinicia_el_movimiento
  73+ 9D7D
  74+ 9D7D FE FD            cp $fd
  75+ 9D7F 20 11            jr nz,1F
  76+ 9D81
  77+ 9D81              ; ---
  78+ 9D81              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D81
  80+ 9D81 3A BD 8B         ld a,(Ctrl_2)
  81+ 9D84 CB 5F            bit 3,a
  82+ 9D86 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D88
  84+ 9D88              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D88
  86+ 9D88 21 BD 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D8B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D8D
  89+ 9D8D CD F6 9D         call Inicia_Repetimos_movimiento
  90+ 9D90 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D92              ; ---
  92+ 9D92
  93+ 9D92 FE 01        1 cp 1
  94+ 9D94 CA CF 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D97
  96+ 9D97 3D               dec a
  97+ 9D98 32 ED 8B         ld (Cola_de_desplazamiento),a
  98+ 9D9B
  99+ 9D9B 3A EB 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D9E 32 EA 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DA1              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DA1 C9               ret
 103+ 9DA2
 104+ 9DA2              Reinicia_el_movimiento
 105+ 9DA2
 106+ 9DA2 3A BD 8B         ld a,(Ctrl_2)
 107+ 9DA5 CB 5F            bit 3,a
 108+ 9DA7 28 1B            jr z,2F
 109+ 9DA9
 110+ 9DA9              ; (Cola_de_desplazamiento)="254".
 111+ 9DA9
 112+ 9DA9 21 EC 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DAC 35               dec (hl)
 114+ 9DAD 20 15            jr nz,2F
 115+ 9DAF
 116+ 9DAF              ; Fin de las repeticiones del último movimiento.
 117+ 9DAF
 118+ 9DAF 21 BD 8B         ld hl,Ctrl_2
 119+ 9DB2 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DB4
 121+ 9DB4 2A E4 8B         ld hl,(Puntero_mov)
 122+ 9DB7 23               inc hl
 123+ 9DB8 23               inc hl
 124+ 9DB9 23               inc hl
 125+ 9DBA 22 E4 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DBD              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DBD 7E               ld a,(hl)
 128+ 9DBE 32 ED 8B         ld (Cola_de_desplazamiento),a
 129+ 9DC1
 130+ 9DC1 C3 69 9D         jp Cola
 131+ 9DC4
 132+ 9DC4 CD 01 9E     2 call Inicia_Puntero_mov
 133+ 9DC7
 134+ 9DC7 21 BD 8B         ld hl,Ctrl_2
 135+ 9DCA CB 96            res 2,(hl)
 136+ 9DCC
 137+ 9DCC C3 39 9D         jp Movimiento
 138+ 9DCF
 139+ 9DCF              Siguiente_desplazamiento
 140+ 9DCF
 141+ 9DCF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DCF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DCF
 144+ 9DCF 21 BD 8B         ld hl,Ctrl_2
 145+ 9DD2 CB 96            res 2,(hl)
 146+ 9DD4
 147+ 9DD4 2A E4 8B         ld hl,(Puntero_mov)
 148+ 9DD7 23               inc hl
 149+ 9DD8 23               inc hl
 150+ 9DD9 22 E4 8B         ld (Puntero_mov),hl
 151+ 9DDC
 152+ 9DDC 7E               ld a,(hl)
 153+ 9DDD A7               and a
 154+ 9DDE CC 60 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DE1 CA A2 9D         jp z,Reinicia_el_movimiento
 156+ 9DE4
 157+ 9DE4 C9               ret
 158+ 9DE5
 159+ 9DE5              ; Subrutinas -----------------------------------------
 160+ 9DE5              ; ---------- --------- --------- ---------- ----------
 161+ 9DE5              ;
 162+ 9DE5              ;   24/07/23
 163+ 9DE5              ;
 164+ 9DE5              ;   Fijamos_bucle
 165+ 9DE5              ;
 166+ 9DE5              ;
 167+ 9DE5
 168+ 9DE5              Fijamos_bucle
 169+ 9DE5
 170+ 9DE5 3A E8 8B         ld a,(Incrementa_puntero)
 171+ 9DE8 3C               inc a
 172+ 9DE9 32 E9 8B         ld (Incrementa_puntero_backup),a
 173+ 9DEC
 174+ 9DEC CD 60 9E         call Incrementa_Puntero_indice_mov
 175+ 9DEF 2A E2 8B         ld hl,(Puntero_indice_mov)
 176+ 9DF2 22 E6 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DF5 C9               ret
 178+ 9DF6
 179+ 9DF6              ; ---------- --------- --------- ---------- ----------
 180+ 9DF6              ;
 181+ 9DF6              ;   07/7/23
 182+ 9DF6              ;
 183+ 9DF6              ;   Inicia_Repetimos_movimiento
 184+ 9DF6              ;
 185+ 9DF6              ;
 186+ 9DF6
 187+ 9DF6              Inicia_Repetimos_movimiento
 188+ 9DF6
 189+ 9DF6              ; Iniciamos (Repetimos_movimiento).
 190+ 9DF6
 191+ 9DF6 DD 2A E4 8B      ld ix,(Puntero_mov)
 192+ 9DFA DD 7E 02         ld a,(ix+2)
 193+ 9DFD 32 EC 8B         ld (Repetimos_movimiento),a
 194+ 9E00
 195+ 9E00 C9               ret
 196+ 9E01
 197+ 9E01              ; ---------- --------- --------- ---------- ----------
 198+ 9E01              ;
 199+ 9E01              ;   26/6/23
 200+ 9E01              ;
 201+ 9E01              ;   Inicia_Puntero_mov
 202+ 9E01              ;
 203+ 9E01              ;
 204+ 9E01
 205+ 9E01 2A E2 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E04 CD 59 90         call Extrae_address
 207+ 9E07 22 E4 8B         ld (Puntero_mov),hl
 208+ 9E0A C9               ret
 209+ 9E0B
 210+ 9E0B              ; ---------- --------- --------- ---------- ----------
 211+ 9E0B              ;
 212+ 9E0B              ;   27/06/23
 213+ 9E0B              ;
 214+ 9E0B              ;   Aplica_movimiento.
 215+ 9E0B
 216+ 9E0B              Aplica_desplazamiento
 217+ 9E0B
 218+ 9E0B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E0B
 220+ 9E0B 2A E4 8B         ld hl, (Puntero_mov)
 221+ 9E0E
 222+ 9E0E 7E               ld a,(hl)
 223+ 9E0F E6 F0            and $f0
 224+ 9E11 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E12
 226+ 9E12 CB 7E            bit 7,(hl)
 227+ 9E14 28 03            jr z,1F
 228+ 9E16 CD ED 99         call Mov_up
 229+ 9E19 2A E4 8B     1 ld hl, (Puntero_mov)
 230+ 9E1C CB 76            bit 6,(hl)
 231+ 9E1E 28 03            jr z,2F
 232+ 9E20 CD B4 99         call Mov_down
 233+ 9E23
 234+ 9E23              ; Se ha aplicado reinicio ???
 235+ 9E23              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E23
 237+ 9E23              ;    ld a,(Ctrl_3)
 238+ 9E23              ;    bit 1,a
 239+ 9E23              ;    ret nz
 240+ 9E23
 241+ 9E23 2A E4 8B     2 ld hl, (Puntero_mov)
 242+ 9E26 CB 6E            bit 5,(hl)
 243+ 9E28 28 03            jr z,3F
 244+ 9E2A CD 53 9B         call Mov_left
 245+ 9E2D 2A E4 8B     3 ld hl, (Puntero_mov)
 246+ 9E30 CB 66            bit 4,(hl)
 247+ 9E32 C8               ret z
 248+ 9E33 CD 30 9A         call Mov_right
 249+ 9E36 C9               ret
 250+ 9E37
 251+ 9E37              ; ---------- --------- --------- ---------- ----------
 252+ 9E37              ;
 253+ 9E37              ;   26/06/23
 254+ 9E37              ;
 255+ 9E37              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E37
 257+ 9E37              Ajusta_velocidad_desplazamiento
 258+ 9E37
 259+ 9E37              ; 1er byte de la cadena de movimiento.
 260+ 9E37              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E37
 262+ 9E37 CD 55 9E         call Extrae_nibble_alto
 263+ 9E3A
 264+ 9E3A 32 D8 8B         ld (Vel_up),a
 265+ 9E3D 79               ld a,c
 266+ 9E3E E6 0F            and $0f
 267+ 9E40 32 D9 8B         ld (Vel_down),a
 268+ 9E43
 269+ 9E43              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E43              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E43
 272+ 9E43 23               inc hl
 273+ 9E44 CD 55 9E         call Extrae_nibble_alto
 274+ 9E47
 275+ 9E47 32 D6 8B         ld (Vel_left),a
 276+ 9E4A 79               ld a,c
 277+ 9E4B E6 0F            and $0f
 278+ 9E4D 32 D7 8B         ld (Vel_right),a
 279+ 9E50
 280+ 9E50              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E50
 282+ 9E50 23               inc hl
 283+ 9E51 22 E4 8B         ld (Puntero_mov),hl
 284+ 9E54 C9               ret
 285+ 9E55
 286+ 9E55 06 04        Extrae_nibble_alto ld b,4
 287+ 9E57 7E               ld a,(hl)
 288+ 9E58 4F               ld c,a
 289+ 9E59 E6 F0            and $f0
 290+ 9E5B CB 3F        1 srl a
 291+ 9E5D 10 FC            djnz 1B
 292+ 9E5F C9               ret
 293+ 9E60
 294+ 9E60              ; ---------- --------- --------- ---------- ----------
 295+ 9E60              ;
 296+ 9E60              ;   5/7/23
 297+ 9E60              ;
 298+ 9E60              ;   Incrementa_Puntero_indice_mov
 299+ 9E60
 300+ 9E60              Incrementa_Puntero_indice_mov
 301+ 9E60
 302+ 9E60 21 E8 8B         ld hl,Incrementa_puntero
 303+ 9E63 34               inc (hl)
 304+ 9E64
 305+ 9E64 2A E2 8B         ld hl,(Puntero_indice_mov)
 306+ 9E67 01 02 00         ld bc,2
 307+ 9E6A A7               and a
 308+ 9E6B 09               add hl,bc
 309+ 9E6C 22 E2 8B         ld (Puntero_indice_mov),hl
 310+ 9E6F
 311+ 9E6F 7E               ld a,(hl)
 312+ 9E70 A7               and a
 313+ 9E71
 314+ 9E71              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E71
 316+ 9E71              ;    jr z,$
 317+ 9E71
 318+ 9E71              ;! Reinicia el Patrón de movimiento.
 319+ 9E71
 320+ 9E71 CC 76 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E74
 322+ 9E74 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E75
 324+ 9E75 C9               ret
 325+ 9E76
 326+ 9E76              ; ---------- --------- --------- ---------- ----------
 327+ 9E76              ;
 328+ 9E76              ;   15/01/24
 329+ 9E76              ;
 330+ 9E76              ;   Inicializa_Puntero_indice_mov
 331+ 9E76
 332+ 9E76              Inicializa_Puntero_indice_mov_2
 333+ 9E76
 334+ 9E76              ; Existe etiqueta de bucle principal???
 335+ 9E76
 336+ 9E76 2A E6 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E79 24               inc h
 338+ 9E7A 25               dec h
 339+ 9E7B 28 05            jr z,2F
 340+ 9E7D
 341+ 9E7D 22 E2 8B         ld (Puntero_indice_mov),hl
 342+ 9E80 18 14            jr 3F
 343+ 9E82
 344+ 9E82              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E82
 346+ 9E82 3A E8 8B     2 ld a,(Incrementa_puntero)
 347+ 9E85 47               ld b,a
 348+ 9E86
 349+ 9E86 2A E2 8B         ld hl,(Puntero_indice_mov)
 350+ 9E89 2B           1 dec hl
 351+ 9E8A 2B               dec hl
 352+ 9E8B 10 FC            djnz 1B
 353+ 9E8D 22 E2 8B         ld (Puntero_indice_mov),hl
 354+ 9E90
 355+ 9E90 AF               xor a
 356+ 9E91 32 E8 8B         ld (Incrementa_puntero),a
 357+ 9E94 18 06            jr 4F
 358+ 9E96
 359+ 9E96 3A E9 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E99 32 E8 8B         ld (Incrementa_puntero),a
 361+ 9E9C C9           4 ret
 362+ 9E9D
 363+ 9E9D              ; ----------------------------------------------------------------------
 364+ 9E9D              ;
 365+ 9E9D              ;   30/01/24
 366+ 9E9D              ;
 367+ 9E9D              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E9D
 369+ 9E9D 3A B1 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EA0 CD F5 93         call Calcula_salto_en_BC
 371+ 9EA3 21 DA 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EA6 A7               and a
 373+ 9EA7 ED 4A            adc hl,bc
 374+ 9EA9 C9               ret
 375+ 9EAA
 376+ 9EAA              ; ----------------------------------------------------------------------
 377+ 9EAA              ;
 378+ 9EAA              ;   30/01/24
 379+ 9EAA              ;
 380+ 9EAA              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EAA              ;
 382+ 9EAA              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EAA
 384+ 9EAA 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EAB 23               inc hl
 386+ 9EAC 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EAD 69               ld l,c
 388+ 9EAE 60               ld h,b
 389+ 9EAF 22 BA 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EB2 C9               ret
 391+ 9EB3
# file closed: Movimiento.asm
2105  9EB3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EB3              ; --------------------------------------------------------------------------------------
   2+ 9EB3              ;
   3+ 9EB3              ;   31/08/24
   4+ 9EB3              ;
   5+ 9EB3
   6+ 9EB3              Compara_con_coordenadas_de_disparo
   7+ 9EB3
   8+ 9EB3 3A B3 8B         ld a,(Coordenada_y)
   9+ 9EB6 47               ld b,a
  10+ 9EB7 3A 2D 8C         ld a,(Coordenadas_disparo_certero)
  11+ 9EBA 90               sub b
  12+ 9EBB
  13+ 9EBB              ; A = "0" ok
  14+ 9EBB              ; A = "1" ok
  15+ 9EBB
  16+ 9EBB 28 08            jr z,Comprueba_coordenada_X
  17+ 9EBD 3D               dec a
  18+ 9EBE 28 05            jr z,Comprueba_coordenada_X
  19+ 9EC0
  20+ 9EC0              ; A = "$ff" ok
  21+ 9EC0
  22+ 9EC0 FE FE            cp $fe
  23+ 9EC2 28 01            jr z,Comprueba_coordenada_X
  24+ 9EC4
  25+ 9EC4 C9               ret
  26+ 9EC5
  27+ 9EC5              Comprueba_coordenada_X
  28+ 9EC5
  29+ 9EC5 3A B2 8B         ld a,(Coordenada_X)
  30+ 9EC8 47               ld b,a
  31+ 9EC9 21 2E 8C         ld hl,Coordenadas_disparo_certero+1
  32+ 9ECC 7E               ld a,(hl)
  33+ 9ECD 90               sub b
  34+ 9ECE
  35+ 9ECE              ; A = "0" ok
  36+ 9ECE              ; A = "1" ok
  37+ 9ECE
  38+ 9ECE 28 09            jr z,Activa_Impacto_en_entidad
  39+ 9ED0 3D               dec a
  40+ 9ED1 28 06            jr z,Activa_Impacto_en_entidad
  41+ 9ED3
  42+ 9ED3              ; A = "2" ok
  43+ 9ED3
  44+ 9ED3 3D               dec a
  45+ 9ED4 28 03            jr z,Activa_Impacto_en_entidad
  46+ 9ED6
  47+ 9ED6              ; A = "$ff"
  48+ 9ED6
  49+ 9ED6 FE FD            cp $fd
  50+ 9ED8 C0               ret nz
  51+ 9ED9
  52+ 9ED9              Activa_Impacto_en_entidad
  53+ 9ED9
  54+ 9ED9              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
  55+ 9ED9
  56+ 9ED9 3E 02            ld a,2
  57+ 9EDB 32 B5 8B         ld (Impacto),a
  58+ 9EDE
  59+ 9EDE              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
  60+ 9EDE
  61+ 9EDE 11 C0 87         ld de,Indice_Explosion_entidades
  62+ 9EE1 21 B8 8B         ld hl,Puntero_de_almacen_de_mov_masticados
  63+ 9EE4
  64+ 9EE4 73               ld (hl),e
  65+ 9EE5 23               inc hl
  66+ 9EE6 72               ld (hl),d
  67+ 9EE7
  68+ 9EE7              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
  69+ 9EE7
  70+ 9EE7 21 2A 8C         ld hl,Impacto2
  71+ 9EEA CB 9E            res 3,(hl)
  72+ 9EEC
  73+ 9EEC C9               ret
  74+ 9EED
  75+ 9EED              ; --------------------------------------------------------------------------------------
  76+ 9EED              ;
  77+ 9EED              ;   11/09/24
  78+ 9EED              ;
  79+ 9EED
  80+ 9EED              Limpia_album_de_borrado_disparos
  81+ 9EED
  82+ 9EED 21 25 8C         ld hl,Ctrl_5
  83+ 9EF0 CB 46            bit 0,(hl)
  84+ 9EF2 C8               ret z
  85+ 9EF3 CB 86            res 0,(hl)
  86+ 9EF5
  87+ 9EF5              Limpiando
  88+ 9EF5
  89+ 9EF5 AF               xor a
  90+ 9EF6 2A 0C 8C         ld hl,(Album_de_borrado_disparos)
  91+ 9EF9 77               ld (hl),a
  92+ 9EFA 5D               ld e,l
  93+ 9EFB 54               ld d,h
  94+ 9EFC 1C               inc e                                           ; DE = HL+1
  95+ 9EFD 01 3A 00         ld bc,$003a
  96+ 9F00 ED B0            ldir
  97+ 9F02
  98+ 9F02 C9               ret
  99+ 9F03
 100+ 9F03
 101+ 9F03              ; --------------------------------------------------------------------------------------
 102+ 9F03              ;
 103+ 9F03              ;   26/08/24
 104+ 9F03              ;
 105+ 9F03
 106+ 9F03              Calcula_bytes_pintado_disparos
 107+ 9F03
 108+ 9F03 2A 0A 8C         ld hl,(Album_de_pintado_disparos)
 109+ 9F06 45               ld b,l
 110+ 9F07 2A 0E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 111+ 9F0A 7D               ld a,l
 112+ 9F0B
 113+ 9F0B 90               sub b
 114+ 9F0C 32 10 8C         ld (Num_de_bytes_album_de_disparos),a
 115+ 9F0F
 116+ 9F0F C9               ret
 117+ 9F10
 118+ 9F10              ; --------------------------------------------------------------------------------------
 119+ 9F10              ;
 120+ 9F10              ;   11/09/24
 121+ 9F10              ;
 122+ 9F10              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 123+ 9F10              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 124+ 9F10              ;   _disparos que el álbum del FRAME actual).
 125+ 9F10
 126+ 9F10              Limpia_album_de_pintado_disparos
 127+ 9F10
 128+ 9F10              ;*   Exclusiones.
 129+ 9F10
 130+ 9F10 3A 11 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 131+ 9F13 A7               and a
 132+ 9F14 C8               ret z
 133+ 9F15
 134+ 9F15              ; -----
 135+ 9F15
 136+ 9F15 3A 10 8C         ld a,(Num_de_bytes_album_de_disparos)
 137+ 9F18 47               ld b,a
 138+ 9F19 3A 11 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 139+ 9F1C
 140+ 9F1C 90               sub b
 141+ 9F1D
 142+ 9F1D C8               ret z
 143+ 9F1E D8               ret c
 144+ 9F1F
 145+ 9F1F 2A 0E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 146+ 9F22 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 147+ 9F23 AF               xor a                                                               ; "0".
 148+ 9F24
 149+ 9F24 77           1 ld (hl),a
 150+ 9F25 2C               inc l
 151+ 9F26 10 FC            djnz 1B
 152+ 9F28
 153+ 9F28 C9               ret
 154+ 9F29
 155+ 9F29              ; --------------------------------------------------------------------------------------
 156+ 9F29              ;
 157+ 9F29              ;   27/08/24
 158+ 9F29              ;
 159+ 9F29
 160+ 9F29              Motor_Disparos
 161+ 9F29
 162+ 9F29              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 163+ 9F29
 164+ 9F29 21 20 89         ld hl,Disparo_Amad+1
 165+ 9F2C
 166+ 9F2C 34               inc (hl)
 167+ 9F2D 35               dec (hl)
 168+ 9F2E
 169+ 9F2E 28 06            jr z,2F
 170+ 9F30
 171+ 9F30              ;   Esta caja contiene un disparo.
 172+ 9F30
 173+ 9F30 CD 52 9F         call Consulta_Impacto
 174+ 9F33 CC 6B 9F         call z,Mueve_disparo_Amadeus
 175+ 9F36
 176+ 9F36              ; Disparos de entidades.
 177+ 9F36
 178+ 9F36 3A 12 8C     2 ld a,(Numero_de_disparos_de_entidades)
 179+ 9F39 A7               and a
 180+ 9F3A C8               ret z
 181+ 9F3B
 182+ 9F3B 06 07            ld b,7                                                               ; Contador de disparos.
 183+ 9F3D 21 23 89         ld hl,Indice_de_disparos_entidades
 184+ 9F40
 185+ 9F40 CD 59 90     4 call Extrae_address
 186+ 9F43 13               inc de
 187+ 9F44 13               inc de
 188+ 9F45 ED 53 14 8C      ld (Puntero_rancio_disparos_album),de
 189+ 9F49
 190+ 9F49 23               inc hl
 191+ 9F4A
 192+ 9F4A 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 193+ 9F4B 35               dec (hl)
 194+ 9F4C 28 00            jr z,3F
 195+ 9F4E
 196+ 9F4E EB           3 ex de,hl
 197+ 9F4F 10 EF            djnz 4B
 198+ 9F51
 199+ 9F51 C9               ret
 200+ 9F52
 201+ 9F52              ; ----------------------
 202+ 9F52              ;
 203+ 9F52              ;
 204+ 9F52              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 205+ 9F52              ;
 206+ 9F52              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 207+ 9F52
 208+ 9F52
 209+ 9F52              Consulta_Impacto
 210+ 9F52
 211+ 9F52              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 212+ 9F52              ;   _sea lo más coherente posible.
 213+ 9F52
 214+ 9F52 E5               push hl
 215+ 9F53 2B               dec hl
 216+ 9F54 CD 6A A0         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 217+ 9F57 E1               pop hl
 218+ 9F58 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 219+ 9F59
 220+ 9F59 C8               ret z
 221+ 9F5A
 222+ 9F5A 3A 2A 8C         ld a,(Impacto2)
 223+ 9F5D CB DF            set 3,a
 224+ 9F5F 32 2A 8C         ld (Impacto2),a
 225+ 9F62
 226+ 9F62 E5               push hl
 227+ 9F63 CD 57 A0         call Genera_coordenadas_de_disparo_Amadeus
 228+ 9F66 E1               pop hl
 229+ 9F67 CD 84 9F         call Elimina_disparo
 230+ 9F6A
 231+ 9F6A C9               ret
 232+ 9F6B
 233+ 9F6B              ; ----------------------
 234+ 9F6B              ;
 235+ 9F6B              ;
 236+ 9F6B              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 237+ 9F6B
 238+ 9F6B              Mueve_disparo_Amadeus
 239+ 9F6B
 240+ 9F6B CD 59 90         call Extrae_address
 241+ 9F6E
 242+ 9F6E CD 7D 99         call PreviousScan
 243+ 9F71 CD 7D 99         call PreviousScan
 244+ 9F74 CD 7D 99         call PreviousScan
 245+ 9F77 CD 7D 99         call PreviousScan
 246+ 9F7A
 247+ 9F7A              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 248+ 9F7A
 249+ 9F7A 7C               ld a,h
 250+ 9F7B D6 40            sub $40
 251+ 9F7D EB               ex de,hl
 252+ 9F7E 38 04            jr c,Elimina_disparo
 253+ 9F80
 254+ 9F80               ; Introduce nuevo puntero_de_impresión en la caja.
 255+ 9F80
 256+ 9F80 73               ld (hl),e
 257+ 9F81 23               inc hl
 258+ 9F82 72               ld (hl),d
 259+ 9F83
 260+ 9F83 C9               ret
 261+ 9F84
 262+ 9F84              ; ----------------------
 263+ 9F84              ;
 264+ 9F84              ;   11/9/24
 265+ 9F84
 266+ 9F84              Elimina_disparo
 267+ 9F84
 268+ 9F84              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 269+ 9F84              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 270+ 9F84
 271+ 9F84              ;   Disparo_1A defw 0									; Puntero objeto.
 272+ 9F84              ;   	defw 0											; Puntero de impresión.
 273+ 9F84
 274+ 9F84 2B               dec hl
 275+ 9F85 2B               dec hl
 276+ 9F86
 277+ 9F86 AF               xor a
 278+ 9F87 77               ld (hl),a
 279+ 9F88 23               inc hl
 280+ 9F89 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 281+ 9F8A
 282+ 9F8A 23               inc hl
 283+ 9F8B 77               ld (hl),a
 284+ 9F8C 23               inc hl
 285+ 9F8D 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 286+ 9F8E
 287+ 9F8E 3E 01            ld a,1
 288+ 9F90 32 13 8C         ld (Permiso_de_disparo_Amadeus),a
 289+ 9F93
 290+ 9F93 21 25 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 291+ 9F96 CB C6            set 0,(hl)
 292+ 9F98
 293+ 9F98 AF               xor a
 294+ 9F99 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 295+ 9F9A
 296+ 9F9A C9               ret
 297+ 9F9B
 298+ 9F9B              ; --------------------------------------------------------------------------------------
 299+ 9F9B              ;
 300+ 9F9B              ;   21/8/24
 301+ 9F9B              ;
 302+ 9F9B
 303+ 9F9B              Pinta_disparos
 304+ 9F9B
 305+ 9F9B ED 73 FE 8B      ld (Stack),sp
 306+ 9F9F 06 02            ld b,2
 307+ 9FA1
 308+ 9FA1 ED 7B 0C 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 309+ 9FA5
 310+ 9FA5 D1           2 pop de
 311+ 9FA6
 312+ 9FA6 14               inc d
 313+ 9FA7 15               dec d
 314+ 9FA8
 315+ 9FA8 28 1B            jr z,1F
 316+ 9FAA
 317+ 9FAA              Imprime_scanlines_de_disparo
 318+ 9FAA
 319+ 9FAA E1               pop hl
 320+ 9FAB
 321+ 9FAB              ; Puntero objeto en DE.
 322+ 9FAB              ; Puntero_de_impresión en HL.
 323+ 9FAB
 324+ 9FAB              ; 1er scanline.
 325+ 9FAB
 326+ 9FAB 1A               ld a,(de)
 327+ 9FAC AE               xor (hl)
 328+ 9FAD 77               ld (hl),a
 329+ 9FAE
 330+ 9FAE 13               inc de
 331+ 9FAF 2C               inc l
 332+ 9FB0
 333+ 9FB0 1A               ld a,(de)
 334+ 9FB1 AE               xor (hl)
 335+ 9FB2 77               ld (hl),a
 336+ 9FB3
 337+ 9FB3              ; 2º scanline.
 338+ 9FB3
 339+ 9FB3 E1               pop hl
 340+ 9FB4 1B               dec de
 341+ 9FB5
 342+ 9FB5 1A               ld a,(de)
 343+ 9FB6 AE               xor (hl)
 344+ 9FB7 77               ld (hl),a
 345+ 9FB8
 346+ 9FB8 13               inc de
 347+ 9FB9 2C               inc l
 348+ 9FBA
 349+ 9FBA 1A               ld a,(de)
 350+ 9FBB AE               xor (hl)
 351+ 9FBC 77               ld (hl),a
 352+ 9FBD
 353+ 9FBD              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 354+ 9FBD
 355+ 9FBD 18 E6            jr 2B
 356+ 9FBF
 357+ 9FBF ED 7B 0A 8C  3 ld sp,(Album_de_pintado_disparos)
 358+ 9FC3 18 E0            jr 2B
 359+ 9FC5
 360+ 9FC5 10 F8        1 djnz 3B
 361+ 9FC7 ED 7B FE 8B      ld sp,(Stack)
 362+ 9FCB C9               ret
 363+ 9FCC
 364+ 9FCC              ; --------------------------------------------------------------------------------------
 365+ 9FCC              ;
 366+ 9FCC              ;   28/8/24
 367+ 9FCC              ;
 368+ 9FCC              ;   Modifica: HL y DE.
 369+ 9FCC
 370+ 9FCC
 371+ 9FCC              Genera_datos_de_impresion_disparos_Amadeus
 372+ 9FCC
 373+ 9FCC ED 73 FE 8B      ld (Stack),sp
 374+ 9FD0 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 375+ 9FD3
 376+ 9FD3 21 23 89     1 ld hl,Indice_de_disparos_entidades                          ;? Compararemos SP con HL para saber cual es la última caja que examinar.
 377+ 9FD6 ED 72            sbc hl,sp                                                 ;? Última caja ???
 378+ 9FD8 28 24            jr z,Salida
 379+ 9FDA
 380+ 9FDA D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 381+ 9FDB
 382+ 9FDB 14               inc d
 383+ 9FDC 15               dec d
 384+ 9FDD
 385+ 9FDD 20 03            jr nz,Genera_scanlines_de_disparo_Amadeus
 386+ 9FDF
 387+ 9FDF              Siguiente_disparo_Amadeus
 388+ 9FDF
 389+ 9FDF D1               pop de
 390+ 9FE0 18 F1            jr 1B
 391+ 9FE2
 392+ 9FE2              Genera_scanlines_de_disparo_Amadeus
 393+ 9FE2
 394+ 9FE2 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 395+ 9FE3              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 396+ 9FE3
 397+ 9FE3 ED 73 14 8C      ld (Puntero_rancio_disparos_album),sp                     ;? Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 398+ 9FE7
 399+ 9FE7 ED 7B 0E 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 400+ 9FEB
 401+ 9FEB C1               pop bc
 402+ 9FEC C1               pop bc
 403+ 9FED C1               pop bc
 404+ 9FEE
 405+ 9FEE ED 73 0E 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 406+ 9FF2
 407+ 9FF2 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 408+ 9FF3 CD 7D 99         call PreviousScan
 409+ 9FF6 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 410+ 9FF7 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 411+ 9FF8
 412+ 9FF8 ED 7B 14 8C      ld sp,(Puntero_rancio_disparos_album)
 413+ 9FFC 18 D5            jr 1B
 414+ 9FFE
 415+ 9FFE
 416+ 9FFE              Salida
 417+ 9FFE
 418+ 9FFE ED 7B FE 8B      ld sp,(Stack)
 419+ A002 C9               ret
 420+ A003
 421+ A003              ; --------------------------------------------------------------------------------------
 422+ A003              ;
 423+ A003              ;   12/09/24
 424+ A003              ;
 425+ A003
 426+ A003              Genera_disparo_Amadeus
 427+ A003
 428+ A003              ;*  Exclusiones.
 429+ A003
 430+ A003 3A 13 8C         ld a,(Permiso_de_disparo_Amadeus)
 431+ A006 A7               and a
 432+ A007 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 433+ A008
 434+ A008 3D               dec a
 435+ A009 32 13 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 436+ A00C
 437+ A00C              ; ---------------------------------------------------------------------------------------------------------------
 438+ A00C              ;
 439+ A00C              ;*  Vamos a generar un disparo.
 440+ A00C
 441+ A00C              ;   Nos situamos en la 1ª caja que encontramos vacía.
 442+ A00C
 443+ A00C F3               di
 444+ A00D 18 FE            jr $
 445+ A00F FB               ei
 446+ A010
 447+ A010 21 1F 89         ld hl,Disparo_Amad
 448+ A013
 449+ A013 22 28 8C     7 ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 450+ A016
 451+ A016              ; ---------------------------------------------------------------------------------------------------------------
 452+ A016
 453+ A016              Define_puntero_objeto_disparo
 454+ A016
 455+ A016              ;   Inicializamos contador.
 456+ A016
 457+ A016 06 00            ld b,0
 458+ A018
 459+ A018 2A 6B 89         ld hl,(p.imp.amadeus)
 460+ A01B 2C               inc l
 461+ A01C
 462+ A01C 3E 80            ld a,$80
 463+ A01E BE               cp (hl)
 464+ A01F 28 0D            jr z,1F
 465+ A021
 466+ A021 04               inc b
 467+ A022
 468+ A022 3E 60            ld a,$60
 469+ A024 BE               cp (hl)
 470+ A025 28 07            jr z,1F
 471+ A027
 472+ A027
 473+ A027 04               inc b
 474+ A028
 475+ A028 3E 18            ld a,$18
 476+ A02A BE               cp (hl)
 477+ A02B 28 01            jr z,1F
 478+ A02D
 479+ A02D 04               inc b
 480+ A02E
 481+ A02E              ;   Calcula el Puntero_de_impresión del disparo.
 482+ A02E
 483+ A02E              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 484+ A02E
 485+ A02E CD 7D 99     1 call PreviousScan
 486+ A031
 487+ A031 78               ld a,b
 488+ A032 CB 3F            srl a
 489+ A034 28 03            jr z,4F
 490+ A036
 491+ A036              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 492+ A036 E5               push hl
 493+ A037 18 02            jr 5F
 494+ A039 2D           4 dec l
 495+ A03A E5               push hl
 496+ A03B              ; ---
 497+ A03B
 498+ A03B              ;   Calcula el Puntero_objeto del disparo.
 499+ A03B
 500+ A03B 21 70 83     5 ld hl,Indice_disparo
 501+ A03E 04               inc b
 502+ A03F 05               dec b
 503+ A040 28 04            jr z,2F
 504+ A042
 505+ A042              ;   Nos desplazamos por el índice de disparos.
 506+ A042
 507+ A042 2C           3 inc l
 508+ A043 2C               inc l
 509+ A044 10 FC            djnz 3B
 510+ A046
 511+ A046              ; --- Guarda el Puntero_objeto del disparo en la pila.
 512+ A046 CD 59 90     2 call Extrae_address
 513+ A049 E5               push hl
 514+ A04A              ; ---
 515+ A04A
 516+ A04A              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 517+ A04A              ; HL en el 1er .db de la caja.
 518+ A04A
 519+ A04A 2A 28 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 520+ A04D
 521+ A04D 06 02            ld b,2
 522+ A04F
 523+ A04F D1           6 pop de
 524+ A050 73               ld (hl),e
 525+ A051 23               inc hl
 526+ A052 72               ld (hl),d
 527+ A053 23               inc hl
 528+ A054
 529+ A054 10 F9            djnz 6B
 530+ A056
 531+ A056 C9               ret
 532+ A057
 533+ A057              Genera_coordenadas_de_disparo_Amadeus
 534+ A057
 535+ A057              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 536+ A057              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 537+ A057              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 538+ A057
 539+ A057 CD 59 90         call Extrae_address
 540+ A05A CD 78 94         call Genera_coordenadas
 541+ A05D
 542+ A05D 3D               dec a
 543+ A05E
 544+ A05E 21 2D 8C         ld hl,Coordenadas_disparo_certero
 545+ A061 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 546+ A062 23               inc hl
 547+ A063 3A B2 8B         ld a,(Coordenada_X)
 548+ A066 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 549+ A067
 550+ A067 AF               xor a
 551+ A068 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 552+ A069
 553+ A069 C9               ret
 554+ A06A
 555+ A06A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 556+ A06A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 557+ A06A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 558+ A06A
 559+ A06A              ; ----------------------------------------------
 560+ A06A              ;
 561+ A06A              ;   27/08/24
 562+ A06A              ;
 563+ A06A              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 564+ A06A              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 565+ A06A
 566+ A06A              Detecta_impacto_en_disparo_de_Amadeus
 567+ A06A
 568+ A06A              Extraccion_de_datos
 569+ A06A
 570+ A06A 13               inc de
 571+ A06B 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 572+ A06C
 573+ A06C 5E               ld e,(hl)
 574+ A06D 23               inc hl
 575+ A06E 56               ld d,(hl)
 576+ A06F
 577+ A06F 23               inc hl
 578+ A070
 579+ A070 4E               ld c,(hl)
 580+ A071 23               inc hl
 581+ A072 46               ld b,(hl)
 582+ A073
 583+ A073 C5               push bc
 584+ A074 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 585+ A075
 586+ A075              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 587+ A075
 588+ A075 CD 7D 99         call PreviousScan
 589+ A078 CD 7D 99         call PreviousScan
 590+ A07B
 591+ A07B              Detecta_impacto_
 592+ A07B
 593+ A07B 1A               ld a,(de)
 594+ A07C A6               and (hl)
 595+ A07D C0               ret nz
 596+ A07E
 597+ A07E 13               inc de
 598+ A07F 23               inc hl
 599+ A080
 600+ A080 1A               ld a,(de)
 601+ A081 A6               and (hl)
 602+ A082 C9               ret
 603+ A083
 604+ A083              ; -------------------------------------------------------------------------------------------------------------
 605+ A083              ;
 606+ A083              ;   8/8/24
 607+ A083              ;
 608+ A083              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 609+ A083              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 610+ A083              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 611+ A083              ;
 612+ A083              ;   MODIFICA: HL,DE,BC y A.
 613+ A083              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 614+ A083              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 615+ A083
 616+ A083              Colision_Entidad_Amadeus
 617+ A083
 618+ A083              ; Posible contacto de entidad con Amadeus. ?????
 619+ A083
 620+ A083              ; Exclusiones:
 621+ A083
 622+ A083 3A 48 8C         ld a,(Shield)
 623+ A086 A7               and a
 624+ A087 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 625+ A088
 626+ A088 21 23 8C         ld hl,Ctrl_3
 627+ A08B CB 76            bit 6,(hl)
 628+ A08D C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 629+ A08E
 630+ A08E 21 2A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 631+ A091 CB 56            bit 2,(hl)
 632+ A093 C0               ret nz
 633+ A094
 634+ A094 3A B3 8B     	ld a,(Coordenada_y)
 635+ A097 FE 14        	cp $14
 636+ A099 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 637+ A09A
 638+ A09A 3A 6A 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 639+ A09D A7               and a
 640+ A09E C0               ret nz
 641+ A09F
 642+ A09F              Genera_coordenadas_X
 643+ A09F
 644+ A09F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 645+ A09F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 646+ A09F
 647+ A09F              ;   Limpiamos almacenes.
 648+ A09F
 649+ A09F              ;    call Limpia_Coordenadas_X
 650+ A09F
 651+ A09F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 652+ A09F
 653+ A09F 21 2F 8C         ld hl,Coordenadas_X_Entidad
 654+ A0A2 3A B2 8B         ld a,(Coordenada_X)
 655+ A0A5 CD C7 A0         call Guarda_coordenadas_X
 656+ A0A8
 657+ A0A8              ;   Almacenamos las coordenadas X de Amadeus.
 658+ A0A8
 659+ A0A8 3A 67 89         ld a,(CX_Amadeus)
 660+ A0AB CD C7 A0         call Guarda_coordenadas_X
 661+ A0AE CD DB A0         call Compara_coordenadas_X
 662+ A0B1 C0               ret nz
 663+ A0B2
 664+ A0B2 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 665+ A0B4 32 B5 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 666+ A0B7
 667+ A0B7 2A F1 8B         ld hl,(Puntero_store_caja)
 668+ A0BA 2C               inc l
 669+ A0BB 2C               inc l
 670+ A0BC 2C               inc l
 671+ A0BD 2C               inc l
 672+ A0BE 22 2B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 673+ A0C1
 674+ A0C1 21 2A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 675+ A0C4 CB D6            set 2,(hl)
 676+ A0C6
 677+ A0C6 C9               ret
 678+ A0C7
 679+ A0C7               ; ----- ----- ----- ----- -----
 680+ A0C7
 681+ A0C7 77           Guarda_coordenadas_X ld (hl),a
 682+ A0C8 3C               inc a
 683+ A0C9 2C               inc l
 684+ A0CA 77               ld (hl),a
 685+ A0CB 3C               inc a
 686+ A0CC 2C               inc l
 687+ A0CD 77               ld (hl),a
 688+ A0CE 2C               inc l
 689+ A0CF C9               ret
 690+ A0D0
 691+ A0D0 AF           Limpia_Coordenadas_X xor a
 692+ A0D1 06 06            ld b,6
 693+ A0D3 21 32 8C         ld hl,Coordenadas_X_Amadeus
 694+ A0D6 77           1 ld (hl),a
 695+ A0D7 23               inc hl
 696+ A0D8 10 FC            djnz 1B
 697+ A0DA C9               ret
 698+ A0DB
 699+ A0DB              ; ----- ----- ----- ----- -----
 700+ A0DB
 701+ A0DB              Compara_coordenadas_X
 702+ A0DB
 703+ A0DB DD 21 2F 8C      ld ix,Coordenadas_X_Entidad
 704+ A0DF DD 7E 00         ld a,(ix+0)
 705+ A0E2 CD F0 A0         call Comparando
 706+ A0E5 C8               ret z
 707+ A0E6
 708+ A0E6 3C               inc a
 709+ A0E7 CD FF A0         call Comparando_1
 710+ A0EA C8               ret z
 711+ A0EB
 712+ A0EB 3C               inc a
 713+ A0EC CD FF A0         call Comparando_1
 714+ A0EF C9               ret
 715+ A0F0
 716+ A0F0              ; ----- ----- ----- ----- -----
 717+ A0F0              ;
 718+ A0F0              ;   4/12/23
 719+ A0F0              ;
 720+ A0F0              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 721+ A0F0
 722+ A0F0              Comparando
 723+ A0F0
 724+ A0F0 DD 2C            inc ixl
 725+ A0F2 DD 2C            inc ixl
 726+ A0F4 DD 2C            inc ixl
 727+ A0F6
 728+ A0F6 DD 46 00         ld b,(ix+0)
 729+ A0F9 DD 4E 01         ld c,(ix+1)
 730+ A0FC DD 56 02         ld d,(ix+2)
 731+ A0FF
 732+ A0FF B8           Comparando_1 cp b
 733+ A100 C8               ret z
 734+ A101 B9               cp c
 735+ A102 C8               ret z
 736+ A103 BA               cp d
 737+ A104 C9               ret
 738+ A105
 739+ A105              ; -----------------------------------------------------------------------
 740+ A105              ;
 741+ A105              ;   04/7/24
 742+ A105              ;
 743+ A105
 744+ A105              Detecta_colision_nave_entidad
 745+ A105
 746+ A105              ; Exclusiones:
 747+ A105
 748+ A105              ; Salimos de la rutina si no hay advertencia de posible colisión.
 749+ A105
 750+ A105 21 2A 8C     	ld hl,Impacto2
 751+ A108 CB 56        	bit 2,(hl)
 752+ A10A C8           	ret z
 753+ A10B
 754+ A10B              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 755+ A10B
 756+ A10B 2A 6D 89         ld hl,(Pamm_Amadeus)
 757+ A10E CD 59 90         call Extrae_address
 758+ A111 54               ld d,h
 759+ A112 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 760+ A113
 761+ A113 2A 6B 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 762+ A116 06 10            ld b,16                                        ; Contador de scanlines en B.
 763+ A118 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 764+ A11B
 765+ A11B C5           1 push bc
 766+ A11C 06 03            ld b,3
 767+ A11E E5               push hl
 768+ A11F
 769+ A11F              ; .db
 770+ A11F
 771+ A11F 1A           3 ld a,(de)
 772+ A120 A7               and a
 773+ A121 20 03            jr nz,4F
 774+ A123
 775+ A123 2C               inc l
 776+ A124 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 777+ A126
 778+ A126 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 779+ A128 28 04            jr z,2F
 780+ A12A
 781+ A12A              ; Impacto.
 782+ A12A FD 2D            dec iyl
 783+ A12C 28 22            jr z,5F
 784+ A12E
 785+ A12E 1C           2 inc e
 786+ A12F 10 EE            djnz 3B
 787+ A131
 788+ A131 E1               pop hl
 789+ A132
 790+ A132              ; Hay salto de línea en el puntero de impresión ???
 791+ A132
 792+ A132 7C               ld a,h
 793+ A133 D6 57            sub $57
 794+ A135 20 0A            jr nz,6F
 795+ A137
 796+ A137              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 797+ A137
 798+ A137 2A 6B 89         ld hl,(p.imp.amadeus)
 799+ A13A 3E 20            ld a,$20
 800+ A13C A7               and a
 801+ A13D 85               add l
 802+ A13E 6F               ld l,a
 803+ A13F 18 01            jr 7F
 804+ A141
 805+ A141 24           6 inc h
 806+ A142
 807+ A142 C1           7 pop bc
 808+ A143 10 D6            djnz 1B
 809+ A145
 810+ A145              ;   Fin de la comparativa.
 811+ A145
 812+ A145              ;   NO HAY COLISIÓN !!!!!.
 813+ A145              ;
 814+ A145              ;   .db (Impacto) de Amadeus a "0".
 815+ A145              ;   RES el bit2 de (Impacto2).
 816+ A145              ;
 817+ A145              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 818+ A145              ;   Lo colocamos a "0".
 819+ A145
 820+ A145 21 2A 8C         ld hl,Impacto2
 821+ A148 CB 96            res 2,(hl)
 822+ A14A 2A 2B 8C         ld hl,(Entidad_sospechosa_de_colision)
 823+ A14D 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 824+ A14F C9               ret
 825+ A150
 826+ A150              ;   COLISIÓN !!!!!.
 827+ A150              ;
 828+ A150              ;   .db (Impacto) de Amadeus a "1".
 829+ A150              ;   SET el bit3 de (Impacto2).
 830+ A150              ;
 831+ A150              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 832+ A150
 833+ A150 E1           5 pop hl
 834+ A151 C1               pop bc
 835+ A152
 836+ A152 21 6A 89         ld hl,Impacto_Amadeus
 837+ A155 36 01            ld (hl),1
 838+ A157 21 2A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 839+ A15A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 840+ A15C
 841+ A15C 11 C0 87         ld de,Indice_Explosion_entidades
 842+ A15F 2A 2B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 843+ A162
 844+ A162 23               inc hl
 845+ A163 23               inc hl
 846+ A164 23               inc hl
 847+ A165
 848+ A165 73               ld (hl),e
 849+ A166 23               inc hl
 850+ A167 72               ld (hl),d
 851+ A168
 852+ A168              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 853+ A168
 854+ A168 11 60 88         ld de,Indice_Explosion_Amadeus
 855+ A16B 21 6D 89         ld hl,Pamm_Amadeus
 856+ A16E
 857+ A16E 73               ld (hl),e
 858+ A16F 23               inc hl
 859+ A170 72               ld (hl),d
 860+ A171
 861+ A171 C9               ret
 862+ A172
 863+ A172
 864+ A172
# file closed: Disparo.asm
2106  A172
2107  A172              	SAVESNA "Pruebas.sna", START
2108  A172
2109  A172
2110  A172
2111  A172
# file closed: Banco_de_pruebas.asm
