# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 55 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 83 A4     	call Pinta_disparos_Amadeus
  74  82F6 CD 4E A1     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 7E 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 0E 92     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 7C 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 7C 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 7F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 2C 92     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 2B 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 167+ 89AE              ;
 168+ 89AE              ;	28/05/24
 169+ 89AE              ;
 170+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 171+ 89AE              ;
 172+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 173+ 89AE
 174+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 175+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 176+ 89B1 00           	db 0												; (Contador_de_vueltas).
 177+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 178+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 179+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 180+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 181+ 89B9 00           	db 0												; (Velocidad).
 182+ 89BA
 183+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 184+ 89BA              ;
 185+ 89BA              ;	22/01/24
 186+ 89BA              ;
 187+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 188+ 89BA              ;
 189+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 190+ 89BA
 191+ 89BA
 192+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 193+ 89BD 00           	db 0												; (Contador_de_vueltas).
 194+ 89BE 00           	db 0												; (Impacto).
 195+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 196+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 197+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 198+ 89C5 00           	db 0												; (Velocidad).
 199+ 89C6
 200+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 201+ 89C6
 202+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 203+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 204+ 89CA 00           	db 0												; (Impacto).
 205+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 206+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 207+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 208+ 89D1 00           	db 0												; (Velocidad).
 209+ 89D2
 210+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 211+ 89D2
 212+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 213+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 214+ 89D6 00           	db 0												; (Impacto).
 215+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 89DD 00           	db 0												; (Velocidad).
 219+ 89DE
 220+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 221+ 89DE
 222+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 223+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 224+ 89E2 00           	db 0												; (Impacto).
 225+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 226+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 227+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 228+ 89E9 00           	db 0												; (Velocidad).
 229+ 89EA
 230+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 231+ 89EA
 232+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 233+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 234+ 89EE 00           	db 0												; (Impacto).
 235+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 236+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 237+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 238+ 89F5 00           	db 0												; (Velocidad).
 239+ 89F6
 240+ 89F6              	org $8a00
 241+ 8A00
 242+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 243+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 244+ 8A04 00           	db 0												; (Impacto).
 245+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 246+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 247+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 248+ 8A0B 00           	db 0												; (Velocidad).
 249+ 8A0C
 250+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 251+ 8A0C
 252+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 253+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 254+ 8A0C              ;	db 0												; (Impacto).
 255+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 256+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 257+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 258+ 8A0C              ;	db 0												; (Velocidad).
 259+ 8A0C
 260+ 8A0C              ; -------------------------------------------------------------------------------------
 261+ 8A0C              ;
 262+ 8A0C              ;	2/1/25
 263+ 8A0C              ;
 264+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 265+ 8A0C              ;
 266+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 267+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 268+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 269+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 270+ 8A0C
 271+ 8A0C              Indice_de_definiciones_de_entidades
 272+ 8A0C
 273+ 8A0C 10 8A        	defw Entidad_1
 274+ 8A0E 19 8A        	defw Entidad_2
 275+ 8A10
 276+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 277+ 8A10
 278+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 279+ 8A10
 280+ 8A10 81           Entidad_1 db $81			                     		; (Tipo).
 281+ 8A11 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 282+ 8A13 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 283+ 8A15
 284+ 8A15              ; Aleatoriedad en la posición de inicio de la entidad.
 285+ 8A15              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 286+ 8A15
 287+ 8A15 10 40        	defw $4010											; (Posicion_inicio).
 288+ 8A17 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 289+ 8A19
 290+ 8A19              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 291+ 8A19
 292+ 8A19 81           Entidad_2 db $81			                   			; (Tipo).
 293+ 8A1A 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 294+ 8A1C 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 295+ 8A1E 40 50        	defw $5040                                      	; (Posicion_inicio).
 296+ 8A20 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 297+ 8A22
 298+ 8A22              ; -------------------------------------------------------------------------------------
 299+ 8A22              ;
 300+ 8A22              ;	28/05/24
 301+ 8A22              ;
 302+ 8A22              ;	Definición de Amadeus.
 303+ 8A22              ;
 304+ 8A22              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 305+ 8A22              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 306+ 8A22
 307+ 8A22 00           Definicion_Amadeus db 0			                     	; (Tipo).
 308+ 8A23 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 309+ 8A25 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 310+ 8A27 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 311+ 8A29 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A2B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A2B
   2+ 8A2B
   3+ 8A2B              ;   07/07/23
   4+ 8A2B              ;
   5+ 8A2B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A2B              ;
   7+ 8A2B              ;   Codificación:
   8+ 8A2B              ;
   9+ 8A2B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A2B              ;
  11+ 8A2B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A2B              ;
  13+ 8A2B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A2B              ;
  15+ 8A2B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A2B              ;
  17+ 8A2B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A2B              ;                               ..... %01000010 Vel_up 4
  19+ 8A2B              ;                                               Vel_down 2
  20+ 8A2B              ;                               ..... $42
  21+ 8A2B              ;
  22+ 8A2B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A2B              ;
  24+ 8A2B              ;                               ..... %01000010 Vel_left 4
  25+ 8A2B              ;                                               Vel_right 2
  26+ 8A2B              ;                               ..... $42
  27+ 8A2B              ;
  28+ 8A2B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A2B              ;
  30+ 8A2B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A2B              ;
  32+ 8A2B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A2B              ;
  34+ 8A2B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A2B              ;                                     $53
  36+ 8A2B              ;
  37+ 8A2B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A2B              ;
  39+ 8A2B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A2B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A2B              ;
  42+ 8A2B              ;                       Arriba ..... $81
  43+ 8A2B              ;                       Arriba - izquierda ..... $a1
  44+ 8A2B              ;                       Arriba - derecha ..... $91
  45+ 8A2B              ;
  46+ 8A2B              ;                       Abajo ..... $41
  47+ 8A2B              ;                       Abajo - izquierda ..... $61
  48+ 8A2B              ;                       Abajo - derecha ..... $51
  49+ 8A2B              ;
  50+ 8A2B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A2B              ;
  52+ 8A2B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A2B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A2B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A2B              ;
  56+ 8A2B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A2B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A2B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A2B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A2B              ;
  61+ 8A2B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A2B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A2B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A2B              ;
  65+ 8A2B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A2B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A2B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A2B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A2B
  70+ 8A2B              ; ----- ----- ----- ----- -----
  71+ 8A2B
  72+ 8A2B 57 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A2D 5F 8A            defw F_1
  74+ 8A2F 69 8A            defw F_2
  75+ 8A31 73 8A            defw Codo_abajo_derecha
  76+ 8A33 A7 8A            defw Derecha_y_subiendo
  77+ 8A35 B1 8A            defw Derecha_y_subiendo_1
  78+ 8A37 BB 8A            defw F_3
  79+ 8A39 C5 8A            defw F_4
  80+ 8A3B CF 8A            defw Derecha_y_bajando
  81+ 8A3D D9 8A            defw Derecha_y_bajando_1
  82+ 8A3F E3 8A            defw Derecha_y_bajando_2
  83+ 8A41 ED 8A            defw Codo_derecha_abajo
  84+ 8A43 1D 8B            defw Codo_abajo_izq.
  85+ 8A45 51 8B            defw Izquierda_y_subiendo
  86+ 8A47 5B 8B            defw Izquierda_y_subiendo_1
  87+ 8A49 65 8B            defw F_5
  88+ 8A4B 6F 8B            defw F_6
  89+ 8A4D 79 8B            defw Izquierda_y_bajando
  90+ 8A4F 83 8B            defw Izquierda_y_bajando_1
  91+ 8A51 8D 8B            defw Izquierda_y_bajando_2
  92+ 8A53 97 8B            defw Codo_izquierda_abajo
  93+ 8A55 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A57
  95+ 8A57
  96+ 8A57              ; Notas de aleatoriedad.
  97+ 8A57
  98+ 8A57              ;   Bajo_decelerando+3 (1-2)                - Define lo que baja la entidad.
  99+ 8A57              ;   Derecha_y_subiendo+8 (11)               - (11) Cuando la posición de inicio es $4001
 100+ 8A57              ;   Izquierda_y_subiendo+8 (11)             - (11) Cuando la posición de inicio es $4001
 101+ 8A57
 102+ 8A57
 103+ 8A57
 104+ 8A57
 105+ 8A57 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
 106+ 8A5B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
 107+ 8A5F
 108+ 8A5F 11 11 41 01  F_1 db $11,$11,$41,1
 109+ 8A63 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
 109+ 8A67 08 00
 110+ 8A69
 111+ 8A69 11 11 41 01  F_2 db $11,$11,$41,1
 112+ 8A6D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 112+ 8A71 0F FE
 113+ 8A73
 114+ 8A73 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 115+ 8A77 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 116+ 8A7B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 117+ 8A7F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 118+ 8A83 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 119+ 8A87 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 120+ 8A8B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 8A8F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 122+ 8A93 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 123+ 8A97 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 124+ 8A9B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 125+ 8A9F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 126+ 8AA3 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 127+ 8AA7
 128+ 8AA7 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 129+ 8AAB 11 11 91 FD      db $11,$11,$91,253,11,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 129+ 8AAF 0B 00
 130+ 8AB1
 131+ 8AB1 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 132+ 8AB5 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 132+ 8AB9 02 00
 133+ 8ABB
 134+ 8ABB 11 11 11 01  F_3 db $11,$11,$11,1
 135+ 8ABF 11 11 01 FD      db $11,$11,$01,253,4,0
 135+ 8AC3 04 00
 136+ 8AC5 11 11 11 01  F_4 db $11,$11,$11,1
 137+ 8AC9 11 11 02 FD      db $11,$11,$02,253,8,0
 137+ 8ACD 08 00
 138+ 8ACF
 139+ 8ACF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 140+ 8AD3 11 11 51 FD      db $11,$11,$51,253,2,0
 140+ 8AD7 02 00
 141+ 8AD9
 142+ 8AD9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 143+ 8ADD 11 11 51 FD      db $11,$11,$51,253,6,0
 143+ 8AE1 06 00
 144+ 8AE3
 145+ 8AE3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 146+ 8AE7 11 11 51 FD      db $11,$11,$51,253,6,0
 146+ 8AEB 06 00
 147+ 8AED
 148+ 8AED              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 149+ 8AED
 150+ 8AED 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 151+ 8AF1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 152+ 8AF5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 153+ 8AF9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 154+ 8AFD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 155+ 8B01 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 156+ 8B05 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 157+ 8B09 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B0D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 159+ 8B11 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 160+ 8B15 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 161+ 8B19 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 162+ 8B1D
 163+ 8B1D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 164+ 8B21 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 165+ 8B25 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 166+ 8B29 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 167+ 8B2D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 168+ 8B31 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 169+ 8B35 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 170+ 8B39 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 171+ 8B3D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 172+ 8B41 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 173+ 8B45 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 174+ 8B49 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 175+ 8B4D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 176+ 8B51
 177+ 8B51 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 178+ 8B55 11 11 A1 FD      db $11,$11,$a1,253,7,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 178+ 8B59 07 00
 179+ 8B5B
 180+ 8B5B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 181+ 8B5F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 181+ 8B63 02 00
 182+ 8B65
 183+ 8B65 11 11 21 01  F_5 db $11,$11,$21,1
 184+ 8B69 11 11 01 FD      db $11,$11,$01,253,4,0
 184+ 8B6D 04 00
 185+ 8B6F
 186+ 8B6F 11 11 21 01  F_6 db $11,$11,$21,1
 187+ 8B73 11 11 02 FD      db $11,$11,$02,253,8,0
 187+ 8B77 08 00
 188+ 8B79
 189+ 8B79 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 190+ 8B7D 11 11 61 FD      db $11,$11,$61,253,2,0
 190+ 8B81 02 00
 191+ 8B83
 192+ 8B83 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 193+ 8B87 11 11 61 FD      db $11,$11,$61,253,6,0
 193+ 8B8B 06 00
 194+ 8B8D
 195+ 8B8D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 196+ 8B91 11 11 61 FD      db $11,$11,$61,253,6,0
 196+ 8B95 06 00
 197+ 8B97
 198+ 8B97 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 199+ 8B9B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 200+ 8B9F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 201+ 8BA3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 202+ 8BA7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 203+ 8BAB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 204+ 8BAF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 205+ 8BB3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 206+ 8BB7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 207+ 8BBB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 208+ 8BBF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 209+ 8BC3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 210+ 8BC7
 211+ 8BC7
 212+ 8BC7
 213+ 8BC7
 214+ 8BC7
 215+ 8BC7
 216+ 8BC7
 217+ 8BC7
 218+ 8BC7
 219+ 8BC7
# file closed: Patrones_de_mov.asm
 149  8BC7              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BC7              ; 19/1/24
   2+ 8BC7
   3+ 8BC7              Indice_de_niveles
   4+ 8BC7
   5+ 8BC7 CF 8B        	defw Nivel_1
   6+ 8BC9 D1 8B        	defw Nivel_2
   7+ 8BCB
   8+ 8BCB              ;	...
   9+ 8BCB              ;	...
  10+ 8BCB              ;	+ Niveles ...
  11+ 8BCB
  12+ 8BCB 00 00        	defw 0
  13+ 8BCD 00 00        	defw 0
  14+ 8BCF
  15+ 8BCF 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BD0 01           	db 1										; Tipo de entidad que vamos a introducir en las 6 cajas de DRAW.
  17+ 8BD1
  18+ 8BD1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BD2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BD6 01 02
  20+ 8BD8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BDC 01 02
  21+ 8BDE
# file closed: Niveles.asm
 150  8BDE
 151  8BDE              ; --------------------------------------------------------------------------------
 152  8BDE              ;
 153  8BDE              ; 12/05/24
 154  8BDE              ;
 155  8BDE              ; Parámetros DRAW.
 156  8BDE              ;
 157  8BDE
 158  8BDE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BDE
 160  8BDE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BDF              ;															- Patrón de movimiento.
 162  8BDF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BE0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BE1
 165  8BE1 01           Contador_de_vueltas db 1								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BE2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BE2              ;														; (Contador_de_vueltas). Valor inicial "2": Sólo una vuelta lenta. "1" Dos vueltas lentas.
 168  8BE2
 169  8BE2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 170  8BE2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 171  8BE2              ; Ejemplos.
 172  8BE2
 173  8BE2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 174  8BE2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 175  8BE2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 176  8BE2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 177  8BE2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 178  8BE2
 179  8BE2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 180  8BE3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 181  8BE3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 182  8BE3
 183  8BE3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 184  8BE5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 185  8BE5
 186  8BE5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 187  8BE7
 188  8BE7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 189  8BE7
 190  8BE7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 191  8BE9              ;														; _palabras que componen el "movimiento_masticado".
 192  8BE9
 193  8BE9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 194  8BE9
 195  8BE9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 196  8BEA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 197  8BEA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 198  8BEA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 199  8BEA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 200  8BEA
 201  8BEA 00           Ctrl_2 db 0
 202  8BEB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 203  8BEB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 204  8BEB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 205  8BEB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 206  8BEB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 207  8BEB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 208  8BEB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 209  8BEB              ;
 210  8BEB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 211  8BEB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 212  8BEB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 213  8BEB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 214  8BEB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 215  8BEB              ;														BIT 4, ???
 216  8BEB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 217  8BEB
 218  8BEB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 219  8BEC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 220  8BEC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 221  8BEC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 222  8BEC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 223  8BEC              ;
 224  8BEC              ; 														DESCRIPCIÖN:
 225  8BEC              ;
 226  8BEC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 227  8BEC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 228  8BEC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 229  8BEC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 230  8BEC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 231  8BEC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 232  8BEC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 233  8BEC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 234  8BEC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BEC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BEC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BEC              ;
 238  8BEC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BEC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BEC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BEC
 242  8BEC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BEC
 244  8BEC 00           Filas db 0												; Filas. [DRAW]
 245  8BED 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BEE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BF0 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BF2
 249  8BF2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BF2
 251  8BF2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BF3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BF3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BF3
 255  8BF3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BF3
 257  8BF3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BF3              ;
 259  8BF3              ;	COLORES: 0 ..... NEGRO
 260  8BF3              ;    		 1 ..... AZUL
 261  8BF3              ; 			 2 ..... ROJO
 262  8BF3              ;			 3 ..... MAGENTA
 263  8BF3              ; 			 4 ..... VERDE
 264  8BF3              ; 			 5 ..... CIAN
 265  8BF3              ;			 6 ..... AMARILLO
 266  8BF3              ; 			 7 ..... BLANCO
 267  8BF3
 268  8BF3 00 00        Indice_Sprite_der defw 0
 269  8BF5 00 00        Indice_Sprite_izq defw 0
 270  8BF7 00 00        Puntero_DESPLZ_der defw 0
 271  8BF9 00 00        Puntero_DESPLZ_izq defw 0
 272  8BFB
 273  8BFB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BFD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BFE 03           Columnas db 3
 276  8BFF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8C01              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8C01 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C02
 280  8C02              ; variables de control general.
 281  8C02
 282  8C02 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8C03
 284  8C03              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8C03
 286  8C03              Perfiles_de_velocidad
 287  8C03
 288  8C03 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8C04 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8C05 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8C06 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8C07
 293  8C07              ; Contadores de 16 bits.
 294  8C07
 295  8C07 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8C09 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8C0B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8C0D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8C0F
 300  8C0F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8C0F
 302  8C0F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8C11 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8C13 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8C15              ;
 306  8C15              ;
 307  8C15 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8C16              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8C16              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8C16 00           Incrementa_puntero_backup db 0
 311  8C17 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8C18              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8C18 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8C19 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8C1A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8C1B              ;
 317  8C1B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8C1B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8C1B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8C1B              ;
 321  8C1B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8C1B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8C1B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8C1B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8C1B              ;
 326  8C1B              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8C1B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8C1B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8C1B
 330  8C1B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8C1C
 332  8C1C              ;														DESCRIPCIÓN:
 333  8C1C              ;
 334  8C1C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8C1C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8C1C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8C1C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8C1C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8C1C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8C1C
 341  8C1C              ;														BIT 3, Recarga de nueva oleada.
 342  8C1C              ;														BIT 4, Recarga de nueva oleada.
 343  8C1C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8C1C              ;														BIT 6, **** Frame completo.
 345  8C1C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8C1C
 347  8C1C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8C1E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8C1E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8C1E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8C1E
 352  8C1E              ; Gestión de ENTIDADES y CAJAS.
 353  8C1E
 354  8C1E 00 00        Puntero_store_caja defw 0
 355  8C20 00 00        Puntero_restore_caja defw 0
 356  8C22 00 00        Indice_restore_caja defw 0
 357  8C24 00 00        Puntero_indice_master defw 0
 358  8C26
 359  8C26 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 360  8C27 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 361  8C28 00           Entidades_en_curso db 0									; Entidades en pantalla.
 362  8C29
 363  8C29 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 364  8C2B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 365  8C2D              ;														; _ puntero (Indice_entidades).
 366  8C2D
 367  8C2D              ;---------------------------------------------------------------------------------------------------------------
 368  8C2D              ;
 369  8C2D              ;	13/10/24
 370  8C2D              ;
 371  8C2D              ;	Álbumes.
 372  8C2D
 373  8C2D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 374  8C2F              ;														; _variable para almacenar lo posición del puntero_
 375  8C2F              ; 														; _de pila, SP.
 376  8C2F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 377  8C31              ;														; La utiliza la rutina [Extrae_foto_registros].
 378  8C31
 379  8C31              ; Impresión. ----------------------------------------------------------------------------------------------------
 380  8C31
 381  8C31 00 00        Album_de_pintado defw 0
 382  8C33 00 00        Album_de_borrado defw 0
 383  8C35 00 00        Album_de_pintado_Amadeus defw 0
 384  8C37 00 00        Album_de_borrado_Amadeus defw 0
 385  8C39
 386  8C39 00 00        Album_de_pintado_disparos_Amadeus defw 0
 387  8C3B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 388  8C3D
 389  8C3D 00 00        Album_de_pintado_disparos_Entidades defw 0
 390  8C3F 00 00        Album_de_borrado_disparos_Entidades defw 0
 391  8C41
 392  8C41
 393  8C41 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 394  8C43
 395  8C43 00           Num_de_bytes_album_de_disparos db 0
 396  8C44 00           Num_de_bytes_album_de_disparos_borrado db 0
 397  8C45
 398  8C45 07           Numero_de_disparos_de_entidades db 7
 399  8C46
 400  8C46 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 401  8C47 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 402  8C48
 403  8C48 00 00        Techo_Scanlines_album defw 0
 404  8C4A 00 00        Techo_Scanlines_album_2 defw 0
 405  8C4C 00           Switch db 0
 406  8C4D 00 00        Techo defw 0
 407  8C4F 00 00        Scanlines_album_SP defw 0
 408  8C51 00 89        India_SP defw Tabla_de_pintado
 409  8C53 03 89        India_2_SP defw Tabla_de_pintado+3
 410  8C55
 411  8C55 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 412  8C56              ;
 413  8C56              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 414  8C56              ;!															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 415  8C56              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 416  8C56              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 417  8C56              ;																Habilita el borrado/pintado de sprites.
 418  8C56              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 419  8C56              ;																_ a la baja.
 420  8C56              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 421  8C56              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 422  8C56              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 423  8C56              ; 																_ el último frame de la explosión de nuestra nave.
 424  8C56              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 425  8C56              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 426  8C56
 427  8C56 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 428  8C57              ;
 429  8C57              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 430  8C57
 431  8C57 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 432  8C58              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 433  8C58              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 434  8C58
 435  8C58              ; Gestión de Disparos.
 436  8C58
 437  8C58 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 438  8C5A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 439  8C5C 00           Impacto2 db 0											; Byte de control de impactos.
 440  8C5D
 441  8C5D              ;
 442  8C5D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 443  8C5D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 444  8C5D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 445  8C5D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 446  8C5D
 447  8C5D
 448  8C5D
 449  8C5D
 450  8C5D
 451  8C5D
 452  8C5D
 453  8C5D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 454  8C5F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 455  8C5F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 456  8C5F
 457  8C5F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 458  8C61              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 459  8C61 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C64              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 461  8C64 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 462  8C67              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 463  8C67
 464  8C67              ;---------------------------------------------------------------------------------------------------------------
 465  8C67
 466  8C67              ; Relojes y temporizaciones.
 467  8C67
 468  8C67 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 469  8C68 05           Clock_explosion_Amadeus db 5
 470  8C69 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 471  8C6A
 472  8C6A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 473  8C6C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 474  8C6E 00           Numero_rnd_disparos db 0
 475  8C6F
 476  8C6F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 477  8C71 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C72 A0           CLOCK_disparos_de_entidades db $a0
 479  8C73
 480  8C73              ;---------------------------------------------------------------------------------------------------------------
 481  8C73
 482  8C73              ; Gestión de NIVELES.
 483  8C73
 484  8C73 00           Nivel db 0												; Nivel actual del juego.
 485  8C74 00 00        Puntero_indice_NIVELES defw 0
 486  8C76 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C78              ; 														; _ que definen el NIVEL.
 488  8C78
 489  8C78              ; ---------------------------------------------------------------------------------------------------------------
 490  8C78
 491  8C78              ; Temporizaciones Shield.
 492  8C78
 493  8C78 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C7C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C7E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C7F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C80 00           Shield_3 db 0
 498  8C81
 499  8C81 07           Lives db 7
 500  8C82
 501  8C82              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C82              ;
 503  8C82              ;	13/11/24
 504  8C82
 505  8C82              START
 506  8C82
 507  8C82 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C85 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C87 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C89 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C8B F3           	DI
 512  8C8C
 513  8C8C              ; Limpiamos pantalla.
 514  8C8C
 515  8C8C              ;	ld a,%00000111
 516  8C8C              ;	call Cls
 517  8C8C CD 03 92     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8C8F
 519  8C8F              INICIALIZACION
 520  8C8F
 521  8C8F 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8C91 CD 9E 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8C94 CD 14 8F     	call Extrae_numero_aleatorio_y_avanza
 524  8C97 6F           	ld l,a
 525  8C98 26 00        	ld h,0
 526  8C9A 22 6F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8C9D
 528  8C9D              ;	Inicia los álbumes de líneas.
 529  8C9D
 530  8C9D CD 3F 91     	call Inicia_albumes_de_lineas
 531  8CA0 CD 4F 91     	call Inicia_albumes_de_lineas_Amadeus
 532  8CA3 CD 5C 91     	call Inicia_albumes_de_disparos
 533  8CA6
 534  8CA6              ;	Inicia 1er Nivel.
 535  8CA6
 536  8CA6 CD 00 94     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CA9 CD CE 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CAC              ;														   _reponiendo entidades eliminadas.
 539  8CAC CD 34 94     	call Prepara_Cajas_de_Entidades
 540  8CAF
 541  8CAF CD 85 94     	call Inicia_Amadeus
 542  8CB2
 543  8CB2              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 544  8CB2              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 545  8CB2              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 546  8CB2 11 AE 89     	ld de,Amadeus_BOX
 547  8CB5 CD 71 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 548  8CB8 CD C8 94     	call Limpiamos_bandeja_DRAW
 549  8CBB
 550  8CBB              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 551  8CBB
 552  8CBB 06 3C        	ld b,60
 553  8CBD CD A6 9F     2 call Amadeus_a_izquierda
 554  8CC0 10 FB        	djnz 2B
 555  8CC2
 556  8CC2 CD 1D 91     	call Genera_datos_de_impresion_Amadeus
 557  8CC5
 558  8CC5              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 559  8CC5
 560  8CC5 CD 78 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 561  8CC8
 562  8CC8 CD 0E 92     	call Inicia_Shield
 563  8CCB
 564  8CCB 2A 4F 8C     6 ld hl,(Scanlines_album_SP)
 565  8CCE 22 48 8C     	ld (Techo_Scanlines_album),hl
 566  8CD1
 567  8CD1 2A 33 8C     	ld hl,(Album_de_borrado)
 568  8CD4 22 4F 8C     	ld (Scanlines_album_SP),hl
 569  8CD7
 570  8CD7 21 00 89     	ld hl,Tabla_de_pintado
 571  8CDA 22 51 8C     	ld (India_SP),hl
 572  8CDD
 573  8CDD 21 55 8C     	ld hl,Ctrl_3
 574  8CE0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 575  8CE2 CB D6        	set 2,(hl)
 576  8CE4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 577  8CE6
 578  8CE6 FB           	ei 													; Ha de apuntar a $5c3a.
 579  8CE7
 580  8CE7 76           	halt
 581  8CE8
 582  8CE8              ; ------------------------------------
 583  8CE8
 584  8CE8              Main
 585  8CE8              ;
 586  8CE8              ; 07/11/24.
 587  8CE8
 588  8CE8              ; Gestión de disparos.
 589  8CE8
 590  8CE8 CD E9 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 591  8CEB CD 94 A1     	call Motor_de_disparos_entidades
 592  8CEE CD 2F A4     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 593  8CF1
 594  8CF1              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 595  8CF1              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 596  8CF1              ; Este hecho lo indica el bit2 de (Impacto2).
 597  8CF1
 598  8CF1 CD D0 A5     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 599  8CF4
 600  8CF4              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 601  8CF4
 602  8CF4 21 72 8C     	ld hl,CLOCK_disparos_de_entidades
 603  8CF7 35           	dec (hl)
 604  8CF8 CC 2A 8E     	call z,Autoriza_disparo_de_entidades
 605  8CFB
 606  8CFB 2A 6F 8C     	ld hl,(Clock_next_entity)
 607  8CFE ED 4B 78 5C  	ld bc,(FRAMES)
 608  8D02 A7           	and a
 609  8D03 ED 42        	sbc hl,bc
 610  8D05 20 21        	jr nz,1F
 611  8D07
 612  8D07              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 613  8D07
 614  8D07 CD 14 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 615  8D0A CD 2B 8F     	call Define_Clock_next_entity
 616  8D0D
 617  8D0D              ; GESTIÓN DE ENTIDADES.
 618  8D0D
 619  8D0D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 620  8D0D              ; _ (Clock_next_entity) para la siguiente entidad.
 621  8D0D
 622  8D0D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 623  8D0D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 624  8D0D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 625  8D0D
 626  8D0D 21 27 8C     	ld hl,Numero_parcial_de_entidades
 627  8D10 46           	ld b,(hl)
 628  8D11
 629  8D11 04           	inc b
 630  8D12 05           	dec b
 631  8D13
 632  8D13 F3           	di
 633  8D14 28 FE        	jr z,$													;! Nivel superado !!!!!
 634  8D16 FB           	ei
 635  8D17
 636  8D17 3A 28 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 637  8D1A B8           	cp b
 638  8D1B 28 0B        	jr z,1F
 639  8D1D 30 09        	jr nc,1F
 640  8D1F
 641  8D1F              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 642  8D1F
 643  8D1F 3C           	inc a
 644  8D20 32 28 8C     	ld (Entidades_en_curso),a
 645  8D23
 646  8D23 21 56 8C     	ld hl,Ctrl_4
 647  8D26 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 648  8D28
 649  8D28              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 650  8D28
 651  8D28              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 652  8D28              ;	call Define_Clock_next_entity
 653  8D28
 654  8D28 3A 28 8C     1 ld a,(Entidades_en_curso)
 655  8D2B A7           	and a
 656  8D2C CA D0 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 657  8D2F 47           	ld b,a													; No hay entidades que gestionar.
 658  8D30
 659  8D30              ; ( Código que ejecutamos con cada entidad: ).
 660  8D30
 661  8D30              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 662  8D30              ;
 663  8D30              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 664  8D30
 665  8D30 21 00 89     	ld hl,Tabla_de_pintado
 666  8D33 22 51 8C     	ld (India_SP),hl
 667  8D36
 668  8D36 21 55 8C     	ld hl,Ctrl_3
 669  8D39 CB D6        	set 2,(hl)
 670  8D3B CD BE 8E     	call Change
 671  8D3E
 672  8D3E C5           2 push bc 												; Nº de entidades en curso.
 673  8D3F
 674  8D3F DD 2A 1E 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 675  8D43 CD DF 91     	call Salta_caja_de_entidades_vacia
 676  8D46
 677  8D46              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 678  8D46
 679  8D46 DD 7E 00     	ld a,(ix+0)
 680  8D49 CB 7F        	bit 7,a
 681  8D4B 28 11        	jr z,5F
 682  8D4D
 683  8D4D              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 684  8D4D
 685  8D4D 21 56 8C     	ld hl,Ctrl_4
 686  8D50 CB 46        	bit 0,(hl)
 687  8D52 CC EE 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 688  8D55 28 E8        	jr z,6B
 689  8D57
 690  8D57 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 691  8D59 CB BF        	res 7,a
 692  8D5B DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 693  8D5E
 694  8D5E              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 695  8D5E              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 696  8D5E
 697  8D5E 3A 5C 8C     5 ld a,(Impacto2)
 698  8D61 CB 5F        	bit 3,a
 699  8D63 C4 C6 A3     	call nz,Compara_con_coordenadas_de_disparo
 700  8D66
 701  8D66              ; Existe colisión entre esta entidad y Amadeus ???
 702  8D66
 703  8D66 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 704  8D69 CB 4F        	bit 1,a
 705  8D6B C4 F9 92     	call nz,Genera_explosion
 706  8D6E 20 43        	jr nz,Gestiona_siguiente_entidad
 707  8D70
 708  8D70 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 709  8D73 A7           	and a
 710  8D74 28 0C        	jr z,3F
 711  8D76
 712  8D76              ; IMPACTO en entidad por colisión con Amadeus.
 713  8D76
 714  8D76              ; 5/7/24
 715  8D76              ; Nota importante:
 716  8D76              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 717  8D76              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 718  8D76              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 719  8D76
 720  8D76 3A B2 89     	ld a,(Impacto_Amadeus)
 721  8D79 A7           	and a
 722  8D7A C4 F9 92     	call nz,Genera_explosion
 723  8D7D 20 34        	jr nz,Gestiona_siguiente_entidad
 724  8D7F
 725  8D7F              ; Falsa colisión !!!
 726  8D7F
 727  8D7F 32 E2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 728  8D82
 729  8D82              ; -------------------------------------------
 730  8D82
 731  8D82 CD 6F 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 732  8D85 CD 96 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 733  8D88 CD BC 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 734  8D8B
 735  8D8B DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 736  8D8D DD 2A E3 8B  	ld ix,(Puntero_de_impresion)
 737  8D91 CD E2 95     	call Genera_datos_de_impresion
 738  8D94 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 739  8D96
 740  8D96 CD EB 94     	call Decrementa_Contador_de_mov_masticados
 741  8D99
 742  8D99              ; -------------------------------------------
 743  8D99
 744  8D99              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 745  8D99
 746  8D99 2A E3 8B     	ld hl,(Puntero_de_impresion)
 747  8D9C CD B6 95     	call Genera_coordenadas
 748  8D9F
 749  8D9F ED 4B DF 8B  	ld bc,(Coordenada_X)
 750  8DA3
 751  8DA3 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 752  8DA6 DD 70 02     	ld (ix+2),b
 753  8DA9
 754  8DA9              ; TODO: Generamos disparo ???
 755  8DA9
 756  8DA9 3A 47 8C     	ld a,(Permiso_de_disparo_Entidades)
 757  8DAC A7           	and a
 758  8DAD C4 3F 8E     	call nz,Entidad_genera_disparo_si_procede
 759  8DB0
 760  8DB0 CD 4A A5     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 761  8DB3
 762  8DB3              Gestiona_siguiente_entidad
 763  8DB3
 764  8DB3 CD EE 91     	call Incrementa_punteros_de_cajas
 765  8DB6
 766  8DB6 C1           	pop bc
 767  8DB7 10 85        	djnz 2B
 768  8DB9
 769  8DB9              ; Hemos gestionado todas las entidades.
 770  8DB9              ; ----- ----- -----
 771  8DB9
 772  8DB9 CD 83 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 773  8DBC CD 9A 8F     	call Ordena_tabla_de_impresion
 774  8DBF CD 78 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 775  8DC2
 776  8DC2 CD 40 8F     	call Borra_diferencia
 777  8DC5
 778  8DC5 3A 55 8C     	ld a,(Ctrl_3)
 779  8DC8 CB 5F        	bit 3,a
 780  8DCA 20 04        	jr nz,Gestion_de_Amadeus
 781  8DCC
 782  8DCC EB           	ex de,hl
 783  8DCD 71           	ld (hl),c
 784  8DCE 2C           	inc l
 785  8DCF 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 786  8DD0
 787  8DD0              ;! GESTIONA AMADEUS !!!!!!!!!!
 788  8DD0
 789  8DD0              Gestion_de_Amadeus
 790  8DD0
 791  8DD0 21 55 8C     	ld hl,Ctrl_3
 792  8DD3 CB 76        	bit 6,(hl)
 793  8DD5 28 13        	jr z,Amadeus_vivo
 794  8DD7
 795  8DD7              ; Amadeus ha sido destruido.
 796  8DD7              ; Decrementa (Temp_new_live).
 797  8DD7
 798  8DD7 21 69 8C     	ld hl,Temp_new_live
 799  8DDA 35           	dec (hl)
 800  8DDB 20 26        	jr nz,End_frame
 801  8DDD
 802  8DDD              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 803  8DDD
 804  8DDD 21 81 8C     	ld hl,Lives
 805  8DE0 35           	dec (hl)
 806  8DE1
 807  8DE1              ;! Fin del juego
 808  8DE1
 809  8DE1 F3           	di
 810  8DE2 28 FE        	jr z,$														;! GAME OVER !!!!!
 811  8DE4 FB           	ei
 812  8DE5
 813  8DE5              ; Nueva nave.
 814  8DE5
 815  8DE5 CD 5C 8E     	call Reinicia_Amadeus
 816  8DE8 18 19        	jr End_frame
 817  8DEA
 818  8DEA              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 819  8DEA
 820  8DEA              Amadeus_vivo
 821  8DEA
 822  8DEA 3A B2 89     	ld a,(Impacto_Amadeus)
 823  8DED A7           	and a
 824  8DEE C4 69 93     	call nz, Genera_explosion_Amadeus
 825  8DF1 20 10        	jr nz, End_frame
 826  8DF3
 827  8DF3 CD D6 92     	call Teclado
 828  8DF6 21 55 8C     	ld hl,Ctrl_3
 829  8DF9
 830  8DF9 CB 6E        	bit 5,(hl)
 831  8DFB 28 06        	jr z,End_frame
 832  8DFD
 833  8DFD              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 834  8DFD
 835  8DFD CD D9 8E     	call Change_Amadeus
 836  8E00 CD 1D 91     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 837  8E03
 838  8E03              End_frame
 839  8E03
 840  8E03              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 841  8E03              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 842  8E03
 843  8E03 CD F1 A2     	call Genera_datos_de_impresion_disparos_Entidades
 844  8E06 CD B5 A4     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 845  8E09 CD 0B A4     	call Calcula_bytes_pintado_disparos
 846  8E0C CD 18 A4     	call Limpia_album_de_pintado_disparos_entidades
 847  8E0F
 848  8E0F              ; ------------ ------------- --------------
 849  8E0F
 850  8E0F 2A 33 8C     	ld hl,(Album_de_borrado)
 851  8E12 22 4F 8C     	ld (Scanlines_album_SP),hl
 852  8E15
 853  8E15 21 55 8C     	ld hl,Ctrl_3
 854  8E18 CB C6        	set 0,(hl) 											; Indica Frame completo.
 855  8E1A CB 9E        	res 3,(hl)
 856  8E1C CB A6        	res 4,(hl)
 857  8E1E
 858  8E1E 21 56 8C     	ld hl,Ctrl_4
 859  8E21 CB 86        	res 0,(hl)
 860  8E23
 861  8E23 AF           	xor a
 862  8E24 D3 FE        	out ($fe),a
 863  8E26
 864  8E26 76           	halt
 865  8E27
 866  8E27 C3 E8 8C     	jp Main
 867  8E2A
 868  8E2A              ;------------------------------------------
 869  8E2A              ;
 870  8E2A              ;	07/11/24
 871  8E2A
 872  8E2A              Autoriza_disparo_de_entidades
 873  8E2A
 874  8E2A 3E 01        	ld a,1
 875  8E2C 32 47 8C     	ld (Permiso_de_disparo_Entidades),a
 876  8E2F
 877  8E2F 3A 71 8C     	ld a,(Repone_CLOCK_disparos)
 878  8E32 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 879  8E34 38 02        	jr c,1F
 880  8E36
 881  8E36              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 882  8E36              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 883  8E36              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 884  8E36
 885  8E36 D6 04        	sub 4								; Aumenta la cadencia del disparo.
 886  8E38
 887  8E38 32 71 8C     1 ld (Repone_CLOCK_disparos),a
 888  8E3B 32 72 8C     	ld (CLOCK_disparos_de_entidades),a
 889  8E3E
 890  8E3E C9           	ret
 891  8E3F
 892  8E3F              ;------------------------------------------
 893  8E3F              ;
 894  8E3F              ;	14/09/24
 895  8E3F              ;
 896  8E3F              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 897  8E3F
 898  8E3F              Entidad_genera_disparo_si_procede
 899  8E3F
 900  8E3F 2A 6C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 901  8E42 CB 06        	rlc (hl)
 902  8E44
 903  8E44 DC 41 A3     	call c,Genera_disparo_de_entidad_maldosa
 904  8E47
 905  8E47 C9           	ret
 906  8E48
 907  8E48              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 908  8E48              ;
 909  8E48              ;	30/09/24
 910  8E48
 911  8E48              Actuaiza_sp_de_disparos_de_entidades
 912  8E48
 913  8E48 2A 6C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 914  8E4B 23           	inc hl
 915  8E4C 22 6C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 916  8E4F
 917  8E4F 11 FD 88     	ld de,Numeros_aleatorios+7
 918  8E52 7B           	ld a,e
 919  8E53 95           	sub l
 920  8E54 C0           	ret nz
 921  8E55
 922  8E55 21 F6 88     1 ld hl,Numeros_aleatorios
 923  8E58 22 6C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 924  8E5B C9           	ret
 925  8E5C
 926  8E5C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 927  8E5C              ;
 928  8E5C              ;	24/07/24
 929  8E5C
 930  8E5C              Reinicia_Amadeus
 931  8E5C
 932  8E5C              ;	Reinicia posición y estado.
 933  8E5C
 934  8E5C 21 CF 50     	ld hl,$50cf
 935  8E5F 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 936  8E62 21 CC DC     	ld hl,$dccc
 937  8E65 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 938  8E68 21 3D 00     	ld hl,$003d
 939  8E6B 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 940  8E6E
 941  8E6E              ;	limpiamos el álbum de borrado.
 942  8E6E
 943  8E6E 2A 37 8C     	ld hl,(Album_de_borrado_Amadeus)
 944  8E71
 945  8E71 AF           	xor a
 946  8E72 77           	ld (hl),a
 947  8E73
 948  8E73 E5           	push hl
 949  8E74 D1           	pop de
 950  8E75 13           	inc de
 951  8E76
 952  8E76 01 23 00     	ld bc,35
 953  8E79 ED B0        	ldir
 954  8E7B
 955  8E7B CD 1D 91     	call Genera_datos_de_impresion_Amadeus
 956  8E7E
 957  8E7E              ;	Reinicia temporizaciones.
 958  8E7E
 959  8E7E CD 0E 92     	call Inicia_Shield
 960  8E81
 961  8E81 3E 5A        	ld a,90
 962  8E83 32 7E 8C     	ld (Shield),a
 963  8E86
 964  8E86 3E 64        	ld a,100
 965  8E88 32 69 8C     	ld (Temp_new_live),a
 966  8E8B
 967  8E8B              ; 	Restauramos el FLAG: Amadeus vivo.
 968  8E8B
 969  8E8B 21 55 8C     	ld hl,Ctrl_3
 970  8E8E CB B6        	res 6,(hl)
 971  8E90
 972  8E90              ;	Fuerza la impresión de la nave en el siguiente frame.
 973  8E90
 974  8E90 21 55 8C      	ld hl,Ctrl_3
 975  8E93 CB EE        	set 5,(hl)
 976  8E95
 977  8E95 C9           	ret
 978  8E96
 979  8E96              ; --------------------------------------------------------------------------------------------------------------
 980  8E96              ;
 981  8E96              ;	23/11/24
 982  8E96
 983  8E96              Ajusta_velocidad_entidad
 984  8E96
 985  8E96 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 986  8E99 A7           	and a
 987  8E9A C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 988  8E9B              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 989  8E9B              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 990  8E9B
 991  8E9B
 992  8E9B              ; Incrementa (Contador_de_vueltas)x2.
 993  8E9B              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 994  8E9B
 995  8E9B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 996  8E9B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 997  8E9B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 998  8E9B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 999  8E9B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1000  8E9B
1001  8E9B
1002  8E9B CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1003  8E9D DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1004  8EA0 E6 10        	and $10
1005  8EA2 C8           	ret z
1006  8EA3
1007  8EA3              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1008  8EA3
1009  8EA3 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1010  8EA6 CB 2F        	sra a
1011  8EA8 CB 2F        	sra a
1012  8EAA DD 77 0B     	ld (ix+11),a
1013  8EAD
1014  8EAD DD 6E 07     	ld l,(ix+7)
1015  8EB0 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1016  8EB3
1017  8EB3              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1018  8EB3 23           	inc hl
1019  8EB4 23           	inc hl
1020  8EB5 23           	inc hl
1021  8EB6 23           	inc hl
1022  8EB7              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1023  8EB7
1024  8EB7 DD 75 07     	ld (ix+7),l
1025  8EBA DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1026  8EBD
1027  8EBD C9           	ret
1028  8EBE
1029  8EBE              ; --------------------------------------------------------------------------------------------------------------
1030  8EBE              ;
1031  8EBE              ;	25/08/24
1032  8EBE
1033  8EBE              Change
1034  8EBE
1035  8EBE 3A 4C 8C     	ld a,(Switch)
1036  8EC1 EE 01        	xor 1
1037  8EC3 32 4C 8C     	ld (Switch),a
1038  8EC6 2A 31 8C     	ld hl,(Album_de_pintado)
1039  8EC9 ED 5B 33 8C  	ld de,(Album_de_borrado)
1040  8ECD EB           	ex de,hl
1041  8ECE 22 31 8C     	ld (Album_de_pintado),hl
1042  8ED1 22 4F 8C     	ld (Scanlines_album_SP),hl
1043  8ED4 ED 53 33 8C  	ld (Album_de_borrado),de
1044  8ED8 C9           	ret
1045  8ED9
1046  8ED9              Change_Amadeus
1047  8ED9
1048  8ED9 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
1049  8EDC ED 5B 37 8C  	ld de,(Album_de_borrado_Amadeus)
1050  8EE0 EB           	ex de,hl
1051  8EE1 22 35 8C     	ld (Album_de_pintado_Amadeus),hl
1052  8EE4 ED 53 37 8C  	ld (Album_de_borrado_Amadeus),de
1053  8EE8 C9           	ret
1054  8EE9
1055  8EE9              Change_Disparos
1056  8EE9
1057  8EE9              ; Álbumes de Amadeus.
1058  8EE9
1059  8EE9 2A 39 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1060  8EEC ED 5B 3B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1061  8EF0 EB           	ex de,hl
1062  8EF1 22 39 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1063  8EF4 ED 53 3B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1064  8EF8 CD 00 A4     	call Limpia_album_de_pintado_disparos_Amadeus
1065  8EFB
1066  8EFB              ; Álbumes de entidades.
1067  8EFB
1068  8EFB 2A 3D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1069  8EFE ED 5B 3F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1070  8F02 EB           	ex de,hl
1071  8F03 22 3D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1072  8F06 ED 53 3F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1073  8F0A 22 41 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1074  8F0D
1075  8F0D 3A 43 8C     	ld a,(Num_de_bytes_album_de_disparos)
1076  8F10 32 44 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1077  8F13
1078  8F13 C9           	ret
1079  8F14
1080  8F14              ; ------------------------------------
1081  8F14              ;
1082  8F14              ; 1/05/24
1083  8F14
1084  8F14              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1085  8F14              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1086  8F14
1087  8F14              ;	DESTRUYE: HL,DE,A
1088  8F14              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1089  8F14
1090  8F14              ;	Variables implicadas: (RND_SP).
1091  8F14
1092  8F14              Extrae_numero_aleatorio_y_avanza
1093  8F14
1094  8F14 21 FD 88     	ld hl,Numeros_aleatorios+7
1095  8F17 EB           	ex de,hl
1096  8F18 2A 6A 8C     	ld hl,(RND_SP)
1097  8F1B
1098  8F1B 7B           	ld a,e
1099  8F1C 95           	sub l
1100  8F1D 20 06        	jr nz,1F
1101  8F1F
1102  8F1F              ; Sitúa HL al principio de la tabla de nº aleatorios.
1103  8F1F
1104  8F1F 21 F6 88     	ld hl,Numeros_aleatorios
1105  8F22 22 6A 8C     	ld (RND_SP),HL
1106  8F25
1107  8F25              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1108  8F25
1109  8F25 7E           1 ld a,(hl)
1110  8F26 23           	inc hl
1111  8F27 22 6A 8C     	ld (RND_SP),hl
1112  8F2A C9           	ret
1113  8F2B
1114  8F2B              ; ------------------------------------
1115  8F2B              ;
1116  8F2B              ; 1/05/24
1117  8F2B
1118  8F2B              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1119  8F2B              ; (1 a 4 segundos).
1120  8F2B              ; Actualizamos (Clock_next_entity) con A.
1121  8F2B
1122  8F2B              ;	DESTRUYE: A y B.
1123  8F2B              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1124  8F2B              ;			 Actualiza (Clock_next_entity) con A.
1125  8F2B
1126  8F2B              ;	Variables implicadas: (Clock_next_entity).
1127  8F2B
1128  8F2B              ; Notas:
1129  8F2B
1130  8F2B              ; 	$32 1 seg.
1131  8F2B              ; 	$64 2 seg.
1132  8F2B              ; 	$96 3 seg.
1133  8F2B              ; 	$c8 4 seg.
1134  8F2B              ; 	$fa 5 seg.
1135  8F2B
1136  8F2B              ; $ffff 1310,7 seg, 22 minutos.
1137  8F2B
1138  8F2B              ;	$0100  5 seg. aproximadamente.
1139  8F2B              ;	$0200 10 seg. aproximadamente.
1140  8F2B              ;	$0300 15 seg. aproximadamente.
1141  8F2B              ;	$0400 20 seg. aproximadamente.
1142  8F2B              ;	$0500 25 seg. aproximadamente.
1143  8F2B              ;	$0600 30 seg. aproximadamente.
1144  8F2B
1145  8F2B              Define_Clock_next_entity
1146  8F2B
1147  8F2B FE 34        	cp $34
1148  8F2D 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1149  8F2F
1150  8F2F              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1151  8F2F
1152  8F2F 4F           3 ld c,a
1153  8F30 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1154  8F32 2A 78 5C     	ld hl,(FRAMES)
1155  8F35 A7           	and a
1156  8F36 ED 4A        	adc hl,bc
1157  8F38 22 6F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1158  8F3B C9           	ret
1159  8F3C
1160  8F3C 3E 34        1 ld a,$34
1161  8F3E 18 EF        	jr 3B
1162  8F40
1163  8F40              ; ------------------------------------
1164  8F40              ;
1165  8F40              ; 18/03/24
1166  8F40
1167  8F40              Borra_diferencia
1168  8F40
1169  8F40 ED 4B 4F 8C  	ld bc,(Scanlines_album_SP)
1170  8F44
1171  8F44 3A 4C 8C     	ld a,(Switch)
1172  8F47 A7           	and a
1173  8F48 28 08        	jr z,2F
1174  8F4A
1175  8F4A 2A 4A 8C     	ld hl,(Techo_Scanlines_album_2)
1176  8F4D 11 4A 8C     	ld de,Techo_Scanlines_album_2
1177  8F50 18 06        	jr 3F
1178  8F52
1179  8F52 2A 48 8C     2 ld hl,(Techo_Scanlines_album)
1180  8F55 11 48 8C     	ld de,Techo_Scanlines_album
1181  8F58
1182  8F58              ; Diferencia.
1183  8F58
1184  8F58 ED 42        3 sbc hl,bc
1185  8F5A
1186  8F5A C8           	ret z
1187  8F5B D8           	ret c
1188  8F5C
1189  8F5C              ; Nuevo techo, (más bajo que el anterior).
1190  8F5C              ; Fijamos nuevo techo y borramos bytes sobrantes.
1191  8F5C
1192  8F5C EB           	ex de,hl
1193  8F5D
1194  8F5D 71           	ld (hl),c
1195  8F5E 2C           	inc l
1196  8F5F 70           	ld (hl),b
1197  8F60
1198  8F60 AF           	xor a
1199  8F61 43           	ld b,e
1200  8F62
1201  8F62 2A 4F 8C     	ld hl,(Scanlines_album_SP)
1202  8F65
1203  8F65 77           1 ld (hl),a
1204  8F66 23           	inc hl
1205  8F67 10 FC        	djnz 1B
1206  8F69
1207  8F69              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1208  8F69
1209  8F69 21 55 8C     	ld hl,Ctrl_3
1210  8F6C CB DE        	set 3,(hl)
1211  8F6E
1212  8F6E C9           	ret
1213  8F6F
1214  8F6F              ; --------------------------------------------------------------------------------------------------------------
1215  8F6F              ;
1216  8F6F              ;	23/11/24
1217  8F6F              ;
1218  8F6F              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1219  8F6F
1220  8F6F              Entidad_a_Tabla_de_pintado
1221  8F6F
1222  8F6F              ; Almacena la Coordenada Y de la entidad en curso.
1223  8F6F
1224  8F6F              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1225  8F6F
1226  8F6F DD 7E 02     	ld a,(ix+2)
1227  8F72 2A 51 8C     	ld hl,(India_SP)
1228  8F75 77           	ld (hl),a
1229  8F76 2C           	inc l
1230  8F77
1231  8F77              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1232  8F77
1233  8F77 ED 5B 4F 8C  	ld de,(Scanlines_album_SP)
1234  8F7B
1235  8F7B 73           	ld (hl),e
1236  8F7C 2C           	inc l
1237  8F7D 72           	ld (hl),d
1238  8F7E 2C           	inc l
1239  8F7F
1240  8F7F 22 51 8C     	ld (India_SP),hl
1241  8F82
1242  8F82 C9           	ret
1243  8F83
1244  8F83              ; --------------------------------------------------------------------------------------------------------------
1245  8F83              ;
1246  8F83              ;	27/03/24
1247  8F83              ;
1248  8F83
1249  8F83              Inicializa_India_y_limpia_Tabla_de_impresion
1250  8F83
1251  8F83 2A 51 8C     	ld hl,(India_SP)
1252  8F86 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1253  8F89
1254  8F89 79           	ld a,c
1255  8F8A 95           	sub l
1256  8F8B 28 06        	jr z,2F
1257  8F8D 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1258  8F8E              ;														; _ y pasamos a inicializar (India_SP).
1259  8F8E AF           	xor a
1260  8F8F
1261  8F8F 77           1 ld (hl),a
1262  8F90 2C           	inc l
1263  8F91 10 FC        	djnz 1B												; Limpia Tabla.
1264  8F93
1265  8F93 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1266  8F96 22 51 8C     	ld (India_SP),hl
1267  8F99
1268  8F99 C9           	ret
1269  8F9A
1270  8F9A              ; --------------------------------------------------------------------------------------------------------------
1271  8F9A              ;
1272  8F9A              ;	31/3/24
1273  8F9A
1274  8F9A              Ordena_tabla_de_impresion
1275  8F9A
1276  8F9A              ; 5794 T/states.
1277  8F9A              ; 6278 T/states.
1278  8F9A              ; 5310 T/states.
1279  8F9A
1280  8F9A              ; Inicializamos punteros (India_SP) e (India_2_SP).
1281  8F9A              ; Inicializamos contador de comparaciones, [C].
1282  8F9A              ; Cargamos los registros A y B para efectuar comparación.
1283  8F9A
1284  8F9A FD 2E 00     	ld iyl,0
1285  8F9D
1286  8F9D 3A 28 8C     	ld a,(Entidades_en_curso)
1287  8FA0 FE 04        	cp 4 	;	4
1288  8FA2 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1289  8FA3
1290  8FA3 3D           	dec a
1291  8FA4 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1292  8FA5 51           	ld d,c 										; Copia de respaldo.
1293  8FA6
1294  8FA6 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1295  8FA7
1296  8FA7 21 03 89     	ld hl,Tabla_de_pintado+3
1297  8FAA 46           	ld b,(hl)
1298  8FAB 22 53 8C     	ld (India_2_SP),hl
1299  8FAE
1300  8FAE B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1301  8FAF DC D7 8F     	call c, Avanza_India_2_SP
1302  8FB2 CC D7 8F     	call z, Avanza_India_2_SP
1303  8FB5
1304  8FB5 FD 2D        	dec iyl
1305  8FB7 28 18        	jr z,2F
1306  8FB9
1307  8FB9
1308  8FB9              ; --------------------------------------------------------------------------------------------------------------
1309  8FB9              ;
1310  8FB9              ;	7/4/24
1311  8FB9
1312  8FB9              Trueque
1313  8FB9
1314  8FB9              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1315  8FB9              ;  			A contiene en nº de fila de (India_SP).
1316  8FB9              ;			HL contiene (India_2_SP).
1317  8FB9
1318  8FB9 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1319  8FBA E5           	push hl										; Preservo (India_2_SP).
1320  8FBB
1321  8FBB ED 5B 51 8C  	ld de,(India_SP)
1322  8FBF EB           	ex de,hl
1323  8FC0 70           	ld (hl),b
1324  8FC1 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1325  8FC2
1326  8FC2 CD 03 90     	call Intercambia_1_byte
1327  8FC5 CD 03 90     	call Intercambia_1_byte
1328  8FC8
1329  8FC8
1330  8FC8              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1331  8FC8              ; Recuperamos (India_2_SP) en HL.
1332  8FC8
1333  8FC8 2A 51 8C     	ld hl,(India_SP)
1334  8FCB 7E           	ld a,(hl)
1335  8FCC
1336  8FCC E1           	pop hl
1337  8FCD D1           	pop de
1338  8FCE
1339  8FCE              ; --------------------------------------------------------------------------------------------------------------
1340  8FCE
1341  8FCE CD D7 8F     	call Avanza_India_2_SP
1342  8FD1
1343  8FD1 14           2 inc d
1344  8FD2 15           	dec d
1345  8FD3 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1346  8FD4 18 D8        	jr 1B
1347  8FD6
1348  8FD6 C9           	ret
1349  8FD7
1350  8FD7              ; ----- ----- ----- ----- -----
1351  8FD7
1352  8FD7              Avanza_India_2_SP
1353  8FD7
1354  8FD7 0D           	dec c
1355  8FD8 28 0A        	jr z,Avanza_punteros_indios
1356  8FDA
1357  8FDA FD 2C        	inc iyl
1358  8FDC
1359  8FDC 2C           	inc l
1360  8FDD 2C           	inc l
1361  8FDE 2C           	inc l
1362  8FDF
1363  8FDF 46           	ld b,(hl)
1364  8FE0 22 53 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1365  8FE3
1366  8FE3 C9           	ret
1367  8FE4
1368  8FE4              ; ----- ----- ----- ----- -----
1369  8FE4
1370  8FE4              Avanza_punteros_indios
1371  8FE4
1372  8FE4 15           	dec d
1373  8FE5 28 15        	jr z,Prepara_salida
1374  8FE7
1375  8FE7 4A           	ld c,d
1376  8FE8
1377  8FE8 2A 51 8C     	ld hl,(India_SP)
1378  8FEB 2C           	inc l
1379  8FEC 2C           	inc l
1380  8FED 2C           	inc l
1381  8FEE 7E           	ld a,(hl)
1382  8FEF 22 51 8C     	ld (India_SP),hl
1383  8FF2
1384  8FF2 2C           	inc l
1385  8FF3 2C           	inc l
1386  8FF4 2C           	inc l
1387  8FF5 46           	ld b,(hl)
1388  8FF6 22 53 8C     	ld (India_2_SP),hl
1389  8FF9
1390  8FF9 FD 2C        	inc iyl
1391  8FFB
1392  8FFB C9           	ret
1393  8FFC
1394  8FFC              Prepara_salida
1395  8FFC
1396  8FFC 21 00 89     	ld hl,Tabla_de_pintado
1397  8FFF 22 51 8C     	ld (India_SP),hl
1398  9002 C9           	ret
1399  9003
1400  9003
1401  9003 2C           Intercambia_1_byte inc l
1402  9004 1C           	inc e
1403  9005 46           	ld b,(hl)
1404  9006 1A           	ld a,(de)
1405  9007 EB           	ex de,hl
1406  9008 70           	ld (hl),b
1407  9009 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1408  900A C9           	ret
1409  900B
1410  900B              ; -----------------------------------------------------------------------------------
1411  900B              ;
1412  900B              ;	20/01/24
1413  900B              ;
1414  900B              ;
1415  900B
1416  900B              Construye_movimientos_masticados_entidad
1417  900B
1418  900B 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1419  900E E5           	push hl
1420  900F
1421  900F CD B0 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados), +5.
1422  9012
1423  9012              ; Tenemos una posición de inicio aleatoria, ("$01 - $1f"). Necesitamos definir (Cuad_objeto) para [Inicia_Puntero_objeto].
1424  9012              ; A contiene la coordenada X de la posición de inicio de la entidad.
1425  9012
1426  9012 18 FE        	jr $
1427  9014
1428  9014 CD 94 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1429  9017              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1430  9017              ;	call Recompone_posicion_inicio
1431  9017
1432  9017 CD 70 99     1 call Draw
1433  901A CD 95 90     	call Guarda_movimiento_masticado
1434  901D
1435  901D 18 4A        	jr 2F
1436  901F
1437  901F              ;! Debuggggggg !!!!!!! -----------------------------------------------------------------------------------------------------------
1438  901F              ;! Necesitamos pintar cada movimiento para depurar errores en la entrada y salida de las entidades por la pantalla !!!!!!!!!!!!!!!
1439  901F              ;! -------------------------------------------------------------------------------------------------------------------------------
1440  901F              ;! -------------------------------------------------------------------------------------------------------------------------------
1441  901F
1442  901F F5           	push af
1443  9020 C5           	push bc
1444  9021 D5           	push de
1445  9022 E5           	push hl
1446  9023 FD E5        	push iy
1447  9025 DD E5        	push ix
1448  9027
1449  9027 AF           	xor a
1450  9028 D3 FE            out ($fe),a			; Paper 7, Ink 0, Border 0
1451  902A
1452  902A              ;	8BFE 00           CTRL_DESPLZ
1453  902A              ;	8BF1 00 00        Puntero_de_almacen_de_mov_masticados defw 0	($e0f4)
1454  902A              ;	$ddc0			  Almacén de movimientos masticados.
1455  902A              ;	8BEF 00 00        Puntero_de_impresion defw 0
1456  902A              ;	8BEB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
1457  902A              ;	8BEC 00  	      Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
1458  902A              ;	8BFA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
1459  902A              ;	8BFC 00 00		  Puntero_objeto defw 0 									; Donde están los datos para pintar el Sprite.
1460  902A
1461  902A              ; -------------------------------------------------------------------------
1462  902A
1463  902A              ; 	Pos_actual $43fe -
1464  902A              ;	Puntero_de_impresion $44be
1465  902A              ;	Puntero_objeto $8540
1466  902A              ;	Ctrl_Desplz $00
1467  902A
1468  902A              ;	En función de la Posicion_actual:
1469  902A
1470  902A              ;	Coordenada_X $1e
1471  902A              ;	Coordenada_y $07
1472  902A
1473  902A              ; -------------------------------------------------------------------------
1474  902A
1475  902A 2A 31 8C     	ld hl,(Album_de_pintado)
1476  902D 22 4F 8C     	ld (Scanlines_album_SP),hl
1477  9030
1478  9030 FD E5        	push iy
1479  9032 D1           	pop de
1480  9033
1481  9033 D5           	push de
1482  9034 CD E2 95     	call Genera_datos_de_impresion
1483  9037 D1           	pop de
1484  9038
1485  9038
1486  9038              ;							; Para ejecutar Rutinas_de_pintado necesitamos:
1487  9038              ;
1488  9038              ;							HL apuntando al álbum de líneas (Scanlines_album_SP)
1489  9038              ;							DE (Puntero objeto).
1490  9038
1491  9038
1492  9038 2A 31 8C     	ld hl,(Album_de_pintado)
1493  903B EB           	ex de,hl
1494  903C CD D6 96     	call Rutinas_de_pintado
1495  903F
1496  903F 3A DF 8B     	ld a,(Coordenada_X)
1497  9042 FE 1E        	cp 30
1498  9044 28 FE        	jr z,$
1499  9046 FE 1F        	cp 31
1500  9048 28 FE        	jr z,$
1501  904A FE 00        	cp 0
1502  904C 28 FE        	jr z,$
1503  904E FE 01        	cp 1
1504  9050 28 FE        	jr z,$
1505  9052
1506  9052              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
1507  9052 3E 38        	ld a,%00111000
1508  9054 CD A2 95     	call Cls
1509  9057
1510  9057              ; Borra album de pintado.
1511  9057
1512  9057 AF           	xor a
1513  9058 21 00 80     	ld hl,$8000
1514  905B 06 28        	ld b,40
1515  905D 77           23 ld (hl),a
1516  905E 2C           	inc l
1517  905F 10 FC        	djnz 23b
1518  9061
1519  9061              ; ----- ----- ----- ----- -----
1520  9061
1521  9061 DD E1        	pop ix
1522  9063 FD E1        	pop iy
1523  9065 E1           	pop hl
1524  9066 D1           	pop de
1525  9067 C1           	pop bc
1526  9068 F1           	pop af
1527  9069
1528  9069              ;! -------------------------------------------------------------------------------------------------------------------------------
1529  9069              ;! -------------------------------------------------------------------------------------------------------------------------------
1530  9069              ;! -------------------------------------------------------------------------------------------------------------------------------
1531  9069              ;! -------------------------------------------------------------------------------------------------------------------------------
1532  9069
1533  9069 CD D9 9F     2 call Movimiento
1534  906C
1535  906C 3A 55 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1536  906F CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1537  9071 28 A4        	jr z,1B
1538  9073
1539  9073              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1540  9073              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1541  9073
1542  9073 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1543  9074 22 E5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1544  9077
1545  9077              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1546  9077
1547  9077 CD 37 A1     	call Situa_en_contador_general_de_mov_masticados
1548  907A
1549  907A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1550  907A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1551  907A
1552  907A ED 4B E7 8B  	ld bc,(Contador_de_mov_masticados)
1553  907E
1554  907E 71           	ld (hl),c
1555  907F 23           	inc hl
1556  9080 70           	ld (hl),b
1557  9081
1558  9081 C9           	ret
1559  9082
1560  9082              ; -------------------------------------
1561  9082              ;
1562  9082              ;	02/01/25
1563  9082              ;
1564  9082              ;	(Cuad_objeto) contendrá "0" o "1" en función de la coordenada X de la posición de inicio.
1565  9082              ;	Necesitamos esta información para seleccionar el puntero_objeto adecuado: derecha o izquierda.
1566  9082              ;
1567  9082              ;	MODIFY: A,HL,(Cuad_objeto).
1568  9082              ;
1569  9082              ;	OUTPUT: A y (Cuad_objeto) contienen "0" o "1" en función del lado de la pantalla donde inicien su baile.
1570  9082
1571  9082              Cuad1_or_cuad2
1572  9082
1573  9082 2A FB 8B     	ld hl,(Posicion_inicio)
1574  9085 7D           	ld a,l
1575  9086 E6 1F        	and $1f
1576  9088 FE 10        	cp $10
1577  908A 38 04        	jr c,1F
1578  908C 3E 01        	ld a,1
1579  908E 18 01        	jr 2F
1580  9090
1581  9090 AF           1 xor a
1582  9091 32 FD 8B     2 ld (Cuad_objeto),a
1583  9094 C9           	ret
1584  9095
1585  9095              ; -----------------------------------------------------------------------------------
1586  9095              ;
1587  9095              ;	28/12/23
1588  9095              ;
1589  9095              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1590  9095              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1591  9095
1592  9095              Guarda_movimiento_masticado
1593  9095
1594  9095 ED 73 2D 8C  	ld (Stack),sp
1595  9099 ED 7B E5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1596  909D
1597  909D DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1598  909F FD E5            push iy 												; Pushea Puntero_objeto.
1599  90A1
1600  90A1 ED 7B 2D 8C      ld sp,(Stack)
1601  90A5
1602  90A5 2A E7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1603  90A8 23           	inc hl
1604  90A9 22 E7 8B     	ld (Contador_de_mov_masticados),hl
1605  90AC
1606  90AC CD B0 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1607  90AF              ;															; _ el (Contador_de_mov_masticados).
1608  90AF C9               ret
1609  90B0
1610  90B0              ; --------------------------------------------------------------------------------------------------------------
1611  90B0              ;
1612  90B0              ;	2/1/25
1613  90B0              ;
1614  90B0              ;	Incrementa el (Puntero_de_almacen_de_mov_masticados) en "+5".
1615  90B0
1616  90B0              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1617  90B0              ;
1618  90B0
1619  90B0              Actualiza_Puntero_de_almacen_de_mov_masticados
1620  90B0
1621  90B0 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1622  90B3
1623  90B3 23           	inc hl
1624  90B4 23           	inc hl
1625  90B5 23           	inc hl
1626  90B6 23           	inc hl
1627  90B7 23           	inc hl
1628  90B8
1629  90B8 22 E5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1630  90BB
1631  90BB C9           	ret
1632  90BC
1633  90BC              ; ------------------------------------------
1634  90BC              ;
1635  90BC              ;	23/11/24
1636  90BC              ;
1637  90BC              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1638  90BC
1639  90BC
1640  90BC              Obtenemos_puntero_de_impresion
1641  90BC
1642  90BC DD 6E 07     	ld l,(ix+7)
1643  90BF DD 66 08     	ld h,(ix+8)
1644  90C2
1645  90C2              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1646  90C2
1647  90C2 ED 73 2D 8C  	ld (Stack),sp
1648  90C6 F9           	ld sp,hl
1649  90C7
1650  90C7 AF           	xor a
1651  90C8 67           	ld h,a
1652  90C9 6C           	ld l,h															; ld hl,"0"
1653  90CA
1654  90CA D1           	pop de															; (Puntero_objeto) en DE.
1655  90CB C1           	pop bc
1656  90CC
1657  90CC              ; 	Almacena (Puntero_de_impresion) en caja.
1658  90CC
1659  90CC DD 71 05     	ld (ix+5),c
1660  90CF DD 70 06     	ld (ix+6),b
1661  90D2
1662  90D2 ED 43 E3 8B  	ld (Puntero_de_impresion),bc
1663  90D6
1664  90D6              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1665  90D6
1666  90D6 39           	add hl,sp
1667  90D7 DD 75 07     	ld (ix+7),l
1668  90DA DD 74 08     	ld (ix+8),h
1669  90DD
1670  90DD C1           	pop bc
1671  90DE
1672  90DE 79           	ld a,c
1673  90DF 80           	add b															; Comprueba si ya no hay datos en el almacén.
1674  90E0
1675  90E0 ED 7B 2D 8C  	ld sp,(Stack)
1676  90E4
1677  90E4 CC F9 94     	call z,Reinicia_entidad_maliciosa
1678  90E7
1679  90E7 C9           	ret
1680  90E8
1681  90E8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1682  90E8              ;
1683  90E8              ;	25/11/24
1684  90E8
1685  90E8              Cargamos_registros_con_explosion
1686  90E8
1687  90E8 DD 6E 07     	ld l,(ix+7)
1688  90EB DD 66 08     	ld h,(ix+8)
1689  90EE CD 8E 91     	call Extrae_address
1690  90F1 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1691  90F2
1692  90F2 DD 6E 05     	ld l,(ix+5)
1693  90F5 DD 66 06     	ld h,(ix+6)
1694  90F8
1695  90F8 E5           	push hl
1696  90F9 DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1697  90FB
1698  90FB C9           	ret
1699  90FC
1700  90FC
1701  90FC              Cargamos_registros_con_explosion_Amadeus
1702  90FC
1703  90FC 2A B5 89     	ld hl,(Pamm_Amadeus)
1704  90FF CD 8E 91     	call Extrae_address
1705  9102
1706  9102 5D           	ld e,l
1707  9103 54           	ld d,h
1708  9104
1709  9104 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1710  9108
1711  9108 C9           	ret
1712  9109
1713  9109              ; --------------------------------------------------------------------------------------------------------------
1714  9109              ;
1715  9109              ;	17/06/24
1716  9109              ;
1717  9109              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1718  9109              ;
1719  9109              ;	IX contiene el puntero de impresión.
1720  9109              ;	DE contiene (Puntero_objeto).
1721  9109
1722  9109
1723  9109              Cargamos_registros_con_mov_masticado_Amadeus
1724  9109
1725  9109 ED 73 2D 8C  	ld (Stack),sp
1726  910D ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1727  9111 D1           	pop de 															; DE contiene Puntero_objeto
1728  9112 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1729  9114 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1730  9118 ED 7B 2D 8C  	ld sp,(Stack)
1731  911C C9           	ret
1732  911D
1733  911D              ; ---------------------------------------------------------------------------------------------------------------------
1734  911D              ;
1735  911D              ;	18/6/24
1736  911D              ;
1737  911D              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1738  911D
1739  911D              Genera_datos_de_impresion_Amadeus
1740  911D
1741  911D 3A B2 89     	ld a,(Impacto_Amadeus)
1742  9120 A7           	and a
1743  9121 20 03        	jr nz,1F
1744  9123
1745  9123              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1746  9123              ; _apuntando a la correspondiente explosión.
1747  9123
1748  9123 CD 09 91     	call Cargamos_registros_con_mov_masticado_Amadeus
1749  9126
1750  9126 DD 7D        1 ld a,ixl
1751  9128 E6 1F        	and $1f
1752  912A 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1753  912D
1754  912D 2A 4F 8C     	ld hl,(Scanlines_album_SP)
1755  9130 E5           	push hl
1756  9131
1757  9131 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
1758  9134 22 4F 8C     	ld (Scanlines_album_SP),hl
1759  9137
1760  9137 CD E2 95     	call Genera_datos_de_impresion
1761  913A
1762  913A E1           	pop hl
1763  913B 22 4F 8C     	ld (Scanlines_album_SP),hl
1764  913E
1765  913E C9           	ret
1766  913F
1767  913F              ; ---------------------------------------------------------------------------------------------------------------------
1768  913F              ;
1769  913F              ;	13/03/24
1770  913F              ;
1771  913F              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1772  913F
1773  913F              Inicia_albumes_de_lineas
1774  913F
1775  913F 21 00 80     	ld hl,Scanlines_album
1776  9142 22 31 8C     	ld (Album_de_pintado),hl
1777  9145 22 4F 8C     	ld (Scanlines_album_SP),hl
1778  9148
1779  9148 21 1A 81     	ld hl,Scanlines_album_2
1780  914B 22 33 8C     	ld (Album_de_borrado),hl
1781  914E
1782  914E C9           	ret
1783  914F
1784  914F              Inicia_albumes_de_lineas_Amadeus
1785  914F
1786  914F 21 34 82     	ld hl,Amadeus_scanlines_album
1787  9152 22 35 8C     	ld (Album_de_pintado_Amadeus),hl
1788  9155 21 58 82     	ld hl,Amadeus_scanlines_album_2
1789  9158 22 37 8C     	ld (Album_de_borrado_Amadeus),hl
1790  915B
1791  915B C9           	ret
1792  915C
1793  915C              Inicia_albumes_de_disparos
1794  915C
1795  915C 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1796  915F 22 39 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1797  9162 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1798  9165 22 3B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1799  9168
1800  9168 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1801  916B 22 3D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1802  916E 22 41 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1803  9171
1804  9171 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1805  9174 22 3F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1806  9177
1807  9177 C9           	ret
1808  9178
1809  9178              ; ---------------------------------------------------------------------------------------------------------------------
1810  9178              ;
1811  9178              ; 8/1/23
1812  9178              ;
1813  9178              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1814  9178              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1815  9178              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1816  9178
1817  9178              ; Destruye HL y DE !!!!!
1818  9178
1819  9178              Inicia_punteros_de_cajas
1820  9178
1821  9178 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1822  917B CD 8E 91         call Extrae_address
1823  917E 22 1E 8C         ld (Puntero_store_caja),hl
1824  9181 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1825  9184 22 22 8C     	ld (Indice_restore_caja),hl
1826  9187 CD 8E 91     	call Extrae_address
1827  918A 22 20 8C     	ld (Puntero_restore_caja),hl
1828  918D C9               ret
1829  918E
1830  918E              ; *************************************************************************************************************************************************************
1831  918E
1832  918E              ;
1833  918E              ; 20/10/22
1834  918E              ;
1835  918E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1836  918E              ;
1837  918E              ; Destruye el puntero y DE !!!!!
1838  918E
1839  918E 5E           Extrae_address ld e,(hl)
1840  918F 23           	inc hl
1841  9190 56           	ld d,(hl)
1842  9191 2B           	dec hl
1843  9192 EB           	ex de,hl
1844  9193 C9           	ret
1845  9194
1846  9194              ; *************************************************************************************************************************************************************
1847  9194              ;
1848  9194              ;	2/1/25
1849  9194              ;
1850  9194              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1851  9194              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1852  9194              ;
1853  9194              ;   Destruye A,HL y BC !!!!!
1854  9194
1855  9194              ;	Futura variable (Mode):
1856  9194
1857  9194              ;	Mode_1 ..... El objeto aparece por la izquierda, Puntero_objeto se sitúa en la última columna de la derecha del Sprite. Imprime 1 columna.
1858  9194              ;	Mode_2 ..... El objeto aparece por la izquierda, Puntero_objeto se sitúa en la penúltima columna de la derecha del Sprite. Imprime 2 columnas.
1859  9194              ;	Mode_3 ..... El objeto aparece completo en pantalla, Imprime las 3 columnas.
1860  9194              ;	Mode_4 ..... El objeto desaparece por el lado derecho de la pantalla, Imprime las 2 primeras columnas del Sprite.
1861  9194              ;	Mode_5 ..... El objeto desaparece por el lado derecho de la pantalla, Imprime la 1ª columna del Sprite.
1862  9194
1863  9194              Inicia_Puntero_objeto
1864  9194
1865  9194 2A FB 8B     	ld hl,(Posicion_inicio)
1866  9197 7D           	ld a,l
1867  9198 E6 1F        	and $1f
1868  919A FE 10        	cp $10
1869  919C 38 02        	jr c,Inicia_puntero_objeto_der
1870  919E 18 2C        	jr Inicia_puntero_objeto_izq
1871  91A0
1872  91A0              Inicia_puntero_objeto_der
1873  91A0
1874  91A0              ; 	Arrancamos desde la parte izquierda de la pantalla.
1875  91A0              ; 	Iniciamos (Indice_Sprite_der).
1876  91A0
1877  91A0 2A F3 8B     	ld hl,(Indice_Sprite_der)
1878  91A3 22 F7 8B     	ld (Puntero_DESPLZ_der),hl
1879  91A6 CD 8E 91     	call Extrae_address
1880  91A9 22 F0 8B     	ld (Puntero_objeto),hl
1881  91AC
1882  91AC 2A F5 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1883  91AF 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
1884  91B2
1885  91B2
1886  91B2              ;	Antes de nada averiguaremos si el objeto está apareciendo por el lado izquierdo de la pantalla o si ya está visible completamente.
1887  91B2              ;	En los cuadrantes 1 y 3 de pantalla, la coordenada X del (Puntero_de_impresión) será la coordenada X de la (Posicion_inicio)-2.
1888  91B2              ;	Si este valor queda por debajo de "0", el objeto estará apareciendo, ($ff) sólo se imprimirán las dos últimas columnas del Sprite, (Mode_2).
1889  91B2              ;	($fe) sólo se imprimirá la última columna del Sprite, (Mode_1)
1890  91B2
1891  91B2 FE 02        	cp 2
1892  91B4 D0           	ret nc												; Mode_3
1893  91B5
1894  91B5              ;	Apareciendo por la parte izquierda de la pantalla:
1895  91B5
1896  91B5 21 FE 8B     	ld hl,Columnas										; (Columnas) de momento indica Mode. Inicialmente (Columnas)="3".
1897  91B8 35           	dec (hl)
1898  91B9 3D           	dec a
1899  91BA 28 01        	jr z,Modifica_puntero_objeto_der
1900  91BC 35           	dec (hl)
1901  91BD
1902  91BD              Modifica_puntero_objeto_der
1903  91BD
1904  91BD 3A FE 8B     	ld a,(Columnas)
1905  91C0
1906  91C0 2A F0 8B     	ld hl,(Puntero_objeto)
1907  91C3 2C           	inc l
1908  91C4 3D           	dec a
1909  91C5 20 01        	jr nz,1F
1910  91C7 2C           	inc l
1911  91C8
1912  91C8 22 F0 8B     1 ld (Puntero_objeto),hl
1913  91CB
1914  91CB C9           	ret
1915  91CC
1916  91CC              ; Arrancamos desde la parte derecha de la pantalla.
1917  91CC              ; Iniciamos (Indice_Sprite_izq).
1918  91CC
1919  91CC              Inicia_puntero_objeto_izq
1920  91CC
1921  91CC 2A F5 8B     	ld hl,(Indice_Sprite_izq)
1922  91CF 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
1923  91D2 CD 8E 91     	call Extrae_address
1924  91D5 22 F0 8B     	ld (Puntero_objeto),hl
1925  91D8
1926  91D8 2A F3 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1927  91DB 22 F7 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1928  91DE
1929  91DE C9           	ret
1930  91DF
1931  91DF              ; **************************************************************************************************
1932  91DF              ;
1933  91DF              ;	27/11/24
1934  91DF              ;
1935  91DF              ;	INPUT: IX contiene (Puntero_store_caja).
1936  91DF              ;
1937  91DF              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1938  91DF
1939  91DF              Salta_caja_de_entidades_vacia
1940  91DF
1941  91DF DD 7E 00     	ld a,(ix+0)
1942  91E2 A7           	and a
1943  91E3 C0           	ret nz
1944  91E4
1945  91E4 CD EE 91     	call Incrementa_punteros_de_cajas
1946  91E7 DD 2A 1E 8C  	ld ix,(Puntero_store_caja)
1947  91EB 18 F2        	jr Salta_caja_de_entidades_vacia
1948  91ED
1949  91ED C9           	ret
1950  91EE
1951  91EE              ; **************************************************************************************************
1952  91EE              ;
1953  91EE              ;	08/05/23
1954  91EE              ;
1955  91EE              ;	Incrementamos los dos punteros de entidades. (+1).
1956  91EE
1957  91EE              Incrementa_punteros_de_cajas
1958  91EE
1959  91EE 2A 20 8C     	ld hl,(Puntero_restore_caja)
1960  91F1 22 1E 8C     	ld (Puntero_store_caja),hl
1961  91F4 2A 22 8C     	ld hl,(Indice_restore_caja)
1962  91F7 23           	inc hl
1963  91F8 23           	inc hl
1964  91F9 22 22 8C     	ld (Indice_restore_caja),hl
1965  91FC CD 8E 91         call Extrae_address
1966  91FF 22 20 8C         ld (Puntero_restore_caja),hl
1967  9202 C9               ret
1968  9203
1969  9203              ; -----------------------------------------------------------
1970  9203
1971  9203              ; Teclado.
1972  9203
1973  9203 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1974  9205 DB FE        	in a,($fe)
1975  9207 E6 01        	and $01
1976  9209 28 02        	jr z,1f
1977  920B 18 F6        	jr Pulsa_ENTER
1978  920D C9           1 ret
1979  920E
1980  920E              ; **************************************************************************************************
1981  920E              ;
1982  920E              ; Temporización.
1983  920E
1984  920E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1985  920E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1986  920E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1987  920E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1988  920E
1989  920E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1990  920E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1991  920E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1992  920E
1993  920E              ; A partir de $4f61 no hace falta DELAY.
1994  920E
1995  920E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1996  920E
1997  920E              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1998  920E              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1999  920E              ;	LD A,B
2000  920E              ;	AND A
2001  920E              ;	JR NZ,wait
2002  920E              ;	RET
2003  920E
2004  920E              ; ---------------------------------------------------------------------------------------------------------------
2005  920E              ;
2006  920E              ;	13/07/24
2007  920E              ;
2008  920E
2009  920E              Inicia_Shield
2010  920E
2011  920E 21 78 8C     	ld hl,Datos_Shield
2012  9211 22 7C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2013  9214
2014  9214 7E           	ld a,(hl)
2015  9215 32 7F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2016  9218
2017  9218 3E 01        	ld a,1
2018  921A 32 80 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2019  921D
2020  921D C9           	ret
2021  921E
2022  921E              ; ---------- ---------- ---------- ---------- ----------
2023  921E              ;
2024  921E              ;	30/11/24
2025  921E              ;
2026  921E              ;	Limpia la caja de entidades de una entidad eliminada.
2027  921E              ;
2028  921E              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
2029  921E              ;	MODIFY: A,BC,DE y HL.
2030  921E
2031  921E              Limpia_caja_de_entidades
2032  921E
2033  921E DD E5        	push ix
2034  9220 E1           	pop hl
2035  9221 AF           	xor a
2036  9222 77           	ld (hl),a
2037  9223 5D           	ld e,l
2038  9224 54           	ld d,h
2039  9225 1C           	inc e
2040  9226 01 0B 00     	ld bc,11
2041  9229 ED B0        	ldir
2042  922B C9           	ret
2043  922C
2044  922C              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2045  922C              ;
2046  922C              ;	4/6/24
2047  922C              ;
2048  922C              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2049  922C              ;
2050  922C              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2051  922C              ;
2052  922C
2053  922C              Actualiza_pantalla
2054  922C
2055  922C 3E 02        	ld a,2
2056  922E D3 FE        	out ($fe),a
2057  9230
2058  9230 3A 55 8C     	ld a,(Ctrl_3)
2059  9233 CB 57        	bit 2,a
2060  9235 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2061  9237
2062  9237              Borrando_entidades
2063  9237
2064  9237 2A 4F 8C     	ld hl,(Scanlines_album_SP)
2065  923A CD 8E 91     	call Extrae_address
2066  923D 24           	inc h
2067  923E 25           	dec h
2068  923F 28 05        	jr z,Pintando_entidades
2069  9241 CD D6 96     	call Rutinas_de_pintado												; Borra.
2070  9244 18 F1        	jr Borrando_entidades
2071  9246
2072  9246              Pintando_entidades
2073  9246
2074  9246 2A 51 8C     	ld hl,(India_SP)
2075  9249 2C           	inc l
2076  924A CD 8E 91     	call Extrae_address
2077  924D 24           	inc h
2078  924E 25           	dec h
2079  924F 28 0E        	jr z,Ejecuta_escudo
2080  9251 1C           	inc e
2081  9252 1C           	inc e
2082  9253 ED 53 51 8C  	ld (India_SP),de
2083  9257 CD 8E 91     	call Extrae_address
2084  925A CD D6 96     	call Rutinas_de_pintado
2085  925D 18 E7        	jr Pintando_entidades
2086  925F
2087  925F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2088  925F
2089  925F              Ejecuta_escudo
2090  925F
2091  925F 3A 7E 8C     	ld a,(Shield)
2092  9262 A7           	and a
2093  9263 20 2F        	jr nz,Aplica_Shield
2094  9265
2095  9265              Borrando_Amadeus
2096  9265
2097  9265 21 55 8C     	ld hl,Ctrl_3
2098  9268 CB 6E        	bit 5,(hl)
2099  926A 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2100  926C
2101  926C 2A 37 8C     	ld hl,(Album_de_borrado_Amadeus)
2102  926F CD 8E 91     	call Extrae_address
2103  9272 24           	inc h
2104  9273 25           	dec h
2105  9274 28 03        	jr z,Pintando_Amadeus
2106  9276 CD D6 96     	call Rutinas_de_pintado
2107  9279
2108  9279              Pintando_Amadeus
2109  9279
2110  9279 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
2111  927C CD 8E 91     	call Extrae_address
2112  927F 24           	inc h
2113  9280 25           	dec h
2114  9281 28 03        	jr z,1F
2115  9283 CD D6 96     	call Rutinas_de_pintado
2116  9286
2117  9286              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2118  9286
2119  9286 21 55 8C     1 ld hl,Ctrl_3
2120  9289 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2121  928B CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2122  928D CB AE        	res 5,(hl)
2123  928F
2124  928F 3E 01        	ld a,1												; Borde azul.
2125  9291 D3 FE        	out ($fe),a
2126  9293
2127  9293 C9           	ret
2128  9294
2129  9294              Aplica_Shield
2130  9294
2131  9294              ;	Bit 1 "1" (Shield_3) Sólo borra.
2132  9294              ;		  "0"     ""     Borra/Pinta.
2133  9294              ;	Bit 2    ""  RET.	 No borra, no pinta.
2134  9294
2135  9294 21 80 8C     	ld hl,Shield_3
2136  9297
2137  9297 CB 5E        	bit 3,(hl)
2138  9299 20 DE        	jr nz,Pintando_Amadeus
2139  929B
2140  929B CB 56        	bit 2,(hl)
2141  929D 20 E7        	jr nz,1B
2142  929F
2143  929F CB 4E        	bit 1,(hl)
2144  92A1 C4 A8 92     	call nz,Borra_Amadeus_shield
2145  92A4
2146  92A4 28 BF        	jr z,Borrando_Amadeus
2147  92A6 18 DE        	jr 1B
2148  92A8
2149  92A8              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2150  92A8
2151  92A8              Borra_Amadeus_shield
2152  92A8
2153  92A8 3A 55 8C     	ld a,(Ctrl_3)
2154  92AB CB 6F        	bit 5,a
2155  92AD 28 08        	jr z,1F
2156  92AF
2157  92AF 2A 37 8C     	ld hl,(Album_de_borrado_Amadeus)
2158  92B2 CD 8E 91     	call Extrae_address
2159  92B5 18 06        	jr 2F
2160  92B7
2161  92B7 2A 35 8C     1 ld hl,(Album_de_pintado_Amadeus)
2162  92BA CD 8E 91     	call Extrae_address
2163  92BD
2164  92BD CD D6 96     2 call Rutinas_de_pintado
2165  92C0
2166  92C0 AF           	xor a
2167  92C1 3C           	inc a											; Asegura NZ en la salida de la rutina.
2168  92C2
2169  92C2 C9           	ret
2170  92C3
2171  92C3              Pinta_Amadeus_shield
2172  92C3
2173  92C3 2A 35 8C     	ld hl,(Album_de_pintado_Amadeus)
2174  92C6 CD 8E 91     	call Extrae_address
2175  92C9 CD D6 96     	call Rutinas_de_pintado
2176  92CC
2177  92CC AF           	xor a
2178  92CD 3C           	inc a											; Asegura NZ en la salida de la rutina.
2179  92CE
2180  92CE C9           	ret
2181  92CF
2182  92CF              Borra_Pinta_Amadeus_shield
2183  92CF
2184  92CF CD A8 92     	call Borra_Amadeus_shield
2185  92D2 CD C3 92     	call Pinta_Amadeus_shield
2186  92D5 C9           	ret
2187  92D6
2188  92D6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2189  92D6              ;
2190  92D6              ;	19/6/24
2191  92D6              ;
2192  92D6
2193  92D6              Teclado
2194  92D6
2195  92D6              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2196  92D6
2197  92D6 3E F7        	ld a,$f7												; "5" para disparar.
2198  92D8 DB FE        	in a,($fe)
2199  92DA E6 10        	and $10
2200  92DC
2201  92DC CC D4 A4     	call z,Genera_disparo_Amadeus
2202  92DF
2203  92DF 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2204  92E1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2205  92E3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2206  92E5 CC A6 9F         call z,Amadeus_a_izquierda
2207  92E8
2208  92E8 3E F7        	ld a,$f7
2209  92EA DB FE        	in a,($fe)
2210  92EC E6 01        	and $01
2211  92EE C8           	ret z
2212  92EF
2213  92EF 3E F7        	ld a,$f7
2214  92F1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2215  92F3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2216  92F5 CC BE 9F     	call z,Amadeus_a_derecha
2217  92F8
2218  92F8 C9           	ret
2219  92F9
2220  92F9              ; ------------------------------------------------------------------------------------------------------------------------
2221  92F9              ;
2222  92F9              ;	06/07/24
2223  92F9              ;
2224  92F9
2225  92F9              Genera_explosion
2226  92F9
2227  92F9 21 67 8C     	ld hl,Clock_explosion
2228  92FC 35           	dec (hl)
2229  92FD 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2230  92FF
2231  92FF              Borra_entidad_colisionada
2232  92FF
2233  92FF CD 6F 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2234  9302
2235  9302 DD E5        	push ix
2236  9304 CD E8 90     	call Cargamos_registros_con_explosion
2237  9307 CD E2 95     	call Genera_datos_de_impresion
2238  930A DD E1        	pop ix
2239  930C
2240  930C AF           	xor a
2241  930D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2242  930E
2243  930E C9           	ret
2244  930F
2245  930F              Siguiente_frame_explosion
2246  930F
2247  930F 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2248  9311
2249  9311              ; Avanza Frame de explosión.
2250  9311
2251  9311 DD 6E 07     	ld l,(ix+7)
2252  9314 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2253  9317
2254  9317 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2255  931A
2256  931A 79           	ld a,c
2257  931B 95           	sub l
2258  931C 20 41        	jr nz,1F
2259  931E
2260  931E
2261  931E              ; Fín de la entidad !!!!!!!!!!!!!
2262  931E              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2263  931E
2264  931E              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2265  931E              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2266  931E              ; Entidades_en_curso db 0								; Entidades en pantalla.
2267  931E
2268  931E              ; La entidad eliminada, es la última del nivel ?
2269  931E
2270  931E 3A 26 8C     	ld a,(Numero_de_entidades)
2271  9321 A7           	and a
2272  9322 28 30        	jr z,2F
2273  9324
2274  9324              ; Decrementa (Numero_de_entidades)
2275  9324
2276  9324 3D           	dec a
2277  9325 32 26 8C     	ld (Numero_de_entidades),a
2278  9328 21 28 8C     	ld hl,Entidades_en_curso
2279  932B 35           	dec (hl)
2280  932C
2281  932C              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2282  932C              ; IX apunta al 1er .db de la entidad eliminada.
2283  932C
2284  932C 2A 24 8C     	ld hl,(Puntero_indice_master)
2285  932F CD 8E 91     	call Extrae_address
2286  9332
2287  9332 DD E5        	push ix
2288  9334 D1           	pop de
2289  9335
2290  9335 01 0C 00     	ld bc,12
2291  9338 ED B0        	ldir
2292  933A
2293  933A              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2294  933A
2295  933A CD BC 90     	call Obtenemos_puntero_de_impresion
2296  933D
2297  933D DD 6E 05     	ld l,(ix+5)
2298  9340 2C           	inc l
2299  9341 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2300  9344
2301  9344 CD B6 95     	call Genera_coordenadas
2302  9347
2303  9347 ED 4B DF 8B  	ld bc,(Coordenada_X)
2304  934B
2305  934B DD 71 01     	ld (ix+1),c
2306  934E DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2307  9351
2308  9351 AF           	xor a
2309  9352 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2310  9353
2311  9353 C9           	ret
2312  9354
2313  9354              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2314  9354
2315  9354 21 27 8C     2 ld hl,Numero_parcial_de_entidades
2316  9357 35           	dec (hl)
2317  9358 23           	inc hl
2318  9359 35           	dec (hl)
2319  935A
2320  935A CD 1E 92     	call Limpia_caja_de_entidades
2321  935D 18 A0        	jr Borra_entidad_colisionada
2322  935F
2323  935F 23           1 inc hl
2324  9360 23           	inc hl
2325  9361
2326  9361 DD 75 07     	ld (ix+7),l
2327  9364 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2328  9367
2329  9367 18 96        	jr Borra_entidad_colisionada
2330  9369
2331  9369              ; ----- ----- ----- ----- -----
2332  9369
2333  9369              Genera_explosion_Amadeus
2334  9369
2335  9369 21 68 8C     	ld hl,Clock_explosion_Amadeus
2336  936C 35           	dec (hl)
2337  936D 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2338  936F
2339  936F              Borra_Amadeus_impactado
2340  936F
2341  936F CD D9 8E     	call Change_Amadeus
2342  9372 CD FC 90     	call Cargamos_registros_con_explosion_Amadeus
2343  9375 CD 1D 91     	call Genera_datos_de_impresion_Amadeus
2344  9378
2345  9378 21 55 8C     	ld hl,Ctrl_3
2346  937B CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2347  937D
2348  937D AF           	xor a
2349  937E 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2350  937F
2351  937F C9           	ret
2352  9380
2353  9380              Siguiente_frame_explosion_Amadeus
2354  9380
2355  9380 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2356  9382
2357  9382              ; Avanza Frame de explosión.
2358  9382
2359  9382 2A B5 89     	ld hl,(Pamm_Amadeus)
2360  9385 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2361  9388
2362  9388 79           	ld a,c
2363  9389 95           	sub l
2364  938A 20 0B        	jr nz,1F
2365  938C
2366  938C              ; Fín de Amadeus !!!!!!!!!!!!!
2367  938C              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2368  938C
2369  938C AF           	xor a
2370  938D 32 B2 89     	ld (Impacto_Amadeus),a
2371  9390 21 55 8C     	ld hl,Ctrl_3
2372  9393 CB F6        	set 6,(hl)
2373  9395
2374  9395 18 D8        	jr Borra_Amadeus_impactado
2375  9397
2376  9397 23           1 inc hl
2377  9398 23           	inc hl
2378  9399 22 B5 89     	ld (Pamm_Amadeus),hl
2379  939C 18 D1        	jr Borra_Amadeus_impactado
2380  939E
2381  939E              ; ---------------------------------------------------------------
2382  939E
2383  939E              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 939E              ; ******************************************************************************************************************************************************************************************
   2+ 939E              ;
   3+ 939E              ;   21/04/24
   4+ 939E              ;
   5+ 939E              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 939E              ;   (XOR) bit a bit.
   7+ 939E              ;
   8+ 939E              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 939E
  10+ 939E              Derivando_RND
  11+ 939E
  12+ 939E 21 F6 88         ld hl,Numeros_aleatorios
  13+ 93A1
  14+ 93A1 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 93A3 C5               push bc
  16+ 93A4              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 93A4 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 93A7              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 93A7
  20+ 93A7 A7           6 and a                                 ; Carry a "0".
  21+ 93A8 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 93AA 30 02            jr nc,1F
  23+ 93AC
  24+ 93AC CB C1            set 0,c
  25+ 93AE
  26+ 93AE 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 93AF E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 93B1 5F               ld e,a
  29+ 93B2
  30+ 93B2 7A               ld a,d
  31+ 93B3 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 93B5 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 93B7
  34+ 93B7 CB 3F            srl a
  35+ 93B9
  36+ 93B9 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 93BA
  38+ 93BA 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 93BB 28 04            jr z,4F
  40+ 93BD
  41+ 93BD CB FF            set 7,a
  42+ 93BF 18 02            jr 5F
  43+ 93C1
  44+ 93C1 CB BF        4 res 7,a
  45+ 93C3
  46+ 93C3 CB 21        5 sla c
  47+ 93C5 10 E0            djnz 6B
  48+ 93C7
  49+ 93C7 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 93C8
  51+ 93C8 77               ld (hl),a
  52+ 93C9 23               inc hl
  53+ 93CA C1               pop bc
  54+ 93CB 10 D4            djnz 3B
  55+ 93CD
  56+ 93CD C9               ret
  57+ 93CE
  58+ 93CE
  59+ 93CE
# file closed: RND_Derivando.asm
2384  93CE              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 93CE              ;---------------------------------------------------------------------------------------------------------------
   2+ 93CE              ;
   3+ 93CE              ;   13/11/24
   4+ 93CE
   5+ 93CE              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 93CE
   7+ 93CE              Genera_movimientos_masticados_del_nivel
   8+ 93CE
   9+ 93CE              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 93CE
  11+ 93CE              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 93CE              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 93CE              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 93CE
  15+ 93CE 2D           	dec l
  16+ 93CF 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 93D0 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 93D1 4E           	ld c,(hl)
  19+ 93D2
  20+ 93D2 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 93D3 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 93D4
  23+ 93D4              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 93D4
  25+ 93D4 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 93D5
  27+ 93D5 CD 13 94     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 93D8
  29+ 93D8              ;	Caja Master inicializada ???
  30+ 93D8
  31+ 93D8 7E           	ld a,(hl)
  32+ 93D9 A7           	and a
  33+ 93DA 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 93DC
  35+ 93DC              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 93DC
  37+ 93DC C1           	pop bc
  38+ 93DD 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 93DE C5           	push bc
  40+ 93DF
  41+ 93DF CD B3 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 93E2 CD 47 95     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 93E5
  44+ 93E5 3A DE 8B     	ld a,(Tipo)
  45+ 93E8 CD 23 94     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 93EB
  47+ 93EB              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 93EB
  49+ 93EB              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 93EB              ;	ld a,(hl)
  51+ 93EB              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 93EB              ;	and a
  53+ 93EB              ;	jr nz,2F													; No queremos que la entidad se inicie en la columna "0", en ese caso será "1".
  54+ 93EB
  55+ 93EB              ;	inc a														; (Posicion_inicio) $4001.
  56+ 93EB
  57+ 93EB              ;2 ld hl,Posicion_inicio
  58+ 93EB              ;	ld (hl),a
  59+ 93EB
  60+ 93EB              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  61+ 93EB              ;	Generamos "Movimientos masticados" de la entidad.
  62+ 93EB
  63+ 93EB CD 0B 90     	call Construye_movimientos_masticados_entidad
  64+ 93EE
  65+ 93EE 2A 24 8C     	ld hl,(Puntero_indice_master)
  66+ 93F1 CD 8E 91     	call Extrae_address
  67+ 93F4
  68+ 93F4 5D           	ld e,l
  69+ 93F5 54           	ld d,h
  70+ 93F6
  71+ 93F6 CD 71 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  72+ 93F9
  73+ 93F9              Movimientos_masticados_construidos
  74+ 93F9
  75+ 93F9 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  76+ 93FA
  77+ 93FA E1           	pop hl														; Pop (Datos_de_nivel).
  78+ 93FB 2C           	inc l														; Datos_de_nivel +1 en HL.
  79+ 93FC
  80+ 93FC 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  81+ 93FD 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  82+ 93FF
  83+ 93FF C9           	ret
  84+ 9400
  85+ 9400              ;---------------------------------------------------------------------------------------------------------------
  86+ 9400              ;
  87+ 9400              ;   9/11/24
  88+ 9400              ;
  89+ 9400              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  90+ 9400              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  91+ 9400              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  92+ 9400              ;	_ de la 1ª entidad del Nivel.
  93+ 9400              ;
  94+ 9400              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  95+ 9400
  96+ 9400              ;	MODIFICA: HL,DE y A.
  97+ 9400              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  98+ 9400
  99+ 9400              Inicializa_1er_Nivel
 100+ 9400
 101+ 9400              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 102+ 9400
 103+ 9400 21 C7 8B     	ld hl,Indice_de_niveles
 104+ 9403 CD 8E 91     	call Extrae_address
 105+ 9406 ED 53 74 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 106+ 940A
 107+ 940A 7E           	ld a,(hl)
 108+ 940B 32 26 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 109+ 940E
 110+ 940E 2C           	inc l
 111+ 940F 22 76 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 112+ 9412
 113+ 9412 C9           	ret
 114+ 9413
 115+ 9413              ; ----------------------
 116+ 9413              ;
 117+ 9413              ;	13/11/24
 118+ 9413              ;
 119+ 9413
 120+ 9413              Situa_en_Caja_Master
 121+ 9413
 122+ 9413 CD 32 95         call Calcula_salto_en_BC
 123+ 9416 21 58 89         ld hl,Indice_de_cajas_master
 124+ 9419 A7               and a
 125+ 941A ED 4A            adc hl,bc
 126+ 941C 22 24 8C       	ld (Puntero_indice_master),hl
 127+ 941F CD 8E 91     	call Extrae_address
 128+ 9422 C9           	ret
 129+ 9423
 130+ 9423              ; ----------------------
 131+ 9423
 132+ 9423              ; Fija_velocidades ld de,Perfiles_de_velocidad
 133+ 9423              ; 	ld bc,4
 134+ 9423              ; 	ldir
 135+ 9423              ; 	ret
 136+ 9423
 137+ 9423 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 138+ 9424 CD 32 95         call Calcula_salto_en_BC
 139+ 9427 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 140+ 942A A7               and a
 141+ 942B ED 4A            adc hl,bc
 142+ 942D CD 8E 91         call Extrae_address
 143+ 9430 22 0F 8C         ld (Puntero_indice_mov),hl
 144+ 9433 C9               ret
 145+ 9434
 146+ 9434              ;---------------------------------------------------------------------------------------------------------------
 147+ 9434              ;
 148+ 9434              ;   13/11/24
 149+ 9434              ;
 150+ 9434              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 151+ 9434
 152+ 9434
 153+ 9434              Prepara_Cajas_de_Entidades
 154+ 9434
 155+ 9434              ; Preparamos los punteros de las cajas de entidades:
 156+ 9434
 157+ 9434 CD 78 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 158+ 9437              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 159+ 9437 CD 7A 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 160+ 943A
 161+ 943A 2A 76 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 162+ 943D
 163+ 943D              ; En este punto:
 164+ 943D              ;
 165+ 943D              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 166+ 943D              ; B contiene (Numero_parcial_de_entidades).
 167+ 943D
 168+ 943D C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 169+ 943E
 170+ 943E 7E           	ld a,(hl)
 171+ 943F
 172+ 943F CD 13 94     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 173+ 9442
 174+ 9442 ED 5B 1E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 175+ 9446
 176+ 9446 D5           	push de
 177+ 9447 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 178+ 9449
 179+ 9449 01 0C 00     	ld bc,12
 180+ 944C ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 181+ 944E              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 182+ 944E
 183+ 944E              ; En este punto debemos generar coordenadas y puntero de impresión.:
 184+ 944E              ;
 185+ 944E              ;
 186+ 944E              ; ------------------------------------------------------ IX
 187+ 944E              ; ------------------------------------------------------ IX
 188+ 944E              ; ------------------------------------------------------ IX
 189+ 944E              ; ------------------------------------------------------ IX
 190+ 944E
 191+ 944E DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 192+ 9450
 193+ 9450 CD BC 90     	call Obtenemos_puntero_de_impresion
 194+ 9453
 195+ 9453 DD 6E 05     	ld l,(ix+5)
 196+ 9456 2C           	inc l
 197+ 9457 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 198+ 945A
 199+ 945A D5           	push de														; Push (Puntero_objeto).
 200+ 945B E5           	push hl														; Push (Puntero_de_impresion).
 201+ 945C
 202+ 945C CD B6 95     	call Genera_coordenadas
 203+ 945F
 204+ 945F ED 4B DF 8B  	ld bc,(Coordenada_X)
 205+ 9463
 206+ 9463 DD 71 01     	ld (ix+1),c
 207+ 9466 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 208+ 9469
 209+ 9469 CD 6F 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 210+ 946C
 211+ 946C DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 212+ 946E D1           	pop de														; Pop (Puntero_objeto) en DE.
 213+ 946F
 214+ 946F CD E2 95     	call Genera_datos_de_impresion
 215+ 9472
 216+ 9472 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 217+ 9474
 218+ 9474              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 219+ 9474
 220+ 9474 CD EB 94     	call Decrementa_Contador_de_mov_masticados
 221+ 9477 CD C8 94     	call Limpiamos_bandeja_DRAW
 222+ 947A CD EE 91     	call Incrementa_punteros_de_cajas
 223+ 947D
 224+ 947D              ; Siguiente entidad del Nivel.
 225+ 947D
 226+ 947D 2A 76 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 227+ 9480 23           	inc hl 														; _ entidad del Nivel.
 228+ 9481
 229+ 9481 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 230+ 9482
 231+ 9482 10 B9        	djnz 1B
 232+ 9484
 233+ 9484 C9           	ret
 234+ 9485
 235+ 9485              ; -------------------------------------------------------------------------------------------------------------------
 236+ 9485              ;
 237+ 9485              ;	27/5/24
 238+ 9485              ;
 239+ 9485              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 240+ 9485              ;
 241+ 9485
 242+ 9485              ; 	Cargamos la definición de Amadeus en DRAW.
 243+ 9485              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 244+ 9485
 245+ 9485 21 22 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 246+ 9488 CD 47 95     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 247+ 948B
 248+ 948B
 249+ 948B              Construye_movimientos_masticados_Amadeus
 250+ 948B
 251+ 948B 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 252+ 948E CD B0 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 253+ 9491              ;															; _ el (Contador_de_mov_masticados).
 254+ 9491 CD 94 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 255+ 9494              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 256+ 9494
 257+ 9494              ; Generamos movimientos masticados de Amadeus.
 258+ 9494
 259+ 9494 06 79        	ld b,121												; $0079, 121d.
 260+ 9496
 261+ 9496 C5           1 push bc
 262+ 9497 CD 70 99     	call Draw
 263+ 949A CD 95 90     	call Guarda_movimiento_masticado
 264+ 949D
 265+ 949D CD DA 9C     	call Mov_right
 266+ 94A0 CD DA 9C     	call Mov_right											; Amadeus se mueve x2 pixel.
 267+ 94A3
 268+ 94A3 C1           	pop bc
 269+ 94A4 10 F0        	djnz 1B
 270+ 94A6
 271+ 94A6              ; Todos los movimientos masticados de Amadeus se han creado.
 272+ 94A6
 273+ 94A6              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 274+ 94A6              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 275+ 94A6
 276+ 94A6 2A E5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 277+ 94A9 01 08 00     	ld bc,8
 278+ 94AC A7           	and a
 279+ 94AD ED 42        	sbc hl,bc
 280+ 94AF 22 E5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 281+ 94B2
 282+ 94B2 C9           	ret
 283+ 94B3
 284+ 94B3              ; ---------------------------------------------------------------------
 285+ 94B3              ;
 286+ 94B3              ;	10/02/24
 287+ 94B3              ;
 288+ 94B3              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 289+ 94B3              ;
 290+ 94B3              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 291+ 94B3
 292+ 94B3              Definicion_segun_tipo
 293+ 94B3
 294+ 94B3 CD 32 95     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 295+ 94B6 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 296+ 94B9 CD 3D 95     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 297+ 94BC C9           	ret
 298+ 94BD
 299+ 94BD              ; ---------------------------------------------------------------------
 300+ 94BD              ;
 301+ 94BD              ;	6/7/24
 302+ 94BD
 303+ 94BD
 304+ 94BD              Store_Restore_cajas
 305+ 94BD
 306+ 94BD ED 5B 1E 8C  	ld de,(Puntero_store_caja)
 307+ 94C1 CD 71 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 308+ 94C4 CD EE 91     	call Incrementa_punteros_de_cajas
 309+ 94C7 C9           	ret
 310+ 94C8
 311+ 94C8              ; ---------------------------------------------------------------------
 312+ 94C8              ;
 313+ 94C8              ;	23/6/24
 314+ 94C8              ;
 315+ 94C8              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 316+ 94C8              ;
 317+ 94C8              ;	MODIFY: HL
 318+ 94C8
 319+ 94C8              Limpiamos_bandeja_DRAW
 320+ 94C8
 321+ 94C8 ED 73 2D 8C  	ld (Stack),sp
 322+ 94CC 31 03 8C     	ld sp,Vel_left
 323+ 94CF
 324+ 94CF AF           	xor a
 325+ 94D0 67           	ld h,a
 326+ 94D1 6F           	ld l,a
 327+ 94D2
 328+ 94D2 E5           	push hl
 329+ 94D3 E5           	push hl
 330+ 94D4 E5           	push hl
 331+ 94D5 E5           	push hl
 332+ 94D6 E5           	push hl
 333+ 94D7 E5           	push hl
 334+ 94D8 E5           	push hl
 335+ 94D9 E5           	push hl
 336+ 94DA E5           	push hl
 337+ 94DB E5           	push hl
 338+ 94DC E5           	push hl
 339+ 94DD E5           	push hl
 340+ 94DE E5           	push hl
 341+ 94DF E5           	push hl
 342+ 94E0 E5           	push hl
 343+ 94E1 E5           	push hl
 344+ 94E2 E5           	push hl
 345+ 94E3 E5           	push hl
 346+ 94E4
 347+ 94E4 33           	inc sp
 348+ 94E5
 349+ 94E5 E5           	push hl
 350+ 94E6 ED 7B 2D 8C  	ld sp,(Stack)
 351+ 94EA
 352+ 94EA C9           	ret
 353+ 94EB
 354+ 94EB              ; ---------------------------------------------------------------------
 355+ 94EB              ;
 356+ 94EB              ;	23/11/24
 357+ 94EB              ;
 358+ 94EB              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 359+ 94EB
 360+ 94EB              Decrementa_Contador_de_mov_masticados
 361+ 94EB
 362+ 94EB DD 6E 09     	ld l,(ix+9)
 363+ 94EE DD 66 0A     	ld h,(ix+10)
 364+ 94F1
 365+ 94F1 2B           	dec hl
 366+ 94F2
 367+ 94F2 DD 75 09     	ld (ix+9),l
 368+ 94F5 DD 74 0A     	ld (ix+10),h
 369+ 94F8
 370+ 94F8 C9           	ret
 371+ 94F9
 372+ 94F9              ; ---------------------------------------------------------------------
 373+ 94F9              ;
 374+ 94F9              ;	24/11/24
 375+ 94F9
 376+ 94F9              Reinicia_entidad_maliciosa
 377+ 94F9
 378+ 94F9              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 379+ 94F9
 380+ 94F9 CD 37 A1     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 381+ 94FC CD 44 A1     	call Transfiere_datos_de_contadores
 382+ 94FF
 383+ 94FF              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 384+ 94FF
 385+ 94FF DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 386+ 9502 CD B3 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 387+ 9505
 388+ 9505 7D           	ld a,l
 389+ 9506 C6 0B        	add 11
 390+ 9508 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 391+ 9509
 392+ 9509 CD 8E 91     	call Extrae_address
 393+ 950C
 394+ 950C DD 75 07     	ld (ix+7),l
 395+ 950F DD 74 08     	ld (ix+8),h
 396+ 9512
 397+ 9512 CD BC 90     	call Obtenemos_puntero_de_impresion
 398+ 9515
 399+ 9515              ; Incrementa (Contador_de_vueltas)x2.
 400+ 9515              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 401+ 9515
 402+ 9515              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 403+ 9515              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 404+ 9515              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 405+ 9515              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 406+ 9515              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 407+ 9515
 408+ 9515 DD CB 03 26  	sla (ix+3)									; sla x2 (Contador_de_vueltas). Inicialmente es "1".
 409+ 9519
 410+ 9519 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 411+ 951C CB 2F        	sra a
 412+ 951E CB 2F        	sra a
 413+ 9520
 414+ 9520 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 415+ 9523
 416+ 9523 3E 40        	ld a,$40
 417+ 9525 DD BE 03     	cp (ix+3)
 418+ 9528 C0           	ret nz
 419+ 9529
 420+ 9529              ; Límitador.
 421+ 9529
 422+ 9529              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 423+ 9529
 424+ 9529 DD CB 03 2E  	sra (ix+3)
 425+ 952D DD CB 0B 2E  	sra (ix+11)
 426+ 9531
 427+ 9531 C9           	ret
 428+ 9532
 429+ 9532              ;	------------------------------------------------------------------------------------
 430+ 9532              ;
 431+ 9532              ;	09/11/24
 432+ 9532              ;
 433+ 9532              ;	INPUTS:	A contiene el (Tipo) de entidad.
 434+ 9532              ;
 435+ 9532              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 436+ 9532              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 437+ 9532
 438+ 9532 A7           Calcula_salto_en_BC and a
 439+ 9533 28 04        	jr z,1F
 440+ 9535 CB 27        	sla a
 441+ 9537 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 442+ 9539 4F           1 ld c,a
 443+ 953A 06 00        	ld b,0
 444+ 953C C9           	ret
 445+ 953D
 446+ 953D              ; ------------------------------------------------------------------
 447+ 953D              ;
 448+ 953D              ;	19/1/24
 449+ 953D              ;
 450+ 953D              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 451+ 953D              ;	Actualiza (Datos_de_entidad) con esa dirección.
 452+ 953D
 453+ 953D A7           Situa_en_datos_de_definicion and a
 454+ 953E ED 4A        	adc hl,bc
 455+ 9540 CD 8E 91     	call Extrae_address
 456+ 9543 22 2B 8C         ld (Datos_de_entidad),hl
 457+ 9546 C9           	ret
 458+ 9547
 459+ 9547              ; ----------------------------------------------------------------------------------------------------------
 460+ 9547              ;
 461+ 9547              ;	2/1/25
 462+ 9547              ;
 463+ 9547              ;	Transfiere datos correlativos, (de una definición de entidad) a la Bandeja_DRAW.
 464+ 9547              ;	Utilizaremos la pila para extraer los datos de la definición "popeando" a los registros DE y BC.
 465+ 9547              ;	HL apuntará al DESTINO, (datos DRAW).
 466+ 9547              ;
 467+ 9547              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 9547              ;	_ de entidad.
 469+ 9547              ;
 470+ 9547              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad, (ORIGEN).
 471+ 9547              ;
 472+ 9547              ;	MODIFICA: HL,DE y BC.
 473+ 9547              ;
 474+ 9547
 475+ 9547              Definicion_de_entidad_a_bandeja_DRAW
 476+ 9547
 477+ 9547 ED 73 2D 8C  	ld (Stack),sp
 478+ 954B F9           	ld sp,hl
 479+ 954C 21 DE 8B     	ld hl,Bandeja_DRAW
 480+ 954F
 481+ 954F D1           	pop de 						; (Tipo) en E.
 482+ 9550 73           	ld (hl),e
 483+ 9551
 484+ 9551 3B           	dec sp
 485+ 9552
 486+ 9552 D1           	pop de 						; (Indice_Sprite_der).
 487+ 9553 C1           	pop bc 						; (Indice_Sprite_izq).
 488+ 9554
 489+ 9554 21 F3 8B     	ld hl,Indice_Sprite_der
 490+ 9557
 491+ 9557 73           	ld (hl),e
 492+ 9558 23           	inc hl
 493+ 9559 72           	ld (hl),d
 494+ 955A 23           	inc hl
 495+ 955B 71           	ld (hl),c
 496+ 955C 23           	inc hl
 497+ 955D 70           	ld (hl),b
 498+ 955E
 499+ 955E D1           	pop de 						; (Posicion_inicio).
 500+ 955F
 501+ 955F 21 FB 8B     	ld hl,Posicion_inicio
 502+ 9562
 503+ 9562 73           	ld (hl),e
 504+ 9563 23           	inc hl
 505+ 9564 72           	ld (hl),d
 506+ 9565
 507+ 9565 D1           	pop de 						; (Puntero_de_almacen_de_mov_masticados).
 508+ 9566
 509+ 9566 21 E5 8B     	ld hl,Puntero_de_almacen_de_mov_masticados
 510+ 9569
 511+ 9569 73           	ld (hl),e
 512+ 956A 23           	inc hl
 513+ 956B 72           	ld (hl),d
 514+ 956C
 515+ 956C ED 7B 2D 8C  	ld sp,(Stack)
 516+ 9570
 517+ 9570 C9           	ret
 518+ 9571
 519+ 9571              ; ----------------------------------------------------------------------------------------------------------
 520+ 9571              ;
 521+ 9571              ;	1/8/24
 522+ 9571              ;
 523+ 9571
 524+ 9571              Parametros_de_bandeja_DRAW_a_caja
 525+ 9571
 526+ 9571 21 DE 8B     	ld hl,Bandeja_DRAW
 527+ 9574 01 0C 00     	ld bc,12
 528+ 9577 ED B0        	ldir
 529+ 9579 C9           	ret
 530+ 957A
 531+ 957A              ;---------------------------------------------------------------------------------------------------------------
 532+ 957A              ;
 533+ 957A              ;	13/11/24
 534+ 957A              ;
 535+ 957A              ;	INICIALIZA (Numero_parcial_de_entidades).
 536+ 957A              ;
 537+ 957A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 538+ 957A              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 539+ 957A
 540+ 957A              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 541+ 957A              ;			- Actualiza (Numero_de_entidades).
 542+ 957A
 543+ 957A              ;	MODIFICA: A y B.
 544+ 957A
 545+ 957A
 546+ 957A              Inicializa_Numero_parcial_de_entidades
 547+ 957A
 548+ 957A 3A 26 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 549+ 957D FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 550+ 957F 38 0E        	jr c,1F
 551+ 9581 28 0C        	jr z,1F
 552+ 9583
 553+ 9583              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 554+ 9583              ; Actualizamos variables.
 555+ 9583
 556+ 9583 D6 06        	sub 6
 557+ 9585 32 26 8C     	ld (Numero_de_entidades),a
 558+ 9588 3E 06        	ld a,6
 559+ 958A 32 27 8C     	ld (Numero_parcial_de_entidades),a
 560+ 958D 47           	ld b,a
 561+ 958E C9           	ret
 562+ 958F
 563+ 958F              ; El nº total de entidades no supera el nº de cajas de entidades.
 564+ 958F              ; (Numero_de_entidades)="0".
 565+ 958F
 566+ 958F 32 27 8C     1 ld (Numero_parcial_de_entidades),a
 567+ 9592 47           	ld b,a
 568+ 9593 AF           	xor a
 569+ 9594 32 26 8C     	ld (Numero_de_entidades),a
 570+ 9597 C9           	ret
 571+ 9598
# file closed: Rutinas_de_inicio_y_niveles.asm
2385  9598              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9598              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9598              ;
   3+ 9598              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9598              ;
   5+ 9598              ; *****************************************************************************************************************************************************************************************
   6+ 9598              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9598
   8+ 9598 7C           calcula_tercio ld a,h
   9+ 9599 E6 18        	and $18
  10+ 959B CB 2F        	sra a
  11+ 959D CB 2F        	sra a
  12+ 959F CB 2F        	sra a
  13+ 95A1 C9           	ret
  14+ 95A2
# file closed: calcula_tercio.asm
2386  95A2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 95A2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 95A2              ;
   3+ 95A2              ;
   4+ 95A2              ;	CLS.
   5+ 95A2              ;
   6+ 95A2              ;	Limpia la pantalla y define sus atributos.
   7+ 95A2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 95A2              ;
   9+ 95A2              ;	COLORES: 0 ..... NEGRO
  10+ 95A2              ;    		 1 ..... AZUL
  11+ 95A2              ; 			 2 ..... ROJO
  12+ 95A2              ;			 3 ..... MAGENTA
  13+ 95A2              ; 			 4 ..... VERDE
  14+ 95A2              ; 			 5 ..... CIAN
  15+ 95A2              ;			 6 ..... AMARILLO
  16+ 95A2              ; 			 7 ..... BLANCO
  17+ 95A2              ;
  18+ 95A2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 95A2              ;
  20+ 95A2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 95A2
  22+ 95A2
  23+ 95A2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 95A5 11 01 40     	LD DE,$4001
  25+ 95A8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 95AB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 95AD ED B0        	LDIR
  28+ 95AF 01 FF 02     	LD BC,767
  29+ 95B2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 95B3 ED B0        	LDIR
  31+ 95B5 C9           	ret
  32+ 95B6
# file closed: Cls.asm
2387  95B6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 95B6              ; ------------------------------------------------------------------------
   2+ 95B6              ;
   3+ 95B6              ;	30/1/24
   4+ 95B6              ;
   5+ 95B6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 95B6              ;	Fila superior "0", Columna izquierda "0".
   7+ 95B6              ;
   8+ 95B6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 95B6              ;
  10+ 95B6              ;	Modifica: A,BC y DE.
  11+ 95B6
  12+ 95B6              Genera_coordenadas
  13+ 95B6
  14+ 95B6 7D           	ld a,l
  15+ 95B7 E6 1F        	and $1f
  16+ 95B9
  17+ 95B9 32 DF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 95BC
  19+ 95BC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 95BD FE 40        	cp $40
  21+ 95BF 38 1C        	jr c,4F
  22+ 95C1
  23+ 95C1 CD 98 95     	call calcula_tercio
  24+ 95C4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 95C5
  26+ 95C5 1E 00        	ld e,0
  27+ 95C7 7D           	ld a,l
  28+ 95C8 E6 E0        	and $e0
  29+ 95CA 28 01        	jr z,1F
  30+ 95CC 04           	inc b
  31+ 95CD
  32+ 95CD 04           1 inc b
  33+ 95CE 05           	dec b
  34+ 95CF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 95D1              ;														; _ , salimos.
  36+ 95D1 1C           3 inc e
  37+ 95D2 D6 20        	sub 32
  38+ 95D4 20 FB        	jr nz,3B
  39+ 95D6 10 F5        	djnz 1B
  40+ 95D8
  41+ 95D8 7B           2 ld a,e
  42+ 95D9 32 E0 8B     	ld (Coordenada_y),a
  43+ 95DC C9           	ret
  44+ 95DD
  45+ 95DD AF           4 xor a
  46+ 95DE 32 E0 8B     	ld (Coordenada_y),a
  47+ 95E1 C9           	ret
  48+ 95E2
# file closed: Genera_coordenadas.asm
2388  95E2              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 95E2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 95E2              ;
   3+ 95E2              ;	20/09/24
   4+ 95E2              ;
   5+ 95E2              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 95E2              ;   DE contiene Puntero_objeto.
   7+ 95E2              ;   IX contiene el Puntero de impresión.
   8+ 95E2
   9+ 95E2              Genera_datos_de_impresion
  10+ 95E2
  11+ 95E2 ED 73 2D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 95E6
  13+ 95E6 2A 4F 8C         ld hl,(Scanlines_album_SP)
  14+ 95E9
  15+ 95E9 3E 05            ld a,5
  16+ 95EB 85               add l
  17+ 95EC 6F               ld l,a
  18+ 95ED
  19+ 95ED F9               ld sp,hl
  20+ 95EE 22 4F 8C         ld (Scanlines_album_SP),hl
  21+ 95F1
  22+ 95F1 21 00 00         ld hl,0
  23+ 95F4
  24+ 95F4 DD E5            push ix
  25+ 95F6 3B               dec sp
  26+ 95F7 ED 7A            adc hl,sp
  27+ 95F9 D5               push de
  28+ 95FA
  29+ 95FA              ; Recuperamos SP.
  30+ 95FA
  31+ 95FA ED 7B 2D 8C      ld sp,(Stack)
  32+ 95FE
  33+ 95FE E5               push hl
  34+ 95FF F1               pop af
  35+ 9600 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9601
  37+ 9601              ; Tenemos el encabezado listo.
  38+ 9601              ; Preparamos registros para generar los scanlines.
  39+ 9601
  40+ 9601 DD E5            push ix
  41+ 9603 E1               pop hl                                          ; 1er scanline en HL.
  42+ 9604
  43+ 9604 ED 5B 4F 8C      ld de,(Scanlines_album_SP)
  44+ 9608
  45+ 9608              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9608              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9608
  48+ 9608 7C               ld a,h
  49+ 9609 FE 50            cp $50
  50+ 960B 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 960D
  52+ 960D 20 05            jr nz,2F
  53+ 960F
  54+ 960F 7D               ld a,l
  55+ 9610 FE E0            cp $e0
  56+ 9612 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 9614
  58+ 9614 7D           2 ld a,l
  59+ 9615 FE C0            cp $c0
  60+ 9617 D2 AD 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 961A
  62+ 961A              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 961A
  64+ 961A CD 22 9C         call NextScan
  65+ 961D EB               ex de,hl
  66+ 961E
  67+ 961E 73               ld (hl),e
  68+ 961F 23               inc hl
  69+ 9620 72               ld (hl),d
  70+ 9621 23               inc hl
  71+ 9622
  72+ 9622 EB               ex de,hl
  73+ 9623
  74+ 9623 CD 22 9C         call NextScan
  75+ 9626 EB               ex de,hl
  76+ 9627
  77+ 9627 73               ld (hl),e
  78+ 9628 23               inc hl
  79+ 9629 72               ld (hl),d
  80+ 962A 23               inc hl
  81+ 962B
  82+ 962B EB               ex de,hl
  83+ 962C
  84+ 962C CD 22 9C         call NextScan
  85+ 962F EB               ex de,hl
  86+ 9630
  87+ 9630 73               ld (hl),e
  88+ 9631 23               inc hl
  89+ 9632 72               ld (hl),d
  90+ 9633 23               inc hl
  91+ 9634
  92+ 9634 EB               ex de,hl
  93+ 9635
  94+ 9635 CD 22 9C         call NextScan
  95+ 9638 EB               ex de,hl
  96+ 9639
  97+ 9639 73               ld (hl),e
  98+ 963A 23               inc hl
  99+ 963B 72               ld (hl),d
 100+ 963C 23               inc hl
 101+ 963D
 102+ 963D EB               ex de,hl
 103+ 963E
 104+ 963E CD 22 9C         call NextScan
 105+ 9641 EB               ex de,hl
 106+ 9642
 107+ 9642 73               ld (hl),e
 108+ 9643 23               inc hl
 109+ 9644 72               ld (hl),d
 110+ 9645 23               inc hl
 111+ 9646
 112+ 9646 EB               ex de,hl
 113+ 9647
 114+ 9647 CD 22 9C         call NextScan
 115+ 964A EB               ex de,hl
 116+ 964B
 117+ 964B 73               ld (hl),e
 118+ 964C 23               inc hl
 119+ 964D 72               ld (hl),d
 120+ 964E 23               inc hl
 121+ 964F
 122+ 964F EB               ex de,hl
 123+ 9650
 124+ 9650 CD 22 9C         call NextScan
 125+ 9653 EB               ex de,hl
 126+ 9654
 127+ 9654 73               ld (hl),e
 128+ 9655 23               inc hl
 129+ 9656 72               ld (hl),d
 130+ 9657 23               inc hl
 131+ 9658
 132+ 9658 EB               ex de,hl
 133+ 9659
 134+ 9659 CD 22 9C         call NextScan
 135+ 965C EB               ex de,hl
 136+ 965D
 137+ 965D 73               ld (hl),e
 138+ 965E 23               inc hl
 139+ 965F 72               ld (hl),d
 140+ 9660 23               inc hl
 141+ 9661
 142+ 9661 EB               ex de,hl
 143+ 9662
 144+ 9662 CD 22 9C         call NextScan
 145+ 9665 EB               ex de,hl
 146+ 9666
 147+ 9666 73               ld (hl),e
 148+ 9667 23               inc hl
 149+ 9668 72               ld (hl),d
 150+ 9669 23               inc hl
 151+ 966A
 152+ 966A EB               ex de,hl
 153+ 966B
 154+ 966B CD 22 9C         call NextScan
 155+ 966E EB               ex de,hl
 156+ 966F
 157+ 966F 73               ld (hl),e
 158+ 9670 23               inc hl
 159+ 9671 72               ld (hl),d
 160+ 9672 23               inc hl
 161+ 9673
 162+ 9673 EB               ex de,hl
 163+ 9674
 164+ 9674 CD 22 9C         call NextScan
 165+ 9677 EB               ex de,hl
 166+ 9678
 167+ 9678 73               ld (hl),e
 168+ 9679 23               inc hl
 169+ 967A 72               ld (hl),d
 170+ 967B 23               inc hl
 171+ 967C
 172+ 967C EB               ex de,hl
 173+ 967D
 174+ 967D CD 22 9C         call NextScan
 175+ 9680 EB               ex de,hl
 176+ 9681
 177+ 9681 73               ld (hl),e
 178+ 9682 23               inc hl
 179+ 9683 72               ld (hl),d
 180+ 9684 23               inc hl
 181+ 9685
 182+ 9685 EB               ex de,hl
 183+ 9686
 184+ 9686 CD 22 9C         call NextScan
 185+ 9689 EB               ex de,hl
 186+ 968A
 187+ 968A 73               ld (hl),e
 188+ 968B 23               inc hl
 189+ 968C 72               ld (hl),d
 190+ 968D 23               inc hl
 191+ 968E
 192+ 968E EB               ex de,hl
 193+ 968F
 194+ 968F CD 22 9C         call NextScan
 195+ 9692 EB               ex de,hl
 196+ 9693
 197+ 9693 73               ld (hl),e
 198+ 9694 23               inc hl
 199+ 9695 72               ld (hl),d
 200+ 9696 23               inc hl
 201+ 9697
 202+ 9697 EB               ex de,hl
 203+ 9698
 204+ 9698 CD 22 9C         call NextScan
 205+ 969B EB               ex de,hl
 206+ 969C
 207+ 969C              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 969C              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 969C              ;   _ generar sus scanlines.
 210+ 969C
 211+ 969C              ;    ld (Puntero_de_impresion_disparo),de
 212+ 969C
 213+ 969C 73               ld (hl),e
 214+ 969D 23               inc hl
 215+ 969E 72               ld (hl),d
 216+ 969F 23               inc hl
 217+ 96A0
 218+ 96A0              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 96A0
 220+ 96A0 22 4F 8C         ld (Scanlines_album_SP),hl
 221+ 96A3
 222+ 96A3 EB               ex de,hl
 223+ 96A4
 224+ 96A4              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 96A4
 226+ 96A4              ;    call NextScan
 227+ 96A4              ;    call NextScan
 228+ 96A4
 229+ 96A4 22 5A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 96A7
 231+ 96A7              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 96A7
 233+ 96A7 08               ex af,af
 234+ 96A8
 235+ 96A8 F5               push af
 236+ 96A9 E1               pop hl
 237+ 96AA
 238+ 96AA 36 10            ld (hl),16
 239+ 96AC
 240+ 96AC C9               ret
 241+ 96AD
 242+ 96AD              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 96AD
 244+ 96AD              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 96AD
 246+ 96AD 3E 57            ld a,$57
 247+ 96AF 94               sub h
 248+ 96B0 47               ld b,a
 249+ 96B1
 250+ 96B1 3E DF            ld a,$df
 251+ 96B3 BD               cp l
 252+ 96B4 38 04            jr c,1F
 253+ 96B6
 254+ 96B6 3E 08            ld a,8
 255+ 96B8 80               add b
 256+ 96B9 47               ld b,a
 257+ 96BA
 258+ 96BA              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 96BA              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 96BA
 261+ 96BA 48           1 ld c,b
 262+ 96BB 0C               inc c
 263+ 96BC
 264+ 96BC 04               inc b
 265+ 96BD 05               dec b
 266+ 96BE 20 02            jr nz,3F
 267+ 96C0
 268+ 96C0 18 0B            jr 6F
 269+ 96C2
 270+ 96C2 CD 22 9C     3 call NextScan
 271+ 96C5 EB               ex de,hl
 272+ 96C6
 273+ 96C6 73               ld (hl),e
 274+ 96C7 23               inc hl
 275+ 96C8 72               ld (hl),d
 276+ 96C9 23               inc hl
 277+ 96CA
 278+ 96CA EB               ex de,hl
 279+ 96CB 10 F5            djnz 3B
 280+ 96CD
 281+ 96CD ED 53 4F 8C  6 ld (Scanlines_album_SP),de
 282+ 96D1
 283+ 96D1 08           5 ex af,af
 284+ 96D2 F5               push af
 285+ 96D3 E1               pop hl
 286+ 96D4
 287+ 96D4 71               ld (hl),c
 288+ 96D5
 289+ 96D5 C9               ret
 290+ 96D6
# file closed: Genera_datos_de_impresion.asm
2389  96D6              	include "Rutinas_de_pintado.asm"
# file opened: Rutinas_de_pintado.asm
   1+ 96D6              ; -----------------------------------------------------------------------------
   2+ 96D6              ;
   3+ 96D6              ;   28/12/24
   4+ 96D6              ;
   5+ 96D6
   6+ 96D6              ; Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
   7+ 96D6              ; Scanlines_album_2 equ $811a	;    ($811a - $8232)
   8+ 96D6              ; Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
   9+ 96D6              ; Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  10+ 96D6
  11+ 96D6              Rutinas_de_pintado
  12+ 96D6
  13+ 96D6 ED 73 2D 8C      ld (Stack),sp
  14+ 96DA
  15+ 96DA EB               ex de,hl                                          ; HL se encuentra en el álbum de líneas.
  16+ 96DB              ;                                                     ; DE se encuentra en los datos del sprite.
  17+ 96DB 2C               inc l
  18+ 96DC 2C               inc l
  19+ 96DD
  20+ 96DD 46               ld b,(hl)                                         ; B contiene el nº de scanlines a imprimir.
  21+ 96DE
  22+ 96DE 2C               inc l
  23+ 96DF
  24+ 96DF F9               ld sp,hl                                          ; El SP irá extrayendo scanlines en HL.
  25+ 96E0
  26+ 96E0              ;   Vamos a imprimir una entidad o Amadeus ???
  27+ 96E0
  28+ 96E0 7D               ld a,l
  29+ 96E1 FE 34            cp $34
  30+ 96E3 38 03            jr c,Printing_routines_selector
  31+ 96E5
  32+ 96E5 E1               pop hl
  33+ 96E6 18 0F            jr Pinta_rapido_3Chars                            ; Amadeus SIEMPRE se imprime completo, (3 Chars) y 16 scanlines.
  34+ 96E8
  35+ 96E8              ;   ----- ----- ----- ----- -----
  36+ 96E8
  37+ 96E8              Printing_routines_selector
  38+ 96E8
  39+ 96E8              ;   Seleccionaremos la rutina adecuada en función del nº de columna en el que nos encontremos.
  40+ 96E8              ;   Columnas (2-29) utilizaremos [Print_3Chars], Estas rutinas imiprimen el sprite completo, 3 chars.
  41+ 96E8
  42+ 96E8              ; En que columna nos encontramos?
  43+ 96E8
  44+ 96E8 E1               pop hl                                            ; Dirección de pantalla del 1er scan del sprite
  45+ 96E9
  46+ 96E9 7D               ld a,l
  47+ 96EA E6 1F            and $1f
  48+ 96EC FE 1E            cp 30
  49+ 96EE D2 09 98         jp nc,Desaparece_por_la_derecha
  50+ 96F1
  51+ 96F1              ; -----------------------------------------------------------------------------------------------------------------------------
  52+ 96F1
  53+ 96F1              Print_3Chars
  54+ 96F1
  55+ 96F1              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
  56+ 96F1              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
  57+ 96F1              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
  58+ 96F1
  59+ 96F1              ;   16 scanlines o menos ???
  60+ 96F1
  61+ 96F1 78               ld a,b
  62+ 96F2 FE 10            cp 16
  63+ 96F4 C2 EF 97         jp nz,Pinta_lento_3Chars                           ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  64+ 96F7
  65+ 96F7              ;   Rutinas:
  66+ 96F7
  67+ 96F7              Pinta_rapido_3Chars                                    ;   1520 t/states.
  68+ 96F7
  69+ 96F7 1A               ld a,(de)
  70+ 96F8 AE               xor (hl)
  71+ 96F9 77               ld (hl),a
  72+ 96FA 2C               inc l
  73+ 96FB 1C               inc e
  74+ 96FC 1A               ld a,(de)
  75+ 96FD AE               xor (hl)
  76+ 96FE 77               ld (hl),a
  77+ 96FF 2C               inc l
  78+ 9700 1C               inc e
  79+ 9701 1A               ld a,(de)
  80+ 9702 AE               xor (hl)
  81+ 9703 77               ld (hl),a
  82+ 9704 1C               inc e
  83+ 9705
  84+ 9705 E1               pop hl
  85+ 9706
  86+ 9706 1A               ld a,(de)
  87+ 9707 AE               xor (hl)
  88+ 9708 77               ld (hl),a
  89+ 9709 2C               inc l
  90+ 970A 1C               inc e
  91+ 970B 1A               ld a,(de)
  92+ 970C AE               xor (hl)
  93+ 970D 77               ld (hl),a
  94+ 970E 2C               inc l
  95+ 970F 1C               inc e
  96+ 9710 1A               ld a,(de)
  97+ 9711 AE               xor (hl)
  98+ 9712 77               ld (hl),a
  99+ 9713 1C               inc e
 100+ 9714
 101+ 9714 E1               pop hl
 102+ 9715
 103+ 9715 1A               ld a,(de)
 104+ 9716 AE               xor (hl)
 105+ 9717 77               ld (hl),a
 106+ 9718 2C               inc l
 107+ 9719 1C               inc e
 108+ 971A 1A               ld a,(de)
 109+ 971B AE               xor (hl)
 110+ 971C 77               ld (hl),a
 111+ 971D 2C               inc l
 112+ 971E 1C               inc e
 113+ 971F 1A               ld a,(de)
 114+ 9720 AE               xor (hl)
 115+ 9721 77               ld (hl),a
 116+ 9722 1C               inc e
 117+ 9723
 118+ 9723 E1               pop hl
 119+ 9724
 120+ 9724 1A               ld a,(de)
 121+ 9725 AE               xor (hl)
 122+ 9726 77               ld (hl),a
 123+ 9727 2C               inc l
 124+ 9728 1C               inc e
 125+ 9729 1A               ld a,(de)
 126+ 972A AE               xor (hl)
 127+ 972B 77               ld (hl),a
 128+ 972C 2C               inc l
 129+ 972D 1C               inc e
 130+ 972E 1A               ld a,(de)
 131+ 972F AE               xor (hl)
 132+ 9730 77               ld (hl),a
 133+ 9731 1C               inc e
 134+ 9732
 135+ 9732 E1               pop hl
 136+ 9733
 137+ 9733 1A               ld a,(de)
 138+ 9734 AE               xor (hl)
 139+ 9735 77               ld (hl),a
 140+ 9736 2C               inc l
 141+ 9737 1C               inc e
 142+ 9738 1A               ld a,(de)
 143+ 9739 AE               xor (hl)
 144+ 973A 77               ld (hl),a
 145+ 973B 2C               inc l
 146+ 973C 1C               inc e
 147+ 973D 1A               ld a,(de)
 148+ 973E AE               xor (hl)
 149+ 973F 77               ld (hl),a
 150+ 9740 1C               inc e
 151+ 9741
 152+ 9741 E1               pop hl
 153+ 9742
 154+ 9742 1A               ld a,(de)
 155+ 9743 AE               xor (hl)
 156+ 9744 77               ld (hl),a
 157+ 9745 2C               inc l
 158+ 9746 1C               inc e
 159+ 9747 1A               ld a,(de)
 160+ 9748 AE               xor (hl)
 161+ 9749 77               ld (hl),a
 162+ 974A 2C               inc l
 163+ 974B 1C               inc e
 164+ 974C 1A               ld a,(de)
 165+ 974D AE               xor (hl)
 166+ 974E 77               ld (hl),a
 167+ 974F 1C               inc e
 168+ 9750
 169+ 9750 E1               pop hl
 170+ 9751
 171+ 9751 1A               ld a,(de)
 172+ 9752 AE               xor (hl)
 173+ 9753 77               ld (hl),a
 174+ 9754 2C               inc l
 175+ 9755 1C               inc e
 176+ 9756 1A               ld a,(de)
 177+ 9757 AE               xor (hl)
 178+ 9758 77               ld (hl),a
 179+ 9759 2C               inc l
 180+ 975A 1C               inc e
 181+ 975B 1A               ld a,(de)
 182+ 975C AE               xor (hl)
 183+ 975D 77               ld (hl),a
 184+ 975E 1C               inc e
 185+ 975F
 186+ 975F E1               pop hl
 187+ 9760
 188+ 9760 1A               ld a,(de)
 189+ 9761 AE               xor (hl)
 190+ 9762 77               ld (hl),a
 191+ 9763 2C               inc l
 192+ 9764 1C               inc e
 193+ 9765 1A               ld a,(de)
 194+ 9766 AE               xor (hl)
 195+ 9767 77               ld (hl),a
 196+ 9768 2C               inc l
 197+ 9769 1C               inc e
 198+ 976A 1A               ld a,(de)
 199+ 976B AE               xor (hl)
 200+ 976C 77               ld (hl),a
 201+ 976D 1C               inc e
 202+ 976E
 203+ 976E E1               pop hl
 204+ 976F
 205+ 976F 1A               ld a,(de)
 206+ 9770 AE               xor (hl)
 207+ 9771 77               ld (hl),a
 208+ 9772 2C               inc l
 209+ 9773 1C               inc e
 210+ 9774 1A               ld a,(de)
 211+ 9775 AE               xor (hl)
 212+ 9776 77               ld (hl),a
 213+ 9777 2C               inc l
 214+ 9778 1C               inc e
 215+ 9779 1A               ld a,(de)
 216+ 977A AE               xor (hl)
 217+ 977B 77               ld (hl),a
 218+ 977C 1C               inc e
 219+ 977D
 220+ 977D E1               pop hl
 221+ 977E
 222+ 977E 1A               ld a,(de)
 223+ 977F AE               xor (hl)
 224+ 9780 77               ld (hl),a
 225+ 9781 2C               inc l
 226+ 9782 1C               inc e
 227+ 9783 1A               ld a,(de)
 228+ 9784 AE               xor (hl)
 229+ 9785 77               ld (hl),a
 230+ 9786 2C               inc l
 231+ 9787 1C               inc e
 232+ 9788 1A               ld a,(de)
 233+ 9789 AE               xor (hl)
 234+ 978A 77               ld (hl),a
 235+ 978B 1C               inc e
 236+ 978C
 237+ 978C E1               pop hl
 238+ 978D
 239+ 978D 1A               ld a,(de)
 240+ 978E AE               xor (hl)
 241+ 978F 77               ld (hl),a
 242+ 9790 2C               inc l
 243+ 9791 1C               inc e
 244+ 9792 1A               ld a,(de)
 245+ 9793 AE               xor (hl)
 246+ 9794 77               ld (hl),a
 247+ 9795 2C               inc l
 248+ 9796 1C               inc e
 249+ 9797 1A               ld a,(de)
 250+ 9798 AE               xor (hl)
 251+ 9799 77               ld (hl),a
 252+ 979A 1C               inc e
 253+ 979B
 254+ 979B E1               pop hl
 255+ 979C
 256+ 979C 1A               ld a,(de)
 257+ 979D AE               xor (hl)
 258+ 979E 77               ld (hl),a
 259+ 979F 2C               inc l
 260+ 97A0 1C               inc e
 261+ 97A1 1A               ld a,(de)
 262+ 97A2 AE               xor (hl)
 263+ 97A3 77               ld (hl),a
 264+ 97A4 2C               inc l
 265+ 97A5 1C               inc e
 266+ 97A6 1A               ld a,(de)
 267+ 97A7 AE               xor (hl)
 268+ 97A8 77               ld (hl),a
 269+ 97A9 1C               inc e
 270+ 97AA
 271+ 97AA E1               pop hl
 272+ 97AB
 273+ 97AB 1A               ld a,(de)
 274+ 97AC AE               xor (hl)
 275+ 97AD 77               ld (hl),a
 276+ 97AE 2C               inc l
 277+ 97AF 1C               inc e
 278+ 97B0 1A               ld a,(de)
 279+ 97B1 AE               xor (hl)
 280+ 97B2 77               ld (hl),a
 281+ 97B3 2C               inc l
 282+ 97B4 1C               inc e
 283+ 97B5 1A               ld a,(de)
 284+ 97B6 AE               xor (hl)
 285+ 97B7 77               ld (hl),a
 286+ 97B8 1C               inc e
 287+ 97B9
 288+ 97B9 E1               pop hl
 289+ 97BA
 290+ 97BA 1A               ld a,(de)
 291+ 97BB AE               xor (hl)
 292+ 97BC 77               ld (hl),a
 293+ 97BD 2C               inc l
 294+ 97BE 1C               inc e
 295+ 97BF 1A               ld a,(de)
 296+ 97C0 AE               xor (hl)
 297+ 97C1 77               ld (hl),a
 298+ 97C2 2C               inc l
 299+ 97C3 1C               inc e
 300+ 97C4 1A               ld a,(de)
 301+ 97C5 AE               xor (hl)
 302+ 97C6 77               ld (hl),a
 303+ 97C7 1C               inc e
 304+ 97C8
 305+ 97C8 E1               pop hl
 306+ 97C9
 307+ 97C9 1A               ld a,(de)
 308+ 97CA AE               xor (hl)
 309+ 97CB 77               ld (hl),a
 310+ 97CC 2C               inc l
 311+ 97CD 1C               inc e
 312+ 97CE 1A               ld a,(de)
 313+ 97CF AE               xor (hl)
 314+ 97D0 77               ld (hl),a
 315+ 97D1 2C               inc l
 316+ 97D2 1C               inc e
 317+ 97D3 1A               ld a,(de)
 318+ 97D4 AE               xor (hl)
 319+ 97D5 77               ld (hl),a
 320+ 97D6 1C               inc e
 321+ 97D7
 322+ 97D7 E1               pop hl
 323+ 97D8
 324+ 97D8 1A               ld a,(de)
 325+ 97D9 AE               xor (hl)
 326+ 97DA 77               ld (hl),a
 327+ 97DB 2C               inc l
 328+ 97DC 1C               inc e
 329+ 97DD 1A               ld a,(de)
 330+ 97DE AE               xor (hl)
 331+ 97DF 77               ld (hl),a
 332+ 97E0 2C               inc l
 333+ 97E1 1C               inc e
 334+ 97E2 1A               ld a,(de)
 335+ 97E3 AE               xor (hl)
 336+ 97E4 77               ld (hl),a
 337+ 97E5 1C               inc e
 338+ 97E6
 339+ 97E6 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 340+ 97EA ED 7B 2D 8C      ld sp,(Stack)
 341+ 97EE C9               ret
 342+ 97EF
 343+ 97EF              Pinta_lento_3Chars
 344+ 97EF
 345+ 97EF E1           1 pop hl
 346+ 97F0
 347+ 97F0 1A               ld a,(de)
 348+ 97F1 AE               xor (hl)
 349+ 97F2 77               ld (hl),a
 350+ 97F3 2C               inc l
 351+ 97F4 1C               inc e
 352+ 97F5 1A               ld a,(de)
 353+ 97F6 AE               xor (hl)
 354+ 97F7 77               ld (hl),a
 355+ 97F8 2C               inc l
 356+ 97F9 1C               inc e
 357+ 97FA 1A               ld a,(de)
 358+ 97FB AE               xor (hl)
 359+ 97FC 77               ld (hl),a
 360+ 97FD 1C               inc e
 361+ 97FE
 362+ 97FE 10 EF            djnz 1B
 363+ 9800
 364+ 9800 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 365+ 9804 ED 7B 2D 8C      ld sp,(Stack)
 366+ 9808 C9               ret
 367+ 9809
 368+ 9809              ; -----------------------------------------------------------------------
 369+ 9809              ; -----------------------------------------------------------------------
 370+ 9809              ; -----------------------------------------------------------------------
 371+ 9809
 372+ 9809
 373+ 9809              Desaparece_por_la_derecha
 374+ 9809
 375+ 9809              ;   1 o 2 Chars ???
 376+ 9809
 377+ 9809 C2 E0 98         jp nz,Print_1Char_right                                 ; "NZ" indica Columna "$1f".
 378+ 980C
 379+ 980C              Print_2Chars_right
 380+ 980C
 381+ 980C              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 382+ 980C              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 383+ 980C              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 384+ 980C
 385+ 980C              ;   16 scanlines o menos ???
 386+ 980C
 387+ 980C 78               ld a,b
 388+ 980D FE 10            cp 16
 389+ 980F C2 CA 98         jp nz,Pinta_lento_2Chars_right                         ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 390+ 9812
 391+ 9812              ;   Rutinas:
 392+ 9812
 393+ 9812              Pinta_rapido_2Chars_right                                  ;   1520 t/states.
 394+ 9812
 395+ 9812 1A               ld a,(de)
 396+ 9813 AE               xor (hl)
 397+ 9814 77               ld (hl),a
 398+ 9815 2C               inc l
 399+ 9816 1C               inc e
 400+ 9817 1A               ld a,(de)
 401+ 9818 AE               xor (hl)
 402+ 9819 77               ld (hl),a
 403+ 981A 1C               inc e
 404+ 981B 1C               inc e
 405+ 981C
 406+ 981C E1               pop hl
 407+ 981D
 408+ 981D 1A               ld a,(de)
 409+ 981E AE               xor (hl)
 410+ 981F 77               ld (hl),a
 411+ 9820 2C               inc l
 412+ 9821 1C               inc e
 413+ 9822 1A               ld a,(de)
 414+ 9823 AE               xor (hl)
 415+ 9824 77               ld (hl),a
 416+ 9825 1C               inc e
 417+ 9826 1C               inc e
 418+ 9827
 419+ 9827 E1               pop hl
 420+ 9828
 421+ 9828 1A               ld a,(de)
 422+ 9829 AE               xor (hl)
 423+ 982A 77               ld (hl),a
 424+ 982B 2C               inc l
 425+ 982C 1C               inc e
 426+ 982D 1A               ld a,(de)
 427+ 982E AE               xor (hl)
 428+ 982F 77               ld (hl),a
 429+ 9830 1C               inc e
 430+ 9831 1C               inc e
 431+ 9832
 432+ 9832 E1               pop hl
 433+ 9833
 434+ 9833 1A               ld a,(de)
 435+ 9834 AE               xor (hl)
 436+ 9835 77               ld (hl),a
 437+ 9836 2C               inc l
 438+ 9837 1C               inc e
 439+ 9838 1A               ld a,(de)
 440+ 9839 AE               xor (hl)
 441+ 983A 77               ld (hl),a
 442+ 983B 1C               inc e
 443+ 983C 1C               inc e
 444+ 983D
 445+ 983D E1               pop hl
 446+ 983E
 447+ 983E 1A               ld a,(de)
 448+ 983F AE               xor (hl)
 449+ 9840 77               ld (hl),a
 450+ 9841 2C               inc l
 451+ 9842 1C               inc e
 452+ 9843 1A               ld a,(de)
 453+ 9844 AE               xor (hl)
 454+ 9845 77               ld (hl),a
 455+ 9846 1C               inc e
 456+ 9847 1C               inc e
 457+ 9848
 458+ 9848 E1               pop hl
 459+ 9849
 460+ 9849 1A               ld a,(de)
 461+ 984A AE               xor (hl)
 462+ 984B 77               ld (hl),a
 463+ 984C 2C               inc l
 464+ 984D 1C               inc e
 465+ 984E 1A               ld a,(de)
 466+ 984F AE               xor (hl)
 467+ 9850 77               ld (hl),a
 468+ 9851 1C               inc e
 469+ 9852 1C               inc e
 470+ 9853
 471+ 9853 E1               pop hl
 472+ 9854
 473+ 9854 1A               ld a,(de)
 474+ 9855 AE               xor (hl)
 475+ 9856 77               ld (hl),a
 476+ 9857 2C               inc l
 477+ 9858 1C               inc e
 478+ 9859 1A               ld a,(de)
 479+ 985A AE               xor (hl)
 480+ 985B 77               ld (hl),a
 481+ 985C 1C               inc e
 482+ 985D 1C               inc e
 483+ 985E
 484+ 985E E1               pop hl
 485+ 985F
 486+ 985F 1A               ld a,(de)
 487+ 9860 AE               xor (hl)
 488+ 9861 77               ld (hl),a
 489+ 9862 2C               inc l
 490+ 9863 1C               inc e
 491+ 9864 1A               ld a,(de)
 492+ 9865 AE               xor (hl)
 493+ 9866 77               ld (hl),a
 494+ 9867 1C               inc e
 495+ 9868 1C               inc e
 496+ 9869
 497+ 9869 E1               pop hl
 498+ 986A
 499+ 986A 1A               ld a,(de)
 500+ 986B AE               xor (hl)
 501+ 986C 77               ld (hl),a
 502+ 986D 2C               inc l
 503+ 986E 1C               inc e
 504+ 986F 1A               ld a,(de)
 505+ 9870 AE               xor (hl)
 506+ 9871 77               ld (hl),a
 507+ 9872 1C               inc e
 508+ 9873 1C               inc e
 509+ 9874
 510+ 9874 E1               pop hl
 511+ 9875
 512+ 9875 1A               ld a,(de)
 513+ 9876 AE               xor (hl)
 514+ 9877 77               ld (hl),a
 515+ 9878 2C               inc l
 516+ 9879 1C               inc e
 517+ 987A 1A               ld a,(de)
 518+ 987B AE               xor (hl)
 519+ 987C 77               ld (hl),a
 520+ 987D 1C               inc e
 521+ 987E 1C               inc e
 522+ 987F
 523+ 987F E1               pop hl
 524+ 9880
 525+ 9880 1A               ld a,(de)
 526+ 9881 AE               xor (hl)
 527+ 9882 77               ld (hl),a
 528+ 9883 2C               inc l
 529+ 9884 1C               inc e
 530+ 9885 1A               ld a,(de)
 531+ 9886 AE               xor (hl)
 532+ 9887 77               ld (hl),a
 533+ 9888 1C               inc e
 534+ 9889 1C               inc e
 535+ 988A
 536+ 988A E1               pop hl
 537+ 988B
 538+ 988B 1A               ld a,(de)
 539+ 988C AE               xor (hl)
 540+ 988D 77               ld (hl),a
 541+ 988E 2C               inc l
 542+ 988F 1C               inc e
 543+ 9890 1A               ld a,(de)
 544+ 9891 AE               xor (hl)
 545+ 9892 77               ld (hl),a
 546+ 9893 1C               inc e
 547+ 9894 1C               inc e
 548+ 9895
 549+ 9895 E1               pop hl
 550+ 9896
 551+ 9896 1A               ld a,(de)
 552+ 9897 AE               xor (hl)
 553+ 9898 77               ld (hl),a
 554+ 9899 2C               inc l
 555+ 989A 1C               inc e
 556+ 989B 1A               ld a,(de)
 557+ 989C AE               xor (hl)
 558+ 989D 77               ld (hl),a
 559+ 989E 1C               inc e
 560+ 989F 1C               inc e
 561+ 98A0
 562+ 98A0 E1               pop hl
 563+ 98A1
 564+ 98A1 1A               ld a,(de)
 565+ 98A2 AE               xor (hl)
 566+ 98A3 77               ld (hl),a
 567+ 98A4 2C               inc l
 568+ 98A5 1C               inc e
 569+ 98A6 1A               ld a,(de)
 570+ 98A7 AE               xor (hl)
 571+ 98A8 77               ld (hl),a
 572+ 98A9 1C               inc e
 573+ 98AA 1C               inc e
 574+ 98AB
 575+ 98AB E1               pop hl
 576+ 98AC
 577+ 98AC 1A               ld a,(de)
 578+ 98AD AE               xor (hl)
 579+ 98AE 77               ld (hl),a
 580+ 98AF 2C               inc l
 581+ 98B0 1C               inc e
 582+ 98B1 1A               ld a,(de)
 583+ 98B2 AE               xor (hl)
 584+ 98B3 77               ld (hl),a
 585+ 98B4 1C               inc e
 586+ 98B5 1C               inc e
 587+ 98B6
 588+ 98B6 E1               pop hl
 589+ 98B7
 590+ 98B7 1A               ld a,(de)
 591+ 98B8 AE               xor (hl)
 592+ 98B9 77               ld (hl),a
 593+ 98BA 2C               inc l
 594+ 98BB 1C               inc e
 595+ 98BC 1A               ld a,(de)
 596+ 98BD AE               xor (hl)
 597+ 98BE 77               ld (hl),a
 598+ 98BF 1C               inc e
 599+ 98C0 1C               inc e
 600+ 98C1
 601+ 98C1 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 602+ 98C5 ED 7B 2D 8C      ld sp,(Stack)
 603+ 98C9 C9               ret
 604+ 98CA
 605+ 98CA              Pinta_lento_2Chars_right
 606+ 98CA
 607+ 98CA E1           2 pop hl
 608+ 98CB
 609+ 98CB 1A               ld a,(de)
 610+ 98CC AE               xor (hl)
 611+ 98CD 77               ld (hl),a
 612+ 98CE 2C               inc l
 613+ 98CF 1C               inc e
 614+ 98D0 1A               ld a,(de)
 615+ 98D1 AE               xor (hl)
 616+ 98D2 77               ld (hl),a
 617+ 98D3 1C               inc e
 618+ 98D4 1C               inc e
 619+ 98D5
 620+ 98D5 10 F3            djnz 2B
 621+ 98D7
 622+ 98D7 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 623+ 98DB ED 7B 2D 8C      ld sp,(Stack)
 624+ 98DF C9               ret
 625+ 98E0
 626+ 98E0              ; -----------------------------------------------------------------------
 627+ 98E0              ; -----------------------------------------------------------------------
 628+ 98E0
 629+ 98E0              Print_1Char_right
 630+ 98E0
 631+ 98E0
 632+ 98E0              ;   DE apunta al 1er .db de datos del sprite, (Puntero_objeto).
 633+ 98E0              ;   HL contiene la dirección de pantalla donde imprimiremos el 1er scanline del sprite.
 634+ 98E0              ;   B contiene el nº de scanlines que vamos a imprimir del sprite.
 635+ 98E0
 636+ 98E0              ;   16 scanlines o menos ???
 637+ 98E0
 638+ 98E0 78               ld a,b
 639+ 98E1 FE 10            cp 16
 640+ 98E3 C2 5E 99         jp nz,Pinta_lento_1Char_right                          ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 641+ 98E6
 642+ 98E6              ;   Rutinas:
 643+ 98E6
 644+ 98E6              Pinta_rapido_1Char_right                                  ;   1520 t/states.
 645+ 98E6
 646+ 98E6 1A               ld a,(de)
 647+ 98E7 AE               xor (hl)
 648+ 98E8 77               ld (hl),a
 649+ 98E9 1C               inc e
 650+ 98EA 1C               inc e
 651+ 98EB 1C               inc e
 652+ 98EC
 653+ 98EC E1               pop hl
 654+ 98ED
 655+ 98ED 1A               ld a,(de)
 656+ 98EE AE               xor (hl)
 657+ 98EF 77               ld (hl),a
 658+ 98F0 1C               inc e
 659+ 98F1 1C               inc e
 660+ 98F2 1C               inc e
 661+ 98F3
 662+ 98F3 E1               pop hl
 663+ 98F4
 664+ 98F4 1A               ld a,(de)
 665+ 98F5 AE               xor (hl)
 666+ 98F6 77               ld (hl),a
 667+ 98F7 1C               inc e
 668+ 98F8 1C               inc e
 669+ 98F9 1C               inc e
 670+ 98FA
 671+ 98FA E1               pop hl
 672+ 98FB
 673+ 98FB 1A               ld a,(de)
 674+ 98FC AE               xor (hl)
 675+ 98FD 77               ld (hl),a
 676+ 98FE 1C               inc e
 677+ 98FF 1C               inc e
 678+ 9900 1C               inc e
 679+ 9901
 680+ 9901 E1               pop hl
 681+ 9902
 682+ 9902 1A               ld a,(de)
 683+ 9903 AE               xor (hl)
 684+ 9904 77               ld (hl),a
 685+ 9905 1C               inc e
 686+ 9906 1C               inc e
 687+ 9907 1C               inc e
 688+ 9908
 689+ 9908 E1               pop hl
 690+ 9909
 691+ 9909 1A               ld a,(de)
 692+ 990A AE               xor (hl)
 693+ 990B 77               ld (hl),a
 694+ 990C 1C               inc e
 695+ 990D 1C               inc e
 696+ 990E 1C               inc e
 697+ 990F
 698+ 990F E1               pop hl
 699+ 9910
 700+ 9910 1A               ld a,(de)
 701+ 9911 AE               xor (hl)
 702+ 9912 77               ld (hl),a
 703+ 9913 1C               inc e
 704+ 9914 1C               inc e
 705+ 9915 1C               inc e
 706+ 9916
 707+ 9916 E1               pop hl
 708+ 9917
 709+ 9917 1A               ld a,(de)
 710+ 9918 AE               xor (hl)
 711+ 9919 77               ld (hl),a
 712+ 991A 1C               inc e
 713+ 991B 1C               inc e
 714+ 991C 1C               inc e
 715+ 991D
 716+ 991D E1               pop hl
 717+ 991E
 718+ 991E 1A               ld a,(de)
 719+ 991F AE               xor (hl)
 720+ 9920 77               ld (hl),a
 721+ 9921 1C               inc e
 722+ 9922 1C               inc e
 723+ 9923 1C               inc e
 724+ 9924
 725+ 9924 E1               pop hl
 726+ 9925
 727+ 9925 1A               ld a,(de)
 728+ 9926 AE               xor (hl)
 729+ 9927 77               ld (hl),a
 730+ 9928 1C               inc e
 731+ 9929 1C               inc e
 732+ 992A 1C               inc e
 733+ 992B
 734+ 992B E1               pop hl
 735+ 992C
 736+ 992C 1A               ld a,(de)
 737+ 992D AE               xor (hl)
 738+ 992E 77               ld (hl),a
 739+ 992F 1C               inc e
 740+ 9930 1C               inc e
 741+ 9931 1C               inc e
 742+ 9932
 743+ 9932 E1               pop hl
 744+ 9933
 745+ 9933 1A               ld a,(de)
 746+ 9934 AE               xor (hl)
 747+ 9935 77               ld (hl),a
 748+ 9936 1C               inc e
 749+ 9937 1C               inc e
 750+ 9938 1C               inc e
 751+ 9939
 752+ 9939 E1               pop hl
 753+ 993A
 754+ 993A 1A               ld a,(de)
 755+ 993B AE               xor (hl)
 756+ 993C 77               ld (hl),a
 757+ 993D 1C               inc e
 758+ 993E 1C               inc e
 759+ 993F 1C               inc e
 760+ 9940
 761+ 9940 E1               pop hl
 762+ 9941
 763+ 9941 1A               ld a,(de)
 764+ 9942 AE               xor (hl)
 765+ 9943 77               ld (hl),a
 766+ 9944 1C               inc e
 767+ 9945 1C               inc e
 768+ 9946 1C               inc e
 769+ 9947
 770+ 9947 E1               pop hl
 771+ 9948
 772+ 9948 1A               ld a,(de)
 773+ 9949 AE               xor (hl)
 774+ 994A 77               ld (hl),a
 775+ 994B 1C               inc e
 776+ 994C 1C               inc e
 777+ 994D 1C               inc e
 778+ 994E
 779+ 994E E1               pop hl
 780+ 994F
 781+ 994F 1A               ld a,(de)
 782+ 9950 AE               xor (hl)
 783+ 9951 77               ld (hl),a
 784+ 9952 1C               inc e
 785+ 9953 1C               inc e
 786+ 9954 1C               inc e
 787+ 9955
 788+ 9955 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 789+ 9959 ED 7B 2D 8C      ld sp,(Stack)
 790+ 995D C9               ret
 791+ 995E
 792+ 995E              Pinta_lento_1Char_right
 793+ 995E
 794+ 995E E1           3 pop hl
 795+ 995F
 796+ 995F 1A               ld a,(de)
 797+ 9960 AE               xor (hl)
 798+ 9961 77               ld (hl),a
 799+ 9962 1C               inc e
 800+ 9963 1C               inc e
 801+ 9964 1C               inc e
 802+ 9965
 803+ 9965 10 F7            djnz 3B
 804+ 9967
 805+ 9967 ED 73 4F 8C      ld (Scanlines_album_SP),sp
 806+ 996B ED 7B 2D 8C      ld sp,(Stack)
 807+ 996F C9               ret
# file closed: Rutinas_de_pintado.asm
2390  9970              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9970              ; ******************************************************************************************************************************************************************************************
   2+ 9970              ;
   3+ 9970              ; 26/06/23
   4+ 9970              ;
   5+ 9970              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9970
   7+ 9970              Draw
   8+ 9970
   9+ 9970 CD 16 9C     	call Prepara_draw
  10+ 9973 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9974 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9975 28 05        	jr z,2F
  13+ 9977
  14+ 9977 3A FD 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 997A 18 0C        	jr 1F
  16+ 997C
  17+ 997C 2A FB 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 997F 22 EE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9982 CD 0E 9B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9985              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9985
  22+ 9985 CD 9B A0     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9988
  24+ 9988 3A EB 8B     1 ld a,(Ctrl_0)
  25+ 998B CB 6F        	bit 5,a
  26+ 998D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 998F
  28+ 998F CD A4 99     	call Comprueba_limite_horizontal
  29+ 9992 CD 34 9A     	call Comprueba_limite_vertical
  30+ 9995
  31+ 9995              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9995              ; -----------------------
  33+ 9995              ; -----------------------
  34+ 9995              ; -----------------------
  35+ 9995
  36+ 9995 CD 8A 9B     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9998 CD C1 9B     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 999B
  39+ 999B 3A EB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 999E CB AF        	res 5,a											; _a ser de utilidad.
  41+ 99A0 32 EB 8B     	ld (Ctrl_0),a
  42+ 99A3
  43+ 99A3 C9           	ret
  44+ 99A4
  45+ 99A4              ; *******************************************************************************************************************************************************************************************
  46+ 99A4              ;	21/01/23
  47+ 99A4              ;
  48+ 99A4              ; 	Comprueba_limite_horizontal.
  49+ 99A4              ;
  50+ 99A4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 99A4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 99A4              ;
  53+ 99A4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 99A4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 99A4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 99A4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 99A4
  58+ 99A4
  59+ 99A4
  60+ 99A4 3A EB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 99A7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 99A9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 99AB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 99AD 32 EB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 99B0 18 09            jr 6F
  66+ 99B2 CB 5F        1 bit 3,a
  67+ 99B4 28 0A            jr z,2F
  68+ 99B6 E6 F7            and $f7
  69+ 99B8 32 EB 8B         ld (Ctrl_0),a
  70+ 99BB CD 0E 9B     6 call Inicializacion
  71+ 99BE 18 5B            jr 5F
  72+ 99C0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 99C1
  74+ 99C1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 99C1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 99C1
  77+ 99C1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 99C2 2A FF 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 99C5 CD 98 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 99C8 67           	ld h,a
  81+ 99C9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 99CA CD 98 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 99CD 67           	ld h,a
  84+ 99CE A7           	and a
  85+ 99CF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 99D1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 99D2 3A FD 8B     	ld a,(Cuad_objeto)
  88+ 99D5 FE 02        	cp 2
  89+ 99D7 38 1E        	jr c,3F
  90+ 99D9 28 1C        	jr z,3F
  91+ 99DB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 99DC 28 23            jr z,7F
  93+ 99DE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 99E0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 99E2 E1           	pop hl
  96+ 99E3
  97+ 99E3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 99E3              ; _para indicar con E="2" en caso necesario.
  99+ 99E3
 100+ 99E3 E5               push hl
 101+ 99E4 C5               push bc
 102+ 99E5 CD 98 95     	call calcula_tercio
 103+ 99E8 FE 01        	cp 1
 104+ 99EA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 99EC CD 1C 9A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 99EF 28 26            jr z,9F
 107+ 99F1 38 24            jr c,9F
 108+ 99F3 1E 00        11 ld e,0
 109+ 99F5 18 22            jr 8F
 110+ 99F7 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 99F8 28 07        	jr z, 7F
 112+ 99FA 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 99FC 1E 00         	ld e,0
 114+ 99FE E1           	pop hl
 115+ 99FF 18 04        	jr 4F
 116+ 9A01 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9A03 18 15            jr 10F
 118+ 9A05
 119+ 9A05              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9A05              ; _para indicar con E="2" en caso necesario.
 121+ 9A05
 122+ 9A05 E5           4 push hl
 123+ 9A06 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9A07 CD 98 95     	call calcula_tercio
 125+ 9A0A FE 01        	cp 1
 126+ 9A0C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9A0E CD 1C 9A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9A11 28 04            jr z,9F
 129+ 9A13 30 02            jr nc,9F
 130+ 9A15 18 02        	jr 8F
 131+ 9A17 1E 02        9 ld e,2
 132+ 9A19 C1           8 pop bc
 133+ 9A1A E1           10 pop hl
 134+ 9A1B C9           5 ret
 135+ 9A1C
 136+ 9A1C              ; --------------------
 137+ 9A1C              ;
 138+ 9A1C              ; 25/08/22
 139+ 9A1C
 140+ 9A1C CD 98 95     Comprueba_centro call calcula_tercio
 141+ 9A1F 67               ld h,a
 142+ 9A20 08           	ex af,af
 143+ 9A21 FE 02        	cp 2
 144+ 9A23 38 07        	jr c,1F
 145+ 9A25 28 05        	jr z,1F
 146+ 9A27 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9A2A 18 03        	jr 2F
 148+ 9A2C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9A2F 08           2 ex af,af
 150+ 9A30 A7               and a
 151+ 9A31 ED 42            sbc hl,bc
 152+ 9A33 C9               ret
 153+ 9A34
 154+ 9A34              ; *********************************************************************************************************************************************************************************************
 155+ 9A34              ;
 156+ 9A34              ;   16/8/22
 157+ 9A34              ;
 158+ 9A34              ;	Comprueba_limite_vertical
 159+ 9A34              ;
 160+ 9A34              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9A34              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9A34              ;
 163+ 9A34
 164+ 9A34 2A EE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9A37 7D           	ld a,l
 166+ 9A38 E6 1F        	and $1F
 167+ 9A3A 57           	ld d,a
 168+ 9A3B 3A 01 8C     	ld a,(Limite_vertical)
 169+ 9A3E BA           	cp d 											; Límite - Posición.
 170+ 9A3F 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9A40 3A FD 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9A43 CB 47        	bit 0,a
 173+ 9A45 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9A47
 175+ 9A47              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9A47
 177+ 9A47 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9A48 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9A4A
 180+ 9A4A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9A4A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9A4A
 183+ 9A4A 3A DF 8B         ld a,(Coordenada_X)
 184+ 9A4D 16 0F            ld d,Centro_izquierda
 185+ 9A4F A7               and a
 186+ 9A50 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9A51 28 1E            jr z,3F
 188+ 9A53 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9A55              ;                                                    ; _salimos sin modificar nada.
 190+ 9A55 18 0E            jr 2F
 191+ 9A57 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9A58 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9A5A
 194+ 9A5A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9A5A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9A5A
 197+ 9A5A 3A DF 8B         ld a,(Coordenada_X)
 198+ 9A5D 16 10            ld d,Centro_derecha
 199+ 9A5F A7               and a
 200+ 9A60 92               sub d
 201+ 9A61 28 0E            jr z,3F
 202+ 9A63 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9A65              ;                                                    ; _salimos sin modificar nada.
 204+ 9A65 CB 43        2 bit 0,e
 205+ 9A67 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9A69 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9A6A CD FE 9A         call Modificaccionne
 208+ 9A6D C1           	pop bc
 209+ 9A6E CD 0E 9B         call Inicializacion
 210+ 9A71 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9A72
 212+ 9A72              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9A72
 214+ 9A72 C5           4 push bc
 215+ 9A73 01 ED 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9A76 0A           	ld a,(bc)
 217+ 9A77 3D           	dec a
 218+ 9A78 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9A79 7D           	ld a,l
 220+ 9A7A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9A7B CB 47        	bit 0,a
 222+ 9A7D 28 03        	jr z,5F
 223+ 9A7F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9A80 18 2E        	jr 7F
 225+ 9A82
 226+ 9A82              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9A82
 228+ 9A82 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9A83 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9A84 3A EB 8B     	ld a,(Ctrl_0)
 231+ 9A87 CB 4F        	bit 1,a
 232+ 9A89 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9A8B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9A8C
 235+ 9A8C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9A8C
 237+ 9A8C 1C               inc e
 238+ 9A8D 1D               dec e
 239+ 9A8E 20 07            jr nz,12F
 240+ 9A90 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9A91 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9A92 22 EE 8B     	ld (Posicion_actual),hl
 243+ 9A95 18 44        13 jr 9F
 244+ 9A97 CB 43        12 bit 0,e
 245+ 9A99 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9A9B              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9A9B C1           	pop bc
 248+ 9A9C 18 D3        	jr 3B
 249+ 9A9E 80           14 add b
 250+ 9A9F 6F               ld l,a
 251+ 9AA0 22 EE 8B     	ld (Posicion_actual),hl
 252+ 9AA3 CD FE 9A         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9AA6 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9AA8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9AAA 32 EB 8B         ld (Ctrl_0),a
 256+ 9AAD F1           	pop af
 257+ 9AAE 18 2B        	jr 9F
 258+ 9AB0
 259+ 9AB0              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9AB0
 261+ 9AB0 F5           7 push af
 262+ 9AB1 3A EB 8B     	ld a,(Ctrl_0)
 263+ 9AB4 CB 47        	bit 0,a
 264+ 9AB6 20 1D        	jr nz,8F
 265+ 9AB8 F1           	pop af
 266+ 9AB9
 267+ 9AB9              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9AB9
 269+ 9AB9 1C           	inc e
 270+ 9ABA 1D               dec e
 271+ 9ABB 20 07            jr nz,10F
 272+ 9ABD 90           	sub b
 273+ 9ABE 6F               ld l,a
 274+ 9ABF 22 EE 8B     	ld (Posicion_actual),hl
 275+ 9AC2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9AC4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9AC4 CB 43        10 bit 0,e
 278+ 9AC6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9AC8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9AC8 C1           	pop bc
 281+ 9AC9 18 A6        	jr 3B
 282+ 9ACB 90           16 sub b
 283+ 9ACC 6F               ld l,a
 284+ 9ACD 22 EE 8B     	ld (Posicion_actual),hl
 285+ 9AD0 CD FE 9A         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9AD3 18 06            jr 9F
 287+ 9AD5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9AD7 32 EB 8B         ld (Ctrl_0),a
 289+ 9ADA F1           	pop af
 290+ 9ADB C1           9 pop bc
 291+ 9ADC 1E 00        	ld e,0
 292+ 9ADE CD 0E 9B         call Inicializacion
 293+ 9AE1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9AE2 08           	ex af,af
 295+ 9AE3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9AE4 18 8B            jr 3B
 297+ 9AE6
 298+ 9AE6              ; --------------------
 299+ 9AE6
 300+ 9AE6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9AE8 CD 31 9C     1 call PreviousScan
 302+ 9AEB 10 FB            djnz 1B
 303+ 9AED 22 EE 8B     	ld (Posicion_actual),hl
 304+ 9AF0 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9AF1 C9           	ret
 306+ 9AF2
 307+ 9AF2              ; --------------------
 308+ 9AF2
 309+ 9AF2 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9AF4 CD 22 9C     1 call NextScan
 311+ 9AF7 10 FB            djnz 1B
 312+ 9AF9 22 EE 8B     	ld (Posicion_actual),hl
 313+ 9AFC AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9AFD C9           	ret
 315+ 9AFE
 316+ 9AFE              ; --------------------
 317+ 9AFE              ;
 318+ 9AFE              ;	22/01/23
 319+ 9AFE              ;
 320+ 9AFE              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9AFE              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9AFE              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9AFE
 324+ 9AFE
 325+ 9AFE              Modificaccionne
 326+ 9AFE
 327+ 9AFE 3A FD 8B     	ld a,(Cuad_objeto)
 328+ 9B01 FE 02        	cp 2
 329+ 9B03 CC E6 9A         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9B06 DC E6 9A         call c,Modifica_Pos_actual
 331+ 9B09 C8           	ret z
 332+ 9B0A CD F2 9A         call Modifica_Pos_actual2
 333+ 9B0D C9               ret
 334+ 9B0E
 335+ 9B0E              ; *************************************************************************************************************************************************************************************************
 336+ 9B0E              ;
 337+ 9B0E              ;	13/8/22
 338+ 9B0E              ;
 339+ 9B0E              ;	Inicializacion
 340+ 9B0E              ;
 341+ 9B0E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9B0E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9B0E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9B0E              ;
 345+ 9B0E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9B0E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9B0E              ;	_ desaparece/aparece.
 348+ 9B0E
 349+ 9B0E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9B0E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9B0E              ;
 352+ 9B0E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9B0E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9B0E              ; 		   [E] ="0"
 355+ 9B0E
 356+ 9B0E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9B0E
 358+ 9B0E CD 98 95     Inicializacion call calcula_tercio
 359+ 9B11 28 36        	jr z,primit
 360+ 9B13 E6 02        	and 2
 361+ 9B15 20 07        	jr nz,segmit
 362+ 9B17 7D           	ld a,l
 363+ 9B18 FE 7F        	cp $7f
 364+ 9B1A 38 2D        	jr c,primit
 365+ 9B1C 28 2B        	jr z,primit
 366+ 9B1E CD 84 9B     segmit call column
 367+ 9B21 38 13        	jr c,tercuad
 368+ 9B23 3E 04        cuarcuad ld a,4
 369+ 9B25 32 FD 8B     	ld (Cuad_objeto),a
 370+ 9B28 21 20 48     	ld hl,$4820
 371+ 9B2B 22 FF 8B     	ld (Limite_horizontal),hl
 372+ 9B2E 21 01 8C     	ld hl,Limite_vertical
 373+ 9B31 36 0D        	ld (hl),$0d
 374+ 9B33 08           	ex af,af
 375+ 9B34 18 3C        	jr 1F
 376+ 9B36              tercuad
 377+ 9B36 3E 03        	ld a,3
 378+ 9B38 32 FD 8B     	ld (Cuad_objeto),a
 379+ 9B3B 21 20 48     	ld hl,$4820
 380+ 9B3E 22 FF 8B     	ld (Limite_horizontal),hl
 381+ 9B41 21 01 8C     	ld hl,Limite_vertical
 382+ 9B44 36 12        	ld (hl),$12
 383+ 9B46 08           	ex af,af
 384+ 9B47 18 29        	jr 1F
 385+ 9B49 CD 84 9B     primit call column
 386+ 9B4C 38 13        	jr c, primcuad
 387+ 9B4E              segcuad
 388+ 9B4E 3E 02        	ld a,2
 389+ 9B50 32 FD 8B     	ld (Cuad_objeto),a
 390+ 9B53 21 C0 4F     	ld hl,$4fc0
 391+ 9B56 22 FF 8B     	ld (Limite_horizontal),hl
 392+ 9B59 21 01 8C     	ld hl,Limite_vertical
 393+ 9B5C 36 0D        	ld (hl),$0d
 394+ 9B5E 08           	ex af,af
 395+ 9B5F 18 11        	jr 1F
 396+ 9B61              primcuad
 397+ 9B61 3E 01        	ld a,1
 398+ 9B63 32 FD 8B     	ld (Cuad_objeto),a
 399+ 9B66 21 C0 4F     	ld hl,$4fc0
 400+ 9B69 22 FF 8B     	ld (Limite_horizontal),hl
 401+ 9B6C 21 01 8C     	ld hl,Limite_vertical
 402+ 9B6F 36 12        	ld (hl),$12
 403+ 9B71 08           	ex af,af
 404+ 9B72
 405+ 9B72 C5           1 push bc
 406+ 9B73 E5           	push hl
 407+ 9B74 D5           	push de
 408+ 9B75
 409+ 9B75 2A EE 8B     	ld hl,(Posicion_actual)
 410+ 9B78 CD B6 95     	call Genera_coordenadas
 411+ 9B7B
 412+ 9B7B D1           	pop de
 413+ 9B7C E1           	pop hl
 414+ 9B7D C1           	pop bc
 415+ 9B7E
 416+ 9B7E 21 EB 8B     	ld hl,Ctrl_0
 417+ 9B81 CB EE        	set 5,(hl)
 418+ 9B83 C9           	ret
 419+ 9B84
 420+ 9B84              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9B84
 422+ 9B84              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9B84              ;
 424+ 9B84              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9B84
 426+ 9B84 7D           column ld a,l
 427+ 9B85 E6 1F        	and $1f
 428+ 9B87 FE 10         	cp $10
 429+ 9B89 C9            	ret
 430+ 9B8A
 431+ 9B8A              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9B8A              ;
 433+ 9B8A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9B8A              ;
 435+ 9B8A              ; 14/12/22
 436+ 9B8A              ;
 437+ 9B8A              ;	Modifica: A y BC.
 438+ 9B8A
 439+ 9B8A 3A FD 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9B8D E6 01        	and 1
 441+ 9B8F 28 17        	jr z,1F
 442+ 9B91
 443+ 9B91              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9B91
 445+ 9B91 3A DF 8B     	ld a,(Coordenada_X)
 446+ 9B94 47           	ld b,a
 447+ 9B95 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9B96 79           	ld a,c
 449+ 9B97 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9B98 38 08        	jr c,2F
 451+ 9B9A 47           	ld b,a
 452+ 9B9B 79           	ld a,c
 453+ 9B9C 90           	sub b
 454+ 9B9D 32 FE 8B     	ld (Columnas),a
 455+ 9BA0 18 1B        	jr 4F
 456+ 9BA2 79           2 ld a,c
 457+ 9BA3 32 FE 8B     	ld (Columnas),a
 458+ 9BA6 18 15        	jr 4F
 459+ 9BA8
 460+ 9BA8              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9BA8
 462+ 9BA8 3A DF 8B     1 ld a,(Coordenada_X)
 463+ 9BAB 81           	add c
 464+ 9BAC 3D           	dec a
 465+ 9BAD D6 1F        	sub $1f
 466+ 9BAF 38 08        	jr c,3F
 467+ 9BB1 47           	ld b,a
 468+ 9BB2 79           	ld a,c
 469+ 9BB3 90           	sub b
 470+ 9BB4 32 FE 8B     	ld (Columnas),a
 471+ 9BB7 18 04        	jr 4F
 472+ 9BB9 79           3 ld a,c
 473+ 9BBA 32 FE 8B     	ld (Columnas),a
 474+ 9BBD D9           4 exx
 475+ 9BBE 4F           	ld c,a
 476+ 9BBF D9           	exx
 477+ 9BC0 C9            ret
 478+ 9BC1
 479+ 9BC1              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9BC1              ;
 481+ 9BC1              ;   19/7/23
 482+ 9BC1              ;
 483+ 9BC1              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9BC1              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9BC1              ;
 486+ 9BC1              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9BC1              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9BC1              ;
 489+ 9BC1              ;	DESTRUYE: HL,B Y A.
 490+ 9BC1
 491+ 9BC1 3A FD 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9BC4 FE 02        	cp 2
 493+ 9BC6 38 18        	jr c,1F
 494+ 9BC8 28 16        	jr z,1F
 495+ 9BCA E6 01        	and 1
 496+ 9BCC 28 0D        	jr z,3F
 497+ 9BCE
 498+ 9BCE              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9BCE
 500+ 9BCE CD 0A 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9BD1
 502+ 9BD1 7D           9 ld a,l
 503+ 9BD2 E6 1F        	and $1f
 504+ 9BD4 28 2A        	jr z,7F
 505+ 9BD6 2B           	dec hl
 506+ 9BD7 10 F8        	djnz 9B
 507+ 9BD9 18 25        	jr 7F
 508+ 9BDB
 509+ 9BDB              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9BDB
 511+ 9BDB 2A EE 8B     3 ld hl,(Posicion_actual)
 512+ 9BDE 18 20        	jr 7F
 513+ 9BE0
 514+ 9BE0 28 14        1 jr z,2F
 515+ 9BE2
 516+ 9BE2              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9BE2
 518+ 9BE2 CD 0A 9C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9BE5
 520+ 9BE5 7D           4 ld a,l
 521+ 9BE6 E6 1F        	and $1f
 522+ 9BE8 28 03        	jr z,6F
 523+ 9BEA 2B           	dec hl
 524+ 9BEB 10 F8        	djnz 4B
 525+ 9BED 06 0F        6 ld b,15
 526+ 9BEF CD 31 9C     5 call PreviousScan
 527+ 9BF2 10 FB        	djnz 5B
 528+ 9BF4 18 0A        	jr 7F
 529+ 9BF6
 530+ 9BF6              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9BF6
 532+ 9BF6 CD 0A 9C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9BF9 06 0F        	ld b,15
 534+ 9BFB CD 31 9C     8 call PreviousScan
 535+ 9BFE 10 FB        	djnz 8B
 536+ 9C00
 537+ 9C00 E5           7 push hl
 538+ 9C01 DD E1        	pop ix
 539+ 9C03
 540+ 9C03 2A F0 8B     	ld hl,(Puntero_objeto)
 541+ 9C06 E5           	push hl
 542+ 9C07 FD E1        	pop iy
 543+ 9C09
 544+ 9C09 C9           	ret
 545+ 9C0A
 546+ 9C0A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9C0A              ;
 548+ 9C0A              ;	2/1/23
 549+ 9C0A              ;
 550+ 9C0A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9C0A              ;
 552+ 9C0A              ;	Tras esta rutina tenemos:
 553+ 9C0A              ;
 554+ 9C0A              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9C0A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9C0A              ;
 557+ 9C0A              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9C0A
 559+ 9C0A 2A EE 8B     Operandos ld hl,(Posicion_actual)
 560+ 9C0D 3A FE 8B     	ld a,(Columnas)
 561+ 9C10 3D           	dec a
 562+ 9C11 20 01        	jr nz,1F
 563+ 9C13 3C           	inc a
 564+ 9C14 47           1 ld b,a
 565+ 9C15 C9           	ret
 566+ 9C16
 567+ 9C16              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9C16              ;
 569+ 9C16              ;	Prepara_draw
 570+ 9C16              ;
 571+ 9C16              ;	Es una rutina de carga.
 572+ 9C16              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9C16              ;
 574+ 9C16              ;	FUNCIONAMIENTO:
 575+ 9C16              ;
 576+ 9C16              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9C16              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9C16              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9C16              ;
 580+ 9C16              ;	DESTRUYE:
 581+ 9C16              ;
 582+ 9C16              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9C16
 584+ 9C16 21 EC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9C19 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9C1A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9C1B 4E           	ld c,(hl)
 588+ 9C1C 2A EE 8B     	ld hl,(Posicion_actual)
 589+ 9C1F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9C21 C9           	ret
 591+ 9C22
 592+ 9C22              ;----------------------------------------------------------------------------------------------------------------
 593+ 9C22              ;
 594+ 9C22              ;	5/08/22
 595+ 9C22              ;
 596+ 9C22              ;   NextScan.
 597+ 9C22              ;
 598+ 9C22              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9C22              ;
 600+ 9C22              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9C22              ;
 602+ 9C22              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9C22              ;
 604+ 9C22              ;       DESTRUIDOS: AF y HL !!!
 605+ 9C22              ;
 606+ 9C22              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9C22              ;
 608+ 9C22
 609+ 9C22 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9C23 7C               ld a,h
 611+ 9C24 E6 07            and 7
 612+ 9C26 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9C27
 614+ 9C27 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9C28 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9C2A 6F               ld l,a
 617+ 9C2B D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9C2C
 619+ 9C2C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9C2D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9C2F 67               ld h,a
 622+ 9C30 C9               ret
 623+ 9C31
 624+ 9C31              ;----------------------------------------------------------------------------------------------------------------
 625+ 9C31              ;
 626+ 9C31              ;	5/08/22
 627+ 9C31              ;
 628+ 9C31              ;   PreviousScan.
 629+ 9C31              ;
 630+ 9C31              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9C31              ;
 632+ 9C31              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9C31              ;
 634+ 9C31              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9C31              ;
 636+ 9C31              ;       DESTRUIDOS: AF y HL !!!
 637+ 9C31              ;
 638+ 9C31              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9C31              ;
 640+ 9C31
 641+ 9C31 7C           PreviousScan ld a,h
 642+ 9C32 25               dec h               ; Dec H.
 643+ 9C33 E6 07            and 7
 644+ 9C35 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9C36
 646+ 9C36 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9C37 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9C39 6F               ld l,a
 649+ 9C3A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9C3B
 651+ 9C3B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9C3C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9C3E 67               ld h,a
 654+ 9C3F C9               ret
 655+ 9C40
 656+ 9C40
 657+ 9C40
 658+ 9C40
 659+ 9C40
 660+ 9C40
 661+ 9C40
 662+ 9C40
 663+ 9C40
 664+ 9C40
 665+ 9C40
 666+ 9C40
# file closed: Draw_XOR.asm
2391  9C40              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9C40
   2+ 9C40              ; ******************************************************************************************************************************************************************************************
   3+ 9C40              ;
   4+ 9C40              ;   20/05/23
   5+ 9C40              ;
   6+ 9C40              ;	Recompone_posicion_inicio
   7+ 9C40              ;
   8+ 9C40              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9C40              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9C40              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9C40              ;	_ a una u otra rutina.
  12+ 9C40
  13+ 9C40              Recompone_posicion_inicio
  14+ 9C40
  15+ 9C40 2A FB 8B     	ld hl,(Posicion_inicio)
  16+ 9C43 7D           	ld a,l
  17+ 9C44 E6 1F        	and $1f
  18+ 9C46 28 16        	jr z,1F
  19+ 9C48
  20+ 9C48 FE 1F        	cp $1f
  21+ 9C4A 28 0D        	jr z,3F
  22+ 9C4C
  23+ 9C4C 21 EA 8B     	ld hl,Ctrl_2
  24+ 9C4F CB C6        	set 0,(hl)
  25+ 9C51 2A F0 8B     	ld hl,(Puntero_objeto)
  26+ 9C54 22 1C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9C57 18 08        	jr 2F
  28+ 9C59
  29+ 9C59 CD F8 9D     3 call Mov_left
  30+ 9C5C 18 03        	jr 2F
  31+ 9C5E
  32+ 9C5E CD DA 9C     1 call Mov_right
  33+ 9C61 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9C64 22 F0 8B     	ld (Puntero_objeto),hl
  35+ 9C67 C9           	ret
  36+ 9C68
  37+ 9C68              ; ******************************************************************************************************************************************************************************************
  38+ 9C68              ;
  39+ 9C68              ;   27/05/23
  40+ 9C68              ;
  41+ 9C68              ;	Mov_down
  42+ 9C68              ;
  43+ 9C68              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9C68              ;
  45+ 9C68              ;
  46+ 9C68              Mov_down
  47+ 9C68
  48+ 9C68 CD C8 9C     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9C6B              ;																	; _ repone (Puntero_objeto).
  50+ 9C6B              ;	ld hl,Ctrl_0
  51+ 9C6B              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9C6B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9C6B              ; 																	; _ en el caso de que no lo haya.
  54+ 9C6B 3A 06 8C     	ld a,(Vel_down)
  55+ 9C6E 47           	ld b,a
  56+ 9C6F 2A EE 8B         ld hl,(Posicion_actual)
  57+ 9C72 CD 98 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9C75 E6 02        	and 2
  59+ 9C77 28 17        	jr z,1F
  60+ 9C79
  61+ 9C79              ; Nos encontramos en el último tercio de pantalla.
  62+ 9C79              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9C79
  64+ 9C79 7C           	ld a,h
  65+ 9C7A FE 57        	cp $57
  66+ 9C7C 20 12        	jr nz,1F
  67+ 9C7E
  68+ 9C7E 7D           	ld a,l
  69+ 9C7F C6 20        	add $20
  70+ 9C81 30 0D        	jr nc,1F
  71+ 9C83
  72+ 9C83              ; ------------------------------
  73+ 9C83              ;
  74+ 9C83              ;	12/01/24
  75+ 9C83
  76+ 9C83              ;	call Reaparece_arriba
  77+ 9C83 CD 80 9F     	call Reinicio
  78+ 9C86
  79+ 9C86              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9C86
  81+ 9C86 3A 55 8C     	ld a,(Ctrl_3)
  82+ 9C89 CB CF        	set 1,a
  83+ 9C8B 32 55 8C     	ld (Ctrl_3),a
  84+ 9C8E
  85+ 9C8E 18 08        	jr 3F
  86+ 9C90              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9C90              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9C90              ; ------------------------------
  89+ 9C90
  90+ 9C90 CD 22 9C     1 call NextScan
  91+ 9C93 22 EE 8B     	ld (Posicion_actual),hl
  92+ 9C96 10 DA            djnz 2B
  93+ 9C98 CD B6 95     3 call Genera_coordenadas
  94+ 9C9B C9           	ret
  95+ 9C9C
  96+ 9C9C              ; ******************************************************************************************************************************************************************************************
  97+ 9C9C              ;
  98+ 9C9C              ;   27/05/23
  99+ 9C9C              ;
 100+ 9C9C              ;	Mov_up
 101+ 9C9C              ;
 102+ 9C9C              ; 	Mueve el Sprite hacia arriba.
 103+ 9C9C              ;
 104+ 9C9C              ;
 105+ 9C9C              Mov_up
 106+ 9C9C
 107+ 9C9C CD C8 9C     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9C9F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9C9F              ;	ld hl,Ctrl_0
 110+ 9C9F              ;	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9C9F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9C9F              ; 																		; _ en el caso de que no lo haya.
 113+ 9C9F 3A 05 8C     	ld a,(Vel_up)
 114+ 9CA2 47           	ld b,a
 115+ 9CA3 2A EE 8B     	ld hl,(Posicion_actual)
 116+ 9CA6 CD 98 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9CA9 A7           	and a
 118+ 9CAA 20 10        	jr nz,1F
 119+ 9CAC
 120+ 9CAC              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9CAC              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9CAC
 123+ 9CAC 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9CAD FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9CAF 20 0B            jr nz,1F
 126+ 9CB1 7D               ld a,l
 127+ 9CB2 D6 20            sub $20
 128+ 9CB4 30 06            jr nc,1F
 129+ 9CB6 25               dec h
 130+ 9CB7
 131+ 9CB7              ; -----------------------------
 132+ 9CB7 CD 61 9F         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9CBA              ;	call Reinicio
 134+ 9CBA              ; -----------------------------
 135+ 9CBA
 136+ 9CBA 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9CBC CD 31 9C     1 call PreviousScan
 138+ 9CBF 22 EE 8B     	ld (Posicion_actual),hl
 139+ 9CC2 10 E2            djnz 3B
 140+ 9CC4 CD B6 95     2 call Genera_coordenadas
 141+ 9CC7 C9           	ret
 142+ 9CC8
 143+ 9CC8              ; -----------------------------
 144+ 9CC8              ;
 145+ 9CC8              ;	27/5/23
 146+ 9CC8              ;
 147+ 9CC8              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9CC8              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9CC8              ;
 150+ 9CC8              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9CC8              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9CC8              ;
 153+ 9CC8              ;	Modifica: A y (Puntero_objeto).
 154+ 9CC8
 155+ 9CC8 3A EA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9CCB CB 47        	bit 0,a
 157+ 9CCD C8           	ret z
 158+ 9CCE CB 87        	res 0,a
 159+ 9CD0 32 EA 8B     	ld (Ctrl_2),a
 160+ 9CD3 2A 1C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9CD6 22 F0 8B     	ld (Puntero_objeto),hl
 162+ 9CD9 C9           	ret
 163+ 9CDA
 164+ 9CDA              ; ******************************************************************************************************************************************************************************************
 165+ 9CDA              ;
 166+ 9CDA              ;	19/10/22
 167+ 9CDA              ;
 168+ 9CDA              ;	Mov_right.
 169+ 9CDA              ;
 170+ 9CDA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9CDA              ;
 172+ 9CDA
 173+ 9CDA 3A EB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9CDD CB 77        	bit 6,a
 175+ 9CDF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9CE1
 177+ 9CE1 CD 0F 9F     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9CE4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9CE5
 180+ 9CE5 21 EB 8B     	ld hl,Ctrl_0
 181+ 9CE8 CB E6        	set 4,(hl)
 182+ 9CEA 18 4D        	jr 8F
 183+ 9CEC
 184+ 9CEC              10
 185+ 9CEC
 186+ 9CEC              ;! Probar a quitar este bit de control, creo que ya no tiene sentido.
 187+ 9CEC              ;	ld hl,Ctrl_0
 188+ 9CEC              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 189+ 9CEC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 190+ 9CEC              ; 																	; _ en el caso de que no lo haya.
 191+ 9CEC 3A DF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 192+ 9CEF FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 193+ 9CF1 20 46        	jr nz,8F
 194+ 9CF3
 195+ 9CF3 3A F2 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 196+ 9CF6 A7           	and a 															; _[3] para continuar con el DESPLZ.
 197+ 9CF7 28 40        	jr z,8F
 198+ 9CF9
 199+ 9CF9              ; ---------- ---------- ----------
 200+ 9CF9              ;
 201+ 9CF9              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 202+ 9CF9
 203+ 9CF9 3A 04 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 204+ 9CFC FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 205+ 9CFE 28 11        	jr z,1F
 206+ 9D00 38 06        	jr c,6F
 207+ 9D02 FE 04        	cp 4
 208+ 9D04 28 14        	jr z,7F
 209+ 9D06 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 210+ 9D08
 211+ 9D08              ; ---------- ---------- ----------
 212+ 9D08              ;
 213+ 9D08              ; Perfiles de velocidad
 214+ 9D08              ;
 215+ 9D08
 216+ 9D08 3A F2 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 217+ 9D0B FE FE        	cp $fe
 218+ 9D0D 20 2A        	jr nz,8F
 219+ 9D0F 18 10        	jr 3F
 220+ 9D11 3A F2 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 221+ 9D14 FE FD        	cp $fd
 222+ 9D16 20 21        	jr nz,8F
 223+ 9D18 18 07        	jr 3F
 224+ 9D1A 3A F2 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 225+ 9D1D FE FB        	cp $fb
 226+ 9D1F 20 18        	jr nz,8F
 227+ 9D21
 228+ 9D21              ; ---------- ---------- ----------
 229+ 9D21
 230+ 9D21              3
 231+ 9D21 CD 4F 9F     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 232+ 9D24              ;	call Reinicio
 233+ 9D24
 234+ 9D24              ; ---------- ---------- ----------
 235+ 9D24              ;
 236+ 9D24              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 237+ 9D24
 238+ 9D24 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 239+ 9D26 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 240+ 9D27 CD 40 9D     	call DESPLZ_DER
 241+ 9D2A C1           	pop bc
 242+ 9D2B 10 F9        	djnz 5B
 243+ 9D2D 2A EE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 244+ 9D30 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 245+ 9D31 22 EE 8B     	ld (Posicion_actual),hl
 246+ 9D34 CD B6 95     	call Genera_coordenadas
 247+ 9D37 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 248+ 9D39
 249+ 9D39              ; ---------- ---------- ----------
 250+ 9D39
 251+ 9D39 2A EE 8B     8 ld hl,(Posicion_actual)
 252+ 9D3C CD 40 9D     	call DESPLZ_DER
 253+ 9D3F C9           2 ret
 254+ 9D40
 255+ 9D40              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 256+ 9D40              ;
 257+ 9D40              ;	22/9/22
 258+ 9D40              ;
 259+ 9D40
 260+ 9D40 CD 4F 9D     DESPLZ_DER call Desplaza_derecha
 261+ 9D43 CD 9B 9D         call modifica_parametros_1er_DESPLZ_2
 262+ 9D46 CD C4 9D         call Ciclo_completo
 263+ 9D49 21 EB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 264+ 9D4C CB FE        	set 7,(hl)
 265+ 9D4E C9           	ret
 266+ 9D4F
 267+ 9D4F              ; ******************************************************************************************************************************************************************************************
 268+ 9D4F              ;	15/02/23
 269+ 9D4F              ;
 270+ 9D4F
 271+ 9D4F 3A 04 8C     Desplaza_derecha ld a,(Vel_right)
 272+ 9D52 47           	ld b,a
 273+ 9D53 2A F7 8B     	ld hl,(Puntero_DESPLZ_der)
 274+ 9D56 23           1 inc hl
 275+ 9D57 23           	inc hl
 276+ 9D58 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 277+ 9D5A 22 F7 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 278+ 9D5D CD 8E 91     	call Extrae_address
 279+ 9D60 22 F0 8B     	ld (Puntero_objeto),hl
 280+ 9D63
 281+ 9D63              ; Modifica (Puntero_DESPLZ_izq).
 282+ 9D63
 283+ 9D63              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 284+ 9D63              ; Cuántos movimientos hemos hecho ??
 285+ 9D63              ; DE contiene (Puntero_DESPLZ_der).
 286+ 9D63
 287+ 9D63 2A F3 8B     7 ld hl,(Indice_Sprite_der)
 288+ 9D66 EB           	ex de,hl
 289+ 9D67 A7           	and a
 290+ 9D68 ED 52        	sbc hl,de
 291+ 9D6A CB 3D        	srl l
 292+ 9D6C 3E 08        6 ld a,8
 293+ 9D6E 95           	sub l
 294+ 9D6F 30 1E        	jr nc,3F
 295+ 9D71
 296+ 9D71              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 297+ 9D71              ; B="0".
 298+ 9D71
 299+ 9D71 04           4 inc b
 300+ 9D72 3C           	inc a
 301+ 9D73 20 FC        	jr nz,4B
 302+ 9D75 78           	ld a,b
 303+ 9D76 08           	ex af,af
 304+ 9D77 2A F3 8B     	ld hl,(Indice_Sprite_der)
 305+ 9D7A 23           5 inc hl
 306+ 9D7B 23           	inc hl
 307+ 9D7C 10 FC        	djnz 5B
 308+ 9D7E 22 F7 8B     	ld (Puntero_DESPLZ_der),hl
 309+ 9D81 CD 8E 91     	call Extrae_address
 310+ 9D84 22 F0 8B     	ld (Puntero_objeto),hl
 311+ 9D87
 312+ 9D87              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 313+ 9D87              ; _(Posicion_actual).
 314+ 9D87
 315+ 9D87 21 EE 8B     	ld hl,Posicion_actual
 316+ 9D8A 34           	inc (hl)
 317+ 9D8B 08               ex af,af
 318+ 9D8C 6F           	ld l,a
 319+ 9D8D 18 DD        	jr 6B
 320+ 9D8F
 321+ 9D8F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 322+ 9D8F
 323+ 9D8F 47           3 ld b,a
 324+ 9D90 2A F5 8B     	ld hl,(Indice_Sprite_izq)
 325+ 9D93 23           2 inc hl
 326+ 9D94 23           	inc hl
 327+ 9D95 10 FC        	djnz 2B
 328+ 9D97 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
 329+ 9D9A C9           8 ret
 330+ 9D9B
 331+ 9D9B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 332+ 9D9B              ;
 333+ 9D9B              ;	24/7/22
 334+ 9D9B              ;
 335+ 9D9B              ;	modifica_parametros_1er_DESPLZ_2
 336+ 9D9B              ;
 337+ 9D9B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 338+ 9D9B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 339+ 9D9B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 340+ 9D9B
 341+ 9D9B 3A F2 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 342+ 9D9E A7           	and a
 343+ 9D9F 20 1F        	jr nz,1F
 344+ 9DA1 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 345+ 9DA3 32 F2 8B         ld (CTRL_DESPLZ),a
 346+ 9DA6
 347+ 9DA6 21 ED 8B     	ld hl,Columns
 348+ 9DA9 34           	inc (hl)
 349+ 9DAA
 350+ 9DAA 3A FD 8B     	ld a,(Cuad_objeto)
 351+ 9DAD E6 01        	and 1
 352+ 9DAF 28 0F        	jr z,1F
 353+ 9DB1 2A EE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 354+ 9DB4 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 355+ 9DB5 22 EE 8B     	ld (Posicion_actual),hl
 356+ 9DB8 CD B6 95     	call Genera_coordenadas
 357+ 9DBB CD 1B 9F     	call Inc_CTRL_DESPLZ
 358+ 9DBE 18 03        	jr 2F
 359+ 9DC0
 360+ 9DC0 CD 1B 9F     1 call Inc_CTRL_DESPLZ
 361+ 9DC3 C9           2 ret
 362+ 9DC4
 363+ 9DC4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 364+ 9DC4              ;
 365+ 9DC4              ;	24/7/22
 366+ 9DC4              ;
 367+ 9DC4              ;	Ciclo_completo.
 368+ 9DC4              ;
 369+ 9DC4              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 370+ 9DC4              ;
 371+ 9DC4              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 372+ 9DC4              ; 	Decrementamos (Columns).
 373+ 9DC4              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 374+ 9DC4              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 375+ 9DC4
 376+ 9DC4
 377+ 9DC4 3A F2 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 378+ 9DC7 FE FF        	cp $ff
 379+ 9DC9 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 380+ 9DCB E6 F0        	and $f0
 381+ 9DCD 20 28        	jr nz,3F
 382+ 9DCF
 383+ 9DCF              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 384+ 9DCF
 385+ 9DCF 3A F2 8B     	ld a,(CTRL_DESPLZ)
 386+ 9DD2 47           	ld b,a
 387+ 9DD3 3E F8        	ld a,$f8
 388+ 9DD5 80           	add b
 389+ 9DD6 32 F2 8B     	ld (CTRL_DESPLZ),a
 390+ 9DD9 18 1C        	jr 3F
 391+ 9DDB              1
 392+ 9DDB 21 ED 8B     	ld hl,Columns												 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 393+ 9DDE 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 394+ 9DDF AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 395+ 9DE0 32 F2 8B     	ld (CTRL_DESPLZ),a
 396+ 9DE3 3A FD 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 397+ 9DE6 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 398+ 9DE8 20 0A        	jr nz,2F
 399+ 9DEA 2A EE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 400+ 9DED 23           	inc hl
 401+ 9DEE 22 EE 8B     	ld (Posicion_actual),hl
 402+ 9DF1 CD B6 95     	call Genera_coordenadas
 403+ 9DF4
 404+ 9DF4              ; Inicia el puntero de Sprite.
 405+ 9DF4
 406+ 9DF4 CD A0 91     2 call Inicia_puntero_objeto_der
 407+ 9DF7 C9           3 ret
 408+ 9DF8
 409+ 9DF8              ; ******************************************************************************************************************************************************************************************
 410+ 9DF8              ;
 411+ 9DF8              ;	15/02/23
 412+ 9DF8              ;
 413+ 9DF8              ;	Mov_left.
 414+ 9DF8              ;
 415+ 9DF8              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 416+ 9DF8              ;
 417+ 9DF8              Mov_left
 418+ 9DF8
 419+ 9DF8              ;	ld hl,Ctrl_0
 420+ 9DF8              ;	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 421+ 9DF8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 422+ 9DF8              ; 																	; _ en el caso de que no lo haya.
 423+ 9DF8 3A EB 8B     	ld a,(Ctrl_0)
 424+ 9DFB CB 77        	bit 6,a
 425+ 9DFD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 426+ 9DFF
 427+ 9DFF CD 15 9F     	call Stop_Amadeus_left
 428+ 9E02 C8           	ret z
 429+ 9E03 20 4A        	jr nz,8F
 430+ 9E05
 431+ 9E05 3A DF 8B     11 ld a,(Coordenada_X)
 432+ 9E08 A7           	and a
 433+ 9E09 20 44        	jr nz,8F
 434+ 9E0B
 435+ 9E0B 3A F2 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 436+ 9E0E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 437+ 9E0F 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 438+ 9E11
 439+ 9E11              ; ---------- ---------- ----------
 440+ 9E11
 441+ 9E11 3A 03 8C     	ld a,(Vel_left)
 442+ 9E14 FE 02        	cp 2
 443+ 9E16 28 0F        	jr z,1F
 444+ 9E18 38 04        	jr c,6F
 445+ 9E1A FE 04        	cp 4
 446+ 9E1C 28 12        	jr z,7F
 447+ 9E1E
 448+ 9E1E              ; ---------- ---------- ----------
 449+ 9E1E
 450+ 9E1E 3A F2 8B     6 ld a,(CTRL_DESPLZ)
 451+ 9E21 FE F8        	cp $f8
 452+ 9E23 20 2A        	jr nz,8F
 453+ 9E25 18 10        	jr 4F
 454+ 9E27 3A F2 8B     1 ld a,(CTRL_DESPLZ)
 455+ 9E2A FE F9        	cp $f9
 456+ 9E2C 20 21        	jr nz,8F
 457+ 9E2E 18 07        	jr 4F
 458+ 9E30 3A F2 8B     7 ld a,(CTRL_DESPLZ)
 459+ 9E33 FE FB        	cp $fb
 460+ 9E35 20 18        	jr nz,8F
 461+ 9E37
 462+ 9E37              ; ---------- ---------- ----------
 463+ 9E37
 464+ 9E37              4
 465+ 9E37 CD 3D 9F     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 466+ 9E3A              ;	call Reinicio
 467+ 9E3A
 468+ 9E3A              ; ---------- ---------- ----------
 469+ 9E3A
 470+ 9E3A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 471+ 9E3C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 472+ 9E3D
 473+ 9E3D              ;	ld hl,(Indice_Sprite_izq)
 474+ 9E3D              ;	ld (Puntero_DESPLZ_izq),hl
 475+ 9E3D
 476+ 9E3D CD 56 9E     	call DESPLZ_IZQ
 477+ 9E40 C1           	pop bc
 478+ 9E41 10 F9        	djnz 5B
 479+ 9E43 2A EE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 480+ 9E46 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 481+ 9E47 22 EE 8B     	ld (Posicion_actual),hl
 482+ 9E4A CD B6 95     	call Genera_coordenadas
 483+ 9E4D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 484+ 9E4F
 485+ 9E4F              ; ---------- ---------- ----------
 486+ 9E4F
 487+ 9E4F              ; Movemos, no hay recolocación.
 488+ 9E4F
 489+ 9E4F 2A EE 8B     8 ld hl,(Posicion_actual)
 490+ 9E52 CD 56 9E     	call DESPLZ_IZQ
 491+ 9E55 C9           2 ret
 492+ 9E56
 493+ 9E56              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 494+ 9E56              ;
 495+ 9E56              ;	22/9/22
 496+ 9E56
 497+ 9E56              DESPLZ_IZQ
 498+ 9E56
 499+ 9E56 CD 65 9E     	call Desplaza_izquierda
 500+ 9E59 CD B1 9E         call modifica_parametros_1er_DESPLZ
 501+ 9E5C CD D9 9E     	call Ciclo_completo_2
 502+ 9E5F 21 EB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 503+ 9E62 CB BE        	res 7,(hl)
 504+ 9E64 C9           	ret
 505+ 9E65
 506+ 9E65              Desplaza_izquierda
 507+ 9E65
 508+ 9E65 3A 03 8C     	ld a,(Vel_left)
 509+ 9E68 47           	ld b,a
 510+ 9E69 2A F9 8B     	ld hl,(Puntero_DESPLZ_izq)
 511+ 9E6C 23           1 inc hl
 512+ 9E6D 23           	inc hl
 513+ 9E6E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 514+ 9E70 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
 515+ 9E73 CD 8E 91     	call Extrae_address
 516+ 9E76 22 F0 8B     	ld (Puntero_objeto),hl
 517+ 9E79
 518+ 9E79              ; Modifica (Puntero_DESPLZ_der).
 519+ 9E79
 520+ 9E79              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 521+ 9E79              ; Cuántos movimientos hemos hecho ??
 522+ 9E79              ; DE contiene (Puntero_DESPLZ_izq).
 523+ 9E79
 524+ 9E79 2A F5 8B     7 ld hl,(Indice_Sprite_izq)
 525+ 9E7C EB           	ex de,hl
 526+ 9E7D A7           	and a
 527+ 9E7E ED 52        	sbc hl,de
 528+ 9E80 CB 3D        	srl l
 529+ 9E82 3E 08        6 ld a,8
 530+ 9E84 95           	sub l
 531+ 9E85 30 1E        	jr nc,3F
 532+ 9E87
 533+ 9E87              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 534+ 9E87              ; B="0".
 535+ 9E87
 536+ 9E87 04           4 inc b
 537+ 9E88 3C           	inc a
 538+ 9E89 20 FC        	jr nz,4B
 539+ 9E8B 78           	ld a,b
 540+ 9E8C 08           	ex af,af
 541+ 9E8D 2A F5 8B     	ld hl,(Indice_Sprite_izq)
 542+ 9E90 23           5 inc hl
 543+ 9E91 23           	inc hl
 544+ 9E92 10 FC        	djnz 5B
 545+ 9E94 22 F9 8B     	ld (Puntero_DESPLZ_izq),hl
 546+ 9E97 CD 8E 91     	call Extrae_address
 547+ 9E9A 22 F0 8B     	ld (Puntero_objeto),hl
 548+ 9E9D
 549+ 9E9D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 550+ 9E9D              ; _(Posicion_actual).
 551+ 9E9D
 552+ 9E9D 21 EE 8B     	ld hl,Posicion_actual
 553+ 9EA0 35           	dec (hl)
 554+ 9EA1 08           	ex af,af
 555+ 9EA2 6F           	ld l,a
 556+ 9EA3 18 DD        	jr 6B
 557+ 9EA5
 558+ 9EA5              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 559+ 9EA5
 560+ 9EA5 47           3 ld b,a
 561+ 9EA6 2A F3 8B     	ld hl,(Indice_Sprite_der)
 562+ 9EA9 23           2 inc hl
 563+ 9EAA 23           	inc hl
 564+ 9EAB 10 FC        	djnz 2B
 565+ 9EAD 22 F7 8B     	ld (Puntero_DESPLZ_der),hl
 566+ 9EB0 C9           8 ret
 567+ 9EB1
 568+ 9EB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 569+ 9EB1              ;
 570+ 9EB1              ;	modifica_parametros_1er_DESPLZ
 571+ 9EB1              ;
 572+ 9EB1              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 573+ 9EB1              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 574+ 9EB1              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 575+ 9EB1
 576+ 9EB1 3A F2 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 577+ 9EB4 A7           	and a
 578+ 9EB5 20 1E        	jr nz,1F
 579+ 9EB7 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 580+ 9EB8 32 F2 8B         ld (CTRL_DESPLZ),a
 581+ 9EBB 21 ED 8B     	ld hl,Columns
 582+ 9EBE 34           	inc (hl)
 583+ 9EBF 3A FD 8B     	ld a,(Cuad_objeto)
 584+ 9EC2 E6 01        	and 1
 585+ 9EC4 20 0F        	jr nz,1F
 586+ 9EC6 2A EE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 587+ 9EC9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 588+ 9ECA 22 EE 8B     	ld (Posicion_actual),hl
 589+ 9ECD CD B6 95     	call Genera_coordenadas
 590+ 9ED0 CD 2C 9F     	call Dec_CTRL_DESPLZ
 591+ 9ED3 18 03        	jr 2F
 592+ 9ED5 CD 2C 9F     1 call Dec_CTRL_DESPLZ
 593+ 9ED8 C9           2 ret
 594+ 9ED9
 595+ 9ED9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 596+ 9ED9
 597+ 9ED9 3A F2 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 598+ 9EDC FE F7        	cp $f7
 599+ 9EDE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 600+ 9EE0 30 2C        	jr nc,3F
 601+ 9EE2
 602+ 9EE2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 603+ 9EE2
 604+ 9EE2 06 00        	ld b,0
 605+ 9EE4 04           4 inc b
 606+ 9EE5 3C           	inc a
 607+ 9EE6 FE F7        	cp $f7
 608+ 9EE8 20 FA        	jr nz,4B
 609+ 9EEA 3E FF        	ld a,$ff
 610+ 9EEC 90           	sub b
 611+ 9EED 32 F2 8B     	ld (CTRL_DESPLZ),a
 612+ 9EF0 18 1C        	jr 3F
 613+ 9EF2
 614+ 9EF2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 615+ 9EF2
 616+ 9EF2 21 ED 8B     1 ld hl,Columns
 617+ 9EF5 35           	dec (hl)
 618+ 9EF6 AF           	xor a
 619+ 9EF7 32 F2 8B     	ld (CTRL_DESPLZ),a
 620+ 9EFA 3A FD 8B     	ld a,(Cuad_objeto)
 621+ 9EFD E6 01        	and 1
 622+ 9EFF 28 0A        	jr z,2F
 623+ 9F01 2A EE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 624+ 9F04 2B           	dec hl
 625+ 9F05 22 EE 8B     	ld (Posicion_actual),hl
 626+ 9F08 CD B6 95     	call Genera_coordenadas
 627+ 9F0B
 628+ 9F0B              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 629+ 9F0B
 630+ 9F0B CD CC 91     2 call Inicia_puntero_objeto_izq
 631+ 9F0E C9           3 ret
 632+ 9F0F
 633+ 9F0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9F0F              ;
 635+ 9F0F              ;	19/10/22
 636+ 9F0F              ;
 637+ 9F0F              ;	(cp 29) para un Amadeus de 3 Columns.
 638+ 9F0F              ;	(cp 30)   ""  ""    ""     2 Columns.
 639+ 9F0F
 640+ 9F0F 3A DF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 641+ 9F12 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 642+ 9F14 C9           	ret
 643+ 9F15
 644+ 9F15              ; ---------- ---------- ---------- ---------- ---------- ----------
 645+ 9F15              ;
 646+ 9F15              ;	19/10/22
 647+ 9F15              ;
 648+ 9F15              ;	(cp 2) para un Amadeus de 3 Columns.
 649+ 9F15              ;	(cp 1)   ""  ""    ""     2 Columns.
 650+ 9F15
 651+ 9F15 3A DF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 652+ 9F18 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 653+ 9F1A C9           	ret
 654+ 9F1B
 655+ 9F1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 656+ 9F1B              ;
 657+ 9F1B              ;	24/7/22
 658+ 9F1B              ;
 659+ 9F1B              ;	Inc_CTRL_DESPLZ
 660+ 9F1B              ;
 661+ 9F1B              ;
 662+ 9F1B              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 663+ 9F1B
 664+ 9F1B 21 F2 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 665+ 9F1E 3A 04 8C     	ld a,(Vel_right)
 666+ 9F21 A7           	and a
 667+ 9F22 28 06        	jr z,1F
 668+ 9F24 47           	ld b,a
 669+ 9F25 34           3 inc (hl)
 670+ 9F26 10 FD        	djnz 3B
 671+ 9F28 18 01        	jr 2F
 672+ 9F2A 34           1 inc (hl)
 673+ 9F2B C9           2 ret
 674+ 9F2C
 675+ 9F2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 676+ 9F2C              ;
 677+ 9F2C              ;	5/2/23
 678+ 9F2C              ;
 679+ 9F2C              ;	Dec_CTRL_DESPLZ
 680+ 9F2C              ;
 681+ 9F2C              ;
 682+ 9F2C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 683+ 9F2C
 684+ 9F2C 21 F2 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 685+ 9F2F 3A 03 8C     	ld a,(Vel_left)
 686+ 9F32 A7           	and a
 687+ 9F33 28 06        	jr z,1F
 688+ 9F35 47           	ld b,a
 689+ 9F36 35           3 dec (hl)
 690+ 9F37 10 FD        	djnz 3B
 691+ 9F39 18 01        	jr 2F
 692+ 9F3B 35           1 dec (hl)
 693+ 9F3C C9           2 ret
 694+ 9F3D
 695+ 9F3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9F3D
 697+ 9F3D 2A EE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 698+ 9F40 01 1F 00     	ld bc,31
 699+ 9F43 A7           	and a
 700+ 9F44 ED 4A        	adc hl,bc
 701+ 9F46 22 EE 8B     	ld (Posicion_actual),hl
 702+ 9F49 21 EB 8B     	ld hl,Ctrl_0														; $xxx1
 703+ 9F4C CB C6        	set 0,(hl)
 704+ 9F4E C9           	ret
 705+ 9F4F
 706+ 9F4F              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9F4F
 708+ 9F4F 2A EE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 709+ 9F52 01 1F 00     	ld bc,31
 710+ 9F55 A7           	and a
 711+ 9F56 ED 42        	sbc hl,bc
 712+ 9F58 22 EE 8B     	ld (Posicion_actual),hl 											; $xx1x
 713+ 9F5B 21 EB 8B     	ld hl,Ctrl_0
 714+ 9F5E CB CE        	set 1,(hl)
 715+ 9F60 C9           	ret
 716+ 9F61
 717+ 9F61              ; ---------- ---------- ---------- ---------- ---------- ----------
 718+ 9F61
 719+ 9F61 24           Reaparece_abajo inc h
 720+ 9F62 01 E0 17     	ld bc,$17e0
 721+ 9F65 A7           	and a
 722+ 9F66 ED 4A        	adc hl,bc
 723+ 9F68 22 EE 8B     	ld (Posicion_actual),hl
 724+ 9F6B 21 EB 8B     	ld hl,Ctrl_0
 725+ 9F6E CB D6        	set 2,(hl)
 726+ 9F70 C9           	ret
 727+ 9F71
 728+ 9F71              ; ---------- ---------- ---------- ---------- ---------- ----------
 729+ 9F71
 730+ 9F71 01 E0 17     Reaparece_arriba ld bc,$17e0
 731+ 9F74 A7           	and a
 732+ 9F75 ED 42        	sbc hl,bc
 733+ 9F77 22 EE 8B     	ld (Posicion_actual),hl
 734+ 9F7A 21 EB 8B     	ld hl,Ctrl_0
 735+ 9F7D CB DE        	set 3,(hl)
 736+ 9F7F C9           	ret
 737+ 9F80
 738+ 9F80              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 739+ 9F80              ;
 740+ 9F80              ;	15/07/23
 741+ 9F80
 742+ 9F80              Reinicio
 743+ 9F80
 744+ 9F80              ; Vamos a reiniciar los punteros y variables de movimiento.
 745+ 9F80
 746+ 9F80 AF           	xor a
 747+ 9F81 21 13 8C     	ld hl,Puntero_indice_mov_bucle
 748+ 9F84 CD A2 9F     	call Limpia_contenido_hl
 749+ 9F87
 750+ 9F87 21 EE 8B     	ld hl,Posicion_actual
 751+ 9F8A CD A2 9F     	call Limpia_contenido_hl
 752+ 9F8D
 753+ 9F8D CD 23 94     	call Situa_Puntero_indice_mov
 754+ 9F90 CD 9B A0     	call Inicia_Puntero_mov
 755+ 9F93
 756+ 9F93 21 15 8C     	ld hl,Incrementa_puntero
 757+ 9F96 06 05        	ld b,5
 758+ 9F98 77           1 ld (hl),a
 759+ 9F99 23           	inc hl
 760+ 9F9A 10 FC        	djnz 1B
 761+ 9F9C
 762+ 9F9C 21 EA 8B     	ld hl,Ctrl_2
 763+ 9F9F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 764+ 9FA1
 765+ 9FA1 C9           	ret
 766+ 9FA2
 767+ 9FA2 77           Limpia_contenido_hl	ld (hl),a
 768+ 9FA3 23           	inc hl
 769+ 9FA4 77           	ld (hl),a
 770+ 9FA5 C9           	ret
 771+ 9FA6
 772+ 9FA6              ; ----------------------------------------------------------------------------------------------------------------
 773+ 9FA6              ;
 774+ 9FA6              ;	18/6/24
 775+ 9FA6              ;
 776+ 9FA6
 777+ 9FA6              Amadeus_a_izquierda
 778+ 9FA6
 779+ 9FA6              ;	Actualiza contador de movimientos.
 780+ 9FA6
 781+ 9FA6 21 B7 89     	ld hl,Comm_Amadeus
 782+ 9FA9 35           	dec (hl)
 783+ 9FAA 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 784+ 9FAC
 785+ 9FAC 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 786+ 9FAF 2B           	dec hl
 787+ 9FB0 2B           	dec hl
 788+ 9FB1 2B           	dec hl
 789+ 9FB2 2B           	dec hl
 790+ 9FB3 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 791+ 9FB6
 792+ 9FB6 21 55 8C     	ld hl,Ctrl_3
 793+ 9FB9 CB EE        	set 5,(hl)
 794+ 9FBB
 795+ 9FBB C9           	ret
 796+ 9FBC
 797+ 9FBC 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 798+ 9FBD C9           	ret
 799+ 9FBE
 800+ 9FBE
 801+ 9FBE              Amadeus_a_derecha
 802+ 9FBE
 803+ 9FBE              ;	Actualiza contador de movimientos.
 804+ 9FBE
 805+ 9FBE 21 B7 89     	ld hl,Comm_Amadeus
 806+ 9FC1 34           	inc (hl)
 807+ 9FC2 3E 7A        	ld a,$7a
 808+ 9FC4 BE           	cp (hl)
 809+ 9FC5 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 810+ 9FC7
 811+ 9FC7 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 812+ 9FCA 23           	inc hl
 813+ 9FCB 23           	inc hl
 814+ 9FCC 23           	inc hl
 815+ 9FCD 23           	inc hl
 816+ 9FCE 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 817+ 9FD1
 818+ 9FD1 21 55 8C     	ld hl,Ctrl_3
 819+ 9FD4 CB EE        	set 5,(hl)
 820+ 9FD6 C9           	ret
 821+ 9FD7
 822+ 9FD7 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 823+ 9FD8 C9           	ret
# file closed: Direcciones.asm
2392  9FD9              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9FD9              ; ----- ----- ----- ----- -----
   2+ 9FD9              ;
   3+ 9FD9              ;   28/12/23
   4+ 9FD9
   5+ 9FD9              Movimiento
   6+ 9FD9
   7+ 9FD9              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9FD9
   9+ 9FD9 3A EA 8B         ld a,(Ctrl_2)
  10+ 9FDC CB 57            bit 2,a
  11+ 9FDE 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9FE0
  13+ 9FE0 2A 11 8C         ld hl,(Puntero_mov)
  14+ 9FE3 7E               ld a,(hl)
  15+ 9FE4
  16+ 9FE4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9FE4
  18+ 9FE4              Inicia_desplazamiento.
  19+ 9FE4
  20+ 9FE4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9FE4
  22+ 9FE4 CD D1 A0         call Ajusta_velocidad_desplazamiento
  23+ 9FE7
  24+ 9FE7              ; Hemos definido (Vel_left),(Vel_right),(Vel_up) y (Vel_down) en la bandeja DRAW. Ahora (Puntero_mov) está situado en el 3er byte del movimiento, (indica dirección y nº de veces que la ejecutamos).
  25+ 9FE7
  26+ 9FE7              ; Iniciamos (Repetimos_mov).
  27+ 9FE7
  28+ 9FE7 7E               ld a,(hl)
  29+ 9FE8 E6 0F            and $0f
  30+ 9FEA 32 17 8C         ld (Repetimos_desplazamiento),a
  31+ 9FED 32 18 8C         ld (Repetimos_desplazamiento_backup),a
  32+ 9FF0
  33+ 9FF0              ; Iniciamos (Cola_de_desplazamiento).
  34+ 9FF0
  35+ 9FF0 23               inc hl
  36+ 9FF1 7E               ld a,(hl)
  37+ 9FF2 32 1A 8C         ld (Cola_de_desplazamiento),a
  38+ 9FF5 2B               dec hl
  39+ 9FF6
  40+ 9FF6 21 EA 8B         ld hl,Ctrl_2
  41+ 9FF9 CB D6            set 2,(hl)
  42+ 9FFB
  43+ 9FFB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  44+ 9FFB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  45+ 9FFB
  46+ 9FFB              Desplazamiento_iniciado
  47+ 9FFB
  48+ 9FFB              ;! En que parte del movimiento estamos??? Cabe el movimiento completo?
  49+ 9FFB
  50+ 9FFB              ; Después del codo abajo-derecha (Coordenada_X) de la entidad contendrá "4" cuando (Posicion_inicio) sea $4001.
  51+ 9FFB
  52+ 9FFB              ; Cuando (Coordenada_X)="4" ;   Derecha_y_subiendo+8 (11)
  53+ 9FFB              ;                               Izquierda_y_subiendo+8 (11)
  54+ 9FFB              ; Cuando (Coordenada_X)="5" ;   Derecha_y_subiendo+8 (8)
  55+ 9FFB              ;                               Izquierda_y_subiendo+8 (8)
  56+ 9FFB              ; Cuando (Coordenada_X)="6" ;   Derecha_y_subiendo+8 (8)
  57+ 9FFB              ;                               Izquierda_y_subiendo+8 (8)
  58+ 9FFB              ; Cuando (Coordenada_X)="7" ;   Derecha_y_subiendo+8 (7)
  59+ 9FFB              ;                               Izquierda_y_subiendo+8 (8)
  60+ 9FFB              ; Cuando (Coordenada_X)="8" ;   Derecha_y_subiendo+8 (6)
  61+ 9FFB              ;                               Izquierda_y_subiendo+8 (8)
  62+ 9FFB              ; Cuando (Coordenada_X)="9" ;   Derecha_y_subiendo+8 (5)
  63+ 9FFB              ;                               Izquierda_y_subiendo+8 (7)
  64+ 9FFB              ; Cuando (Coordenada_X)="a" ;   Derecha_y_subiendo+8 (4)
  65+ 9FFB              ;                               Izquierda_y_subiendo+8 (7)
  66+ 9FFB              ; Cuando (Coordenada_X)="b" ;   Derecha_y_subiendo+8 (3)
  67+ 9FFB              ;                               Izquierda_y_subiendo+8 (7)
  68+ 9FFB
  69+ 9FFB
  70+ 9FFB
  71+ 9FFB
  72+ 9FFB
  73+ 9FFB              ;    ld bc,Derecha_y_subiendo+2
  74+ 9FFB              ;    ld hl,(Puntero_mov)
  75+ 9FFB              ;    ld a,c
  76+ 9FFB              ;    cp l
  77+ 9FFB              ;    jr nz,3F
  78+ 9FFB
  79+ 9FFB              ;    jr $
  80+ 9FFB
  81+ 9FFB              ;    ld a,(Coordenada_X)
  82+ 9FFB              ;    sub 4
  83+ 9FFB              ;    jr z,4F
  84+ 9FFB
  85+ 9FFB              ;    ld a,(Coordenada_y)                 ; $08 - $0b
  86+ 9FFB
  87+ 9FFB              ;    ld b,a
  88+ 9FFB              ;    ld hl,Derecha_y_subiendo+7
  89+ 9FFB              ;    ld a,(hl)
  90+ 9FFB              ;    sub b
  91+ 9FFB              ;    ld (hl),a
  92+ 9FFB
  93+ 9FFB
  94+ 9FFB CD A5 A0         call Aplica_desplazamiento
  95+ 9FFE
  96+ 9FFE 21 17 8C         ld hl,Repetimos_desplazamiento
  97+ A001 35               dec (hl)
  98+ A002 C0               ret nz
  99+ A003
 100+ A003              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 101+ A003              ; Hay que volver a ejecutar este desplazamiento ???.
 102+ A003              ; Analiza (Cola_de_desplazamiento).
 103+ A003
 104+ A003 3A 1A 8C     Cola ld a,(Cola_de_desplazamiento)
 105+ A006 A7               and a
 106+ A007 CC FA A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 107+ A00A 28 30            jr z,Reinicia_el_movimiento
 108+ A00C
 109+ A00C FE FF            cp $ff
 110+ A00E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 111+ A010
 112+ A010 FE FE            cp $fe
 113+ A012 CC 7F A0         call z,Fijamos_bucle
 114+ A015 28 25            jr z,Reinicia_el_movimiento
 115+ A017
 116+ A017 FE FD            cp $fd
 117+ A019 20 11            jr nz,1F
 118+ A01B
 119+ A01B              ; ---
 120+ A01B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 121+ A01B
 122+ A01B 3A EA 8B         ld a,(Ctrl_2)
 123+ A01E CB 5F            bit 3,a
 124+ A020 20 1A            jr nz,Reinicia_el_movimiento
 125+ A022
 126+ A022              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 127+ A022
 128+ A022 21 EA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 129+ A025 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 130+ A027
 131+ A027 CD 90 A0         call Inicia_Repetimos_movimiento
 132+ A02A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 133+ A02C              ; ---
 134+ A02C
 135+ A02C FE 01        1 cp 1
 136+ A02E CA 69 A0         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 137+ A031
 138+ A031 3D               dec a
 139+ A032 32 1A 8C         ld (Cola_de_desplazamiento),a
 140+ A035
 141+ A035 3A 18 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 142+ A038 32 17 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 143+ A03B              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 144+ A03B C9               ret
 145+ A03C
 146+ A03C              Reinicia_el_movimiento
 147+ A03C
 148+ A03C 3A EA 8B         ld a,(Ctrl_2)
 149+ A03F CB 5F            bit 3,a
 150+ A041 28 1B            jr z,2F
 151+ A043
 152+ A043              ; (Cola_de_desplazamiento)="254".
 153+ A043
 154+ A043 21 19 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 155+ A046 35               dec (hl)
 156+ A047 20 15            jr nz,2F
 157+ A049
 158+ A049              ; Fin de las repeticiones del último movimiento.
 159+ A049
 160+ A049 21 EA 8B         ld hl,Ctrl_2
 161+ A04C CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 162+ A04E
 163+ A04E 2A 11 8C         ld hl,(Puntero_mov)
 164+ A051 23               inc hl
 165+ A052 23               inc hl
 166+ A053 23               inc hl
 167+ A054 22 11 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 168+ A057              ;                                                               ; _ para ejecutar su mandato. :)
 169+ A057 7E               ld a,(hl)
 170+ A058 32 1A 8C         ld (Cola_de_desplazamiento),a
 171+ A05B
 172+ A05B C3 03 A0         jp Cola
 173+ A05E
 174+ A05E CD 9B A0     2 call Inicia_Puntero_mov
 175+ A061
 176+ A061 21 EA 8B         ld hl,Ctrl_2
 177+ A064 CB 96            res 2,(hl)
 178+ A066
 179+ A066 C3 D9 9F         jp Movimiento
 180+ A069
 181+ A069              Siguiente_desplazamiento
 182+ A069
 183+ A069              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 184+ A069              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 185+ A069
 186+ A069 21 EA 8B         ld hl,Ctrl_2
 187+ A06C CB 96            res 2,(hl)
 188+ A06E
 189+ A06E 2A 11 8C         ld hl,(Puntero_mov)
 190+ A071 23               inc hl
 191+ A072 23               inc hl
 192+ A073 22 11 8C         ld (Puntero_mov),hl
 193+ A076
 194+ A076 7E               ld a,(hl)
 195+ A077 A7               and a
 196+ A078 CC FA A0         call z,Incrementa_Puntero_indice_mov
 197+ A07B CA 3C A0         jp z,Reinicia_el_movimiento
 198+ A07E
 199+ A07E C9               ret
 200+ A07F
 201+ A07F              ; Subrutinas -----------------------------------------
 202+ A07F              ; ---------- --------- --------- ---------- ----------
 203+ A07F              ;
 204+ A07F              ;   24/07/23
 205+ A07F              ;
 206+ A07F              ;   Fijamos_bucle
 207+ A07F              ;
 208+ A07F              ;
 209+ A07F
 210+ A07F              Fijamos_bucle
 211+ A07F
 212+ A07F 3A 15 8C         ld a,(Incrementa_puntero)
 213+ A082 3C               inc a
 214+ A083 32 16 8C         ld (Incrementa_puntero_backup),a
 215+ A086
 216+ A086 CD FA A0         call Incrementa_Puntero_indice_mov
 217+ A089 2A 0F 8C         ld hl,(Puntero_indice_mov)
 218+ A08C 22 13 8C         ld (Puntero_indice_mov_bucle),hl
 219+ A08F C9               ret
 220+ A090
 221+ A090              ; ---------- --------- --------- ---------- ----------
 222+ A090              ;
 223+ A090              ;   07/7/23
 224+ A090              ;
 225+ A090              ;   Inicia_Repetimos_movimiento
 226+ A090              ;
 227+ A090              ;
 228+ A090
 229+ A090              Inicia_Repetimos_movimiento
 230+ A090
 231+ A090              ; Iniciamos (Repetimos_movimiento).
 232+ A090
 233+ A090 DD 2A 11 8C      ld ix,(Puntero_mov)
 234+ A094 DD 7E 02         ld a,(ix+2)
 235+ A097 32 19 8C         ld (Repetimos_movimiento),a
 236+ A09A
 237+ A09A C9               ret
 238+ A09B
 239+ A09B              ; ---------- --------- --------- ---------- ----------
 240+ A09B              ;
 241+ A09B              ;   26/6/23
 242+ A09B              ;
 243+ A09B              ;   Inicia_Puntero_mov
 244+ A09B              ;
 245+ A09B              ;
 246+ A09B
 247+ A09B 2A 0F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 248+ A09E CD 8E 91         call Extrae_address
 249+ A0A1 22 11 8C         ld (Puntero_mov),hl
 250+ A0A4 C9               ret
 251+ A0A5
 252+ A0A5              ; ---------- --------- --------- ---------- ----------
 253+ A0A5              ;
 254+ A0A5              ;   27/06/23
 255+ A0A5              ;
 256+ A0A5              ;   Aplica_movimiento.
 257+ A0A5
 258+ A0A5              Aplica_desplazamiento
 259+ A0A5
 260+ A0A5              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 261+ A0A5
 262+ A0A5 2A 11 8C         ld hl,(Puntero_mov)
 263+ A0A8
 264+ A0A8 7E               ld a,(hl)
 265+ A0A9 E6 F0            and $f0
 266+ A0AB C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 267+ A0AC
 268+ A0AC CB 7E            bit 7,(hl)
 269+ A0AE 28 03            jr z,1F
 270+ A0B0 CD 9C 9C         call Mov_up
 271+ A0B3
 272+ A0B3 2A 11 8C     1 ld hl,(Puntero_mov)
 273+ A0B6 CB 76            bit 6,(hl)
 274+ A0B8 28 03            jr z,2F
 275+ A0BA CD 68 9C         call Mov_down
 276+ A0BD
 277+ A0BD 2A 11 8C     2 ld hl,(Puntero_mov)
 278+ A0C0 CB 6E            bit 5,(hl)
 279+ A0C2 28 03            jr z,3F
 280+ A0C4 CD F8 9D         call Mov_left
 281+ A0C7
 282+ A0C7 2A 11 8C     3 ld hl,(Puntero_mov)
 283+ A0CA CB 66            bit 4,(hl)
 284+ A0CC C8               ret z
 285+ A0CD CD DA 9C         call Mov_right
 286+ A0D0
 287+ A0D0 C9               ret
 288+ A0D1
 289+ A0D1              ; ---------- --------- --------- ---------- ----------
 290+ A0D1              ;
 291+ A0D1              ;   26/06/23
 292+ A0D1              ;
 293+ A0D1              ;   Ajusta_velocidad_desplazamiento.
 294+ A0D1
 295+ A0D1              Ajusta_velocidad_desplazamiento
 296+ A0D1
 297+ A0D1              ; 1er byte de la cadena de movimiento.
 298+ A0D1              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 299+ A0D1
 300+ A0D1 CD EF A0         call Extrae_nibble_alto
 301+ A0D4
 302+ A0D4 32 05 8C         ld (Vel_up),a
 303+ A0D7 79               ld a,c
 304+ A0D8 E6 0F            and $0f
 305+ A0DA 32 06 8C         ld (Vel_down),a
 306+ A0DD
 307+ A0DD              ; Saltamos al 2º byte de la cadena de movimiento.
 308+ A0DD              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 309+ A0DD
 310+ A0DD 23               inc hl
 311+ A0DE CD EF A0         call Extrae_nibble_alto
 312+ A0E1
 313+ A0E1 32 03 8C         ld (Vel_left),a
 314+ A0E4 79               ld a,c
 315+ A0E5 E6 0F            and $0f
 316+ A0E7 32 04 8C         ld (Vel_right),a
 317+ A0EA
 318+ A0EA              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 319+ A0EA
 320+ A0EA 23               inc hl
 321+ A0EB 22 11 8C         ld (Puntero_mov),hl
 322+ A0EE C9               ret
 323+ A0EF
 324+ A0EF 06 04        Extrae_nibble_alto ld b,4
 325+ A0F1 7E               ld a,(hl)
 326+ A0F2 4F               ld c,a
 327+ A0F3 E6 F0            and $f0
 328+ A0F5 CB 3F        1 srl a
 329+ A0F7 10 FC            djnz 1B
 330+ A0F9 C9               ret
 331+ A0FA
 332+ A0FA              ; ---------- --------- --------- ---------- ----------
 333+ A0FA              ;
 334+ A0FA              ;   5/7/23
 335+ A0FA              ;
 336+ A0FA              ;   Incrementa_Puntero_indice_mov
 337+ A0FA
 338+ A0FA              Incrementa_Puntero_indice_mov
 339+ A0FA
 340+ A0FA 21 15 8C         ld hl,Incrementa_puntero
 341+ A0FD 34               inc (hl)
 342+ A0FE
 343+ A0FE 2A 0F 8C         ld hl,(Puntero_indice_mov)
 344+ A101 01 02 00         ld bc,2
 345+ A104 A7               and a
 346+ A105 09               add hl,bc
 347+ A106 22 0F 8C         ld (Puntero_indice_mov),hl
 348+ A109
 349+ A109 7E               ld a,(hl)
 350+ A10A A7               and a
 351+ A10B
 352+ A10B              ;! STOP. Fin del patrón de movimiento de la entidad.
 353+ A10B
 354+ A10B              ;    jr z,$
 355+ A10B
 356+ A10B              ;! Reinicia el Patrón de movimiento.
 357+ A10B
 358+ A10B CC 10 A1         call z,Inicializa_Puntero_indice_mov_2
 359+ A10E
 360+ A10E AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 361+ A10F
 362+ A10F C9               ret
 363+ A110
 364+ A110              ; ---------- --------- --------- ---------- ----------
 365+ A110              ;
 366+ A110              ;   15/01/24
 367+ A110              ;
 368+ A110              ;   Inicializa_Puntero_indice_mov
 369+ A110
 370+ A110              Inicializa_Puntero_indice_mov_2
 371+ A110
 372+ A110              ; Existe etiqueta de bucle principal???
 373+ A110
 374+ A110 2A 13 8C         ld hl,(Puntero_indice_mov_bucle)
 375+ A113 24               inc h
 376+ A114 25               dec h
 377+ A115 28 05            jr z,2F
 378+ A117
 379+ A117 22 0F 8C         ld (Puntero_indice_mov),hl
 380+ A11A 18 14            jr 3F
 381+ A11C
 382+ A11C              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 383+ A11C
 384+ A11C 3A 15 8C     2 ld a,(Incrementa_puntero)
 385+ A11F 47               ld b,a
 386+ A120
 387+ A120 2A 0F 8C         ld hl,(Puntero_indice_mov)
 388+ A123 2B           1 dec hl
 389+ A124 2B               dec hl
 390+ A125 10 FC            djnz 1B
 391+ A127 22 0F 8C         ld (Puntero_indice_mov),hl
 392+ A12A
 393+ A12A AF               xor a
 394+ A12B 32 15 8C         ld (Incrementa_puntero),a
 395+ A12E 18 06            jr 4F
 396+ A130
 397+ A130 3A 16 8C     3 ld a,(Incrementa_puntero_backup)
 398+ A133 32 15 8C         ld (Incrementa_puntero),a
 399+ A136 C9           4 ret
 400+ A137
 401+ A137              ; ----------------------------------------------------------------------
 402+ A137              ;
 403+ A137              ;   24/11/24
 404+ A137              ;
 405+ A137              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 406+ A137
 407+ A137 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 408+ A13A CD 32 95         call Calcula_salto_en_BC
 409+ A13D 21 07 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 410+ A140 A7               and a
 411+ A141 ED 4A            adc hl,bc
 412+ A143 C9               ret
 413+ A144
 414+ A144              ; ----------------------------------------------------------------------
 415+ A144              ;
 416+ A144              ;   24/11/24
 417+ A144              ;
 418+ A144              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 419+ A144              ;
 420+ A144              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 421+ A144
 422+ A144 4E           Transfiere_datos_de_contadores ld c,(hl)
 423+ A145 23               inc hl
 424+ A146 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 425+ A147 DD 71 09         ld (ix+9),c
 426+ A14A DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 427+ A14D C9               ret
 428+ A14E
# file closed: Movimiento.asm
2393  A14E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ A14E              ; --------------------------------------------------------------------------------------
   2+ A14E              ;
   3+ A14E              ;   25/10/24
   4+ A14E              ;
   5+ A14E
   6+ A14E              Pinta_disparos_Entidades
   7+ A14E
   8+ A14E ED 73 2D 8C      ld (Stack),sp
   9+ A152 ED 7B 3F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ A156
  11+ A156 3E 02            ld a,2
  12+ A158 08               ex af,af
  13+ A159
  14+ A159 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ A15B              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ A15B              ;                                     _ No encontraría "0".
  17+ A15B FD E1        4 pop iy
  18+ A15D D1               pop de                          ; 1er .db IYL
  19+ A15E              ;                                   ; 2º  .db IYH
  20+ A15E              ;                                   ; 3er .db E.
  21+ A15E              ;   Album vacío ???
  22+ A15E
  23+ A15E FD 7D            ld a,iyl
  24+ A160 FD 84            add iyh
  25+ A162 83               add e
  26+ A163 28 1F            jr z,1F
  27+ A165
  28+ A165              ;   Imprime album, (contiene datos).
  29+ A165
  30+ A165 3B               dec sp
  31+ A166
  32+ A166 E1               pop hl                          ; Puntero de impresión en HL.
  33+ A167
  34+ A167              ; Imprime el 1er scanline del disparo.
  35+ A167
  36+ A167 FD 7D            ld a,iyl
  37+ A169 AE               xor (hl)
  38+ A16A 77               ld (hl),a
  39+ A16B
  40+ A16B 2C               inc l
  41+ A16C
  42+ A16C FD 7C            ld a,iyh
  43+ A16E AE               xor (hl)
  44+ A16F 77               ld (hl),a
  45+ A170
  46+ A170 2C               inc l
  47+ A171
  48+ A171 7B               ld a,e
  49+ A172 AE               xor (hl)
  50+ A173 77               ld (hl),a
  51+ A174
  52+ A174              ; Imprime el 2º scanline del disparo.
  53+ A174
  54+ A174 E1               pop hl
  55+ A175
  56+ A175 FD 7D            ld a,iyl
  57+ A177 AE               xor (hl)
  58+ A178 77               ld (hl),a
  59+ A179
  60+ A179 2C               inc l
  61+ A17A
  62+ A17A FD 7C            ld a,iyh
  63+ A17C AE               xor (hl)
  64+ A17D 77               ld (hl),a
  65+ A17E
  66+ A17E 2C               inc l
  67+ A17F
  68+ A17F 7B               ld a,e
  69+ A180 AE               xor (hl)
  70+ A181 77               ld (hl),a
  71+ A182
  72+ A182 10 D7            djnz 4B
  73+ A184
  74+ A184 08           1 ex af,af
  75+ A185 3D               dec a
  76+ A186 20 05            jr nz,2F
  77+ A188
  78+ A188 ED 7B 2D 8C      ld sp,(Stack)
  79+ A18C C9               ret
  80+ A18D
  81+ A18D ED 7B 3D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ A191 08               ex af,af
  83+ A192 18 C5            jr 3B
  84+ A194
  85+ A194              ; --------------------------------------------------------------------------------------
  86+ A194              ;
  87+ A194              ;   2/12/24
  88+ A194              ;
  89+ A194
  90+ A194              Motor_de_disparos_entidades
  91+ A194
  92+ A194 3A 45 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ A197 FE 07            cp 7
  94+ A199 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ A19A
  96+ A19A 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ A19C 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ A19F
  99+ A19F CD 8E 91     1 call Extrae_address
 100+ A1A2 1C               inc e
 101+ A1A3 1C               inc e
 102+ A1A4 ED 53 58 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ A1A8
 104+ A1A8               ; Caja vacía ???
 105+ A1A8
 106+ A1A8 2D               dec l
 107+ A1A9 7E               ld a,(hl)
 108+ A1AA A7               and a
 109+ A1AB 28 45            jr z,3F                                                              ; Caja vacía.
 110+ A1AD
 111+ A1AD              ; --- Trabajamos con caja:
 112+ A1AD
 113+ A1AD 2C               inc l
 114+ A1AE
 115+ A1AE              ; --- Existe posibilidad de impacto ???
 116+ A1AE
 117+ A1AE 3A 7E 8C         ld a,(Shield)
 118+ A1B1 A7               and a
 119+ A1B2 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ A1B4
 121+ A1B4 CB 46            bit 0,(hl)
 122+ A1B6 C4 F6 A1         call nz, Comprueba_impacto_con_Amadeus
 123+ A1B9 20 37            jr nz,3F
 124+ A1BB
 125+ A1BB CD 7D A2     6 call Rota_disparo_si_procede
 126+ A1BE
 127+ A1BE              ; ------------------------------------------------------------
 128+ A1BE
 129+ A1BE 2D               dec l
 130+ A1BF 2D               dec l
 131+ A1C0
 132+ A1C0 CD 8E 91         call Extrae_address
 133+ A1C3
 134+ A1C3              ;   (Puntero_de_impresion) del disparo en HL
 135+ A1C3              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A1C3
 137+ A1C3 3A 57 8C         ld a,(Ctrl_5)
 138+ A1C6 CB 57            bit 2,a
 139+ A1C8 28 09            jr z,4F
 140+ A1CA
 141+ A1CA CB 97            res 2,a
 142+ A1CC 32 57 8C         ld (Ctrl_5),a
 143+ A1CF 2C               inc l
 144+ A1D0 2C               inc l
 145+ A1D1 18 0C            jr 5F
 146+ A1D3
 147+ A1D3 CB 5F        4 bit 3,a
 148+ A1D5 28 08            jr z,5F
 149+ A1D7
 150+ A1D7 CB 9F            res 3,a
 151+ A1D9 32 57 8C         ld (Ctrl_5),a
 152+ A1DC 2D               dec l
 153+ A1DD 2D               dec l
 154+ A1DE 2D               dec l
 155+ A1DF
 156+ A1DF              ; ---------------------------------------------------------------------
 157+ A1DF
 158+ A1DF              ;! Velocidad del disparo de entidades.
 159+ A1DF
 160+ A1DF CD 22 9C     5 call NextScan
 161+ A1E2 CD 22 9C         call NextScan
 162+ A1E5
 163+ A1E5              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A1E5
 165+ A1E5 CD 5A A2         call Fin_de_disparo_de_entidad
 166+ A1E8
 167+ A1E8 EB               ex de,hl
 168+ A1E9
 169+ A1E9 73               ld (hl),e
 170+ A1EA 23               inc hl
 171+ A1EB 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A1EC
 173+ A1EC 2A 58 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A1EF 18 02            jr 2F
 175+ A1F1
 176+ A1F1 C9               ret
 177+ A1F2
 178+ A1F2 EB           3 ex de,hl
 179+ A1F3 10 AA        2 djnz 1B
 180+ A1F5
 181+ A1F5 C9               ret
 182+ A1F6
 183+ A1F6              ; ------------- ------------- ------------
 184+ A1F6              ;
 185+ A1F6              ;   1/11/24
 186+ A1F6
 187+ A1F6              Comprueba_impacto_con_Amadeus
 188+ A1F6
 189+ A1F6              ;   El disparo se encuentra en zona de Amadeus.
 190+ A1F6              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A1F6
 192+ A1F6              ;   Modificamos registros, así que guardamos ...
 193+ A1F6
 194+ A1F6 C5               push bc
 195+ A1F7 E5               push hl
 196+ A1F8 D5               push de
 197+ A1F9
 198+ A1F9 2D               dec l
 199+ A1FA 2D               dec l
 200+ A1FB
 201+ A1FB CD 8E 91         call Extrae_address
 202+ A1FE
 203+ A1FE 3A AF 89         ld a,(CX_Amadeus)
 204+ A201 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A202
 206+ A202 7D               ld a,l
 207+ A203 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A205
 209+ A205 06 03            ld b,3
 210+ A207
 211+ A207 B9           1 cp c
 212+ A208 28 15            jr z,Coincidencia
 213+ A20A 0C               inc c
 214+ A20B 10 FA            djnz 1B
 215+ A20D
 216+ A20D 0D               dec c
 217+ A20E 0D               dec c
 218+ A20F 0D               dec c
 219+ A210
 220+ A210 3C               inc a
 221+ A211 B9               cp c
 222+ A212 28 0B            jr z,Coincidencia
 223+ A214
 224+ A214 3C               inc a
 225+ A215 B9               cp c
 226+ A216 28 07            jr z,Coincidencia
 227+ A218
 228+ A218 D1           2 pop de
 229+ A219 E1               pop hl
 230+ A21A C1               pop bc
 231+ A21B
 232+ A21B              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A21B
 234+ A21B CB 86            res 0,(hl)
 235+ A21D AF               xor a                       ; Z before RET.
 236+ A21E C9               ret
 237+ A21F
 238+ A21F              Coincidencia
 239+ A21F
 240+ A21F              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A21F              ;   Existe posibilidad de impacto.
 242+ A21F              ;   Vamos a averiguarlo ...
 243+ A21F
 244+ A21F 1D               dec e
 245+ A220 1D               dec e
 246+ A221 1D               dec e
 247+ A222
 248+ A222              ; DE en Puntero_objeto del disparo.
 249+ A222              ; HL en Puntero_de_impresión del disparo.
 250+ A222
 251+ A222              ; Comparador:
 252+ A222
 253+ A222 06 03            ld b,3
 254+ A224
 255+ A224 1A           3 ld a,(de)
 256+ A225 4F               ld c,a
 257+ A226 A6               and (hl)
 258+ A227 B9               cp c
 259+ A228 20 06            jr nz,Amadeus_impactado
 260+ A22A
 261+ A22A 2C               inc l
 262+ A22B 1C               inc e
 263+ A22C
 264+ A22C 10 F6            djnz 3B
 265+ A22E
 266+ A22E 18 E8            jr 2B
 267+ A230
 268+ A230              Amadeus_impactado
 269+ A230
 270+ A230              ; Borramos disparo.
 271+ A230
 272+ A230              ;   Exclusion.
 273+ A230
 274+ A230 D1               pop de
 275+ A231 E1               pop hl
 276+ A232
 277+ A232 E5               push hl
 278+ A233 D5               push de
 279+ A234
 280+ A234 CD E8 A2         call Borra_6_bytes
 281+ A237
 282+ A237 21 45 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A23A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A23B
 285+ A23B              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A23B
 287+ A23B 21 B2 89         ld hl,Impacto_Amadeus
 288+ A23E 36 01            ld (hl),1
 289+ A240
 290+ A240              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A240              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A240
 293+ A240 3A B3 89         ld a,(p.imp.amadeus)
 294+ A243 FE DE            cp $de
 295+ A245 20 04            jr nz,1F
 296+ A247
 297+ A247 3D               dec a
 298+ A248 32 B3 89         ld (p.imp.amadeus),a
 299+ A24B
 300+ A24B              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A24B
 302+ A24B 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A24E 21 B5 89         ld hl,Pamm_Amadeus
 304+ A251
 305+ A251 73               ld (hl),e
 306+ A252 23               inc hl
 307+ A253 72               ld (hl),d
 308+ A254
 309+ A254 D1               pop de
 310+ A255 E1               pop hl
 311+ A256 C1               pop bc
 312+ A257
 313+ A257 AF               xor a
 314+ A258 3C               inc a               ; NZ before RET.
 315+ A259 C9               ret
 316+ A25A
 317+ A25A              ; ------------- ------------- ------------
 318+ A25A              ;
 319+ A25A              ;   31/10/24
 320+ A25A
 321+ A25A              Fin_de_disparo_de_entidad
 322+ A25A
 323+ A25A              ; Estamos en zona de Amadeus ??
 324+ A25A
 325+ A25A 7C               ld a,h
 326+ A25B FE 54            cp $54
 327+ A25D 38 0D            jr c,1F
 328+ A25F
 329+ A25F D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A260
 331+ A260 5D               ld e,l
 332+ A261 54               ld d,h
 333+ A262
 334+ A262 21 E0 57         ld hl,$57e0
 335+ A265 ED 52            sbc hl,de
 336+ A267
 337+ A267 38 6F            jr c,Elimina_disparo_entidad
 338+ A269
 339+ A269 6B               ld l,e
 340+ A26A 62               ld h,d
 341+ A26B
 342+ A26B D1               pop de
 343+ A26C
 344+ A26C 7C           1 ld a,h
 345+ A26D FE 50            cp $50
 346+ A26F D8               ret c
 347+ A270
 348+ A270 7D               ld a,l
 349+ A271 FE C0            cp $c0
 350+ A273 D8               ret c
 351+ A274
 352+ A274              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A274              ; Así podremos comprobar si hay colisión más adelante.
 354+ A274
 355+ A274 1C               inc e
 356+ A275 1C               inc e
 357+ A276
 358+ A276 EB               ex de,hl
 359+ A277 CB C6            set 0,(hl)
 360+ A279 EB               ex de,hl
 361+ A27A
 362+ A27A 1D               dec e
 363+ A27B 1D               dec e
 364+ A27C
 365+ A27C C9               ret
 366+ A27D
 367+ A27D              ; ----------------------------------------------------------
 368+ A27D              ;
 369+ A27D              ;   08/10/24
 370+ A27D
 371+ A27D              ;   Estructura de un disparo de entidades.
 372+ A27D
 373+ A27D              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A27D              ; 	defw 0											; Puntero de impresión.
 375+ A27D              ;	defw 0											; Control.
 376+ A27D
 377+ A27D              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A27D              ;   _de la entidad en el momento de disparar.
 379+ A27D
 380+ A27D              ;   El byte alto muestra la siguiente información:
 381+ A27D              ;
 382+ A27D              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A27D              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A27D              ;
 385+ A27D              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A27D              ;
 387+ A27D              ;                        10xx ..... Izquierda.
 388+ A27D              ;                        01xx ..... Derecha.
 389+ A27D              ;                        00xx ..... Recto.
 390+ A27D
 391+ A27D              Rota_disparo_si_procede
 392+ A27D
 393+ A27D              ;   Nos situamos en el byte alto de (Control).
 394+ A27D
 395+ A27D CB 76            bit 6,(hl)
 396+ A27F 20 2D            jr nz,Rota_a_derecha
 397+ A281 CB 7E            bit 7,(hl)
 398+ A283 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A284
 400+ A284              Rota_a_izq
 401+ A284
 402+ A284 E5               push hl
 403+ A285
 404+ A285 7D               ld a,l
 405+ A286 D6 05            sub 5
 406+ A288 6F               ld l,a
 407+ A289
 408+ A289 E5               push hl
 409+ A28A FD E1            pop iy
 410+ A28C
 411+ A28C A7               and a
 412+ A28D
 413+ A28D FD CB 02 16      rl (iy+02)
 414+ A291 FD CB 01 16      rl (iy+01)
 415+ A295 FD CB 00 16      rl (iy+00)
 416+ A299
 417+ A299 30 3B            jr nc,Exit
 418+ A29B
 419+ A29B              ; Desplazamiento completo hasta Carry.
 420+ A29B              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A29B
 422+ A29B FD 36 02 03      ld (iy+02),$03
 423+ A29F FD 36 01 00      ld (iy+01),$00
 424+ A2A3 FD 36 00 00      ld (iy+00),$00
 425+ A2A7
 426+ A2A7 21 57 8C         ld hl,Ctrl_5
 427+ A2AA CB DE            set 3,(hl)
 428+ A2AC
 429+ A2AC 18 28            jr Exit
 430+ A2AE
 431+ A2AE              Rota_a_derecha
 432+ A2AE
 433+ A2AE E5               push hl
 434+ A2AF
 435+ A2AF 7D               ld a,l
 436+ A2B0 D6 05            sub 5
 437+ A2B2 6F               ld l,a
 438+ A2B3
 439+ A2B3 E5               push hl
 440+ A2B4 FD E1            pop iy
 441+ A2B6
 442+ A2B6 A7               and a
 443+ A2B7
 444+ A2B7 FD CB 00 1E      rr (iy+00)
 445+ A2BB FD CB 01 1E      rr (iy+01)
 446+ A2BF FD CB 02 1E      rr (iy+02)
 447+ A2C3
 448+ A2C3 30 11            jr nc,Exit
 449+ A2C5
 450+ A2C5              ; Desplazamiento completo hasta Carry.
 451+ A2C5              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A2C5
 453+ A2C5 FD 36 00 01      ld (iy+00),$01
 454+ A2C9 FD 36 01 80      ld (iy+01),$80
 455+ A2CD FD 36 02 00      ld (iy+02),$00
 456+ A2D1
 457+ A2D1 21 57 8C         ld hl,Ctrl_5
 458+ A2D4 CB D6            set 2,(hl)
 459+ A2D6
 460+ A2D6 E1           Exit pop hl
 461+ A2D7 C9               ret
 462+ A2D8
 463+ A2D8              ; ------------ ----------- ------------
 464+ A2D8              ;
 465+ A2D8              ;   25/9/24
 466+ A2D8
 467+ A2D8              Elimina_disparo_entidad
 468+ A2D8
 469+ A2D8 21 45 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A2DB 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A2DC
 472+ A2DC E1               pop hl
 473+ A2DD E5               push hl
 474+ A2DE
 475+ A2DE 2C               inc l
 476+ A2DF 2C               inc l
 477+ A2E0
 478+ A2E0 CD E8 A2         call Borra_6_bytes
 479+ A2E3
 480+ A2E3 D1               pop de
 481+ A2E4
 482+ A2E4 21 00 00         ld hl,0
 483+ A2E7
 484+ A2E7 C9               ret
 485+ A2E8
 486+ A2E8              ; ----- ----- ----- ----- -----
 487+ A2E8
 488+ A2E8              Borra_6_bytes
 489+ A2E8
 490+ A2E8 16 06            ld d,6                                                    ; Contador
 491+ A2EA AF               xor a                                                     ; Borrador
 492+ A2EB 77           1 ld (hl),a
 493+ A2EC 2D               dec l
 494+ A2ED 15               dec d
 495+ A2EE 20 FB            jr nz,1B
 496+ A2F0
 497+ A2F0 C9               ret
 498+ A2F1
 499+ A2F1              ; --------------------------------------------------------------------------------------
 500+ A2F1              ;
 501+ A2F1              ;   12/10/24
 502+ A2F1              ;
 503+ A2F1
 504+ A2F1              Genera_datos_de_impresion_disparos_Entidades
 505+ A2F1
 506+ A2F1 3E 07            ld a,7
 507+ A2F3 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A2F4
 509+ A2F4              ; ---------------
 510+ A2F4
 511+ A2F4              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A2F4
 513+ A2F4 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A2F7
 515+ A2F7 CD 8E 91     1 call Extrae_address
 516+ A2FA
 517+ A2FA 13               inc de
 518+ A2FB 13               inc de
 519+ A2FC
 520+ A2FC ED 53 58 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A300
 522+ A300 2D               dec l
 523+ A301 7E               ld a,(hl)
 524+ A302 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A303 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A305
 527+ A305              ; ----- ----- ----- -----
 528+ A305
 529+ A305 2D               dec l
 530+ A306 CD 8E 91         call Extrae_address
 531+ A309 E5               push hl
 532+ A30A
 533+ A30A 1D               dec e
 534+ A30B
 535+ A30B EB               ex de,hl
 536+ A30C
 537+ A30C 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A30D 2D               dec l
 539+ A30E 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A30F 2D               dec l
 541+ A310 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A311
 543+ A311 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A312
 545+ A312              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A312
 547+ A312 FD 2A 41 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A316 FD 73 00         ld (iy+0),e
 549+ A319 FD 70 01         ld (iy+1),b
 550+ A31C FD 71 02         ld (iy+2),c
 551+ A31F
 552+ A31F FD 75 03         ld (iy+3),l
 553+ A322 FD 74 04         ld (iy+4),h
 554+ A325
 555+ A325 CD 22 9C         call NextScan
 556+ A328
 557+ A328 FD 75 05         ld (iy+5),l
 558+ A32B FD 74 06         ld (iy+6),h
 559+ A32E
 560+ A32E FD E5            push iy
 561+ A330 E1               pop hl
 562+ A331
 563+ A331 3E 07            ld a,7
 564+ A333 85               add l
 565+ A334 6F               ld l,a
 566+ A335
 567+ A335 22 41 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A338
 569+ A338              ; ----- ----- ----- -----
 570+ A338
 571+ A338              Situa_en_siguiente_caja
 572+ A338
 573+ A338 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A339 3D               dec a
 575+ A33A C8               ret z
 576+ A33B
 577+ A33B 08               ex af,af
 578+ A33C 2A 58 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A33F 18 B6            jr 1B
 580+ A341
 581+ A341              ; --------------------------------------------------------------------------------------
 582+ A341              ;
 583+ A341              ;   12/10/24
 584+ A341              ;
 585+ A341
 586+ A341              Genera_disparo_de_entidad_maldosa
 587+ A341
 588+ A341              ;   Estructura de un disparo de entidades.
 589+ A341
 590+ A341              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A341              ; 	defw 0											; Puntero de impresión.
 592+ A341              ;	defw 0											; Control.
 593+ A341
 594+ A341              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A341              ;   _de la entidad en el momento de disparar.
 596+ A341
 597+ A341              ;   El byte de control muestra la siguiente información:
 598+ A341
 599+ A341              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A341              ;
 601+ A341              ;                        10xx ..... Izquierda.
 602+ A341              ;                        01xx ..... Derecha.
 603+ A341              ;                        00xx ..... Recto.
 604+ A341
 605+ A341              ;*  Exclusiones.
 606+ A341
 607+ A341              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A341              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A341
 610+ A341 3A 45 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A344 A7               and a
 612+ A345 C8               ret z
 613+ A346
 614+ A346 3A E0 8B         ld a,(Coordenada_y)
 615+ A349 A7               and a
 616+ A34A C8               ret z
 617+ A34B
 618+ A34B 3D               dec a
 619+ A34C C8               ret z
 620+ A34D
 621+ A34D FE 10            cp 16
 622+ A34F D0               ret nc
 623+ A350
 624+ A350              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A350              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A350              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A350
 628+ A350 21 47 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A353 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A354
 631+ A354              ;   Decrementa el numero de disparos de entidades.
 632+ A354
 633+ A354 21 45 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A357 35               dec (hl)
 635+ A358
 636+ A358 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A35B
 638+ A35B CD 8E 91     1 call Extrae_address
 639+ A35E
 640+ A35E 13               inc de
 641+ A35F 13               inc de
 642+ A360
 643+ A360 ED 53 58 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A364
 645+ A364              ;   Comprobamos si la caja está vacía.
 646+ A364
 647+ A364 2D               dec l
 648+ A365 7E               ld a,(hl)
 649+ A366 A7               and a
 650+ A367 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A369 2C               inc l
 652+ A36A
 653+ A36A              ;   Caja vacía, vamos a generar un disparo.
 654+ A36A              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A36A
 656+ A36A CD 8B A3         call Genera_byte_inclinacion
 657+ A36D
 658+ A36D 7E               ld a,(hl)
 659+ A36E 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A36F
 661+ A36F 2D               dec l
 662+ A370
 663+ A370 CD A7 A3         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A373
 665+ A373 70               ld (hl),b
 666+ A374 2D               dec l
 667+ A375 71               ld (hl),c
 668+ A376
 669+ A376 2D               dec l
 670+ A377
 671+ A377              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A377
 673+ A377 FD 7E 02         ld a,(iy+02)
 674+ A37A 77               ld (hl),a
 675+ A37B 2D               dec l
 676+ A37C
 677+ A37C FD 7E 01         ld a,(iy+01)
 678+ A37F 77               ld (hl),a
 679+ A380 2D               dec l
 680+ A381
 681+ A381 FD 7E 00         ld a,(iy+00)
 682+ A384 77               ld (hl),a
 683+ A385
 684+ A385 C9               ret
 685+ A386
 686+ A386              ;   --- --- ---
 687+ A386
 688+ A386              Situa_en_siguiente_disparo
 689+ A386
 690+ A386 2A 58 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A389 18 D0            jr 1B
 692+ A38B
 693+ A38B              ; --------------------------------------------------------------------------------------
 694+ A38B              ;
 695+ A38B              ;   09/10/24
 696+ A38B              ;
 697+ A38B
 698+ A38B              Genera_byte_inclinacion
 699+ A38B
 700+ A38B              ; Determina tendencia del disparo.
 701+ A38B
 702+ A38B 3A AF 89         ld a,(CX_Amadeus)
 703+ A38E 47               ld b,a
 704+ A38F 3A DF 8B         ld a,(Coordenada_X)
 705+ A392 90               sub b
 706+ A393 38 07            jr c,Disparo_a_derecha
 707+ A395
 708+ A395 FE 06        Disparo_a_izquierda cp 6
 709+ A397
 710+ A397 D8               ret c
 711+ A398 C8               ret z
 712+ A399
 713+ A399 CB FE            set 7,(hl)
 714+ A39B C9               ret
 715+ A39C
 716+ A39C 47           Disparo_a_derecha ld b,a
 717+ A39D 3E FF            ld a,$ff
 718+ A39F 90               sub b
 719+ A3A0
 720+ A3A0 FE 05            cp 5
 721+ A3A2
 722+ A3A2 D8               ret c
 723+ A3A3 C8               ret z
 724+ A3A4
 725+ A3A4 CB F6            set 6,(hl)
 726+ A3A6 C9               ret
 727+ A3A7
 728+ A3A7              ; --------------------------------------------------------------------------------------
 729+ A3A7              ;
 730+ A3A7              ;   09/10/24
 731+ A3A7              ;
 732+ A3A7
 733+ A3A7              Modifica_puntero_de_impresion
 734+ A3A7
 735+ A3A7              ;   Puntero de impresión del disparo en BC.
 736+ A3A7
 737+ A3A7 E5               push hl
 738+ A3A8
 739+ A3A8 2A 5A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A3AB CD 22 9C         call NextScan
 741+ A3AE
 742+ A3AE 4D               ld c,l
 743+ A3AF 44               ld b,h
 744+ A3B0
 745+ A3B0 E1               pop hl
 746+ A3B1
 747+ A3B1 08               ex af,af
 748+ A3B2 CB 77            bit 6,a
 749+ A3B4 28 06            jr z,1F
 750+ A3B6
 751+ A3B6 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A3BA 0C               inc c
 753+ A3BB C9               ret
 754+ A3BC
 755+ A3BC CB 7F        1 bit 7,a
 756+ A3BE 28 F6            jr z,2B
 757+ A3C0
 758+ A3C0 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A3C4 0D               dec c
 760+ A3C5
 761+ A3C5 C9               ret
 762+ A3C6
 763+ A3C6              ; --------------------------------------------------------------------------------------
 764+ A3C6              ;
 765+ A3C6              ;   28/11/24
 766+ A3C6              ;
 767+ A3C6
 768+ A3C6              Compara_con_coordenadas_de_disparo
 769+ A3C6
 770+ A3C6 DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A3C9 47               ld b,a
 772+ A3CA 3A 5F 8C         ld a,(Coordenadas_disparo_certero)
 773+ A3CD 90               sub b
 774+ A3CE
 775+ A3CE              ; A = "0" ok
 776+ A3CE              ; A = "1" ok
 777+ A3CE
 778+ A3CE 28 08            jr z,Comprueba_coordenada_X
 779+ A3D0 3D               dec a
 780+ A3D1 28 05            jr z,Comprueba_coordenada_X
 781+ A3D3
 782+ A3D3              ; A = "$ff" ok
 783+ A3D3
 784+ A3D3 FE FE            cp $fe
 785+ A3D5 28 01            jr z,Comprueba_coordenada_X
 786+ A3D7
 787+ A3D7 C9               ret
 788+ A3D8
 789+ A3D8              Comprueba_coordenada_X
 790+ A3D8
 791+ A3D8 DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A3DB 47               ld b,a
 793+ A3DC 21 60 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A3DF 7E               ld a,(hl)
 795+ A3E0 90               sub b
 796+ A3E1
 797+ A3E1              ; A = "0" ok
 798+ A3E1              ; A = "1" ok
 799+ A3E1
 800+ A3E1 28 09            jr z,Activa_Impacto_en_entidad
 801+ A3E3 3D               dec a
 802+ A3E4 28 06            jr z,Activa_Impacto_en_entidad
 803+ A3E6
 804+ A3E6              ; A = "2" ok
 805+ A3E6
 806+ A3E6 3D               dec a
 807+ A3E7 28 03            jr z,Activa_Impacto_en_entidad
 808+ A3E9
 809+ A3E9              ; A = "$ff"
 810+ A3E9
 811+ A3E9 FE FD            cp $fd
 812+ A3EB C0               ret nz
 813+ A3EC
 814+ A3EC              Activa_Impacto_en_entidad
 815+ A3EC
 816+ A3EC              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A3EC
 818+ A3EC 3E 02            ld a,2
 819+ A3EE DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A3F1
 821+ A3F1              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A3F1
 823+ A3F1 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A3F4
 825+ A3F4 DD 73 07         ld (ix+7),e
 826+ A3F7 DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A3FA
 828+ A3FA              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A3FA
 830+ A3FA 21 5C 8C         ld hl,Impacto2
 831+ A3FD CB 9E            res 3,(hl)
 832+ A3FF
 833+ A3FF C9               ret
 834+ A400
 835+ A400              ; --------------------------------------------------------------------------------------
 836+ A400              ;
 837+ A400              ;   13/10/24
 838+ A400              ;
 839+ A400
 840+ A400              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A400
 842+ A400              Limpia_album_de_pintado_disparos_Amadeus
 843+ A400
 844+ A400 2A 39 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A403 06 06            ld b,6
 846+ A405 AF               xor a
 847+ A406 77           1 ld (hl),a
 848+ A407 2C               inc l
 849+ A408 10 FC            djnz 1B
 850+ A40A
 851+ A40A C9               ret
 852+ A40B
 853+ A40B              ; --------------------------------------------------------------------------------------
 854+ A40B              ;
 855+ A40B              ;   29/09/24
 856+ A40B              ;
 857+ A40B
 858+ A40B              Calcula_bytes_pintado_disparos
 859+ A40B
 860+ A40B 2A 3D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A40E 45               ld b,l
 862+ A40F 2A 41 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A412 7D               ld a,l
 864+ A413
 865+ A413 90               sub b
 866+ A414 32 43 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A417
 868+ A417 C9               ret
 869+ A418
 870+ A418              ; --------------------------------------------------------------------------------------
 871+ A418              ;
 872+ A418              ;   26/10/24
 873+ A418              ;
 874+ A418              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A418              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A418              ;   _disparos que el álbum del FRAME actual).
 877+ A418
 878+ A418              Limpia_album_de_pintado_disparos_entidades
 879+ A418
 880+ A418 21 44 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A41B 7E               ld a,(hl)
 882+ A41C 2D               dec l
 883+ A41D 46               ld b,(hl)
 884+ A41E 90               sub b
 885+ A41F
 886+ A41F D8               ret c
 887+ A420 C8               ret z
 888+ A421
 889+ A421 F5               push af
 890+ A422 80               add b
 891+ A423 77               ld (hl),a
 892+ A424 F1               pop af
 893+ A425
 894+ A425              ; Clean.
 895+ A425
 896+ A425 47           2 ld b,a
 897+ A426 AF               xor a
 898+ A427 2A 41 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A42A 77           1 ld (hl),a
 900+ A42B 23               inc hl
 901+ A42C 10 FC            djnz 1B
 902+ A42E
 903+ A42E C9               ret
 904+ A42F
 905+ A42F              ; --------------------------------------------------------------------------------------
 906+ A42F              ;
 907+ A42F              ;   29/09/24
 908+ A42F              ;
 909+ A42F
 910+ A42F              Motor_Disparos_Amadeus
 911+ A42F
 912+ A42F 21 1D 89         ld hl,Disparo_Amad+1
 913+ A432
 914+ A432 34               inc (hl)
 915+ A433 35               dec (hl)
 916+ A434
 917+ A434 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A435
 919+ A435              ;   Esta caja contiene un disparo.
 920+ A435
 921+ A435 CD 3C A4         call Consulta_Impacto
 922+ A438 CC 55 A4         call z,Mueve_disparo_Amadeus
 923+ A43B
 924+ A43B C9               ret
 925+ A43C
 926+ A43C              ; ----------------------
 927+ A43C              ;
 928+ A43C              ;
 929+ A43C              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A43C              ;
 931+ A43C              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A43C
 933+ A43C
 934+ A43C              Consulta_Impacto
 935+ A43C
 936+ A43C              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A43C              ;   _sea lo más coherente posible.
 938+ A43C
 939+ A43C E5               push hl
 940+ A43D 2B               dec hl
 941+ A43E CD 31 A5         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A441 E1               pop hl
 943+ A442 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A443
 945+ A443 C8               ret z
 946+ A444
 947+ A444 3A 5C 8C         ld a,(Impacto2)
 948+ A447 CB DF            set 3,a
 949+ A449 32 5C 8C         ld (Impacto2),a
 950+ A44C
 951+ A44C E5               push hl
 952+ A44D CD 1E A5         call Genera_coordenadas_de_disparo_Amadeus
 953+ A450 E1               pop hl
 954+ A451 CD 6E A4         call Elimina_disparo_Amadeus
 955+ A454
 956+ A454 C9               ret
 957+ A455
 958+ A455              ; ----------------------
 959+ A455              ;
 960+ A455              ;
 961+ A455              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A455
 963+ A455              Mueve_disparo_Amadeus
 964+ A455
 965+ A455 CD 8E 91         call Extrae_address
 966+ A458
 967+ A458 CD 31 9C         call PreviousScan
 968+ A45B CD 31 9C         call PreviousScan
 969+ A45E CD 31 9C         call PreviousScan
 970+ A461 CD 31 9C         call PreviousScan
 971+ A464
 972+ A464              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A464
 974+ A464 7C               ld a,h
 975+ A465 D6 40            sub $40
 976+ A467 EB               ex de,hl
 977+ A468 38 04            jr c,Elimina_disparo_Amadeus
 978+ A46A
 979+ A46A               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A46A
 981+ A46A 73               ld (hl),e
 982+ A46B 23               inc hl
 983+ A46C 72               ld (hl),d
 984+ A46D
 985+ A46D C9               ret
 986+ A46E
 987+ A46E              ; ----------------------
 988+ A46E              ;
 989+ A46E              ;   29/9/24
 990+ A46E
 991+ A46E              Elimina_disparo_Amadeus
 992+ A46E
 993+ A46E              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A46E              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A46E
 996+ A46E              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A46E              ;   	defw 0											; Puntero de impresión.
 998+ A46E
 999+ A46E 2B               dec hl
1000+ A46F 2B               dec hl
1001+ A470
1002+ A470 AF               xor a
1003+ A471 77               ld (hl),a
1004+ A472 23               inc hl
1005+ A473 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A474
1007+ A474 23               inc hl
1008+ A475 77               ld (hl),a
1009+ A476 23               inc hl
1010+ A477 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A478
1012+ A478 3E 01            ld a,1
1013+ A47A 32 46 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A47D
1015+ A47D CD 00 A4         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A480
1017+ A480 AF               xor a
1018+ A481 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A482
1020+ A482 C9               ret
1021+ A483
1022+ A483              ; --------------------------------------------------------------------------------------
1023+ A483              ;
1024+ A483              ;   13/10/24
1025+ A483              ;
1026+ A483
1027+ A483              Pinta_disparos_Amadeus
1028+ A483
1029+ A483 06 02            ld b,2
1030+ A485 ED 73 2D 8C      ld (Stack),sp
1031+ A489 ED 7B 3B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A48D D1           3 pop de
1033+ A48E 14               inc d
1034+ A48F 15               dec d
1035+ A490 28 1C            jr z,1F
1036+ A492 E1               pop hl
1037+ A493
1038+ A493              Imprime_scanlines_en_pantalla
1039+ A493
1040+ A493              ; 1er scanline
1041+ A493
1042+ A493 1A               ld a,(de)
1043+ A494 AE               xor (hl)
1044+ A495 77               ld (hl),a
1045+ A496
1046+ A496 1C               inc e
1047+ A497 2C               inc l
1048+ A498
1049+ A498 1A               ld a,(de)
1050+ A499 AE               xor (hl)
1051+ A49A 77               ld (hl),a
1052+ A49B
1053+ A49B 1D               dec e
1054+ A49C E1               pop hl
1055+ A49D
1056+ A49D              ; 2º scanline
1057+ A49D
1058+ A49D 1A               ld a,(de)
1059+ A49E AE               xor (hl)
1060+ A49F 77               ld (hl),a
1061+ A4A0
1062+ A4A0 1C               inc e
1063+ A4A1 2C               inc l
1064+ A4A2
1065+ A4A2 1A               ld a,(de)
1066+ A4A3 AE               xor (hl)
1067+ A4A4 77               ld (hl),a
1068+ A4A5
1069+ A4A5 1D               dec e
1070+ A4A6
1071+ A4A6 18 06            jr 1F
1072+ A4A8
1073+ A4A8 ED 7B 39 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A4AC 18 DF            jr 3B
1075+ A4AE 10 F8        1 djnz 2B
1076+ A4B0 ED 7B 2D 8C      ld sp,(Stack)
1077+ A4B4 C9               ret
1078+ A4B5
1079+ A4B5              ; --------------------------------------------------------------------------------------
1080+ A4B5              ;
1081+ A4B5              ;   13/10/24
1082+ A4B5              ;
1083+ A4B5              ;   Modifica: HL,BC y DE.
1084+ A4B5
1085+ A4B5
1086+ A4B5              Genera_datos_de_impresion_disparos_Amadeus
1087+ A4B5
1088+ A4B5 ED 73 2D 8C      ld (Stack),sp
1089+ A4B9 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A4BC D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A4BD
1092+ A4BD 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A4BE 15               dec d
1094+ A4BF
1095+ A4BF 28 0E            jr z,Salida
1096+ A4C1
1097+ A4C1              Genera_scanlines_de_disparo_Amadeus
1098+ A4C1
1099+ A4C1 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A4C2              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A4C2 ED 7B 39 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A4C6
1103+ A4C6 C1               pop bc
1104+ A4C7 C1               pop bc
1105+ A4C8 C1               pop bc
1106+ A4C9
1107+ A4C9 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A4CA CD 31 9C         call PreviousScan
1109+ A4CD E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A4CE D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A4CF
1112+ A4CF              Salida
1113+ A4CF
1114+ A4CF ED 7B 2D 8C      ld sp,(Stack)
1115+ A4D3
1116+ A4D3 C9               ret
1117+ A4D4
1118+ A4D4              ; --------------------------------------------------------------------------------------
1119+ A4D4              ;
1120+ A4D4              ;   12/09/24
1121+ A4D4              ;
1122+ A4D4
1123+ A4D4              Genera_disparo_Amadeus
1124+ A4D4
1125+ A4D4              ;*  Exclusiones.
1126+ A4D4
1127+ A4D4 3A 46 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A4D7 A7               and a
1129+ A4D8 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A4D9
1131+ A4D9 3D               dec a
1132+ A4DA 32 46 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A4DD
1134+ A4DD              Define_puntero_objeto_disparo
1135+ A4DD
1136+ A4DD              ;   Inicializamos contador.
1137+ A4DD
1138+ A4DD 06 00            ld b,0
1139+ A4DF
1140+ A4DF 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A4E2 2C               inc l
1142+ A4E3
1143+ A4E3 3E 80            ld a,$80
1144+ A4E5 BE               cp (hl)
1145+ A4E6 28 0D            jr z,1F
1146+ A4E8
1147+ A4E8 04               inc b
1148+ A4E9
1149+ A4E9 3E 60            ld a,$60
1150+ A4EB BE               cp (hl)
1151+ A4EC 28 07            jr z,1F
1152+ A4EE
1153+ A4EE
1154+ A4EE 04               inc b
1155+ A4EF
1156+ A4EF 3E 18            ld a,$18
1157+ A4F1 BE               cp (hl)
1158+ A4F2 28 01            jr z,1F
1159+ A4F4
1160+ A4F4 04               inc b
1161+ A4F5
1162+ A4F5              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A4F5
1164+ A4F5              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A4F5
1166+ A4F5 CD 31 9C     1 call PreviousScan
1167+ A4F8
1168+ A4F8 78               ld a,b
1169+ A4F9 CB 3F            srl a
1170+ A4FB 28 03            jr z,4F
1171+ A4FD
1172+ A4FD              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A4FD E5               push hl
1174+ A4FE 18 02            jr 5F
1175+ A500 2D           4 dec l
1176+ A501 E5               push hl
1177+ A502              ; ---
1178+ A502
1179+ A502              ;   Calcula el Puntero_objeto del disparo.
1180+ A502
1181+ A502 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A505 04               inc b
1183+ A506 05               dec b
1184+ A507 28 04            jr z,2F
1185+ A509
1186+ A509              ;   Nos desplazamos por el índice de disparos.
1187+ A509
1188+ A509 2C           3 inc l
1189+ A50A 2C               inc l
1190+ A50B 10 FC            djnz 3B
1191+ A50D
1192+ A50D              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A50D CD 8E 91     2 call Extrae_address
1194+ A510 E5               push hl
1195+ A511              ; ---
1196+ A511
1197+ A511              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A511              ; HL en el 1er .db de la caja.
1199+ A511
1200+ A511 21 1C 89         ld hl,Disparo_Amad
1201+ A514
1202+ A514 06 02            ld b,2
1203+ A516
1204+ A516 D1           6 pop de
1205+ A517 73               ld (hl),e
1206+ A518 23               inc hl
1207+ A519 72               ld (hl),d
1208+ A51A 23               inc hl
1209+ A51B
1210+ A51B 10 F9            djnz 6B
1211+ A51D
1212+ A51D C9               ret
1213+ A51E
1214+ A51E              Genera_coordenadas_de_disparo_Amadeus
1215+ A51E
1216+ A51E              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A51E              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A51E              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A51E
1220+ A51E CD 8E 91         call Extrae_address
1221+ A521 CD B6 95         call Genera_coordenadas
1222+ A524
1223+ A524 3D               dec a
1224+ A525
1225+ A525 21 5F 8C         ld hl,Coordenadas_disparo_certero
1226+ A528 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A529 23               inc hl
1228+ A52A 3A DF 8B         ld a,(Coordenada_X)
1229+ A52D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A52E
1231+ A52E AF               xor a
1232+ A52F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A530
1234+ A530 C9               ret
1235+ A531
1236+ A531              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A531              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A531              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A531
1240+ A531              ; ----------------------------------------------
1241+ A531              ;
1242+ A531              ;   27/08/24
1243+ A531              ;
1244+ A531              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A531              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A531
1247+ A531              Detecta_impacto_en_disparo_de_Amadeus
1248+ A531
1249+ A531              Extraccion_de_datos
1250+ A531
1251+ A531 13               inc de
1252+ A532 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A533
1254+ A533 5E               ld e,(hl)
1255+ A534 23               inc hl
1256+ A535 56               ld d,(hl)
1257+ A536
1258+ A536 23               inc hl
1259+ A537
1260+ A537 4E               ld c,(hl)
1261+ A538 23               inc hl
1262+ A539 46               ld b,(hl)
1263+ A53A
1264+ A53A C5               push bc
1265+ A53B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A53C
1267+ A53C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A53C
1269+ A53C CD 31 9C         call PreviousScan
1270+ A53F CD 31 9C         call PreviousScan
1271+ A542
1272+ A542              Detecta_impacto_
1273+ A542
1274+ A542 1A               ld a,(de)
1275+ A543 A6               and (hl)
1276+ A544 C0               ret nz
1277+ A545
1278+ A545 13               inc de
1279+ A546 23               inc hl
1280+ A547
1281+ A547 1A               ld a,(de)
1282+ A548 A6               and (hl)
1283+ A549 C9               ret
1284+ A54A
1285+ A54A              ; -------------------------------------------------------------------------------------------------------------
1286+ A54A              ;
1287+ A54A              ;   25/11//24
1288+ A54A              ;
1289+ A54A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A54A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A54A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A54A              ;
1293+ A54A              ;   MODIFICA: HL,DE,BC y A.
1294+ A54A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A54A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A54A
1297+ A54A              Colision_Entidad_Amadeus
1298+ A54A
1299+ A54A              ; Posible contacto de entidad con Amadeus. ?????
1300+ A54A
1301+ A54A              ; Exclusiones:
1302+ A54A
1303+ A54A 3A 7E 8C         ld a,(Shield)
1304+ A54D A7               and a
1305+ A54E C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A54F
1307+ A54F 21 55 8C         ld hl,Ctrl_3
1308+ A552 CB 76            bit 6,(hl)
1309+ A554 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A555
1311+ A555 21 5C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A558 CB 56            bit 2,(hl)
1313+ A55A C0               ret nz
1314+ A55B
1315+ A55B DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A55E FE 14        	cp $14
1317+ A560 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A561
1319+ A561 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A564 A7               and a
1321+ A565 C0               ret nz
1322+ A566
1323+ A566              Genera_coordenadas_X
1324+ A566
1325+ A566              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A566              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A566
1328+ A566              ;   Limpiamos almacenes.
1329+ A566
1330+ A566              ;    call Limpia_Coordenadas_X
1331+ A566
1332+ A566              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A566
1334+ A566 21 61 8C         ld hl,Coordenadas_X_Entidad
1335+ A569 DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A56C CD 92 A5         call Guarda_coordenadas_X
1337+ A56F
1338+ A56F              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A56F
1340+ A56F 3A AF 89         ld a,(CX_Amadeus)
1341+ A572 CD 92 A5         call Guarda_coordenadas_X
1342+ A575
1343+ A575 DD E5            push ix
1344+ A577 CD A6 A5         call Compara_coordenadas_X
1345+ A57A DD E1            pop ix
1346+ A57C
1347+ A57C C0               ret nz
1348+ A57D
1349+ A57D 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A57F DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A582
1352+ A582 DD 7D            ld a,ixl
1353+ A584 C6 04            add 4
1354+ A586 DD 6F            ld ixl,a
1355+ A588
1356+ A588 DD 22 5D 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A58C
1358+ A58C 21 5C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A58F CB D6            set 2,(hl)
1360+ A591
1361+ A591 C9               ret
1362+ A592
1363+ A592               ; ----- ----- ----- ----- -----
1364+ A592
1365+ A592 77           Guarda_coordenadas_X ld (hl),a
1366+ A593 3C               inc a
1367+ A594 2C               inc l
1368+ A595 77               ld (hl),a
1369+ A596 3C               inc a
1370+ A597 2C               inc l
1371+ A598 77               ld (hl),a
1372+ A599 2C               inc l
1373+ A59A C9               ret
1374+ A59B
1375+ A59B AF           Limpia_Coordenadas_X xor a
1376+ A59C 06 06            ld b,6
1377+ A59E 21 64 8C         ld hl,Coordenadas_X_Amadeus
1378+ A5A1 77           1 ld (hl),a
1379+ A5A2 23               inc hl
1380+ A5A3 10 FC            djnz 1B
1381+ A5A5 C9               ret
1382+ A5A6
1383+ A5A6              ; ----- ----- ----- ----- -----
1384+ A5A6
1385+ A5A6              Compara_coordenadas_X
1386+ A5A6
1387+ A5A6 DD 21 61 8C      ld ix,Coordenadas_X_Entidad
1388+ A5AA DD 7E 00         ld a,(ix+0)
1389+ A5AD CD BB A5         call Comparando
1390+ A5B0 C8               ret z
1391+ A5B1
1392+ A5B1 3C               inc a
1393+ A5B2 CD CA A5         call Comparando_1
1394+ A5B5 C8               ret z
1395+ A5B6
1396+ A5B6 3C               inc a
1397+ A5B7 CD CA A5         call Comparando_1
1398+ A5BA C9               ret
1399+ A5BB
1400+ A5BB              ; ----- ----- ----- ----- -----
1401+ A5BB              ;
1402+ A5BB              ;   4/12/23
1403+ A5BB              ;
1404+ A5BB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A5BB
1406+ A5BB              Comparando
1407+ A5BB
1408+ A5BB DD 2C            inc ixl
1409+ A5BD DD 2C            inc ixl
1410+ A5BF DD 2C            inc ixl
1411+ A5C1
1412+ A5C1 DD 46 00         ld b,(ix+0)
1413+ A5C4 DD 4E 01         ld c,(ix+1)
1414+ A5C7 DD 56 02         ld d,(ix+2)
1415+ A5CA
1416+ A5CA B8           Comparando_1 cp b
1417+ A5CB C8               ret z
1418+ A5CC B9               cp c
1419+ A5CD C8               ret z
1420+ A5CE BA               cp d
1421+ A5CF C9               ret
1422+ A5D0
1423+ A5D0              ; -----------------------------------------------------------------------
1424+ A5D0              ;
1425+ A5D0              ;   04/7/24
1426+ A5D0              ;
1427+ A5D0
1428+ A5D0              Detecta_colision_nave_entidad
1429+ A5D0
1430+ A5D0              ; Exclusiones:
1431+ A5D0
1432+ A5D0              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A5D0
1434+ A5D0 21 5C 8C     	ld hl,Impacto2
1435+ A5D3 CB 56        	bit 2,(hl)
1436+ A5D5 C8           	ret z
1437+ A5D6
1438+ A5D6              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A5D6
1440+ A5D6 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A5D9 CD 8E 91         call Extrae_address
1442+ A5DC 54               ld d,h
1443+ A5DD 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A5DE
1445+ A5DE 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A5E1 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A5E3 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A5E6
1449+ A5E6 C5           1 push bc
1450+ A5E7 06 03            ld b,3
1451+ A5E9 E5               push hl
1452+ A5EA
1453+ A5EA              ; .db
1454+ A5EA
1455+ A5EA 1A           3 ld a,(de)
1456+ A5EB A7               and a
1457+ A5EC 20 03            jr nz,4F
1458+ A5EE
1459+ A5EE 2C               inc l
1460+ A5EF 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A5F1
1462+ A5F1 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A5F3 28 04            jr z,2F
1464+ A5F5
1465+ A5F5              ; Impacto.
1466+ A5F5 FD 2D            dec iyl
1467+ A5F7 28 22            jr z,5F
1468+ A5F9
1469+ A5F9 1C           2 inc e
1470+ A5FA 10 EE            djnz 3B
1471+ A5FC
1472+ A5FC E1               pop hl
1473+ A5FD
1474+ A5FD              ; Hay salto de línea en el puntero de impresión ???
1475+ A5FD
1476+ A5FD 7C               ld a,h
1477+ A5FE D6 57            sub $57
1478+ A600 20 0A            jr nz,6F
1479+ A602
1480+ A602              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A602
1482+ A602 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A605 3E 20            ld a,$20
1484+ A607 A7               and a
1485+ A608 85               add l
1486+ A609 6F               ld l,a
1487+ A60A 18 01            jr 7F
1488+ A60C
1489+ A60C 24           6 inc h
1490+ A60D
1491+ A60D C1           7 pop bc
1492+ A60E 10 D6            djnz 1B
1493+ A610
1494+ A610              ;   Fin de la comparativa.
1495+ A610
1496+ A610              ;   NO HAY COLISIÓN !!!!!.
1497+ A610              ;
1498+ A610              ;   .db (Impacto) de Amadeus a "0".
1499+ A610              ;   RES el bit2 de (Impacto2).
1500+ A610              ;
1501+ A610              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A610              ;   Lo colocamos a "0".
1503+ A610
1504+ A610 21 5C 8C         ld hl,Impacto2
1505+ A613 CB 96            res 2,(hl)
1506+ A615 2A 5D 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A618 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A61A C9               ret
1509+ A61B
1510+ A61B              ;   COLISIÓN !!!!!.
1511+ A61B              ;
1512+ A61B              ;   .db (Impacto) de Amadeus a "1".
1513+ A61B              ;   SET el bit3 de (Impacto2).
1514+ A61B              ;
1515+ A61B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A61B
1517+ A61B E1           5 pop hl
1518+ A61C C1               pop bc
1519+ A61D
1520+ A61D 21 B2 89         ld hl,Impacto_Amadeus
1521+ A620 36 01            ld (hl),1
1522+ A622 21 5C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A625 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A627
1525+ A627 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A62A 2A 5D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A62D
1528+ A62D 23               inc hl
1529+ A62E 23               inc hl
1530+ A62F 23               inc hl
1531+ A630
1532+ A630 73               ld (hl),e
1533+ A631 23               inc hl
1534+ A632 72               ld (hl),d
1535+ A633
1536+ A633              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A633
1538+ A633 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A636 21 B5 89         ld hl,Pamm_Amadeus
1540+ A639
1541+ A639 73               ld (hl),e
1542+ A63A 23               inc hl
1543+ A63B 72               ld (hl),d
1544+ A63C
1545+ A63C C9               ret
1546+ A63D
1547+ A63D
1548+ A63D
# file closed: Disparo.asm
2394  A63D
2395  A63D              	SAVESNA "Pruebas.sna", START
2396  A63D
2397  A63D
2398  A63D
2399  A63D
# file closed: Banco_de_pruebas.asm
