# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 48 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 19 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 81 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 91 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD CA 94     	call Cls
 517  8CA2 CD 76 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD C3 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD F8 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicia los álbumes de líneas.
 529  8CB3
 530  8CB3 CD C4 90     	call Inicia_albumes_de_lineas
 531  8CB6 CD D4 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB9 CD E1 90     	call Inicia_albumes_de_disparos
 533  8CBC
 534  8CBC              ;	Inicia 1er Nivel.
 535  8CBC
 536  8CBC CD 25 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBF CD F3 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC2              ;														   _reponiendo entidades eliminadas.
 539  8CC2 CD 59 93     	call Prepara_Cajas_de_Entidades
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD AA 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD 99 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD ED 93     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 6B 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD A2 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD FD 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 81 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD CD 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 5F 9F     	call Motor_de_disparos_entidades
 596  8D04 CD F4 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD 91 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 0E 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD F8 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 14 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA B9 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD A2 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A DD 2A 2E 8C  	ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 663  8D4E              ;	ld de,(Scanlines_album_SP)
 664  8D4E
 665  8D4E              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 666  8D4E
 667  8D4E              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 668  8D4E              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 669  8D4E
 670  8D4E 3A 6C 8C     	ld a,(Impacto2)
 671  8D51 CB 5F        	bit 3,a
 672  8D53 C4 8B A1     	call nz,Compara_con_coordenadas_de_disparo
 673  8D56
 674  8D56 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 675  8D59 CB 4F        	bit 1,a
 676  8D5B C4 5E 92     	call nz,Genera_explosion
 677  8D5E 20 3C        	jr nz,Gestiona_siguiente_entidad
 678  8D60
 679  8D60 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 680  8D63 A7           	and a
 681  8D64 28 0C        	jr z,3F
 682  8D66
 683  8D66              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D66
 685  8D66              ; 5/7/24
 686  8D66              ; Nota importante:
 687  8D66              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D66              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D66              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D66
 691  8D66 3A BB 89     	ld a,(Impacto_Amadeus)
 692  8D69 A7           	and a
 693  8D6A C4 5E 92     	call nz,Genera_explosion
 694  8D6D 20 2D        	jr nz,Gestiona_siguiente_entidad
 695  8D6F
 696  8D6F              ; Falsa colisión !!!
 697  8D6F
 698  8D6F 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D72
 700  8D72              ; -------------------------------------------
 701  8D72
 702  8D72 CD 58 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D75 CD 7A 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D78 CD 48 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 705  8D7B
 706  8D7B DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 707  8D7D DD 2A F3 8B  	ld ix,(Puntero_de_impresion)
 708  8D81 CD 0A 95     	call Genera_datos_de_impresion
 709  8D84 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 710  8D86
 711  8D86 CD 10 94     	call Decrementa_Contador_de_mov_masticados
 712  8D89
 713  8D89              ; -------------------------------------------
 714  8D89
 715  8D89              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 716  8D89
 717  8D89 2A F3 8B     	ld hl,(Puntero_de_impresion)
 718  8D8C CD DE 94     	call Genera_coordenadas
 719  8D8F
 720  8D8F ED 4B EF 8B  	ld bc,(Coordenada_X)
 721  8D93
 722  8D93 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 723  8D96 DD 70 02     	ld (ix+2),b
 724  8D99
 725  8D99              ; TODO: Generamos disparo ???
 726  8D99
 727  8D99              ;	ld a,(Permiso_de_disparo_Entidades)
 728  8D99              ;	and a
 729  8D99              ;	call nz,Entidad_genera_disparo_si_procede
 730  8D99
 731  8D99 CD 0F A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 732  8D9C
 733  8D9C              Gestiona_siguiente_entidad
 734  8D9C
 735  8D9C CD 61 91     	call Incrementa_punteros_de_cajas
 736  8D9F
 737  8D9F C1           	pop bc
 738  8DA0 10 A7        	djnz 2B
 739  8DA2
 740  8DA2              ; Hemos gestionado todas las entidades.
 741  8DA2              ; ----- ----- -----
 742  8DA2
 743  8DA2 CD 6C 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 744  8DA5 CD 83 8F     	call Ordena_tabla_de_impresion
 745  8DA8 CD FD 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 746  8DAB
 747  8DAB CD 29 8F     	call Borra_diferencia
 748  8DAE
 749  8DAE 3A 65 8C     	ld a,(Ctrl_3)
 750  8DB1 CB 5F        	bit 3,a
 751  8DB3 20 04        	jr nz,Gestion_de_Amadeus
 752  8DB5
 753  8DB5 EB           	ex de,hl
 754  8DB6 71           	ld (hl),c
 755  8DB7 2C           	inc l
 756  8DB8 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 757  8DB9
 758  8DB9              ;! GESTIONA AMADEUS !!!!!!!!!!
 759  8DB9
 760  8DB9              Gestion_de_Amadeus
 761  8DB9
 762  8DB9 21 65 8C     	ld hl,Ctrl_3
 763  8DBC CB 76        	bit 6,(hl)
 764  8DBE 28 13        	jr z,Amadeus_vivo
 765  8DC0
 766  8DC0              ; Amadeus ha sido destruido.
 767  8DC0              ; Decrementa (Temp_new_live).
 768  8DC0
 769  8DC0 21 79 8C     	ld hl,Temp_new_live
 770  8DC3 35           	dec (hl)
 771  8DC4 20 26        	jr nz,End_frame
 772  8DC6
 773  8DC6              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 774  8DC6
 775  8DC6 21 92 8C     	ld hl,Lives
 776  8DC9 35           	dec (hl)
 777  8DCA
 778  8DCA              ;! Fin del juego
 779  8DCA
 780  8DCA F3           	di
 781  8DCB 28 FE        	jr z,$
 782  8DCD FB           	ei
 783  8DCE
 784  8DCE              ; Nueva nave.
 785  8DCE
 786  8DCE CD 40 8E     	call Reinicia_Amadeus
 787  8DD1 18 19        	jr End_frame
 788  8DD3
 789  8DD3              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 790  8DD3
 791  8DD3              Amadeus_vivo
 792  8DD3
 793  8DD3 3A BB 89     	ld a,(Impacto_Amadeus)
 794  8DD6 A7           	and a
 795  8DD7 C4 8E 92     	call nz, Genera_explosion_Amadeus
 796  8DDA 20 10        	jr nz, End_frame
 797  8DDC
 798  8DDC CD 3B 92     	call Teclado
 799  8DDF 21 65 8C     	ld hl,Ctrl_3
 800  8DE2
 801  8DE2 CB 6E        	bit 5,(hl)
 802  8DE4 28 06        	jr z,End_frame
 803  8DE6
 804  8DE6              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 805  8DE6
 806  8DE6 CD BD 8E     	call Change_Amadeus
 807  8DE9 CD A2 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 808  8DEC
 809  8DEC              End_frame
 810  8DEC
 811  8DEC              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 812  8DEC              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 813  8DEC
 814  8DEC CD B6 A0     	call Genera_datos_de_impresion_disparos_Entidades
 815  8DEF CD 7A A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 816  8DF2 CD D0 A1     	call Calcula_bytes_pintado_disparos
 817  8DF5 CD DD A1     	call Limpia_album_de_pintado_disparos_entidades
 818  8DF8
 819  8DF8              ; ------------ ------------- --------------
 820  8DF8
 821  8DF8 2A 43 8C     	ld hl,(Album_de_borrado)
 822  8DFB 22 5F 8C     	ld (Scanlines_album_SP),hl
 823  8DFE
 824  8DFE 21 65 8C     	ld hl,Ctrl_3
 825  8E01 CB C6        	set 0,(hl) 											; Indica Frame completo.
 826  8E03 CB 9E        	res 3,(hl)
 827  8E05 CB A6        	res 4,(hl)
 828  8E07
 829  8E07 AF           	xor a
 830  8E08 D3 FE        	out ($fe),a
 831  8E0A
 832  8E0A 76           	halt
 833  8E0B
 834  8E0B              ; ----------------------------------------
 835  8E0B
 836  8E0B              ;	ld a,(Ctrl_1) 										; Existe Loop?
 837  8E0B              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 838  8E0B CA FE 8C     	jp z,Main
 839  8E0E
 840  8E0E              ;------------------------------------------
 841  8E0E              ;
 842  8E0E              ;	07/11/24
 843  8E0E
 844  8E0E              Autoriza_disparo_de_entidades
 845  8E0E
 846  8E0E 3E 01        	ld a,1
 847  8E10 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 848  8E13
 849  8E13 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 850  8E16 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 851  8E18 38 02        	jr c,1F
 852  8E1A
 853  8E1A              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 854  8E1A              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 855  8E1A              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 856  8E1A
 857  8E1A D6 03        	sub 3
 858  8E1C
 859  8E1C 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 860  8E1F 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 861  8E22
 862  8E22 C9           	ret
 863  8E23
 864  8E23              ;------------------------------------------
 865  8E23              ;
 866  8E23              ;	14/09/24
 867  8E23              ;
 868  8E23              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 869  8E23
 870  8E23              Entidad_genera_disparo_si_procede
 871  8E23
 872  8E23 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 873  8E26 CB 06        	rlc (hl)
 874  8E28
 875  8E28 DC 06 A1     	call c,Genera_disparo_de_entidad_maldosa
 876  8E2B
 877  8E2B C9           	ret
 878  8E2C
 879  8E2C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 880  8E2C              ;
 881  8E2C              ;	30/09/24
 882  8E2C
 883  8E2C              Actuaiza_sp_de_disparos_de_entidades
 884  8E2C
 885  8E2C 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 886  8E2F 23           	inc hl
 887  8E30 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 888  8E33
 889  8E33 11 FD 88     	ld de,Numeros_aleatorios+7
 890  8E36 7B           	ld a,e
 891  8E37 95           	sub l
 892  8E38 C0           	ret nz
 893  8E39
 894  8E39 21 F6 88     1 ld hl,Numeros_aleatorios
 895  8E3C 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 896  8E3F C9           	ret
 897  8E40
 898  8E40              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 899  8E40              ;
 900  8E40              ;	24/07/24
 901  8E40
 902  8E40              Reinicia_Amadeus
 903  8E40
 904  8E40              ;	Reinicia posición y estado.
 905  8E40
 906  8E40 21 CF 50     	ld hl,$50cf
 907  8E43 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 908  8E46 21 CC DC     	ld hl,$dccc
 909  8E49 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 910  8E4C 21 3D 00     	ld hl,$003d
 911  8E4F 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 912  8E52
 913  8E52              ;	limpiamos el álbum de borrado.
 914  8E52
 915  8E52 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 916  8E55
 917  8E55 AF           	xor a
 918  8E56 77           	ld (hl),a
 919  8E57
 920  8E57 E5           	push hl
 921  8E58 D1           	pop de
 922  8E59 13           	inc de
 923  8E5A
 924  8E5A 01 23 00     	ld bc,35
 925  8E5D ED B0        	ldir
 926  8E5F
 927  8E5F CD A2 90     	call Genera_datos_de_impresion_Amadeus
 928  8E62
 929  8E62              ;	Reinicia temporizaciones.
 930  8E62
 931  8E62 CD 81 91     	call Inicia_Shield
 932  8E65
 933  8E65 3E 5A        	ld a,90
 934  8E67 32 8F 8C     	ld (Shield),a
 935  8E6A
 936  8E6A 3E 64        	ld a,100
 937  8E6C 32 79 8C     	ld (Temp_new_live),a
 938  8E6F
 939  8E6F              ; 	Restauramos el FLAG: Amadeus vivo.
 940  8E6F
 941  8E6F 21 65 8C     	ld hl,Ctrl_3
 942  8E72 CB B6        	res 6,(hl)
 943  8E74
 944  8E74              ;	Fuerza la impresión de la nave en el siguiente frame.
 945  8E74
 946  8E74 21 65 8C      	ld hl,Ctrl_3
 947  8E77 CB EE        	set 5,(hl)
 948  8E79
 949  8E79 C9           	ret
 950  8E7A
 951  8E7A              ; --------------------------------------------------------------------------------------------------------------
 952  8E7A              ;
 953  8E7A              ;	23/11/24
 954  8E7A
 955  8E7A              Ajusta_velocidad_entidad
 956  8E7A
 957  8E7A DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 958  8E7D A7           	and a
 959  8E7E C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 960  8E7F              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 961  8E7F              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 962  8E7F
 963  8E7F
 964  8E7F              ; Incrementa (Contador_de_vueltas)x2.
 965  8E7F              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 966  8E7F
 967  8E7F              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 968  8E7F              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 969  8E7F              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 970  8E7F              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 971  8E7F              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 972  8E7F
 973  8E7F
 974  8E7F CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
 975  8E81 DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
 976  8E84 E6 10        	and $10
 977  8E86 C8           	ret z
 978  8E87
 979  8E87              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 980  8E87
 981  8E87 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
 982  8E8A CB 2F        	sra a
 983  8E8C CB 2F        	sra a
 984  8E8E DD 77 0B     	ld (ix+11),a
 985  8E91
 986  8E91 DD 6E 07     	ld l,(ix+7)
 987  8E94 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
 988  8E97
 989  8E97              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
 990  8E97 23           	inc hl
 991  8E98 23           	inc hl
 992  8E99 23           	inc hl
 993  8E9A 23           	inc hl
 994  8E9B              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 995  8E9B
 996  8E9B DD 75 07     	ld (ix+7),l
 997  8E9E DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
 998  8EA1
 999  8EA1 C9           	ret
1000  8EA2
1001  8EA2              ; --------------------------------------------------------------------------------------------------------------
1002  8EA2              ;
1003  8EA2              ;	25/08/24
1004  8EA2
1005  8EA2              Change
1006  8EA2
1007  8EA2 3A 5C 8C     	ld a,(Switch)
1008  8EA5 EE 01        	xor 1
1009  8EA7 32 5C 8C     	ld (Switch),a
1010  8EAA 2A 41 8C     	ld hl,(Album_de_pintado)
1011  8EAD ED 5B 43 8C  	ld de,(Album_de_borrado)
1012  8EB1 EB           	ex de,hl
1013  8EB2 22 41 8C     	ld (Album_de_pintado),hl
1014  8EB5 22 5F 8C     	ld (Scanlines_album_SP),hl
1015  8EB8 ED 53 43 8C  	ld (Album_de_borrado),de
1016  8EBC C9           	ret
1017  8EBD
1018  8EBD              Change_Amadeus
1019  8EBD
1020  8EBD 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1021  8EC0 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1022  8EC4 EB           	ex de,hl
1023  8EC5 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1024  8EC8 ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1025  8ECC C9           	ret
1026  8ECD
1027  8ECD              Change_Disparos
1028  8ECD
1029  8ECD              ; Álbumes de Amadeus.
1030  8ECD
1031  8ECD 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1032  8ED0 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1033  8ED4 EB           	ex de,hl
1034  8ED5 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1035  8ED8 ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1036  8EDC CD C5 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1037  8EDF
1038  8EDF              ; Álbumes de entidades.
1039  8EDF
1040  8EDF 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1041  8EE2 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1042  8EE6 EB           	ex de,hl
1043  8EE7 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1044  8EEA ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1045  8EEE 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1046  8EF1
1047  8EF1 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1048  8EF4 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1049  8EF7
1050  8EF7 C9           	ret
1051  8EF8
1052  8EF8              ; ------------------------------------
1053  8EF8              ;
1054  8EF8              ; 1/05/24
1055  8EF8
1056  8EF8              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1057  8EF8              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1058  8EF8
1059  8EF8              ;	DESTRUYE: HL,DE,A
1060  8EF8              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1061  8EF8
1062  8EF8              ;	Variables implicadas: (RND_SP).
1063  8EF8
1064  8EF8              Extrae_numero_aleatorio_y_avanza
1065  8EF8
1066  8EF8 21 00 89     	ld hl,Tabla_de_pintado
1067  8EFB EB           	ex de,hl
1068  8EFC 2A 7A 8C     	ld hl,(RND_SP)
1069  8EFF EB           	ex de,hl
1070  8F00 A7           	and a
1071  8F01 ED 52        	sbc hl,de
1072  8F03
1073  8F03 2A 7A 8C     	ld hl,(RND_SP)
1074  8F06 20 06        	jr nz,1F
1075  8F08
1076  8F08              ; Sitúa HL al principio de la tabla de nº aleatorios.
1077  8F08
1078  8F08 21 F6 88     	ld hl,Numeros_aleatorios
1079  8F0B 22 7A 8C     	ld (RND_SP),HL
1080  8F0E
1081  8F0E              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1082  8F0E
1083  8F0E 7E           1 ld a,(hl)
1084  8F0F 23           	inc hl
1085  8F10 22 7A 8C     	ld (RND_SP),hl
1086  8F13 C9           	ret
1087  8F14
1088  8F14              ; ------------------------------------
1089  8F14              ;
1090  8F14              ; 1/05/24
1091  8F14
1092  8F14              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1093  8F14              ; (1 a 4 segundos).
1094  8F14              ; Actualizamos (Clock_next_entity) con A.
1095  8F14
1096  8F14              ;	DESTRUYE: A y B.
1097  8F14              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1098  8F14              ;			 Actualiza (Clock_next_entity) con A.
1099  8F14
1100  8F14              ;	Variables implicadas: (Clock_next_entity).
1101  8F14
1102  8F14              ; Notas:
1103  8F14
1104  8F14              ; 	$32 1 seg.
1105  8F14              ; 	$64 2 seg.
1106  8F14              ; 	$96 3 seg.
1107  8F14              ; 	$c8 4 seg.
1108  8F14              ; 	$fa 5 seg.
1109  8F14
1110  8F14              ; $ffff 1310,7 seg, 22 minutos.
1111  8F14
1112  8F14              ;	$0100  5 seg. aproximadamente.
1113  8F14              ;	$0200 10 seg. aproximadamente.
1114  8F14              ;	$0300 15 seg. aproximadamente.
1115  8F14              ;	$0400 20 seg. aproximadamente.
1116  8F14              ;	$0500 25 seg. aproximadamente.
1117  8F14              ;	$0600 30 seg. aproximadamente.
1118  8F14
1119  8F14              Define_Clock_next_entity
1120  8F14
1121  8F14 FE 34        	cp $34
1122  8F16 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1123  8F18
1124  8F18              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1125  8F18
1126  8F18 4F           3 ld c,a
1127  8F19 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1128  8F1B 2A 78 5C     	ld hl,(FRAMES)
1129  8F1E A7           	and a
1130  8F1F ED 4A        	adc hl,bc
1131  8F21 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1132  8F24 C9           	ret
1133  8F25
1134  8F25 3E 34        1 ld a,$34
1135  8F27 18 EF        	jr 3B
1136  8F29
1137  8F29              ; ------------------------------------
1138  8F29              ;
1139  8F29              ; 18/03/24
1140  8F29
1141  8F29              Borra_diferencia
1142  8F29
1143  8F29 ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1144  8F2D
1145  8F2D 3A 5C 8C     	ld a,(Switch)
1146  8F30 A7           	and a
1147  8F31 28 08        	jr z,2F
1148  8F33
1149  8F33 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1150  8F36 11 5A 8C     	ld de,Techo_Scanlines_album_2
1151  8F39 18 06        	jr 3F
1152  8F3B
1153  8F3B 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1154  8F3E 11 58 8C     	ld de,Techo_Scanlines_album
1155  8F41
1156  8F41              ; Diferencia.
1157  8F41
1158  8F41 ED 42        3 sbc hl,bc
1159  8F43
1160  8F43 C8           	ret z
1161  8F44 D8           	ret c
1162  8F45
1163  8F45              ; Nuevo techo, (más bajo que el anterior).
1164  8F45              ; Fijamos nuevo techo y borramos bytes sobrantes.
1165  8F45
1166  8F45 EB           	ex de,hl
1167  8F46
1168  8F46 71           	ld (hl),c
1169  8F47 2C           	inc l
1170  8F48 70           	ld (hl),b
1171  8F49
1172  8F49 AF           	xor a
1173  8F4A 43           	ld b,e
1174  8F4B
1175  8F4B 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1176  8F4E
1177  8F4E 77           1 ld (hl),a
1178  8F4F 23           	inc hl
1179  8F50 10 FC        	djnz 1B
1180  8F52
1181  8F52              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1182  8F52
1183  8F52 21 65 8C     	ld hl,Ctrl_3
1184  8F55 CB DE        	set 3,(hl)
1185  8F57
1186  8F57 C9           	ret
1187  8F58
1188  8F58              ; --------------------------------------------------------------------------------------------------------------
1189  8F58              ;
1190  8F58              ;	23/11/24
1191  8F58              ;
1192  8F58              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1193  8F58
1194  8F58              Entidad_a_Tabla_de_pintado
1195  8F58
1196  8F58              ; Almacena la Coordenada Y de la entidad en curso.
1197  8F58
1198  8F58              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1199  8F58
1200  8F58 DD 7E 02     	ld a,(ix+2)
1201  8F5B 2A 61 8C     	ld hl,(India_SP)
1202  8F5E 77           	ld (hl),a
1203  8F5F 2C           	inc l
1204  8F60
1205  8F60              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1206  8F60
1207  8F60 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1208  8F64
1209  8F64 73           	ld (hl),e
1210  8F65 2C           	inc l
1211  8F66 72           	ld (hl),d
1212  8F67 2C           	inc l
1213  8F68
1214  8F68 22 61 8C     	ld (India_SP),hl
1215  8F6B
1216  8F6B C9           	ret
1217  8F6C
1218  8F6C              ; --------------------------------------------------------------------------------------------------------------
1219  8F6C              ;
1220  8F6C              ;	27/03/24
1221  8F6C              ;
1222  8F6C
1223  8F6C              Inicializa_India_y_limpia_Tabla_de_impresion
1224  8F6C
1225  8F6C 2A 61 8C     	ld hl,(India_SP)
1226  8F6F 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1227  8F72
1228  8F72 79           	ld a,c
1229  8F73 95           	sub l
1230  8F74 28 06        	jr z,2F
1231  8F76 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1232  8F77              ;														; _ y pasamos a inicializar (India_SP).
1233  8F77 AF           	xor a
1234  8F78
1235  8F78 77           1 ld (hl),a
1236  8F79 2C           	inc l
1237  8F7A 10 FC        	djnz 1B												; Limpia Tabla.
1238  8F7C
1239  8F7C 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1240  8F7F 22 61 8C     	ld (India_SP),hl
1241  8F82
1242  8F82 C9           	ret
1243  8F83
1244  8F83              ; --------------------------------------------------------------------------------------------------------------
1245  8F83              ;
1246  8F83              ;	31/3/24
1247  8F83
1248  8F83              Ordena_tabla_de_impresion
1249  8F83
1250  8F83              ; 5794 T/states.
1251  8F83              ; 6278 T/states.
1252  8F83              ; 5310 T/states.
1253  8F83
1254  8F83              ; Inicializamos punteros (India_SP) e (India_2_SP).
1255  8F83              ; Inicializamos contador de comparaciones, [C].
1256  8F83              ; Cargamos los registros A y B para efectuar comparación.
1257  8F83
1258  8F83 FD 2E 00     	ld iyl,0
1259  8F86
1260  8F86 3A 38 8C     	ld a,(Entidades_en_curso)
1261  8F89 FE 04        	cp 4 	;	4
1262  8F8B D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1263  8F8C
1264  8F8C 3D           	dec a
1265  8F8D 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1266  8F8E 51           	ld d,c 										; Copia de respaldo.
1267  8F8F
1268  8F8F 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1269  8F90
1270  8F90 21 03 89     	ld hl,Tabla_de_pintado+3
1271  8F93 46           	ld b,(hl)
1272  8F94 22 63 8C     	ld (India_2_SP),hl
1273  8F97
1274  8F97 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1275  8F98 DC C0 8F     	call c, Avanza_India_2_SP
1276  8F9B CC C0 8F     	call z, Avanza_India_2_SP
1277  8F9E
1278  8F9E FD 2D        	dec iyl
1279  8FA0 28 18        	jr z,2F
1280  8FA2
1281  8FA2
1282  8FA2              ; --------------------------------------------------------------------------------------------------------------
1283  8FA2              ;
1284  8FA2              ;	7/4/24
1285  8FA2
1286  8FA2              Trueque
1287  8FA2
1288  8FA2              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1289  8FA2              ;  			A contiene en nº de fila de (India_SP).
1290  8FA2              ;			HL contiene (India_2_SP).
1291  8FA2
1292  8FA2 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1293  8FA3 E5           	push hl										; Preservo (India_2_SP).
1294  8FA4
1295  8FA4 ED 5B 61 8C  	ld de,(India_SP)
1296  8FA8 EB           	ex de,hl
1297  8FA9 70           	ld (hl),b
1298  8FAA 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1299  8FAB
1300  8FAB CD EC 8F     	call Intercambia_1_byte
1301  8FAE CD EC 8F     	call Intercambia_1_byte
1302  8FB1
1303  8FB1
1304  8FB1              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1305  8FB1              ; Recuperamos (India_2_SP) en HL.
1306  8FB1
1307  8FB1 2A 61 8C     	ld hl,(India_SP)
1308  8FB4 7E           	ld a,(hl)
1309  8FB5
1310  8FB5 E1           	pop hl
1311  8FB6 D1           	pop de
1312  8FB7
1313  8FB7              ; --------------------------------------------------------------------------------------------------------------
1314  8FB7
1315  8FB7 CD C0 8F     	call Avanza_India_2_SP
1316  8FBA
1317  8FBA 14           2 inc d
1318  8FBB 15           	dec d
1319  8FBC C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1320  8FBD 18 D8        	jr 1B
1321  8FBF
1322  8FBF C9           	ret
1323  8FC0
1324  8FC0              ; ----- ----- ----- ----- -----
1325  8FC0
1326  8FC0              Avanza_India_2_SP
1327  8FC0
1328  8FC0 0D           	dec c
1329  8FC1 28 0A        	jr z,Avanza_punteros_indios
1330  8FC3
1331  8FC3 FD 2C        	inc iyl
1332  8FC5
1333  8FC5 2C           	inc l
1334  8FC6 2C           	inc l
1335  8FC7 2C           	inc l
1336  8FC8
1337  8FC8 46           	ld b,(hl)
1338  8FC9 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1339  8FCC
1340  8FCC C9           	ret
1341  8FCD
1342  8FCD              ; ----- ----- ----- ----- -----
1343  8FCD
1344  8FCD              Avanza_punteros_indios
1345  8FCD
1346  8FCD 15           	dec d
1347  8FCE 28 15        	jr z,Prepara_salida
1348  8FD0
1349  8FD0 4A           	ld c,d
1350  8FD1
1351  8FD1 2A 61 8C     	ld hl,(India_SP)
1352  8FD4 2C           	inc l
1353  8FD5 2C           	inc l
1354  8FD6 2C           	inc l
1355  8FD7 7E           	ld a,(hl)
1356  8FD8 22 61 8C     	ld (India_SP),hl
1357  8FDB
1358  8FDB 2C           	inc l
1359  8FDC 2C           	inc l
1360  8FDD 2C           	inc l
1361  8FDE 46           	ld b,(hl)
1362  8FDF 22 63 8C     	ld (India_2_SP),hl
1363  8FE2
1364  8FE2 FD 2C        	inc iyl
1365  8FE4
1366  8FE4 C9           	ret
1367  8FE5
1368  8FE5              Prepara_salida
1369  8FE5
1370  8FE5 21 00 89     	ld hl,Tabla_de_pintado
1371  8FE8 22 61 8C     	ld (India_SP),hl
1372  8FEB C9           	ret
1373  8FEC
1374  8FEC
1375  8FEC 2C           Intercambia_1_byte inc l
1376  8FED 1C           	inc e
1377  8FEE 46           	ld b,(hl)
1378  8FEF 1A           	ld a,(de)
1379  8FF0 EB           	ex de,hl
1380  8FF1 70           	ld (hl),b
1381  8FF2 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1382  8FF3 C9           	ret
1383  8FF4
1384  8FF4              ; -----------------------------------------------------------------------------------
1385  8FF4              ;
1386  8FF4              ;	20/01/24
1387  8FF4              ;
1388  8FF4              ;
1389  8FF4
1390  8FF4              Construye_movimientos_masticados_entidad
1391  8FF4
1392  8FF4 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1393  8FF7 E5           	push hl
1394  8FF8 CD 3B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1395  8FFB              ;															; _ el (Contador_de_mov_masticados).
1396  8FFB CD 19 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1397  8FFE              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1398  8FFE CD F1 99     	call Recompone_posicion_inicio
1399  9001
1400  9001 CD 21 97     1 call Draw
1401  9004 CD 20 90     	call Guarda_movimiento_masticado
1402  9007
1403  9007 CD 9E 9D     	call Movimiento
1404  900A
1405  900A 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1406  900D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1407  900F 28 F0        	jr z,1B
1408  9011
1409  9011              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1410  9011              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1411  9011
1412  9011 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1413  9012 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1414  9015
1415  9015              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1416  9015
1417  9015 CD 02 9F     	call Situa_en_contador_general_de_mov_masticados
1418  9018
1419  9018              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1420  9018              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1421  9018
1422  9018 ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1423  901C
1424  901C 71           	ld (hl),c
1425  901D 23           	inc hl
1426  901E 70           	ld (hl),b
1427  901F
1428  901F C9           	ret
1429  9020
1430  9020              ; -----------------------------------------------------------------------------------
1431  9020              ;
1432  9020              ;	28/12/23
1433  9020              ;
1434  9020              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1435  9020              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1436  9020
1437  9020              Guarda_movimiento_masticado
1438  9020
1439  9020 ED 73 3D 8C  	ld (Stack),sp
1440  9024 ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1441  9028
1442  9028 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1443  902A FD E5            push iy 												; Pushea Puntero_objeto.
1444  902C
1445  902C ED 7B 3D 8C      ld sp,(Stack)
1446  9030
1447  9030 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1448  9033 23           	inc hl
1449  9034 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1450  9037
1451  9037 CD 3B 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1452  903A              ;															; _ el (Contador_de_mov_masticados).
1453  903A C9               ret
1454  903B
1455  903B              ; --------------------------------------------------------------------------------------------------------------
1456  903B              ;
1457  903B              ;	12/1/24
1458  903B              ;
1459  903B              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1460  903B
1461  903B              Actualiza_Puntero_de_almacen_de_mov_masticados
1462  903B
1463  903B 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1464  903E 01 04 00     	ld bc,4
1465  9041 A7           	and a
1466  9042 ED 4A        	adc hl,bc
1467  9044 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1468  9047 C9           	ret
1469  9048
1470  9048              ; ------------------------------------------
1471  9048              ;
1472  9048              ;	23/11/24
1473  9048              ;
1474  9048              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1475  9048
1476  9048
1477  9048              Obtenemos_puntero_de_impresion
1478  9048
1479  9048 DD 6E 07     	ld l,(ix+7)
1480  904B DD 66 08     	ld h,(ix+8)
1481  904E
1482  904E              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1483  904E
1484  904E ED 73 3D 8C  	ld (Stack),sp
1485  9052 F9           	ld sp,hl
1486  9053
1487  9053 AF           	xor a
1488  9054 67           	ld h,a
1489  9055 6C           	ld l,h															; ld hl,"0"
1490  9056
1491  9056 D1           	pop de															; (Puntero_objeto) en DE.
1492  9057 C1           	pop bc
1493  9058
1494  9058              ; 	Almacena (Puntero_de_impresion) en caja.
1495  9058
1496  9058 DD 71 05     	ld (ix+5),c
1497  905B DD 70 06     	ld (ix+6),b
1498  905E
1499  905E ED 43 F3 8B  	ld (Puntero_de_impresion),bc
1500  9062
1501  9062              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1502  9062
1503  9062 39           	add hl,sp
1504  9063 DD 75 07     	ld (ix+7),l
1505  9066 DD 74 08     	ld (ix+8),h
1506  9069
1507  9069 C1           	pop bc
1508  906A
1509  906A 79           	ld a,c
1510  906B 80           	add b															; Comprueba si ya no hay datos en el almacén.
1511  906C
1512  906C ED 7B 3D 8C  	ld sp,(Stack)
1513  9070
1514  9070 CC 1E 94     	call z,Reinicia_entidad_maliciosa
1515  9073
1516  9073 C9           	ret
1517  9074
1518  9074              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1519  9074              ;
1520  9074              ;	22/7/24
1521  9074
1522  9074              Cargamos_registros_con_explosion
1523  9074
1524  9074
1525  9074 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1526  9077 CD 13 91     	call Extrae_address
1527  907A
1528  907A 5D           	ld e,l
1529  907B 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1530  907C
1531  907C DD 2A F3 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1532  9080
1533  9080 C9           	ret
1534  9081
1535  9081
1536  9081              Cargamos_registros_con_explosion_Amadeus
1537  9081
1538  9081 2A BE 89     	ld hl,(Pamm_Amadeus)
1539  9084 CD 13 91     	call Extrae_address
1540  9087
1541  9087 5D           	ld e,l
1542  9088 54           	ld d,h
1543  9089
1544  9089 DD 2A BC 89  	ld ix,(p.imp.amadeus)
1545  908D
1546  908D C9           	ret
1547  908E
1548  908E              ; --------------------------------------------------------------------------------------------------------------
1549  908E              ;
1550  908E              ;	17/06/24
1551  908E              ;
1552  908E              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1553  908E              ;
1554  908E              ;	IX contiene el puntero de impresión.
1555  908E              ;	DE contiene (Puntero_objeto).
1556  908E
1557  908E
1558  908E              Cargamos_registros_con_mov_masticado_Amadeus
1559  908E
1560  908E ED 73 3D 8C  	ld (Stack),sp
1561  9092 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1562  9096 D1           	pop de 															; DE contiene Puntero_objeto
1563  9097 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1564  9099 DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1565  909D ED 7B 3D 8C  	ld sp,(Stack)
1566  90A1 C9           	ret
1567  90A2
1568  90A2              ; ---------------------------------------------------------------------------------------------------------------------
1569  90A2              ;
1570  90A2              ;	18/6/24
1571  90A2              ;
1572  90A2              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1573  90A2
1574  90A2              Genera_datos_de_impresion_Amadeus
1575  90A2
1576  90A2 3A BB 89     	ld a,(Impacto_Amadeus)
1577  90A5 A7           	and a
1578  90A6 20 03        	jr nz,1F
1579  90A8
1580  90A8              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1581  90A8              ; _apuntando a la correspondiente explosión.
1582  90A8
1583  90A8 CD 8E 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1584  90AB
1585  90AB DD 7D        1 ld a,ixl
1586  90AD E6 1F        	and $1f
1587  90AF 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1588  90B2
1589  90B2 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1590  90B5 E5           	push hl
1591  90B6
1592  90B6 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1593  90B9 22 5F 8C     	ld (Scanlines_album_SP),hl
1594  90BC
1595  90BC CD 0A 95     	call Genera_datos_de_impresion
1596  90BF
1597  90BF E1           	pop hl
1598  90C0 22 5F 8C     	ld (Scanlines_album_SP),hl
1599  90C3
1600  90C3 C9           	ret
1601  90C4
1602  90C4              ; ---------------------------------------------------------------------------------------------------------------------
1603  90C4              ;
1604  90C4              ;	13/03/24
1605  90C4              ;
1606  90C4              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1607  90C4
1608  90C4              Inicia_albumes_de_lineas
1609  90C4
1610  90C4 21 00 80     	ld hl,Scanlines_album
1611  90C7 22 41 8C     	ld (Album_de_pintado),hl
1612  90CA 22 5F 8C     	ld (Scanlines_album_SP),hl
1613  90CD
1614  90CD 21 1A 81     	ld hl,Scanlines_album_2
1615  90D0 22 43 8C     	ld (Album_de_borrado),hl
1616  90D3
1617  90D3 C9           	ret
1618  90D4
1619  90D4              Inicia_albumes_de_lineas_Amadeus
1620  90D4
1621  90D4 21 34 82     	ld hl,Amadeus_scanlines_album
1622  90D7 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1623  90DA 21 58 82     	ld hl,Amadeus_scanlines_album_2
1624  90DD 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1625  90E0
1626  90E0 C9           	ret
1627  90E1
1628  90E1              Inicia_albumes_de_disparos
1629  90E1
1630  90E1 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1631  90E4 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1632  90E7 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1633  90EA 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1634  90ED
1635  90ED 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1636  90F0 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1637  90F3 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1638  90F6
1639  90F6 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1640  90F9 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1641  90FC
1642  90FC C9           	ret
1643  90FD
1644  90FD              ; ---------------------------------------------------------------------------------------------------------------------
1645  90FD              ;
1646  90FD              ; 8/1/23
1647  90FD              ;
1648  90FD              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1649  90FD              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1650  90FD              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1651  90FD
1652  90FD              ; Destruye HL y DE !!!!!
1653  90FD
1654  90FD              Inicia_punteros_de_cajas
1655  90FD
1656  90FD 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1657  9100 CD 13 91         call Extrae_address
1658  9103 22 2E 8C         ld (Puntero_store_caja),hl
1659  9106 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1660  9109 22 32 8C     	ld (Indice_restore_caja),hl
1661  910C CD 13 91     	call Extrae_address
1662  910F 22 30 8C     	ld (Puntero_restore_caja),hl
1663  9112 C9               ret
1664  9113
1665  9113              ; *************************************************************************************************************************************************************
1666  9113
1667  9113              ;
1668  9113              ; 20/10/22
1669  9113              ;
1670  9113              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1671  9113              ;
1672  9113              ; Destruye el puntero y DE !!!!!
1673  9113
1674  9113 5E           Extrae_address ld e,(hl)
1675  9114 23           	inc hl
1676  9115 56           	ld d,(hl)
1677  9116 2B           	dec hl
1678  9117 EB           	ex de,hl
1679  9118 C9           	ret
1680  9119
1681  9119              ; *************************************************************************************************************************************************************
1682  9119              ;
1683  9119              ;	20/1/24
1684  9119              ;
1685  9119              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1686  9119              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1687  9119              ;
1688  9119              ;   Destruye HL y BC !!!!!,
1689  9119              ;
1690  9119              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1691  9119              ;					"0" ..... Izquierda.
1692  9119
1693  9119              Inicia_Puntero_objeto
1694  9119
1695  9119 3A 0D 8C     	ld a,(Cuad_objeto)
1696  911C E6 01        	and 1
1697  911E F5           	push af
1698  911F CC 3B 91     	call z,Inicia_puntero_objeto_izq
1699  9122 F1           	pop af
1700  9123 C8           	ret z
1701  9124 CD 28 91     	call Inicia_puntero_objeto_der
1702  9127 C9           	ret
1703  9128
1704  9128              ; Arrancamos desde la parte izquierda de la pantalla.
1705  9128              ; Iniciamos (Indice_Sprite_der).
1706  9128
1707  9128 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1708  912B 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1709  912E CD 13 91     	call Extrae_address
1710  9131 22 00 8C     	ld (Puntero_objeto),hl
1711  9134
1712  9134 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1713  9137 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1714  913A C9           	ret
1715  913B
1716  913B              ; Arrancamos desde la parte derecha de la pantalla.
1717  913B              ; Iniciamos (Indice_Sprite_izq).
1718  913B
1719  913B 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1720  913E 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1721  9141 CD 13 91     	call Extrae_address
1722  9144 22 00 8C     	ld (Puntero_objeto),hl
1723  9147
1724  9147 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1725  914A 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1726  914D C9           	ret
1727  914E
1728  914E              ; **************************************************************************************************
1729  914E              ;
1730  914E              ;	06/07/24
1731  914E              ;
1732  914E              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1733  914E
1734  914E              Restore_entidad
1735  914E
1736  914E 2A 2E 8C     	ld hl,(Puntero_store_caja)
1737  9151 7E           	ld a,(hl)
1738  9152 A7           	and a
1739  9153 CC 61 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1740  9156 28 F6        	jr z,Restore_entidad
1741  9158
1742  9158 11 EE 8B     	ld de,Bandeja_DRAW
1743  915B 01 0C 00     	ld bc,12
1744  915E ED B0        	ldir
1745  9160 C9           	ret
1746  9161
1747  9161              ; **************************************************************************************************
1748  9161              ;
1749  9161              ;	08/05/23
1750  9161              ;
1751  9161              ;	Incrementamos los dos punteros de entidades. (+1).
1752  9161
1753  9161              Incrementa_punteros_de_cajas
1754  9161
1755  9161 2A 30 8C     	ld hl,(Puntero_restore_caja)
1756  9164 22 2E 8C     	ld (Puntero_store_caja),hl
1757  9167 2A 32 8C     	ld hl,(Indice_restore_caja)
1758  916A 23           	inc hl
1759  916B 23           	inc hl
1760  916C 22 32 8C     	ld (Indice_restore_caja),hl
1761  916F CD 13 91         call Extrae_address
1762  9172 22 30 8C         ld (Puntero_restore_caja),hl
1763  9175 C9               ret
1764  9176
1765  9176              ; -----------------------------------------------------------
1766  9176
1767  9176              ; Teclado.
1768  9176
1769  9176 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1770  9178 DB FE        	in a,($fe)
1771  917A E6 01        	and $01
1772  917C 28 02        	jr z,1f
1773  917E 18 F6        	jr Pulsa_ENTER
1774  9180 C9           1 ret
1775  9181
1776  9181              ; **************************************************************************************************
1777  9181              ;
1778  9181              ; Temporización.
1779  9181
1780  9181              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1781  9181              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1782  9181              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1783  9181              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1784  9181
1785  9181              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1786  9181              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1787  9181              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1788  9181
1789  9181              ; A partir de $4f61 no hace falta DELAY.
1790  9181
1791  9181              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1792  9181
1793  9181              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1794  9181              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1795  9181              ;	LD A,B
1796  9181              ;	AND A
1797  9181              ;	JR NZ,wait
1798  9181              ;	RET
1799  9181
1800  9181              ; ---------------------------------------------------------------------------------------------------------------
1801  9181              ;
1802  9181              ;	13/07/24
1803  9181              ;
1804  9181
1805  9181              Inicia_Shield
1806  9181
1807  9181 21 89 8C     	ld hl,Datos_Shield
1808  9184 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1809  9187
1810  9187 7E           	ld a,(hl)
1811  9188 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1812  918B
1813  918B 3E 01        	ld a,1
1814  918D 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1815  9190
1816  9190 C9           	ret
1817  9191
1818  9191              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1819  9191              ;
1820  9191              ;	4/6/24
1821  9191              ;
1822  9191              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1823  9191              ;
1824  9191              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1825  9191              ;
1826  9191
1827  9191              Actualiza_pantalla
1828  9191
1829  9191 3E 02        	ld a,2
1830  9193 D3 FE        	out ($fe),a
1831  9195
1832  9195 3A 65 8C     	ld a,(Ctrl_3)
1833  9198 CB 57        	bit 2,a
1834  919A 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1835  919C
1836  919C              Borrando_entidades
1837  919C
1838  919C 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1839  919F CD 13 91     	call Extrae_address
1840  91A2 24           	inc h
1841  91A3 25           	dec h
1842  91A4 28 05        	jr z,Pintando_entidades
1843  91A6 CD FE 95     	call Pinta_Sprites
1844  91A9 18 F1        	jr Borrando_entidades
1845  91AB
1846  91AB              Pintando_entidades
1847  91AB
1848  91AB 2A 61 8C     	ld hl,(India_SP)
1849  91AE 2C           	inc l
1850  91AF CD 13 91     	call Extrae_address
1851  91B2 24           	inc h
1852  91B3 25           	dec h
1853  91B4 28 0E        	jr z,Ejecuta_escudo
1854  91B6 1C           	inc e
1855  91B7 1C           	inc e
1856  91B8 ED 53 61 8C  	ld (India_SP),de
1857  91BC CD 13 91     	call Extrae_address
1858  91BF CD FE 95     	call Pinta_Sprites
1859  91C2 18 E7        	jr Pintando_entidades
1860  91C4
1861  91C4              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1862  91C4
1863  91C4              Ejecuta_escudo
1864  91C4
1865  91C4 3A 8F 8C     	ld a,(Shield)
1866  91C7 A7           	and a
1867  91C8 20 2F        	jr nz,Aplica_Shield
1868  91CA
1869  91CA              Borrando_Amadeus
1870  91CA
1871  91CA 21 65 8C     	ld hl,Ctrl_3
1872  91CD CB 6E        	bit 5,(hl)
1873  91CF 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1874  91D1
1875  91D1 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1876  91D4 CD 13 91     	call Extrae_address
1877  91D7 24           	inc h
1878  91D8 25           	dec h
1879  91D9 28 03        	jr z,Pintando_Amadeus
1880  91DB CD FE 95     	call Pinta_Sprites
1881  91DE
1882  91DE              Pintando_Amadeus
1883  91DE
1884  91DE 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1885  91E1 CD 13 91     	call Extrae_address
1886  91E4 24           	inc h
1887  91E5 25           	dec h
1888  91E6 28 03        	jr z,1F
1889  91E8 CD FE 95     	call Pinta_Sprites
1890  91EB
1891  91EB              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1892  91EB
1893  91EB 21 65 8C     1 ld hl,Ctrl_3
1894  91EE CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1895  91F0 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1896  91F2 CB AE        	res 5,(hl)
1897  91F4
1898  91F4 3E 01        	ld a,1												; Borde azul.
1899  91F6 D3 FE        	out ($fe),a
1900  91F8
1901  91F8 C9           	ret
1902  91F9
1903  91F9              Aplica_Shield
1904  91F9
1905  91F9              ;	Bit 1 "1" (Shield_3) Sólo borra.
1906  91F9              ;		  "0"     ""     Borra/Pinta.
1907  91F9              ;	Bit 2    ""  RET.	 No borra, no pinta.
1908  91F9
1909  91F9 21 91 8C     	ld hl,Shield_3
1910  91FC
1911  91FC CB 5E        	bit 3,(hl)
1912  91FE 20 DE        	jr nz,Pintando_Amadeus
1913  9200
1914  9200 CB 56        	bit 2,(hl)
1915  9202 20 E7        	jr nz,1B
1916  9204
1917  9204 CB 4E        	bit 1,(hl)
1918  9206 C4 0D 92     	call nz,Borra_Amadeus_shield
1919  9209
1920  9209 28 BF        	jr z,Borrando_Amadeus
1921  920B 18 DE        	jr 1B
1922  920D
1923  920D              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1924  920D
1925  920D              Borra_Amadeus_shield
1926  920D
1927  920D 3A 65 8C     	ld a,(Ctrl_3)
1928  9210 CB 6F        	bit 5,a
1929  9212 28 08        	jr z,1F
1930  9214
1931  9214 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1932  9217 CD 13 91     	call Extrae_address
1933  921A 18 06        	jr 2F
1934  921C
1935  921C 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1936  921F CD 13 91     	call Extrae_address
1937  9222
1938  9222 CD FE 95     2 call Pinta_Sprites
1939  9225
1940  9225 AF           	xor a
1941  9226 3C           	inc a											; Asegura NZ en la salida de la rutina.
1942  9227
1943  9227 C9           	ret
1944  9228
1945  9228              Pinta_Amadeus_shield
1946  9228
1947  9228 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1948  922B CD 13 91     	call Extrae_address
1949  922E CD FE 95     	call Pinta_Sprites
1950  9231
1951  9231 AF           	xor a
1952  9232 3C           	inc a											; Asegura NZ en la salida de la rutina.
1953  9233
1954  9233 C9           	ret
1955  9234
1956  9234              Borra_Pinta_Amadeus_shield
1957  9234
1958  9234 CD 0D 92     	call Borra_Amadeus_shield
1959  9237 CD 28 92     	call Pinta_Amadeus_shield
1960  923A C9           	ret
1961  923B
1962  923B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1963  923B              ;
1964  923B              ;	19/6/24
1965  923B              ;
1966  923B
1967  923B              Teclado
1968  923B
1969  923B              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1970  923B
1971  923B 3E F7        	ld a,$f7												; "5" para disparar.
1972  923D DB FE        	in a,($fe)
1973  923F E6 10        	and $10
1974  9241
1975  9241 CC 99 A2     	call z,Genera_disparo_Amadeus
1976  9244
1977  9244 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1978  9246 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1979  9248 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1980  924A CC 6B 9D         call z,Amadeus_a_izquierda
1981  924D
1982  924D 3E F7        	ld a,$f7
1983  924F DB FE        	in a,($fe)
1984  9251 E6 01        	and $01
1985  9253 C8           	ret z
1986  9254
1987  9254 3E F7        	ld a,$f7
1988  9256 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1989  9258 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1990  925A CC 83 9D     	call z,Amadeus_a_derecha
1991  925D
1992  925D C9           	ret
1993  925E
1994  925E              ; ------------------------------------------------------------------------------------------------------------------------
1995  925E              ;
1996  925E              ;	06/07/24
1997  925E              ;
1998  925E
1999  925E              Genera_explosion
2000  925E
2001  925E 21 77 8C     	ld hl,Clock_explosion
2002  9261 35           	dec (hl)
2003  9262 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2004  9264
2005  9264              Borra_entidad_colisionada
2006  9264
2007  9264 CD 58 8F     	call Entidad_a_Tabla_de_pintado					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2008  9267 CD 74 90     	call Cargamos_registros_con_explosion
2009  926A CD 0A 95     	call Genera_datos_de_impresion
2010  926D
2011  926D AF           	xor a
2012  926E 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2013  926F
2014  926F C9           	ret
2015  9270
2016  9270              Siguiente_frame_explosion
2017  9270
2018  9270 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2019  9272
2020  9272              ; Avanza Frame de explosión.
2021  9272
2022  9272 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2023  9275 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2024  9278
2025  9278 79           	ld a,c
2026  9279 95           	sub l
2027  927A 20 0B        	jr nz,1F
2028  927C
2029  927C              ; Fín de la entidad !!!!!!!!!!!!!
2030  927C
2031  927C 21 37 8C     	ld hl,Numero_parcial_de_entidades
2032  927F 35           	dec (hl)
2033  9280 23           	inc hl
2034  9281 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2035  9282
2036  9282 CD ED 93     	call Limpiamos_bandeja_DRAW
2037  9285 18 DD        	jr Borra_entidad_colisionada
2038  9287
2039  9287 23           1 inc hl
2040  9288 23           	inc hl
2041  9289 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2042  928C 18 D6        	jr Borra_entidad_colisionada
2043  928E
2044  928E              ; ----- ----- ----- ----- -----
2045  928E
2046  928E              Genera_explosion_Amadeus
2047  928E
2048  928E 21 78 8C     	ld hl,Clock_explosion_Amadeus
2049  9291 35           	dec (hl)
2050  9292 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2051  9294
2052  9294              Borra_Amadeus_impactado
2053  9294
2054  9294 CD BD 8E     	call Change_Amadeus
2055  9297 CD 81 90     	call Cargamos_registros_con_explosion_Amadeus
2056  929A CD A2 90     	call Genera_datos_de_impresion_Amadeus
2057  929D
2058  929D 21 65 8C     	ld hl,Ctrl_3
2059  92A0 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2060  92A2
2061  92A2 AF           	xor a
2062  92A3 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2063  92A4
2064  92A4 C9           	ret
2065  92A5
2066  92A5              Siguiente_frame_explosion_Amadeus
2067  92A5
2068  92A5 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2069  92A7
2070  92A7              ; Avanza Frame de explosión.
2071  92A7
2072  92A7 2A BE 89     	ld hl,(Pamm_Amadeus)
2073  92AA 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2074  92AD
2075  92AD 79           	ld a,c
2076  92AE 95           	sub l
2077  92AF 20 0B        	jr nz,1F
2078  92B1
2079  92B1              ; Fín de Amadeus !!!!!!!!!!!!!
2080  92B1              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2081  92B1
2082  92B1 AF           	xor a
2083  92B2 32 BB 89     	ld (Impacto_Amadeus),a
2084  92B5 21 65 8C     	ld hl,Ctrl_3
2085  92B8 CB F6        	set 6,(hl)
2086  92BA
2087  92BA 18 D8        	jr Borra_Amadeus_impactado
2088  92BC
2089  92BC 23           1 inc hl
2090  92BD 23           	inc hl
2091  92BE 22 BE 89     	ld (Pamm_Amadeus),hl
2092  92C1 18 D1        	jr Borra_Amadeus_impactado
2093  92C3
2094  92C3              ; ---------------------------------------------------------------
2095  92C3
2096  92C3              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92C3              ; ******************************************************************************************************************************************************************************************
   2+ 92C3              ;
   3+ 92C3              ;   21/04/24
   4+ 92C3              ;
   5+ 92C3              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92C3              ;   (XOR) bit a bit.
   7+ 92C3              ;
   8+ 92C3              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92C3
  10+ 92C3              Derivando_RND
  11+ 92C3
  12+ 92C3 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92C6
  14+ 92C6 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92C8 C5               push bc
  16+ 92C9              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92C9 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92CC              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92CC
  20+ 92CC A7           6 and a                                 ; Carry a "0".
  21+ 92CD CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92CF 30 02            jr nc,1F
  23+ 92D1
  24+ 92D1 CB C1            set 0,c
  25+ 92D3
  26+ 92D3 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92D4 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92D6 5F               ld e,a
  29+ 92D7
  30+ 92D7 7A               ld a,d
  31+ 92D8 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92DA 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92DC
  34+ 92DC CB 3F            srl a
  35+ 92DE
  36+ 92DE AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92DF
  38+ 92DF 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92E0 28 04            jr z,4F
  40+ 92E2
  41+ 92E2 CB FF            set 7,a
  42+ 92E4 18 02            jr 5F
  43+ 92E6
  44+ 92E6 CB BF        4 res 7,a
  45+ 92E8
  46+ 92E8 CB 21        5 sla c
  47+ 92EA 10 E0            djnz 6B
  48+ 92EC
  49+ 92EC 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92ED
  51+ 92ED 77               ld (hl),a
  52+ 92EE 23               inc hl
  53+ 92EF C1               pop bc
  54+ 92F0 10 D4            djnz 3B
  55+ 92F2
  56+ 92F2 C9               ret
  57+ 92F3
  58+ 92F3
  59+ 92F3
# file closed: RND_Derivando.asm
2097  92F3              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92F3              ;---------------------------------------------------------------------------------------------------------------
   2+ 92F3              ;
   3+ 92F3              ;   13/11/24
   4+ 92F3
   5+ 92F3              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92F3
   7+ 92F3              Genera_movimientos_masticados_del_nivel
   8+ 92F3
   9+ 92F3              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92F3
  11+ 92F3              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92F3              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92F3              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92F3
  15+ 92F3 2D           	dec l
  16+ 92F4 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 92F5 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 92F6 4E           	ld c,(hl)
  19+ 92F7
  20+ 92F7 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 92F8 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 92F9
  23+ 92F9              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 92F9
  25+ 92F9 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 92FA
  27+ 92FA CD 38 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 92FD
  29+ 92FD              ;	Caja Master inicializada ???
  30+ 92FD
  31+ 92FD 7E           	ld a,(hl)
  32+ 92FE A7           	and a
  33+ 92FF 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9301
  35+ 9301              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9301
  37+ 9301 C1           	pop bc
  38+ 9302 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9303 C5           	push bc
  40+ 9304
  41+ 9304 CD D8 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9307 CD 6C 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 930A
  44+ 930A 3A EE 8B     	ld a,(Tipo)
  45+ 930D CD 48 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9310
  47+ 9310              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9310
  49+ 9310              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9310              ;	ld a,(hl)
  51+ 9310              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9310
  53+ 9310              ;	ld hl,Posicion_inicio
  54+ 9310              ;	ld (hl),a
  55+ 9310
  56+ 9310              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9310              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9310
  59+ 9310 CD F4 8F     	call Construye_movimientos_masticados_entidad
  60+ 9313
  61+ 9313 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 9316 CD 13 91     	call Extrae_address
  63+ 9319
  64+ 9319 5D           	ld e,l
  65+ 931A 54           	ld d,h
  66+ 931B
  67+ 931B CD 99 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 931E
  69+ 931E              Movimientos_masticados_construidos
  70+ 931E
  71+ 931E C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 931F
  73+ 931F E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9320 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9321
  76+ 9321 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9322 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9324
  79+ 9324 C9           	ret
  80+ 9325
  81+ 9325              ;---------------------------------------------------------------------------------------------------------------
  82+ 9325              ;
  83+ 9325              ;   9/11/24
  84+ 9325              ;
  85+ 9325              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 9325              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 9325              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 9325              ;	_ de la 1ª entidad del Nivel.
  89+ 9325              ;
  90+ 9325              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 9325
  92+ 9325              ;	MODIFICA: HL,DE y A.
  93+ 9325              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 9325
  95+ 9325              Inicializa_1er_Nivel
  96+ 9325
  97+ 9325              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 9325
  99+ 9325 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 9328 CD 13 91     	call Extrae_address
 101+ 932B ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 932F
 103+ 932F 7E           	ld a,(hl)
 104+ 9330 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9333
 106+ 9333 2C           	inc l
 107+ 9334 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 9337
 109+ 9337 C9           	ret
 110+ 9338
 111+ 9338              ; ----------------------
 112+ 9338              ;
 113+ 9338              ;	13/11/24
 114+ 9338              ;
 115+ 9338
 116+ 9338              Situa_en_Caja_Master
 117+ 9338
 118+ 9338 CD 57 94         call Calcula_salto_en_BC
 119+ 933B 21 61 89         ld hl,Indice_de_cajas_master
 120+ 933E A7               and a
 121+ 933F ED 4A            adc hl,bc
 122+ 9341 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 9344 CD 13 91     	call Extrae_address
 124+ 9347 C9           	ret
 125+ 9348
 126+ 9348              ; ----------------------
 127+ 9348
 128+ 9348              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 9348              ; 	ld bc,4
 130+ 9348              ; 	ldir
 131+ 9348              ; 	ret
 132+ 9348
 133+ 9348 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 9349 CD 57 94         call Calcula_salto_en_BC
 135+ 934C 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 934F A7               and a
 137+ 9350 ED 4A            adc hl,bc
 138+ 9352 CD 13 91         call Extrae_address
 139+ 9355 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 9358 C9               ret
 141+ 9359
 142+ 9359              ;---------------------------------------------------------------------------------------------------------------
 143+ 9359              ;
 144+ 9359              ;   13/11/24
 145+ 9359              ;
 146+ 9359              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 9359
 148+ 9359
 149+ 9359              Prepara_Cajas_de_Entidades
 150+ 9359
 151+ 9359              ; Preparamos los punteros de las cajas de entidades:
 152+ 9359
 153+ 9359 CD FD 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 935C              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 935C CD A2 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 935F
 157+ 935F 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9362
 159+ 9362              ; En este punto:
 160+ 9362              ;
 161+ 9362              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9362              ; B contiene (Numero_parcial_de_entidades).
 163+ 9362
 164+ 9362 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9363
 166+ 9363 7E           	ld a,(hl)
 167+ 9364
 168+ 9364 CD 38 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 9367
 170+ 9367 ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 936B
 172+ 936B D5           	push de
 173+ 936C DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 936E
 175+ 936E 01 0C 00     	ld bc,12
 176+ 9371 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 9373              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 9373
 179+ 9373              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 9373              ;
 181+ 9373              ;
 182+ 9373              ; ------------------------------------------------------ IX
 183+ 9373              ; ------------------------------------------------------ IX
 184+ 9373              ; ------------------------------------------------------ IX
 185+ 9373              ; ------------------------------------------------------ IX
 186+ 9373
 187+ 9373 DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 9375
 189+ 9375 CD 48 90     	call Obtenemos_puntero_de_impresion
 190+ 9378
 191+ 9378 DD 6E 05     	ld l,(ix+5)
 192+ 937B 2C           	inc l
 193+ 937C DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 937F
 195+ 937F D5           	push de														; Push (Puntero_objeto).
 196+ 9380 E5           	push hl														; Push (Puntero_de_impresion).
 197+ 9381
 198+ 9381 CD DE 94     	call Genera_coordenadas
 199+ 9384
 200+ 9384 ED 4B EF 8B  	ld bc,(Coordenada_X)
 201+ 9388
 202+ 9388 DD 71 01     	ld (ix+1),c
 203+ 938B DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 938E
 205+ 938E CD 58 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 9391
 207+ 9391 DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 9393 D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 9394
 210+ 9394 CD 0A 95     	call Genera_datos_de_impresion
 211+ 9397
 212+ 9397 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 9399
 214+ 9399              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 9399
 216+ 9399 CD 10 94     	call Decrementa_Contador_de_mov_masticados
 217+ 939C CD ED 93     	call Limpiamos_bandeja_DRAW									;! Cuando el juego funcione, probar a eliminar esta línea!!!!!!!!!!!
 218+ 939F CD 61 91     	call Incrementa_punteros_de_cajas
 219+ 93A2
 220+ 93A2              ; Siguiente entidad del Nivel.
 221+ 93A2
 222+ 93A2 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 93A5 23           	inc hl 														; _ entidad del Nivel.
 224+ 93A6
 225+ 93A6 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 93A7
 227+ 93A7 10 B9        	djnz 1B
 228+ 93A9
 229+ 93A9 C9           	ret
 230+ 93AA
 231+ 93AA              ; -------------------------------------------------------------------------------------------------------------------
 232+ 93AA              ;
 233+ 93AA              ;	27/5/24
 234+ 93AA              ;
 235+ 93AA              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 93AA              ;
 237+ 93AA
 238+ 93AA              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 93AA              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 93AA
 241+ 93AA 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 93AD CD 6C 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 93B0
 244+ 93B0
 245+ 93B0              Construye_movimientos_masticados_Amadeus
 246+ 93B0
 247+ 93B0 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 93B3 CD 3B 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 93B6              ;															; _ el (Contador_de_mov_masticados).
 250+ 93B6 CD 19 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 93B9              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 93B9
 253+ 93B9              ; Generamos movimientos masticados de Amadeus.
 254+ 93B9
 255+ 93B9 06 79        	ld b,121												; $0079, 121d.
 256+ 93BB
 257+ 93BB C5           1 push bc
 258+ 93BC CD 21 97     	call Draw
 259+ 93BF CD 20 90     	call Guarda_movimiento_masticado
 260+ 93C2
 261+ 93C2 CD 95 9A     	call Mov_right
 262+ 93C5 CD 95 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 93C8
 264+ 93C8 C1           	pop bc
 265+ 93C9 10 F0        	djnz 1B
 266+ 93CB
 267+ 93CB              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 93CB
 269+ 93CB              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 93CB              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 93CB
 272+ 93CB 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 93CE 01 08 00     	ld bc,8
 274+ 93D1 A7           	and a
 275+ 93D2 ED 42        	sbc hl,bc
 276+ 93D4 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 93D7
 278+ 93D7 C9           	ret
 279+ 93D8
 280+ 93D8              ; ---------------------------------------------------------------------
 281+ 93D8              ;
 282+ 93D8              ;	10/02/24
 283+ 93D8              ;
 284+ 93D8              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 93D8              ;
 286+ 93D8              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 93D8
 288+ 93D8              Definicion_segun_tipo
 289+ 93D8
 290+ 93D8 CD 57 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 93DB 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 93DE CD 62 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 93E1 C9           	ret
 294+ 93E2
 295+ 93E2              ; ---------------------------------------------------------------------
 296+ 93E2              ;
 297+ 93E2              ;	6/7/24
 298+ 93E2
 299+ 93E2
 300+ 93E2              Store_Restore_cajas
 301+ 93E2
 302+ 93E2 ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 303+ 93E6 CD 99 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 93E9 CD 61 91     	call Incrementa_punteros_de_cajas
 305+ 93EC C9           	ret
 306+ 93ED
 307+ 93ED              ; ---------------------------------------------------------------------
 308+ 93ED              ;
 309+ 93ED              ;	23/6/24
 310+ 93ED              ;
 311+ 93ED              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 93ED              ;
 313+ 93ED              ;	MODIFY: HL
 314+ 93ED
 315+ 93ED              Limpiamos_bandeja_DRAW
 316+ 93ED
 317+ 93ED ED 73 3D 8C  	ld (Stack),sp
 318+ 93F1 31 13 8C     	ld sp,Vel_left
 319+ 93F4
 320+ 93F4 AF           	xor a
 321+ 93F5 67           	ld h,a
 322+ 93F6 6F           	ld l,a
 323+ 93F7
 324+ 93F7 E5           	push hl
 325+ 93F8 E5           	push hl
 326+ 93F9 E5           	push hl
 327+ 93FA E5           	push hl
 328+ 93FB E5           	push hl
 329+ 93FC E5           	push hl
 330+ 93FD E5           	push hl
 331+ 93FE E5           	push hl
 332+ 93FF E5           	push hl
 333+ 9400 E5           	push hl
 334+ 9401 E5           	push hl
 335+ 9402 E5           	push hl
 336+ 9403 E5           	push hl
 337+ 9404 E5           	push hl
 338+ 9405 E5           	push hl
 339+ 9406 E5           	push hl
 340+ 9407 E5           	push hl
 341+ 9408 E5           	push hl
 342+ 9409
 343+ 9409 33           	inc sp
 344+ 940A
 345+ 940A E5           	push hl
 346+ 940B ED 7B 3D 8C  	ld sp,(Stack)
 347+ 940F
 348+ 940F C9           	ret
 349+ 9410
 350+ 9410              ; ---------------------------------------------------------------------
 351+ 9410              ;
 352+ 9410              ;	23/11/24
 353+ 9410              ;
 354+ 9410              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 9410
 356+ 9410              Decrementa_Contador_de_mov_masticados
 357+ 9410
 358+ 9410 DD 6E 09     	ld l,(ix+9)
 359+ 9413 DD 66 0A     	ld h,(ix+10)
 360+ 9416
 361+ 9416 2B           	dec hl
 362+ 9417
 363+ 9417 DD 75 09     	ld (ix+9),l
 364+ 941A DD 74 0A     	ld (ix+10),h
 365+ 941D
 366+ 941D C9           	ret
 367+ 941E
 368+ 941E              ; ---------------------------------------------------------------------
 369+ 941E              ;
 370+ 941E              ;	24/11/24
 371+ 941E
 372+ 941E              Reinicia_entidad_maliciosa
 373+ 941E
 374+ 941E              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 941E
 376+ 941E CD 02 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 9421 CD 0F 9F     	call Transfiere_datos_de_contadores
 378+ 9424
 379+ 9424              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 9424
 381+ 9424 DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 9427 CD D8 93     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 942A
 384+ 942A 7D           	ld a,l
 385+ 942B C6 0B        	add 11
 386+ 942D 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 942E
 388+ 942E CD 13 91     	call Extrae_address
 389+ 9431
 390+ 9431 DD 75 07     	ld (ix+7),l
 391+ 9434 DD 74 08     	ld (ix+8),h
 392+ 9437
 393+ 9437 CD 48 90     	call Obtenemos_puntero_de_impresion
 394+ 943A
 395+ 943A              ; Incrementa (Contador_de_vueltas)x2.
 396+ 943A              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 943A
 398+ 943A              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 943A              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 943A              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 943A              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 943A              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 943A
 404+ 943A DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 943E
 406+ 943E DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 9441 CB 2F        	sra a
 408+ 9443 CB 2F        	sra a
 409+ 9445
 410+ 9445 DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 9448
 412+ 9448 3E 40        	ld a,$40
 413+ 944A DD BE 03     	cp (ix+3)
 414+ 944D C0           	ret nz
 415+ 944E
 416+ 944E              ; Límitador.
 417+ 944E
 418+ 944E              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 944E
 420+ 944E DD CB 03 2E  	sra (ix+3)
 421+ 9452 DD CB 0B 2E  	sra (ix+11)
 422+ 9456
 423+ 9456 C9           	ret
 424+ 9457
 425+ 9457              ;	------------------------------------------------------------------------------------
 426+ 9457              ;
 427+ 9457              ;	09/11/24
 428+ 9457              ;
 429+ 9457              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 9457              ;
 431+ 9457              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 9457              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 9457
 434+ 9457 A7           Calcula_salto_en_BC and a
 435+ 9458 28 04        	jr z,1F
 436+ 945A CB 27        	sla a
 437+ 945C D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 945E 4F           1 ld c,a
 439+ 945F 06 00        	ld b,0
 440+ 9461 C9           	ret
 441+ 9462
 442+ 9462              ; ------------------------------------------------------------------
 443+ 9462              ;
 444+ 9462              ;	19/1/24
 445+ 9462              ;
 446+ 9462              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 9462              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 9462
 449+ 9462 A7           Situa_en_datos_de_definicion and a
 450+ 9463 ED 4A        	adc hl,bc
 451+ 9465 CD 13 91     	call Extrae_address
 452+ 9468 22 3B 8C         ld (Datos_de_entidad),hl
 453+ 946B C9           	ret
 454+ 946C
 455+ 946C              ; ------------------------------------------------------------------
 456+ 946C
 457+ 946C              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 458+ 946C              ; 	inc de
 459+ 946C              ; 	inc de
 460+ 946C              ; 	ex de,hl
 461+ 946C              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 462+ 946C              ; 	ret
 463+ 946C
 464+ 946C              ; ----------------------------------------------------------------------------------------------------------
 465+ 946C              ;
 466+ 946C              ;	24/6/24
 467+ 946C              ;
 468+ 946C              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 469+ 946C              ;	_ de entidad.
 470+ 946C              ;
 471+ 946C              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 472+ 946C              ;
 473+ 946C              ;
 474+ 946C              ;	MODIFICA: HL,DE y BC
 475+ 946C
 476+ 946C
 477+ 946C              Definicion_de_entidad_a_bandeja_DRAW
 478+ 946C
 479+ 946C 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 480+ 946F 7E           	ld a,(hl) 									; Volcamos Tipo.
 481+ 9470 12           	ld (de),a
 482+ 9471 23           	inc hl
 483+ 9472              ;
 484+ 9472 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 485+ 9475 01 02 00     	ld bc,2
 486+ 9478 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 487+ 947A              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 488+ 947A 11 F1 8B     	ld de,Contador_de_vueltas
 489+ 947D 7E           	ld a,(hl)
 490+ 947E 12           	ld (de),a
 491+ 947F 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 492+ 9480
 493+ 9480 11 03 8C     	ld de,Indice_Sprite_der
 494+ 9483 01 04 00     	ld bc,4
 495+ 9486 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 496+ 9488
 497+ 9488 11 0B 8C     	ld de,Posicion_inicio
 498+ 948B 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 499+ 948E ED B0        	ldir 									; Vuelco (Frames_explosion).
 500+ 9490
 501+ 9490 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 502+ 9493 01 02 00     	ld bc,2
 503+ 9496 ED B0        	ldir
 504+ 9498
 505+ 9498 C9           	ret
 506+ 9499
 507+ 9499              ; ----------------------------------------------------------------------------------------------------------
 508+ 9499              ;
 509+ 9499              ;	1/8/24
 510+ 9499              ;
 511+ 9499
 512+ 9499              Parametros_de_bandeja_DRAW_a_caja
 513+ 9499
 514+ 9499 21 EE 8B     	ld hl,Bandeja_DRAW
 515+ 949C 01 0C 00     	ld bc,12
 516+ 949F ED B0        	ldir
 517+ 94A1 C9           	ret
 518+ 94A2
 519+ 94A2              ;---------------------------------------------------------------------------------------------------------------
 520+ 94A2              ;
 521+ 94A2              ;	13/11/24
 522+ 94A2              ;
 523+ 94A2              ;	INICIALIZA (Numero_parcial_de_entidades).
 524+ 94A2              ;
 525+ 94A2              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 526+ 94A2              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 527+ 94A2
 528+ 94A2              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 529+ 94A2              ;			- Actualiza (Numero_de_entidades).
 530+ 94A2
 531+ 94A2              ;	MODIFICA: A y B.
 532+ 94A2
 533+ 94A2
 534+ 94A2              Inicializa_Numero_parcial_de_entidades
 535+ 94A2
 536+ 94A2 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 537+ 94A5 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 538+ 94A7 38 0E        	jr c,1F
 539+ 94A9 28 0C        	jr z,1F
 540+ 94AB
 541+ 94AB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 542+ 94AB              ; Actualizamos variables.
 543+ 94AB
 544+ 94AB D6 06        	sub 6
 545+ 94AD 32 36 8C     	ld (Numero_de_entidades),a
 546+ 94B0 3E 06        	ld a,6
 547+ 94B2 32 37 8C     	ld (Numero_parcial_de_entidades),a
 548+ 94B5 47           	ld b,a
 549+ 94B6 C9           	ret
 550+ 94B7
 551+ 94B7              ; El nº total de entidades no supera el nº de cajas de entidades.
 552+ 94B7              ; (Numero_de_entidades)="0".
 553+ 94B7
 554+ 94B7 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 555+ 94BA 47           	ld b,a
 556+ 94BB AF           	xor a
 557+ 94BC 32 36 8C     	ld (Numero_de_entidades),a
 558+ 94BF C9           	ret
 559+ 94C0
# file closed: Rutinas_de_inicio_y_niveles.asm
2098  94C0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C0              ;
   3+ 94C0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C0              ;
   5+ 94C0              ; *****************************************************************************************************************************************************************************************
   6+ 94C0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C0
   8+ 94C0 7C           calcula_tercio ld a,h
   9+ 94C1 E6 18        	and $18
  10+ 94C3 CB 2F        	sra a
  11+ 94C5 CB 2F        	sra a
  12+ 94C7 CB 2F        	sra a
  13+ 94C9 C9           	ret
  14+ 94CA
# file closed: calcula_tercio.asm
2099  94CA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94CA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94CA              ;
   3+ 94CA              ;
   4+ 94CA              ;	CLS.
   5+ 94CA              ;
   6+ 94CA              ;	Limpia la pantalla y define sus atributos.
   7+ 94CA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94CA              ;
   9+ 94CA              ;	COLORES: 0 ..... NEGRO
  10+ 94CA              ;    		 1 ..... AZUL
  11+ 94CA              ; 			 2 ..... ROJO
  12+ 94CA              ;			 3 ..... MAGENTA
  13+ 94CA              ; 			 4 ..... VERDE
  14+ 94CA              ; 			 5 ..... CIAN
  15+ 94CA              ;			 6 ..... AMARILLO
  16+ 94CA              ; 			 7 ..... BLANCO
  17+ 94CA              ;
  18+ 94CA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94CA              ;
  20+ 94CA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94CA
  22+ 94CA
  23+ 94CA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94CD 11 01 40     	LD DE,$4001
  25+ 94D0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D5 ED B0        	LDIR
  28+ 94D7 01 FF 02     	LD BC,767
  29+ 94DA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94DB ED B0        	LDIR
  31+ 94DD C9           	ret
  32+ 94DE
# file closed: Cls.asm
2100  94DE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94DE              ; ------------------------------------------------------------------------
   2+ 94DE              ;
   3+ 94DE              ;	30/1/24
   4+ 94DE              ;
   5+ 94DE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94DE              ;	Fila superior "0", Columna izquierda "0".
   7+ 94DE              ;
   8+ 94DE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94DE              ;
  10+ 94DE              ;	Modifica: A,BC y DE.
  11+ 94DE
  12+ 94DE              Genera_coordenadas
  13+ 94DE
  14+ 94DE 7D           	ld a,l
  15+ 94DF E6 1F        	and $1f
  16+ 94E1
  17+ 94E1 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 94E4
  19+ 94E4 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 94E5 FE 40        	cp $40
  21+ 94E7 38 1C        	jr c,4F
  22+ 94E9
  23+ 94E9 CD C0 94     	call calcula_tercio
  24+ 94EC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 94ED
  26+ 94ED 1E 00        	ld e,0
  27+ 94EF 7D           	ld a,l
  28+ 94F0 E6 E0        	and $e0
  29+ 94F2 28 01        	jr z,1F
  30+ 94F4 04           	inc b
  31+ 94F5
  32+ 94F5 04           1 inc b
  33+ 94F6 05           	dec b
  34+ 94F7 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 94F9              ;														; _ , salimos.
  36+ 94F9 1C           3 inc e
  37+ 94FA D6 20        	sub 32
  38+ 94FC 20 FB        	jr nz,3B
  39+ 94FE 10 F5        	djnz 1B
  40+ 9500
  41+ 9500 7B           2 ld a,e
  42+ 9501 32 F0 8B     	ld (Coordenada_y),a
  43+ 9504 C9           	ret
  44+ 9505
  45+ 9505 AF           4 xor a
  46+ 9506 32 F0 8B     	ld (Coordenada_y),a
  47+ 9509 C9           	ret
  48+ 950A
# file closed: Genera_coordenadas.asm
2101  950A              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 950A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 950A              ;
   3+ 950A              ;	20/09/24
   4+ 950A              ;
   5+ 950A              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 950A              ;   DE contiene Puntero_objeto.
   7+ 950A              ;   IX contiene el Puntero de impresión.
   8+ 950A
   9+ 950A              Genera_datos_de_impresion
  10+ 950A
  11+ 950A ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 950E
  13+ 950E 2A 5F 8C         ld hl,(Scanlines_album_SP)
  14+ 9511
  15+ 9511 3E 05            ld a,5
  16+ 9513 85               add l
  17+ 9514 6F               ld l,a
  18+ 9515
  19+ 9515 F9               ld sp,hl
  20+ 9516 22 5F 8C         ld (Scanlines_album_SP),hl
  21+ 9519
  22+ 9519 21 00 00         ld hl,0
  23+ 951C
  24+ 951C DD E5            push ix
  25+ 951E 3B               dec sp
  26+ 951F ED 7A            adc hl,sp
  27+ 9521 D5               push de
  28+ 9522
  29+ 9522              ; Recuperamos SP.
  30+ 9522
  31+ 9522 ED 7B 3D 8C      ld sp,(Stack)
  32+ 9526
  33+ 9526 E5               push hl
  34+ 9527 F1               pop af
  35+ 9528 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 9529
  37+ 9529              ; Tenemos el encabezado listo.
  38+ 9529              ; Preparamos registros para generar los scanlines.
  39+ 9529
  40+ 9529 DD E5            push ix
  41+ 952B E1               pop hl                                          ; 1er scanline en HL.
  42+ 952C
  43+ 952C ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  44+ 9530
  45+ 9530              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 9530              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 9530
  48+ 9530 7C               ld a,h
  49+ 9531 FE 50            cp $50
  50+ 9533 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 9535
  52+ 9535 20 05            jr nz,2F
  53+ 9537
  54+ 9537 7D               ld a,l
  55+ 9538 FE E0            cp $e0
  56+ 953A 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 953C
  58+ 953C 7D           2 ld a,l
  59+ 953D FE C0            cp $c0
  60+ 953F D2 D5 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 9542
  62+ 9542              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 9542
  64+ 9542 CD D3 99         call NextScan
  65+ 9545 EB               ex de,hl
  66+ 9546
  67+ 9546 73               ld (hl),e
  68+ 9547 23               inc hl
  69+ 9548 72               ld (hl),d
  70+ 9549 23               inc hl
  71+ 954A
  72+ 954A EB               ex de,hl
  73+ 954B
  74+ 954B CD D3 99         call NextScan
  75+ 954E EB               ex de,hl
  76+ 954F
  77+ 954F 73               ld (hl),e
  78+ 9550 23               inc hl
  79+ 9551 72               ld (hl),d
  80+ 9552 23               inc hl
  81+ 9553
  82+ 9553 EB               ex de,hl
  83+ 9554
  84+ 9554 CD D3 99         call NextScan
  85+ 9557 EB               ex de,hl
  86+ 9558
  87+ 9558 73               ld (hl),e
  88+ 9559 23               inc hl
  89+ 955A 72               ld (hl),d
  90+ 955B 23               inc hl
  91+ 955C
  92+ 955C EB               ex de,hl
  93+ 955D
  94+ 955D CD D3 99         call NextScan
  95+ 9560 EB               ex de,hl
  96+ 9561
  97+ 9561 73               ld (hl),e
  98+ 9562 23               inc hl
  99+ 9563 72               ld (hl),d
 100+ 9564 23               inc hl
 101+ 9565
 102+ 9565 EB               ex de,hl
 103+ 9566
 104+ 9566 CD D3 99         call NextScan
 105+ 9569 EB               ex de,hl
 106+ 956A
 107+ 956A 73               ld (hl),e
 108+ 956B 23               inc hl
 109+ 956C 72               ld (hl),d
 110+ 956D 23               inc hl
 111+ 956E
 112+ 956E EB               ex de,hl
 113+ 956F
 114+ 956F CD D3 99         call NextScan
 115+ 9572 EB               ex de,hl
 116+ 9573
 117+ 9573 73               ld (hl),e
 118+ 9574 23               inc hl
 119+ 9575 72               ld (hl),d
 120+ 9576 23               inc hl
 121+ 9577
 122+ 9577 EB               ex de,hl
 123+ 9578
 124+ 9578 CD D3 99         call NextScan
 125+ 957B EB               ex de,hl
 126+ 957C
 127+ 957C 73               ld (hl),e
 128+ 957D 23               inc hl
 129+ 957E 72               ld (hl),d
 130+ 957F 23               inc hl
 131+ 9580
 132+ 9580 EB               ex de,hl
 133+ 9581
 134+ 9581 CD D3 99         call NextScan
 135+ 9584 EB               ex de,hl
 136+ 9585
 137+ 9585 73               ld (hl),e
 138+ 9586 23               inc hl
 139+ 9587 72               ld (hl),d
 140+ 9588 23               inc hl
 141+ 9589
 142+ 9589 EB               ex de,hl
 143+ 958A
 144+ 958A CD D3 99         call NextScan
 145+ 958D EB               ex de,hl
 146+ 958E
 147+ 958E 73               ld (hl),e
 148+ 958F 23               inc hl
 149+ 9590 72               ld (hl),d
 150+ 9591 23               inc hl
 151+ 9592
 152+ 9592 EB               ex de,hl
 153+ 9593
 154+ 9593 CD D3 99         call NextScan
 155+ 9596 EB               ex de,hl
 156+ 9597
 157+ 9597 73               ld (hl),e
 158+ 9598 23               inc hl
 159+ 9599 72               ld (hl),d
 160+ 959A 23               inc hl
 161+ 959B
 162+ 959B EB               ex de,hl
 163+ 959C
 164+ 959C CD D3 99         call NextScan
 165+ 959F EB               ex de,hl
 166+ 95A0
 167+ 95A0 73               ld (hl),e
 168+ 95A1 23               inc hl
 169+ 95A2 72               ld (hl),d
 170+ 95A3 23               inc hl
 171+ 95A4
 172+ 95A4 EB               ex de,hl
 173+ 95A5
 174+ 95A5 CD D3 99         call NextScan
 175+ 95A8 EB               ex de,hl
 176+ 95A9
 177+ 95A9 73               ld (hl),e
 178+ 95AA 23               inc hl
 179+ 95AB 72               ld (hl),d
 180+ 95AC 23               inc hl
 181+ 95AD
 182+ 95AD EB               ex de,hl
 183+ 95AE
 184+ 95AE CD D3 99         call NextScan
 185+ 95B1 EB               ex de,hl
 186+ 95B2
 187+ 95B2 73               ld (hl),e
 188+ 95B3 23               inc hl
 189+ 95B4 72               ld (hl),d
 190+ 95B5 23               inc hl
 191+ 95B6
 192+ 95B6 EB               ex de,hl
 193+ 95B7
 194+ 95B7 CD D3 99         call NextScan
 195+ 95BA EB               ex de,hl
 196+ 95BB
 197+ 95BB 73               ld (hl),e
 198+ 95BC 23               inc hl
 199+ 95BD 72               ld (hl),d
 200+ 95BE 23               inc hl
 201+ 95BF
 202+ 95BF EB               ex de,hl
 203+ 95C0
 204+ 95C0 CD D3 99         call NextScan
 205+ 95C3 EB               ex de,hl
 206+ 95C4
 207+ 95C4              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 95C4              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 95C4              ;   _ generar sus scanlines.
 210+ 95C4
 211+ 95C4              ;    ld (Puntero_de_impresion_disparo),de
 212+ 95C4
 213+ 95C4 73               ld (hl),e
 214+ 95C5 23               inc hl
 215+ 95C6 72               ld (hl),d
 216+ 95C7 23               inc hl
 217+ 95C8
 218+ 95C8              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 95C8
 220+ 95C8 22 5F 8C         ld (Scanlines_album_SP),hl
 221+ 95CB
 222+ 95CB EB               ex de,hl
 223+ 95CC
 224+ 95CC              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 95CC
 226+ 95CC              ;    call NextScan
 227+ 95CC              ;    call NextScan
 228+ 95CC
 229+ 95CC 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 95CF
 231+ 95CF              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 95CF
 233+ 95CF 08               ex af,af
 234+ 95D0
 235+ 95D0 F5               push af
 236+ 95D1 E1               pop hl
 237+ 95D2
 238+ 95D2 36 10            ld (hl),16
 239+ 95D4
 240+ 95D4 C9               ret
 241+ 95D5
 242+ 95D5              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 95D5
 244+ 95D5              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 95D5
 246+ 95D5 3E 57            ld a,$57
 247+ 95D7 94               sub h
 248+ 95D8 47               ld b,a
 249+ 95D9
 250+ 95D9 3E DF            ld a,$df
 251+ 95DB BD               cp l
 252+ 95DC 38 04            jr c,1F
 253+ 95DE
 254+ 95DE 3E 08            ld a,8
 255+ 95E0 80               add b
 256+ 95E1 47               ld b,a
 257+ 95E2
 258+ 95E2              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 95E2              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 95E2
 261+ 95E2 48           1 ld c,b
 262+ 95E3 0C               inc c
 263+ 95E4
 264+ 95E4 04               inc b
 265+ 95E5 05               dec b
 266+ 95E6 20 02            jr nz,3F
 267+ 95E8
 268+ 95E8 18 0B            jr 6F
 269+ 95EA
 270+ 95EA CD D3 99     3 call NextScan
 271+ 95ED EB               ex de,hl
 272+ 95EE
 273+ 95EE 73               ld (hl),e
 274+ 95EF 23               inc hl
 275+ 95F0 72               ld (hl),d
 276+ 95F1 23               inc hl
 277+ 95F2
 278+ 95F2 EB               ex de,hl
 279+ 95F3 10 F5            djnz 3B
 280+ 95F5
 281+ 95F5 ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 282+ 95F9
 283+ 95F9 08           5 ex af,af
 284+ 95FA F5               push af
 285+ 95FB E1               pop hl
 286+ 95FC
 287+ 95FC 71               ld (hl),c
 288+ 95FD
 289+ 95FD C9               ret
 290+ 95FE
# file closed: Genera_datos_de_impresion.asm
2102  95FE              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95FE              ; -----------------------------------------------------------------------------
   2+ 95FE              ;
   3+ 95FE              ;   11/03/24
   4+ 95FE              ;
   5+ 95FE
   6+ 95FE              Pinta_Sprites
   7+ 95FE
   8+ 95FE              ;    ld hl,(Scanlines_album_SP)
   9+ 95FE              ;    call Extrae_address
  10+ 95FE
  11+ 95FE              ;    inc h
  12+ 95FE              ;    dec h
  13+ 95FE              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95FE
  15+ 95FE ED 73 3D 8C      ld (Stack),sp
  16+ 9602
  17+ 9602 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9603              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9603 2C               inc l
  20+ 9604 2C               inc l
  21+ 9605
  22+ 9605 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9606
  24+ 9606 2C               inc l
  25+ 9607 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9608
  27+ 9608              ;   Seleccionamos rutina de impresión:
  28+ 9608
  29+ 9608 3E 10            ld a,16
  30+ 960A B8               cp b
  31+ 960B C2 07 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 960E
  33+ 960E              ;   Rutinas:
  34+ 960E
  35+ 960E              Pinta_rapido    ;   1520 t/states.
  36+ 960E
  37+ 960E E1               pop hl
  38+ 960F
  39+ 960F 1A               ld a,(de)
  40+ 9610 AE               xor (hl)
  41+ 9611 77               ld (hl),a
  42+ 9612 2C               inc l
  43+ 9613 1C               inc e
  44+ 9614 1A               ld a,(de)
  45+ 9615 AE               xor (hl)
  46+ 9616 77               ld (hl),a
  47+ 9617 2C               inc l
  48+ 9618 1C               inc e
  49+ 9619 1A               ld a,(de)
  50+ 961A AE               xor (hl)
  51+ 961B 77               ld (hl),a
  52+ 961C 13               inc de
  53+ 961D
  54+ 961D E1               pop hl
  55+ 961E
  56+ 961E 1A               ld a,(de)
  57+ 961F AE               xor (hl)
  58+ 9620 77               ld (hl),a
  59+ 9621 2C               inc l
  60+ 9622 1C               inc e
  61+ 9623 1A               ld a,(de)
  62+ 9624 AE               xor (hl)
  63+ 9625 77               ld (hl),a
  64+ 9626 2C               inc l
  65+ 9627 1C               inc e
  66+ 9628 1A               ld a,(de)
  67+ 9629 AE               xor (hl)
  68+ 962A 77               ld (hl),a
  69+ 962B 13               inc de
  70+ 962C
  71+ 962C E1               pop hl
  72+ 962D
  73+ 962D 1A               ld a,(de)
  74+ 962E AE               xor (hl)
  75+ 962F 77               ld (hl),a
  76+ 9630 2C               inc l
  77+ 9631 1C               inc e
  78+ 9632 1A               ld a,(de)
  79+ 9633 AE               xor (hl)
  80+ 9634 77               ld (hl),a
  81+ 9635 2C               inc l
  82+ 9636 1C               inc e
  83+ 9637 1A               ld a,(de)
  84+ 9638 AE               xor (hl)
  85+ 9639 77               ld (hl),a
  86+ 963A 13               inc de
  87+ 963B
  88+ 963B E1               pop hl
  89+ 963C
  90+ 963C 1A               ld a,(de)
  91+ 963D AE               xor (hl)
  92+ 963E 77               ld (hl),a
  93+ 963F 2C               inc l
  94+ 9640 1C               inc e
  95+ 9641 1A               ld a,(de)
  96+ 9642 AE               xor (hl)
  97+ 9643 77               ld (hl),a
  98+ 9644 2C               inc l
  99+ 9645 1C               inc e
 100+ 9646 1A               ld a,(de)
 101+ 9647 AE               xor (hl)
 102+ 9648 77               ld (hl),a
 103+ 9649 13               inc de
 104+ 964A
 105+ 964A E1               pop hl
 106+ 964B
 107+ 964B 1A               ld a,(de)
 108+ 964C AE               xor (hl)
 109+ 964D 77               ld (hl),a
 110+ 964E 2C               inc l
 111+ 964F 1C               inc e
 112+ 9650 1A               ld a,(de)
 113+ 9651 AE               xor (hl)
 114+ 9652 77               ld (hl),a
 115+ 9653 2C               inc l
 116+ 9654 1C               inc e
 117+ 9655 1A               ld a,(de)
 118+ 9656 AE               xor (hl)
 119+ 9657 77               ld (hl),a
 120+ 9658 13               inc de
 121+ 9659
 122+ 9659 E1               pop hl
 123+ 965A
 124+ 965A 1A               ld a,(de)
 125+ 965B AE               xor (hl)
 126+ 965C 77               ld (hl),a
 127+ 965D 2C               inc l
 128+ 965E 1C               inc e
 129+ 965F 1A               ld a,(de)
 130+ 9660 AE               xor (hl)
 131+ 9661 77               ld (hl),a
 132+ 9662 2C               inc l
 133+ 9663 1C               inc e
 134+ 9664 1A               ld a,(de)
 135+ 9665 AE               xor (hl)
 136+ 9666 77               ld (hl),a
 137+ 9667 13               inc de
 138+ 9668
 139+ 9668 E1               pop hl
 140+ 9669
 141+ 9669 1A               ld a,(de)
 142+ 966A AE               xor (hl)
 143+ 966B 77               ld (hl),a
 144+ 966C 2C               inc l
 145+ 966D 1C               inc e
 146+ 966E 1A               ld a,(de)
 147+ 966F AE               xor (hl)
 148+ 9670 77               ld (hl),a
 149+ 9671 2C               inc l
 150+ 9672 1C               inc e
 151+ 9673 1A               ld a,(de)
 152+ 9674 AE               xor (hl)
 153+ 9675 77               ld (hl),a
 154+ 9676 13               inc de
 155+ 9677
 156+ 9677 E1               pop hl
 157+ 9678
 158+ 9678 1A               ld a,(de)
 159+ 9679 AE               xor (hl)
 160+ 967A 77               ld (hl),a
 161+ 967B 2C               inc l
 162+ 967C 1C               inc e
 163+ 967D 1A               ld a,(de)
 164+ 967E AE               xor (hl)
 165+ 967F 77               ld (hl),a
 166+ 9680 2C               inc l
 167+ 9681 1C               inc e
 168+ 9682 1A               ld a,(de)
 169+ 9683 AE               xor (hl)
 170+ 9684 77               ld (hl),a
 171+ 9685 13               inc de
 172+ 9686
 173+ 9686 E1               pop hl
 174+ 9687
 175+ 9687 1A               ld a,(de)
 176+ 9688 AE               xor (hl)
 177+ 9689 77               ld (hl),a
 178+ 968A 2C               inc l
 179+ 968B 1C               inc e
 180+ 968C 1A               ld a,(de)
 181+ 968D AE               xor (hl)
 182+ 968E 77               ld (hl),a
 183+ 968F 2C               inc l
 184+ 9690 1C               inc e
 185+ 9691 1A               ld a,(de)
 186+ 9692 AE               xor (hl)
 187+ 9693 77               ld (hl),a
 188+ 9694 13               inc de
 189+ 9695
 190+ 9695 E1               pop hl
 191+ 9696
 192+ 9696 1A               ld a,(de)
 193+ 9697 AE               xor (hl)
 194+ 9698 77               ld (hl),a
 195+ 9699 2C               inc l
 196+ 969A 1C               inc e
 197+ 969B 1A               ld a,(de)
 198+ 969C AE               xor (hl)
 199+ 969D 77               ld (hl),a
 200+ 969E 2C               inc l
 201+ 969F 1C               inc e
 202+ 96A0 1A               ld a,(de)
 203+ 96A1 AE               xor (hl)
 204+ 96A2 77               ld (hl),a
 205+ 96A3 13               inc de
 206+ 96A4
 207+ 96A4 E1               pop hl
 208+ 96A5
 209+ 96A5 1A               ld a,(de)
 210+ 96A6 AE               xor (hl)
 211+ 96A7 77               ld (hl),a
 212+ 96A8 2C               inc l
 213+ 96A9 1C               inc e
 214+ 96AA 1A               ld a,(de)
 215+ 96AB AE               xor (hl)
 216+ 96AC 77               ld (hl),a
 217+ 96AD 2C               inc l
 218+ 96AE 1C               inc e
 219+ 96AF 1A               ld a,(de)
 220+ 96B0 AE               xor (hl)
 221+ 96B1 77               ld (hl),a
 222+ 96B2 13               inc de
 223+ 96B3
 224+ 96B3 E1               pop hl
 225+ 96B4
 226+ 96B4 1A               ld a,(de)
 227+ 96B5 AE               xor (hl)
 228+ 96B6 77               ld (hl),a
 229+ 96B7 2C               inc l
 230+ 96B8 1C               inc e
 231+ 96B9 1A               ld a,(de)
 232+ 96BA AE               xor (hl)
 233+ 96BB 77               ld (hl),a
 234+ 96BC 2C               inc l
 235+ 96BD 1C               inc e
 236+ 96BE 1A               ld a,(de)
 237+ 96BF AE               xor (hl)
 238+ 96C0 77               ld (hl),a
 239+ 96C1 13               inc de
 240+ 96C2
 241+ 96C2 E1               pop hl
 242+ 96C3
 243+ 96C3 1A               ld a,(de)
 244+ 96C4 AE               xor (hl)
 245+ 96C5 77               ld (hl),a
 246+ 96C6 2C               inc l
 247+ 96C7 1C               inc e
 248+ 96C8 1A               ld a,(de)
 249+ 96C9 AE               xor (hl)
 250+ 96CA 77               ld (hl),a
 251+ 96CB 2C               inc l
 252+ 96CC 1C               inc e
 253+ 96CD 1A               ld a,(de)
 254+ 96CE AE               xor (hl)
 255+ 96CF 77               ld (hl),a
 256+ 96D0 13               inc de
 257+ 96D1
 258+ 96D1 E1               pop hl
 259+ 96D2
 260+ 96D2 1A               ld a,(de)
 261+ 96D3 AE               xor (hl)
 262+ 96D4 77               ld (hl),a
 263+ 96D5 2C               inc l
 264+ 96D6 1C               inc e
 265+ 96D7 1A               ld a,(de)
 266+ 96D8 AE               xor (hl)
 267+ 96D9 77               ld (hl),a
 268+ 96DA 2C               inc l
 269+ 96DB 1C               inc e
 270+ 96DC 1A               ld a,(de)
 271+ 96DD AE               xor (hl)
 272+ 96DE 77               ld (hl),a
 273+ 96DF 13               inc de
 274+ 96E0
 275+ 96E0 E1               pop hl
 276+ 96E1
 277+ 96E1 1A               ld a,(de)
 278+ 96E2 AE               xor (hl)
 279+ 96E3 77               ld (hl),a
 280+ 96E4 2C               inc l
 281+ 96E5 1C               inc e
 282+ 96E6 1A               ld a,(de)
 283+ 96E7 AE               xor (hl)
 284+ 96E8 77               ld (hl),a
 285+ 96E9 2C               inc l
 286+ 96EA 1C               inc e
 287+ 96EB 1A               ld a,(de)
 288+ 96EC AE               xor (hl)
 289+ 96ED 77               ld (hl),a
 290+ 96EE 13               inc de
 291+ 96EF
 292+ 96EF E1               pop hl
 293+ 96F0
 294+ 96F0 1A               ld a,(de)
 295+ 96F1 AE               xor (hl)
 296+ 96F2 77               ld (hl),a
 297+ 96F3 2C               inc l
 298+ 96F4 1C               inc e
 299+ 96F5 1A               ld a,(de)
 300+ 96F6 AE               xor (hl)
 301+ 96F7 77               ld (hl),a
 302+ 96F8 2C               inc l
 303+ 96F9 1C               inc e
 304+ 96FA 1A               ld a,(de)
 305+ 96FB AE               xor (hl)
 306+ 96FC 77               ld (hl),a
 307+ 96FD 13               inc de
 308+ 96FE
 309+ 96FE ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 9702 ED 7B 3D 8C      ld sp,(Stack)
 311+ 9706 C9               ret
 312+ 9707
 313+ 9707              Pinta_lento
 314+ 9707
 315+ 9707 E1           1 pop hl
 316+ 9708
 317+ 9708 1A               ld a,(de)
 318+ 9709 AE               xor (hl)
 319+ 970A 77               ld (hl),a
 320+ 970B 2C               inc l
 321+ 970C 1C               inc e
 322+ 970D 1A               ld a,(de)
 323+ 970E AE               xor (hl)
 324+ 970F 77               ld (hl),a
 325+ 9710 2C               inc l
 326+ 9711 1C               inc e
 327+ 9712 1A               ld a,(de)
 328+ 9713 AE               xor (hl)
 329+ 9714 77               ld (hl),a
 330+ 9715 13               inc de
 331+ 9716
 332+ 9716 10 EF            djnz 1B
 333+ 9718
 334+ 9718 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 971C ED 7B 3D 8C      ld sp,(Stack)
 336+ 9720 C9               ret
# file closed: Pinta_Sprites.asm
2103  9721              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9721              ; ******************************************************************************************************************************************************************************************
   2+ 9721              ;
   3+ 9721              ; 26/06/23
   4+ 9721              ;
   5+ 9721              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9721
   7+ 9721              Draw
   8+ 9721
   9+ 9721 CD C7 99     	call Prepara_draw
  10+ 9724 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9725 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9726 28 05        	jr z,2F
  13+ 9728
  14+ 9728 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 972B 18 0C        	jr 1F
  16+ 972D
  17+ 972D 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9730 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9733 CD BF 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9736              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9736
  22+ 9736 CD 66 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9739
  24+ 9739 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 973C CB 6F        	bit 5,a
  26+ 973E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9740
  28+ 9740 CD 55 97     	call Comprueba_limite_horizontal
  29+ 9743 CD E5 97     	call Comprueba_limite_vertical
  30+ 9746
  31+ 9746              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9746              ; -----------------------
  33+ 9746              ; -----------------------
  34+ 9746              ; -----------------------
  35+ 9746
  36+ 9746 CD 3B 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9749 CD 72 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 974C
  39+ 974C 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 974F CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9751 32 FB 8B     	ld (Ctrl_0),a
  42+ 9754
  43+ 9754 C9           	ret
  44+ 9755
  45+ 9755              ; *******************************************************************************************************************************************************************************************
  46+ 9755              ;	21/01/23
  47+ 9755              ;
  48+ 9755              ; 	Comprueba_limite_horizontal.
  49+ 9755              ;
  50+ 9755              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9755              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9755              ;
  53+ 9755              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9755              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9755              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9755              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9755
  58+ 9755
  59+ 9755
  60+ 9755 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9758 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 975A 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 975C E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 975E 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9761 18 09            jr 6F
  66+ 9763 CB 5F        1 bit 3,a
  67+ 9765 28 0A            jr z,2F
  68+ 9767 E6 F7            and $f7
  69+ 9769 32 FB 8B         ld (Ctrl_0),a
  70+ 976C CD BF 98     6 call Inicializacion
  71+ 976F 18 5B            jr 5F
  72+ 9771 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9772
  74+ 9772              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9772              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9772
  77+ 9772 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9773 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9776 CD C0 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9779 67           	ld h,a
  81+ 977A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 977B CD C0 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 977E 67           	ld h,a
  84+ 977F A7           	and a
  85+ 9780 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9782 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9783 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 9786 FE 02        	cp 2
  89+ 9788 38 1E        	jr c,3F
  90+ 978A 28 1C        	jr z,3F
  91+ 978C 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 978D 28 23            jr z,7F
  93+ 978F 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9791 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9793 E1           	pop hl
  96+ 9794
  97+ 9794              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9794              ; _para indicar con E="2" en caso necesario.
  99+ 9794
 100+ 9794 E5               push hl
 101+ 9795 C5               push bc
 102+ 9796 CD C0 94     	call calcula_tercio
 103+ 9799 FE 01        	cp 1
 104+ 979B 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 979D CD CD 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A0 28 26            jr z,9F
 107+ 97A2 38 24            jr c,9F
 108+ 97A4 1E 00        11 ld e,0
 109+ 97A6 18 22            jr 8F
 110+ 97A8 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97A9 28 07        	jr z, 7F
 112+ 97AB 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97AD 1E 00         	ld e,0
 114+ 97AF E1           	pop hl
 115+ 97B0 18 04        	jr 4F
 116+ 97B2 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B4 18 15            jr 10F
 118+ 97B6
 119+ 97B6              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B6              ; _para indicar con E="2" en caso necesario.
 121+ 97B6
 122+ 97B6 E5           4 push hl
 123+ 97B7 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97B8 CD C0 94     	call calcula_tercio
 125+ 97BB FE 01        	cp 1
 126+ 97BD 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97BF CD CD 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C2 28 04            jr z,9F
 129+ 97C4 30 02            jr nc,9F
 130+ 97C6 18 02        	jr 8F
 131+ 97C8 1E 02        9 ld e,2
 132+ 97CA C1           8 pop bc
 133+ 97CB E1           10 pop hl
 134+ 97CC C9           5 ret
 135+ 97CD
 136+ 97CD              ; --------------------
 137+ 97CD              ;
 138+ 97CD              ; 25/08/22
 139+ 97CD
 140+ 97CD CD C0 94     Comprueba_centro call calcula_tercio
 141+ 97D0 67               ld h,a
 142+ 97D1 08           	ex af,af
 143+ 97D2 FE 02        	cp 2
 144+ 97D4 38 07        	jr c,1F
 145+ 97D6 28 05        	jr z,1F
 146+ 97D8 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97DB 18 03        	jr 2F
 148+ 97DD 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E0 08           2 ex af,af
 150+ 97E1 A7               and a
 151+ 97E2 ED 42            sbc hl,bc
 152+ 97E4 C9               ret
 153+ 97E5
 154+ 97E5              ; *********************************************************************************************************************************************************************************************
 155+ 97E5              ;
 156+ 97E5              ;   16/8/22
 157+ 97E5              ;
 158+ 97E5              ;	Comprueba_limite_vertical
 159+ 97E5              ;
 160+ 97E5              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E5              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E5              ;
 163+ 97E5
 164+ 97E5 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97E8 7D           	ld a,l
 166+ 97E9 E6 1F        	and $1F
 167+ 97EB 57           	ld d,a
 168+ 97EC 3A 11 8C     	ld a,(Limite_vertical)
 169+ 97EF BA           	cp d 											; Límite - Posición.
 170+ 97F0 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F1 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F4 CB 47        	bit 0,a
 173+ 97F6 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97F8
 175+ 97F8              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97F8
 177+ 97F8 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97F9 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97FB
 180+ 97FB              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97FB              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97FB
 183+ 97FB 3A EF 8B         ld a,(Coordenada_X)
 184+ 97FE 16 0F            ld d,Centro_izquierda
 185+ 9800 A7               and a
 186+ 9801 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9802 28 1E            jr z,3F
 188+ 9804 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9806              ;                                                    ; _salimos sin modificar nada.
 190+ 9806 18 0E            jr 2F
 191+ 9808 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9809 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 980B
 194+ 980B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 980B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 980B
 197+ 980B 3A EF 8B         ld a,(Coordenada_X)
 198+ 980E 16 10            ld d,Centro_derecha
 199+ 9810 A7               and a
 200+ 9811 92               sub d
 201+ 9812 28 0E            jr z,3F
 202+ 9814 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9816              ;                                                    ; _salimos sin modificar nada.
 204+ 9816 CB 43        2 bit 0,e
 205+ 9818 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 981A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 981B CD AF 98         call Modificaccionne
 208+ 981E C1           	pop bc
 209+ 981F CD BF 98         call Inicializacion
 210+ 9822 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9823
 212+ 9823              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9823
 214+ 9823 C5           4 push bc
 215+ 9824 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9827 0A           	ld a,(bc)
 217+ 9828 3D           	dec a
 218+ 9829 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 982A 7D           	ld a,l
 220+ 982B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 982C CB 47        	bit 0,a
 222+ 982E 28 03        	jr z,5F
 223+ 9830 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9831 18 2E        	jr 7F
 225+ 9833
 226+ 9833              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9833
 228+ 9833 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9834 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9835 3A FB 8B     	ld a,(Ctrl_0)
 231+ 9838 CB 4F        	bit 1,a
 232+ 983A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 983C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 983D
 235+ 983D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 983D
 237+ 983D 1C               inc e
 238+ 983E 1D               dec e
 239+ 983F 20 07            jr nz,12F
 240+ 9841 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9842 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9843 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9846 18 44        13 jr 9F
 244+ 9848 CB 43        12 bit 0,e
 245+ 984A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 984C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 984C C1           	pop bc
 248+ 984D 18 D3        	jr 3B
 249+ 984F 80           14 add b
 250+ 9850 6F               ld l,a
 251+ 9851 22 FE 8B     	ld (Posicion_actual),hl
 252+ 9854 CD AF 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9857 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9859 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 985B 32 FB 8B         ld (Ctrl_0),a
 256+ 985E F1           	pop af
 257+ 985F 18 2B        	jr 9F
 258+ 9861
 259+ 9861              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9861
 261+ 9861 F5           7 push af
 262+ 9862 3A FB 8B     	ld a,(Ctrl_0)
 263+ 9865 CB 47        	bit 0,a
 264+ 9867 20 1D        	jr nz,8F
 265+ 9869 F1           	pop af
 266+ 986A
 267+ 986A              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 986A
 269+ 986A 1C           	inc e
 270+ 986B 1D               dec e
 271+ 986C 20 07            jr nz,10F
 272+ 986E 90           	sub b
 273+ 986F 6F               ld l,a
 274+ 9870 22 FE 8B     	ld (Posicion_actual),hl
 275+ 9873 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9875              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9875 CB 43        10 bit 0,e
 278+ 9877 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9879              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9879 C1           	pop bc
 281+ 987A 18 A6        	jr 3B
 282+ 987C 90           16 sub b
 283+ 987D 6F               ld l,a
 284+ 987E 22 FE 8B     	ld (Posicion_actual),hl
 285+ 9881 CD AF 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9884 18 06            jr 9F
 287+ 9886 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9888 32 FB 8B         ld (Ctrl_0),a
 289+ 988B F1           	pop af
 290+ 988C C1           9 pop bc
 291+ 988D 1E 00        	ld e,0
 292+ 988F CD BF 98         call Inicializacion
 293+ 9892 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9893 08           	ex af,af
 295+ 9894 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9895 18 8B            jr 3B
 297+ 9897
 298+ 9897              ; --------------------
 299+ 9897
 300+ 9897 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9899 CD E2 99     1 call PreviousScan
 302+ 989C 10 FB            djnz 1B
 303+ 989E 22 FE 8B     	ld (Posicion_actual),hl
 304+ 98A1 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A2 C9           	ret
 306+ 98A3
 307+ 98A3              ; --------------------
 308+ 98A3
 309+ 98A3 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A5 CD D3 99     1 call NextScan
 311+ 98A8 10 FB            djnz 1B
 312+ 98AA 22 FE 8B     	ld (Posicion_actual),hl
 313+ 98AD AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98AE C9           	ret
 315+ 98AF
 316+ 98AF              ; --------------------
 317+ 98AF              ;
 318+ 98AF              ;	22/01/23
 319+ 98AF              ;
 320+ 98AF              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98AF              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98AF              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98AF
 324+ 98AF
 325+ 98AF              Modificaccionne
 326+ 98AF
 327+ 98AF 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 98B2 FE 02        	cp 2
 329+ 98B4 CC 97 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B7 DC 97 98         call c,Modifica_Pos_actual
 331+ 98BA C8           	ret z
 332+ 98BB CD A3 98         call Modifica_Pos_actual2
 333+ 98BE C9               ret
 334+ 98BF
 335+ 98BF              ; *************************************************************************************************************************************************************************************************
 336+ 98BF              ;
 337+ 98BF              ;	13/8/22
 338+ 98BF              ;
 339+ 98BF              ;	Inicializacion
 340+ 98BF              ;
 341+ 98BF              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98BF              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98BF              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98BF              ;
 345+ 98BF              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98BF              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98BF              ;	_ desaparece/aparece.
 348+ 98BF
 349+ 98BF              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98BF              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98BF              ;
 352+ 98BF              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98BF              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98BF              ; 		   [E] ="0"
 355+ 98BF
 356+ 98BF              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98BF
 358+ 98BF CD C0 94     Inicializacion call calcula_tercio
 359+ 98C2 28 36        	jr z,primit
 360+ 98C4 E6 02        	and 2
 361+ 98C6 20 07        	jr nz,segmit
 362+ 98C8 7D           	ld a,l
 363+ 98C9 FE 7F        	cp $7f
 364+ 98CB 38 2D        	jr c,primit
 365+ 98CD 28 2B        	jr z,primit
 366+ 98CF CD 35 99     segmit call column
 367+ 98D2 38 13        	jr c,tercuad
 368+ 98D4 3E 04        cuarcuad ld a,4
 369+ 98D6 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98D9 21 20 48     	ld hl,$4820
 371+ 98DC 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98DF 21 11 8C     	ld hl,Limite_vertical
 373+ 98E2 36 0D        	ld (hl),$0d
 374+ 98E4 08           	ex af,af
 375+ 98E5 18 3C        	jr 1F
 376+ 98E7              tercuad
 377+ 98E7 3E 03        	ld a,3
 378+ 98E9 32 0D 8C     	ld (Cuad_objeto),a
 379+ 98EC 21 20 48     	ld hl,$4820
 380+ 98EF 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 98F2 21 11 8C     	ld hl,Limite_vertical
 382+ 98F5 36 12        	ld (hl),$12
 383+ 98F7 08           	ex af,af
 384+ 98F8 18 29        	jr 1F
 385+ 98FA CD 35 99     primit call column
 386+ 98FD 38 13        	jr c, primcuad
 387+ 98FF              segcuad
 388+ 98FF 3E 02        	ld a,2
 389+ 9901 32 0D 8C     	ld (Cuad_objeto),a
 390+ 9904 21 C0 4F     	ld hl,$4fc0
 391+ 9907 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 990A 21 11 8C     	ld hl,Limite_vertical
 393+ 990D 36 0D        	ld (hl),$0d
 394+ 990F 08           	ex af,af
 395+ 9910 18 11        	jr 1F
 396+ 9912              primcuad
 397+ 9912 3E 01        	ld a,1
 398+ 9914 32 0D 8C     	ld (Cuad_objeto),a
 399+ 9917 21 C0 4F     	ld hl,$4fc0
 400+ 991A 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 991D 21 11 8C     	ld hl,Limite_vertical
 402+ 9920 36 12        	ld (hl),$12
 403+ 9922 08           	ex af,af
 404+ 9923
 405+ 9923 C5           1 push bc
 406+ 9924 E5           	push hl
 407+ 9925 D5           	push de
 408+ 9926
 409+ 9926 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 9929 CD DE 94     	call Genera_coordenadas
 411+ 992C
 412+ 992C D1           	pop de
 413+ 992D E1           	pop hl
 414+ 992E C1           	pop bc
 415+ 992F
 416+ 992F 21 FB 8B     	ld hl,Ctrl_0
 417+ 9932 CB EE        	set 5,(hl)
 418+ 9934 C9           	ret
 419+ 9935
 420+ 9935              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9935
 422+ 9935              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9935              ;
 424+ 9935              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9935
 426+ 9935 7D           column ld a,l
 427+ 9936 E6 1F        	and $1f
 428+ 9938 FE 10         	cp $10
 429+ 993A C9            	ret
 430+ 993B
 431+ 993B              ; --------------------------------------------------------------------------------------------------------------------
 432+ 993B              ;
 433+ 993B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 993B              ;
 435+ 993B              ; 14/12/22
 436+ 993B              ;
 437+ 993B              ;	Modifica: A y BC.
 438+ 993B
 439+ 993B 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 993E E6 01        	and 1
 441+ 9940 28 17        	jr z,1F
 442+ 9942
 443+ 9942              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9942
 445+ 9942 3A EF 8B     	ld a,(Coordenada_X)
 446+ 9945 47           	ld b,a
 447+ 9946 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9947 79           	ld a,c
 449+ 9948 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9949 38 08        	jr c,2F
 451+ 994B 47           	ld b,a
 452+ 994C 79           	ld a,c
 453+ 994D 90           	sub b
 454+ 994E 32 0E 8C     	ld (Columnas),a
 455+ 9951 18 1B        	jr 4F
 456+ 9953 79           2 ld a,c
 457+ 9954 32 0E 8C     	ld (Columnas),a
 458+ 9957 18 15        	jr 4F
 459+ 9959
 460+ 9959              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9959
 462+ 9959 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 995C 81           	add c
 464+ 995D 3D           	dec a
 465+ 995E D6 1F        	sub $1f
 466+ 9960 38 08        	jr c,3F
 467+ 9962 47           	ld b,a
 468+ 9963 79           	ld a,c
 469+ 9964 90           	sub b
 470+ 9965 32 0E 8C     	ld (Columnas),a
 471+ 9968 18 04        	jr 4F
 472+ 996A 79           3 ld a,c
 473+ 996B 32 0E 8C     	ld (Columnas),a
 474+ 996E D9           4 exx
 475+ 996F 4F           	ld c,a
 476+ 9970 D9           	exx
 477+ 9971 C9            ret
 478+ 9972
 479+ 9972              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9972              ;
 481+ 9972              ;   19/7/23
 482+ 9972              ;
 483+ 9972              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9972              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9972              ;
 486+ 9972              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9972              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9972              ;
 489+ 9972              ;	DESTRUYE: HL,B Y A.
 490+ 9972
 491+ 9972 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9975 FE 02        	cp 2
 493+ 9977 38 18        	jr c,1F
 494+ 9979 28 16        	jr z,1F
 495+ 997B E6 01        	and 1
 496+ 997D 28 0D        	jr z,3F
 497+ 997F
 498+ 997F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 997F
 500+ 997F CD BB 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9982
 502+ 9982 7D           9 ld a,l
 503+ 9983 E6 1F        	and $1f
 504+ 9985 28 2A        	jr z,7F
 505+ 9987 2B           	dec hl
 506+ 9988 10 F8        	djnz 9B
 507+ 998A 18 25        	jr 7F
 508+ 998C
 509+ 998C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 998C
 511+ 998C 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 998F 18 20        	jr 7F
 513+ 9991
 514+ 9991 28 14        1 jr z,2F
 515+ 9993
 516+ 9993              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9993
 518+ 9993 CD BB 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9996
 520+ 9996 7D           4 ld a,l
 521+ 9997 E6 1F        	and $1f
 522+ 9999 28 03        	jr z,6F
 523+ 999B 2B           	dec hl
 524+ 999C 10 F8        	djnz 4B
 525+ 999E 06 0F        6 ld b,15
 526+ 99A0 CD E2 99     5 call PreviousScan
 527+ 99A3 10 FB        	djnz 5B
 528+ 99A5 18 0A        	jr 7F
 529+ 99A7
 530+ 99A7              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A7
 532+ 99A7 CD BB 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99AA 06 0F        	ld b,15
 534+ 99AC CD E2 99     8 call PreviousScan
 535+ 99AF 10 FB        	djnz 8B
 536+ 99B1
 537+ 99B1 E5           7 push hl
 538+ 99B2 DD E1        	pop ix
 539+ 99B4
 540+ 99B4 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 99B7 E5           	push hl
 542+ 99B8 FD E1        	pop iy
 543+ 99BA
 544+ 99BA C9           	ret
 545+ 99BB
 546+ 99BB              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99BB              ;
 548+ 99BB              ;	2/1/23
 549+ 99BB              ;
 550+ 99BB              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99BB              ;
 552+ 99BB              ;	Tras esta rutina tenemos:
 553+ 99BB              ;
 554+ 99BB              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99BB              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99BB              ;
 557+ 99BB              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99BB
 559+ 99BB 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 99BE 3A 0E 8C     	ld a,(Columnas)
 561+ 99C1 3D           	dec a
 562+ 99C2 20 01        	jr nz,1F
 563+ 99C4 3C           	inc a
 564+ 99C5 47           1 ld b,a
 565+ 99C6 C9           	ret
 566+ 99C7
 567+ 99C7              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C7              ;
 569+ 99C7              ;	Prepara_draw
 570+ 99C7              ;
 571+ 99C7              ;	Es una rutina de carga.
 572+ 99C7              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C7              ;
 574+ 99C7              ;	FUNCIONAMIENTO:
 575+ 99C7              ;
 576+ 99C7              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C7              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C7              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C7              ;
 580+ 99C7              ;	DESTRUYE:
 581+ 99C7              ;
 582+ 99C7              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C7
 584+ 99C7 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99CA 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99CB 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99CC 4E           	ld c,(hl)
 588+ 99CD 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99D0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D2 C9           	ret
 591+ 99D3
 592+ 99D3              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D3              ;
 594+ 99D3              ;	5/08/22
 595+ 99D3              ;
 596+ 99D3              ;   NextScan.
 597+ 99D3              ;
 598+ 99D3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D3              ;
 600+ 99D3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D3              ;
 602+ 99D3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D3              ;
 604+ 99D3              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D3              ;
 606+ 99D3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D3              ;
 608+ 99D3
 609+ 99D3 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D4 7C               ld a,h
 611+ 99D5 E6 07            and 7
 612+ 99D7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99D8
 614+ 99D8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99D9 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99DB 6F               ld l,a
 617+ 99DC D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99DD
 619+ 99DD 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99DE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E0 67               ld h,a
 622+ 99E1 C9               ret
 623+ 99E2
 624+ 99E2              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E2              ;
 626+ 99E2              ;	5/08/22
 627+ 99E2              ;
 628+ 99E2              ;   PreviousScan.
 629+ 99E2              ;
 630+ 99E2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E2              ;
 632+ 99E2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E2              ;
 634+ 99E2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E2              ;
 636+ 99E2              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E2              ;
 638+ 99E2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E2              ;
 640+ 99E2
 641+ 99E2 7C           PreviousScan ld a,h
 642+ 99E3 25               dec h               ; Dec H.
 643+ 99E4 E6 07            and 7
 644+ 99E6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E7
 646+ 99E7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99E8 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99EA 6F               ld l,a
 649+ 99EB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99EC
 651+ 99EC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99ED C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99EF 67               ld h,a
 654+ 99F0 C9               ret
 655+ 99F1
 656+ 99F1
 657+ 99F1
 658+ 99F1
 659+ 99F1
 660+ 99F1
 661+ 99F1
 662+ 99F1
 663+ 99F1
 664+ 99F1
 665+ 99F1
 666+ 99F1
# file closed: Draw_XOR.asm
2104  99F1              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F1
   2+ 99F1              ; ******************************************************************************************************************************************************************************************
   3+ 99F1              ;
   4+ 99F1              ;   20/05/23
   5+ 99F1              ;
   6+ 99F1              ;	Recompone_posicion_inicio
   7+ 99F1              ;
   8+ 99F1              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F1              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F1              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F1              ;	_ a una u otra rutina.
  12+ 99F1
  13+ 99F1              Recompone_posicion_inicio
  14+ 99F1
  15+ 99F1 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 99F4 7D           	ld a,l
  17+ 99F5 E6 1F        	and $1f
  18+ 99F7 28 16        	jr z,1F
  19+ 99F9
  20+ 99F9 FE 1F        	cp $1f
  21+ 99FB 28 0D        	jr z,3F
  22+ 99FD
  23+ 99FD 21 FA 8B     	ld hl,Ctrl_2
  24+ 9A00 CB C6        	set 0,(hl)
  25+ 9A02 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 9A05 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A08 18 08        	jr 2F
  28+ 9A0A
  29+ 9A0A CD B8 9B     3 call Mov_left
  30+ 9A0D 18 03        	jr 2F
  31+ 9A0F
  32+ 9A0F CD 95 9A     1 call Mov_right
  33+ 9A12 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A15 22 00 8C     	ld (Puntero_objeto),hl
  35+ 9A18 C9           	ret
  36+ 9A19
  37+ 9A19              ; ******************************************************************************************************************************************************************************************
  38+ 9A19              ;
  39+ 9A19              ;   27/05/23
  40+ 9A19              ;
  41+ 9A19              ;	Mov_down
  42+ 9A19              ;
  43+ 9A19              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A19              ;
  45+ 9A19              ;
  46+ 9A19              Mov_down
  47+ 9A19
  48+ 9A19 CD 83 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A1C              ;																	; _ repone (Puntero_objeto).
  50+ 9A1C 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A1F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A21              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A21              ; 																	; _ en el caso de que no lo haya.
  54+ 9A21 3A 16 8C     	ld a,(Vel_down)
  55+ 9A24 47           	ld b,a
  56+ 9A25 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A28 CD C0 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A2B E6 02        	and 2
  59+ 9A2D 28 17        	jr z,1F
  60+ 9A2F
  61+ 9A2F              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A2F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A2F
  64+ 9A2F 7C           	ld a,h
  65+ 9A30 FE 57        	cp $57
  66+ 9A32 20 12        	jr nz,1F
  67+ 9A34
  68+ 9A34 7D           	ld a,l
  69+ 9A35 C6 20        	add $20
  70+ 9A37 30 0D        	jr nc,1F
  71+ 9A39
  72+ 9A39              ; ------------------------------
  73+ 9A39              ;
  74+ 9A39              ;	12/01/24
  75+ 9A39
  76+ 9A39              ;	call Reaparece_arriba
  77+ 9A39 CD 45 9D     	call Reinicio
  78+ 9A3C
  79+ 9A3C              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A3C
  81+ 9A3C 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A3F CB CF        	set 1,a
  83+ 9A41 32 65 8C     	ld (Ctrl_3),a
  84+ 9A44
  85+ 9A44 18 08        	jr 3F
  86+ 9A46              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A46              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A46              ; ------------------------------
  89+ 9A46
  90+ 9A46 CD D3 99     1 call NextScan
  91+ 9A49 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A4C 10 DA            djnz 2B
  93+ 9A4E CD DE 94     3 call Genera_coordenadas
  94+ 9A51 C9           	ret
  95+ 9A52
  96+ 9A52              ; ******************************************************************************************************************************************************************************************
  97+ 9A52              ;
  98+ 9A52              ;   27/05/23
  99+ 9A52              ;
 100+ 9A52              ;	Mov_up
 101+ 9A52              ;
 102+ 9A52              ; 	Mueve el Sprite hacia arriba.
 103+ 9A52              ;
 104+ 9A52              ;
 105+ 9A52              Mov_up
 106+ 9A52
 107+ 9A52 CD 83 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A55              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A55 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A58 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A5A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A5A              ; 																		; _ en el caso de que no lo haya.
 113+ 9A5A 3A 15 8C     	ld a,(Vel_up)
 114+ 9A5D 47           	ld b,a
 115+ 9A5E 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A61 CD C0 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A64 A7           	and a
 118+ 9A65 20 10        	jr nz,1F
 119+ 9A67
 120+ 9A67              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A67              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A67
 123+ 9A67 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A68 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A6A 20 0B            jr nz,1F
 126+ 9A6C 7D               ld a,l
 127+ 9A6D D6 20            sub $20
 128+ 9A6F 30 06            jr nc,1F
 129+ 9A71 25               dec h
 130+ 9A72
 131+ 9A72              ; -----------------------------
 132+ 9A72 CD 26 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A75              ;	call Reinicio
 134+ 9A75              ; -----------------------------
 135+ 9A75
 136+ 9A75 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A77 CD E2 99     1 call PreviousScan
 138+ 9A7A 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A7D 10 E2            djnz 3B
 140+ 9A7F CD DE 94     2 call Genera_coordenadas
 141+ 9A82 C9           	ret
 142+ 9A83
 143+ 9A83              ; -----------------------------
 144+ 9A83              ;
 145+ 9A83              ;	27/5/23
 146+ 9A83              ;
 147+ 9A83              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A83              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A83              ;
 150+ 9A83              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A83              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A83              ;
 153+ 9A83              ;	Modifica: A y (Puntero_objeto).
 154+ 9A83
 155+ 9A83 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A86 CB 47        	bit 0,a
 157+ 9A88 C8           	ret z
 158+ 9A89 CB 87        	res 0,a
 159+ 9A8B 32 FA 8B     	ld (Ctrl_2),a
 160+ 9A8E 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A91 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9A94 C9           	ret
 163+ 9A95
 164+ 9A95              ; ******************************************************************************************************************************************************************************************
 165+ 9A95              ;
 166+ 9A95              ;	19/10/22
 167+ 9A95              ;
 168+ 9A95              ;	Mov_right.
 169+ 9A95              ;
 170+ 9A95              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A95              ;
 172+ 9A95
 173+ 9A95 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A98 CB 77        	bit 6,a
 175+ 9A9A 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A9C
 177+ 9A9C CD D4 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A9F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA0
 180+ 9AA0 21 FB 8B     	ld hl,Ctrl_0
 181+ 9AA3 CB E6        	set 4,(hl)
 182+ 9AA5 18 52        	jr 8F
 183+ 9AA7
 184+ 9AA7 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9AAA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AAC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AAC              ; 																	; _ en el caso de que no lo haya.
 188+ 9AAC 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AAF FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB1 20 46        	jr nz,8F
 191+ 9AB3
 192+ 9AB3 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB6 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB7 28 40        	jr z,8F
 195+ 9AB9
 196+ 9AB9              ; ---------- ---------- ----------
 197+ 9AB9              ;
 198+ 9AB9              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AB9
 200+ 9AB9 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ABC FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9ABE 28 11        	jr z,1F
 203+ 9AC0 38 06        	jr c,6F
 204+ 9AC2 FE 04        	cp 4
 205+ 9AC4 28 14        	jr z,7F
 206+ 9AC6 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AC8
 208+ 9AC8              ; ---------- ---------- ----------
 209+ 9AC8              ;
 210+ 9AC8              ; Perfiles de velocidad
 211+ 9AC8              ;
 212+ 9AC8
 213+ 9AC8 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ACB FE FE        	cp $fe
 215+ 9ACD 20 2A        	jr nz,8F
 216+ 9ACF 18 10        	jr 3F
 217+ 9AD1 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD4 FE FD        	cp $fd
 219+ 9AD6 20 21        	jr nz,8F
 220+ 9AD8 18 07        	jr 3F
 221+ 9ADA 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ADD FE FB        	cp $fb
 223+ 9ADF 20 18        	jr nz,8F
 224+ 9AE1
 225+ 9AE1              ; ---------- ---------- ----------
 226+ 9AE1
 227+ 9AE1              3
 228+ 9AE1 CD 14 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE4              ;	call Reinicio
 230+ 9AE4
 231+ 9AE4              ; ---------- ---------- ----------
 232+ 9AE4              ;
 233+ 9AE4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE4
 235+ 9AE4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE7 CD 00 9B     	call DESPLZ_DER
 238+ 9AEA C1           	pop bc
 239+ 9AEB 10 F9        	djnz 5B
 240+ 9AED 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF1 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9AF4 CD DE 94     	call Genera_coordenadas
 244+ 9AF7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AF9
 246+ 9AF9              ; ---------- ---------- ----------
 247+ 9AF9
 248+ 9AF9 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9AFC CD 00 9B     	call DESPLZ_DER
 250+ 9AFF C9           2 ret
 251+ 9B00
 252+ 9B00              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B00              ;
 254+ 9B00              ;	22/9/22
 255+ 9B00              ;
 256+ 9B00
 257+ 9B00 CD 0F 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B03 CD 5B 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B06 CD 84 9B         call Ciclo_completo
 260+ 9B09 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B0C CB FE        	set 7,(hl)
 262+ 9B0E C9           	ret
 263+ 9B0F
 264+ 9B0F              ; ******************************************************************************************************************************************************************************************
 265+ 9B0F              ;	15/02/23
 266+ 9B0F              ;
 267+ 9B0F
 268+ 9B0F 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B12 47           	ld b,a
 270+ 9B13 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B16 23           1 inc hl
 272+ 9B17 23           	inc hl
 273+ 9B18 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B1A 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B1D CD 13 91     	call Extrae_address
 276+ 9B20 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B23
 278+ 9B23              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B23
 280+ 9B23              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B23              ; Cuántos movimientos hemos hecho ??
 282+ 9B23              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B23
 284+ 9B23 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B26 EB           	ex de,hl
 286+ 9B27 A7           	and a
 287+ 9B28 ED 52        	sbc hl,de
 288+ 9B2A CB 3D        	srl l
 289+ 9B2C 3E 08        6 ld a,8
 290+ 9B2E 95           	sub l
 291+ 9B2F 30 1E        	jr nc,3F
 292+ 9B31
 293+ 9B31              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B31              ; B="0".
 295+ 9B31
 296+ 9B31 04           4 inc b
 297+ 9B32 3C           	inc a
 298+ 9B33 20 FC        	jr nz,4B
 299+ 9B35 78           	ld a,b
 300+ 9B36 08           	ex af,af
 301+ 9B37 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B3A 23           5 inc hl
 303+ 9B3B 23           	inc hl
 304+ 9B3C 10 FC        	djnz 5B
 305+ 9B3E 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B41 CD 13 91     	call Extrae_address
 307+ 9B44 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B47
 309+ 9B47              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B47              ; _(Posicion_actual).
 311+ 9B47
 312+ 9B47 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B4A 34           	inc (hl)
 314+ 9B4B 08               ex af,af
 315+ 9B4C 6F           	ld l,a
 316+ 9B4D 18 DD        	jr 6B
 317+ 9B4F
 318+ 9B4F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B4F
 320+ 9B4F 47           3 ld b,a
 321+ 9B50 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B53 23           2 inc hl
 323+ 9B54 23           	inc hl
 324+ 9B55 10 FC        	djnz 2B
 325+ 9B57 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B5A C9           8 ret
 327+ 9B5B
 328+ 9B5B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B5B              ;
 330+ 9B5B              ;	24/7/22
 331+ 9B5B              ;
 332+ 9B5B              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B5B              ;
 334+ 9B5B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B5B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B5B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B5B
 338+ 9B5B 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B5E A7           	and a
 340+ 9B5F 20 1F        	jr nz,1F
 341+ 9B61 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B63 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B66
 344+ 9B66 21 FD 8B     	ld hl,Columns
 345+ 9B69 34           	inc (hl)
 346+ 9B6A 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B6D E6 01        	and 1
 348+ 9B6F 28 0F        	jr z,1F
 349+ 9B71 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B74 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B75 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B78 CD DE 94     	call Genera_coordenadas
 353+ 9B7B CD E0 9C     	call Inc_CTRL_DESPLZ
 354+ 9B7E 18 03        	jr 2F
 355+ 9B80 CD E0 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B83 C9           2 ret
 357+ 9B84
 358+ 9B84              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B84              ;
 360+ 9B84              ;	24/7/22
 361+ 9B84              ;
 362+ 9B84              ;	Ciclo_completo.
 363+ 9B84              ;
 364+ 9B84              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B84              ;
 366+ 9B84              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B84              ; 	Decrementamos (Columns).
 368+ 9B84              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B84              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B84
 371+ 9B84
 372+ 9B84 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B87 FE FF        	cp $ff
 374+ 9B89 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B8B E6 F0        	and $f0
 376+ 9B8D 20 28        	jr nz,3F
 377+ 9B8F
 378+ 9B8F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B8F
 380+ 9B8F 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B92 47           	ld b,a
 382+ 9B93 3E F8        	ld a,$f8
 383+ 9B95 80           	add b
 384+ 9B96 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9B99 18 1C        	jr 3F
 386+ 9B9B 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B9E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B9F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA0 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9BA3 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA6 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BA8 20 0A        	jr nz,2F
 393+ 9BAA 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BAD 23           	inc hl
 395+ 9BAE 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9BB1 CD DE 94     	call Genera_coordenadas
 397+ 9BB4
 398+ 9BB4              ; Inicia el puntero de Sprite.
 399+ 9BB4
 400+ 9BB4 CD 28 91     2 call Inicia_puntero_objeto_der
 401+ 9BB7 C9           3 ret
 402+ 9BB8
 403+ 9BB8              ; ******************************************************************************************************************************************************************************************
 404+ 9BB8              ;
 405+ 9BB8              ;	15/02/23
 406+ 9BB8              ;
 407+ 9BB8              ;	Mov_left.
 408+ 9BB8              ;
 409+ 9BB8              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BB8              ;
 411+ 9BB8              Mov_left
 412+ 9BB8
 413+ 9BB8 21 FB 8B     	ld hl,Ctrl_0
 414+ 9BBB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BBD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BBD              ; 																	; _ en el caso de que no lo haya.
 417+ 9BBD 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BC0 CB 77        	bit 6,a
 419+ 9BC2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC4
 421+ 9BC4 CD DA 9C     	call Stop_Amadeus_left
 422+ 9BC7 C8           	ret z
 423+ 9BC8 20 4A        	jr nz,8F
 424+ 9BCA
 425+ 9BCA 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BCD A7           	and a
 427+ 9BCE 20 44        	jr nz,8F
 428+ 9BD0
 429+ 9BD0 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD6
 433+ 9BD6              ; ---------- ---------- ----------
 434+ 9BD6
 435+ 9BD6 3A 13 8C     	ld a,(Vel_left)
 436+ 9BD9 FE 02        	cp 2
 437+ 9BDB 28 0F        	jr z,1F
 438+ 9BDD 38 04        	jr c,6F
 439+ 9BDF FE 04        	cp 4
 440+ 9BE1 28 12        	jr z,7F
 441+ 9BE3
 442+ 9BE3              ; ---------- ---------- ----------
 443+ 9BE3
 444+ 9BE3 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BE6 FE F8        	cp $f8
 446+ 9BE8 20 2A        	jr nz,8F
 447+ 9BEA 18 10        	jr 4F
 448+ 9BEC 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BEF FE F9        	cp $f9
 450+ 9BF1 20 21        	jr nz,8F
 451+ 9BF3 18 07        	jr 4F
 452+ 9BF5 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BF8 FE FB        	cp $fb
 454+ 9BFA 20 18        	jr nz,8F
 455+ 9BFC
 456+ 9BFC              ; ---------- ---------- ----------
 457+ 9BFC
 458+ 9BFC              4
 459+ 9BFC CD 02 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BFF              ;	call Reinicio
 461+ 9BFF
 462+ 9BFF              ; ---------- ---------- ----------
 463+ 9BFF
 464+ 9BFF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C01 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C02
 467+ 9C02              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C02              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C02
 470+ 9C02 CD 1B 9C     	call DESPLZ_IZQ
 471+ 9C05 C1           	pop bc
 472+ 9C06 10 F9        	djnz 5B
 473+ 9C08 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C0B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C0C 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9C0F CD DE 94     	call Genera_coordenadas
 477+ 9C12 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C14
 479+ 9C14              ; ---------- ---------- ----------
 480+ 9C14
 481+ 9C14              ; Movemos, no hay recolocación.
 482+ 9C14
 483+ 9C14 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9C17 CD 1B 9C     	call DESPLZ_IZQ
 485+ 9C1A C9           2 ret
 486+ 9C1B
 487+ 9C1B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C1B              ;
 489+ 9C1B              ;	22/9/22
 490+ 9C1B
 491+ 9C1B              DESPLZ_IZQ
 492+ 9C1B
 493+ 9C1B CD 2A 9C     	call Desplaza_izquierda
 494+ 9C1E CD 76 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C21 CD 9E 9C     	call Ciclo_completo_2
 496+ 9C24 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C27 CB BE        	res 7,(hl)
 498+ 9C29 C9           	ret
 499+ 9C2A
 500+ 9C2A              Desplaza_izquierda
 501+ 9C2A
 502+ 9C2A 3A 13 8C     	ld a,(Vel_left)
 503+ 9C2D 47           	ld b,a
 504+ 9C2E 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C31 23           1 inc hl
 506+ 9C32 23           	inc hl
 507+ 9C33 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C35 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C38 CD 13 91     	call Extrae_address
 510+ 9C3B 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C3E
 512+ 9C3E              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C3E
 514+ 9C3E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C3E              ; Cuántos movimientos hemos hecho ??
 516+ 9C3E              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C3E
 518+ 9C3E 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C41 EB           	ex de,hl
 520+ 9C42 A7           	and a
 521+ 9C43 ED 52        	sbc hl,de
 522+ 9C45 CB 3D        	srl l
 523+ 9C47 3E 08        6 ld a,8
 524+ 9C49 95           	sub l
 525+ 9C4A 30 1E        	jr nc,3F
 526+ 9C4C
 527+ 9C4C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C4C              ; B="0".
 529+ 9C4C
 530+ 9C4C 04           4 inc b
 531+ 9C4D 3C           	inc a
 532+ 9C4E 20 FC        	jr nz,4B
 533+ 9C50 78           	ld a,b
 534+ 9C51 08           	ex af,af
 535+ 9C52 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C55 23           5 inc hl
 537+ 9C56 23           	inc hl
 538+ 9C57 10 FC        	djnz 5B
 539+ 9C59 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C5C CD 13 91     	call Extrae_address
 541+ 9C5F 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C62
 543+ 9C62              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C62              ; _(Posicion_actual).
 545+ 9C62
 546+ 9C62 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C65 35           	dec (hl)
 548+ 9C66 08           	ex af,af
 549+ 9C67 6F           	ld l,a
 550+ 9C68 18 DD        	jr 6B
 551+ 9C6A
 552+ 9C6A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C6A
 554+ 9C6A 47           3 ld b,a
 555+ 9C6B 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C6E 23           2 inc hl
 557+ 9C6F 23           	inc hl
 558+ 9C70 10 FC        	djnz 2B
 559+ 9C72 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C75 C9           8 ret
 561+ 9C76
 562+ 9C76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C76              ;
 564+ 9C76              ;	modifica_parametros_1er_DESPLZ
 565+ 9C76              ;
 566+ 9C76              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C76              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C76              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C76
 570+ 9C76 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C79 A7           	and a
 572+ 9C7A 20 1E        	jr nz,1F
 573+ 9C7C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C7D 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C80 21 FD 8B     	ld hl,Columns
 576+ 9C83 34           	inc (hl)
 577+ 9C84 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9C87 E6 01        	and 1
 579+ 9C89 20 0F        	jr nz,1F
 580+ 9C8B 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C8E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C8F 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9C92 CD DE 94     	call Genera_coordenadas
 584+ 9C95 CD F1 9C     	call Dec_CTRL_DESPLZ
 585+ 9C98 18 03        	jr 2F
 586+ 9C9A CD F1 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C9D C9           2 ret
 588+ 9C9E
 589+ 9C9E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C9E
 591+ 9C9E 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA1 FE F7        	cp $f7
 593+ 9CA3 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA5 30 2C        	jr nc,3F
 595+ 9CA7
 596+ 9CA7              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA7
 598+ 9CA7 06 00        	ld b,0
 599+ 9CA9 04           4 inc b
 600+ 9CAA 3C           	inc a
 601+ 9CAB FE F7        	cp $f7
 602+ 9CAD 20 FA        	jr nz,4B
 603+ 9CAF 3E FF        	ld a,$ff
 604+ 9CB1 90           	sub b
 605+ 9CB2 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9CB5 18 1C        	jr 3F
 607+ 9CB7
 608+ 9CB7              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB7
 610+ 9CB7 21 FD 8B     1 ld hl,Columns
 611+ 9CBA 35           	dec (hl)
 612+ 9CBB AF           	xor a
 613+ 9CBC 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CBF 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CC2 E6 01        	and 1
 616+ 9CC4 28 0A        	jr z,2F
 617+ 9CC6 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CC9 2B           	dec hl
 619+ 9CCA 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CCD CD DE 94     	call Genera_coordenadas
 621+ 9CD0
 622+ 9CD0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD0
 624+ 9CD0 CD 3B 91     2 call Inicia_puntero_objeto_izq
 625+ 9CD3 C9           3 ret
 626+ 9CD4
 627+ 9CD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD4              ;
 629+ 9CD4              ;	19/10/22
 630+ 9CD4              ;
 631+ 9CD4              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD4              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD4
 634+ 9CD4 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CD9 C9           	ret
 637+ 9CDA
 638+ 9CDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CDA              ;
 640+ 9CDA              ;	19/10/22
 641+ 9CDA              ;
 642+ 9CDA              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CDA              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CDA
 645+ 9CDA 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CDD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CDF C9           	ret
 648+ 9CE0
 649+ 9CE0              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE0              ;
 651+ 9CE0              ;	24/7/22
 652+ 9CE0              ;
 653+ 9CE0              ;	Inc_CTRL_DESPLZ
 654+ 9CE0              ;
 655+ 9CE0              ;
 656+ 9CE0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE0
 658+ 9CE0 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE3 3A 14 8C     	ld a,(Vel_right)
 660+ 9CE6 A7           	and a
 661+ 9CE7 28 06        	jr z,1F
 662+ 9CE9 47           	ld b,a
 663+ 9CEA 34           3 inc (hl)
 664+ 9CEB 10 FD        	djnz 3B
 665+ 9CED 18 01        	jr 2F
 666+ 9CEF 34           1 inc (hl)
 667+ 9CF0 C9           2 ret
 668+ 9CF1
 669+ 9CF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF1              ;
 671+ 9CF1              ;	5/2/23
 672+ 9CF1              ;
 673+ 9CF1              ;	Dec_CTRL_DESPLZ
 674+ 9CF1              ;
 675+ 9CF1              ;
 676+ 9CF1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF1
 678+ 9CF1 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF4 3A 13 8C     	ld a,(Vel_left)
 680+ 9CF7 A7           	and a
 681+ 9CF8 28 06        	jr z,1F
 682+ 9CFA 47           	ld b,a
 683+ 9CFB 35           3 dec (hl)
 684+ 9CFC 10 FD        	djnz 3B
 685+ 9CFE 18 01        	jr 2F
 686+ 9D00 35           1 dec (hl)
 687+ 9D01 C9           2 ret
 688+ 9D02
 689+ 9D02              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D02
 691+ 9D02 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D05 01 1F 00     	ld bc,31
 693+ 9D08 A7           	and a
 694+ 9D09 ED 4A        	adc hl,bc
 695+ 9D0B 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9D0E 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D11 CB C6        	set 0,(hl)
 698+ 9D13 C9           	ret
 699+ 9D14
 700+ 9D14              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D14
 702+ 9D14 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D17 01 1F 00     	ld bc,31
 704+ 9D1A A7           	and a
 705+ 9D1B ED 42        	sbc hl,bc
 706+ 9D1D 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D20 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D23 CB CE        	set 1,(hl)
 709+ 9D25 C9           	ret
 710+ 9D26
 711+ 9D26              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D26
 713+ 9D26 24           Reaparece_abajo inc h
 714+ 9D27 01 E0 17     	ld bc,$17e0
 715+ 9D2A A7           	and a
 716+ 9D2B ED 4A        	adc hl,bc
 717+ 9D2D 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D30 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D33 CB D6        	set 2,(hl)
 720+ 9D35 C9           	ret
 721+ 9D36
 722+ 9D36              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D36
 724+ 9D36 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D39 A7           	and a
 726+ 9D3A ED 42        	sbc hl,bc
 727+ 9D3C 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D3F 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D42 CB DE        	set 3,(hl)
 730+ 9D44 C9           	ret
 731+ 9D45
 732+ 9D45              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D45              ;
 734+ 9D45              ;	15/07/23
 735+ 9D45
 736+ 9D45              Reinicio
 737+ 9D45
 738+ 9D45              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D45
 740+ 9D45 AF           	xor a
 741+ 9D46 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D49 CD 67 9D     	call Limpia_contenido_hl
 743+ 9D4C
 744+ 9D4C 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D4F CD 67 9D     	call Limpia_contenido_hl
 746+ 9D52
 747+ 9D52 CD 48 93     	call Situa_Puntero_indice_mov
 748+ 9D55 CD 66 9E     	call Inicia_Puntero_mov
 749+ 9D58
 750+ 9D58 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D5B 06 05        	ld b,5
 752+ 9D5D 77           1 ld (hl),a
 753+ 9D5E 23           	inc hl
 754+ 9D5F 10 FC        	djnz 1B
 755+ 9D61
 756+ 9D61 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D64 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D66
 759+ 9D66 C9           	ret
 760+ 9D67
 761+ 9D67 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D68 23           	inc hl
 763+ 9D69 77           	ld (hl),a
 764+ 9D6A C9           	ret
 765+ 9D6B
 766+ 9D6B              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D6B              ;
 768+ 9D6B              ;	18/6/24
 769+ 9D6B              ;
 770+ 9D6B
 771+ 9D6B              Amadeus_a_izquierda
 772+ 9D6B
 773+ 9D6B              ;	Actualiza contador de movimientos.
 774+ 9D6B
 775+ 9D6B 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D6E 35           	dec (hl)
 777+ 9D6F 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D71
 779+ 9D71 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D74 2B           	dec hl
 781+ 9D75 2B           	dec hl
 782+ 9D76 2B           	dec hl
 783+ 9D77 2B           	dec hl
 784+ 9D78 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D7B
 786+ 9D7B 21 65 8C     	ld hl,Ctrl_3
 787+ 9D7E CB EE        	set 5,(hl)
 788+ 9D80
 789+ 9D80 C9           	ret
 790+ 9D81
 791+ 9D81 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D82 C9           	ret
 793+ 9D83
 794+ 9D83
 795+ 9D83              Amadeus_a_derecha
 796+ 9D83
 797+ 9D83              ;	Actualiza contador de movimientos.
 798+ 9D83
 799+ 9D83 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9D86 34           	inc (hl)
 801+ 9D87 3E 7A        	ld a,$7a
 802+ 9D89 BE           	cp (hl)
 803+ 9D8A 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D8C
 805+ 9D8C 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D8F 23           	inc hl
 807+ 9D90 23           	inc hl
 808+ 9D91 23           	inc hl
 809+ 9D92 23           	inc hl
 810+ 9D93 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D96
 812+ 9D96 21 65 8C     	ld hl,Ctrl_3
 813+ 9D99 CB EE        	set 5,(hl)
 814+ 9D9B C9           	ret
 815+ 9D9C
 816+ 9D9C 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D9D C9           	ret
# file closed: Direcciones.asm
2105  9D9E              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D9E              ; ----- ----- ----- ----- -----
   2+ 9D9E              ;
   3+ 9D9E              ;   28/12/23
   4+ 9D9E
   5+ 9D9E              Movimiento
   6+ 9D9E
   7+ 9D9E              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D9E
   9+ 9D9E 3A FA 8B         ld a,(Ctrl_2)
  10+ 9DA1 CB 57            bit 2,a
  11+ 9DA3 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA5
  13+ 9DA5 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9DA8 7E               ld a,(hl)
  15+ 9DA9
  16+ 9DA9              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DA9
  18+ 9DA9              Inicia_desplazamiento.
  19+ 9DA9
  20+ 9DA9              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DA9
  22+ 9DA9 CD 9C 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DAC
  24+ 9DAC              ; Iniciamos (Repetimos_mov).
  25+ 9DAC
  26+ 9DAC 7E               ld a,(hl)
  27+ 9DAD E6 0F            and $0f
  28+ 9DAF 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9DB2 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB5
  31+ 9DB5              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB5
  33+ 9DB5 23               inc hl
  34+ 9DB6 7E               ld a,(hl)
  35+ 9DB7 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9DBA 2B               dec hl
  37+ 9DBB
  38+ 9DBB 21 FA 8B         ld hl,Ctrl_2
  39+ 9DBE CB D6            set 2,(hl)
  40+ 9DC0
  41+ 9DC0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC0
  44+ 9DC0              Desplazamiento_iniciado
  45+ 9DC0
  46+ 9DC0 CD 70 9E         call Aplica_desplazamiento
  47+ 9DC3
  48+ 9DC3              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC3
  50+ 9DC3 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DC6 CB 4F            bit 1,a
  52+ 9DC8 C0               ret nz
  53+ 9DC9
  54+ 9DC9 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DCC 35               dec (hl)
  56+ 9DCD C0               ret nz
  57+ 9DCE
  58+ 9DCE              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DCE              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DCE              ; Analiza (Cola_de_desplazamiento).
  61+ 9DCE
  62+ 9DCE 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD1 A7               and a
  64+ 9DD2 CC C5 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD5 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD7
  67+ 9DD7 FE FF            cp $ff
  68+ 9DD9 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DDB
  70+ 9DDB FE FE            cp $fe
  71+ 9DDD CC 4A 9E         call z,Fijamos_bucle
  72+ 9DE0 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE2
  74+ 9DE2 FE FD            cp $fd
  75+ 9DE4 20 11            jr nz,1F
  76+ 9DE6
  77+ 9DE6              ; ---
  78+ 9DE6              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE6
  80+ 9DE6 3A FA 8B         ld a,(Ctrl_2)
  81+ 9DE9 CB 5F            bit 3,a
  82+ 9DEB 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DED
  84+ 9DED              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DED
  86+ 9DED 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF0 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF2
  89+ 9DF2 CD 5B 9E         call Inicia_Repetimos_movimiento
  90+ 9DF5 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF7              ; ---
  92+ 9DF7
  93+ 9DF7 FE 01        1 cp 1
  94+ 9DF9 CA 34 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DFC
  96+ 9DFC 3D               dec a
  97+ 9DFD 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9E00
  99+ 9E00 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E03 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E06              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E06 C9               ret
 103+ 9E07
 104+ 9E07              Reinicia_el_movimiento
 105+ 9E07
 106+ 9E07 3A FA 8B         ld a,(Ctrl_2)
 107+ 9E0A CB 5F            bit 3,a
 108+ 9E0C 28 1B            jr z,2F
 109+ 9E0E
 110+ 9E0E              ; (Cola_de_desplazamiento)="254".
 111+ 9E0E
 112+ 9E0E 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E11 35               dec (hl)
 114+ 9E12 20 15            jr nz,2F
 115+ 9E14
 116+ 9E14              ; Fin de las repeticiones del último movimiento.
 117+ 9E14
 118+ 9E14 21 FA 8B         ld hl,Ctrl_2
 119+ 9E17 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E19
 121+ 9E19 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9E1C 23               inc hl
 123+ 9E1D 23               inc hl
 124+ 9E1E 23               inc hl
 125+ 9E1F 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E22              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E22 7E               ld a,(hl)
 128+ 9E23 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E26
 130+ 9E26 C3 CE 9D         jp Cola
 131+ 9E29
 132+ 9E29 CD 66 9E     2 call Inicia_Puntero_mov
 133+ 9E2C
 134+ 9E2C 21 FA 8B         ld hl,Ctrl_2
 135+ 9E2F CB 96            res 2,(hl)
 136+ 9E31
 137+ 9E31 C3 9E 9D         jp Movimiento
 138+ 9E34
 139+ 9E34              Siguiente_desplazamiento
 140+ 9E34
 141+ 9E34              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E34              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E34
 144+ 9E34 21 FA 8B         ld hl,Ctrl_2
 145+ 9E37 CB 96            res 2,(hl)
 146+ 9E39
 147+ 9E39 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E3C 23               inc hl
 149+ 9E3D 23               inc hl
 150+ 9E3E 22 21 8C         ld (Puntero_mov),hl
 151+ 9E41
 152+ 9E41 7E               ld a,(hl)
 153+ 9E42 A7               and a
 154+ 9E43 CC C5 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E46 CA 07 9E         jp z,Reinicia_el_movimiento
 156+ 9E49
 157+ 9E49 C9               ret
 158+ 9E4A
 159+ 9E4A              ; Subrutinas -----------------------------------------
 160+ 9E4A              ; ---------- --------- --------- ---------- ----------
 161+ 9E4A              ;
 162+ 9E4A              ;   24/07/23
 163+ 9E4A              ;
 164+ 9E4A              ;   Fijamos_bucle
 165+ 9E4A              ;
 166+ 9E4A              ;
 167+ 9E4A
 168+ 9E4A              Fijamos_bucle
 169+ 9E4A
 170+ 9E4A 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E4D 3C               inc a
 172+ 9E4E 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E51
 174+ 9E51 CD C5 9E         call Incrementa_Puntero_indice_mov
 175+ 9E54 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E57 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E5A C9               ret
 178+ 9E5B
 179+ 9E5B              ; ---------- --------- --------- ---------- ----------
 180+ 9E5B              ;
 181+ 9E5B              ;   07/7/23
 182+ 9E5B              ;
 183+ 9E5B              ;   Inicia_Repetimos_movimiento
 184+ 9E5B              ;
 185+ 9E5B              ;
 186+ 9E5B
 187+ 9E5B              Inicia_Repetimos_movimiento
 188+ 9E5B
 189+ 9E5B              ; Iniciamos (Repetimos_movimiento).
 190+ 9E5B
 191+ 9E5B DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E5F DD 7E 02         ld a,(ix+2)
 193+ 9E62 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E65
 195+ 9E65 C9               ret
 196+ 9E66
 197+ 9E66              ; ---------- --------- --------- ---------- ----------
 198+ 9E66              ;
 199+ 9E66              ;   26/6/23
 200+ 9E66              ;
 201+ 9E66              ;   Inicia_Puntero_mov
 202+ 9E66              ;
 203+ 9E66              ;
 204+ 9E66
 205+ 9E66 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E69 CD 13 91         call Extrae_address
 207+ 9E6C 22 21 8C         ld (Puntero_mov),hl
 208+ 9E6F C9               ret
 209+ 9E70
 210+ 9E70              ; ---------- --------- --------- ---------- ----------
 211+ 9E70              ;
 212+ 9E70              ;   27/06/23
 213+ 9E70              ;
 214+ 9E70              ;   Aplica_movimiento.
 215+ 9E70
 216+ 9E70              Aplica_desplazamiento
 217+ 9E70
 218+ 9E70              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E70
 220+ 9E70 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E73
 222+ 9E73 7E               ld a,(hl)
 223+ 9E74 E6 F0            and $f0
 224+ 9E76 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E77
 226+ 9E77 CB 7E            bit 7,(hl)
 227+ 9E79 28 03            jr z,1F
 228+ 9E7B CD 52 9A         call Mov_up
 229+ 9E7E 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9E81 CB 76            bit 6,(hl)
 231+ 9E83 28 03            jr z,2F
 232+ 9E85 CD 19 9A         call Mov_down
 233+ 9E88
 234+ 9E88              ; Se ha aplicado reinicio ???
 235+ 9E88              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E88
 237+ 9E88              ;    ld a,(Ctrl_3)
 238+ 9E88              ;    bit 1,a
 239+ 9E88              ;    ret nz
 240+ 9E88
 241+ 9E88 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9E8B CB 6E            bit 5,(hl)
 243+ 9E8D 28 03            jr z,3F
 244+ 9E8F CD B8 9B         call Mov_left
 245+ 9E92 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9E95 CB 66            bit 4,(hl)
 247+ 9E97 C8               ret z
 248+ 9E98 CD 95 9A         call Mov_right
 249+ 9E9B C9               ret
 250+ 9E9C
 251+ 9E9C              ; ---------- --------- --------- ---------- ----------
 252+ 9E9C              ;
 253+ 9E9C              ;   26/06/23
 254+ 9E9C              ;
 255+ 9E9C              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E9C
 257+ 9E9C              Ajusta_velocidad_desplazamiento
 258+ 9E9C
 259+ 9E9C              ; 1er byte de la cadena de movimiento.
 260+ 9E9C              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E9C
 262+ 9E9C CD BA 9E         call Extrae_nibble_alto
 263+ 9E9F
 264+ 9E9F 32 15 8C         ld (Vel_up),a
 265+ 9EA2 79               ld a,c
 266+ 9EA3 E6 0F            and $0f
 267+ 9EA5 32 16 8C         ld (Vel_down),a
 268+ 9EA8
 269+ 9EA8              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EA8              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EA8
 272+ 9EA8 23               inc hl
 273+ 9EA9 CD BA 9E         call Extrae_nibble_alto
 274+ 9EAC
 275+ 9EAC 32 13 8C         ld (Vel_left),a
 276+ 9EAF 79               ld a,c
 277+ 9EB0 E6 0F            and $0f
 278+ 9EB2 32 14 8C         ld (Vel_right),a
 279+ 9EB5
 280+ 9EB5              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB5
 282+ 9EB5 23               inc hl
 283+ 9EB6 22 21 8C         ld (Puntero_mov),hl
 284+ 9EB9 C9               ret
 285+ 9EBA
 286+ 9EBA 06 04        Extrae_nibble_alto ld b,4
 287+ 9EBC 7E               ld a,(hl)
 288+ 9EBD 4F               ld c,a
 289+ 9EBE E6 F0            and $f0
 290+ 9EC0 CB 3F        1 srl a
 291+ 9EC2 10 FC            djnz 1B
 292+ 9EC4 C9               ret
 293+ 9EC5
 294+ 9EC5              ; ---------- --------- --------- ---------- ----------
 295+ 9EC5              ;
 296+ 9EC5              ;   5/7/23
 297+ 9EC5              ;
 298+ 9EC5              ;   Incrementa_Puntero_indice_mov
 299+ 9EC5
 300+ 9EC5              Incrementa_Puntero_indice_mov
 301+ 9EC5
 302+ 9EC5 21 25 8C         ld hl,Incrementa_puntero
 303+ 9EC8 34               inc (hl)
 304+ 9EC9
 305+ 9EC9 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9ECC 01 02 00         ld bc,2
 307+ 9ECF A7               and a
 308+ 9ED0 09               add hl,bc
 309+ 9ED1 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9ED4
 311+ 9ED4 7E               ld a,(hl)
 312+ 9ED5 A7               and a
 313+ 9ED6
 314+ 9ED6              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED6
 316+ 9ED6              ;    jr z,$
 317+ 9ED6
 318+ 9ED6              ;! Reinicia el Patrón de movimiento.
 319+ 9ED6
 320+ 9ED6 CC DB 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ED9
 322+ 9ED9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EDA
 324+ 9EDA C9               ret
 325+ 9EDB
 326+ 9EDB              ; ---------- --------- --------- ---------- ----------
 327+ 9EDB              ;
 328+ 9EDB              ;   15/01/24
 329+ 9EDB              ;
 330+ 9EDB              ;   Inicializa_Puntero_indice_mov
 331+ 9EDB
 332+ 9EDB              Inicializa_Puntero_indice_mov_2
 333+ 9EDB
 334+ 9EDB              ; Existe etiqueta de bucle principal???
 335+ 9EDB
 336+ 9EDB 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EDE 24               inc h
 338+ 9EDF 25               dec h
 339+ 9EE0 28 05            jr z,2F
 340+ 9EE2
 341+ 9EE2 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9EE5 18 14            jr 3F
 343+ 9EE7
 344+ 9EE7              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE7
 346+ 9EE7 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9EEA 47               ld b,a
 348+ 9EEB
 349+ 9EEB 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9EEE 2B           1 dec hl
 351+ 9EEF 2B               dec hl
 352+ 9EF0 10 FC            djnz 1B
 353+ 9EF2 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9EF5
 355+ 9EF5 AF               xor a
 356+ 9EF6 32 25 8C         ld (Incrementa_puntero),a
 357+ 9EF9 18 06            jr 4F
 358+ 9EFB
 359+ 9EFB 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9EFE 32 25 8C         ld (Incrementa_puntero),a
 361+ 9F01 C9           4 ret
 362+ 9F02
 363+ 9F02              ; ----------------------------------------------------------------------
 364+ 9F02              ;
 365+ 9F02              ;   24/11/24
 366+ 9F02              ;
 367+ 9F02              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F02
 369+ 9F02 DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F05 CD 57 94         call Calcula_salto_en_BC
 371+ 9F08 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F0B A7               and a
 373+ 9F0C ED 4A            adc hl,bc
 374+ 9F0E C9               ret
 375+ 9F0F
 376+ 9F0F              ; ----------------------------------------------------------------------
 377+ 9F0F              ;
 378+ 9F0F              ;   24/11/24
 379+ 9F0F              ;
 380+ 9F0F              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F0F              ;
 382+ 9F0F              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F0F
 384+ 9F0F 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F10 23               inc hl
 386+ 9F11 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F12 DD 71 09         ld (ix+9),c
 388+ 9F15 DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F18 C9               ret
 390+ 9F19
# file closed: Movimiento.asm
2106  9F19              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F19              ; --------------------------------------------------------------------------------------
   2+ 9F19              ;
   3+ 9F19              ;   25/10/24
   4+ 9F19              ;
   5+ 9F19
   6+ 9F19              Pinta_disparos_Entidades
   7+ 9F19
   8+ 9F19 ED 73 3D 8C      ld (Stack),sp
   9+ 9F1D ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F21
  11+ 9F21 3E 02            ld a,2
  12+ 9F23 08               ex af,af
  13+ 9F24
  14+ 9F24 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F26              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F26              ;                                     _ No encontraría "0".
  17+ 9F26 FD E1        4 pop iy
  18+ 9F28 D1               pop de                          ; 1er .db IYL
  19+ 9F29              ;                                   ; 2º  .db IYH
  20+ 9F29              ;                                   ; 3er .db E.
  21+ 9F29              ;   Album vacío ???
  22+ 9F29
  23+ 9F29 FD 7D            ld a,iyl
  24+ 9F2B FD 84            add iyh
  25+ 9F2D 83               add e
  26+ 9F2E 28 1F            jr z,1F
  27+ 9F30
  28+ 9F30              ;   Imprime album, (contiene datos).
  29+ 9F30
  30+ 9F30 3B               dec sp
  31+ 9F31
  32+ 9F31 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F32
  34+ 9F32              ; Imprime el 1er scanline del disparo.
  35+ 9F32
  36+ 9F32 FD 7D            ld a,iyl
  37+ 9F34 AE               xor (hl)
  38+ 9F35 77               ld (hl),a
  39+ 9F36
  40+ 9F36 2C               inc l
  41+ 9F37
  42+ 9F37 FD 7C            ld a,iyh
  43+ 9F39 AE               xor (hl)
  44+ 9F3A 77               ld (hl),a
  45+ 9F3B
  46+ 9F3B 2C               inc l
  47+ 9F3C
  48+ 9F3C 7B               ld a,e
  49+ 9F3D AE               xor (hl)
  50+ 9F3E 77               ld (hl),a
  51+ 9F3F
  52+ 9F3F              ; Imprime el 2º scanline del disparo.
  53+ 9F3F
  54+ 9F3F E1               pop hl
  55+ 9F40
  56+ 9F40 FD 7D            ld a,iyl
  57+ 9F42 AE               xor (hl)
  58+ 9F43 77               ld (hl),a
  59+ 9F44
  60+ 9F44 2C               inc l
  61+ 9F45
  62+ 9F45 FD 7C            ld a,iyh
  63+ 9F47 AE               xor (hl)
  64+ 9F48 77               ld (hl),a
  65+ 9F49
  66+ 9F49 2C               inc l
  67+ 9F4A
  68+ 9F4A 7B               ld a,e
  69+ 9F4B AE               xor (hl)
  70+ 9F4C 77               ld (hl),a
  71+ 9F4D
  72+ 9F4D 10 D7            djnz 4B
  73+ 9F4F
  74+ 9F4F 08           1 ex af,af
  75+ 9F50 3D               dec a
  76+ 9F51 20 05            jr nz,2F
  77+ 9F53
  78+ 9F53 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F57 C9               ret
  80+ 9F58
  81+ 9F58 ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F5C 08               ex af,af
  83+ 9F5D 18 C5            jr 3B
  84+ 9F5F
  85+ 9F5F              ; --------------------------------------------------------------------------------------
  86+ 9F5F              ;
  87+ 9F5F              ;   30/10/24
  88+ 9F5F              ;
  89+ 9F5F
  90+ 9F5F              Motor_de_disparos_entidades
  91+ 9F5F
  92+ 9F5F 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F62 FE 07            cp 7
  94+ 9F64 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F65
  96+ 9F65 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F67 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F6A
  99+ 9F6A CD 13 91     1 call Extrae_address
 100+ 9F6D 1C               inc e
 101+ 9F6E 1C               inc e
 102+ 9F6F ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F73
 104+ 9F73               ; Caja vacía ???
 105+ 9F73
 106+ 9F73 2D               dec l
 107+ 9F74 7E               ld a,(hl)
 108+ 9F75 A7               and a
 109+ 9F76 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F78
 111+ 9F78              ; --- Trabajamos con caja:
 112+ 9F78
 113+ 9F78 2C               inc l
 114+ 9F79
 115+ 9F79              ; --- Existe posibilidad de impacto ???
 116+ 9F79
 117+ 9F79 CB 46            bit 0,(hl)
 118+ 9F7B C4 BB 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F7E 20 37            jr nz,3F
 120+ 9F80
 121+ 9F80 CD 42 A0         call Rota_disparo_si_procede
 122+ 9F83
 123+ 9F83              ; ------------------------------------------------------------
 124+ 9F83
 125+ 9F83 2D               dec l
 126+ 9F84 2D               dec l
 127+ 9F85
 128+ 9F85 CD 13 91         call Extrae_address
 129+ 9F88
 130+ 9F88              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F88              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F88
 133+ 9F88 3A 67 8C         ld a,(Ctrl_5)
 134+ 9F8B CB 57            bit 2,a
 135+ 9F8D 28 09            jr z,4F
 136+ 9F8F
 137+ 9F8F CB 97            res 2,a
 138+ 9F91 32 67 8C         ld (Ctrl_5),a
 139+ 9F94 2C               inc l
 140+ 9F95 2C               inc l
 141+ 9F96 18 0C            jr 5F
 142+ 9F98
 143+ 9F98 CB 5F        4 bit 3,a
 144+ 9F9A 28 08            jr z,5F
 145+ 9F9C
 146+ 9F9C CB 9F            res 3,a
 147+ 9F9E 32 67 8C         ld (Ctrl_5),a
 148+ 9FA1 2D               dec l
 149+ 9FA2 2D               dec l
 150+ 9FA3 2D               dec l
 151+ 9FA4
 152+ 9FA4              ; ---------------------------------------------------------------------
 153+ 9FA4
 154+ 9FA4              ;! Velocidad del disparo de entidades.
 155+ 9FA4
 156+ 9FA4 CD D3 99     5 call NextScan
 157+ 9FA7 CD D3 99         call NextScan
 158+ 9FAA
 159+ 9FAA              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FAA
 161+ 9FAA CD 1F A0         call Fin_de_disparo_de_entidad
 162+ 9FAD
 163+ 9FAD EB               ex de,hl
 164+ 9FAE
 165+ 9FAE 73               ld (hl),e
 166+ 9FAF 23               inc hl
 167+ 9FB0 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FB1
 169+ 9FB1 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FB4 18 02            jr 2F
 171+ 9FB6
 172+ 9FB6 C9               ret
 173+ 9FB7
 174+ 9FB7 EB           3 ex de,hl
 175+ 9FB8 10 B0        2 djnz 1B
 176+ 9FBA
 177+ 9FBA C9               ret
 178+ 9FBB
 179+ 9FBB              ; ------------- ------------- ------------
 180+ 9FBB              ;
 181+ 9FBB              ;   1/11/24
 182+ 9FBB
 183+ 9FBB              Comprueba_impacto_con_Amadeus
 184+ 9FBB
 185+ 9FBB              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FBB              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FBB
 188+ 9FBB              ;   Modificamos registros, así que guardamos ...
 189+ 9FBB
 190+ 9FBB C5               push bc
 191+ 9FBC E5               push hl
 192+ 9FBD D5               push de
 193+ 9FBE
 194+ 9FBE 2D               dec l
 195+ 9FBF 2D               dec l
 196+ 9FC0
 197+ 9FC0 CD 13 91         call Extrae_address
 198+ 9FC3
 199+ 9FC3 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FC6 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FC7
 202+ 9FC7 7D               ld a,l
 203+ 9FC8 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FCA
 205+ 9FCA 06 03            ld b,3
 206+ 9FCC
 207+ 9FCC B9           1 cp c
 208+ 9FCD 28 15            jr z,Coincidencia
 209+ 9FCF 0C               inc c
 210+ 9FD0 10 FA            djnz 1B
 211+ 9FD2
 212+ 9FD2 0D               dec c
 213+ 9FD3 0D               dec c
 214+ 9FD4 0D               dec c
 215+ 9FD5
 216+ 9FD5 3C               inc a
 217+ 9FD6 B9               cp c
 218+ 9FD7 28 0B            jr z,Coincidencia
 219+ 9FD9
 220+ 9FD9 3C               inc a
 221+ 9FDA B9               cp c
 222+ 9FDB 28 07            jr z,Coincidencia
 223+ 9FDD
 224+ 9FDD D1           2 pop de
 225+ 9FDE E1               pop hl
 226+ 9FDF C1               pop bc
 227+ 9FE0
 228+ 9FE0              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FE0
 230+ 9FE0 CB 86            res 0,(hl)
 231+ 9FE2 AF               xor a                       ; Z before RET.
 232+ 9FE3 C9               ret
 233+ 9FE4
 234+ 9FE4              Coincidencia
 235+ 9FE4
 236+ 9FE4              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FE4              ;   Existe posibilidad de impacto.
 238+ 9FE4              ;   Vamos a averiguarlo ...
 239+ 9FE4
 240+ 9FE4 1D               dec e
 241+ 9FE5 1D               dec e
 242+ 9FE6 1D               dec e
 243+ 9FE7
 244+ 9FE7              ; DE en Puntero_objeto del disparo.
 245+ 9FE7              ; HL en Puntero_de_impresión del disparo.
 246+ 9FE7
 247+ 9FE7              ; Comparador:
 248+ 9FE7
 249+ 9FE7 06 03            ld b,3
 250+ 9FE9
 251+ 9FE9 1A           3 ld a,(de)
 252+ 9FEA 4F               ld c,a
 253+ 9FEB A6               and (hl)
 254+ 9FEC B9               cp c
 255+ 9FED 20 06            jr nz,Amadeus_impactado
 256+ 9FEF
 257+ 9FEF 2C               inc l
 258+ 9FF0 1C               inc e
 259+ 9FF1
 260+ 9FF1 10 F6            djnz 3B
 261+ 9FF3
 262+ 9FF3 18 E8            jr 2B
 263+ 9FF5
 264+ 9FF5              Amadeus_impactado
 265+ 9FF5
 266+ 9FF5              ; Borramos disparo.
 267+ 9FF5
 268+ 9FF5 D1               pop de
 269+ 9FF6 E1               pop hl
 270+ 9FF7
 271+ 9FF7 E5               push hl
 272+ 9FF8 D5               push de
 273+ 9FF9
 274+ 9FF9 CD AD A0         call Borra_6_bytes
 275+ 9FFC
 276+ 9FFC 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FFF 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A000
 279+ A000              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A000
 281+ A000 21 BB 89         ld hl,Impacto_Amadeus
 282+ A003 36 01            ld (hl),1
 283+ A005
 284+ A005              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A005              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A005
 287+ A005 3A BC 89         ld a,(p.imp.amadeus)
 288+ A008 FE DE            cp $de
 289+ A00A 20 04            jr nz,1F
 290+ A00C
 291+ A00C 3D               dec a
 292+ A00D 32 BC 89         ld (p.imp.amadeus),a
 293+ A010
 294+ A010              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A010
 296+ A010 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A013 21 BE 89         ld hl,Pamm_Amadeus
 298+ A016
 299+ A016 73               ld (hl),e
 300+ A017 23               inc hl
 301+ A018 72               ld (hl),d
 302+ A019
 303+ A019 D1               pop de
 304+ A01A E1               pop hl
 305+ A01B C1               pop bc
 306+ A01C
 307+ A01C AF               xor a
 308+ A01D 3C               inc a               ; NZ before RET.
 309+ A01E C9               ret
 310+ A01F
 311+ A01F              ; ------------- ------------- ------------
 312+ A01F              ;
 313+ A01F              ;   31/10/24
 314+ A01F
 315+ A01F              Fin_de_disparo_de_entidad
 316+ A01F
 317+ A01F              ; Estamos en zona de Amadeus ??
 318+ A01F
 319+ A01F 7C               ld a,h
 320+ A020 FE 54            cp $54
 321+ A022 38 0D            jr c,1F
 322+ A024
 323+ A024 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A025
 325+ A025 5D               ld e,l
 326+ A026 54               ld d,h
 327+ A027
 328+ A027 21 E0 57         ld hl,$57e0
 329+ A02A ED 52            sbc hl,de
 330+ A02C
 331+ A02C 38 6F            jr c,Elimina_disparo_entidad
 332+ A02E
 333+ A02E 6B               ld l,e
 334+ A02F 62               ld h,d
 335+ A030
 336+ A030 D1               pop de
 337+ A031
 338+ A031 7C           1 ld a,h
 339+ A032 FE 50            cp $50
 340+ A034 D8               ret c
 341+ A035
 342+ A035 7D               ld a,l
 343+ A036 FE C0            cp $c0
 344+ A038 D8               ret c
 345+ A039
 346+ A039              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A039              ; Así podremos comprobar si hay colisión más adelante.
 348+ A039
 349+ A039 1C               inc e
 350+ A03A 1C               inc e
 351+ A03B
 352+ A03B EB               ex de,hl
 353+ A03C CB C6            set 0,(hl)
 354+ A03E EB               ex de,hl
 355+ A03F
 356+ A03F 1D               dec e
 357+ A040 1D               dec e
 358+ A041
 359+ A041 C9               ret
 360+ A042
 361+ A042              ; ----------------------------------------------------------
 362+ A042              ;
 363+ A042              ;   08/10/24
 364+ A042
 365+ A042              ;   Estructura de un disparo de entidades.
 366+ A042
 367+ A042              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A042              ; 	defw 0											; Puntero de impresión.
 369+ A042              ;	defw 0											; Control.
 370+ A042
 371+ A042              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A042              ;   _de la entidad en el momento de disparar.
 373+ A042
 374+ A042              ;   El byte alto muestra la siguiente información:
 375+ A042              ;
 376+ A042              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A042              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A042              ;
 379+ A042              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A042              ;
 381+ A042              ;                        10xx ..... Izquierda.
 382+ A042              ;                        01xx ..... Derecha.
 383+ A042              ;                        00xx ..... Recto.
 384+ A042
 385+ A042              Rota_disparo_si_procede
 386+ A042
 387+ A042              ;   Nos situamos en el byte alto de (Control).
 388+ A042
 389+ A042 CB 76            bit 6,(hl)
 390+ A044 20 2D            jr nz,Rota_a_derecha
 391+ A046 CB 7E            bit 7,(hl)
 392+ A048 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A049
 394+ A049              Rota_a_izq
 395+ A049
 396+ A049 E5               push hl
 397+ A04A
 398+ A04A 7D               ld a,l
 399+ A04B D6 05            sub 5
 400+ A04D 6F               ld l,a
 401+ A04E
 402+ A04E E5               push hl
 403+ A04F FD E1            pop iy
 404+ A051
 405+ A051 A7               and a
 406+ A052
 407+ A052 FD CB 02 16      rl (iy+02)
 408+ A056 FD CB 01 16      rl (iy+01)
 409+ A05A FD CB 00 16      rl (iy+00)
 410+ A05E
 411+ A05E 30 3B            jr nc,Exit
 412+ A060
 413+ A060              ; Desplazamiento completo hasta Carry.
 414+ A060              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A060
 416+ A060 FD 36 02 03      ld (iy+02),$03
 417+ A064 FD 36 01 00      ld (iy+01),$00
 418+ A068 FD 36 00 00      ld (iy+00),$00
 419+ A06C
 420+ A06C 21 67 8C         ld hl,Ctrl_5
 421+ A06F CB DE            set 3,(hl)
 422+ A071
 423+ A071 18 28            jr Exit
 424+ A073
 425+ A073              Rota_a_derecha
 426+ A073
 427+ A073 E5               push hl
 428+ A074
 429+ A074 7D               ld a,l
 430+ A075 D6 05            sub 5
 431+ A077 6F               ld l,a
 432+ A078
 433+ A078 E5               push hl
 434+ A079 FD E1            pop iy
 435+ A07B
 436+ A07B A7               and a
 437+ A07C
 438+ A07C FD CB 00 1E      rr (iy+00)
 439+ A080 FD CB 01 1E      rr (iy+01)
 440+ A084 FD CB 02 1E      rr (iy+02)
 441+ A088
 442+ A088 30 11            jr nc,Exit
 443+ A08A
 444+ A08A              ; Desplazamiento completo hasta Carry.
 445+ A08A              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A08A
 447+ A08A FD 36 00 01      ld (iy+00),$01
 448+ A08E FD 36 01 80      ld (iy+01),$80
 449+ A092 FD 36 02 00      ld (iy+02),$00
 450+ A096
 451+ A096 21 67 8C         ld hl,Ctrl_5
 452+ A099 CB D6            set 2,(hl)
 453+ A09B
 454+ A09B E1           Exit pop hl
 455+ A09C C9               ret
 456+ A09D
 457+ A09D              ; ------------ ----------- ------------
 458+ A09D              ;
 459+ A09D              ;   25/9/24
 460+ A09D
 461+ A09D              Elimina_disparo_entidad
 462+ A09D
 463+ A09D 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0A0 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0A1
 466+ A0A1 E1               pop hl
 467+ A0A2 E5               push hl
 468+ A0A3
 469+ A0A3 2C               inc l
 470+ A0A4 2C               inc l
 471+ A0A5
 472+ A0A5 CD AD A0         call Borra_6_bytes
 473+ A0A8
 474+ A0A8 D1               pop de
 475+ A0A9
 476+ A0A9 21 00 00         ld hl,0
 477+ A0AC
 478+ A0AC C9               ret
 479+ A0AD
 480+ A0AD              ; ----- ----- ----- ----- -----
 481+ A0AD
 482+ A0AD              Borra_6_bytes
 483+ A0AD
 484+ A0AD 16 06            ld d,6                                                    ; Contador
 485+ A0AF AF               xor a                                                     ; Borrador
 486+ A0B0 77           1 ld (hl),a
 487+ A0B1 2D               dec l
 488+ A0B2 15               dec d
 489+ A0B3 20 FB            jr nz,1B
 490+ A0B5
 491+ A0B5 C9               ret
 492+ A0B6
 493+ A0B6              ; --------------------------------------------------------------------------------------
 494+ A0B6              ;
 495+ A0B6              ;   12/10/24
 496+ A0B6              ;
 497+ A0B6
 498+ A0B6              Genera_datos_de_impresion_disparos_Entidades
 499+ A0B6
 500+ A0B6 3E 07            ld a,7
 501+ A0B8 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0B9
 503+ A0B9              ; ---------------
 504+ A0B9
 505+ A0B9              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0B9
 507+ A0B9 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0BC
 509+ A0BC CD 13 91     1 call Extrae_address
 510+ A0BF
 511+ A0BF 13               inc de
 512+ A0C0 13               inc de
 513+ A0C1
 514+ A0C1 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0C5
 516+ A0C5 2D               dec l
 517+ A0C6 7E               ld a,(hl)
 518+ A0C7 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0C8 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0CA
 521+ A0CA              ; ----- ----- ----- -----
 522+ A0CA
 523+ A0CA 2D               dec l
 524+ A0CB CD 13 91         call Extrae_address
 525+ A0CE E5               push hl
 526+ A0CF
 527+ A0CF 1D               dec e
 528+ A0D0
 529+ A0D0 EB               ex de,hl
 530+ A0D1
 531+ A0D1 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0D2 2D               dec l
 533+ A0D3 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0D4 2D               dec l
 535+ A0D5 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0D6
 537+ A0D6 E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0D7
 539+ A0D7              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0D7
 541+ A0D7 FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0DB FD 73 00         ld (iy+0),e
 543+ A0DE FD 70 01         ld (iy+1),b
 544+ A0E1 FD 71 02         ld (iy+2),c
 545+ A0E4
 546+ A0E4 FD 75 03         ld (iy+3),l
 547+ A0E7 FD 74 04         ld (iy+4),h
 548+ A0EA
 549+ A0EA CD D3 99         call NextScan
 550+ A0ED
 551+ A0ED FD 75 05         ld (iy+5),l
 552+ A0F0 FD 74 06         ld (iy+6),h
 553+ A0F3
 554+ A0F3 FD E5            push iy
 555+ A0F5 E1               pop hl
 556+ A0F6
 557+ A0F6 3E 07            ld a,7
 558+ A0F8 85               add l
 559+ A0F9 6F               ld l,a
 560+ A0FA
 561+ A0FA 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0FD
 563+ A0FD              ; ----- ----- ----- -----
 564+ A0FD
 565+ A0FD              Situa_en_siguiente_caja
 566+ A0FD
 567+ A0FD 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0FE 3D               dec a
 569+ A0FF C8               ret z
 570+ A100
 571+ A100 08               ex af,af
 572+ A101 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A104 18 B6            jr 1B
 574+ A106
 575+ A106              ; --------------------------------------------------------------------------------------
 576+ A106              ;
 577+ A106              ;   12/10/24
 578+ A106              ;
 579+ A106
 580+ A106              Genera_disparo_de_entidad_maldosa
 581+ A106
 582+ A106              ;   Estructura de un disparo de entidades.
 583+ A106
 584+ A106              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A106              ; 	defw 0											; Puntero de impresión.
 586+ A106              ;	defw 0											; Control.
 587+ A106
 588+ A106              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A106              ;   _de la entidad en el momento de disparar.
 590+ A106
 591+ A106              ;   El byte de control muestra la siguiente información:
 592+ A106
 593+ A106              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A106              ;
 595+ A106              ;                        10xx ..... Izquierda.
 596+ A106              ;                        01xx ..... Derecha.
 597+ A106              ;                        00xx ..... Recto.
 598+ A106
 599+ A106              ;*  Exclusiones.
 600+ A106
 601+ A106              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A106              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A106
 604+ A106 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A109 A7               and a
 606+ A10A C8               ret z
 607+ A10B
 608+ A10B 3A F0 8B         ld a,(Coordenada_y)
 609+ A10E A7               and a
 610+ A10F C8               ret z
 611+ A110
 612+ A110 3D               dec a
 613+ A111 C8               ret z
 614+ A112
 615+ A112 FE 10            cp 16
 616+ A114 D0               ret nc
 617+ A115
 618+ A115              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A115              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A115              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A115
 622+ A115 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A118 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A119
 625+ A119              ;   Decrementa el numero de disparos de entidades.
 626+ A119
 627+ A119 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A11C 35               dec (hl)
 629+ A11D
 630+ A11D 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A120
 632+ A120 CD 13 91     1 call Extrae_address
 633+ A123
 634+ A123 13               inc de
 635+ A124 13               inc de
 636+ A125
 637+ A125 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A129
 639+ A129              ;   Comprobamos si la caja está vacía.
 640+ A129
 641+ A129 2D               dec l
 642+ A12A 7E               ld a,(hl)
 643+ A12B A7               and a
 644+ A12C 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A12E 2C               inc l
 646+ A12F
 647+ A12F              ;   Caja vacía, vamos a generar un disparo.
 648+ A12F              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A12F
 650+ A12F CD 50 A1         call Genera_byte_inclinacion
 651+ A132
 652+ A132 7E               ld a,(hl)
 653+ A133 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A134
 655+ A134 2D               dec l
 656+ A135
 657+ A135 CD 6C A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A138
 659+ A138 70               ld (hl),b
 660+ A139 2D               dec l
 661+ A13A 71               ld (hl),c
 662+ A13B
 663+ A13B 2D               dec l
 664+ A13C
 665+ A13C              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A13C
 667+ A13C FD 7E 02         ld a,(iy+02)
 668+ A13F 77               ld (hl),a
 669+ A140 2D               dec l
 670+ A141
 671+ A141 FD 7E 01         ld a,(iy+01)
 672+ A144 77               ld (hl),a
 673+ A145 2D               dec l
 674+ A146
 675+ A146 FD 7E 00         ld a,(iy+00)
 676+ A149 77               ld (hl),a
 677+ A14A
 678+ A14A C9               ret
 679+ A14B
 680+ A14B              ;   --- --- ---
 681+ A14B
 682+ A14B              Situa_en_siguiente_disparo
 683+ A14B
 684+ A14B 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A14E 18 D0            jr 1B
 686+ A150
 687+ A150              ; --------------------------------------------------------------------------------------
 688+ A150              ;
 689+ A150              ;   09/10/24
 690+ A150              ;
 691+ A150
 692+ A150              Genera_byte_inclinacion
 693+ A150
 694+ A150              ; Determina tendencia del disparo.
 695+ A150
 696+ A150 3A B8 89         ld a,(CX_Amadeus)
 697+ A153 47               ld b,a
 698+ A154 3A EF 8B         ld a,(Coordenada_X)
 699+ A157 90               sub b
 700+ A158 38 07            jr c,Disparo_a_derecha
 701+ A15A
 702+ A15A FE 06        Disparo_a_izquierda cp 6
 703+ A15C
 704+ A15C D8               ret c
 705+ A15D C8               ret z
 706+ A15E
 707+ A15E CB FE            set 7,(hl)
 708+ A160 C9               ret
 709+ A161
 710+ A161 47           Disparo_a_derecha ld b,a
 711+ A162 3E FF            ld a,$ff
 712+ A164 90               sub b
 713+ A165
 714+ A165 FE 05            cp 5
 715+ A167
 716+ A167 D8               ret c
 717+ A168 C8               ret z
 718+ A169
 719+ A169 CB F6            set 6,(hl)
 720+ A16B C9               ret
 721+ A16C
 722+ A16C              ; --------------------------------------------------------------------------------------
 723+ A16C              ;
 724+ A16C              ;   09/10/24
 725+ A16C              ;
 726+ A16C
 727+ A16C              Modifica_puntero_de_impresion
 728+ A16C
 729+ A16C              ;   Puntero de impresión del disparo en BC.
 730+ A16C
 731+ A16C E5               push hl
 732+ A16D
 733+ A16D 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A170 CD D3 99         call NextScan
 735+ A173
 736+ A173 4D               ld c,l
 737+ A174 44               ld b,h
 738+ A175
 739+ A175 E1               pop hl
 740+ A176
 741+ A176 08               ex af,af
 742+ A177 CB 77            bit 6,a
 743+ A179 28 06            jr z,1F
 744+ A17B
 745+ A17B FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A17F 0C               inc c
 747+ A180 C9               ret
 748+ A181
 749+ A181 CB 7F        1 bit 7,a
 750+ A183 28 F6            jr z,2B
 751+ A185
 752+ A185 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A189 0D               dec c
 754+ A18A
 755+ A18A C9               ret
 756+ A18B
 757+ A18B              ; --------------------------------------------------------------------------------------
 758+ A18B              ;
 759+ A18B              ;   31/08/24
 760+ A18B              ;
 761+ A18B
 762+ A18B              Compara_con_coordenadas_de_disparo
 763+ A18B
 764+ A18B 3A F0 8B         ld a,(Coordenada_y)
 765+ A18E 47               ld b,a
 766+ A18F 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A192 90               sub b
 768+ A193
 769+ A193              ; A = "0" ok
 770+ A193              ; A = "1" ok
 771+ A193
 772+ A193 28 08            jr z,Comprueba_coordenada_X
 773+ A195 3D               dec a
 774+ A196 28 05            jr z,Comprueba_coordenada_X
 775+ A198
 776+ A198              ; A = "$ff" ok
 777+ A198
 778+ A198 FE FE            cp $fe
 779+ A19A 28 01            jr z,Comprueba_coordenada_X
 780+ A19C
 781+ A19C C9               ret
 782+ A19D
 783+ A19D              Comprueba_coordenada_X
 784+ A19D
 785+ A19D 3A EF 8B         ld a,(Coordenada_X)
 786+ A1A0 47               ld b,a
 787+ A1A1 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1A4 7E               ld a,(hl)
 789+ A1A5 90               sub b
 790+ A1A6
 791+ A1A6              ; A = "0" ok
 792+ A1A6              ; A = "1" ok
 793+ A1A6
 794+ A1A6 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1A8 3D               dec a
 796+ A1A9 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1AB
 798+ A1AB              ; A = "2" ok
 799+ A1AB
 800+ A1AB 3D               dec a
 801+ A1AC 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1AE
 803+ A1AE              ; A = "$ff"
 804+ A1AE
 805+ A1AE FE FD            cp $fd
 806+ A1B0 C0               ret nz
 807+ A1B1
 808+ A1B1              Activa_Impacto_en_entidad
 809+ A1B1
 810+ A1B1              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1B1
 812+ A1B1 3E 02            ld a,2
 813+ A1B3 32 F2 8B         ld (Impacto),a
 814+ A1B6
 815+ A1B6              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1B6
 817+ A1B6 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1B9 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1BC
 820+ A1BC 73               ld (hl),e
 821+ A1BD 23               inc hl
 822+ A1BE 72               ld (hl),d
 823+ A1BF
 824+ A1BF              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1BF
 826+ A1BF 21 6C 8C         ld hl,Impacto2
 827+ A1C2 CB 9E            res 3,(hl)
 828+ A1C4
 829+ A1C4 C9               ret
 830+ A1C5
 831+ A1C5              ; --------------------------------------------------------------------------------------
 832+ A1C5              ;
 833+ A1C5              ;   13/10/24
 834+ A1C5              ;
 835+ A1C5
 836+ A1C5              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1C5
 838+ A1C5              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1C5
 840+ A1C5 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1C8 06 06            ld b,6
 842+ A1CA AF               xor a
 843+ A1CB 77           1 ld (hl),a
 844+ A1CC 2C               inc l
 845+ A1CD 10 FC            djnz 1B
 846+ A1CF
 847+ A1CF C9               ret
 848+ A1D0
 849+ A1D0              ; --------------------------------------------------------------------------------------
 850+ A1D0              ;
 851+ A1D0              ;   29/09/24
 852+ A1D0              ;
 853+ A1D0
 854+ A1D0              Calcula_bytes_pintado_disparos
 855+ A1D0
 856+ A1D0 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1D3 45               ld b,l
 858+ A1D4 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1D7 7D               ld a,l
 860+ A1D8
 861+ A1D8 90               sub b
 862+ A1D9 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1DC
 864+ A1DC C9               ret
 865+ A1DD
 866+ A1DD              ; --------------------------------------------------------------------------------------
 867+ A1DD              ;
 868+ A1DD              ;   26/10/24
 869+ A1DD              ;
 870+ A1DD              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1DD              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1DD              ;   _disparos que el álbum del FRAME actual).
 873+ A1DD
 874+ A1DD              Limpia_album_de_pintado_disparos_entidades
 875+ A1DD
 876+ A1DD 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1E0 7E               ld a,(hl)
 878+ A1E1 2D               dec l
 879+ A1E2 46               ld b,(hl)
 880+ A1E3 90               sub b
 881+ A1E4
 882+ A1E4 D8               ret c
 883+ A1E5 C8               ret z
 884+ A1E6
 885+ A1E6 F5               push af
 886+ A1E7 80               add b
 887+ A1E8 77               ld (hl),a
 888+ A1E9 F1               pop af
 889+ A1EA
 890+ A1EA              ; Clean.
 891+ A1EA
 892+ A1EA 47           2 ld b,a
 893+ A1EB AF               xor a
 894+ A1EC 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1EF 77           1 ld (hl),a
 896+ A1F0 23               inc hl
 897+ A1F1 10 FC            djnz 1B
 898+ A1F3
 899+ A1F3 C9               ret
 900+ A1F4
 901+ A1F4              ; --------------------------------------------------------------------------------------
 902+ A1F4              ;
 903+ A1F4              ;   29/09/24
 904+ A1F4              ;
 905+ A1F4
 906+ A1F4              Motor_Disparos_Amadeus
 907+ A1F4
 908+ A1F4 21 26 89         ld hl,Disparo_Amad+1
 909+ A1F7
 910+ A1F7 34               inc (hl)
 911+ A1F8 35               dec (hl)
 912+ A1F9
 913+ A1F9 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1FA
 915+ A1FA              ;   Esta caja contiene un disparo.
 916+ A1FA
 917+ A1FA CD 01 A2         call Consulta_Impacto
 918+ A1FD CC 1A A2         call z,Mueve_disparo_Amadeus
 919+ A200
 920+ A200 C9               ret
 921+ A201
 922+ A201              ; ----------------------
 923+ A201              ;
 924+ A201              ;
 925+ A201              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A201              ;
 927+ A201              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A201
 929+ A201
 930+ A201              Consulta_Impacto
 931+ A201
 932+ A201              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A201              ;   _sea lo más coherente posible.
 934+ A201
 935+ A201 E5               push hl
 936+ A202 2B               dec hl
 937+ A203 CD F6 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A206 E1               pop hl
 939+ A207 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A208
 941+ A208 C8               ret z
 942+ A209
 943+ A209 3A 6C 8C         ld a,(Impacto2)
 944+ A20C CB DF            set 3,a
 945+ A20E 32 6C 8C         ld (Impacto2),a
 946+ A211
 947+ A211 E5               push hl
 948+ A212 CD E3 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A215 E1               pop hl
 950+ A216 CD 33 A2         call Elimina_disparo_Amadeus
 951+ A219
 952+ A219 C9               ret
 953+ A21A
 954+ A21A              ; ----------------------
 955+ A21A              ;
 956+ A21A              ;
 957+ A21A              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A21A
 959+ A21A              Mueve_disparo_Amadeus
 960+ A21A
 961+ A21A CD 13 91         call Extrae_address
 962+ A21D
 963+ A21D CD E2 99         call PreviousScan
 964+ A220 CD E2 99         call PreviousScan
 965+ A223 CD E2 99         call PreviousScan
 966+ A226 CD E2 99         call PreviousScan
 967+ A229
 968+ A229              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A229
 970+ A229 7C               ld a,h
 971+ A22A D6 40            sub $40
 972+ A22C EB               ex de,hl
 973+ A22D 38 04            jr c,Elimina_disparo_Amadeus
 974+ A22F
 975+ A22F               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A22F
 977+ A22F 73               ld (hl),e
 978+ A230 23               inc hl
 979+ A231 72               ld (hl),d
 980+ A232
 981+ A232 C9               ret
 982+ A233
 983+ A233              ; ----------------------
 984+ A233              ;
 985+ A233              ;   29/9/24
 986+ A233
 987+ A233              Elimina_disparo_Amadeus
 988+ A233
 989+ A233              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A233              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A233
 992+ A233              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A233              ;   	defw 0											; Puntero de impresión.
 994+ A233
 995+ A233 2B               dec hl
 996+ A234 2B               dec hl
 997+ A235
 998+ A235 AF               xor a
 999+ A236 77               ld (hl),a
1000+ A237 23               inc hl
1001+ A238 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A239
1003+ A239 23               inc hl
1004+ A23A 77               ld (hl),a
1005+ A23B 23               inc hl
1006+ A23C 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A23D
1008+ A23D 3E 01            ld a,1
1009+ A23F 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A242
1011+ A242 CD C5 A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A245
1013+ A245 AF               xor a
1014+ A246 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A247
1016+ A247 C9               ret
1017+ A248
1018+ A248              ; --------------------------------------------------------------------------------------
1019+ A248              ;
1020+ A248              ;   13/10/24
1021+ A248              ;
1022+ A248
1023+ A248              Pinta_disparos_Amadeus
1024+ A248
1025+ A248 06 02            ld b,2
1026+ A24A ED 73 3D 8C      ld (Stack),sp
1027+ A24E ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A252 D1           3 pop de
1029+ A253 14               inc d
1030+ A254 15               dec d
1031+ A255 28 1C            jr z,1F
1032+ A257 E1               pop hl
1033+ A258
1034+ A258              Imprime_scanlines_en_pantalla
1035+ A258
1036+ A258              ; 1er scanline
1037+ A258
1038+ A258 1A               ld a,(de)
1039+ A259 AE               xor (hl)
1040+ A25A 77               ld (hl),a
1041+ A25B
1042+ A25B 1C               inc e
1043+ A25C 2C               inc l
1044+ A25D
1045+ A25D 1A               ld a,(de)
1046+ A25E AE               xor (hl)
1047+ A25F 77               ld (hl),a
1048+ A260
1049+ A260 1D               dec e
1050+ A261 E1               pop hl
1051+ A262
1052+ A262              ; 2º scanline
1053+ A262
1054+ A262 1A               ld a,(de)
1055+ A263 AE               xor (hl)
1056+ A264 77               ld (hl),a
1057+ A265
1058+ A265 1C               inc e
1059+ A266 2C               inc l
1060+ A267
1061+ A267 1A               ld a,(de)
1062+ A268 AE               xor (hl)
1063+ A269 77               ld (hl),a
1064+ A26A
1065+ A26A 1D               dec e
1066+ A26B
1067+ A26B 18 06            jr 1F
1068+ A26D
1069+ A26D ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A271 18 DF            jr 3B
1071+ A273 10 F8        1 djnz 2B
1072+ A275 ED 7B 3D 8C      ld sp,(Stack)
1073+ A279 C9               ret
1074+ A27A
1075+ A27A              ; --------------------------------------------------------------------------------------
1076+ A27A              ;
1077+ A27A              ;   13/10/24
1078+ A27A              ;
1079+ A27A              ;   Modifica: HL,BC y DE.
1080+ A27A
1081+ A27A
1082+ A27A              Genera_datos_de_impresion_disparos_Amadeus
1083+ A27A
1084+ A27A ED 73 3D 8C      ld (Stack),sp
1085+ A27E 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A281 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A282
1088+ A282 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A283 15               dec d
1090+ A284
1091+ A284 28 0E            jr z,Salida
1092+ A286
1093+ A286              Genera_scanlines_de_disparo_Amadeus
1094+ A286
1095+ A286 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A287              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A287 ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A28B
1099+ A28B C1               pop bc
1100+ A28C C1               pop bc
1101+ A28D C1               pop bc
1102+ A28E
1103+ A28E E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A28F CD E2 99         call PreviousScan
1105+ A292 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A293 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A294
1108+ A294              Salida
1109+ A294
1110+ A294 ED 7B 3D 8C      ld sp,(Stack)
1111+ A298
1112+ A298 C9               ret
1113+ A299
1114+ A299              ; --------------------------------------------------------------------------------------
1115+ A299              ;
1116+ A299              ;   12/09/24
1117+ A299              ;
1118+ A299
1119+ A299              Genera_disparo_Amadeus
1120+ A299
1121+ A299              ;*  Exclusiones.
1122+ A299
1123+ A299 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A29C A7               and a
1125+ A29D C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A29E
1127+ A29E 3D               dec a
1128+ A29F 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2A2
1130+ A2A2              Define_puntero_objeto_disparo
1131+ A2A2
1132+ A2A2              ;   Inicializamos contador.
1133+ A2A2
1134+ A2A2 06 00            ld b,0
1135+ A2A4
1136+ A2A4 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A2A7 2C               inc l
1138+ A2A8
1139+ A2A8 3E 80            ld a,$80
1140+ A2AA BE               cp (hl)
1141+ A2AB 28 0D            jr z,1F
1142+ A2AD
1143+ A2AD 04               inc b
1144+ A2AE
1145+ A2AE 3E 60            ld a,$60
1146+ A2B0 BE               cp (hl)
1147+ A2B1 28 07            jr z,1F
1148+ A2B3
1149+ A2B3
1150+ A2B3 04               inc b
1151+ A2B4
1152+ A2B4 3E 18            ld a,$18
1153+ A2B6 BE               cp (hl)
1154+ A2B7 28 01            jr z,1F
1155+ A2B9
1156+ A2B9 04               inc b
1157+ A2BA
1158+ A2BA              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2BA
1160+ A2BA              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2BA
1162+ A2BA CD E2 99     1 call PreviousScan
1163+ A2BD
1164+ A2BD 78               ld a,b
1165+ A2BE CB 3F            srl a
1166+ A2C0 28 03            jr z,4F
1167+ A2C2
1168+ A2C2              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2C2 E5               push hl
1170+ A2C3 18 02            jr 5F
1171+ A2C5 2D           4 dec l
1172+ A2C6 E5               push hl
1173+ A2C7              ; ---
1174+ A2C7
1175+ A2C7              ;   Calcula el Puntero_objeto del disparo.
1176+ A2C7
1177+ A2C7 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2CA 04               inc b
1179+ A2CB 05               dec b
1180+ A2CC 28 04            jr z,2F
1181+ A2CE
1182+ A2CE              ;   Nos desplazamos por el índice de disparos.
1183+ A2CE
1184+ A2CE 2C           3 inc l
1185+ A2CF 2C               inc l
1186+ A2D0 10 FC            djnz 3B
1187+ A2D2
1188+ A2D2              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2D2 CD 13 91     2 call Extrae_address
1190+ A2D5 E5               push hl
1191+ A2D6              ; ---
1192+ A2D6
1193+ A2D6              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2D6              ; HL en el 1er .db de la caja.
1195+ A2D6
1196+ A2D6 21 25 89         ld hl,Disparo_Amad
1197+ A2D9
1198+ A2D9 06 02            ld b,2
1199+ A2DB
1200+ A2DB D1           6 pop de
1201+ A2DC 73               ld (hl),e
1202+ A2DD 23               inc hl
1203+ A2DE 72               ld (hl),d
1204+ A2DF 23               inc hl
1205+ A2E0
1206+ A2E0 10 F9            djnz 6B
1207+ A2E2
1208+ A2E2 C9               ret
1209+ A2E3
1210+ A2E3              Genera_coordenadas_de_disparo_Amadeus
1211+ A2E3
1212+ A2E3              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2E3              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2E3              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2E3
1216+ A2E3 CD 13 91         call Extrae_address
1217+ A2E6 CD DE 94         call Genera_coordenadas
1218+ A2E9
1219+ A2E9 3D               dec a
1220+ A2EA
1221+ A2EA 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A2ED 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2EE 23               inc hl
1224+ A2EF 3A EF 8B         ld a,(Coordenada_X)
1225+ A2F2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2F3
1227+ A2F3 AF               xor a
1228+ A2F4 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2F5
1230+ A2F5 C9               ret
1231+ A2F6
1232+ A2F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2F6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2F6
1236+ A2F6              ; ----------------------------------------------
1237+ A2F6              ;
1238+ A2F6              ;   27/08/24
1239+ A2F6              ;
1240+ A2F6              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2F6              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2F6
1243+ A2F6              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2F6
1245+ A2F6              Extraccion_de_datos
1246+ A2F6
1247+ A2F6 13               inc de
1248+ A2F7 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2F8
1250+ A2F8 5E               ld e,(hl)
1251+ A2F9 23               inc hl
1252+ A2FA 56               ld d,(hl)
1253+ A2FB
1254+ A2FB 23               inc hl
1255+ A2FC
1256+ A2FC 4E               ld c,(hl)
1257+ A2FD 23               inc hl
1258+ A2FE 46               ld b,(hl)
1259+ A2FF
1260+ A2FF C5               push bc
1261+ A300 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A301
1263+ A301              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A301
1265+ A301 CD E2 99         call PreviousScan
1266+ A304 CD E2 99         call PreviousScan
1267+ A307
1268+ A307              Detecta_impacto_
1269+ A307
1270+ A307 1A               ld a,(de)
1271+ A308 A6               and (hl)
1272+ A309 C0               ret nz
1273+ A30A
1274+ A30A 13               inc de
1275+ A30B 23               inc hl
1276+ A30C
1277+ A30C 1A               ld a,(de)
1278+ A30D A6               and (hl)
1279+ A30E C9               ret
1280+ A30F
1281+ A30F              ; -------------------------------------------------------------------------------------------------------------
1282+ A30F              ;
1283+ A30F              ;   8/8/24
1284+ A30F              ;
1285+ A30F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A30F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A30F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A30F              ;
1289+ A30F              ;   MODIFICA: HL,DE,BC y A.
1290+ A30F              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A30F              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A30F
1293+ A30F              Colision_Entidad_Amadeus
1294+ A30F
1295+ A30F              ; Posible contacto de entidad con Amadeus. ?????
1296+ A30F
1297+ A30F              ; Exclusiones:
1298+ A30F
1299+ A30F 3A 8F 8C         ld a,(Shield)
1300+ A312 A7               and a
1301+ A313 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A314
1303+ A314 21 65 8C         ld hl,Ctrl_3
1304+ A317 CB 76            bit 6,(hl)
1305+ A319 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A31A
1307+ A31A 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A31D CB 56            bit 2,(hl)
1309+ A31F C0               ret nz
1310+ A320
1311+ A320 3A F0 8B     	ld a,(Coordenada_y)
1312+ A323 FE 14        	cp $14
1313+ A325 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A326
1315+ A326 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A329 A7               and a
1317+ A32A C0               ret nz
1318+ A32B
1319+ A32B              Genera_coordenadas_X
1320+ A32B
1321+ A32B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A32B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A32B
1324+ A32B              ;   Limpiamos almacenes.
1325+ A32B
1326+ A32B              ;    call Limpia_Coordenadas_X
1327+ A32B
1328+ A32B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A32B
1330+ A32B 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A32E 3A EF 8B         ld a,(Coordenada_X)
1332+ A331 CD 53 A3         call Guarda_coordenadas_X
1333+ A334
1334+ A334              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A334
1336+ A334 3A B8 89         ld a,(CX_Amadeus)
1337+ A337 CD 53 A3         call Guarda_coordenadas_X
1338+ A33A CD 67 A3         call Compara_coordenadas_X
1339+ A33D C0               ret nz
1340+ A33E
1341+ A33E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A340 32 F2 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A343
1344+ A343 2A 2E 8C         ld hl,(Puntero_store_caja)
1345+ A346 2C               inc l
1346+ A347 2C               inc l
1347+ A348 2C               inc l
1348+ A349 2C               inc l
1349+ A34A 22 6D 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A34D
1351+ A34D 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A350 CB D6            set 2,(hl)
1353+ A352
1354+ A352 C9               ret
1355+ A353
1356+ A353               ; ----- ----- ----- ----- -----
1357+ A353
1358+ A353 77           Guarda_coordenadas_X ld (hl),a
1359+ A354 3C               inc a
1360+ A355 2C               inc l
1361+ A356 77               ld (hl),a
1362+ A357 3C               inc a
1363+ A358 2C               inc l
1364+ A359 77               ld (hl),a
1365+ A35A 2C               inc l
1366+ A35B C9               ret
1367+ A35C
1368+ A35C AF           Limpia_Coordenadas_X xor a
1369+ A35D 06 06            ld b,6
1370+ A35F 21 74 8C         ld hl,Coordenadas_X_Amadeus
1371+ A362 77           1 ld (hl),a
1372+ A363 23               inc hl
1373+ A364 10 FC            djnz 1B
1374+ A366 C9               ret
1375+ A367
1376+ A367              ; ----- ----- ----- ----- -----
1377+ A367
1378+ A367              Compara_coordenadas_X
1379+ A367
1380+ A367 DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1381+ A36B DD 7E 00         ld a,(ix+0)
1382+ A36E CD 7C A3         call Comparando
1383+ A371 C8               ret z
1384+ A372
1385+ A372 3C               inc a
1386+ A373 CD 8B A3         call Comparando_1
1387+ A376 C8               ret z
1388+ A377
1389+ A377 3C               inc a
1390+ A378 CD 8B A3         call Comparando_1
1391+ A37B C9               ret
1392+ A37C
1393+ A37C              ; ----- ----- ----- ----- -----
1394+ A37C              ;
1395+ A37C              ;   4/12/23
1396+ A37C              ;
1397+ A37C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A37C
1399+ A37C              Comparando
1400+ A37C
1401+ A37C DD 2C            inc ixl
1402+ A37E DD 2C            inc ixl
1403+ A380 DD 2C            inc ixl
1404+ A382
1405+ A382 DD 46 00         ld b,(ix+0)
1406+ A385 DD 4E 01         ld c,(ix+1)
1407+ A388 DD 56 02         ld d,(ix+2)
1408+ A38B
1409+ A38B B8           Comparando_1 cp b
1410+ A38C C8               ret z
1411+ A38D B9               cp c
1412+ A38E C8               ret z
1413+ A38F BA               cp d
1414+ A390 C9               ret
1415+ A391
1416+ A391              ; -----------------------------------------------------------------------
1417+ A391              ;
1418+ A391              ;   04/7/24
1419+ A391              ;
1420+ A391
1421+ A391              Detecta_colision_nave_entidad
1422+ A391
1423+ A391              ; Exclusiones:
1424+ A391
1425+ A391              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A391
1427+ A391 21 6C 8C     	ld hl,Impacto2
1428+ A394 CB 56        	bit 2,(hl)
1429+ A396 C8           	ret z
1430+ A397
1431+ A397              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A397
1433+ A397 2A BE 89         ld hl,(Pamm_Amadeus)
1434+ A39A CD 13 91         call Extrae_address
1435+ A39D 54               ld d,h
1436+ A39E 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A39F
1438+ A39F 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A3A2 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A3A4 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3A7
1442+ A3A7 C5           1 push bc
1443+ A3A8 06 03            ld b,3
1444+ A3AA E5               push hl
1445+ A3AB
1446+ A3AB              ; .db
1447+ A3AB
1448+ A3AB 1A           3 ld a,(de)
1449+ A3AC A7               and a
1450+ A3AD 20 03            jr nz,4F
1451+ A3AF
1452+ A3AF 2C               inc l
1453+ A3B0 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3B2
1455+ A3B2 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3B4 28 04            jr z,2F
1457+ A3B6
1458+ A3B6              ; Impacto.
1459+ A3B6 FD 2D            dec iyl
1460+ A3B8 28 22            jr z,5F
1461+ A3BA
1462+ A3BA 1C           2 inc e
1463+ A3BB 10 EE            djnz 3B
1464+ A3BD
1465+ A3BD E1               pop hl
1466+ A3BE
1467+ A3BE              ; Hay salto de línea en el puntero de impresión ???
1468+ A3BE
1469+ A3BE 7C               ld a,h
1470+ A3BF D6 57            sub $57
1471+ A3C1 20 0A            jr nz,6F
1472+ A3C3
1473+ A3C3              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3C3
1475+ A3C3 2A BC 89         ld hl,(p.imp.amadeus)
1476+ A3C6 3E 20            ld a,$20
1477+ A3C8 A7               and a
1478+ A3C9 85               add l
1479+ A3CA 6F               ld l,a
1480+ A3CB 18 01            jr 7F
1481+ A3CD
1482+ A3CD 24           6 inc h
1483+ A3CE
1484+ A3CE C1           7 pop bc
1485+ A3CF 10 D6            djnz 1B
1486+ A3D1
1487+ A3D1              ;   Fin de la comparativa.
1488+ A3D1
1489+ A3D1              ;   NO HAY COLISIÓN !!!!!.
1490+ A3D1              ;
1491+ A3D1              ;   .db (Impacto) de Amadeus a "0".
1492+ A3D1              ;   RES el bit2 de (Impacto2).
1493+ A3D1              ;
1494+ A3D1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3D1              ;   Lo colocamos a "0".
1496+ A3D1
1497+ A3D1 21 6C 8C         ld hl,Impacto2
1498+ A3D4 CB 96            res 2,(hl)
1499+ A3D6 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3D9 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3DB C9               ret
1502+ A3DC
1503+ A3DC              ;   COLISIÓN !!!!!.
1504+ A3DC              ;
1505+ A3DC              ;   .db (Impacto) de Amadeus a "1".
1506+ A3DC              ;   SET el bit3 de (Impacto2).
1507+ A3DC              ;
1508+ A3DC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3DC
1510+ A3DC E1           5 pop hl
1511+ A3DD C1               pop bc
1512+ A3DE
1513+ A3DE 21 BB 89         ld hl,Impacto_Amadeus
1514+ A3E1 36 01            ld (hl),1
1515+ A3E3 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3E6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3E8
1518+ A3E8 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3EB 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3EE
1521+ A3EE 23               inc hl
1522+ A3EF 23               inc hl
1523+ A3F0 23               inc hl
1524+ A3F1
1525+ A3F1 73               ld (hl),e
1526+ A3F2 23               inc hl
1527+ A3F3 72               ld (hl),d
1528+ A3F4
1529+ A3F4              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3F4
1531+ A3F4 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3F7 21 BE 89         ld hl,Pamm_Amadeus
1533+ A3FA
1534+ A3FA 73               ld (hl),e
1535+ A3FB 23               inc hl
1536+ A3FC 72               ld (hl),d
1537+ A3FD
1538+ A3FD C9               ret
1539+ A3FE
1540+ A3FE
1541+ A3FE
# file closed: Disparo.asm
2107  A3FE
2108  A3FE              	SAVESNA "Pruebas.sna", START
2109  A3FE
2110  A3FE
2111  A3FE
2112  A3FE
# file closed: Banco_de_pruebas.asm
