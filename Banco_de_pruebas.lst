# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 3F 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 84 94 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
254+  8551 86 94 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
293+  858B 76 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 72 94        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
163   85D1
164   85D1
165   85D1
166   85D1
167   85D1
168   85D1
169   85D1              ; Gestión de ENTIDADES.
170   85D1
171   85D1 00 00        Puntero_store_entidades defw 0
172   85D3 00 00        Puntero_restore_entidades defw 0
173   85D5 00 00        Indice_restore defw 0
174   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
175   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
176   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
177   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
178   85D9              ;														; _ (Numero_de_malotes)="0".
179   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
180   85DB              ;														; _variable para almacenar lo posición del puntero_
181   85DB              ; 														; _de pila, SP.
182   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
183   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
184   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
185   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
186   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
187   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E1              ;														; _el snapshot de los registros del siguiente disparo.
189   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
190   85E1
191   85E1              ; Gestión de Disparos.
192   85E1
193   85E1              ;Puntero_extraccion_disparo_Amadeus defw 0
194   85E1              ;Puntero_extraccion_disparo_entidades defw 0
195   85E1 00           Numero_de_disparotes db 0
196   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
197   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
198   85E6
199   85E6              ; Gestión de FRAMES.
200   85E6
201   85E6 00           Switch db 0
202   85E7
203   85E7              ; Variables de Raster y localización en pantalla.
204   85E7
205   85E7 00 FF        Temp_Raster defw $ff00
206   85E9
207   85E9              ; Rutina principal *************************************************************************************************************************************************************************
208   85E9              ;
209   85E9              ;	14/11/22
210   85E9
211   85E9 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
212   85EC
213   85EC 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
214   85EE ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
215   85F0 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
216   85F2 F3           	DI
217   85F3
218   85F3 3E 01        	ld a,1
219   85F5 D3 FE        	out ($fe),a
220   85F7
221   85F7 3E 07        	ld a,%00000111
222   85F9 CD AB 90     	call Cls
223   85FC
224   85FC              ;	call Pinta_FILAS
225   85FC
226   85FC CD 3B 88     	call Pulsa_ENTER
227   85FF
228   85FF 21 D7 85     	ld hl,Numero_de_entidades
229   8602 46           	ld b,(hl)
230   8603 04           	inc b
231   8604 05           	dec b
232   8605 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
233   8607
234   8607              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
235   8607              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
236   8607              ;	Pintamos el resto de entidades:
237   8607
238   8607 CD 34 87     	call Inicia_punteros_de_entidades
239   860A
240   860A              ;	INICIA ENTIDADES!!!!!
241   860A
242   860A C5           1 push bc  												; Guardo el contador de entidades.
243   860B CD 8E 87      	call Inicia_Puntero_objeto
244   860E CD FB 8A     	call Draw
245   8611 CD A0 7F     	call Guarda_foto_registros
246   8614 CD D6 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
247   8617 C1           	pop bc
248   8618 10 F0        	djnz 1B  											; Decremento el contador de entidades.
249   861A
250   861A              ; 	INICIA AMADEUS!!!!!
251   861A
252   861A CD 17 88     3 call Restore_Amadeus
253   861D CD 8E 87     	call Inicia_Puntero_objeto
254   8620 CD FB 8A     	call Draw
255   8623 CD A0 7F     	call Guarda_foto_registros
256   8626 CD 29 88     	call Store_Amadeus
257   8629
258   8629              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
259   8629
260   8629 CD 4A 87     	call Inicia_Puntero_Disparo_Entidades
261   862C CD 51 87     	call Inicia_Puntero_Disparo_Amadeus
262   862F
263   862F              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
264   862F
265   862F CD 34 87     	call Inicia_punteros_de_entidades
266   8632 CD 05 88     	call Restore_Primera_entidad
267   8635
268   8635 3A D7 85     	ld a,(Numero_de_entidades)
269   8638 3C           	inc a
270   8639 32 D8 85     	ld (Numero_de_malotes),a
271   863C
272   863C FB           2 ei
273   863D 18 FD        	jr 2B
274   863F
275   863F              ; -----------------------------------------------------------------------------------
276   863F
277   863F              Frame
278   863F
279   863F              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
280   863F              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
281   863F
282   863F 3E 02            ld a,2
283   8641 D3 FE            out ($fe),a
284   8643 CD FF 8D     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
285   8646 CD 38 8E     	call Extrae_foto_disparos
286   8649 3E 01            ld a,1
287   864B D3 FE            out ($fe),a
288   864D
289   864D              ; ----------------------------------------------------------------------
290   864D
291   864D CD 12 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
292   8650 CD 30 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos.
293   8653
294   8653 21 00 70     	ld hl,Album_de_fotos
295   8656 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
296   8659              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
297   8659 3A D7 85         ld a,(Numero_de_entidades)
298   865C 47               ld b,a
299   865D A7           	and a
300   865E 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
301   8660
302   8660 C5           2 push bc
303   8661 CD AD 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
304   8664 3A C3 85     	ld a,(Ctrl_0)
305   8667 CB 67        	bit 4,a
306   8669 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
307   866B
308   866B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
309   866B              ; Las entidades sólo generan disparo cuando se mueven.
310   866B              ; 16/02/23.
311   866B              ; [[[
312   866B CD 72 88     	call Detecta_disparo_entidad
313   866E              ; ]]]
314   866E CD FB 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
315   8671
316   8671 21 C3 85     1 ld hl,Ctrl_0
317   8674 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
318   8676 AF           	xor a
319   8677 32 C4 85     	ld (Obj_dibujado),a
320   867A CD D6 87     	call Store_Restore_entidades
321   867D C1           	pop bc
322   867E 10 E0        	djnz 2B
323   8680
324   8680              ; Tras la gestión de las entidades, ... AMADEUS.
325   8680
326   8680 CD 17 88     4 call Restore_Amadeus
327   8683 CD CC 86     	call Mov_Amadeus
328   8686 3A C3 85     	ld a,(Ctrl_0)
329   8689 CB 67        	bit 4,a
330   868B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
331   868D CD FB 86     	call Guarda_foto_entidad_a_pintar
332   8690
333   8690 21 C3 85     3 ld hl,Ctrl_0
334   8693 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
335   8695 AF           	xor a
336   8696 32 C4 85     	ld (Obj_dibujado),a
337   8699 CD 29 88     	call Store_Amadeus
338   869C
339   869C              ; -----
340   869C
341   869C CD 34 87     	call Inicia_punteros_de_entidades
342   869F CD 05 88     	call Restore_Primera_entidad
343   86A2
344   86A2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
345   86A2
346   86A2 CD 58 87     	call Calcula_numero_de_malotes
347   86A5 CD 70 87     	call Calcula_numero_de_disparotes
348   86A8
349   86A8 3E 04        	ld a,4
350   86AA D3 FE        	out ($fe),a
351   86AC C9           	ret
352   86AD
353   86AD              ; --------------------------------------------------------------------------------------------------------------
354   86AD              ;
355   86AD              ;	29/1/23
356   86AD
357   86AD              Mov_obj
358   86AD
359   86AD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
360   86AD
361   86AD AF           	xor a
362   86AE 32 C4 85     	ld (Obj_dibujado),a
363   86B1 CD 05 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
364   86B4              ;														; Obj_dibujado="0".
365   86B4              ; Movemos Entidades malignas.
366   86B4
367   86B4 CD 88 94     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
368   86B7 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
369   86BA CB 67        	bit 4,a
370   86BC C8           	ret z
371   86BD
372   86BD              ; ---------
373   86BD
374   86BD 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
375   86BF 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
376   86C2 CD 05 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
377   86C5 CD 1C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
378   86C8 CD EB 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
379   86CB C9           	ret													; _de la misma.
380   86CC
381   86CC              ; --------------------------------------------------------------------------------------------------------------
382   86CC              ;
383   86CC              ;	29/1/23
384   86CC
385   86CC              Mov_Amadeus
386   86CC
387   86CC AF           	xor a
388   86CD 32 C4 85     	ld (Obj_dibujado),a
389   86D0 CD 05 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
390   86D3              ;														; Obj_dibujado="0".
391   86D3              ; Movemos Amadeus.
392   86D3
393   86D3 CD 4F 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
394   86D6 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
395   86D9 CB 67        	bit 4,a
396   86DB C8           	ret z
397   86DC
398   86DC              ; ---------
399   86DC
400   86DC 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
401   86DE 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
402   86E1 CD 05 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
403   86E4 CD 1C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
404   86E7 CD EB 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
405   86EA C9           	ret													; _de la nave.
406   86EB
407   86EB              ; --------------------------------------------------------------------------------------------------------------
408   86EB              ;
409   86EB              ;	31/01/23
410   86EB              ;
411   86EB              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
412   86EB
413   86EB              Guarda_foto_entidad_a_borrar
414   86EB
415   86EB CD D5 8D     	call Prepara_draw
416   86EE CD 0F 8D     	call calcula_CColumnass
417   86F1 CD 46 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
418   86F4 CD 9B 8D     	call Define_rutina_de_impresion
419   86F7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
420   86FA C9           	ret
421   86FB
422   86FB              ; --------------------------------------------------------------------------------------------------------------
423   86FB              ;
424   86FB              ;	31/01/23
425   86FB              ;
426   86FB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
427   86FB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
428   86FB
429   86FB              Guarda_foto_entidad_a_pintar
430   86FB
431   86FB CD 28 87     	call Repone_pintar
432   86FE CD FB 8A     	call Draw
433   8701 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
434   8704 C9           	ret
435   8705
436   8705              ; --------------------------------------------------------------------------------------------------------------
437   8705              ;
438   8705              ;
439   8705
440   8705 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
441   8708 3A C4 85     	ld a,(Obj_dibujado)
442   870B A7           	and a
443   870C 28 05        	jr z,1F
444   870E 11 B9 85     	ld de,Variables_de_pintado
445   8711 18 03        	jr 2F
446   8713 11 AF 85     1 ld de,Variables_de_borrado
447   8716 01 08 00     2 ld bc,8
448   8719 ED B0        	ldir
449   871B C9           	ret
450   871C
451   871C              ; --------------------------------------------------------------------------------------------------------------
452   871C
453   871C 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
454   871F 11 96 85     	ld de,Filas
455   8722 01 08 00     	ld bc,8
456   8725 ED B0        	ldir
457   8727 C9           	ret
458   8728
459   8728 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
460   872B 11 96 85     	ld de,Filas
461   872E 01 08 00     	ld bc,8
462   8731 ED B0        	ldir
463   8733 C9           	ret
464   8734
465   8734              ; *************************************************************************************************************************************************************
466   8734              ;
467   8734              ; 8/1/23
468   8734              ;
469   8734              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
470   8734              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
471   8734              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
472   8734
473   8734              ; Destruye HL y DE !!!!!
474   8734
475   8734              Inicia_punteros_de_entidades
476   8734
477   8734 21 68 84     	ld hl,Indice_de_entidades
478   8737 CD 88 87         call Extrae_address
479   873A 22 D1 85         ld (Puntero_store_entidades),hl
480   873D 21 6A 84     	ld hl,Indice_de_entidades+2
481   8740 22 D5 85     	ld (Indice_restore),hl
482   8743 CD 88 87     	call Extrae_address
483   8746 22 D3 85     	ld (Puntero_restore_entidades),hl
484   8749 C9               ret
485   874A
486   874A              ; *************************************************************************************************************************************************************
487   874A              ;
488   874A              ; 8/1/23
489   874A              ;
490   874A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
491   874A
492   874A 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
493   874D 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
494   8750 C9           	ret
495   8751 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
496   8754 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
497   8757 C9           	ret
498   8758
499   8758              ; -------------------------------------------------------------------------------------------------------------
500   8758              ;
501   8758              ; 28/2/23
502   8758              ;
503   8758
504   8758              Calcula_numero_de_malotes
505   8758
506   8758 21 00 70     	ld hl,Album_de_fotos
507   875B EB           	ex de,hl
508   875C 2A DD 85     	ld hl,(Stack_snapshot)
509   875F
510   875F 06 00        	ld b,0
511   8761 7D           	ld a,l
512   8762 93           	sub e
513   8763 28 07        	jr z,1F
514   8765
515   8765              ; Nº de malotes no es "0".
516   8765
517   8765 D6 06        2 sub 6
518   8767 04           	inc b
519   8768 A7           	and a
520   8769 20 FA        	jr nz,2B
521   876B 78           	ld a,b
522   876C
523   876C 32 D8 85     1 ld (Numero_de_malotes),a
524   876F C9           	ret
525   8770
526   8770              ; -------------------------------------------------------------------------------------------------------------
527   8770              ;
528   8770              ; 28/2/23
529   8770              ;
530   8770
531   8770              Calcula_numero_de_disparotes
532   8770
533   8770 21 60 70     	ld hl,Album_de_fotos_disparos
534   8773 EB           	ex de,hl
535   8774 2A DF 85     	ld hl,(Stack_snapshot_disparos)
536   8777
537   8777 06 00        	ld b,0
538   8779 7D           	ld a,l
539   877A 93           	sub e
540   877B 28 07        	jr z,1F
541   877D
542   877D              ; Nº de malotes no es "0".
543   877D
544   877D D6 06        2 sub 6
545   877F 04           	inc b
546   8780 A7           	and a
547   8781 20 FA        	jr nz,2B
548   8783 78           	ld a,b
549   8784
550   8784 32 E1 85     1 ld (Numero_de_disparotes),a
551   8787 C9           	ret
552   8788              ; *************************************************************************************************************************************************************
553   8788              ;
554   8788              ; 20/10/22
555   8788              ;
556   8788              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
557   8788              ;
558   8788              ; Destruye el puntero y DE !!!!!
559   8788
560   8788 5E           Extrae_address ld e,(hl)
561   8789 23           	inc hl
562   878A 56           	ld d,(hl)
563   878B 2B           	dec hl
564   878C EB           	ex de,hl
565   878D C9           	ret
566   878E
567   878E              ; *************************************************************************************************************************************************************
568   878E              ;
569   878E              ;	7/2/23
570   878E              ;
571   878E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
572   878E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
573   878E              ;
574   878E              ;   Destruye HL y BC !!!!!,
575   878E              ;
576   878E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
577   878E              ;					"0" ..... Izquierda.
578   878E
579   878E              Inicia_Puntero_objeto
580   878E
581   878E 3A AA 85     	ld a,(Cuad_objeto)
582   8791 E6 01        	and 1
583   8793 F5           	push af
584   8794 CC B2 87     	call z,Inicia_puntero_objeto_izq
585   8797 F1           	pop af
586   8798 28 2B        	jr z,1F
587   879A CD 9F 87     	call Inicia_puntero_objeto_der
588   879D 18 26        	jr 1F
589   879F
590   879F              ; Arrancamos desde la parte izquierda de la pantalla.
591   879F              ; Iniciamos (Indice_Sprite_der).
592   879F
593   879F 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
594   87A2 22 A4 85     	ld (Puntero_DESPLZ_der),hl
595   87A5 CD 88 87     	call Extrae_address
596   87A8 22 9A 85     	ld (Puntero_objeto),hl
597   87AB
598   87AB 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
599   87AE              ;	call Extrae_address
600   87AE 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
601   87B1 C9           	ret
602   87B2
603   87B2              ; Arrancamos desde la parte derecha de la pantalla.
604   87B2              ; Iniciamos (Indice_Sprite_izq).
605   87B2
606   87B2 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
607   87B5 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
608   87B8 CD 88 87     	call Extrae_address
609   87BB 22 9A 85     	ld (Puntero_objeto),hl
610   87BE
611   87BE 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
612   87C1              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
613   87C1 22 A4 85     	ld (Puntero_DESPLZ_der),hl
614   87C4 C9           	ret
615   87C5
616   87C5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
617   87C5
618   87C5 21 38 83     1 ld hl,Amadeus
619   87C8 ED 4B 9A 85  	ld bc,(Puntero_objeto)
620   87CC B7 ED 42     	sub hl,bc
621   87CF C0           	ret nz
622   87D0 21 C3 85     	ld hl,Ctrl_0
623   87D3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
624   87D5 C9           	ret 												; _de nuestra nave en los extremos.
625   87D6
626   87D6              ; *************************************************************************************************************************************************************
627   87D6              ;
628   87D6              ;	8/1/23
629   87D6              ;
630   87D6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
631   87D6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
632   87D6
633   87D6              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
634   87D6              ;	_de la 2ª y 3ª entidad respectivamente.
635   87D6
636   87D6              Store_Restore_entidades
637   87D6
638   87D6 E5           	push hl
639   87D7 D5           	push de
640   87D8 C5            	push bc
641   87D9
642   87D9              ;	STORE !!!!!
643   87D9              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
644   87D9
645   87D9 21 96 85     	ld hl,Filas
646   87DC ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
647   87E0 01 3A 00     	ld bc,58
648   87E3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
649   87E5
650   87E5              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
651   87E5
652   87E5 2A D3 85     	ld hl,(Puntero_restore_entidades)
653   87E8 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
654   87EB 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
655   87EE 01 3A 00     	ld bc,58
656   87F1 ED B0        	ldir
657   87F3
658   87F3              ;	Incrementa RESTORE !!!!!
659   87F3
660   87F3 2A D5 85         ld hl,(Indice_restore)
661   87F6 23           	inc hl
662   87F7 23           	inc hl
663   87F8 22 D5 85     	ld (Indice_restore),hl
664   87FB CD 88 87         call Extrae_address
665   87FE 22 D3 85         ld (Puntero_restore_entidades),hl
666   8801 C1           	pop bc
667   8802 D1           	pop de
668   8803 E1           	pop hl
669   8804 C9           	ret
670   8805
671   8805              ; **************************************************************************************************
672   8805              ;
673   8805              ;	29/10/22
674   8805              ;
675   8805              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
676   8805
677   8805 E5           Restore_Primera_entidad push hl
678   8806 D5           	push de
679   8807 C5            	push bc
680   8808 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
681   880B 11 96 85     	ld de,Filas
682   880E 01 3A 00     	ld bc,58
683   8811 ED B0        	ldir
684   8813 C1           	pop bc
685   8814 D1           	pop de
686   8815 E1           	pop hl
687   8816 C9           	ret
688   8817
689   8817              ; **************************************************************************************************
690   8817              ;
691   8817              ;	25/01/23
692   8817              ;
693   8817              ;	Restore_Amadeus
694   8817              ;
695   8817              ;	Cargamos en DRAW los parámetros de Amadeus.
696   8817              ;
697   8817
698   8817 E5           Restore_Amadeus	push hl
699   8818 D5           	push de
700   8819 C5            	push bc
701   881A 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
702   881D 11 96 85     	ld de,Filas
703   8820 01 3A 00     	ld bc,58
704   8823 ED B0        	ldir
705   8825 C1           	pop bc
706   8826 D1           	pop de
707   8827 E1           	pop hl
708   8828 C9           	ret
709   8829
710   8829              ; *************************************************************************************************************************************************************
711   8829              ;
712   8829              ;	29/01/23
713   8829              ;
714   8829              ;	Store_Amadeus
715   8829              ;
716   8829              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
717   8829              ;
718   8829
719   8829 E5           Store_Amadeus push hl
720   882A D5           	push de
721   882B C5            	push bc
722   882C 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
723   882F 11 74 84     	ld de,Amadeus_db
724   8832 01 3A 00     	ld bc,58
725   8835 ED B0        	ldir
726   8837 C1           	pop bc
727   8838 D1           	pop de
728   8839 E1           	pop hl
729   883A C9           	ret
730   883B
731   883B              ; **************************************************************************************************
732   883B
733   883B              ; Teclado.
734   883B
735   883B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
736   883D DB FE        	in a,($fe)
737   883F E6 01        	and $01
738   8841 28 02        	jr z,1f
739   8843 18 F6        	jr Pulsa_ENTER
740   8845 C9           1 ret
741   8846
742   8846              ; **************************************************************************************************
743   8846              ;
744   8846              ; Temporización.
745   8846
746   8846              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
747   8846              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
748   8846              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
749   8846              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
750   8846
751   8846              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
752   8846              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
753   8846              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
754   8846
755   8846              ; A partir de $4f61 no hace falta DELAY.
756   8846
757   8846              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
758   8846
759   8846 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
760   8849 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
761   884A 78           	LD A,B
762   884B A7           	AND A
763   884C 20 FB        	JR NZ,wait
764   884E C9           	RET
765   884F
766   884F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
767   884F              ;
768   884F              ;	5/3/23
769   884F              ;
770   884F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
771   884F
772   884F              Movimiento_Amadeus
773   884F
774   884F              ; Disparo.
775   884F
776   884F 3E F7        	ld a,$f7												; "5" para disparar.
777   8851 DB FE        	in a,($fe)
778   8853 E6 10        	and $10
779   8855 CC A6 88     	call z,Genera_disparo
780   8858
781   8858 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
782   885A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
783   885C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
784   885E CC 39 92         call z,Mov_left											;			"			"			"			"			"			"			"			"
785   8861 3E F7        	ld a,$f7
786   8863 DB FE        	in a,($fe)
787   8865 E6 01        	and $01
788   8867 C8           	ret z
789   8868
790   8868 3E F7        	ld a,$f7
791   886A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
792   886C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
793   886E CC 1B 91     	call z,Mov_right										;			"			"			"			"			"			"			"			"
794   8871 C9           	ret
795   8872
796   8872              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
797   8872              ;
798   8872              ;	Rutina provisional para que los malotes cagen balas.
799   8872
800   8872 3E 7F        Detecta_disparo_entidad ld a,$7f
801   8874 DB FE        	in a,($fe)
802   8876 E6 01        	and 1
803   8878 C0           	ret nz
804   8879 CD A6 88     	call Genera_disparo
805   887C C9           	ret
806   887D
807   887D              ; Pinta indicadores de FILAS. ------------------------------------------------------
808   887D
809   887D 21 10 40     Pinta_FILAS ld hl,$4010
810   8880              ;	ld b,9
811   8880              ;2 push hl
812   8880              ;	push bc
813   8880 06 BF        	ld b,$bf
814   8882 36 80        1 ld (hl),%10000000
815   8884 CD E1 8D     	call NextScan
816   8887 10 F9        	djnz 1B
817   8889              ;	pop bc
818   8889              ;	pop hl
819   8889              ;	inc l
820   8889              ;	djnz 2B
821   8889 06 03        	ld b,3
822   888B 21 00 47         ld hl,$4700
823   888E CD 94 88     3 call Bucle_1
824   8891 10 FB            djnz 3B
825   8893 C9               ret
826   8894
827   8894 C5           Bucle_1 push bc
828   8895 E5                   push hl
829   8896 D1                   pop de
830   8897 13                   inc de
831   8898 01 FF 00             ld bc,255
832   889B 36 FF                ld (hl),255
833   889D ED B0                ldir
834   889F 23                   inc hl
835   88A0 3E 07                ld a,7
836   88A2 84                   add a,h
837   88A3 67                   ld h,a
838   88A4 C1                   pop bc
839   88A5 C9                   ret
840   88A6
841   88A6              ; ---------------------------------------------------------------
842   88A6
843   88A6              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88A6              ; ******************************************************************************************************************************************************************************************
  2+  88A6              ;
  3+  88A6              ;   19/02/23
  4+  88A6              ;
  5+  88A6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88A6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88A6              ;
  8+  88A6              ;
  9+  88A6              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88A6              ;
 11+  88A6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88A6              ;               _ hacen las entidades hacia abajo.
 13+  88A6              ;
 14+  88A6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88A6              ;
 16+  88A6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88A6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88A6              ;
 19+  88A6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88A6              ;           _ la bala.
 21+  88A6              ;
 22+  88A6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88A6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88A6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88A6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88A6              ;           _ en el momento de generarse la bala)).
 27+  88A6
 28+  88A6              Genera_disparo
 29+  88A6
 30+  88A6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88A6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88A6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88A6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88A6              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88A6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88A6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88A6
 38+  88A6              ; Exclusiones:
 39+  88A6
 40+  88A6 3A CC 85         ld a,(Columnas)
 41+  88A9 47               ld b,a
 42+  88AA 3A 97 85         ld a,(Columns)
 43+  88AD B8               cp b
 44+  88AE C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88AF
 46+  88AF              ; ----- ----- -----
 47+  88AF
 48+  88AF              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 49+  88AF
 50+  88AF 21 F2 83         ld hl,ON_Disparo_2A
 51+  88B2 CD 88 87         call Extrae_address
 52+  88B5 24               inc h
 53+  88B6 25               dec h
 54+  88B7 28 07            jr z,14F
 55+  88B9
 56+  88B9 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 57+  88BC A7               and a
 58+  88BD ED 52            sbc hl,de
 59+  88BF D0               ret nc
 60+  88C0
 61+  88C0              ; ----- ----- -----
 62+  88C0
 63+  88C0 21 00 80     14 ld hl,Indice_disparo
 64+  88C3 3A 9E 85         ld a,(CTRL_DESPLZ)
 65+  88C6 4F               ld c,a
 66+  88C7 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 67+  88C9              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 68+  88C9              ;                                            ""        ""       "f9", B="1"
 69+  88C9              ;                                            ""        ""       "fb", B="2"
 70+  88C9              ;                                            ""        ""       "fb", B="3"
 71+  88C9 A7               and a
 72+  88CA 28 10            jr z,1F
 73+  88CC E6 01            and 1
 74+  88CE C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 75+  88CF
 76+  88CF 79               ld a,c
 77+  88D0 16 F9            ld d,$f9
 78+  88D2 23           2 inc hl
 79+  88D3 23               inc hl
 80+  88D4 04               inc b
 81+  88D5 BA               cp d
 82+  88D6 28 04            jr z,1F
 83+  88D8 14               inc d
 84+  88D9 14               inc d
 85+  88DA 18 F6            jr 2B
 86+  88DC
 87+  88DC CD 88 87     1 call Extrae_address
 88+  88DF E5               push hl
 89+  88E0 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 90+  88E2 DD 21 74 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 91+  88E6
 92+  88E6              ;	Se cumplen las condiciones necesarias para generar un disparo.
 93+  88E6              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 94+  88E6
 95+  88E6 3A AA 85     	ld a,(Cuad_objeto)
 96+  88E9 FE 02            cp 2
 97+  88EB 38 60            jr c,3F
 98+  88ED 28 5E            jr z,3F
 99+  88EF
100+  88EF              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
101+  88EF
102+  88EF E6 01            and 1
103+  88F1 28 2D            jr z,4F
104+  88F3
105+  88F3              ; 	Estamos en el 3er cuadrante de pantalla.
106+  88F3              ; 	3er CUAD. ----- ----- ----- ----- -----
107+  88F3              ;
108+  88F3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
109+  88F3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
110+  88F3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
111+  88F3
112+  88F3 2A 98 85     	ld hl,(Posicion_actual)
113+  88F6
114+  88F6              ;   Amadeus o entidad ???.
115+  88F6
116+  88F6 3A C3 85         ld a,(Ctrl_0)
117+  88F9 CB 77            bit 6,a
118+  88FB 28 0D            jr z,8F
119+  88FD
120+  88FD              ; 	Dispara Amadeus.
121+  88FD
122+  88FD 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
123+  88FF CD F0 8D         call PreviousScan
124+  8902 CD F0 8D         call PreviousScan
125+  8905
126+  8905              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
127+  8905              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
128+  8905              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
129+  8905              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
130+  8905
131+  8905 CD 77 89         call Ajusta_disparo_parte_izquierda
132+  8908 18 0E            jr 10F
133+  890A
134+  890A              ; 	Dispara Entidad.
135+  890A
136+  890A 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
137+  890C
138+  890C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
139+  890C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
140+  890C
141+  890C C5               push bc
142+  890D 06 10            ld b,16
143+  890F CD E1 8D     9 call NextScan
144+  8912 10 FB            djnz 9B
145+  8914 C1               pop bc
146+  8915
147+  8915              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
148+  8915              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
149+  8915              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
150+  8915              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
151+  8915
152+  8915 CD 77 89         call Ajusta_disparo_parte_izquierda
153+  8918
154+  8918 CD EC 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
155+  891B              ;                                                   ; _al generar el disparo.
156+  891B
157+  891B              ; 	LLegados a este punto tendremos:
158+  891B              ;
159+  891B              ;       Puntero_objeto_disparo en IY.
160+  891B              ;       Rutinas_de_impresion en IX.
161+  891B              ;       Puntero_de_impresion en HL.
162+  891B              ;       Impacto/Dirección en BC.
163+  891B
164+  891B CD 7F 89         call Almacena_disparo
165+  891E 18 4F            jr 6F                                           ; RET.
166+  8920
167+  8920
168+  8920              ; 	Estamos en el 4º cuadrante de pantalla.
169+  8920              ; 	4º CUAD. ----- ----- ----- ----- -----
170+  8920              ;
171+  8920              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
172+  8920              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
173+  8920              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
174+  8920
175+  8920 2A 98 85     4 ld hl,(Posicion_actual)
176+  8923
177+  8923              ;   Amadeus o entidad ???.
178+  8923
179+  8923 3A C3 85         ld a,(Ctrl_0)
180+  8926 CB 77            bit 6,a
181+  8928 28 0D            jr z,11F
182+  892A
183+  892A              ; 	Dispara Amadeus.
184+  892A
185+  892A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
186+  892C CD F0 8D         call PreviousScan
187+  892F CD F0 8D         call PreviousScan
188+  8932
189+  8932              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
190+  8932              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
191+  8932              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
192+  8932              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
193+  8932
194+  8932 CD 70 89         call Ajusta_disparo_parte_derecha
195+  8935 18 0E            jr 13F
196+  8937
197+  8937              ; 	Dispara Entidad.
198+  8937
199+  8937 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
200+  8939
201+  8939              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
202+  8939              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
203+  8939
204+  8939 C5               push bc
205+  893A
206+  893A 06 10            ld b,16
207+  893C CD E1 8D     12 call NextScan
208+  893F 10 FB            djnz 12B
209+  8941
210+  8941 C1               pop bc
211+  8942
212+  8942              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
213+  8942              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
214+  8942              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
215+  8942              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
216+  8942
217+  8942 CD 70 89         call Ajusta_disparo_parte_derecha
218+  8945
219+  8945 CD EC 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
220+  8948              ;                                                     ; _al generar el disparo.
221+  8948
222+  8948              ; LLegados a este punto tendremos:
223+  8948              ;
224+  8948              ;       Puntero_objeto_disparo en IY.
225+  8948              ;       Rutinas_de_impresion en IX.
226+  8948              ;       Puntero_de_impresion en HL.
227+  8948              ;       Impacto/Dirección en BC.
228+  8948
229+  8948 CD 7F 89         call Almacena_disparo
230+  894B 18 22            jr 6F                                           ; RET.
231+  894D
232+  894D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
233+  894D
234+  894D 28 11        3 jr z,5F
235+  894F
236+  894F              ; 	1er CUAD. ----- ----- ----- ----- -----
237+  894F              ;
238+  894F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
239+  894F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
240+  894F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
241+  894F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
242+  894F
243+  894F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
244+  894F              ;	   ""        ""       "f9", B="1"
245+  894F              ;	   ""        ""       "fb", B="2"
246+  894F              ; 	   ""        ""       "fb", B="3"
247+  894F
248+  894F 2A 98 85     	ld hl,(Posicion_actual)
249+  8952 CD E1 8D     	call NextScan
250+  8955
251+  8955              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
252+  8955              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
253+  8955              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
254+  8955              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
255+  8955
256+  8955 CD 77 89         call Ajusta_disparo_parte_izquierda
257+  8958
258+  8958              ; 	No se produce impacto. B="$80"
259+  8958              ; 	Dirección del proyectil hacia abajo. C="$80"
260+  8958
261+  8958 01 80 80         ld bc,$8080
262+  895B
263+  895B              ; 	LLegados a este punto tendremos:
264+  895B              ;
265+  895B              ;       Puntero_objeto_disparo en IY.
266+  895B              ;       Rutinas_de_impresion en IX.
267+  895B              ;       Puntero_de_impresion en HL.
268+  895B              ;       Impacto/Dirección en BC.
269+  895B
270+  895B CD 7F 89         call Almacena_disparo
271+  895E 18 0F            jr 6F                                           ; RET.
272+  8960
273+  8960              ; 	Estamos en el 2º cuadrante de pantalla.
274+  8960              ; 	2º CUAD. ----- ----- ----- ----- -----
275+  8960              ;
276+  8960              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
277+  8960              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
278+  8960              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
279+  8960              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
280+  8960
281+  8960 2A 98 85     5 ld hl,(Posicion_actual)
282+  8963 CD E1 8D     	call NextScan
283+  8966
284+  8966              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
285+  8966              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
286+  8966              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
287+  8966              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
288+  8966
289+  8966 CD 70 89         call Ajusta_disparo_parte_derecha
290+  8969
291+  8969              ; 	No se produce impacto. B="$80"
292+  8969              ; 	Dirección del proyectil hacia abajo. C="80"
293+  8969
294+  8969 01 80 80     15 ld bc,$8080
295+  896C
296+  896C              ; 	LLegados a este punto tendremos:
297+  896C              ;
298+  896C              ;       Puntero_objeto_disparo en IY.
299+  896C              ;       Rutinas_de_impresion en IX.
300+  896C              ;       Puntero_de_impresion en HL.
301+  896C              ;       Impacto/Dirección en BC.
302+  896C
303+  896C CD 7F 89         call Almacena_disparo
304+  896F
305+  896F C9           6 ret
306+  8970
307+  8970              ; ----------------------------------------------------------------
308+  8970              ;
309+  8970              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
310+  8970              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
311+  8970              ;	_ (lado izq. o derecho), de la entidad que lo genera.
312+  8970
313+  8970 78           Ajusta_disparo_parte_derecha ld a,b
314+  8971 FE 02            cp 2
315+  8973 38 01            jr c,1F
316+  8975 23               inc hl
317+  8976 C9           1 ret
318+  8977
319+  8977 78           Ajusta_disparo_parte_izquierda ld a,b
320+  8978 FE 01        	cp 1
321+  897A 20 01        	jr nz,1F
322+  897C 2B           	dec hl
323+  897D 2B           1 dec hl
324+  897E C9               ret
325+  897F
326+  897F              ; ----------------------------------------------------------------
327+  897F              ;
328+  897F              ;   25/02/23
329+  897F              ;
330+  897F              ;   La Rutina va almacenando disparos en sus respectiva bases de datos.
331+  897F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
332+  897F
333+  897F              Almacena_disparo
334+  897F
335+  897F E5               push hl  										; HL contiene el puntero de impresión.
336+  8980 F1               pop af
337+  8981 08               ex af,af                                        ; Puntero_de_impresion en AF'.
338+  8982
339+  8982 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
340+  8983 E6 01            and 1
341+  8985 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
342+  8987              ;                                                   ; _ es Amadeus o una entidad la que dispara.
343+  8987              ; 	Dispara AMADEUS.
344+  8987
345+  8987              ;	Comprobamos que a Amadeus aún le quedan disparos.
346+  8987              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
347+  8987              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
348+  8987              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
349+  8987
350+  8987 C5               push bc
351+  8988 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
352+  898B 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
353+  898E A7               and a
354+  898F ED 42            sbc hl,bc
355+  8991 CC 51 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
356+  8994 C1               pop bc
357+  8995 28 54            jr z,4F
358+  8997
359+  8997 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
360+  899A 23               inc hl
361+  899B 23               inc hl
362+  899C 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
363+  899F              ;                                                   ; _ Disparo_(+1).
364+  899F 18 18            jr 2F
365+  89A1
366+  89A1              ; Dispara una entidad.
367+  89A1
368+  89A1 C5           1 push bc
369+  89A2 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
370+  89A5 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
371+  89A8 A7               and a
372+  89A9 ED 42            sbc hl,bc
373+  89AB CC 4A 87         call z,Inicia_Puntero_Disparo_Entidades
374+  89AE C1               pop bc
375+  89AF 28 3A            jr z,4F
376+  89B1
377+  89B1 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
378+  89B4 23               inc hl
379+  89B5 23               inc hl
380+  89B6 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
381+  89B9              ;                                                   ; _ Disparo_(+1).
382+  89B9 CD 88 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
383+  89BC              ;                                                   ; _ los 8 bytes que definen el disparo:
384+  89BC              ;
385+  89BC              ;                                                     Puntero_objeto_disparo en IY.
386+  89BC              ;                                                     Rutinas_de_impresion en IX.
387+  89BC              ;                                                     Puntero_de_impresion en HL.
388+  89BC              ;                                                     Impacto/Dirección en BC.
389+  89BC
390+  89BC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
391+  89BD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
392+  89BE 23               inc hl                                          ; _ al siguiente.
393+  89BF A7               and a
394+  89C0 20 C0            jr nz,3B
395+  89C2
396+  89C2 08               ex af,af
397+  89C3 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
398+  89C7 F9               ld sp,hl
399+  89C8
400+  89C8 DD E5            push ix                                         ; Rutina de impresión.
401+  89CA F5               push af                                         ; Puntero de impresión.
402+  89CB FD E5            push iy                                         ; Puntero objeto.
403+  89CD C5               push bc                                         ; Control.
404+  89CE
405+  89CE ED 7B D9 85      ld sp,(Stack)
406+  89D2
407+  89D2              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
408+  89D2
409+  89D2 21 D0 85     	ld hl,Ctrl_1
410+  89D5 CB C6        	set 0,(hl)
411+  89D7
412+  89D7 DD E5        	push ix
413+  89D9 E1               pop hl
414+  89DA F5               push af
415+  89DB DD E1            pop ix
416+  89DD
417+  89DD CD A0 7F     	call Guarda_foto_registros
418+  89E0
419+  89E0 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
420+  89E3 CB 86        	res 0,(hl)
421+  89E5
422+  89E5              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
423+  89E5              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
424+  89E5
425+  89E5 CD 51 87         call Inicia_Puntero_Disparo_Amadeus
426+  89E8 CD 4A 87         call Inicia_Puntero_Disparo_Entidades
427+  89EB
428+  89EB C9           4 ret
429+  89EC
430+  89EC              ; ----------------------------------------------------------------
431+  89EC              ;
432+  89EC              ;   4/3/23
433+  89EC              ;
434+  89EC              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
435+  89EC              ;   _ al generarse el disparo.
436+  89EC              ;       "$80" ..... No se produce colisión.
437+  89EC              ;       "$81" ..... Se produce colisión.
438+  89EC
439+  89EC E5           Comprueba_Colision push hl
440+  89ED 1E 80            ld e,$80                                       ; E,(Impacto)="0".
441+  89EF CD 04 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
442+  89F2
443+  89F2 7B               ld a,e
444+  89F3 E6 01            and 1
445+  89F5 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
446+  89F7
447+  89F7              ; Hay impacto.
448+  89F7
449+  89F7 43           2 ld b,e
450+  89F8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
451+  89F9 C9           3 ret
452+  89FA
453+  89FA E1           1 pop hl
454+  89FB E5               push hl
455+  89FC CD E1 8D         call NextScan
456+  89FF CD 04 8A         call Bucle_2
457+  8A02 18 F3            jr 2B
458+  8A04
459+  8A04              ; ---------- ----------
460+  8A04
461+  8A04 06 02        Bucle_2 ld b,2
462+  8A06 7E           2 ld a,(hl)
463+  8A07 A7               and a
464+  8A08 20 04            jr nz,1F
465+  8A0A 23               inc hl
466+  8A0B 10 F9            djnz 2B
467+  8A0D C9           3 ret
468+  8A0E 1E 81        1 ld e,$81
469+  8A10 18 FB            jr 3B
470+  8A12
471+  8A12              ; -------------------------------------------------------------------------------------------------------------
472+  8A12              ;
473+  8A12              ;   13/03/23
474+  8A12              ;
475+  8A12              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
476+  8A12              ;
477+  8A12              ;   DESTRUYE: HL,BC,DE y A.
478+  8A12
479+  8A12 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
480+  8A15 7E               ld a,(hl)
481+  8A16 A7               and a
482+  8A17 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
483+  8A18
484+  8A18 44               ld b,h
485+  8A19 4D               ld c,l
486+  8A1A 2A DF 85         ld hl,(Stack_snapshot_disparos)
487+  8A1D E5               push hl
488+  8A1E A7               and a
489+  8A1F ED 42            sbc hl,bc
490+  8A21 E5               push hl
491+  8A22 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
492+  8A23
493+  8A23 E1               pop hl
494+  8A24 54               ld d,h
495+  8A25 5D               ld e,l
496+  8A26 1B               dec de
497+  8A27 ED B8            lddr                                                ; Limpiamos.
498+  8A29
499+  8A29 21 60 70         ld hl,Album_de_fotos_disparos
500+  8A2C 22 DF 85         ld (Stack_snapshot_disparos),hl
501+  8A2F
502+  8A2F C9               ret
503+  8A30
504+  8A30              ; -------------------------------------------------------------------------------------------------------------
505+  8A30              ;
506+  8A30              ;   14/03/23
507+  8A30              ;
508+  8A30
509+  8A30 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
510+  8A33 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
511+  8A36
512+  8A36 CD 88 87     2 call Extrae_address
513+  8A39 7E               ld a,(hl)
514+  8A3A A7               and a
515+  8A3B 28 0D            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
516+  8A3D
517+  8A3D              ; ----- ----- ----- ----- ----- -----
518+  8A3D
519+  8A3D C5               push bc
520+  8A3E CD 87 8A         call foto_disparo_a_borrar
521+  8A41 CD B0 8A         call Mueve_disparo
522+  8A44 CD 87 8A         call foto_disparo_a_borrar
523+  8A47 C1               pop bc
524+  8A48
525+  8A48 18 04            jr 7F
526+  8A4A
527+  8A4A              ; ----- ----- ----- ----- ----- -----
528+  8A4A
529+  8A4A ED 42        1 sbc hl,bc
530+  8A4C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
531+  8A4E
532+  8A4E 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
533+  8A51 23               inc hl
534+  8A52 23               inc hl
535+  8A53 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
536+  8A56 18 DE            jr 2B
537+  8A58
538+  8A58 CD 51 87     3 call Inicia_Puntero_Disparo_Amadeus
539+  8A5B
540+  8A5B 01 66 84         ld bc,Disparo_11
541+  8A5E 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
542+  8A61
543+  8A61 CD 88 87     5 call Extrae_address
544+  8A64 7E               ld a,(hl)
545+  8A65 A7               and a
546+  8A66 28 0D            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
547+  8A68
548+  8A68              ; ----- ----- ----- ----- ----- -----
549+  8A68
550+  8A68 C5               push bc
551+  8A69
552+  8A69 CD 87 8A         call foto_disparo_a_borrar
553+  8A6C CD B0 8A         call Mueve_disparo
554+  8A6F CD 87 8A         call foto_disparo_a_borrar
555+  8A72
556+  8A72 C1               pop bc
557+  8A73
558+  8A73 18 04            jr 8F
559+  8A75
560+  8A75              ; ----- ----- ----- ----- ----- -----
561+  8A75
562+  8A75 ED 42        4 sbc hl,bc
563+  8A77 28 0A            jr z,6F
564+  8A79
565+  8A79 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
566+  8A7C 23               inc hl
567+  8A7D 23               inc hl
568+  8A7E 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
569+  8A81 18 DE            jr 5B
570+  8A83
571+  8A83 CD 4A 87     6 call Inicia_Puntero_Disparo_Entidades
572+  8A86 C9               ret
573+  8A87
574+  8A87              ; ------------------------------------------------------------------
575+  8A87
576+  8A87              foto_disparo_a_borrar
577+  8A87
578+  8A87 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
579+  8A88 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
580+  8A89 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
581+  8A8A
582+  8A8A E5               push hl
583+  8A8B 23               inc hl
584+  8A8C 23               inc hl
585+  8A8D ED 73 D9 85      ld (Stack),sp
586+  8A91 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
587+  8A92 FD E1            pop iy
588+  8A94 DD E1            pop ix
589+  8A96 E1               pop hl
590+  8A97 ED 7B D9 85      ld sp,(Stack)
591+  8A9B 3A D0 85         ld a,(Ctrl_1)
592+  8A9E CB C7            set 0,a
593+  8AA0 32 D0 85         ld (Ctrl_1),a
594+  8AA3 CD A0 7F         call Guarda_foto_registros
595+  8AA6 3A D0 85         ld a,(Ctrl_1)
596+  8AA9 CB 87            res 0,a
597+  8AAB 32 D0 85         ld (Ctrl_1),a
598+  8AAE E1               pop hl
599+  8AAF C9               ret
600+  8AB0
601+  8AB0 E5           Mueve_disparo push hl
602+  8AB1 7E               ld a,(hl)
603+  8AB2 06 04            ld b,4
604+  8AB4 23           1 inc hl
605+  8AB5 10 FD            djnz 1B
606+  8AB7
607+  8AB7 CD 88 87         call Extrae_address
608+  8ABA
609+  8ABA E6 01            and 1
610+  8ABC 28 19            jr z,2F
611+  8ABE
612+  8ABE              ; Disparo hacia arriba, (Amadeus).
613+  8ABE
614+  8ABE              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
615+  8ABE              ; _ de la dificultad.
616+  8ABE
617+  8ABE CD F0 8D         call PreviousScan
618+  8AC1 CD F0 8D         call PreviousScan
619+  8AC4 CD F0 8D         call PreviousScan
620+  8AC7
621+  8AC7              ; Detecta si el disparo de Amadeus sale de pantalla:
622+  8AC7
623+  8AC7 7C               ld a,h
624+  8AC8 FE 40            cp $40
625+  8ACA 30 05            jr nc,3F
626+  8ACC
627+  8ACC              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
628+  8ACC
629+  8ACC CD EA 8A         call Elimina_disparo_de_base_de_datos
630+  8ACF 18 04            jr 4F
631+  8AD1
632+  8AD1 EB           3 ex de,hl
633+  8AD2
634+  8AD2 73               ld (hl),e
635+  8AD3 23               inc hl
636+  8AD4 72               ld (hl),d
637+  8AD5
638+  8AD5 E1           4 pop hl
639+  8AD6 C9               ret
640+  8AD7
641+  8AD7              ; Disparo hacia abajo, (Entidad).
642+  8AD7
643+  8AD7              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
644+  8AD7              ; _ de la dificultad.
645+  8AD7
646+  8AD7 CD E1 8D     2 call NextScan
647+  8ADA CD E1 8D         call NextScan
648+  8ADD CD E1 8D         call NextScan
649+  8AE0
650+  8AE0                ; Detecta si el disparo de la entidad sale de la pantalla.
651+  8AE0
652+  8AE0 7C               ld a,h
653+  8AE1 FE 58            cp $58
654+  8AE3 38 EC            jr c,3B
655+  8AE5
656+  8AE5 CD EA 8A         call Elimina_disparo_de_base_de_datos
657+  8AE8 18 EB            jr 4B
658+  8AEA
659+  8AEA
660+  8AEA              Elimina_disparo_de_base_de_datos
661+  8AEA
662+  8AEA EB               ex de,hl
663+  8AEB 06 04            ld b,4
664+  8AED 2B           1 dec hl
665+  8AEE 10 FD            djnz 1B
666+  8AF0 01 07 00         ld bc,7
667+  8AF3
668+  8AF3 AF               xor a
669+  8AF4 77               ld (hl),a
670+  8AF5 54               ld d,h
671+  8AF6 5D               ld e,l
672+  8AF7 13               inc de
673+  8AF8
674+  8AF8 ED B0            ldir
675+  8AFA
676+  8AFA C9               ret
# file closed: Disparo.asm
844   8AFB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8AFB              ; ******************************************************************************************************************************************************************************************
  2+  8AFB              ;
  3+  8AFB              ; 01/23
  4+  8AFB              ;
  5+  8AFB              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8AFB
  7+  8AFB CD D5 8D     Draw call Prepara_draw
  8+  8AFE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8AFF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8B00 28 05        	jr z,2F
 11+  8B02
 12+  8B02 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8B05 18 0C        	jr 1F
 14+  8B07 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8B0A 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8B0D CD 9C 8C     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8B10              ;													; _la esquina superior izquierda de la pantalla.
 18+  8B10 CD 0A 95     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8B13 3A C3 85     1 ld a,(Ctrl_0)
 20+  8B16 CB 6F        	bit 5,a
 21+  8B18 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8B1A
 23+  8B1A CD 32 8B     	call Comprueba_limite_horizontal
 24+  8B1D CD C2 8B     	call Comprueba_limite_vertical
 25+  8B20
 26+  8B20              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8B20
 28+  8B20 CD 0F 8D     3 call calcula_CColumnass
 29+  8B23 CD 46 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8B26 CD 9B 8D     	call Define_rutina_de_impresion
 31+  8B29
 32+  8B29 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8B2C CB AF        	res 5,a											; _a ser de utilidad.
 34+  8B2E 32 C3 85     	ld (Ctrl_0),a
 35+  8B31
 36+  8B31 C9           	ret
 37+  8B32
 38+  8B32              ; *******************************************************************************************************************************************************************************************
 39+  8B32              ;	21/01/23
 40+  8B32              ;
 41+  8B32              ; 	Comprueba_limite_horizontal.
 42+  8B32              ;
 43+  8B32              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8B32              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8B32              ;
 46+  8B32              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8B32              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8B32              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8B32              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8B32
 51+  8B32
 52+  8B32
 53+  8B32 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8B35 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8B37 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8B39 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8B3B 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8B3E 18 09            jr 6F
 59+  8B40 CB 5F        1 bit 3,a
 60+  8B42 28 0A            jr z,2F
 61+  8B44 E6 F7            and $f7
 62+  8B46 32 C3 85         ld (Ctrl_0),a
 63+  8B49 CD 9C 8C     6 call Inicializacion
 64+  8B4C 18 5B            jr 5F
 65+  8B4E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8B4F
 67+  8B4F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8B4F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8B4F
 70+  8B4F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8B50 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8B53 CD A1 90     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8B56 67           	ld h,a
 74+  8B57 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8B58 CD A1 90     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8B5B 67           	ld h,a
 77+  8B5C A7           	and a
 78+  8B5D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8B5F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8B60 3A AA 85     	ld a,(Cuad_objeto)
 81+  8B63 FE 02        	cp 2
 82+  8B65 38 1E        	jr c,3F
 83+  8B67 28 1C        	jr z,3F
 84+  8B69 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8B6A 28 23            jr z,7F
 86+  8B6C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8B6E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8B70 E1           	pop hl
 89+  8B71
 90+  8B71              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8B71              ; _para indicar con E="2" en caso necesario.
 92+  8B71
 93+  8B71 E5               push hl
 94+  8B72 C5               push bc
 95+  8B73 CD A1 90     	call calcula_tercio
 96+  8B76 FE 01        	cp 1
 97+  8B78 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8B7A CD AA 8B         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8B7D 28 26            jr z,9F
100+  8B7F 38 24            jr c,9F
101+  8B81 1E 00        11 ld e,0
102+  8B83 18 22            jr 8F
103+  8B85 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8B86 28 07        	jr z, 7F
105+  8B88 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8B8A 1E 00         	ld e,0
107+  8B8C E1           	pop hl
108+  8B8D 18 04        	jr 4F
109+  8B8F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8B91 18 15            jr 10F
111+  8B93
112+  8B93              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8B93              ; _para indicar con E="2" en caso necesario.
114+  8B93
115+  8B93 E5           4 push hl
116+  8B94 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8B95 CD A1 90     	call calcula_tercio
118+  8B98 FE 01        	cp 1
119+  8B9A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8B9C CD AA 8B         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8B9F 28 04            jr z,9F
122+  8BA1 30 02            jr nc,9F
123+  8BA3 18 02        	jr 8F
124+  8BA5 1E 02        9 ld e,2
125+  8BA7 C1           8 pop bc
126+  8BA8 E1           10 pop hl
127+  8BA9 C9           5 ret
128+  8BAA
129+  8BAA              ; --------------------
130+  8BAA              ;
131+  8BAA              ; 25/08/22
132+  8BAA
133+  8BAA CD A1 90     Comprueba_centro call calcula_tercio
134+  8BAD 67               ld h,a
135+  8BAE 08           	ex af,af
136+  8BAF FE 02        	cp 2
137+  8BB1 38 07        	jr c,1F
138+  8BB3 28 05        	jr z,1F
139+  8BB5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8BB8 18 03        	jr 2F
141+  8BBA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8BBD 08           2 ex af,af
143+  8BBE A7               and a
144+  8BBF ED 42            sbc hl,bc
145+  8BC1 C9               ret
146+  8BC2
147+  8BC2              ; *********************************************************************************************************************************************************************************************
148+  8BC2              ;
149+  8BC2              ;   16/8/22
150+  8BC2              ;
151+  8BC2              ;	Comprueba_limite_vertical
152+  8BC2              ;
153+  8BC2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8BC2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8BC2              ;
156+  8BC2
157+  8BC2 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8BC5 7D           	ld a,l
159+  8BC6 E6 1F        	and $1F
160+  8BC8 57           	ld d,a
161+  8BC9 3A CF 85     	ld a,(Limite_vertical)
162+  8BCC BA           	cp d 											; Límite - Posición.
163+  8BCD 08           	ex af,af 										; Resultado de CP d en F'.
164+  8BCE 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8BD1 CB 47        	bit 0,a
166+  8BD3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8BD5
168+  8BD5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8BD5
170+  8BD5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8BD6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8BD8
173+  8BD8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8BD8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8BD8
176+  8BD8 3A 9C 85         ld a,(Coordenada_X)
177+  8BDB 16 0F            ld d,Centro_izquierda
178+  8BDD A7               and a
179+  8BDE 92               sub d 											 ; Posición - Centro_izquierda.
180+  8BDF 28 1E            jr z,3F
181+  8BE1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8BE3              ;                                                    ; _salimos sin modificar nada.
183+  8BE3 18 0E            jr 2F
184+  8BE5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8BE6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8BE8
187+  8BE8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8BE8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8BE8
190+  8BE8 3A 9C 85         ld a,(Coordenada_X)
191+  8BEB 16 10            ld d,Centro_derecha
192+  8BED A7               and a
193+  8BEE 92               sub d
194+  8BEF 28 0E            jr z,3F
195+  8BF1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8BF3              ;                                                    ; _salimos sin modificar nada.
197+  8BF3 CB 43        2 bit 0,e
198+  8BF5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8BF7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8BF8 CD 8C 8C         call Modificaccionne
201+  8BFB C1           	pop bc
202+  8BFC CD 9C 8C         call Inicializacion
203+  8BFF C9           3 ret 				 								 ; Salimos de la rutina.
204+  8C00
205+  8C00              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8C00
207+  8C00 C5           4 push bc
208+  8C01 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8C04 0A           	ld a,(bc)
210+  8C05 3D           	dec a
211+  8C06 47           	ld b,a 											 ; Columnas-1 en B.
212+  8C07 7D           	ld a,l
213+  8C08 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8C09 CB 47        	bit 0,a
215+  8C0B 28 03        	jr z,5F
216+  8C0D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8C0E 18 2E        	jr 7F
218+  8C10
219+  8C10              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8C10
221+  8C10 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8C11 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8C12 3A C3 85     	ld a,(Ctrl_0)
224+  8C15 CB 4F        	bit 1,a
225+  8C17 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8C19 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8C1A
228+  8C1A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8C1A
230+  8C1A 1C               inc e
231+  8C1B 1D               dec e
232+  8C1C 20 07            jr nz,12F
233+  8C1E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8C1F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8C20 22 98 85     	ld (Posicion_actual),hl
236+  8C23 18 44        13 jr 9F
237+  8C25 CB 43        12 bit 0,e
238+  8C27 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8C29              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8C29 C1           	pop bc
241+  8C2A 18 D3        	jr 3B
242+  8C2C 80           14 add b
243+  8C2D 6F               ld l,a
244+  8C2E 22 98 85     	ld (Posicion_actual),hl
245+  8C31 CD 8C 8C         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8C34 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8C36 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8C38 32 C3 85         ld (Ctrl_0),a
249+  8C3B F1           	pop af
250+  8C3C 18 2B        	jr 9F
251+  8C3E
252+  8C3E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8C3E
254+  8C3E F5           7 push af
255+  8C3F 3A C3 85     	ld a,(Ctrl_0)
256+  8C42 CB 47        	bit 0,a
257+  8C44 20 1D        	jr nz,8F
258+  8C46 F1           	pop af
259+  8C47
260+  8C47              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8C47
262+  8C47 1C           	inc e
263+  8C48 1D               dec e
264+  8C49 20 07            jr nz,10F
265+  8C4B 90           	sub b
266+  8C4C 6F               ld l,a
267+  8C4D 22 98 85     	ld (Posicion_actual),hl
268+  8C50 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8C52              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8C52 CB 43        10 bit 0,e
271+  8C54 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8C56              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8C56 C1           	pop bc
274+  8C57 18 A6        	jr 3B
275+  8C59 90           16 sub b
276+  8C5A 6F               ld l,a
277+  8C5B 22 98 85     	ld (Posicion_actual),hl
278+  8C5E CD 8C 8C         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8C61 18 06            jr 9F
280+  8C63 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8C65 32 C3 85         ld (Ctrl_0),a
282+  8C68 F1           	pop af
283+  8C69 C1           9 pop bc
284+  8C6A 1E 00        	ld e,0
285+  8C6C CD 9C 8C         call Inicializacion
286+  8C6F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8C70 08           	ex af,af
288+  8C71 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8C72 18 8B            jr 3B
290+  8C74
291+  8C74              ; --------------------
292+  8C74
293+  8C74 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8C76 CD F0 8D     1 call PreviousScan
295+  8C79 10 FB            djnz 1B
296+  8C7B 22 98 85     	ld (Posicion_actual),hl
297+  8C7E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8C7F C9           	ret
299+  8C80
300+  8C80              ; --------------------
301+  8C80
302+  8C80 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8C82 CD E1 8D     1 call NextScan
304+  8C85 10 FB            djnz 1B
305+  8C87 22 98 85     	ld (Posicion_actual),hl
306+  8C8A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8C8B C9           	ret
308+  8C8C
309+  8C8C              ; --------------------
310+  8C8C              ;
311+  8C8C              ;	22/01/23
312+  8C8C              ;
313+  8C8C              ;	E="1". Hemos cambiado de cuadrante.
314+  8C8C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8C8C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8C8C
317+  8C8C
318+  8C8C              Modificaccionne
319+  8C8C
320+  8C8C 3A AA 85     	ld a,(Cuad_objeto)
321+  8C8F FE 02        	cp 2
322+  8C91 CC 74 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8C94 DC 74 8C         call c,Modifica_Pos_actual
324+  8C97 C8           	ret z
325+  8C98 CD 80 8C         call Modifica_Pos_actual2
326+  8C9B C9               ret
327+  8C9C
328+  8C9C              ; *************************************************************************************************************************************************************************************************
329+  8C9C              ;
330+  8C9C              ;	13/8/22
331+  8C9C              ;
332+  8C9C              ;	Inicializacion
333+  8C9C              ;
334+  8C9C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8C9C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8C9C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8C9C              ;
338+  8C9C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8C9C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8C9C              ;	_ desaparece/aparece.
341+  8C9C
342+  8C9C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8C9C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8C9C              ;
345+  8C9C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8C9C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8C9C              ; 		   [E] ="0"
348+  8C9C
349+  8C9C              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8C9C
351+  8C9C CD A1 90     Inicializacion call calcula_tercio
352+  8C9F 28 36        	jr z,primit
353+  8CA1 E6 02        	and 2
354+  8CA3 20 07        	jr nz,segmit
355+  8CA5 7D           	ld a,l
356+  8CA6 FE 7F        	cp $7f
357+  8CA8 38 2D        	jr c,primit
358+  8CAA 28 2B        	jr z,primit
359+  8CAC CD 09 8D     segmit call column
360+  8CAF 38 13        	jr c,tercuad
361+  8CB1 3E 04        cuarcuad ld a,4
362+  8CB3 32 AA 85     	ld (Cuad_objeto),a
363+  8CB6 21 20 48     	ld hl,$4820
364+  8CB9 22 CD 85     	ld (Limite_horizontal),hl
365+  8CBC 21 CF 85     	ld hl,Limite_vertical
366+  8CBF 36 0D        	ld (hl),$0d
367+  8CC1 08           	ex af,af
368+  8CC2 18 3C        	jr 1F
369+  8CC4              tercuad
370+  8CC4 3E 03        	ld a,3
371+  8CC6 32 AA 85     	ld (Cuad_objeto),a
372+  8CC9 21 20 48     	ld hl,$4820
373+  8CCC 22 CD 85     	ld (Limite_horizontal),hl
374+  8CCF 21 CF 85     	ld hl,Limite_vertical
375+  8CD2 36 12        	ld (hl),$12
376+  8CD4 08           	ex af,af
377+  8CD5 18 29        	jr 1F
378+  8CD7 CD 09 8D     primit call column
379+  8CDA 38 13        	jr c, primcuad
380+  8CDC              segcuad
381+  8CDC 3E 02        	ld a,2
382+  8CDE 32 AA 85     	ld (Cuad_objeto),a
383+  8CE1 21 C0 4F     	ld hl,$4fc0
384+  8CE4 22 CD 85     	ld (Limite_horizontal),hl
385+  8CE7 21 CF 85     	ld hl,Limite_vertical
386+  8CEA 36 0D        	ld (hl),$0d
387+  8CEC 08           	ex af,af
388+  8CED 18 11        	jr 1F
389+  8CEF              primcuad
390+  8CEF 3E 01        	ld a,1
391+  8CF1 32 AA 85     	ld (Cuad_objeto),a
392+  8CF4 21 C0 4F     	ld hl,$4fc0
393+  8CF7 22 CD 85     	ld (Limite_horizontal),hl
394+  8CFA 21 CF 85     	ld hl,Limite_vertical
395+  8CFD 36 12        	ld (hl),$12
396+  8CFF 08           	ex af,af
397+  8D00 CD D3 93     1 call Genera_coordenadas
398+  8D03 21 C3 85     	ld hl,Ctrl_0
399+  8D06 CB EE        	set 5,(hl)
400+  8D08 C9           	ret
401+  8D09
402+  8D09              ; ------------------------------------------------------------------------------------------------------------------
403+  8D09
404+  8D09              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8D09              ;
406+  8D09              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8D09
408+  8D09 7D           column ld a,l
409+  8D0A E6 1F        	and $1f
410+  8D0C FE 10         	cp $10
411+  8D0E C9            	ret
412+  8D0F
413+  8D0F              ; --------------------------------------------------------------------------------------------------------------------
414+  8D0F              ;
415+  8D0F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8D0F              ;
417+  8D0F              ; 14/12/22
418+  8D0F              ;
419+  8D0F              ;	Modifica: A y BC.
420+  8D0F
421+  8D0F 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8D12 E6 01        	and 1
423+  8D14 28 17        	jr z,1F
424+  8D16
425+  8D16              ; Nos encontramos en la parte izquierda de la pantalla
426+  8D16
427+  8D16 3A 9C 85     	ld a,(Coordenada_X)
428+  8D19 47           	ld b,a
429+  8D1A 04           	inc b											; (Coordenada_X)+1 en B.
430+  8D1B 79           	ld a,c
431+  8D1C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8D1D 38 08        	jr c,2F
433+  8D1F 47           	ld b,a
434+  8D20 79           	ld a,c
435+  8D21 90           	sub b
436+  8D22 32 CC 85     	ld (Columnas),a
437+  8D25 18 1B        	jr 4F
438+  8D27 79           2 ld a,c
439+  8D28 32 CC 85     	ld (Columnas),a
440+  8D2B 18 15        	jr 4F
441+  8D2D
442+  8D2D              ; Nos encontramos en la parte derecha de la pantalla.
443+  8D2D
444+  8D2D 3A 9C 85     1 ld a,(Coordenada_X)
445+  8D30 81           	add c
446+  8D31 3D           	dec a
447+  8D32 D6 1F        	sub $1f
448+  8D34 38 08        	jr c,3F
449+  8D36 47           	ld b,a
450+  8D37 79           	ld a,c
451+  8D38 90           	sub b
452+  8D39 32 CC 85     	ld (Columnas),a
453+  8D3C 18 04        	jr 4F
454+  8D3E 79           3 ld a,c
455+  8D3F 32 CC 85     	ld (Columnas),a
456+  8D42 D9           4 exx
457+  8D43 4F           	ld c,a
458+  8D44 D9           	exx
459+  8D45 C9            ret
460+  8D46
461+  8D46              ; --------------------------------------------------------------------------------------------------------------------
462+  8D46              ;
463+  8D46              ; 7/1/23
464+  8D46              ;
465+  8D46              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8D46              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8D46              ;
468+  8D46              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8D46              ;	DESTRUYE: HL,B Y A.
470+  8D46
471+  8D46 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8D49 FE 02        	cp 2
473+  8D4B 38 18        	jr c,1F
474+  8D4D 28 16        	jr z,1F
475+  8D4F E6 01        	and 1
476+  8D51 28 0D        	jr z,3F
477+  8D53
478+  8D53              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8D53
480+  8D53 CD 8F 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8D56
482+  8D56 7D           9 ld a,l
483+  8D57 E6 1F        	and $1f
484+  8D59 28 2A        	jr z,7F
485+  8D5B 2B           	dec hl
486+  8D5C 10 F8        	djnz 9B
487+  8D5E 18 25        	jr 7F
488+  8D60
489+  8D60              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8D60
491+  8D60 2A 98 85     3 ld hl,(Posicion_actual)
492+  8D63 18 20        	jr 7F
493+  8D65
494+  8D65 28 14        1 jr z,2F
495+  8D67
496+  8D67              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8D67
498+  8D67 CD 8F 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8D6A 7D           4 ld a,l
500+  8D6B E6 1F        	and $1f
501+  8D6D 28 03        	jr z,6F
502+  8D6F 2B           	dec hl
503+  8D70 10 F8        	djnz 4B
504+  8D72 06 0F        6 ld b,15
505+  8D74 CD F0 8D     5 call PreviousScan
506+  8D77 10 FB        	djnz 5B
507+  8D79 18 0A        	jr 7F
508+  8D7B
509+  8D7B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8D7B
511+  8D7B CD 8F 8D     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8D7E 06 0F        	ld b,15
513+  8D80 CD F0 8D     8 call PreviousScan
514+  8D83 10 FB        	djnz 8B
515+  8D85
516+  8D85 E5           7 push hl
517+  8D86 DD E1        	pop ix
518+  8D88
519+  8D88 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8D8B E5           	push hl
521+  8D8C FD E1        	pop iy
522+  8D8E
523+  8D8E C9           	ret
524+  8D8F
525+  8D8F              ; --------------------------------------------------------------------------------------------------------------------
526+  8D8F              ;
527+  8D8F              ;	2/1/23
528+  8D8F              ;
529+  8D8F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8D8F              ;
531+  8D8F              ;	Tras esta rutina tenemos:
532+  8D8F              ;
533+  8D8F              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8D8F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8D8F              ;
536+  8D8F              ;	DESTRUYE!!!!! HL,B y A.
537+  8D8F
538+  8D8F 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8D92 3A CC 85     	ld a,(Columnas)
540+  8D95 3D           	dec a
541+  8D96 20 01        	jr nz,1F
542+  8D98 3C           	inc a
543+  8D99 47           1 ld b,a
544+  8D9A C9           	ret
545+  8D9B
546+  8D9B              ; --------------------------------------------------------------------------------------------------------------------
547+  8D9B              ;
548+  8D9B              ;	3/1/23
549+  8D9B              ;
550+  8D9B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8D9B              ;
552+  8D9B              ;	Destruye: A,B,HL y DE.
553+  8D9B
554+  8D9B              Define_rutina_de_impresion
555+  8D9B
556+  8D9B 3A 97 85     	ld a,(Columns)
557+  8D9E 47           	ld b,a
558+  8D9F 3A CC 85     	ld a,(Columnas)
559+  8DA2 B8           	cp b
560+  8DA3 20 0D        	jr nz,2f
561+  8DA5
562+  8DA5              ;	La entidad se imprime entera.
563+  8DA5
564+  8DA5 21 71 8E     	ld hl, Indice_entidades_completas
565+  8DA8 E6 01        	and 1
566+  8DAA 28 02        	jr z,1F
567+  8DAC
568+  8DAC 23           	inc hl
569+  8DAD 23           	inc hl
570+  8DAE
571+  8DAE CD 88 87     1 call Extrae_address
572+  8DB1 C9           	ret		;	ret
573+  8DB2
574+  8DB2              ;	La entidad no se imprime entera en pantalla.
575+  8DB2
576+  8DB2 3A AA 85     2 ld a,(Cuad_objeto)
577+  8DB5 E6 01        	and 1
578+  8DB7 28 17        	jr z,3F
579+  8DB9
580+  8DB9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8DB9
582+  8DB9 21 75 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8DBC 3A 97 85     4 ld a,(Columns)
584+  8DBF E6 01        	and 1
585+  8DC1 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8DC3
587+  8DC3 23           	inc hl
588+  8DC4 23           	inc hl
589+  8DC5
590+  8DC5 3A CC 85     	ld a,(Columnas)
591+  8DC8 E6 01        	and 1
592+  8DCA 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8DCC
594+  8DCC 23           	inc hl
595+  8DCD 23           	inc hl
596+  8DCE
597+  8DCE 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8DD0
599+  8DD0 21 7B 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8DD3 18 E7        	jr 4B
601+  8DD5
602+  8DD5              ; --------------------------------------------------------------------------------------------------------------------
603+  8DD5              ;
604+  8DD5              ;	Prepara_draw
605+  8DD5              ;
606+  8DD5              ;	Es una rutina de carga.
607+  8DD5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8DD5              ;
609+  8DD5              ;	FUNCIONAMIENTO:
610+  8DD5              ;
611+  8DD5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8DD5              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8DD5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8DD5              ;
615+  8DD5              ;	DESTRUYE:
616+  8DD5              ;
617+  8DD5              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8DD5
619+  8DD5 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8DD8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8DD9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8DDA 4E           	ld c,(hl)
623+  8DDB 2A 98 85     	ld hl,(Posicion_actual)
624+  8DDE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8DE0 C9           	ret
626+  8DE1
627+  8DE1              ;----------------------------------------------------------------------------------------------------------------
628+  8DE1              ;
629+  8DE1              ;	5/08/22
630+  8DE1              ;
631+  8DE1              ;   NextScan.
632+  8DE1              ;
633+  8DE1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8DE1              ;
635+  8DE1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8DE1              ;
637+  8DE1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8DE1              ;
639+  8DE1              ;       DESTRUIDOS: AF y HL !!!
640+  8DE1              ;
641+  8DE1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8DE1              ;
643+  8DE1
644+  8DE1 24           NextScan inc h          ; Incrementamos el scanline.
645+  8DE2 7C               ld a,h
646+  8DE3 E6 07            and 7
647+  8DE5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8DE6
649+  8DE6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8DE7 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8DE9 6F               ld l,a
652+  8DEA D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8DEB
654+  8DEB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8DEC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8DEE 67               ld h,a
657+  8DEF C9               ret
658+  8DF0
659+  8DF0              ;----------------------------------------------------------------------------------------------------------------
660+  8DF0              ;
661+  8DF0              ;	5/08/22
662+  8DF0              ;
663+  8DF0              ;   PreviousScan.
664+  8DF0              ;
665+  8DF0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8DF0              ;
667+  8DF0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8DF0              ;
669+  8DF0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8DF0              ;
671+  8DF0              ;       DESTRUIDOS: AF y HL !!!
672+  8DF0              ;
673+  8DF0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8DF0              ;
675+  8DF0
676+  8DF0 7C           PreviousScan ld a,h
677+  8DF1 25               dec h               ; Dec H.
678+  8DF2 E6 07            and 7
679+  8DF4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8DF5
681+  8DF5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8DF6 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8DF8 6F               ld l,a
684+  8DF9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8DFA
686+  8DFA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8DFB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8DFD 67               ld h,a
689+  8DFE C9               ret
690+  8DFF
691+  8DFF              ; -----------------------------------------------------------------------------------
692+  8DFF              ;
693+  8DFF              ;	28/2/23
694+  8DFF              ;
695+  8DFF              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8DFF              ;	Extrae fotos de Album_de_fotos.
697+  8DFF
698+  8DFF 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8E02 A7           	and a
700+  8E03 C8           	ret z
701+  8E04 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8E08 31 00 70     	ld sp,Album_de_fotos
703+  8E0B
704+  8E0B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8E0D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8E0E D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8E0F
708+  8E0F ED 73 DB 85  	ld (Stack_2),sp
709+  8E13 ED 7B D9 85  	ld sp,(Stack)
710+  8E17
711+  8E17              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8E17
713+  8E17 3E CD        	ld a,$cd
714+  8E19 32 21 8E     	ld (Imprime),a
715+  8E1C EB           	ex de,hl
716+  8E1D 22 22 8E     	ld (Imprime+1),hl
717+  8E20 EB           	ex de,hl
718+  8E21
719+  8E21              ; Ejecuta la llamada:	CALL $xx,xx
720+  8E21
721+  8E21 00 00 00     Imprime db 0,0,0
722+  8E24
723+  8E24 3A D8 85     	ld a,(Numero_de_malotes)
724+  8E27 3D           	dec a
725+  8E28 28 09        	jr z,1F
726+  8E2A 32 D8 85      	ld (Numero_de_malotes),a
727+  8E2D
728+  8E2D ED 7B DB 85   	ld sp,(Stack_2)
729+  8E31 18 D8        	jr 2B
730+  8E33
731+  8E33 AF           1 xor a
732+  8E34 32 DB 85     	ld (Stack_2),a
733+  8E37 C9           	ret
734+  8E38
735+  8E38              ; -----------------------------------------------------------------------------------
736+  8E38              ;
737+  8E38              ;	28/2/23
738+  8E38              ;
739+  8E38              ;	Pinta los disparos generados.
740+  8E38
741+  8E38              Extrae_foto_disparos
742+  8E38
743+  8E38 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8E3B A7           	and a
745+  8E3C C8           	ret z
746+  8E3D ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8E41 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8E44
749+  8E44 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8E46 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8E47 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8E48
753+  8E48 ED 73 DB 85  	ld (Stack_2),sp
754+  8E4C ED 7B D9 85  	ld sp,(Stack)
755+  8E50
756+  8E50              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8E50
758+  8E50 3E CD        	ld a,$cd
759+  8E52 32 5A 8E     	ld (Imprime2),a
760+  8E55 EB           	ex de,hl
761+  8E56 22 5B 8E     	ld (Imprime2+1),hl
762+  8E59 EB           	ex de,hl
763+  8E5A
764+  8E5A              ; Ejecuta la llamada:	CALL $xx,xx
765+  8E5A
766+  8E5A 00 00 00     Imprime2 db 0,0,0
767+  8E5D
768+  8E5D 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8E60 3D           	dec a
770+  8E61 28 09        	jr z,1F
771+  8E63 32 E1 85      	ld (Numero_de_disparotes),a
772+  8E66
773+  8E66 ED 7B DB 85  	ld sp,(Stack_2)
774+  8E6A 18 D8        	jr 2B
775+  8E6C
776+  8E6C AF           1 xor a
777+  8E6D 32 DB 85     	ld (Stack_2),a
778+  8E70 C9           	ret
779+  8E71
# file closed: Draw_XOR.asm
845   8E71              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8E71              ;   índices de Rutinas de impresión.
  2+  8E71
  3+  8E71 81 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8E73 AE 8E            defw Pinta_Amadeus_3x2
  5+  8E75
  6+  8E75 04 8F        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8E77 A4 8F            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8E79 58 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8E7B
 10+  8E7B 2E 8F        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8E7D 32 90            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8E7F E6 8F            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8E81
 14+  8E81
 15+  8E81              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8E81              ;
 17+  8E81              ;   12/12/22
 18+  8E81              ;
 19+  8E81              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8E81              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8E81              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8E81              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8E81              ;
 24+  8E81              ;   Modifica: DE y HL.
 25+  8E81
 26+  8E81 ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8E85 FD F9        	ld sp,iy
 28+  8E87 06 10            ld b,16
 29+  8E89 D1           1 pop de
 30+  8E8A 7B               ld a,e
 31+  8E8B AE               xor (hl)
 32+  8E8C 77           	ld (hl),a
 33+  8E8D 23           	inc hl
 34+  8E8E 7A               ld a,d
 35+  8E8F AE               xor (hl)
 36+  8E90 77           	ld (hl),a
 37+  8E91 2B           	dec hl
 38+  8E92 24           	inc h
 39+  8E93 7C               ld a,h
 40+  8E94 E6 07            and 7
 41+  8E96 20 0A            jr nz,2F
 42+  8E98 7D               ld a,l
 43+  8E99 C6 20            add a,$20
 44+  8E9B 6F               ld l,a
 45+  8E9C 38 04            jr c,2F
 46+  8E9E 7C               ld a,h
 47+  8E9F D6 08            sub 8
 48+  8EA1 67               ld h,a
 49+  8EA2 7C           2 ld a,h
 50+  8EA3 FE 58            cp $58
 51+  8EA5 28 02            jr z,3F
 52+  8EA7 10 E0            djnz 1B
 53+  8EA9 ED 7B D9 85  3 ld sp,(Stack)
 54+  8EAD C9           	ret
 55+  8EAE
 56+  8EAE ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8EB2 FD F9        	ld sp,iy
 58+  8EB4 06 08            ld b,8
 59+  8EB6 D1           1 pop de
 60+  8EB7 7B               ld a,e
 61+  8EB8 AE               xor (hl)
 62+  8EB9 77           	ld (hl),a
 63+  8EBA 23           	inc hl
 64+  8EBB 7A               ld a,d
 65+  8EBC AE               xor (hl)
 66+  8EBD 77           	ld (hl),a
 67+  8EBE 23           	inc hl
 68+  8EBF D1           	pop de
 69+  8EC0 7B               ld a,e
 70+  8EC1 AE               xor (hl)
 71+  8EC2 77           	ld (hl),a
 72+  8EC3 2B           	dec hl
 73+  8EC4 2B           	dec hl
 74+  8EC5 24           	inc h
 75+  8EC6 7C               ld a,h
 76+  8EC7 E6 07            and 7
 77+  8EC9 20 0A            jr nz,2F
 78+  8ECB 7D               ld a,l
 79+  8ECC C6 20            add a,$20
 80+  8ECE 6F               ld l,a
 81+  8ECF 38 04            jr c,2F
 82+  8ED1 7C               ld a,h
 83+  8ED2 D6 08            sub 8
 84+  8ED4 67               ld h,a
 85+  8ED5 7C           2 ld a,h
 86+  8ED6 FE 58            cp $58
 87+  8ED8 28 25            jr z,4F
 88+  8EDA 7A               ld a,d
 89+  8EDB AE               xor (hl)
 90+  8EDC 77               ld (hl),a
 91+  8EDD D1           	pop de
 92+  8EDE 23           	inc hl
 93+  8EDF 7B               ld a,e
 94+  8EE0 AE               xor (hl)
 95+  8EE1 77           	ld (hl),a
 96+  8EE2 23           	inc hl
 97+  8EE3 7A               ld a,d
 98+  8EE4 AE               xor (hl)
 99+  8EE5 77           	ld (hl),a
100+  8EE6 2B           	dec hl
101+  8EE7 2B           	dec hl
102+  8EE8 24           	inc h
103+  8EE9 7C               ld a,h
104+  8EEA E6 07            and 7
105+  8EEC 20 0A            jr nz,3F
106+  8EEE 7D               ld a,l
107+  8EEF C6 20            add a,$20
108+  8EF1 6F               ld l,a
109+  8EF2 38 04            jr c,3F
110+  8EF4 7C               ld a,h
111+  8EF5 D6 08            sub 8
112+  8EF7 67               ld h,a
113+  8EF8 7C           3 ld a,h
114+  8EF9 FE 58            cp $58
115+  8EFB 28 02            jr z,4F
116+  8EFD 10 B7            djnz 1B
117+  8EFF ED 7B D9 85  4 ld sp,(Stack)
118+  8F03 C9           	ret
119+  8F04
120+  8F04              ; ---------------------------------------------------
121+  8F04
122+  8F04 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8F08 FD F9        	ld sp,iy
124+  8F0A
125+  8F0A              ; >>>
126+  8F0A
127+  8F0A 06 10            ld b,16
128+  8F0C D1           1 pop de
129+  8F0D 7A           	ld a,d
130+  8F0E AE           	xor (hl)
131+  8F0F 77           	ld (hl),a
132+  8F10 24           	inc h
133+  8F11 7C               ld a,h
134+  8F12 E6 07            and 7
135+  8F14 20 0C            jr nz,2F
136+  8F16 7D               ld a,l
137+  8F17 C6 20            add a,$20
138+  8F19 6F               ld l,a
139+  8F1A 38 06            jr c,2F
140+  8F1C 7C               ld a,h
141+  8F1D D6 08            sub 8
142+  8F1F 67               ld h,a
143+  8F20 18 00            jr 2F
144+  8F22 7C           2 ld a,h
145+  8F23 FE 58            cp $58
146+  8F25 28 02            jr z,3F
147+  8F27 10 E3            djnz 1B
148+  8F29 ED 7B D9 85  3 ld sp,(Stack)
149+  8F2D C9           	ret
150+  8F2E
151+  8F2E ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8F32 FD F9        	ld sp,iy
153+  8F34
154+  8F34              ; >>>
155+  8F34
156+  8F34 06 10            ld b,16
157+  8F36 D1           1 pop de
158+  8F37 7B           	ld a,e
159+  8F38 AE           	xor (hl)
160+  8F39 77           	ld (hl),a
161+  8F3A 24           	inc h
162+  8F3B 7C               ld a,h
163+  8F3C E6 07            and 7
164+  8F3E 20 0C            jr nz,2F
165+  8F40 7D               ld a,l
166+  8F41 C6 20            add a,$20
167+  8F43 6F               ld l,a
168+  8F44 38 06            jr c,2F
169+  8F46 7C               ld a,h
170+  8F47 D6 08            sub 8
171+  8F49 67               ld h,a
172+  8F4A 18 00            jr 2F
173+  8F4C 7C           2 ld a,h
174+  8F4D FE 58            cp $58
175+  8F4F 28 02            jr z,3F
176+  8F51 10 E3            djnz 1B
177+  8F53 ED 7B D9 85  3 ld sp,(Stack)
178+  8F57 C9           	ret
179+  8F58
180+  8F58              ; ---------------------------------------------------
181+  8F58
182+  8F58 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8F5C FD F9        	ld sp,iy
184+  8F5E 06 08            ld b,8
185+  8F60 D1           1 pop de
186+  8F61 7A           	ld a,d
187+  8F62 AE           	xor (hl)
188+  8F63 77           	ld (hl),a
189+  8F64 23           	inc hl
190+  8F65 D1           	pop de
191+  8F66 7B           	ld a,e
192+  8F67 AE           	xor (hl)
193+  8F68 77           	ld (hl),a
194+  8F69 2B           	dec hl
195+  8F6A 24            	inc h
196+  8F6B 7C               ld a,h
197+  8F6C E6 07            and 7
198+  8F6E 20 0A            jr nz,2F
199+  8F70 7D               ld a,l
200+  8F71 C6 20            add a,$20
201+  8F73 6F               ld l,a
202+  8F74 38 04            jr c,2F
203+  8F76 7C               ld a,h
204+  8F77 D6 08            sub 8
205+  8F79 67               ld h,a
206+  8F7A 7C           2 ld a,h
207+  8F7B FE 58            cp $58
208+  8F7D 28 20            jr z,4F
209+  8F7F D1               pop de
210+  8F80 7B           	ld a,e
211+  8F81 AE           	xor (hl)
212+  8F82 77           	ld (hl),a
213+  8F83 23           	inc hl
214+  8F84 7A           	ld a,d
215+  8F85 AE           	xor (hl)
216+  8F86 77           	ld (hl),a
217+  8F87 2B           	dec hl
218+  8F88 24           	inc h
219+  8F89 7C               ld a,h
220+  8F8A E6 07            and 7
221+  8F8C 20 0A            jr nz,3F
222+  8F8E 7D               ld a,l
223+  8F8F C6 20            add a,$20
224+  8F91 6F               ld l,a
225+  8F92 38 04            jr c,3F
226+  8F94 7C               ld a,h
227+  8F95 D6 08            sub 8
228+  8F97 67               ld h,a
229+  8F98 7C           3 ld a,h
230+  8F99 FE 58            cp $58
231+  8F9B 28 02            jr z,4F
232+  8F9D 10 C1            djnz 1B
233+  8F9F ED 7B D9 85  4 ld sp,(Stack)
234+  8FA3 C9           	ret
235+  8FA4
236+  8FA4 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8FA8 FD F9        	ld sp,iy
238+  8FAA 06 08            ld b,8
239+  8FAC D1           1 pop de
240+  8FAD D1           	pop de
241+  8FAE 7B           	ld a,e
242+  8FAF AE           	xor (hl)
243+  8FB0 77           	ld (hl),a
244+  8FB1 24            	inc h
245+  8FB2 7C               ld a,h
246+  8FB3 E6 07            and 7
247+  8FB5 20 0A            jr nz,2F
248+  8FB7 7D               ld a,l
249+  8FB8 C6 20            add a,$20
250+  8FBA 6F               ld l,a
251+  8FBB 38 04            jr c,2F
252+  8FBD 7C               ld a,h
253+  8FBE D6 08            sub 8
254+  8FC0 67               ld h,a
255+  8FC1 7C           2 ld a,h
256+  8FC2 FE 58            cp $58
257+  8FC4 28 1B            jr z,4F
258+  8FC6 D1               pop de
259+  8FC7 7A           	ld a,d
260+  8FC8 AE           	xor (hl)
261+  8FC9 77           	ld (hl),a
262+  8FCA 24           	inc h
263+  8FCB 7C               ld a,h
264+  8FCC E6 07            and 7
265+  8FCE 20 0A            jr nz,3F
266+  8FD0 7D               ld a,l
267+  8FD1 C6 20            add a,$20
268+  8FD3 6F               ld l,a
269+  8FD4 38 04            jr c,3F
270+  8FD6 7C               ld a,h
271+  8FD7 D6 08            sub 8
272+  8FD9 67               ld h,a
273+  8FDA 7C           3 ld a,h
274+  8FDB FE 58            cp $58
275+  8FDD 28 02            jr z,4F
276+  8FDF 10 CB            djnz 1B
277+  8FE1 ED 7B D9 85  4 ld sp,(Stack)
278+  8FE5 C9           	ret
279+  8FE6
280+  8FE6 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8FEA FD F9        	ld sp,iy
282+  8FEC 06 08            ld b,8
283+  8FEE D1           1 pop de
284+  8FEF 7B           	ld a,e
285+  8FF0 AE           	xor (hl)
286+  8FF1 77           	ld (hl),a
287+  8FF2 23           	inc hl
288+  8FF3 7A           	ld a,d
289+  8FF4 AE           	xor (hl)
290+  8FF5 77           	ld (hl),a
291+  8FF6 2B           	dec hl
292+  8FF7 24             	inc h
293+  8FF8 7C               ld a,h
294+  8FF9 E6 07            and 7
295+  8FFB 20 0A            jr nz,2F
296+  8FFD 7D               ld a,l
297+  8FFE C6 20            add a,$20
298+  9000 6F               ld l,a
299+  9001 38 04            jr c,2F
300+  9003 7C               ld a,h
301+  9004 D6 08            sub 8
302+  9006 67               ld h,a
303+  9007 7C           2 ld a,h
304+  9008 FE 58            cp $58
305+  900A 28 21            jr z,4F
306+  900C D1               pop de
307+  900D 7A           	ld a,d
308+  900E AE           	xor (hl)
309+  900F 77           	ld (hl),a
310+  9010 23           	inc hl
311+  9011 D1               pop de
312+  9012 7B           	ld a,e
313+  9013 AE           	xor (hl)
314+  9014 77           	ld (hl),a
315+  9015 2B           	dec hl
316+  9016 24           	inc h
317+  9017 7C               ld a,h
318+  9018 E6 07            and 7
319+  901A 20 0A            jr nz,3F
320+  901C 7D               ld a,l
321+  901D C6 20            add a,$20
322+  901F 6F               ld l,a
323+  9020 38 04            jr c,3F
324+  9022 7C               ld a,h
325+  9023 D6 08            sub 8
326+  9025 67               ld h,a
327+  9026 7C           3 ld a,h
328+  9027 FE 58            cp $58
329+  9029 28 02            jr z,4F
330+  902B 10 C1            djnz 1B
331+  902D ED 7B D9 85  4 ld sp,(Stack)
332+  9031 C9           	ret
333+  9032
334+  9032 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  9036 FD F9        	ld sp,iy
336+  9038 06 08            ld b,8
337+  903A D1           1 pop de
338+  903B 7B           	ld a,e
339+  903C AE           	xor (hl)
340+  903D 77           	ld (hl),a
341+  903E 24            	inc h
342+  903F 7C               ld a,h
343+  9040 E6 07            and 7
344+  9042 20 0A            jr nz,2F
345+  9044 7D               ld a,l
346+  9045 C6 20            add a,$20
347+  9047 6F               ld l,a
348+  9048 38 04            jr c,2F
349+  904A 7C               ld a,h
350+  904B D6 08            sub 8
351+  904D 67               ld h,a
352+  904E 7C           2 ld a,h
353+  904F FE 58            cp $58
354+  9051 28 1C            jr z,4F
355+  9053 D1               pop de
356+  9054 7A           	ld a,d
357+  9055 AE           	xor (hl)
358+  9056 77           	ld (hl),a
359+  9057 24           	inc h
360+  9058 7C               ld a,h
361+  9059 E6 07            and 7
362+  905B 20 0A            jr nz,3F
363+  905D 7D               ld a,l
364+  905E C6 20            add a,$20
365+  9060 6F               ld l,a
366+  9061 38 04            jr c,3F
367+  9063 7C               ld a,h
368+  9064 D6 08            sub 8
369+  9066 67               ld h,a
370+  9067 7C           3 ld a,h
371+  9068 FE 58            cp $58
372+  906A 28 03            jr z,4F
373+  906C D1               pop de
374+  906D 10 CB            djnz 1B
375+  906F ED 7B D9 85  4 ld sp,(Stack)
376+  9073 C9           	ret
377+  9074
378+  9074              ; ---------------------------------------------------
379+  9074              ;
380+  9074              ;   27/02/23
381+  9074              ;
382+  9074              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  9074              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  9074              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  9074
386+  9074 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  9078 FD F9            ld sp,iy
388+  907A 06 02            ld b,2
389+  907C D1           1 pop de
390+  907D 7B               ld a,e
391+  907E AE               xor (hl)
392+  907F 77               ld (hl),a
393+  9080 23               inc hl
394+  9081 7A               ld a,d
395+  9082 AE               xor (hl)
396+  9083 77               ld (hl),a
397+  9084 2B               dec hl
398+  9085
399+  9085 24               inc h
400+  9086 7C               ld a,h
401+  9087 E6 07            and 7
402+  9089 20 0A            jr nz,2F
403+  908B 7D               ld a,l
404+  908C C6 20            add a,$20
405+  908E 6F               ld l,a
406+  908F 38 04            jr c,2F
407+  9091 7C               ld a,h
408+  9092 D6 08            sub 8
409+  9094 67               ld h,a
410+  9095 7C           2 ld a,h
411+  9096 FE 58            cp $58
412+  9098 28 02            jr z,3F
413+  909A
414+  909A 10 E0            djnz 1B
415+  909C ED 7B D9 85  3 ld sp,(Stack)
416+  90A0 C9               ret
417+  90A1
# file closed: Rutinas_de_impresion_sprites.asm
846   90A1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  90A1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  90A1              ;
  3+  90A1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  90A1              ;
  5+  90A1              ; *****************************************************************************************************************************************************************************************
  6+  90A1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  90A1
  8+  90A1 7C           calcula_tercio ld a,h
  9+  90A2 E6 18        	and $18
 10+  90A4 CB 2F        	sra a
 11+  90A6 CB 2F        	sra a
 12+  90A8 CB 2F        	sra a
 13+  90AA C9           	ret
 14+  90AB
# file closed: calcula_tercio.asm
847   90AB              	include "Cls.asm"
# file opened: Cls.asm
  1+  90AB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  90AB              ;
  3+  90AB              ;
  4+  90AB              ;	CLS.
  5+  90AB              ;
  6+  90AB              ;	Limpia la pantalla y define sus atributos.
  7+  90AB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  90AB              ;
  9+  90AB              ;	COLORES: 0 ..... NEGRO
 10+  90AB              ;    		 1 ..... AZUL
 11+  90AB              ; 			 2 ..... ROJO
 12+  90AB              ;			 3 ..... MAGENTA
 13+  90AB              ; 			 4 ..... VERDE
 14+  90AB              ; 			 5 ..... CIAN
 15+  90AB              ;			 6 ..... AMARILLO
 16+  90AB              ; 			 7 ..... BLANCO
 17+  90AB              ;
 18+  90AB              ;	INPUT: A contiene los atributos de pantalla.
 19+  90AB              ;
 20+  90AB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  90AB
 22+  90AB
 23+  90AB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  90AE 11 01 40     	LD DE,$4001
 25+  90B1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  90B4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  90B6 ED B0        	LDIR
 28+  90B8 01 FF 02     	LD BC,767
 29+  90BB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  90BC ED B0        	LDIR
 31+  90BE C9           	ret
 32+  90BF
# file closed: Cls.asm
848   90BF              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  90BF              ; ******************************************************************************************************************************************************************************************
  2+  90BF              ;
  3+  90BF              ;   22/01/23
  4+  90BF              ;
  5+  90BF              ;	Mov_down
  6+  90BF              ;
  7+  90BF              ; 	Mueve el Sprite X px hacia abajo.
  8+  90BF              ;
  9+  90BF              ;
 10+  90BF 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  90C2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  90C4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  90C4              ; 																	; _ en el caso de que no lo haya.
 14+  90C4 3A AE 85     	ld a,(Vel_down)
 15+  90C7 47           	ld b,a
 16+  90C8 2A 98 85         ld hl,(Posicion_actual)
 17+  90CB CD A1 90     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  90CE E6 02        	and 2
 19+  90D0 28 0F        	jr z,1F
 20+  90D2
 21+  90D2              ; Nos encontramos en el último tercio de pantalla.
 22+  90D2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  90D2
 24+  90D2 7C           	ld a,h
 25+  90D3 FE 57        	cp $57
 26+  90D5 20 0A        	jr nz,1F
 27+  90D7 7D           	ld a,l
 28+  90D8 C6 20        	add $20
 29+  90DA 30 05        	jr nc,1F
 30+  90DC
 31+  90DC              ; ------------------------------
 32+  90DC CD BD 93     	call Reaparece_arriba
 33+  90DF              ;	call Reinicio
 34+  90DF              ; ------------------------------
 35+  90DF 18 08        	jr 3F
 36+  90E1 CD E1 8D     1 call NextScan
 37+  90E4 22 98 85     	ld (Posicion_actual),hl
 38+  90E7 10 E2            djnz 2B
 39+  90E9 CD D3 93     3 call Genera_coordenadas
 40+  90EC C9           	ret
 41+  90ED
 42+  90ED
 43+  90ED              ; ******************************************************************************************************************************************************************************************
 44+  90ED              ;
 45+  90ED              ;   22/01/23
 46+  90ED              ;
 47+  90ED              ;	Mov_up
 48+  90ED              ;
 49+  90ED              ; 	Mueve el Sprite hacia arriba.
 50+  90ED              ;
 51+  90ED              ;
 52+  90ED 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  90F0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  90F2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  90F2              ; 																		; _ en el caso de que no lo haya.
 56+  90F2 3A AD 85     	ld a,(Vel_up)
 57+  90F5 47           	ld b,a
 58+  90F6 2A 98 85     	ld hl,(Posicion_actual)
 59+  90F9 CD A1 90     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  90FC A7           	and a
 61+  90FD 20 10        	jr nz,1F
 62+  90FF
 63+  90FF              ; Nos encontramos en el 1er tercio de pantalla.
 64+  90FF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  90FF
 66+  90FF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  9100 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9102 20 0B            jr nz,1F
 69+  9104 7D               ld a,l
 70+  9105 D6 20            sub $20
 71+  9107 30 06            jr nc,1F
 72+  9109 25               dec h
 73+  910A
 74+  910A              ; -----------------------------
 75+  910A CD AD 93         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  910D              ;	call Reinicio
 77+  910D              ; -----------------------------
 78+  910D
 79+  910D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  910F CD F0 8D     1 call PreviousScan
 81+  9112 22 98 85     	ld (Posicion_actual),hl
 82+  9115 10 E2            djnz 3B
 83+  9117 CD D3 93     2 call Genera_coordenadas
 84+  911A C9           	ret
 85+  911B
 86+  911B              ; ******************************************************************************************************************************************************************************************
 87+  911B              ;
 88+  911B              ;	19/10/22
 89+  911B              ;
 90+  911B              ;	Mov_right.
 91+  911B              ;
 92+  911B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  911B              ;
 94+  911B
 95+  911B 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  911E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9120              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9120              ; 																	; _ en el caso de que no lo haya.
 99+  9120 3A C3 85     	ld a,(Ctrl_0)
100+  9123 CB 77        	bit 6,a
101+  9125 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9127
103+  9127 CD 5B 93     	call Stop_Amadeus_right
104+  912A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  912B 18 4D        	jr 8F
106+  912D
107+  912D 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9130 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9132 20 46        	jr nz,8F
110+  9134
111+  9134 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9137 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9138 28 40        	jr z,8F
114+  913A
115+  913A              ; ---------- ---------- ----------
116+  913A              ;
117+  913A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  913A
119+  913A 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  913D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  913F 28 11        	jr z,1F
122+  9141 38 06        	jr c,6F
123+  9143 FE 04        	cp 4
124+  9145 28 14        	jr z,7F
125+  9147 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9149
127+  9149              ; ---------- ---------- ----------
128+  9149              ;
129+  9149              ; Perfiles de velocidad
130+  9149              ;
131+  9149
132+  9149 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  914C FE FE        	cp $fe
134+  914E 20 2A        	jr nz,8F
135+  9150 18 10        	jr 3F
136+  9152 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9155 FE FD        	cp $fd
138+  9157 20 21        	jr nz,8F
139+  9159 18 07        	jr 3F
140+  915B 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  915E FE FB        	cp $fb
142+  9160 20 18        	jr nz,8F
143+  9162
144+  9162              ; ---------- ---------- ----------
145+  9162
146+  9162              3
147+  9162 CD 9B 93     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9165              ;	call Reinicio
149+  9165
150+  9165              ; ---------- ---------- ----------
151+  9165              ;
152+  9165              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9165
154+  9165 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9167 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9168 CD 81 91     	call DESPLZ_DER
157+  916B C1           	pop bc
158+  916C 10 F9        	djnz 5B
159+  916E 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9171 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9172 22 98 85     	ld (Posicion_actual),hl
162+  9175 CD D3 93     	call Genera_coordenadas
163+  9178 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  917A
165+  917A              ; ---------- ---------- ----------
166+  917A
167+  917A 2A 98 85     8 ld hl,(Posicion_actual)
168+  917D CD 81 91     	call DESPLZ_DER
169+  9180 C9           2 ret
170+  9181
171+  9181              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9181              ;
173+  9181              ;	22/9/22
174+  9181              ;
175+  9181
176+  9181 CD 90 91     DESPLZ_DER call Desplaza_derecha
177+  9184 CD DC 91         call modifica_parametros_1er_DESPLZ_2
178+  9187 CD 05 92         call Ciclo_completo
179+  918A 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  918D CB FE        	set 7,(hl)
181+  918F C9           	ret
182+  9190
183+  9190              ; ******************************************************************************************************************************************************************************************
184+  9190              ;	15/02/23
185+  9190              ;
186+  9190
187+  9190 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  9193 47           	ld b,a
189+  9194 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  9197 23           1 inc hl
191+  9198 23           	inc hl
192+  9199 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  919B 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  919E CD 88 87     	call Extrae_address
195+  91A1 22 9A 85     	ld (Puntero_objeto),hl
196+  91A4
197+  91A4              ; Modifica (Puntero_DESPLZ_izq).
198+  91A4
199+  91A4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  91A4              ; Cuántos movimientos hemos hecho ??
201+  91A4              ; DE contiene (Puntero_DESPLZ_der).
202+  91A4
203+  91A4 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  91A7 EB           	ex de,hl
205+  91A8 A7           	and a
206+  91A9 ED 52        	sbc hl,de
207+  91AB CB 3D        	srl l
208+  91AD 3E 08        6 ld a,8
209+  91AF 95           	sub l
210+  91B0 30 1E        	jr nc,3F
211+  91B2
212+  91B2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  91B2              ; B="0".
214+  91B2
215+  91B2 04           4 inc b
216+  91B3 3C           	inc a
217+  91B4 20 FC        	jr nz,4B
218+  91B6 78           	ld a,b
219+  91B7 08           	ex af,af
220+  91B8 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  91BB 23           5 inc hl
222+  91BC 23           	inc hl
223+  91BD 10 FC        	djnz 5B
224+  91BF 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  91C2 CD 88 87     	call Extrae_address
226+  91C5 22 9A 85     	ld (Puntero_objeto),hl
227+  91C8
228+  91C8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  91C8              ; _(Posicion_actual).
230+  91C8
231+  91C8 21 98 85     	ld hl,Posicion_actual
232+  91CB 34           	inc (hl)
233+  91CC 08               ex af,af
234+  91CD 6F           	ld l,a
235+  91CE 18 DD        	jr 6B
236+  91D0
237+  91D0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  91D0
239+  91D0 47           3 ld b,a
240+  91D1 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  91D4 23           2 inc hl
242+  91D5 23           	inc hl
243+  91D6 10 FC        	djnz 2B
244+  91D8 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  91DB C9           8 ret
246+  91DC
247+  91DC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  91DC              ;
249+  91DC              ;	24/7/22
250+  91DC              ;
251+  91DC              ;	modifica_parametros_1er_DESPLZ_2
252+  91DC              ;
253+  91DC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  91DC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  91DC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  91DC
257+  91DC 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  91DF A7           	and a
259+  91E0 20 1F        	jr nz,1F
260+  91E2 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  91E4 32 9E 85         ld (CTRL_DESPLZ),a
262+  91E7
263+  91E7 21 97 85     	ld hl,Columns
264+  91EA 34           	inc (hl)
265+  91EB 3A AA 85     	ld a,(Cuad_objeto)
266+  91EE E6 01        	and 1
267+  91F0 28 0F        	jr z,1F
268+  91F2 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  91F5 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  91F6 22 98 85     	ld (Posicion_actual),hl
271+  91F9 CD D3 93     	call Genera_coordenadas
272+  91FC CD 67 93     	call Inc_CTRL_DESPLZ
273+  91FF 18 03        	jr 2F
274+  9201 CD 67 93     1 call Inc_CTRL_DESPLZ
275+  9204 C9           2 ret
276+  9205
277+  9205              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9205              ;
279+  9205              ;	24/7/22
280+  9205              ;
281+  9205              ;	Ciclo_completo.
282+  9205              ;
283+  9205              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9205              ;
285+  9205              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9205              ; 	Decrementamos (Columns).
287+  9205              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9205              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9205
290+  9205
291+  9205 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9208 FE FF        	cp $ff
293+  920A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  920C E6 F0        	and $f0
295+  920E 20 28        	jr nz,3F
296+  9210
297+  9210              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9210
299+  9210 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9213 47           	ld b,a
301+  9214 3E F8        	ld a,$f8
302+  9216 80           	add b
303+  9217 32 9E 85     	ld (CTRL_DESPLZ),a
304+  921A 18 1C        	jr 3F
305+  921C 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  921F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9220 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9221 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9224 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9227 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9229 20 0A        	jr nz,2F
312+  922B 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  922E 23           	inc hl
314+  922F 22 98 85     	ld (Posicion_actual),hl
315+  9232 CD D3 93     	call Genera_coordenadas
316+  9235
317+  9235              ; Inicia el puntero de Sprite.
318+  9235
319+  9235 CD 9F 87     2 call Inicia_puntero_objeto_der
320+  9238 C9           3 ret
321+  9239
322+  9239              ; ******************************************************************************************************************************************************************************************
323+  9239              ;
324+  9239              ;	15/02/23
325+  9239              ;
326+  9239              ;	Mov_left.
327+  9239              ;
328+  9239              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9239              ;
330+  9239              Mov_left
331+  9239
332+  9239 21 C3 85     	ld hl,Ctrl_0
333+  923C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  923E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  923E              ; 																	; _ en el caso de que no lo haya.
336+  923E 3A C3 85     	ld a,(Ctrl_0)
337+  9241 CB 77        	bit 6,a
338+  9243 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9245
340+  9245 CD 61 93     	call Stop_Amadeus_left
341+  9248 C8           	ret z
342+  9249 20 50        	jr nz,8F
343+  924B
344+  924B 3A 9C 85     11 ld a,(Coordenada_X)
345+  924E A7           	and a
346+  924F 20 4A        	jr nz,8F
347+  9251
348+  9251 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9254 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9255 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9257
352+  9257              ; ---------- ---------- ----------
353+  9257
354+  9257 3A AB 85     	ld a,(Vel_left)
355+  925A FE 02        	cp 2
356+  925C 28 0F        	jr z,1F
357+  925E 38 04        	jr c,6F
358+  9260 FE 04        	cp 4
359+  9262 28 12        	jr z,7F
360+  9264
361+  9264              ; ---------- ---------- ----------
362+  9264
363+  9264 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9267 FE F9        	cp $f9
365+  9269 20 30        	jr nz,8F
366+  926B 18 10        	jr 4F
367+  926D 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  9270 FE FA        	cp $fa
369+  9272 20 27        	jr nz,8F
370+  9274 18 07        	jr 4F
371+  9276 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9279 FE FC        	cp $fc
373+  927B 20 1E        	jr nz,8F
374+  927D
375+  927D              ; ---------- ---------- ----------
376+  927D
377+  927D              4
378+  927D CD 89 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9280              ;	call Reinicio
380+  9280
381+  9280              ; ---------- ---------- ----------
382+  9280
383+  9280 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9282 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  9283
386+  9283 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  9286 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  9289
389+  9289 CD A2 92     	call DESPLZ_IZQ
390+  928C C1           	pop bc
391+  928D 10 F3        	djnz 5B
392+  928F 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9292 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  9293 22 98 85     	ld (Posicion_actual),hl
395+  9296 CD D3 93     	call Genera_coordenadas
396+  9299 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  929B
398+  929B              ; ---------- ---------- ----------
399+  929B              ; Movemos, no hay recolocación.
400+  929B
401+  929B 2A 98 85     8 ld hl,(Posicion_actual)
402+  929E CD A2 92     	call DESPLZ_IZQ
403+  92A1 C9           2 ret
404+  92A2
405+  92A2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  92A2              ;
407+  92A2              ;	22/9/22
408+  92A2
409+  92A2              DESPLZ_IZQ
410+  92A2
411+  92A2 CD B1 92     	call Desplaza_izquierda
412+  92A5 CD FD 92         call modifica_parametros_1er_DESPLZ
413+  92A8 CD 25 93     	call Ciclo_completo_2
414+  92AB 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  92AE CB BE        	res 7,(hl)
416+  92B0 C9           	ret
417+  92B1
418+  92B1              Desplaza_izquierda
419+  92B1
420+  92B1 3A AB 85     	ld a,(Vel_left)
421+  92B4 47           	ld b,a
422+  92B5 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  92B8 23           1 inc hl
424+  92B9 23           	inc hl
425+  92BA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  92BC 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  92BF CD 88 87     	call Extrae_address
428+  92C2 22 9A 85     	ld (Puntero_objeto),hl
429+  92C5
430+  92C5              ; Modifica (Puntero_DESPLZ_der).
431+  92C5
432+  92C5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  92C5              ; Cuántos movimientos hemos hecho ??
434+  92C5              ; DE contiene (Puntero_DESPLZ_izq).
435+  92C5
436+  92C5 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  92C8 EB           	ex de,hl
438+  92C9 A7           	and a
439+  92CA ED 52        	sbc hl,de
440+  92CC CB 3D        	srl l
441+  92CE 3E 08        6 ld a,8
442+  92D0 95           	sub l
443+  92D1 30 1E        	jr nc,3F
444+  92D3
445+  92D3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  92D3              ; B="0".
447+  92D3
448+  92D3 04           4 inc b
449+  92D4 3C           	inc a
450+  92D5 20 FC        	jr nz,4B
451+  92D7 78           	ld a,b
452+  92D8 08           	ex af,af
453+  92D9 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  92DC 23           5 inc hl
455+  92DD 23           	inc hl
456+  92DE 10 FC        	djnz 5B
457+  92E0 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  92E3 CD 88 87     	call Extrae_address
459+  92E6 22 9A 85     	ld (Puntero_objeto),hl
460+  92E9
461+  92E9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  92E9              ; _(Posicion_actual).
463+  92E9
464+  92E9 21 98 85     	ld hl,Posicion_actual
465+  92EC 35           	dec (hl)
466+  92ED 08           	ex af,af
467+  92EE 6F           	ld l,a
468+  92EF 18 DD        	jr 6B
469+  92F1
470+  92F1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  92F1
472+  92F1 47           3 ld b,a
473+  92F2 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  92F5 23           2 inc hl
475+  92F6 23           	inc hl
476+  92F7 10 FC        	djnz 2B
477+  92F9 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  92FC C9           8 ret
479+  92FD
480+  92FD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  92FD              ;
482+  92FD              ;	modifica_parametros_1er_DESPLZ
483+  92FD              ;
484+  92FD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  92FD              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  92FD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  92FD
488+  92FD 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  9300 A7           	and a
490+  9301 20 1E        	jr nz,1F
491+  9303 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  9304 32 9E 85         ld (CTRL_DESPLZ),a
493+  9307 21 97 85     	ld hl,Columns
494+  930A 34           	inc (hl)
495+  930B 3A AA 85     	ld a,(Cuad_objeto)
496+  930E E6 01        	and 1
497+  9310 20 0F        	jr nz,1F
498+  9312 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9315 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9316 22 98 85     	ld (Posicion_actual),hl
501+  9319 CD D3 93     	call Genera_coordenadas
502+  931C CD 78 93     	call Dec_CTRL_DESPLZ
503+  931F 18 03        	jr 2F
504+  9321 CD 78 93     1 call Dec_CTRL_DESPLZ
505+  9324 C9           2 ret
506+  9325
507+  9325              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9325
509+  9325 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  9328 FE F7        	cp $f7
511+  932A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  932C 30 2C        	jr nc,3F
513+  932E
514+  932E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  932E
516+  932E 06 00        	ld b,0
517+  9330 04           4 inc b
518+  9331 3C           	inc a
519+  9332 FE F7        	cp $f7
520+  9334 20 FA        	jr nz,4B
521+  9336 3E FF        	ld a,$ff
522+  9338 90           	sub b
523+  9339 32 9E 85     	ld (CTRL_DESPLZ),a
524+  933C 18 1C        	jr 3F
525+  933E
526+  933E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  933E
528+  933E 21 97 85     1 ld hl,Columns
529+  9341 35           	dec (hl)
530+  9342 AF           	xor a
531+  9343 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9346 3A AA 85     	ld a,(Cuad_objeto)
533+  9349 E6 01        	and 1
534+  934B 28 0A        	jr z,2F
535+  934D 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  9350 2B           	dec hl
537+  9351 22 98 85     	ld (Posicion_actual),hl
538+  9354 CD D3 93     	call Genera_coordenadas
539+  9357
540+  9357              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9357
542+  9357 CD B2 87     2 call Inicia_puntero_objeto_izq
543+  935A C9           3 ret
544+  935B
545+  935B              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  935B              ;
547+  935B              ;	19/10/22
548+  935B              ;
549+  935B              ;	(cp 29) para un Amadeus de 3 Columns.
550+  935B              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  935B
552+  935B 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  935E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  9360 C9           	ret
555+  9361
556+  9361              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9361              ;
558+  9361              ;	19/10/22
559+  9361              ;
560+  9361              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9361              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9361
563+  9361 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  9364 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9366 C9           	ret
566+  9367
567+  9367              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9367              ;
569+  9367              ;	24/7/22
570+  9367              ;
571+  9367              ;	Inc_CTRL_DESPLZ
572+  9367              ;
573+  9367              ;
574+  9367              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9367
576+  9367 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  936A 3A AC 85     	ld a,(Vel_right)
578+  936D A7           	and a
579+  936E 28 06        	jr z,1F
580+  9370 47           	ld b,a
581+  9371 34           3 inc (hl)
582+  9372 10 FD        	djnz 3B
583+  9374 18 01        	jr 2F
584+  9376 34           1 inc (hl)
585+  9377 C9           2 ret
586+  9378
587+  9378              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  9378              ;
589+  9378              ;	5/2/23
590+  9378              ;
591+  9378              ;	Dec_CTRL_DESPLZ
592+  9378              ;
593+  9378              ;
594+  9378              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  9378
596+  9378 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  937B 3A AB 85     	ld a,(Vel_left)
598+  937E A7           	and a
599+  937F 28 06        	jr z,1F
600+  9381 47           	ld b,a
601+  9382 35           3 dec (hl)
602+  9383 10 FD        	djnz 3B
603+  9385 18 01        	jr 2F
604+  9387 35           1 dec (hl)
605+  9388 C9           2 ret
606+  9389
607+  9389              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9389
609+  9389 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  938C 01 1F 00     	ld bc,31
611+  938F A7           	and a
612+  9390 ED 4A        	adc hl,bc
613+  9392 22 98 85     	ld (Posicion_actual),hl
614+  9395 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  9398 CB C6        	set 0,(hl)
616+  939A C9           	ret
617+  939B
618+  939B              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  939B
620+  939B 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  939E 01 1F 00     	ld bc,31
622+  93A1 A7           	and a
623+  93A2 ED 42        	sbc hl,bc
624+  93A4 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  93A7 21 C3 85     	ld hl,Ctrl_0
626+  93AA CB CE        	set 1,(hl)
627+  93AC C9           	ret
628+  93AD
629+  93AD              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  93AD
631+  93AD 24           Reaparece_abajo inc h
632+  93AE 01 E0 17     	ld bc,$17e0
633+  93B1 A7           	and a
634+  93B2 ED 4A        	adc hl,bc
635+  93B4 22 98 85     	ld (Posicion_actual),hl
636+  93B7 21 C3 85     	ld hl,Ctrl_0
637+  93BA CB D6        	set 2,(hl)
638+  93BC C9           	ret
639+  93BD
640+  93BD              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  93BD
642+  93BD 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  93C0 A7           	and a
644+  93C1 ED 42        	sbc hl,bc
645+  93C3 22 98 85     	ld (Posicion_actual),hl
646+  93C6 21 C3 85     	ld hl,Ctrl_0
647+  93C9 CB DE        	set 3,(hl)
648+  93CB C9           	ret
649+  93CC
650+  93CC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  93CC
652+  93CC 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  93CF 22 98 85     	ld (Posicion_actual),hl
654+  93D2 C9           	ret
# file closed: Direcciones.asm
849   93D3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  93D3              ;	12/12/22
  2+  93D3              ;
  3+  93D3              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  93D3              ;	Fila superior "0", Columna izquierda "0".
  5+  93D3              ;
  6+  93D3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  93D3              ;
  8+  93D3              ;	Modifica: A
  9+  93D3
 10+  93D3 C5           Genera_coordenadas push bc
 11+  93D4 E5           	push hl
 12+  93D5 2A 98 85     	ld hl,(Posicion_actual)
 13+  93D8 7D           	ld a,l
 14+  93D9 E6 1F        	and $1f
 15+  93DB 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  93DE CD A1 90     	call calcula_tercio
 17+  93E1 47           	ld b,a
 18+  93E2 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  93E3 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  93E5 7D           	ld a,l
 21+  93E6 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  93E8 28 05        	jr z,2F
 23+  93EA 0C           1 inc c
 24+  93EB D6 20        	sub 32
 25+  93ED 20 FB        	jr nz,1B
 26+  93EF 0C           2 inc c
 27+  93F0 04           	inc b
 28+  93F1 05           	dec b
 29+  93F2 28 04        	jr z,3F
 30+  93F4 3E E0        	ld a,$e0
 31+  93F6 10 F2        	djnz 1B
 32+  93F8 79           3 ld a,c
 33+  93F9 3D           	dec a
 34+  93FA 32 9D 85     	ld (Coordenada_y),a
 35+  93FD E1           	pop hl
 36+  93FE C1           	pop bc
 37+  93FF C9           	ret
# file closed: Genera_coordenadas.asm
850   9400              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  9400
  2+  9400
  3+  9400              ;   11/8/22
  4+  9400              ;
  5+  9400              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  9400              ;
  7+  9400              ;   Mov_obj.asm
  8+  9400              ;
  9+  9400              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  9400              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  9400              ;
 12+  9400              ;   Codificación:
 13+  9400              ;
 14+  9400              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  9400
 16+  9400              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  9400
 18+  9400 02 40 00     Arriba db 2,%01000000,0
 19+  9403 02 80 00     Abajo db 2,%10000000,0
 20+  9406 02 20 00     Derecha db 2,%00100000,0
 21+  9409 02 10 00     Izquierda db 2,%00010000,0
 22+  940C 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9410 60 42 60 40
 22+  9414 63
 23+  9415 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9419 22 A3 80 A0
 24+  941D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9421 84 A0 83 A0
 25+  9425 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9429 80 A3 22 A0
 26+  942D 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9431 40 60 42 60
 27+  9435 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9439 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  943D 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9441 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9445 84
 31+  9446 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  944A 84 00
 32+  944C 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  9450 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  9454 1F 1F 1F 1F
 34+  9458 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  945C 1F 1F 1F 1F
 34+  9460 1F
 35+  9461 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  9465 2F 2F 2F 2F
 35+  9469 2F 2F
 36+  946B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  946F 2F 2F 00
 37+  9472
 38+  9472
 39+  9472              ; ----- ----- ----- ----- -----
 40+  9472
 41+  9472 50 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  9474 4C 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9476 09 94        Indice_mov_Izquierda defw Izquierda
 44+  9478 06 94        Indice_mov_Derecha defw Derecha
 45+  947A 03 94        Indice_mov_Abajo defw Abajo
 46+  947C 00 94        Indice_mov_Arriba defw Arriba
 47+  947E 3D 94        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9480 41 94        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9482 39 94        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  9484 46 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9486 0C 94        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9488              ; ----- ----- ----- ----- -----
 53+  9488
 54+  9488 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  948B A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  948C 28 02            jr z,1F
 57+  948E 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9490 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  9493 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9495 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9498              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9498 2A C7 85         ld hl,(Puntero_mov)
 63+  949B 7E               ld a,(hl)
 64+  949C 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  949F 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  94A0 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  94A3
 68+  94A3 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  94A6 A7               and a
 70+  94A7 20 0C            jr nz,12F
 71+  94A9 2A C7 85         ld hl,(Puntero_mov)
 72+  94AC 7E               ld a,(hl)
 73+  94AD A7               and a
 74+  94AE 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  94B0 E6 0F            and $0f
 76+  94B2 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  94B5              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  94B5 2A C7 85     12 ld hl,(Puntero_mov)
 79+  94B8 CB 7E            bit 7,(hl)
 80+  94BA 28 03            jr z,2F
 81+  94BC CD BF 90         call Mov_down
 82+  94BF 2A C7 85     2 ld hl, (Puntero_mov)
 83+  94C2 CB 76            bit 6,(hl)
 84+  94C4 28 03            jr z,3F
 85+  94C6 CD ED 90         call Mov_up
 86+  94C9 2A C7 85     3 ld hl, (Puntero_mov)
 87+  94CC CB 6E            bit 5,(hl)
 88+  94CE 28 03            jr z,4F
 89+  94D0 CD 1B 91         call Mov_right
 90+  94D3 2A C7 85     4 ld hl, (Puntero_mov)
 91+  94D6 CB 66            bit 4,(hl)
 92+  94D8 28 03            jr z,5F
 93+  94DA CD 39 92         call Mov_left
 94+  94DD
 95+  94DD              ; ---------- --------- --------- ---------- ----------
 96+  94DD
 97+  94DD 3A CB 85     5 ld a,(Repetimos_db)
 98+  94E0 A7               and a
 99+  94E1 28 07            jr z,6F
100+  94E3 3D               dec a
101+  94E4 32 CB 85         ld (Repetimos_db),a
102+  94E7 28 01            jr z,6f
103+  94E9 C9           11 ret
104+  94EA 21 C9 85     6 ld hl,Contador_db_mov
105+  94ED 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  94EE 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  94F1 23               inc hl
108+  94F2 22 C7 85         ld (Puntero_mov),hl
109+  94F5 18 F2            jr 11B
110+  94F7 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  94FA 3A CA 85         ld a,(Incrementa_puntero)
112+  94FD 47               ld b,a
113+  94FE 23           8 inc hl
114+  94FF 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9501 5E               ld e,(hl)
116+  9502 23               inc hl
117+  9503 56               ld d,(hl)
118+  9504 EB               ex de,hl
119+  9505 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9508 18 DF            jr 11B
121+  950A
122+  950A              ; ---------- --------- --------- ---------- ----------
123+  950A              ;
124+  950A              ;   11/8/22
125+  950A              ;
126+  950A              ;   Prepara_Puntero_mov
127+  950A
128+  950A E5           Prepara_Puntero_mov push hl
129+  950B D5               push de
130+  950C 2A C5 85         ld hl,(Puntero_indice_mov)
131+  950F 5E               ld e,(hl)
132+  9510 23               inc hl
133+  9511 56               ld d,(hl)
134+  9512 EB               ex de,hl
135+  9513 22 C7 85         ld (Puntero_mov),hl
136+  9516 D1               pop de
137+  9517 E1               pop hl
138+  9518 C9               ret
139+  9519
140+  9519              ; ---------- --------- --------- ---------- ----------
141+  9519              ;
142+  9519              ;   11/8/22
143+  9519              ;
144+  9519              ;   Reinicia_el_movimiento
145+  9519
146+  9519 CD 0A 95     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  951C AF               xor a
148+  951D 32 C9 85         ld (Contador_db_mov),a
149+  9520 32 CA 85         ld (Incrementa_puntero),a
150+  9523
151+  9523              ;    jr $
152+  9523
153+  9523 C3 88 94         jp Movimiento
154+  9526 C9               ret
155+  9527              ; ---------- --------- --------- ---------- ----------
156+  9527
157+  9527
158+  9527
159+  9527
160+  9527
161+  9527
162+  9527
163+  9527
164+  9527
165+  9527
166+  9527
167+  9527
168+  9527
169+  9527
170+  9527
171+  9527
172+  9527
173+  9527
# file closed: Patrones_de_mov.asm
851   9527              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9527              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9527              ;
  3+  9527              ;	3/1/23
  4+  9527              ;
  5+  9527              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9527
  7+  9527              ;	ADC HL,SP	LD (addr),SP
  8+  9527              ;	ADD HL,SP	LD SP,(addr)
  9+  9527              ;	ADD IX,SP	LD SP,nn
 10+  9527              ; 	ADD IY,SP	LD SP,HL
 11+  9527              ;				LD SP,IX
 12+  9527              ;	DEC SP		LD SP,IY
 13+  9527
 14+  9527              ;	EX (SP),HL
 15+  9527              ;	EX (SP),IX
 16+  9527              ;	EX (SP),IY
 17+  9527
 18+  9527              ;	INC SP
 19+  9527
 20+  9527
 21+  9527                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
852   7FD4
853   7FD4              	SAVESNA "Pruebas.sna", START
854   7FD4
855   7FD4
856   7FD4
# file closed: Banco_de_pruebas.asm
