# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 F8 88  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 2B 8D     	call Pinta_entidades
  50  AA1C
  51  AA1C              ;	call Pinta_Amadeus
  52  AA1C 3E 02        	ld a,2
  53  AA1E D3 FE        	out ($fe),a
  54  AA20
  55  AA20              ;	ld a,2
  56  AA20              ;	out ($fe),a
  57  AA20              ;	call Guarda_parametros_DRAW
  58  AA20              ;	call Restore_Amadeus
  59  AA20              ;	call Gestiona_Amadeus
  60  AA20              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA20              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA20
  63  AA20              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA20
  65  AA20              ;	call Recupera_parametros_DRAW
  66  AA20 CD 35 8D     	call Actualiza_relojes
  67  AA23              ;	ld a,0
  68  AA23              ;	out ($fe),a
  69  AA23
  70  AA23 21 02 89     	ld hl,Ctrl_3
  71  AA26 CB 86        	res 0,(hl)
  72  AA28
  73  AA28 FD E1        	pop iy
  74  AA2A DD E1        	pop ix
  75  AA2C F1           	pop af
  76  AA2D C1           	pop bc
  77  AA2E D1           	pop de
  78  AA2F E1           	pop hl
  79  AA30 D9           	exx
  80  AA31 C1           	pop bc
  81  AA32 D1           	pop de
  82  AA33 E1           	pop hl
  83  AA34 08           	ex af,af'
  84  AA35 F1           	pop af
  85  AA36 08           	ex af,af'
  86  AA37 D9           	exx
  87  AA38
  88  AA38 ED 7B F8 88  	ld sp,(Stack_3)
  89  AA3C
  90  AA3C FB           	ei
  91  AA3D C9           	ret
  92  AA3E
  93  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA3E
  95  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BD 85        	defw Caja_1
 100+ 856E FC 85        	defw Caja_2
 101+ 8570 3B 86        	defw Caja_3
 102+ 8572 7A 86        	defw Caja_4
 103+ 8574 B9 86        	defw Caja_5
 104+ 8576 F8 86        	defw Caja_6
 105+ 8578 37 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 8587
 117+ 8587 05           	db %00000101									; (Attr).
 118+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 858C
 121+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8590
 124+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 8592 04           	db 4 											; (Cuad_objeto).
 126+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 8597
 128+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8598
 130+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 859E
 132+ 859E 00 00        	db 0,0											; Variables_de_pintado
 133+ 85A0 00 00        	defw 0											;	" " " " " " "
 134+ 85A2 00 00        	defw 0											;	" " " " " " "
 135+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85A8
 137+ 85A8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85AA
 139+ 85AA 00           	db 0											; (Autoriza_movimiento).
 140+ 85AB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85AF 00 00
 141+ 85B1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85B4
 143+ 85B4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85B6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85B7
 146+ 85B7 00           	db 0 											; (Columnas).
 147+ 85B8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85BA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85BD
 150+ 85BD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85BD
 152+ 85BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85BF 00 00        	defw 0											; (Posicion_actual).
 154+ 85C1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85C6
 157+ 85C6 00           	db %00000000 									; (Attr).
 158+ 85C7
 159+ 85C7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85C9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85CF
 164+ 85CF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85D1 00           	db 0											; (Cuad_objeto).
 166+ 85D2
 167+ 85D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85D6
 169+ 85D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85D7
 171+ 85D7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85DD
 173+ 85DD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85DF 00 00        	defw 0											;	" " " " " " "
 175+ 85E1 00 00        	defw 0											;	" " " " " " "
 176+ 85E3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85E7
 178+ 85E7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 85E9
 180+ 85E9 00           	db 0											; (Autoriza_movimiento).
 181+ 85EA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 85EE 00 00
 182+ 85F0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 85F3
 184+ 85F3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 85F5 00           	db 0											; (Cola_de_desplazamiento).
 186+ 85F6
 187+ 85F6 00           	db 0 											; (Columnas).
 188+ 85F7 00 00        	defw 0											; (Limite_horizontal).
 189+ 85F9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 85FC
 191+ 85FC              ; ---------- ---------- ---------- ---------- ----------
 192+ 85FC
 193+ 85FC 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 85FE 00 00        	defw 0											; (Posicion_actual).
 195+ 8600 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8602 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8605
 198+ 8605 00           	db %00000000 									; (Attr).
 199+ 8606
 200+ 8606 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8608 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 860A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 860C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 860E
 205+ 860E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8610 00           	db 0											; (Cuad_objeto).
 207+ 8611
 208+ 8611 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8615
 210+ 8615 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8616
 212+ 8616 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 861C
 214+ 861C 00 00        	db 0,0											; Variables_de_pintado
 215+ 861E 00 00        	defw 0											;	" " " " " " "
 216+ 8620 00 00        	defw 0											;	" " " " " " "
 217+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8626
 219+ 8626 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8628
 221+ 8628 00           	db 0											; (Autoriza_movimiento).
 222+ 8629 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 862D 00 00
 223+ 862F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8632
 225+ 8632 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8634 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8635
 228+ 8635 00           	db 0 											; (Columnas).
 229+ 8636 00 00        	defw 0											; (Limite_horizontal).
 230+ 8638 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 863B
 232+ 863B              ; ---------- ---------- ---------- ---------- ----------
 233+ 863B
 234+ 863B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 863D 00 00        	defw 0											; (Posicion_actual).
 236+ 863F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8641 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8644
 239+ 8644 00           	db %00000000 									; (Attr).
 240+ 8645
 241+ 8645 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8647 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8649 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 864B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 864D
 246+ 864D 00 00        	defw 0											; (Posicion_inicio).
 247+ 864F 00           	db 0											; (Cuad_objeto).
 248+ 8650
 249+ 8650 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8654
 251+ 8654 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8655
 253+ 8655 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 865B
 255+ 865B 00 00        	db 0,0											; Variables_de_pintado
 256+ 865D 00 00        	defw 0											;	" " " " " " "
 257+ 865F 00 00        	defw 0											;	" " " " " " "
 258+ 8661 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8665
 260+ 8665 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8667
 262+ 8667 00           	db 0											; (Autoriza_movimiento).
 263+ 8668 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 866C 00 00
 264+ 866E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8671
 266+ 8671 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8673 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8674
 269+ 8674 00           	db 0 											; (Columnas).
 270+ 8675 00 00        	defw 0											; (Limite_horizontal).
 271+ 8677 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 867A
 273+ 867A              ; ---------- ---------- ---------- ---------- ----------
 274+ 867A
 275+ 867A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 867C 00 00        	defw 0											; (Posicion_actual).
 277+ 867E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 8680 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 8683
 280+ 8683 00           	db %00000000 									; (Attr).
 281+ 8684
 282+ 8684 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 8686 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 8688 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 868A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 868C
 287+ 868C 00 00        	defw 0											; (Posicion_inicio).
 288+ 868E 00           	db 0											; (Cuad_objeto).
 289+ 868F
 290+ 868F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 8693
 292+ 8693 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 8694
 294+ 8694 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 869A
 296+ 869A 00 00        	db 0,0											; Variables_de_pintado
 297+ 869C 00 00        	defw 0											;	" " " " " " "
 298+ 869E 00 00        	defw 0											;	" " " " " " "
 299+ 86A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A4
 301+ 86A4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86A6
 303+ 86A6 00           	db 0											; (Autoriza_movimiento).
 304+ 86A7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86AB 00 00
 305+ 86AD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86B0
 307+ 86B0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86B2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86B3
 310+ 86B3 00           	db 0 											; (Columnas).
 311+ 86B4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86B6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86B9
 314+ 86B9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86B9
 316+ 86B9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86BB 00 00        	defw 0											; (Posicion_actual).
 318+ 86BD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86BF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86C2
 321+ 86C2 00           	db %00000000 									; (Attr).
 322+ 86C3
 323+ 86C3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86C5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86C7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86C9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86CB
 328+ 86CB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86CD 00           	db 0											; (Cuad_objeto).
 330+ 86CE
 331+ 86CE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86D2
 333+ 86D2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86D3
 335+ 86D3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86D9
 337+ 86D9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86DB 00 00        	defw 0											;	" " " " " " "
 339+ 86DD 00 00        	defw 0											;	" " " " " " "
 340+ 86DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E3
 342+ 86E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 86E5
 344+ 86E5 00           	db 0											; (Autoriza_movimiento).
 345+ 86E6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 86EA 00 00
 346+ 86EC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 86EF
 348+ 86EF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 86F1 00           	db 0											; (Cola_de_desplazamiento).
 350+ 86F2
 351+ 86F2 00           	db 0 											; (Columnas).
 352+ 86F3 00 00        	defw 0											; (Limite_horizontal).
 353+ 86F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 86F8
 355+ 86F8              ; ---------- ---------- ---------- ---------- ----------
 356+ 86F8
 357+ 86F8 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 86FA 00 00        	defw 0											; (Posicion_actual).
 359+ 86FC 00 00        	defw 0 											; (Puntero_objeto).
 360+ 86FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8701
 362+ 8701 00           	db %00000000 									; (Attr).
 363+ 8702
 364+ 8702 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8704 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8706 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8708 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 870A
 369+ 870A 00 00        	defw 0											; (Posicion_inicio).
 370+ 870C 00           	db 0											; (Cuad_objeto).
 371+ 870D
 372+ 870D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8711
 374+ 8711 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8712
 376+ 8712 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8718
 378+ 8718 00 00        	db 0,0											; Variables_de_pintado
 379+ 871A 00 00        	defw 0											;	" " " " " " "
 380+ 871C 00 00        	defw 0											;	" " " " " " "
 381+ 871E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8722
 383+ 8722 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8724
 385+ 8724 00           	db 0											; (Autoriza_movimiento).
 386+ 8725 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8729 00 00
 387+ 872B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 872E
 389+ 872E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8730 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8731
 392+ 8731 00           	db 0 											; (Columnas).
 393+ 8732 00 00        	defw 0											; (Limite_horizontal).
 394+ 8734 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8737
 396+ 8737              ; ---------- ---------- ---------- ---------- ----------
 397+ 8737
 398+ 8737 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8739 00 00        	defw 0											; (Posicion_actual).
 400+ 873B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 873D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8740
 403+ 8740 00           	db %00000000 									; (Attr).
 404+ 8741
 405+ 8741 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8743 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8745 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8747 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8749
 410+ 8749 00 00        	defw 0											; (Posicion_inicio).
 411+ 874B 00           	db 0											; (Cuad_objeto).
 412+ 874C
 413+ 874C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8750
 415+ 8750 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8751
 417+ 8751 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8757
 419+ 8757 00 00        	db 0,0											; Variables_de_pintado
 420+ 8759 00 00        	defw 0											;	" " " " " " "
 421+ 875B 00 00        	defw 0											;	" " " " " " "
 422+ 875D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8761
 424+ 8761 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8763
 426+ 8763 00           	db 0											; (Autoriza_movimiento).
 427+ 8764 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8768 00 00
 428+ 876A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 876D
 430+ 876D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 876F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8770
 433+ 8770 00           	db 0 											; (Columnas).
 434+ 8771 00 00        	defw 0											; (Limite_horizontal).
 435+ 8773 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8776
 437+ 8776              ; -------------------------------------------------------------------------------------
 438+ 8776              ;
 439+ 8776              ;	20/05/23
 440+ 8776              ;
 441+ 8776              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8776              ;
 443+ 8776              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8776              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8776              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8776              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8776
 448+ 8776              Indice_de_entidades
 449+ 8776
 450+ 8776 7A 87        	defw Entidad_1
 451+ 8778 8A 87        	defw Entidad_2
 452+ 877A
 453+ 877A              ;	BADSAT, (Satélite malvado).
 454+ 877A
 455+ 877A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 877C 04           	db %00000100									; (Attr).
 457+ 877D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 877F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 8781 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 8783 01           	db 1											; (Cuad_objeto).
 461+ 8784 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 8788 35 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 878A
 464+ 878A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 878C 02           	db %00000010									; (Attr).
 466+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 8791 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 8793 01           	db 1											; (Cuad_objeto).
 470+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8798 35 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 879A
# file closed: Cajas_y_disparos.asm
  97  879A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 879A              ; 13/05/23
   2+ 879A
   3+ 879A              Indice_de_niveles
   4+ 879A
   5+ 879A A8 87        	defw Nivel_1
   6+ 879C AC 87        	defw Nivel_2
   7+ 879E B9 87        	defw Nivel_3
   8+ 87A0 C9 87        	defw Nivel_4
   9+ 87A2 DB 87        	defw Nivel_5
  10+ 87A4              ;	...
  11+ 87A4              ;	...
  12+ 87A4              ;	+ Niveles ...
  13+ 87A4
  14+ 87A4 00 00        	defw 0
  15+ 87A6 00 00        	defw 0
  16+ 87A8
  17+ 87A8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87A9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87AC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87AD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87B1 01 02
  21+ 87B3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87B7 01 02
  22+ 87B9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87BA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87BE 01
  24+ 87BF 03 01 01 01  	db 3,1,1,1,1
  24+ 87C3 01
  25+ 87C4 03 01 01 01  	db 3,1,1,1,1
  25+ 87C8 01
  26+ 87C9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87CA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87CE 01
  28+ 87CF 04 01 01 01  	db 4,1,1,1,1
  28+ 87D3 01
  29+ 87D4 04 01 01 01  	db 4,1,1,1,1
  29+ 87D8 01
  30+ 87D9 02 03        	db 2,3
  31+ 87DB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87DC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87E0 01
  33+ 87E1 05 01 01 01  	db 5,1,1,1,1
  33+ 87E5 01
  34+ 87E6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87EA 01
  35+ 87EB 05 01 01 01  	db 5,1,1,1,1
  35+ 87EF 01
  36+ 87F0
  37+ 87F0              ;---------------------------------------------------------------------------------------------------------------
  38+ 87F0              ;
  39+ 87F0              ;   3/9/23
  40+ 87F0              ;
  41+ 87F0              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87F0              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87F0              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87F0              ;	_en la caja DRAW correspondiente.
  45+ 87F0              ;
  46+ 87F0              ;	MODIFICA: HL,DE y A.
  47+ 87F0              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87F0
  49+ 87F0              Inicializa_Punteros_de_nivel
  50+ 87F0
  51+ 87F0 21 9A 87     	ld hl,Indice_de_niveles
  52+ 87F3 22 22 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87F6 CD DD 8B     	call Extrae_address
  54+ 87F9 7E           	ld a,(hl)
  55+ 87FA 32 EC 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 87FD 23           	inc hl
  57+ 87FE 22 24 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8801 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8802
  60+ 8802              ;---------------------------------------------------------------------------------------------------------------
  61+ 8802              ;
  62+ 8802              ;   13/5/23
  63+ 8802              ;
  64+ 8802              ;	Destruye A,BC,HL,DE
  65+ 8802
  66+ 8802              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8802              ;	_del juego.
  68+ 8802
  69+ 8802              Prepara_cajas
  70+ 8802
  71+ 8802              ; Preparamos los punteros de las cajas.
  72+ 8802
  73+ 8802 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8805 CD DD 8B     	call Extrae_address
  75+ 8808 CD 45 88     	call Avanza_caja
  76+ 880B
  77+ 880B CD 89 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 880E
  79+ 880E 2A 24 89     	ld hl,(Datos_de_nivel)
  80+ 8811
  81+ 8811              ; HL está en los datos del nivel correspondiente.
  82+ 8811              ; B actuará como contador de cajas.
  83+ 8811
  84+ 8811 C5           1 push bc
  85+ 8812
  86+ 8812 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8813 CD 36 88     	call PreparaBC
  88+ 8816
  89+ 8816 21 76 87     	ld hl,Indice_de_entidades
  90+ 8819 CD 3E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 881C 22 F2 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 881F
  93+ 881F CD 4F 88     	call Datos_de_entidad_a_caja
  94+ 8822
  95+ 8822 2A EA 88     	ld hl,(Indice_restore_caja)
  96+ 8825 CD DD 8B     	call Extrae_address
  97+ 8828 CD 45 88     	call Avanza_caja
  98+ 882B
  99+ 882B 2A 24 89     	ld hl,(Datos_de_nivel)
 100+ 882E 23           	inc hl
 101+ 882F 22 24 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8832
 103+ 8832 C1           	pop bc
 104+ 8833 10 DC        	djnz 1B
 105+ 8835 C9           	ret
 106+ 8836
 107+ 8836 CB 27        PreparaBC sla a
 108+ 8838 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 883A 4F           	ld c,a
 110+ 883B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 883D C9           	ret
 112+ 883E
 113+ 883E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 883F ED 4A        	adc hl,bc
 115+ 8841 CD DD 8B     	call Extrae_address
 116+ 8844 C9           	ret
 117+ 8845
 118+ 8845 22 E6 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8848 13           	inc de
 120+ 8849 13           	inc de
 121+ 884A EB           	ex de,hl
 122+ 884B 22 EA 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 884E C9           	ret
 124+ 884F
 125+ 884F              Datos_de_entidad_a_caja
 126+ 884F
 127+ 884F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 884F
 129+ 884F
 130+ 884F ED 5B E6 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8853
 132+ 8853 01 02 00     	ld bc,2
 133+ 8856 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8858
 135+ 8858 01 07 00     	ld bc,7
 136+ 885B CD 83 88     	call Situa_DE
 137+ 885E
 138+ 885E 01 05 00     	ld bc,5
 139+ 8861 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8863
 141+ 8863 01 04 00     	ld bc,4
 142+ 8866 CD 83 88     	call Situa_DE
 143+ 8869
 144+ 8869 01 07 00     	ld bc,7
 145+ 886C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 886E
 147+ 886E 01 12 00     	ld bc,18
 148+ 8871 CD 83 88     	call Situa_DE
 149+ 8874
 150+ 8874 01 02 00     	ld bc,2
 151+ 8877 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8879
 153+ 8879              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8879              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8879
 156+ 8879 01 0F 00     	ld bc,15									; *****
 157+ 887C CD 83 88     	call Situa_DE
 158+ 887F
 159+ 887F 3E 03        	ld a,3
 160+ 8881 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8882
 162+ 8882 C9           	ret
 163+ 8883
 164+ 8883 EB           Situa_DE ex de,hl
 165+ 8884 A7           	and a
 166+ 8885 ED 4A        	adc hl,bc
 167+ 8887 EB           	ex de,hl
 168+ 8888 C9           	ret
 169+ 8889
 170+ 8889              ;---------------------------------------------------------------------------------------------------------------
 171+ 8889              ;
 172+ 8889              ;	21/5/23
 173+ 8889              ;
 174+ 8889              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8889              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8889              ;
 177+ 8889              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8889              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8889              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8889              ;
 181+ 8889              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8889              ;	MODIFICA: A y B.
 183+ 8889              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8889
 185+ 8889              Admin_num_entidades
 186+ 8889
 187+ 8889              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8889
 189+ 8889 3A EC 88     	ld a,(Numero_de_entidades)
 190+ 888C A7           	and a
 191+ 888D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 888D              ;	jr z,$
 193+ 888D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 888D
 195+ 888D 20 03        	jr nz,3F
 196+ 888F
 197+ 888F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 888F
 199+ 888F CD F0 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 8892
 201+ 8892 3A EC 88     3 ld a,(Numero_de_entidades)
 202+ 8895 FE 0A        	cp 10
 203+ 8897 38 08        	jr c,1F
 204+ 8899
 205+ 8899              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8899              ; Actualizamos variables.
 207+ 8899
 208+ 8899 3E 0A        	ld a,10
 209+ 889B 32 ED 88     	ld (Numero_parcial_de_entidades),a
 210+ 889E 47           	ld b,a
 211+ 889F 18 04        	jr 2F
 212+ 88A1
 213+ 88A1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88A1              ; (Numero_de_entidades)="0".
 215+ 88A1
 216+ 88A1 32 ED 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88A4 47           	ld b,a
 218+ 88A5 C9           2 ret
# file closed: Niveles.asm
  98  88A6
  99  88A6              ; ******************************************************************************************************************************************************************************************
 100  88A6              ; Constantes.
 101  88A6              ; ******************************************************************************************************************************************************************************************
 102  88A6              ;
 103  88A6              ; 10/11/23
 104  88A6
 105  88A6              ;
 106  88A6              ; Constantes generales.
 107  88A6              ;
 108  88A6
 109  88A6              Sprite_vacio equ $f000
 110  88A6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88A6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88A6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88A6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88A6
 115  88A6              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 116  88A6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 117  88A6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 118  88A6              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 119  88A6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 120  88A6
 121  88A6              ;														; 55 Bytes.
 122  88A6
 123  88A6              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 124  88A6              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 125  88A6
 126  88A6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88A6
 128  88A6              ; ******************************************************************************************************************************************************************************************
 129  88A6              ; Variables.
 130  88A6              ; ******************************************************************************************************************************************************************************************
 131  88A6              ;
 132  88A6              ; 10/11//23
 133  88A6              ;
 134  88A6              ; Variables de DRAW. (Motor principal).
 135  88A6              ;
 136  88A6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88A6
 138  88A6 00           Filas db 0												; Filas. [DRAW]
 139  88A7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88A8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88AA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88AC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88AD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88AE
 145  88AE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88AE
 147  88AE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88AF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88AF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88AF 00           Attr db 0												; Atributos de la entidad:
 151  88B0
 152  88B0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88B0              ;
 154  88B0              ;	COLORES: 0 ..... NEGRO
 155  88B0              ;    		 1 ..... AZUL
 156  88B0              ; 			 2 ..... ROJO
 157  88B0              ;			 3 ..... MAGENTA
 158  88B0              ; 			 4 ..... VERDE
 159  88B0              ; 			 5 ..... CIAN
 160  88B0              ;			 6 ..... AMARILLO
 161  88B0              ; 			 7 ..... BLANCO
 162  88B0
 163  88B0 00 00        Indice_Sprite_der defw 0
 164  88B2 00 00        Indice_Sprite_izq defw 0
 165  88B4 00 00        Puntero_DESPLZ_der defw 0
 166  88B6 00 00        Puntero_DESPLZ_izq defw 0
 167  88B8
 168  88B8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88BA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88BB
 171  88BB              ; Variables de objeto. (Características).
 172  88BB
 173  88BB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88BC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88BD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88BE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88BF
 178  88BF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88C0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88C0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88C0 00 00 00...  Variables_de_borrado ds 6
 182  88C6
 183  88C6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88C8 00 00        	defw 0
 185  88CA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88CC 00 00 00 00  	db 0,0,0,0
 187  88D0
 188  88D0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88D0
 190  88D0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88D1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88D1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88D1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88D1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88D1              ;
 196  88D1              ; 														DESCRIPCIÖN:
 197  88D1              ;
 198  88D1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88D1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88D1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88D1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88D1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88D1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88D1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88D1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88D1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88D1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88D1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88D1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88D1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88D1              ;
 212  88D1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88D1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88D1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88D1
 216  88D1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88D1
 218  88D1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88D3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88D5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88D7              ;
 222  88D7              ;
 223  88D7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88D8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88D8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88D8 00           Incrementa_puntero_backup db 0
 227  88D9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88DA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88DA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88DB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88DC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88DD              ;
 233  88DD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88DD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88DD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88DD              ;
 237  88DD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88DD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88DD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88DD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88DD              ;
 242  88DD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88DD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88DD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88DD
 246  88DD
 247  88DD              ; Variables de funcionamiento. [DRAW].
 248  88DD
 249  88DD 00           Columnas db 0
 250  88DE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88E0              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88E0 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  88E1
 254  88E1              ; variables de control general.
 255  88E1
 256  88E1 00           Ctrl_2 db 0
 257  88E2              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  88E2              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  88E2              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  88E2              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  88E2              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  88E2              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  88E2              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  88E2              ;
 265  88E2              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  88E2              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  88E2              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  88E2              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  88E2              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  88E2
 271  88E2 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  88E3
 273  88E3              ;! 61 Bytes por entidad.
 274  88E3
 275  88E3              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  88E3              ;					         		---------;      ;---------
 277  88E3
 278  88E3
 279  88E3              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  88E3
 281  88E3 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  88E4
 283  88E4              ;														DESCRIPCIÓN:
 284  88E4              ;
 285  88E4              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  88E4              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  88E4              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  88E4              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  88E4              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  88E4              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  88E4
 292  88E4              ;														BIT 3, Recarga de nueva oleada.
 293  88E4              ;														BIT 4, Recarga de nueva oleada.
 294  88E4              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  88E4              ;														BIT 6, **** Frame completo.
 296  88E4              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  88E4
 298  88E4 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  88E6              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  88E6              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  88E6              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  88E6
 303  88E6              ; Gestión de ENTIDADES y CAJAS.
 304  88E6
 305  88E6 00 00        Puntero_store_caja defw 0
 306  88E8 00 00        Puntero_restore_caja defw 0
 307  88EA 00 00        Indice_restore_caja defw 0
 308  88EC 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 309  88ED 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 310  88EE 00           Entidades_en_curso db 0									; ..... ..... .....
 311  88EF 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  88F0              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  88F0              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  88F0              ;														; _ (Numero_de_malotes)="0".
 315  88F0 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  88F2 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  88F4              ;														; _ puntero (Indice_entidades).
 318  88F4
 319  88F4
 320  88F4              ;---------------------------------------------------------------------------------------------------------------
 321  88F4              ;
 322  88F4              ;	18/11/23
 323  88F4              ;
 324  88F4              ;	Álbumes.
 325  88F4
 326  88F4 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  88F6              ;														; _variable para almacenar lo posición del puntero_
 328  88F6              ; 														; _de pila, SP.
 329  88F6 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  88F8              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  88F8 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  88FA 00 70        Stack_snapshot defw Album_de_fotos
 333  88FC 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 334  88FE
 335  88FE              ;End_Snapshot defw Album_de_fotos
 336  88FE              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  88FE 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8900              ;														; _el snapshot de los registros del siguiente disparo.
 339  8900              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8900 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8902
 342  8902 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 343  8903              ;
 344  8903              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 345  8903              ; Gestión de Disparos.
 346  8903
 347  8903 00           Numero_de_disparotes db 0
 348  8904 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 349  8906 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 350  8908 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 351  8909              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 352  8909              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 353  8909 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 354  890B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 355  890B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 356  890B              ;														; _produzca colisión.
 357  890B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 358  890D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 359  890D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 360  8910              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 361  8910 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 362  8913              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 363  8913 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 364  8915 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 365  8916
 366  8916              ;---------------------------------------------------------------------------------------------------------------
 367  8916
 368  8916              ; Relojes y temporizaciones.
 369  8916
 370  8916 00           Contador_de_frames db 0
 371  8917 00           Contador_de_frames_2 db 0
 372  8918
 373  8918 04           Clock_explosion db 4
 374  8919 1E           Clock_Entidades_en_curso db 30
 375  891A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 376  891B              ;														; Repite la oleada de entidades.
 377  891B 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 378  891C 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 379  891D 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 380  891E
 381  891E 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 382  891F 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 383  8920 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 384  8921
 385  8921              ;---------------------------------------------------------------------------------------------------------------
 386  8921
 387  8921              ; Gestión de NIVELES.
 388  8921
 389  8921 00           Nivel db 0												; Nivel actual del juego.
 390  8922 00 00        Puntero_indice_NIVELES defw 0
 391  8924 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 392  8926              ; 														; _ que definen el NIVEL.
 393  8926              ; Y todo comienza aquí .....
 394  8926              ;
 395  8926              ; Rutina principal *************************************************************************************************************************************************************************
 396  8926              ;
 397  8926              ;	16/11/22
 398  8926
 399  8926              START
 400  8926
 401  8926 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 402  8929 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 403  892B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 404  892D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 405  892F F3           	DI
 406  8930
 407  8930 3E 07        	ld a,%00000111
 408  8932 CD 62 98     	call Cls
 409  8935
 410  8935 CD B6 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 411  8938
 412  8938              ; INICIALIZACIÓN.
 413  8938
 414  8938 CD F0 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 415  893B CD 02 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 416  893E CD 45 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 417  8941              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 418  8941 CD 66 8C     	call Restore_entidad
 419  8944
 420  8944 21 ED 88     	ld hl,Numero_parcial_de_entidades
 421  8947 46           	ld b,(hl)
 422  8948 04           	inc b
 423  8949 05           	dec b
 424  894A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 425  894C
 426  894C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 427  894C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 428  894C              ;	Pintamos el resto de entidades:
 429  894C
 430  894C              ;	INICIA ENTIDADES !!!!!
 431  894C
 432  894C C5           1 push bc  												; Guardo el contador de entidades.
 433  894D CD 15 8B     	call Inicia_entidad
 434  8950 C1           	pop bc
 435  8951 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 436  8953
 437  8953              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 438  8953              ; (Esto se dá cuando se inicia una nueva oleada).
 439  8953
 440  8953 3A E3 88     	ld a,(Ctrl_1)
 441  8956 CB 5F        	bit 3,a
 442  8958 20 00        	jr nz,5F											; Loop
 443  895A
 444  895A              ; 	INICIA AMADEUS !!!!!
 445  895A
 446  895A              3
 447  895A              ;	call Restore_Amadeus
 448  895A              ;	call Inicia_Puntero_objeto
 449  895A              ;	call Draw
 450  895A              ;	call Guarda_foto_registros
 451  895A              ;	call Guarda_datos_de_borrado_Amadeus
 452  895A
 453  895A              ;	ld de,Amadeus_db
 454  895A              ;	call Store_Amadeus
 455  895A
 456  895A              ; 	INICIA DISPAROS !!!!!
 457  895A
 458  895A              ;	call Inicia_Puntero_Disparo_Entidades
 459  895A              ;	call Inicia_Puntero_Disparo_Amadeus
 460  895A
 461  895A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 462  895A
 463  895A CD 45 8B     5 call Inicia_punteros_de_cajas
 464  895D CD 66 8C     	call Restore_entidad
 465  8960
 466  8960 3A E3 88     	ld a,(Ctrl_1)
 467  8963 CB 5F        	bit 3,a
 468  8965 28 07        	jr z,6F
 469  8967
 470  8967              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 471  8967
 472  8967 21 E3 88     	ld hl,Ctrl_1
 473  896A CB 9E        	res 3,(hl)
 474  896C 18 07        	jr Main
 475  896E
 476  896E              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 477  896E
 478  896E 21 02 89     6 ld hl,Ctrl_3
 479  8971 CB C6        	set 0,(hl)											; Frame completo.
 480  8973 FB           	ei
 481  8974 76           	halt
 482  8975
 483  8975              ; ------------------------------------
 484  8975
 485  8975              Main
 486  8975              ;
 487  8975              ;	12/11/23
 488  8975
 489  8975              ; Aparece nueva entidad ???
 490  8975
 491  8975              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 492  8975              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 493  8975              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 494  8975              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 495  8975              ;														; _un 2º bloque.
 496  8975
 497  8975 3A 19 89     	ld a,(Clock_Entidades_en_curso)
 498  8978 47           	ld b,a
 499  8979 3A 16 89     	ld a,(Contador_de_frames)
 500  897C B8           	cp b
 501  897D 28 07        	jr z,21F
 502  897F
 503  897F              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 504  897F              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 505  897F              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 506  897F              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 507  897F
 508  897F 3C           	inc a
 509  8980 B8           	cp b
 510  8981 20 1B        	jr nz,13F
 511  8983
 512  8983 32 16 89     	ld (Contador_de_frames),a
 513  8986
 514  8986              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 515  8986              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 516  8986
 517  8986 3A ED 88     21 ld a,(Numero_parcial_de_entidades)
 518  8989 47           	ld b,a
 519  898A 3A EE 88     	ld a,(Entidades_en_curso)
 520  898D B8           	cp b
 521  898E 28 0E        	jr z,13F
 522  8990 30 0C        	jr nc,13F
 523  8992
 524  8992              ; --- --- --- --- ---
 525  8992
 526  8992 3C           	inc a
 527  8993 32 EE 88     	ld (Entidades_en_curso),a
 528  8996
 529  8996              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 530  8996
 531  8996 3A 19 89     	ld a,(Clock_Entidades_en_curso)
 532  8999              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 533  8999              ;! _ IMPREDECIBLE !!!!
 534  8999 C6 32        	add 50
 535  899B 32 19 89     	ld (Clock_Entidades_en_curso),a
 536  899E
 537  899E              ; -------------------------------------------------------------------------------------------------------------
 538  899E
 539  899E              ; Habilita disparos.
 540  899E
 541  899E 21 1B 89     13 ld hl,Disparo_Amadeus
 542  89A1 11 1D 89     	ld de,CLOCK_repone_disparo_Amadeus
 543  89A4 CD 26 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 544  89A7
 545  89A7 21 1E 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 546  89AA 11 20 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 547  89AD CD 26 9C     	call Habilita_disparos
 548  89B0
 549  89B0              ; COLISIONES.
 550  89B0
 551  89B0 CD 31 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 552  89B3
 553  89B3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 554  89B3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 555  89B3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 556  89B3
 557  89B3 AF           	xor a
 558  89B4 32 08 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 559  89B7
 560  89B7 CD 45 8B     	call Inicia_punteros_de_cajas
 561  89BA CD 66 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 562  89BD              ; 														; _ en DRAW.
 563  89BD 3A A6 88     	ld a,(Filas)
 564  89C0 A7           	and a
 565  89C1 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 566  89C3 CD 78 8C     	call Incrementa_punteros_de_cajas
 567  89C6 18 F2        	jr 12B
 568  89C8
 569  89C8              ; ---------------------------------------------------------------------------------------
 570  89C8
 571  89C8 3A ED 88     10 ld a,(Numero_parcial_de_entidades)
 572  89CB 47               ld b,a
 573  89CC A7           	and a
 574  89CD 20 14        	jr nz,11F
 575  89CF
 576  89CF 21 E3 88     	ld hl,Ctrl_1
 577  89D2 CB 66        	bit 4,(hl)
 578  89D4 C2 60 8A     	jp nz,16F
 579  89D7
 580  89D7              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 581  89D7
 582  89D7 21 E3 88     	ld hl,Ctrl_1
 583  89DA CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 584  89DC
 585  89DC 3A 16 89     	ld a,(Contador_de_frames)
 586  89DF 3C           	inc a
 587  89E0 32 1A 89     	ld (Activa_recarga_cajas),a
 588  89E3
 589  89E3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 590  89E3
 591  89E3 3A EE 88     11 ld a,(Entidades_en_curso)
 592  89E6 A7           	and a
 593  89E7 CA 60 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 594  89EA 47           	ld b,a												; No hay entidades que gestionar.
 595  89EB
 596  89EB              ; Código que ejecutamos con cada entidad:
 597  89EB              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 598  89EB
 599  89EB C5           15 push bc 												; Nº de entidades en curso.
 600  89EC
 601  89EC              ; Impacto ???
 602  89EC
 603  89EC 3A BF 88     22 ld a,(Impacto)
 604  89EF A7           	and a
 605  89F0 28 31        	jr z,8F
 606  89F2
 607  89F2              ; Hay Impacto en esta entidad.
 608  89F2
 609  89F2 21 18 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 610  89F5 35           	dec (hl)
 611  89F6 C2 5A 8A     	jp nz,17F
 612  89F9
 613  89F9              ;! Velocidad de la animación de la explosión.
 614  89F9
 615  89F9 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 616  89FB              ;														; _,(velocidad de la explosión).
 617  89FB
 618  89FB              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 619  89FB
 620  89FB CD 0A 8D     	call Repone_datos_de_borrado
 621  89FE CD 83 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 622  8A01
 623  8A01              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 624  8A01
 625  8A01 3A E1 88     	ld a,(Ctrl_2)
 626  8A04 CB 4F        	bit 1,a
 627  8A06 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 628  8A08
 629  8A08              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 630  8A08
 631  8A08 3A AE 88     	ld a,(CTRL_DESPLZ)
 632  8A0B A7           	and a
 633  8A0C 20 08        	jr nz,18F
 634  8A0E
 635  8A0E 21 84 84     	ld hl,Indice_Explosion_2x2-2
 636  8A11 22 B4 88     	ld (Puntero_DESPLZ_der),hl
 637  8A14 18 06        	jr 19F
 638  8A16
 639  8A16 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 640  8A19 22 B4 88     	ld (Puntero_DESPLZ_der),hl
 641  8A1C
 642  8A1C 21 E1 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 643  8A1F CB CE        	set 1,(hl)
 644  8A21 18 22        	jr 7F
 645  8A23
 646  8A23              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 647  8A23              ; _con las coordenadas de la entidad almacenada en DRAW.
 648  8A23
 649  8A23 3A E3 88     8 ld a,(Ctrl_1)
 650  8A26 CB 57        	bit 2,a
 651  8A28 28 1B        	jr z,7F
 652  8A2A
 653  8A2A 2A 0B 89     	ld hl,(Coordenadas_disparo_certero)
 654  8A2D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 655  8A2E              ;														; E contiene la coordenada_X del disparo.
 656  8A2E 2A AC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 657  8A31              ;														; H FILA, (Coordenada_y de la entidad).
 658  8A31 A7           	and a
 659  8A32 ED 52        	sbc hl,de
 660  8A34
 661  8A34 CD 68 91     	call Determina_resultado_comparativa
 662  8A37
 663  8A37 78           	ld a,b
 664  8A38 A7           	and a
 665  8A39 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 666  8A3B
 667  8A3B              ; ----- ----- -----
 668  8A3B
 669  8A3B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 670  8A3D 32 BF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 671  8A40
 672  8A40 21 E3 88     	ld hl,Ctrl_1
 673  8A43 CB 96        	res 2,(hl)
 674  8A45
 675  8A45 CD B1 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 676  8A48
 677  8A48 3A D0 88     	ld a,(Ctrl_0)
 678  8A4B CB 67        	bit 4,a
 679  8A4D 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 680  8A4F
 681  8A4F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 682  8A4F              ; [[[
 683  8A4F CD E4 8C     	call Detecta_disparo_entidad
 684  8A52              ; ]]]
 685  8A52 CD 26 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 686  8A55
 687  8A55 21 D0 88     	ld hl,Ctrl_0
 688  8A58 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 689  8A5A
 690  8A5A CD 2B 8C     17 call Store_Restore_cajas
 691  8A5D
 692  8A5D C1           	pop bc
 693  8A5E 10 8B        	djnz 15B
 694  8A60
 695  8A60              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 696  8A60              ; Hemos gestionado todas las unidades.
 697  8A60              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 698  8A60
 699  8A60              ;	ld hl,Ctrl_1
 700  8A60              ;	res 2,(hl)
 701  8A60
 702  8A60 21 02 89     16 ld hl,Ctrl_3
 703  8A63 CB C6        	set 0,(hl)											; Frame completo.
 704  8A65 AF           	xor a
 705  8A66 D3 FE        	out ($fe),a
 706  8A68 FB           	ei
 707  8A69 76           	halt
 708  8A6A
 709  8A6A              ; ----------------------------------------
 710  8A6A
 711  8A6A 3A E3 88     	ld a,(Ctrl_1) 										; Existe Loop?
 712  8A6D CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 713  8A6F CA 75 89     	jp z,Main
 714  8A72
 715  8A72              ; RECARGA DE NUEVA OLEADA.
 716  8A72
 717  8A72 3A 16 89     	ld a,(Contador_de_frames)
 718  8A75 47           	ld b,a
 719  8A76 3A 1A 89     	ld a,(Activa_recarga_cajas)
 720  8A79 B8           	cp b
 721  8A7A 28 08        	jr z,20F
 722  8A7C
 723  8A7C 21 E3 88     	ld hl,Ctrl_1
 724  8A7F CB E6        	set 4,(hl)
 725  8A81 C3 75 89     	jp Main
 726  8A84
 727  8A84 21 E3 88     20 ld hl,Ctrl_1
 728  8A87 CB A6        	res 4,(hl)
 729  8A89
 730  8A89 3A 16 89     	ld a,(Contador_de_frames)
 731  8A8C
 732  8A8C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 733  8A8C              ;! _ IMPREDECIBLE !!!!
 734  8A8C
 735  8A8C C6 0A        	add 10
 736  8A8E 32 19 89     	ld (Clock_Entidades_en_curso),a
 737  8A91
 738  8A91 C3 3B 89     	jp 4B
 739  8A94
 740  8A94 C9           	ret
 741  8A95
 742  8A95              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 743  8A95              ;
 744  8A95              ;	16/11/23
 745  8A95
 746  8A95              Gestiona_Amadeus
 747  8A95
 748  8A95              ;! Activa/desactiva impacto con Amadeus.
 749  8A95
 750  8A95 3A BF 88     	ld a,(Impacto)
 751  8A98 A7           	and a
 752  8A99 20 FE        	jr nz,$
 753  8A9B
 754  8A9B CD 02 8B     	call Mov_Amadeus
 755  8A9E
 756  8A9E 3A D0 88     	ld a,(Ctrl_0)
 757  8AA1 CB 67        	bit 4,a
 758  8AA3 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 759  8AA5
 760  8AA5 CD 26 8B     	call Guarda_foto_entidad_a_pintar
 761  8AA8 CD EA 8C     	call Guarda_datos_de_borrado_Amadeus
 762  8AAB
 763  8AAB 21 D0 88     14 ld hl,Ctrl_0
 764  8AAE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 765  8AB0
 766  8AB0              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 767  8AB0
 768  8AB0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 769  8AB0
 770  8AB0              ;	call Calcula_numero_de_disparotes
 771  8AB0
 772  8AB0 C9           	ret
 773  8AB1
 774  8AB1              ; --------------------------------------------------------------------------------------------------------------
 775  8AB1              ;
 776  8AB1              ;	27/05/23
 777  8AB1
 778  8AB1              Mov_obj
 779  8AB1
 780  8AB1 3A E1 88     	ld a,(Ctrl_2)
 781  8AB4 CB 4F        	bit 1,a
 782  8AB6 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 783  8AB8
 784  8AB8              ; Explosión:
 785  8AB8
 786  8AB8 3A E2 88     	ld a,(Frames_explosion)
 787  8ABB A7           	and a
 788  8ABC 20 11        	jr nz,4F
 789  8ABE
 790  8ABE              ; Una alimaña menos!!!!!!!!!1
 791  8ABE
 792  8ABE CD A8 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 793  8AC1 21 ED 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 794  8AC4 35           	dec (hl)
 795  8AC5 21 EE 88     	ld hl,Entidades_en_curso
 796  8AC8 35           	dec (hl)
 797  8AC9 21 EC 88     	ld hl,Numero_de_entidades
 798  8ACC 35           	dec (hl)
 799  8ACD 18 32        	jr 3F
 800  8ACF
 801  8ACF              ; -----
 802  8ACF
 803  8ACF              ;	`Movemos´ la explosión.
 804  8ACF
 805  8ACF 2A B4 88     4 ld hl,(Puntero_DESPLZ_der)
 806  8AD2 23           	inc hl
 807  8AD3 23           	inc hl
 808  8AD4 22 B4 88     	ld (Puntero_DESPLZ_der),hl
 809  8AD7 CD DD 8B     	call Extrae_address
 810  8ADA 22 AA 88     	ld (Puntero_objeto),hl
 811  8ADD
 812  8ADD 21 E2 88     	ld hl,Frames_explosion
 813  8AE0 35           	dec (hl)
 814  8AE1 18 1E        	jr 3F
 815  8AE3
 816  8AE3 AF           2 xor a
 817  8AE4 32 D0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 818  8AE7
 819  8AE7              ; Movemos Entidades malignas.
 820  8AE7
 821  8AE7 CD D1 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 822  8AEA
 823  8AEA 3A D0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 824  8AED CB 67        	bit 4,a
 825  8AEF C8           	ret z
 826  8AF0
 827  8AF0              ; Ha habido desplazamiento de la entidad maligna.
 828  8AF0              ; Ha llegado a zona de AMADEUS ???
 829  8AF0
 830  8AF0 3A AD 88     	ld a,(Coordenada_y)
 831  8AF3 FE 14        	cp $14
 832  8AF5 D4 F6 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 833  8AF8              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 834  8AF8              ; ---------
 835  8AF8
 836  8AF8 CD 2D 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 837  8AFB CD 0A 8D     	call Repone_datos_de_borrado
 838  8AFE CD 83 8B     	call Limpia_Variables_de_borrado
 839  8B01
 840  8B01 C9           3 ret													; _de la misma.
 841  8B02
 842  8B02              ; --------------------------------------------------------------------------------------------------------------
 843  8B02              ;
 844  8B02              ;	29/1/23
 845  8B02
 846  8B02              Mov_Amadeus
 847  8B02
 848  8B02 CD CA 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 849  8B05
 850  8B05 3A D0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 851  8B08 CB 67        	bit 4,a
 852  8B0A C8           	ret z
 853  8B0B
 854  8B0B              ; ---------
 855  8B0B
 856  8B0B CD 2D 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 857  8B0E CD FA 8C     	call Repone_datos_de_borrado_Amadeus
 858  8B11 CD 83 8B     	call Limpia_Variables_de_borrado
 859  8B14
 860  8B14 C9           	ret
 861  8B15
 862  8B15              ; -----------------------------------------------------------------------------------
 863  8B15              ;
 864  8B15              ;	16/11/23
 865  8B15
 866  8B15 CD E3 8B     Inicia_entidad	call Inicia_Puntero_objeto
 867  8B18 CD 76 98     	call Recompone_posicion_inicio
 868  8B1B CD 4F 92     	call Draw
 869  8B1E CD A0 7F     	call Guarda_foto_registros
 870  8B21 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 871  8B22              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 872  8B22 CD 2B 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 873  8B25 C9           	ret
 874  8B26
 875  8B26              ; --------------------------------------------------------------------------------------------------------------
 876  8B26              ;
 877  8B26              ;	31/08/23
 878  8B26              ;
 879  8B26              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 880  8B26              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 881  8B26
 882  8B26              Guarda_foto_entidad_a_pintar
 883  8B26
 884  8B26              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 885  8B26
 886  8B26 CD 4F 92     	call Draw
 887  8B29 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 888  8B2C C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 889  8B2D
 890  8B2D              ; --------------------------------------------------------------------------------------------------------------
 891  8B2D              ;
 892  8B2D              ;	19/9/23
 893  8B2D
 894  8B2D 21 A6 88     Prepara_var_pintado ld hl,Filas
 895  8B30 11 C6 88     	ld de,Variables_de_pintado
 896  8B33 01 08 00     	ld bc,8
 897  8B36 ED B0        	ldir
 898  8B38 C9           	ret
 899  8B39
 900  8B39              ; --------------------------------------------------------------------------------------------------------------
 901  8B39
 902  8B39 21 C6 88     Repone_pintar ld hl,Variables_de_pintado
 903  8B3C 11 A6 88     	ld de,Filas
 904  8B3F 01 08 00     	ld bc,8
 905  8B42 ED B0        	ldir
 906  8B44 C9           	ret
 907  8B45
 908  8B45              ; *************************************************************************************************************************************************************
 909  8B45              ;
 910  8B45              ; 8/1/23
 911  8B45              ;
 912  8B45              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 913  8B45              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 914  8B45              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 915  8B45
 916  8B45              ; Destruye HL y DE !!!!!
 917  8B45
 918  8B45              Inicia_punteros_de_cajas
 919  8B45
 920  8B45 21 6C 85     	ld hl,Indice_de_cajas
 921  8B48 CD DD 8B         call Extrae_address
 922  8B4B 22 E6 88         ld (Puntero_store_caja),hl
 923  8B4E 21 6E 85     	ld hl,Indice_de_cajas+2
 924  8B51 22 EA 88     	ld (Indice_restore_caja),hl
 925  8B54 CD DD 8B     	call Extrae_address
 926  8B57 22 E8 88     	ld (Puntero_restore_caja),hl
 927  8B5A C9               ret
 928  8B5B
 929  8B5B              ; *************************************************************************************************************************************************************
 930  8B5B              ;
 931  8B5B              ; 8/1/23
 932  8B5B              ;
 933  8B5B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 934  8B5B
 935  8B5B 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 936  8B5E 22 04 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 937  8B61 C9           	ret
 938  8B62 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 939  8B65 22 06 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 940  8B68 C9           	ret
 941  8B69
 942  8B69              ; -------------------------------------------------------------------------------------------------------------
 943  8B69              ;
 944  8B69              ; 21/9/23
 945  8B69              ;
 946  8B69
 947  8B69              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 948  8B69
 949  8B69              Limpia_album_Amadeus
 950  8B69
 951  8B69 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 952  8B6C 7E           	ld a,(hl)
 953  8B6D A7           	and a
 954  8B6E C8           	ret z
 955  8B6F
 956  8B6F 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 957  8B72 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 958  8B75 01 0B 00     	ld bc,11
 959  8B78 AF           	xor a
 960  8B79 77           	ld (hl),a
 961  8B7A ED B0        	ldir
 962  8B7C
 963  8B7C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 964  8B7F 22 00 89     	ld (End_Snapshot_Amadeus),hl
 965  8B82
 966  8B82 C9           	ret
 967  8B83
 968  8B83 21 C0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 969  8B86 11 C1 88     	ld de,Variables_de_borrado+1
 970  8B89 01 05 00     	ld bc,5
 971  8B8C AF           	xor a
 972  8B8D 77           	ld (hl),a
 973  8B8E ED B0        	ldir
 974  8B90 C9           	ret
 975  8B91
 976  8B91              ; -------------------------------------------------------------------------------------------------------------
 977  8B91              ;
 978  8B91              ; 8/9/23
 979  8B91              ;
 980  8B91
 981  8B91              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 982  8B91              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 983  8B91
 984  8B91              Calcula_numero_de_malotes
 985  8B91
 986  8B91 21 00 70     	ld hl,Album_de_fotos
 987  8B94 EB           	ex de,hl
 988  8B95 2A FA 88     	ld hl,(Stack_snapshot)
 989  8B98
 990  8B98              ;	ld a,h
 991  8B98              ;	and a
 992  8B98              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
 993  8B98
 994  8B98 06 00        4 ld b,0
 995  8B9A 7D           	ld a,l
 996  8B9B 93           	sub e
 997  8B9C 28 07        	jr z,1F
 998  8B9E
 999  8B9E              ; Nº de malotes no es "0".
1000  8B9E
1001  8B9E D6 06        2 sub 6
1002  8BA0 04           	inc b
1003  8BA1 A7           	and a
1004  8BA2 20 FA        	jr nz,2B
1005  8BA4 78           	ld a,b
1006  8BA5
1007  8BA5 32 EF 88     1 ld (Numero_de_malotes),a
1008  8BA8 C9           	ret
1009  8BA9
1010  8BA9              ; -------------------------------------------------------------------------------------------------------------
1011  8BA9              ;
1012  8BA9              ; 8/9/23
1013  8BA9              ;
1014  8BA9
1015  8BA9              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1016  8BA9              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1017  8BA9
1018  8BA9              Calcula_malotes_Amadeus
1019  8BA9
1020  8BA9 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1021  8BAC EB           	ex de,hl
1022  8BAD 2A 00 89     	ld hl,(End_Snapshot_Amadeus)
1023  8BB0
1024  8BB0 7C           	ld a,h
1025  8BB1 A7           	and a
1026  8BB2 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1027  8BB4
1028  8BB4 06 00        	ld b,0
1029  8BB6 7D           	ld a,l
1030  8BB7 93           	sub e
1031  8BB8 28 07        	jr z,1F
1032  8BBA
1033  8BBA              ; Nº de malotes no es "0".
1034  8BBA
1035  8BBA D6 06        2 sub 6
1036  8BBC 04           	inc b
1037  8BBD A7           	and a
1038  8BBE 20 FA        	jr nz,2B
1039  8BC0 78           	ld a,b
1040  8BC1
1041  8BC1 32 EF 88     1 ld (Numero_de_malotes),a
1042  8BC4 C9           	ret
1043  8BC5
1044  8BC5              ; -------------------------------------------------------------------------------------------------------------
1045  8BC5              ;
1046  8BC5              ; 28/2/23
1047  8BC5              ;
1048  8BC5
1049  8BC5              Calcula_numero_de_disparotes
1050  8BC5
1051  8BC5 21 56 70     	ld hl,Album_de_fotos_disparos
1052  8BC8 EB           	ex de,hl
1053  8BC9 2A FE 88     	ld hl,(End_Snapshot_disparos)
1054  8BCC
1055  8BCC 06 00        	ld b,0
1056  8BCE 7D           	ld a,l
1057  8BCF 93           	sub e
1058  8BD0 28 07        	jr z,1F
1059  8BD2
1060  8BD2              ; Nº de malotes no es "0".
1061  8BD2
1062  8BD2 D6 06        2 sub 6
1063  8BD4 04           	inc b
1064  8BD5 A7           	and a
1065  8BD6 20 FA        	jr nz,2B
1066  8BD8 78           	ld a,b
1067  8BD9
1068  8BD9 32 03 89     1 ld (Numero_de_disparotes),a
1069  8BDC C9           	ret
1070  8BDD
1071  8BDD              ; *************************************************************************************************************************************************************
1072  8BDD              ;
1073  8BDD              ; 20/10/22
1074  8BDD              ;
1075  8BDD              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1076  8BDD              ;
1077  8BDD              ; Destruye el puntero y DE !!!!!
1078  8BDD
1079  8BDD 5E           Extrae_address ld e,(hl)
1080  8BDE 23           	inc hl
1081  8BDF 56           	ld d,(hl)
1082  8BE0 2B           	dec hl
1083  8BE1 EB           	ex de,hl
1084  8BE2 C9           	ret
1085  8BE3
1086  8BE3              ; *************************************************************************************************************************************************************
1087  8BE3              ;
1088  8BE3              ;	7/2/23
1089  8BE3              ;
1090  8BE3              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1091  8BE3              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1092  8BE3              ;
1093  8BE3              ;   Destruye HL y BC !!!!!,
1094  8BE3              ;
1095  8BE3              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1096  8BE3              ;					"0" ..... Izquierda.
1097  8BE3
1098  8BE3              Inicia_Puntero_objeto
1099  8BE3
1100  8BE3 3A BA 88     	ld a,(Cuad_objeto)
1101  8BE6 E6 01        	and 1
1102  8BE8 F5           	push af
1103  8BE9 CC 07 8C     	call z,Inicia_puntero_objeto_izq
1104  8BEC F1           	pop af
1105  8BED 28 2B        	jr z,1F
1106  8BEF CD F4 8B     	call Inicia_puntero_objeto_der
1107  8BF2 18 26        	jr 1F
1108  8BF4
1109  8BF4              ; Arrancamos desde la parte izquierda de la pantalla.
1110  8BF4              ; Iniciamos (Indice_Sprite_der).
1111  8BF4
1112  8BF4 2A B0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1113  8BF7 22 B4 88     	ld (Puntero_DESPLZ_der),hl
1114  8BFA CD DD 8B     	call Extrae_address
1115  8BFD 22 AA 88     	ld (Puntero_objeto),hl
1116  8C00
1117  8C00 2A B2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1118  8C03 22 B6 88     	ld (Puntero_DESPLZ_izq),hl
1119  8C06 C9           	ret
1120  8C07
1121  8C07              ; Arrancamos desde la parte derecha de la pantalla.
1122  8C07              ; Iniciamos (Indice_Sprite_izq).
1123  8C07
1124  8C07 2A B2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1125  8C0A 22 B6 88     	ld (Puntero_DESPLZ_izq),hl
1126  8C0D CD DD 8B     	call Extrae_address
1127  8C10 22 AA 88     	ld (Puntero_objeto),hl
1128  8C13
1129  8C13 2A B0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1130  8C16 22 B4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1131  8C19 C9           	ret
1132  8C1A
1133  8C1A              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1134  8C1A
1135  8C1A 21 40 83     1 ld hl,Amadeus
1136  8C1D ED 4B AA 88  	ld bc,(Puntero_objeto)
1137  8C21 B7 ED 42     	sub hl,bc
1138  8C24 C0           	ret nz
1139  8C25 21 D0 88     	ld hl,Ctrl_0
1140  8C28 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1141  8C2A C9           	ret 												; _de nuestra nave en los extremos.
1142  8C2B
1143  8C2B              ; *************************************************************************************************************************************************************
1144  8C2B              ;
1145  8C2B              ;	14/5/23
1146  8C2B              ;
1147  8C2B              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1148  8C2B              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1149  8C2B
1150  8C2B              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1151  8C2B              ;	_de la 2ª y 3ª entidad respectivamente.
1152  8C2B
1153  8C2B              Store_Restore_cajas
1154  8C2B
1155  8C2B E5           	push hl
1156  8C2C D5           	push de
1157  8C2D C5            	push bc
1158  8C2E
1159  8C2E              ;	STORE !!!!!
1160  8C2E              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1161  8C2E
1162  8C2E 21 A6 88     	ld hl,Filas
1163  8C31 ED 5B E6 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1164  8C35 01 3D 00     	ld bc,61
1165  8C38 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1166  8C3A
1167  8C3A              ; 	Entidad_sospechosa. 20/4/23
1168  8C3A
1169  8C3A 3A BF 88     	ld a,(Impacto)
1170  8C3D A7           	and a
1171  8C3E 28 0C        	jr z,1F
1172  8C40
1173  8C40 2A E6 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1174  8C43 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1175  8C46 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1176  8C47 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1177  8C49 22 09 89     	ld (Entidad_sospechosa_de_colision),hl
1178  8C4C
1179  8C4C              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1180  8C4C
1181  8C4C 2A E8 88     1 ld hl,(Puntero_restore_caja)
1182  8C4F 7E           	ld a,(hl)
1183  8C50 A7           	and a
1184  8C51 F5           	push af
1185  8C52 28 08        	jr z,2F
1186  8C54
1187  8C54 11 A6 88     	ld de,Filas
1188  8C57 01 3D 00     	ld bc,61
1189  8C5A ED B0        	ldir
1190  8C5C
1191  8C5C CD 78 8C     2 call Incrementa_punteros_de_cajas
1192  8C5F
1193  8C5F F1           	pop af
1194  8C60 28 EA        	jr z,1B
1195  8C62
1196  8C62 C1           	pop bc
1197  8C63 D1           	pop de
1198  8C64 E1           	pop hl
1199  8C65
1200  8C65 C9           	ret
1201  8C66
1202  8C66              ; **************************************************************************************************
1203  8C66              ;
1204  8C66              ;	12/05/23
1205  8C66              ;
1206  8C66              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1207  8C66
1208  8C66 E5           Restore_entidad push hl
1209  8C67 D5           	push de
1210  8C68 C5            	push bc
1211  8C69
1212  8C69 2A E6 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1213  8C6C 11 A6 88     	ld de,Filas
1214  8C6F 01 3D 00     	ld bc,61
1215  8C72 ED B0        	ldir
1216  8C74
1217  8C74 C1           	pop bc
1218  8C75 D1           	pop de
1219  8C76 E1           	pop hl
1220  8C77 C9           	ret
1221  8C78
1222  8C78              ; **************************************************************************************************
1223  8C78              ;
1224  8C78              ;	08/05/23
1225  8C78              ;
1226  8C78              ;	Incrementamos los dos punteros de entidades. (+1).
1227  8C78
1228  8C78              Incrementa_punteros_de_cajas
1229  8C78
1230  8C78 2A E8 88     	ld hl,(Puntero_restore_caja)
1231  8C7B 22 E6 88     	ld (Puntero_store_caja),hl
1232  8C7E 2A EA 88     	ld hl,(Indice_restore_caja)
1233  8C81 23           	inc hl
1234  8C82 23           	inc hl
1235  8C83 22 EA 88     	ld (Indice_restore_caja),hl
1236  8C86 CD DD 8B         call Extrae_address
1237  8C89 22 E8 88         ld (Puntero_restore_caja),hl
1238  8C8C C9               ret
1239  8C8D
1240  8C8D              ; **************************************************************************************************
1241  8C8D              ;
1242  8C8D              ;	25/01/23
1243  8C8D              ;
1244  8C8D              ;	Restore_Amadeus
1245  8C8D              ;
1246  8C8D              ;	Cargamos en DRAW los parámetros de Amadeus.
1247  8C8D              ;
1248  8C8D
1249  8C8D E5           Restore_Amadeus	push hl
1250  8C8E D5           	push de
1251  8C8F C5            	push bc
1252  8C90 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1253  8C93 11 A6 88     	ld de,Filas
1254  8C96 01 3D 00     	ld bc,61
1255  8C99 ED B0        	ldir
1256  8C9B C1           	pop bc
1257  8C9C D1           	pop de
1258  8C9D E1           	pop hl
1259  8C9E C9           	ret
1260  8C9F
1261  8C9F              ; *************************************************************************************************************************************************************
1262  8C9F              ;
1263  8C9F              ;	29/04/23
1264  8C9F              ;
1265  8C9F              ;	Store_Amadeus
1266  8C9F              ;
1267  8C9F              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1268  8C9F              ;
1269  8C9F              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1270  8C9F              ;
1271  8C9F              ;	DESTRUYE: HL y BC y DE.
1272  8C9F
1273  8C9F 21 A6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1274  8CA2 01 3D 00     	ld bc,61
1275  8CA5 ED B0        	ldir
1276  8CA7 C9           	ret
1277  8CA8
1278  8CA8              ; -----------------------------------------------------------
1279  8CA8              ;
1280  8CA8              ;	27/04/23
1281  8CA8              ;
1282  8CA8              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1283  8CA8              ;
1284  8CA8              ;	Destruye: HL,BC,DE,A
1285  8CA8
1286  8CA8 21 A6 88     Borra_datos_entidad ld hl,Filas
1287  8CAB 01 3C 00     	ld bc,60
1288  8CAE AF           	xor a
1289  8CAF 77           	ld (hl),a
1290  8CB0 11 A7 88     	ld de,Filas+1
1291  8CB3 ED B0        	ldir
1292  8CB5 C9           	ret
1293  8CB6
1294  8CB6              ; -----------------------------------------------------------
1295  8CB6
1296  8CB6              ; Teclado.
1297  8CB6
1298  8CB6 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1299  8CB8 DB FE        	in a,($fe)
1300  8CBA E6 01        	and $01
1301  8CBC 28 02        	jr z,1f
1302  8CBE 18 F6        	jr Pulsa_ENTER
1303  8CC0 C9           1 ret
1304  8CC1
1305  8CC1              ; **************************************************************************************************
1306  8CC1              ;
1307  8CC1              ; Temporización.
1308  8CC1
1309  8CC1              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1310  8CC1              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1311  8CC1              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1312  8CC1              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1313  8CC1
1314  8CC1              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1315  8CC1              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1316  8CC1              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1317  8CC1
1318  8CC1              ; A partir de $4f61 no hace falta DELAY.
1319  8CC1
1320  8CC1              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1321  8CC1
1322  8CC1 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1323  8CC4 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1324  8CC5 78           	LD A,B
1325  8CC6 A7           	AND A
1326  8CC7 20 FB        	JR NZ,wait
1327  8CC9 C9           	RET
1328  8CCA
1329  8CCA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1330  8CCA              ;
1331  8CCA              ;	5/3/23
1332  8CCA              ;
1333  8CCA              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1334  8CCA
1335  8CCA              Movimiento_Amadeus
1336  8CCA
1337  8CCA              ; Disparo.
1338  8CCA
1339  8CCA              ;	ld a,(Disparo_Amadeus)
1340  8CCA              ;	and a
1341  8CCA              ;	jr nz,1F
1342  8CCA              ;	jr 2F
1343  8CCA
1344  8CCA              ;1 ld a,$f7													; "5" para disparar.
1345  8CCA              ;	in a,($fe)
1346  8CCA              ;	and $10
1347  8CCA
1348  8CCA              ;	push af
1349  8CCA              ;	call z,Genera_disparo
1350  8CCA              ;	pop af
1351  8CCA              ;	jr nz,2F
1352  8CCA
1353  8CCA              ;	ld a,(Disparo_Amadeus)
1354  8CCA              ;	xor 1
1355  8CCA              ;	ld (Disparo_Amadeus),a
1356  8CCA
1357  8CCA 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1358  8CCC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1359  8CCE E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1360  8CD0 CC 30 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1361  8CD3
1362  8CD3 3E F7        	ld a,$f7
1363  8CD5 DB FE        	in a,($fe)
1364  8CD7 E6 01        	and $01
1365  8CD9 C8           	ret z
1366  8CDA
1367  8CDA 3E F7        	ld a,$f7
1368  8CDC DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1369  8CDE E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1370  8CE0 CC 12 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1371  8CE3 C9           	ret
1372  8CE4
1373  8CE4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1374  8CE4              ;
1375  8CE4              ;	Rutina provisional para que los malotes cagen balas.
1376  8CE4
1377  8CE4              Detecta_disparo_entidad
1378  8CE4
1379  8CE4 3A 1E 89     	ld a,(Disparo_entidad)
1380  8CE7 A7           	and a
1381  8CE8 C8           	ret z
1382  8CE9
1383  8CE9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1384  8CE9
1385  8CE9              ;	ld a,$7f				; Detecta SPACE.
1386  8CE9              ;	in a,($fe)
1387  8CE9              ;	and 1
1388  8CE9              ;	ret nz
1389  8CE9
1390  8CE9              ;	call Genera_disparo
1391  8CE9 C9           	ret
1392  8CEA
1393  8CEA              ; ----------------------------------------------------------------------
1394  8CEA              ;
1395  8CEA              ;	8/9/23
1396  8CEA
1397  8CEA 2A 00 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1398  8CED 2B            	dec hl
1399  8CEE 7E           	ld a,(hl)
1400  8CEF A7           	and a
1401  8CF0 C8           	ret z										; Salimos si es álbum está vacío.
1402  8CF1
1403  8CF1 11 C5 88     	ld de,Variables_de_borrado+5
1404  8CF4 01 06 00     	ld bc,6
1405  8CF7 ED B8        	lddr
1406  8CF9 C9           	ret
1407  8CFA
1408  8CFA              ; ----------------------------------------------------------------------
1409  8CFA              ;
1410  8CFA              ;	9/9/23
1411  8CFA
1412  8CFA              Repone_datos_de_borrado_Amadeus
1413  8CFA
1414  8CFA 21 C0 88     	ld hl,Variables_de_borrado
1415  8CFD 11 AC 70     	ld de,Album_de_fotos_Amadeus
1416  8D00 01 06 00     	ld bc,6
1417  8D03 ED B0        	ldir
1418  8D05
1419  8D05 EB           	ex de,hl
1420  8D06 22 00 89     	ld (End_Snapshot_Amadeus),hl
1421  8D09
1422  8D09 C9           	ret
1423  8D0A
1424  8D0A              ; ----------------------------------------------------------------------
1425  8D0A              ;
1426  8D0A              ;	27/10/23
1427  8D0A              ;
1428  8D0A
1429  8D0A              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1430  8D0A              ;	_ Album_de_fotos correspondiente.
1431  8D0A
1432  8D0A              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1433  8D0A              ;	_ durante el proceso de escritura.
1434  8D0A
1435  8D0A              Repone_datos_de_borrado
1436  8D0A
1437  8D0A F3           	di
1438  8D0B
1439  8D0B ED 5B FA 88  	ld de,(Stack_snapshot)
1440  8D0F 21 C0 88     	ld hl,Variables_de_borrado
1441  8D12 01 06 00     	ld bc,6
1442  8D15 ED B0        	ldir
1443  8D17 FB           	ei
1444  8D18
1445  8D18 EB           	ex de,hl
1446  8D19 22 FA 88     	ld (Stack_snapshot),hl
1447  8D1C
1448  8D1C C9           	ret
1449  8D1D
1450  8D1D              ; -----------------------------------------------------------------------------------
1451  8D1D
1452  8D1D              Pinta_Amadeus
1453  8D1D
1454  8D1D 3E 06        	ld a,6
1455  8D1F D3 FE            out ($fe),a										; Amarillo
1456  8D21
1457  8D21 CD A9 8B        	call Calcula_malotes_Amadeus
1458  8D24 CD E5 95     	call Extrae_foto_Amadeus
1459  8D27 CD 69 8B     	call Limpia_album_Amadeus
1460  8D2A
1461  8D2A C9           	ret
1462  8D2B
1463  8D2B              Pinta_entidades
1464  8D2B
1465  8D2B CD 91 8B     	call Calcula_numero_de_malotes
1466  8D2E CD 5D 95     	call Extrae_foto_entidades
1467  8D31 CD FE 7F     	call Limpia_y_reinicia_Stack_Snapshot
1468  8D34
1469  8D34 C9           	ret
1470  8D35
1471  8D35              ; -----------------------------------------------------------------------------------
1472  8D35              ;
1473  8D35              ;	12/11/23
1474  8D35              ;
1475  8D35              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1476  8D35
1477  8D35              Actualiza_relojes
1478  8D35
1479  8D35 21 16 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1480  8D38 34           	inc (hl)
1481  8D39
1482  8D39 34           	inc (hl)
1483  8D3A 35           	dec (hl)
1484  8D3B C0           	ret nz
1485  8D3C
1486  8D3C 21 17 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1487  8D3F 34           	inc (hl)
1488  8D40 C9           	ret
1489  8D41
1490  8D41              ; ---------------------------------------------------------------
1491  8D41              ;
1492  8D41              ;	27/9/23
1493  8D41
1494  8D41              Guarda_parametros_DRAW
1495  8D41
1496  8D41 21 A6 88     	ld hl,Filas
1497  8D44 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1498  8D47 01 3D 00     	ld bc,61
1499  8D4A ED B0        	ldir
1500  8D4C C9           	ret
1501  8D4D
1502  8D4D              Recupera_parametros_DRAW
1503  8D4D
1504  8D4D 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1505  8D50 11 A6 88     	ld de,Filas
1506  8D53 01 3D 00     	ld bc,61
1507  8D56 ED B0        	ldir
1508  8D58 C9           	ret
1509  8D59
1510  8D59              ; ---------------------------------------------------------------
1511  8D59
1512  8D59              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D59              ; ******************************************************************************************************************************************************************************************
   2+ 8D59              ;
   3+ 8D59              ;   21/07/23
   4+ 8D59              ;
   5+ 8D59              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D59              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D59              ;
   8+ 8D59              ;
   9+ 8D59              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D59              ;
  11+ 8D59              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D59              ;               _ hacen las entidades hacia abajo.
  13+ 8D59              ;
  14+ 8D59              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D59              ;
  16+ 8D59              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D59              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D59              ;
  19+ 8D59              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D59              ;           _ la bala.
  21+ 8D59              ;
  22+ 8D59              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D59              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D59              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D59              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D59              ;           _ en el momento de generarse la bala)).
  27+ 8D59
  28+ 8D59              Genera_disparo
  29+ 8D59
  30+ 8D59              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D59              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D59              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D59              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D59              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D59              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D59              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D59
  38+ 8D59              ; Exclusiones:
  39+ 8D59
  40+ 8D59 3A BE 88         ld a,(Vel_down)
  41+ 8D5C 47               ld b,a
  42+ 8D5D 3A 15 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D60 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D61 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D62 3A DD 88         ld a,(Columnas)
  46+ 8D65 47               ld b,a
  47+ 8D66 3A A7 88         ld a,(Columns)
  48+ 8D69 B8               cp b
  49+ 8D6A C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D6B
  51+ 8D6B              ; ----- ----- -----
  52+ 8D6B
  53+ 8D6B 3A D0 88         ld a,(Ctrl_0)
  54+ 8D6E CB 77            bit 6,a
  55+ 8D70 20 06            jr nz,14F
  56+ 8D72
  57+ 8D72 3A AD 88         ld a,(Coordenada_y)
  58+ 8D75 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D77 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D78
  61+ 8D78 21 00 80     14 ld hl,Indice_disparo
  62+ 8D7B 3A AE 88         ld a,(CTRL_DESPLZ)
  63+ 8D7E 4F               ld c,a
  64+ 8D7F 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D81              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D81              ;                                            ""        ""       "f9", B="1"
  67+ 8D81              ;                                            ""        ""       "fb", B="2"
  68+ 8D81              ;                                            ""        ""       "fb", B="3"
  69+ 8D81 A7               and a
  70+ 8D82 28 10            jr z,1F
  71+ 8D84 E6 01            and 1
  72+ 8D86 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D87
  74+ 8D87 79               ld a,c
  75+ 8D88 16 F9            ld d,$f9
  76+ 8D8A 23           2 inc hl
  77+ 8D8B 23               inc hl
  78+ 8D8C 04               inc b
  79+ 8D8D BA               cp d
  80+ 8D8E 28 04            jr z,1F
  81+ 8D90 14               inc d
  82+ 8D91 14               inc d
  83+ 8D92 18 F6            jr 2B
  84+ 8D94
  85+ 8D94 CD DD 8B     1 call Extrae_address
  86+ 8D97 E5               push hl
  87+ 8D98 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D9A DD 21 2B 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D9E
  90+ 8D9E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D9E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D9E
  93+ 8D9E 3A D0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8DA1 CB 77            bit 6,a
  95+ 8DA3 20 04            jr nz,19F
  96+ 8DA5
  97+ 8DA5 AF               xor a
  98+ 8DA6 32 1E 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8DA9
 100+ 8DA9 3A BA 88     19 ld a,(Cuad_objeto)
 101+ 8DAC FE 02            cp 2
 102+ 8DAE 38 66            jr c,3F
 103+ 8DB0 28 64            jr z,3F
 104+ 8DB2
 105+ 8DB2              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8DB2
 107+ 8DB2 E6 01            and 1
 108+ 8DB4 28 30            jr z,4F
 109+ 8DB6
 110+ 8DB6              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8DB6              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8DB6              ;
 113+ 8DB6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8DB6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8DB6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8DB6
 117+ 8DB6 2A A8 88     	ld hl,(Posicion_actual)
 118+ 8DB9
 119+ 8DB9              ;   Amadeus o entidad ???.
 120+ 8DB9
 121+ 8DB9 3A D0 88         ld a,(Ctrl_0)
 122+ 8DBC CB 77            bit 6,a
 123+ 8DBE 28 0A            jr z,8F
 124+ 8DC0
 125+ 8DC0              ; 	Dispara Amadeus.
 126+ 8DC0
 127+ 8DC0 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8DC2 CD 4E 95         call PreviousScan
 129+ 8DC5 CD 4E 95         call PreviousScan
 130+ 8DC8
 131+ 8DC8              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DC8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DC8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DC8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DC8
 136+ 8DC8 18 11            jr 10F
 137+ 8DCA
 138+ 8DCA              ; 	Dispara Entidad.
 139+ 8DCA
 140+ 8DCA 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DCD              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DCD
 143+ 8DCD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DCD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DCD
 146+ 8DCD C5               push bc
 147+ 8DCE 06 10            ld b,16
 148+ 8DD0 CD 3F 95     9 call NextScan
 149+ 8DD3 10 FB            djnz 9B
 150+ 8DD5 C1               pop bc
 151+ 8DD6 CD 40 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DD9 18 06            jr 17F
 153+ 8DDB
 154+ 8DDB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DDB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DDB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DDB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DDB
 159+ 8DDB CD 40 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DDE CD B5 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DE1              ;                                                      ; _al generar el disparo.
 162+ 8DE1
 163+ 8DE1              ; 	LLegados a este punto tendremos:
 164+ 8DE1              ;
 165+ 8DE1              ;       Puntero_objeto_disparo en IY.
 166+ 8DE1              ;       Rutinas_de_impresion en IX.
 167+ 8DE1              ;       Puntero_de_impresion en HL.
 168+ 8DE1              ;       Impacto/Dirección en BC.
 169+ 8DE1
 170+ 8DE1 CD 48 8E     17 call Almacena_disparo
 171+ 8DE4 18 52            jr 6F                                             ; RET.
 172+ 8DE6
 173+ 8DE6              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DE6              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DE6              ;
 176+ 8DE6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DE6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DE6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DE6
 180+ 8DE6 2A A8 88     4 ld hl,(Posicion_actual)
 181+ 8DE9
 182+ 8DE9              ;   Amadeus o entidad ???.
 183+ 8DE9
 184+ 8DE9 3A D0 88         ld a,(Ctrl_0)
 185+ 8DEC CB 77            bit 6,a
 186+ 8DEE 28 0A            jr z,11F
 187+ 8DF0
 188+ 8DF0              ; 	Dispara Amadeus.
 189+ 8DF0
 190+ 8DF0 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DF2 CD 4E 95         call PreviousScan
 192+ 8DF5 CD 4E 95         call PreviousScan
 193+ 8DF8
 194+ 8DF8              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DF8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DF8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DF8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DF8
 199+ 8DF8 18 11            jr 13F
 200+ 8DFA
 201+ 8DFA              ; 	Dispara Entidad.
 202+ 8DFA
 203+ 8DFA 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DFD              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DFD
 206+ 8DFD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DFD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DFD
 209+ 8DFD C5               push bc
 210+ 8DFE 06 10            ld b,16
 211+ 8E00 CD 3F 95     12 call NextScan
 212+ 8E03 10 FB            djnz 12B
 213+ 8E05 C1               pop bc
 214+ 8E06
 215+ 8E06 CD 39 8E         call Ajusta_disparo_parte_derecha
 216+ 8E09 18 06            jr 18F
 217+ 8E0B
 218+ 8E0B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E0B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E0B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E0B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E0B
 223+ 8E0B CD 39 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E0E CD B5 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E11              ;                                                       ; _al generar el disparo.
 226+ 8E11
 227+ 8E11              ; LLegados a este punto tendremos:
 228+ 8E11              ;
 229+ 8E11              ;       Puntero_objeto_disparo en IY.
 230+ 8E11              ;       Rutinas_de_impresion en IX.
 231+ 8E11              ;       Puntero_de_impresion en HL.
 232+ 8E11              ;       Impacto/Dirección en BC.
 233+ 8E11
 234+ 8E11 CD 48 8E     18 call Almacena_disparo
 235+ 8E14 18 22            jr 6F                                               ; RET.
 236+ 8E16
 237+ 8E16              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E16
 239+ 8E16 28 11        3 jr z,5F
 240+ 8E18
 241+ 8E18              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E18              ;
 243+ 8E18              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E18              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E18              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E18              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E18
 248+ 8E18              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E18              ;	   ""        ""       "f9", B="1"
 250+ 8E18              ;	   ""        ""       "fb", B="2"
 251+ 8E18              ; 	   ""        ""       "fb", B="3"
 252+ 8E18
 253+ 8E18 2A A8 88     	ld hl,(Posicion_actual)
 254+ 8E1B CD 3F 95     	call NextScan
 255+ 8E1E
 256+ 8E1E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E1E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E1E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E1E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E1E
 261+ 8E1E CD 40 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E21
 263+ 8E21              ; 	No se produce impacto. B="$80"
 264+ 8E21              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E21
 266+ 8E21 01 80 80         ld bc,$8080
 267+ 8E24
 268+ 8E24              ; 	LLegados a este punto tendremos:
 269+ 8E24              ;
 270+ 8E24              ;       Puntero_objeto_disparo en IY.
 271+ 8E24              ;       Rutinas_de_impresion en IX.
 272+ 8E24              ;       Puntero_de_impresion en HL.
 273+ 8E24              ;       Impacto/Dirección en BC.
 274+ 8E24
 275+ 8E24 CD 48 8E         call Almacena_disparo
 276+ 8E27 18 0F            jr 6F                                           ; RET.
 277+ 8E29
 278+ 8E29              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E29              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E29              ;
 281+ 8E29              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E29              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E29              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E29              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E29
 286+ 8E29 2A A8 88     5 ld hl,(Posicion_actual)
 287+ 8E2C CD 3F 95     	call NextScan
 288+ 8E2F
 289+ 8E2F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E2F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E2F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E2F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E2F
 294+ 8E2F CD 39 8E         call Ajusta_disparo_parte_derecha
 295+ 8E32
 296+ 8E32              ; 	No se produce impacto. B="$80"
 297+ 8E32              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E32
 299+ 8E32 01 80 80     15 ld bc,$8080
 300+ 8E35
 301+ 8E35              ; 	LLegados a este punto tendremos:
 302+ 8E35              ;
 303+ 8E35              ;       Puntero_objeto_disparo en IY.
 304+ 8E35              ;       Rutinas_de_impresion en IX.
 305+ 8E35              ;       Puntero_de_impresion en HL.
 306+ 8E35              ;       Impacto/Dirección en BC.
 307+ 8E35
 308+ 8E35 CD 48 8E         call Almacena_disparo
 309+ 8E38
 310+ 8E38 C9           6 ret
 311+ 8E39
 312+ 8E39              ; ----------------------------------------------------------------
 313+ 8E39              ;
 314+ 8E39              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E39              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E39              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E39
 318+ 8E39 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E3A FE 02            cp 2
 320+ 8E3C 38 01            jr c,1F
 321+ 8E3E 23               inc hl
 322+ 8E3F C9           1 ret
 323+ 8E40
 324+ 8E40 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E41 FE 01        	cp 1
 326+ 8E43 20 01        	jr nz,1F
 327+ 8E45 2B           	dec hl
 328+ 8E46 2B           1 dec hl
 329+ 8E47 C9               ret
 330+ 8E48
 331+ 8E48              ; ----------------------------------------------------------------
 332+ 8E48              ;
 333+ 8E48              ;   25/02/23
 334+ 8E48              ;
 335+ 8E48              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E48              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E48              ;
 338+ 8E48              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E48              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E48
 341+ 8E48              Almacena_disparo
 342+ 8E48
 343+ 8E48 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E49 F1               pop af
 345+ 8E4A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E4B
 347+ 8E4B 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E4C E6 01            and 1
 349+ 8E4E 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E50              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E50              ; 	Dispara AMADEUS.
 352+ 8E50
 353+ 8E50              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E50              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E50              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E50              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E50
 358+ 8E50 C5               push bc
 359+ 8E51 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E54 2A 06 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E57 A7               and a
 362+ 8E58 ED 42            sbc hl,bc
 363+ 8E5A CC 62 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E5D C1               pop bc
 365+ 8E5E 28 54            jr z,4F
 366+ 8E60
 367+ 8E60 2A 06 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E63 23               inc hl
 369+ 8E64 23               inc hl
 370+ 8E65 22 06 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E68              ;                                                   ; _ Disparo_(+1).
 372+ 8E68 18 18            jr 2F
 373+ 8E6A
 374+ 8E6A              ; Dispara una entidad.
 375+ 8E6A
 376+ 8E6A C5           1 push bc
 377+ 8E6B 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E6E 2A 04 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E71 A7               and a
 380+ 8E72 ED 42            sbc hl,bc
 381+ 8E74 CC 5B 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E77 C1               pop bc
 383+ 8E78 28 3A            jr z,4F
 384+ 8E7A
 385+ 8E7A 2A 04 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E7D 23               inc hl
 387+ 8E7E 23               inc hl
 388+ 8E7F 22 04 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E82              ;                                                   ; _ Disparo_(+1).
 390+ 8E82 CD DD 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E85              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E85              ;
 393+ 8E85              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E85              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E85              ;                                                     Puntero_de_impresion en HL.
 396+ 8E85              ;                                                     Impacto/Dirección en BC.
 397+ 8E85
 398+ 8E85 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E86 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E87 23               inc hl                                          ; _ al siguiente.
 401+ 8E88 A7               and a
 402+ 8E89 20 C0            jr nz,3B
 403+ 8E8B
 404+ 8E8B 08               ex af,af
 405+ 8E8C ED 73 F4 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E90 F9               ld sp,hl
 407+ 8E91
 408+ 8E91 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E93 F5               push af                                         ; Puntero de impresión.
 410+ 8E94 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E96 C5               push bc                                         ; Control.
 412+ 8E97
 413+ 8E97 ED 7B F4 88      ld sp,(Stack)
 414+ 8E9B
 415+ 8E9B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E9B
 417+ 8E9B 21 E3 88     	ld hl,Ctrl_1
 418+ 8E9E CB C6        	set 0,(hl)
 419+ 8EA0
 420+ 8EA0 DD E5        	push ix
 421+ 8EA2 E1               pop hl
 422+ 8EA3 F5               push af
 423+ 8EA4 DD E1            pop ix
 424+ 8EA6
 425+ 8EA6 CD A0 7F     	call Guarda_foto_registros
 426+ 8EA9
 427+ 8EA9 21 E3 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8EAC CB 86        	res 0,(hl)
 429+ 8EAE
 430+ 8EAE              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8EAE              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8EAE
 433+ 8EAE CD 62 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8EB1 CD 5B 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8EB4
 436+ 8EB4 C9           4 ret
 437+ 8EB5
 438+ 8EB5              ; ----------------------------------------------------------------
 439+ 8EB5              ;
 440+ 8EB5              ;   4/3/23
 441+ 8EB5              ;
 442+ 8EB5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8EB5              ;   _ al generarse el disparo.
 444+ 8EB5              ;
 445+ 8EB5              ;       "$80" ..... No se produce colisión.
 446+ 8EB5              ;       "$81" ..... Se produce colisión.
 447+ 8EB5              ;
 448+ 8EB5              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8EB5              ;         _ que forman el disparo.
 450+ 8EB5
 451+ 8EB5
 452+ 8EB5              Comprueba_Colision
 453+ 8EB5
 454+ 8EB5              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8EB5
 456+ 8EB5 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8EB7 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8EB8
 459+ 8EB8 CD EE 8E         call Modifica_H_Velocidad_disparo
 460+ 8EBB
 461+ 8EBB 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8EBC FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8EBE 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8EC0
 465+ 8EC0 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8EC2 CD DE 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8EC5
 468+ 8EC5 7B               ld a,e
 469+ 8EC6 E6 01            and 1
 470+ 8EC8 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8ECA              ;                                                  ; _ para activar IMPACTO.
 472+ 8ECA E1               pop hl
 473+ 8ECB E5               push hl
 474+ 8ECC CD 3F 95         call NextScan
 475+ 8ECF
 476+ 8ECF 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8ED0 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8ED2 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8ED4              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8ED4 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8ED6 CD DE 8E         call Bucle_2
 482+ 8ED9
 483+ 8ED9 43           1 ld b,e
 484+ 8EDA E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8EDB FD E1            pop iy
 486+ 8EDD C9               ret
 487+ 8EDE
 488+ 8EDE              ; ---------- ----------
 489+ 8EDE
 490+ 8EDE 06 02        Bucle_2 ld b,2
 491+ 8EE0 FD 7E 00     2 ld a,(iy)
 492+ 8EE3 A6               and (hl)
 493+ 8EE4 28 02            jr z,1F
 494+ 8EE6 1E 81            ld e,$81
 495+ 8EE8 23           1 inc hl
 496+ 8EE9 FD 23            inc iy
 497+ 8EEB 10 F3            djnz 2B
 498+ 8EED C9               ret
 499+ 8EEE
 500+ 8EEE              ; ---------- ----------
 501+ 8EEE              ;
 502+ 8EEE              ;   21/7/23
 503+ 8EEE
 504+ 8EEE              Modifica_H_Velocidad_disparo
 505+ 8EEE
 506+ 8EEE 3A 15 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EF1 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EF3 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EF4 24               inc h
 510+ 8EF5
 511+ 8EF5 C9               ret
 512+ 8EF6
 513+ 8EF6              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EF6              ;
 515+ 8EF6              ;   11/04/23
 516+ 8EF6              ;
 517+ 8EF6              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EF6              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EF6              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EF6              ;
 521+ 8EF6              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8EF6
 523+ 8EF6              Compara_coordenadas_X
 524+ 8EF6
 525+ 8EF6              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EF6              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EF6
 528+ 8EF6              ; Preparamos registros:
 529+ 8EF6
 530+ 8EF6 21 AC 88         ld hl,Filas+6
 531+ 8EF9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8EFA 23               inc hl
 533+ 8EFB 23               inc hl
 534+ 8EFC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8EFD 43               ld b,e
 536+ 8EFE
 537+ 8EFE 21 BA 88         ld hl,Filas+20
 538+ 8F01 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8F02 21 10 89         ld hl,Coordenadas_X_Entidad
 540+ 8F05 CD 21 91         call Guarda_coordenadas_X
 541+ 8F08
 542+ 8F08              ; Preparamos registros:
 543+ 8F08
 544+ 8F08 21 84 85         ld hl,Amadeus_db+6
 545+ 8F0B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8F0C 23               inc hl
 547+ 8F0D 23               inc hl
 548+ 8F0E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8F0F 7B               ld a,e
 550+ 8F10 08               ex af,af'
 551+ 8F11 21 92 85         ld hl,Amadeus_db+20
 552+ 8F14 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8F15 21 0D 89         ld hl,Coordenadas_X_Amadeus
 554+ 8F18 CD 21 91         call Guarda_coordenadas_X
 555+ 8F1B
 556+ 8F1B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8F1B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8F1B
 559+ 8F1B 04               inc b
 560+ 8F1C 05               dec b
 561+ 8F1D 28 04            jr z,1F
 562+ 8F1F 06 03            ld b,3
 563+ 8F21 18 02            jr 2F
 564+ 8F23 06 02        1 ld b,2
 565+ 8F25 08           2 ex af,af'
 566+ 8F26 3C               inc a
 567+ 8F27 3D               dec a
 568+ 8F28 28 04            jr z,5F
 569+ 8F2A 0E 03            ld c,3
 570+ 8F2C 18 02            jr 6F
 571+ 8F2E 0E 02        5 ld c,2
 572+ 8F30 79           6 ld a,c
 573+ 8F31 08               ex af,af'
 574+ 8F32 11 10 89         ld de,Coordenadas_X_Entidad
 575+ 8F35 1A           4 ld a,(de)
 576+ 8F36 21 0D 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F39 BE           3 cp (hl)
 578+ 8F3A 28 0E            jr z,7F
 579+ 8F3C 23               inc hl
 580+ 8F3D 0D               dec c
 581+ 8F3E 20 F9            jr nz,3B
 582+ 8F40 13               inc de
 583+ 8F41 08               ex af,af'
 584+ 8F42 4F               ld c,a
 585+ 8F43 08               ex af,af'
 586+ 8F44 10 EF            djnz 4B
 587+ 8F46
 588+ 8F46              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 8F46
 590+ 8F46 CD 5D 91     8 call Limpia_Coordenadas_X
 591+ 8F49 C9               ret
 592+ 8F4A
 593+ 8F4A 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 8F4C 32 BF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 8F4F 21 08 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 8F52 CB D6            set 2,(hl)
 597+ 8F54 18 F0            jr 8B
 598+ 8F56
 599+ 8F56              ; -----------------------------------------------------------------------
 600+ 8F56              ;
 601+ 8F56              ;   17/04/23
 602+ 8F56              ;
 603+ 8F56
 604+ 8F56              Detecta_colision_nave_entidad
 605+ 8F56
 606+ 8F56              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 8F56
 608+ 8F56 2A A8 88         ld hl,(Posicion_actual)
 609+ 8F59 CD 9A 94         call Calcula_puntero_de_impresion
 610+ 8F5C
 611+ 8F5C              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 8F5C              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 8F5C
 614+ 8F5C DD E5            push ix
 615+ 8F5E E1               pop hl
 616+ 8F5F E5               push hl
 617+ 8F60
 618+ 8F60              ; ----- ----- -----
 619+ 8F60 1E 00            ld e,0                                         ; Indica impacto.
 620+ 8F62 06 0A            ld b,10
 621+ 8F64 CD 94 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 8F67 7B               ld a,e
 623+ 8F68 FE 05            cp 5
 624+ 8F6A 38 0E            jr c,3F
 625+ 8F6C
 626+ 8F6C              ; LLegados a este punto:
 627+ 8F6C              ;
 628+ 8F6C              ;   HAY COLISIÓN !!!!!.
 629+ 8F6C              ;
 630+ 8F6C              ;   .db (Impacto) de Amadeus a "1".
 631+ 8F6C              ;   SET el bit3 de (Impacto2).
 632+ 8F6C              ;
 633+ 8F6C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8F6C
 635+ 8F6C 21 97 85         ld hl,Amadeus_db+25
 636+ 8F6F 36 01            ld (hl),1
 637+ 8F71 21 08 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 8F74 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 8F76 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 8F78 18 18            jr 1F
 641+ 8F7A
 642+ 8F7A              ; -----
 643+ 8F7A
 644+ 8F7A E1           3 pop hl
 645+ 8F7B CD 3F 95         call NextScan
 646+ 8F7E E5               push hl
 647+ 8F7F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 8F80 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 8F82 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 8F84 30 0C            jr nc,1F
 651+ 8F86              ;                                                  ; _ 2º scanline si esto es así.
 652+ 8F86 10 DC            djnz 2B
 653+ 8F88
 654+ 8F88              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 8F88
 656+ 8F88              ; LLegados a este punto:
 657+ 8F88              ;
 658+ 8F88              ;   NO HAY COLISIÓN !!!!!.
 659+ 8F88              ;
 660+ 8F88              ;   .db (Impacto) de Amadeus a "0".
 661+ 8F88              ;   RES el bit2 de (Impacto2).
 662+ 8F88              ;
 663+ 8F88              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F88              ;   Lo colocamos a "0".
 665+ 8F88
 666+ 8F88 21 08 89         ld hl,Impacto2
 667+ 8F8B CB 96            res 2,(hl)
 668+ 8F8D 2A 09 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 8F90 36 00            ld (hl),0
 670+ 8F92
 671+ 8F92 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 8F93 C9               ret
 673+ 8F94
 674+ 8F94               ; ---------- ----------
 675+ 8F94
 676+ 8F94 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 8F95 3A A7 88         ld a,(Columns)
 678+ 8F98 47               ld b,a
 679+ 8F99 FD 7E 00     2 ld a,(iy)
 680+ 8F9C BE               cp (hl)
 681+ 8F9D 28 01            jr z,1F
 682+ 8F9F
 683+ 8F9F 1C               inc e
 684+ 8FA0
 685+ 8FA0 23           1 inc hl
 686+ 8FA1 FD 23            inc iy
 687+ 8FA3 10 F4            djnz 2B
 688+ 8FA5 C1               pop bc
 689+ 8FA6 C9               ret
 690+ 8FA7
 691+ 8FA7              ; -------------------------------------------------------------------------------------------------------------
 692+ 8FA7              ;
 693+ 8FA7              ;   13/03/23
 694+ 8FA7              ;
 695+ 8FA7              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 8FA7              ;
 697+ 8FA7              ;   DESTRUYE: HL,BC,DE y A.
 698+ 8FA7
 699+ 8FA7 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 8FAA 7E               ld a,(hl)
 701+ 8FAB A7               and a
 702+ 8FAC C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 8FAD
 704+ 8FAD 44               ld b,h
 705+ 8FAE 4D               ld c,l
 706+ 8FAF 2A FC 88         ld hl,(Stack_snapshot_disparos)
 707+ 8FB2 E5               push hl
 708+ 8FB3 A7               and a
 709+ 8FB4 ED 42            sbc hl,bc
 710+ 8FB6 E5               push hl
 711+ 8FB7 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 8FB8
 713+ 8FB8 E1               pop hl
 714+ 8FB9 54               ld d,h
 715+ 8FBA 5D               ld e,l
 716+ 8FBB 1B               dec de
 717+ 8FBC ED B8            lddr                                                ; Limpiamos.
 718+ 8FBE
 719+ 8FBE 21 56 70         ld hl,Album_de_fotos_disparos
 720+ 8FC1 22 FC 88         ld (Stack_snapshot_disparos),hl
 721+ 8FC4
 722+ 8FC4 C9               ret
 723+ 8FC5
 724+ 8FC5              ; -------------------------------------------------------------------------------------------------------------
 725+ 8FC5              ;
 726+ 8FC5              ;   18/07/23
 727+ 8FC5              ;
 728+ 8FC5
 729+ 8FC5              Motor_de_disparos
 730+ 8FC5
 731+ 8FC5              ; Gestiona DISPAROS DE AMADEUS.
 732+ 8FC5
 733+ 8FC5 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 8FC8 2A 06 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 8FCB
 736+ 8FCB CD DD 8B     2 call Extrae_address
 737+ 8FCE 7E               ld a,(hl)
 738+ 8FCF A7               and a
 739+ 8FD0 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 8FD2
 741+ 8FD2              ; ----- ----- ----- ----- ----- -----
 742+ 8FD2
 743+ 8FD2 C5               push bc
 744+ 8FD3 CD 97 90         call foto_disparo_a_borrar
 745+ 8FD6
 746+ 8FD6              ; Existe colisión con este disparo???
 747+ 8FD6
 748+ 8FD6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 8FD7 7E               ld a,(hl)
 750+ 8FD8 2B               dec hl
 751+ 8FD9 E6 01            and 1
 752+ 8FDB 28 1D            jr z,9F
 753+ 8FDD
 754+ 8FDD              ;   En este punto:
 755+ 8FDD              ;
 756+ 8FDD              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 8FDD              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 8FDD              ;   _con la entidad).
 759+ 8FDD              ;
 760+ 8FDD              ;   Disparo_2A defw 0                                ; Control.
 761+ 8FDD              ;    defw 0                                          ; Puntero objeto.
 762+ 8FDD              ;    defw 0                                          ; Puntero de impresión.
 763+ 8FDD              ;    defw 0                                          ; Rutina de impresión.
 764+ 8FDD
 765+ 8FDD E5               push hl
 766+ 8FDE
 767+ 8FDE 06 04            ld b,4
 768+ 8FE0 23           19 inc hl
 769+ 8FE1 10 FD            djnz 19B
 770+ 8FE3
 771+ 8FE3 CD DD 8B         call Extrae_address
 772+ 8FE6 CD 0E 9C         call Genera_coordenadas_disparo
 773+ 8FE9
 774+ 8FE9              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 8FE9
 776+ 8FE9 21 0B 89         ld hl,Coordenadas_disparo_certero
 777+ 8FEC 72               ld (hl),d
 778+ 8FED 23               inc hl
 779+ 8FEE 73               ld (hl),e
 780+ 8FEF
 781+ 8FEF              ; Elimino el disparo de la base de datos.
 782+ 8FEF
 783+ 8FEF E1               pop hl
 784+ 8FF0 CD 16 91         call Elimina_disparo_de_base_de_datos
 785+ 8FF3 21 08 89         ld hl,Impacto2
 786+ 8FF6 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 8FF8
 788+ 8FF8 18 06            jr 11F
 789+ 8FFA
 790+ 8FFA CD C0 90     9 call Mueve_disparo
 791+ 8FFD CD 97 90         call foto_disparo_a_borrar
 792+ 9000
 793+ 9000 C1           11 pop bc
 794+ 9001 18 04            jr 7F
 795+ 9003
 796+ 9003              ; ----- ----- ----- ----- ----- -----
 797+ 9003
 798+ 9003 ED 42        1 sbc hl,bc
 799+ 9005 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9007
 801+ 9007 2A 06 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 900A 23               inc hl
 803+ 900B 23               inc hl
 804+ 900C 22 06 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 900F 18 BA            jr 2B
 806+ 9011
 807+ 9011 CD 62 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9014              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9014
 810+ 9014              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9014
 812+ 9014 01 6A 85         ld bc,Disparo_11
 813+ 9017 2A 04 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 901A
 815+ 901A CD DD 8B     5 call Extrae_address
 816+ 901D 7E               ld a,(hl)
 817+ 901E A7               and a
 818+ 901F 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9021
 820+ 9021              ; ----- ----- ----- ----- ----- -----
 821+ 9021
 822+ 9021 C5               push bc
 823+ 9022 CD 97 90         call foto_disparo_a_borrar
 824+ 9025
 825+ 9025              ; Existe colisión con este disparo???
 826+ 9025
 827+ 9025 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9026 7E               ld a,(hl)
 829+ 9027 2B               dec hl
 830+ 9028 E6 01            and 1
 831+ 902A 28 4D            jr z,10F
 832+ 902C
 833+ 902C              ;! La colisión se produce con Amadeus???
 834+ 902C              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 902C
 836+ 902C E5               push hl
 837+ 902D
 838+ 902D 06 04            ld b,4
 839+ 902F 23           16 inc hl
 840+ 9030 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9032
 842+ 9032 CD DD 8B         call Extrae_address
 843+ 9035 CD 0E 9C         call Genera_coordenadas_disparo
 844+ 9038
 845+ 9038 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9039 FE 16            cp $16
 847+ 903B 38 2A            jr c,15F
 848+ 903D
 849+ 903D
 850+ 903D              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 903D
 852+ 903D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 903E
 854+ 903E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 903E
 856+ 903E
 857+ 903E 2A 13 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9041
 859+ 9041              ; Coordenada X de Amadeus en D.
 860+ 9041
 861+ 9041 7D               ld a,l
 862+ 9042 E6 1F            and $1F
 863+ 9044 57               ld d,a
 864+ 9045
 865+ 9045 21 86 85         ld hl,Amadeus_db+8
 866+ 9048 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9049
 868+ 9049 21 0D 89         ld hl,Coordenadas_X_Amadeus
 869+ 904C CD 21 91         call Guarda_coordenadas_X
 870+ 904F
 871+ 904F D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9050
 873+ 9050              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9050
 875+ 9050 06 02            ld b,2
 876+ 9052 C5           20 push bc
 877+ 9053
 878+ 9053 06 03            ld b,3
 879+ 9055 21 0D 89         ld hl,Coordenadas_X_Amadeus
 880+ 9058 7E           18 ld a,(hl)
 881+ 9059 BA               cp d
 882+ 905A 20 04            jr nz,17F
 883+ 905C
 884+ 905C              ;! Colisión Amadeus !!!!!!!!!!
 885+ 905C
 886+ 905C C1               pop bc
 887+ 905D E1               pop hl
 888+ 905E 18 0D            jr 14F
 889+ 9060
 890+ 9060 23           17 inc hl
 891+ 9061 10 F5            djnz 18B
 892+ 9063
 893+ 9063 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9064
 895+ 9064 C1               pop bc
 896+ 9065 10 EB            djnz 20B
 897+ 9067
 898+ 9067
 899+ 9067              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9067              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9067
 902+ 9067 E1           15 pop hl
 903+ 9068 23               inc hl
 904+ 9069 35               dec (hl)
 905+ 906A 2B               dec hl
 906+ 906B 18 0C            jr 10F
 907+ 906D
 908+ 906D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 906D              ; _ almacén de coordenadas_X de Amadeus.
 910+ 906D
 911+ 906D E5           14 push hl
 912+ 906E CD 16 91         call Elimina_disparo_de_base_de_datos
 913+ 9071 21 08 89         ld hl,Impacto2
 914+ 9074 CB CE            set 1,(hl)
 915+ 9076 E1               pop hl
 916+ 9077 18 06            jr 12F
 917+ 9079
 918+ 9079              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9079
 920+ 9079 CD C0 90     10 call Mueve_disparo
 921+ 907C CD 97 90         call foto_disparo_a_borrar
 922+ 907F C1           12 pop bc
 923+ 9080
 924+ 9080 18 04            jr 8F
 925+ 9082
 926+ 9082              ; ----- ----- ----- ----- ----- -----
 927+ 9082
 928+ 9082 ED 42        4 sbc hl,bc
 929+ 9084 28 0A            jr z,6F
 930+ 9086
 931+ 9086 2A 04 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9089 23               inc hl
 933+ 908A 23               inc hl
 934+ 908B 22 04 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 908E 18 8A            jr 5B
 936+ 9090
 937+ 9090 CD 5B 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9093 CD 5D 91         call Limpia_Coordenadas_X
 939+ 9096 C9               ret
 940+ 9097
 941+ 9097              ; ------------------------------------------------------------------
 942+ 9097
 943+ 9097              foto_disparo_a_borrar
 944+ 9097
 945+ 9097 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9098 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9099 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 909A
 949+ 909A E5               push hl
 950+ 909B 23               inc hl
 951+ 909C 23               inc hl
 952+ 909D ED 73 F4 88      ld (Stack),sp
 953+ 90A1 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 90A2 FD E1            pop iy
 955+ 90A4 DD E1            pop ix
 956+ 90A6 E1               pop hl
 957+ 90A7 ED 7B F4 88      ld sp,(Stack)
 958+ 90AB 3A E3 88         ld a,(Ctrl_1)
 959+ 90AE CB C7            set 0,a
 960+ 90B0 32 E3 88         ld (Ctrl_1),a
 961+ 90B3 CD A0 7F         call Guarda_foto_registros
 962+ 90B6 3A E3 88         ld a,(Ctrl_1)
 963+ 90B9 CB 87            res 0,a
 964+ 90BB 32 E3 88         ld (Ctrl_1),a
 965+ 90BE E1               pop hl
 966+ 90BF C9               ret
 967+ 90C0
 968+ 90C0              ;---------------------------------------------------
 969+ 90C0              ;
 970+ 90C0              ;   18/07/23
 971+ 90C0              ;
 972+ 90C0
 973+ 90C0              Mueve_disparo
 974+ 90C0
 975+ 90C0              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 90C0              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 90C0              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 90C0
 979+ 90C0 E5               push hl
 980+ 90C1
 981+ 90C1 7E               ld a,(hl)
 982+ 90C2
 983+ 90C2 06 04            ld b,4
 984+ 90C4 23           1 inc hl
 985+ 90C5 10 FD            djnz 1B
 986+ 90C7
 987+ 90C7              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 90C7
 989+ 90C7 CD DD 8B         call Extrae_address
 990+ 90CA
 991+ 90CA E6 01            and 1
 992+ 90CC 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 90CE
 994+ 90CE              ; Disparo hacia arriba, (Amadeus).
 995+ 90CE
 996+ 90CE              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 90CE              ; _ de la dificultad.
 998+ 90CE
 999+ 90CE CD 4E 95         call PreviousScan
1000+ 90D1 CD 4E 95         call PreviousScan
1001+ 90D4 CD 4E 95         call PreviousScan
1002+ 90D7 CD 4E 95         call PreviousScan
1003+ 90DA
1004+ 90DA              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 90DA
1006+ 90DA 7C               ld a,h
1007+ 90DB FE 40            cp $40
1008+ 90DD 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 90DF
1010+ 90DF              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 90DF
1012+ 90DF EB               ex de,hl
1013+ 90E0 06 04            ld b,4
1014+ 90E2 2B           6 dec hl
1015+ 90E3 10 FD            djnz 6B
1016+ 90E5
1017+ 90E5 CD 16 91         call Elimina_disparo_de_base_de_datos
1018+ 90E8 E1               pop hl
1019+ 90E9 18 10            jr 7F
1020+ 90EB
1021+ 90EB              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 90EB              ; HL contiene el puntero de impresión del disparo.
1023+ 90EB              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 90EB
1025+ 90EB D5           3 push de
1026+ 90EC C5               push bc
1027+ 90ED
1028+ 90ED CD B5 8E         call Comprueba_Colision
1029+ 90F0
1030+ 90F0              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 90F0
1032+ 90F0 78               ld a,b
1033+ 90F1
1034+ 90F1 C1               pop bc
1035+ 90F2 D1               pop de
1036+ 90F3
1037+ 90F3 EB               ex de,hl
1038+ 90F4
1039+ 90F4 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 90F5 23               inc hl                                      ; _ movimiento.
1041+ 90F6 72               ld (hl),d
1042+ 90F7
1043+ 90F7 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 90F8
1045+ 90F8 23               inc hl                                      ; _ en curso.
1046+ 90F9 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 90FA 2B               dec hl
1048+ 90FB
1049+ 90FB C9           7 ret
1050+ 90FC
1051+ 90FC              ; Disparo hacia abajo, (Entidad).
1052+ 90FC
1053+ 90FC 3A 15 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 90FF 47               ld b,a
1055+ 9100
1056+ 9100 CD 3F 95     4 call NextScan
1057+ 9103 10 FB            djnz 4B
1058+ 9105
1059+ 9105              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9105
1061+ 9105 7C               ld a,h
1062+ 9106 FE 58            cp $58
1063+ 9108 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 910A
1065+ 910A EB               ex de,hl
1066+ 910B 06 04            ld b,4
1067+ 910D 2B           5 dec hl
1068+ 910E 10 FD            djnz 5B
1069+ 9110
1070+ 9110 CD 16 91         call Elimina_disparo_de_base_de_datos
1071+ 9113 E1               pop hl
1072+ 9114 18 E5            jr 7B
1073+ 9116
1074+ 9116              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9116
1076+ 9116 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9119 AF               xor a
1078+ 911A 77               ld (hl),a
1079+ 911B 54               ld d,h
1080+ 911C 5D               ld e,l
1081+ 911D 13               inc de
1082+ 911E ED B0            ldir
1083+ 9120 C9               ret
1084+ 9121
1085+ 9121              ; -----------------------------------------------------------------
1086+ 9121              ;
1087+ 9121              ;   19/7/23
1088+ 9121              ;
1089+ 9121              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9121              ;
1091+ 9121              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9121              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9121              ;
1094+ 9121              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9121              ;
1096+ 9121              ;   INPUTS:
1097+ 9121              ;
1098+ 9121              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9121              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9121
1101+ 9121              ;   MODIFICA: A, HL, BC y DE.
1102+ 9121
1103+ 9121              Guarda_coordenadas_X
1104+ 9121
1105+ 9121 7B               ld a,e
1106+ 9122 A7               and a
1107+ 9123 20 04            jr nz,1F
1108+ 9125
1109+ 9125 06 02            ld b,2
1110+ 9127 18 02            jr 2F
1111+ 9129
1112+ 9129 06 03        1 ld b,3
1113+ 912B 72           2 ld (hl),d
1114+ 912C 23               inc hl
1115+ 912D 14               inc d
1116+ 912E 10 FB            djnz 2B
1117+ 9130
1118+ 9130 C9               ret
1119+ 9131
1120+ 9131              ; -----------------------------------------------------------------
1121+ 9131              ;
1122+ 9131              ;   12/04/23
1123+ 9131              ;
1124+ 9131
1125+ 9131 3A 08 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9134 A7               and a
1127+ 9135 C8               ret z
1128+ 9136
1129+ 9136 FE 04            cp 4
1130+ 9138 20 09            jr nz,1F
1131+ 913A
1132+ 913A
1133+ 913A              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 913A
1135+ 913A CD 56 8F         call Detecta_colision_nave_entidad
1136+ 913D
1137+ 913D 21 08 89         ld hl,Impacto2
1138+ 9140 CB 5E            bit 3,(hl)
1139+ 9142 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9143
1141+ 9143              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9143              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9143
1144+ 9143 21 08 89     1 ld hl,Impacto2
1145+ 9146 CB 4E            bit 1,(hl)
1146+ 9148 28 07            jr z,2F
1147+ 914A
1148+ 914A 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 914D 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 914F 18 0B            jr 3F
1151+ 9151
1152+ 9151 21 08 89     2 ld hl,Impacto2
1153+ 9154 CB 46            bit 0,(hl)
1154+ 9156 C8               ret z
1155+ 9157
1156+ 9157              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9157
1158+ 9157 21 E3 88         ld hl,Ctrl_1
1159+ 915A CB D6            set 2,(hl)
1160+ 915C
1161+ 915C C9           3 ret
1162+ 915D
1163+ 915D              ; -----------------------------------------------------------------
1164+ 915D              ;
1165+ 915D              ;   19/7/23
1166+ 915D              ;
1167+ 915D              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 915D
1169+ 915D AF           Limpia_Coordenadas_X xor a
1170+ 915E 06 06            ld b,6
1171+ 9160 21 0D 89         ld hl,Coordenadas_X_Amadeus
1172+ 9163 77           1 ld (hl),a
1173+ 9164 23               inc hl
1174+ 9165 10 FC            djnz 1B
1175+ 9167 C9               ret
1176+ 9168
1177+ 9168              ; -----------------------------------------------------------------
1178+ 9168              ;
1179+ 9168              ;   25/04/23
1180+ 9168              ;
1181+ 9168
1182+ 9168              Determina_resultado_comparativa
1183+ 9168
1184+ 9168              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9168              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9168              ;
1187+ 9168              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9168              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9168              ;
1190+ 9168              ;   SBC HL,DE
1191+ 9168
1192+ 9168              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9168              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9168
1195+ 9168              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9168              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9168
1198+ 9168
1199+ 9168 3A BA 88         ld a,(Cuad_objeto)
1200+ 916B FE 02            cp 2
1201+ 916D 28 26            jr z,2F
1202+ 916F 38 24            jr c,2F
1203+ 9171
1204+ 9171              ; Cuadrantes 3º y 4º
1205+ 9171
1206+ 9171 E6 01            and 1
1207+ 9173 28 10            jr z,4F
1208+ 9175
1209+ 9175              ; Cuadrante 3º
1210+ 9175
1211+ 9175 7C               ld a,h
1212+ 9176 06 00            ld b,0
1213+ 9178
1214+ 9178 CD 03 92         call Compara_cositas_H3
1215+ 917B
1216+ 917B 04               inc b
1217+ 917C 05               dec b
1218+ 917D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 917E
1220+ 917E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 917F 06 00            ld b,0
1222+ 9181
1223+ 9181 CD 15 92         call Compara_cositas_L3
1224+ 9184 C9               ret
1225+ 9185
1226+ 9185              ; Cuadrante 4º
1227+ 9185
1228+ 9185 7C           4 ld a,h
1229+ 9186 06 00            ld b,0
1230+ 9188
1231+ 9188 CD 27 92         call Compara_cositas_H4
1232+ 918B
1233+ 918B 04               inc b
1234+ 918C 05               dec b
1235+ 918D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 918E
1237+ 918E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 918F 06 00            ld b,0
1239+ 9191
1240+ 9191 CD 3D 92         call Compara_cositas_L4
1241+ 9194 C9               ret
1242+ 9195
1243+ 9195              ; Cuadrantes 1º y 2º.
1244+ 9195
1245+ 9195 28 10        2 jr z,3F
1246+ 9197
1247+ 9197              ; 1er Cuadrante
1248+ 9197
1249+ 9197 7C               ld a,h
1250+ 9198 06 00            ld b,0
1251+ 919A
1252+ 919A CD DB 91         call Compara_cositas_H1
1253+ 919D
1254+ 919D 04               inc b
1255+ 919E 05               dec b
1256+ 919F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 91A0
1258+ 91A0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 91A1 06 00            ld b,0
1260+ 91A3
1261+ 91A3 CD F1 91         call Compara_cositas_L1
1262+ 91A6 C9               ret
1263+ 91A7
1264+ 91A7
1265+ 91A7              ; 2º Cuadrante
1266+ 91A7
1267+ 91A7 7C           3 ld a,h
1268+ 91A8 06 00            ld b,0
1269+ 91AA
1270+ 91AA CD B7 91         call Compara_cositas_H2
1271+ 91AD
1272+ 91AD 04               inc b
1273+ 91AE 05               dec b
1274+ 91AF C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 91B0
1276+ 91B0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 91B1 06 00            ld b,0
1278+ 91B3
1279+ 91B3 CD C9 91         call Compara_cositas_L2
1280+ 91B6 C9               ret
1281+ 91B7
1282+ 91B7 A7           Compara_cositas_H2 and a
1283+ 91B8 28 0D            jr z,1F
1284+ 91BA              ;    cp $fd
1285+ 91BA              ;    jr z,1F
1286+ 91BA              ;    cp $fe
1287+ 91BA              ;    jr z,1F
1288+ 91BA FE FF            cp $ff
1289+ 91BC 28 09            jr z,1F
1290+ 91BE FE 01            cp $01
1291+ 91C0 28 05            jr z,1F
1292+ 91C2 FE 02            cp $02
1293+ 91C4 28 01            jr z,1F
1294+ 91C6 C0               ret nz
1295+ 91C7 04           1 inc b
1296+ 91C8 C9               ret
1297+ 91C9
1298+ 91C9 A7           Compara_cositas_L2 and a
1299+ 91CA 28 0D            jr z,1F
1300+ 91CC              ;    cp $fd
1301+ 91CC              ;    jr z,1F
1302+ 91CC FE FE            cp $fe
1303+ 91CE 28 09            jr z,1F
1304+ 91D0 FE FF            cp $ff
1305+ 91D2 28 05            jr z,1F
1306+ 91D4 FE 01            cp $01
1307+ 91D6 28 01            jr z,1F
1308+ 91D8              ;    cp $02
1309+ 91D8              ;    jr z,1F
1310+ 91D8 C0               ret nz
1311+ 91D9 04           1 inc b
1312+ 91DA C9               ret
1313+ 91DB
1314+ 91DB A7           Compara_cositas_H1 and a
1315+ 91DC 28 11            jr z,1F
1316+ 91DE              ;    cp $fd
1317+ 91DE              ;    jr z,1F
1318+ 91DE              ;    cp $fe
1319+ 91DE              ;    jr z,1F
1320+ 91DE FE FF            cp $ff
1321+ 91E0 28 0D            jr z,1F
1322+ 91E2 FE 01            cp $01
1323+ 91E4 28 09            jr z,1F
1324+ 91E6 FE 02            cp $02
1325+ 91E8 28 05            jr z,1F
1326+ 91EA FE 03            cp $03
1327+ 91EC 28 01            jr z,1F
1328+ 91EE C0               ret nz
1329+ 91EF 04           1 inc b
1330+ 91F0 C9               ret
1331+ 91F1
1332+ 91F1 A7           Compara_cositas_L1 and a
1333+ 91F2 28 0D            jr z,1F
1334+ 91F4              ;    cp $fd
1335+ 91F4              ;    jr z,1F
1336+ 91F4              ;    cp $fe
1337+ 91F4              ;    jr z,1F
1338+ 91F4              ;    cp $ff
1339+ 91F4              ;    jr z,1F
1340+ 91F4 FE 01            cp $01
1341+ 91F6 28 09            jr z,1F
1342+ 91F8 FE 02            cp $02
1343+ 91FA 28 05            jr z,1F
1344+ 91FC FE 03            cp $03
1345+ 91FE 28 01            jr z,1F
1346+ 9200 C0               ret nz
1347+ 9201 04           1 inc b
1348+ 9202 C9               ret
1349+ 9203
1350+ 9203 A7           Compara_cositas_H3 and a
1351+ 9204 28 0D            jr z,1F
1352+ 9206              ;    cp $fd
1353+ 9206              ;    jr z,1F
1354+ 9206 FE FE            cp $fe
1355+ 9208 28 09            jr z,1F
1356+ 920A FE FF            cp $ff
1357+ 920C 28 05            jr z,1F
1358+ 920E FE 01            cp $01
1359+ 9210 28 01            jr z,1F
1360+ 9212              ;    cp $02
1361+ 9212              ;    jr z,1F
1362+ 9212              ;    cp $03
1363+ 9212              ;    jr z,1F
1364+ 9212 C0               ret nz
1365+ 9213 04           1 inc b
1366+ 9214 C9               ret
1367+ 9215
1368+ 9215 A7           Compara_cositas_L3 and a
1369+ 9216 28 0D            jr z,1F
1370+ 9218              ;    cp $fd
1371+ 9218              ;    jr z,1F
1372+ 9218              ;    cp $fe
1373+ 9218              ;    jr z,1F
1374+ 9218              ;    cp $ff
1375+ 9218              ;    jr z,1F
1376+ 9218 FE 01            cp $01
1377+ 921A 28 09            jr z,1F
1378+ 921C FE 02            cp $02
1379+ 921E 28 05            jr z,1F
1380+ 9220 FE 03            cp $03
1381+ 9222 28 01            jr z,1F
1382+ 9224 C0               ret nz
1383+ 9225 04           1 inc b
1384+ 9226 C9               ret
1385+ 9227
1386+ 9227 A7           Compara_cositas_H4 and a
1387+ 9228 28 11            jr z,1F
1388+ 922A FE FD            cp $fd
1389+ 922C 28 0D            jr z,1F
1390+ 922E FE FE            cp $fe
1391+ 9230 28 09            jr z,1F
1392+ 9232 FE FF            cp $ff
1393+ 9234 28 05            jr z,1F
1394+ 9236 FE 01            cp $01
1395+ 9238 28 01            jr z,1F
1396+ 923A              ;    cp $02
1397+ 923A              ;    jr z,1F
1398+ 923A              ;    cp $03
1399+ 923A              ;    jr z,1F
1400+ 923A C0               ret nz
1401+ 923B 04           1 inc b
1402+ 923C C9               ret
1403+ 923D
1404+ 923D A7           Compara_cositas_L4 and a
1405+ 923E 28 0D            jr z,1F
1406+ 9240              ;    cp $fd
1407+ 9240              ;    jr z,1F
1408+ 9240 FE FE            cp $fe
1409+ 9242 28 09            jr z,1F
1410+ 9244 FE FF            cp $ff
1411+ 9246 28 05            jr z,1F
1412+ 9248 FE 01            cp $01
1413+ 924A 28 01            jr z,1F
1414+ 924C              ;    cp $02
1415+ 924C              ;    jr z,1F
1416+ 924C              ;    cp $03
1417+ 924C              ;    jr z,1F
1418+ 924C C0               ret nz
1419+ 924D 04           1 inc b
1420+ 924E C9               ret
# file closed: Disparo.asm
1513  924F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 924F              ; ******************************************************************************************************************************************************************************************
   2+ 924F              ;
   3+ 924F              ; 26/06/23
   4+ 924F              ;
   5+ 924F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 924F
   7+ 924F CD 33 95     Draw call Prepara_draw
   8+ 9252 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9253 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9254 28 05        	jr z,2F
  11+ 9256
  12+ 9256 3A BA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9259 18 0C        	jr 1F
  14+ 925B
  15+ 925B 2A B8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 925E 22 A8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9261 CD F0 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9264              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9264 CD 99 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9267
  21+ 9267 3A D0 88     1 ld a,(Ctrl_0)
  22+ 926A CB 6F        	bit 5,a
  23+ 926C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 926E
  25+ 926E CD 86 92     	call Comprueba_limite_horizontal
  26+ 9271 CD 16 93     	call Comprueba_limite_vertical
  27+ 9274
  28+ 9274              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9274              ; -----------------------
  30+ 9274              ; -----------------------
  31+ 9274              ; -----------------------
  32+ 9274
  33+ 9274 CD 63 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9277 CD 9A 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 927A CD F9 94     	call Define_rutina_de_impresion
  36+ 927D
  37+ 927D 3A D0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9280 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9282 32 D0 88     	ld (Ctrl_0),a
  40+ 9285
  41+ 9285 C9           	ret
  42+ 9286
  43+ 9286              ; *******************************************************************************************************************************************************************************************
  44+ 9286              ;	21/01/23
  45+ 9286              ;
  46+ 9286              ; 	Comprueba_limite_horizontal.
  47+ 9286              ;
  48+ 9286              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9286              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9286              ;
  51+ 9286              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9286              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9286              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9286              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9286
  56+ 9286
  57+ 9286
  58+ 9286 3A D0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9289 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 928B 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 928D E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 928F 32 D0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9292 18 09            jr 6F
  64+ 9294 CB 5F        1 bit 3,a
  65+ 9296 28 0A            jr z,2F
  66+ 9298 E6 F7            and $f7
  67+ 929A 32 D0 88         ld (Ctrl_0),a
  68+ 929D CD F0 93     6 call Inicializacion
  69+ 92A0 18 5B            jr 5F
  70+ 92A2 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92A3
  72+ 92A3              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92A3              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92A3
  75+ 92A3 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92A4 2A DE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92A7 CD 58 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92AA 67           	ld h,a
  79+ 92AB EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 92AC CD 58 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 92AF 67           	ld h,a
  82+ 92B0 A7           	and a
  83+ 92B1 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 92B3 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 92B4 3A BA 88     	ld a,(Cuad_objeto)
  86+ 92B7 FE 02        	cp 2
  87+ 92B9 38 1E        	jr c,3F
  88+ 92BB 28 1C        	jr z,3F
  89+ 92BD 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 92BE 28 23            jr z,7F
  91+ 92C0 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 92C2 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 92C4 E1           	pop hl
  94+ 92C5
  95+ 92C5              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 92C5              ; _para indicar con E="2" en caso necesario.
  97+ 92C5
  98+ 92C5 E5               push hl
  99+ 92C6 C5               push bc
 100+ 92C7 CD 58 98     	call calcula_tercio
 101+ 92CA FE 01        	cp 1
 102+ 92CC 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 92CE CD FE 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 92D1 28 26            jr z,9F
 105+ 92D3 38 24            jr c,9F
 106+ 92D5 1E 00        11 ld e,0
 107+ 92D7 18 22            jr 8F
 108+ 92D9 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 92DA 28 07        	jr z, 7F
 110+ 92DC 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 92DE 1E 00         	ld e,0
 112+ 92E0 E1           	pop hl
 113+ 92E1 18 04        	jr 4F
 114+ 92E3 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 92E5 18 15            jr 10F
 116+ 92E7
 117+ 92E7              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 92E7              ; _para indicar con E="2" en caso necesario.
 119+ 92E7
 120+ 92E7 E5           4 push hl
 121+ 92E8 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 92E9 CD 58 98     	call calcula_tercio
 123+ 92EC FE 01        	cp 1
 124+ 92EE 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 92F0 CD FE 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 92F3 28 04            jr z,9F
 127+ 92F5 30 02            jr nc,9F
 128+ 92F7 18 02        	jr 8F
 129+ 92F9 1E 02        9 ld e,2
 130+ 92FB C1           8 pop bc
 131+ 92FC E1           10 pop hl
 132+ 92FD C9           5 ret
 133+ 92FE
 134+ 92FE              ; --------------------
 135+ 92FE              ;
 136+ 92FE              ; 25/08/22
 137+ 92FE
 138+ 92FE CD 58 98     Comprueba_centro call calcula_tercio
 139+ 9301 67               ld h,a
 140+ 9302 08           	ex af,af
 141+ 9303 FE 02        	cp 2
 142+ 9305 38 07        	jr c,1F
 143+ 9307 28 05        	jr z,1F
 144+ 9309 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 930C 18 03        	jr 2F
 146+ 930E 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9311 08           2 ex af,af
 148+ 9312 A7               and a
 149+ 9313 ED 42            sbc hl,bc
 150+ 9315 C9               ret
 151+ 9316
 152+ 9316              ; *********************************************************************************************************************************************************************************************
 153+ 9316              ;
 154+ 9316              ;   16/8/22
 155+ 9316              ;
 156+ 9316              ;	Comprueba_limite_vertical
 157+ 9316              ;
 158+ 9316              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9316              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9316              ;
 161+ 9316
 162+ 9316 2A A8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9319 7D           	ld a,l
 164+ 931A E6 1F        	and $1F
 165+ 931C 57           	ld d,a
 166+ 931D 3A E0 88     	ld a,(Limite_vertical)
 167+ 9320 BA           	cp d 											; Límite - Posición.
 168+ 9321 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9322 3A BA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9325 CB 47        	bit 0,a
 171+ 9327 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9329
 173+ 9329              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9329
 175+ 9329 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 932A 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 932C
 178+ 932C              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 932C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 932C
 181+ 932C 3A AC 88         ld a,(Coordenada_X)
 182+ 932F 16 0F            ld d,Centro_izquierda
 183+ 9331 A7               and a
 184+ 9332 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9333 28 1E            jr z,3F
 186+ 9335 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9337              ;                                                    ; _salimos sin modificar nada.
 188+ 9337 18 0E            jr 2F
 189+ 9339 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 933A 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 933C
 192+ 933C              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 933C              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 933C
 195+ 933C 3A AC 88         ld a,(Coordenada_X)
 196+ 933F 16 10            ld d,Centro_derecha
 197+ 9341 A7               and a
 198+ 9342 92               sub d
 199+ 9343 28 0E            jr z,3F
 200+ 9345 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9347              ;                                                    ; _salimos sin modificar nada.
 202+ 9347 CB 43        2 bit 0,e
 203+ 9349 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 934B C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 934C CD E0 93         call Modificaccionne
 206+ 934F C1           	pop bc
 207+ 9350 CD F0 93         call Inicializacion
 208+ 9353 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9354
 210+ 9354              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9354
 212+ 9354 C5           4 push bc
 213+ 9355 01 A7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9358 0A           	ld a,(bc)
 215+ 9359 3D           	dec a
 216+ 935A 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 935B 7D           	ld a,l
 218+ 935C 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 935D CB 47        	bit 0,a
 220+ 935F 28 03        	jr z,5F
 221+ 9361 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9362 18 2E        	jr 7F
 223+ 9364
 224+ 9364              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9364
 226+ 9364 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9365 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9366 3A D0 88     	ld a,(Ctrl_0)
 229+ 9369 CB 4F        	bit 1,a
 230+ 936B 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 936D F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 936E
 233+ 936E              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 936E
 235+ 936E 1C               inc e
 236+ 936F 1D               dec e
 237+ 9370 20 07            jr nz,12F
 238+ 9372 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9373 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9374 22 A8 88     	ld (Posicion_actual),hl
 241+ 9377 18 44        13 jr 9F
 242+ 9379 CB 43        12 bit 0,e
 243+ 937B 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 937D              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 937D C1           	pop bc
 246+ 937E 18 D3        	jr 3B
 247+ 9380 80           14 add b
 248+ 9381 6F               ld l,a
 249+ 9382 22 A8 88     	ld (Posicion_actual),hl
 250+ 9385 CD E0 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9388 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 938A E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 938C 32 D0 88         ld (Ctrl_0),a
 254+ 938F F1           	pop af
 255+ 9390 18 2B        	jr 9F
 256+ 9392
 257+ 9392              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9392
 259+ 9392 F5           7 push af
 260+ 9393 3A D0 88     	ld a,(Ctrl_0)
 261+ 9396 CB 47        	bit 0,a
 262+ 9398 20 1D        	jr nz,8F
 263+ 939A F1           	pop af
 264+ 939B
 265+ 939B              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 939B
 267+ 939B 1C           	inc e
 268+ 939C 1D               dec e
 269+ 939D 20 07            jr nz,10F
 270+ 939F 90           	sub b
 271+ 93A0 6F               ld l,a
 272+ 93A1 22 A8 88     	ld (Posicion_actual),hl
 273+ 93A4 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93A6              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93A6 CB 43        10 bit 0,e
 276+ 93A8 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93AA              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93AA C1           	pop bc
 279+ 93AB 18 A6        	jr 3B
 280+ 93AD 90           16 sub b
 281+ 93AE 6F               ld l,a
 282+ 93AF 22 A8 88     	ld (Posicion_actual),hl
 283+ 93B2 CD E0 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 93B5 18 06            jr 9F
 285+ 93B7 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 93B9 32 D0 88         ld (Ctrl_0),a
 287+ 93BC F1           	pop af
 288+ 93BD C1           9 pop bc
 289+ 93BE 1E 00        	ld e,0
 290+ 93C0 CD F0 93         call Inicializacion
 291+ 93C3 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 93C4 08           	ex af,af
 293+ 93C5 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 93C6 18 8B            jr 3B
 295+ 93C8
 296+ 93C8              ; --------------------
 297+ 93C8
 298+ 93C8 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 93CA CD 4E 95     1 call PreviousScan
 300+ 93CD 10 FB            djnz 1B
 301+ 93CF 22 A8 88     	ld (Posicion_actual),hl
 302+ 93D2 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 93D3 C9           	ret
 304+ 93D4
 305+ 93D4              ; --------------------
 306+ 93D4
 307+ 93D4 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 93D6 CD 3F 95     1 call NextScan
 309+ 93D9 10 FB            djnz 1B
 310+ 93DB 22 A8 88     	ld (Posicion_actual),hl
 311+ 93DE AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 93DF C9           	ret
 313+ 93E0
 314+ 93E0              ; --------------------
 315+ 93E0              ;
 316+ 93E0              ;	22/01/23
 317+ 93E0              ;
 318+ 93E0              ;	E="1". Hemos cambiado de cuadrante.
 319+ 93E0              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 93E0              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 93E0
 322+ 93E0
 323+ 93E0              Modificaccionne
 324+ 93E0
 325+ 93E0 3A BA 88     	ld a,(Cuad_objeto)
 326+ 93E3 FE 02        	cp 2
 327+ 93E5 CC C8 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 93E8 DC C8 93         call c,Modifica_Pos_actual
 329+ 93EB C8           	ret z
 330+ 93EC CD D4 93         call Modifica_Pos_actual2
 331+ 93EF C9               ret
 332+ 93F0
 333+ 93F0              ; *************************************************************************************************************************************************************************************************
 334+ 93F0              ;
 335+ 93F0              ;	13/8/22
 336+ 93F0              ;
 337+ 93F0              ;	Inicializacion
 338+ 93F0              ;
 339+ 93F0              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 93F0              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 93F0              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 93F0              ;
 343+ 93F0              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 93F0              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 93F0              ;	_ desaparece/aparece.
 346+ 93F0
 347+ 93F0              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 93F0              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 93F0              ;
 350+ 93F0              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 93F0              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 93F0              ; 		   [E] ="0"
 353+ 93F0
 354+ 93F0              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 93F0
 356+ 93F0 CD 58 98     Inicializacion call calcula_tercio
 357+ 93F3 28 36        	jr z,primit
 358+ 93F5 E6 02        	and 2
 359+ 93F7 20 07        	jr nz,segmit
 360+ 93F9 7D           	ld a,l
 361+ 93FA FE 7F        	cp $7f
 362+ 93FC 38 2D        	jr c,primit
 363+ 93FE 28 2B        	jr z,primit
 364+ 9400 CD 5D 94     segmit call column
 365+ 9403 38 13        	jr c,tercuad
 366+ 9405 3E 04        cuarcuad ld a,4
 367+ 9407 32 BA 88     	ld (Cuad_objeto),a
 368+ 940A 21 20 48     	ld hl,$4820
 369+ 940D 22 DE 88     	ld (Limite_horizontal),hl
 370+ 9410 21 E0 88     	ld hl,Limite_vertical
 371+ 9413 36 0D        	ld (hl),$0d
 372+ 9415 08           	ex af,af
 373+ 9416 18 3C        	jr 1F
 374+ 9418              tercuad
 375+ 9418 3E 03        	ld a,3
 376+ 941A 32 BA 88     	ld (Cuad_objeto),a
 377+ 941D 21 20 48     	ld hl,$4820
 378+ 9420 22 DE 88     	ld (Limite_horizontal),hl
 379+ 9423 21 E0 88     	ld hl,Limite_vertical
 380+ 9426 36 12        	ld (hl),$12
 381+ 9428 08           	ex af,af
 382+ 9429 18 29        	jr 1F
 383+ 942B CD 5D 94     primit call column
 384+ 942E 38 13        	jr c, primcuad
 385+ 9430              segcuad
 386+ 9430 3E 02        	ld a,2
 387+ 9432 32 BA 88     	ld (Cuad_objeto),a
 388+ 9435 21 C0 4F     	ld hl,$4fc0
 389+ 9438 22 DE 88     	ld (Limite_horizontal),hl
 390+ 943B 21 E0 88     	ld hl,Limite_vertical
 391+ 943E 36 0D        	ld (hl),$0d
 392+ 9440 08           	ex af,af
 393+ 9441 18 11        	jr 1F
 394+ 9443              primcuad
 395+ 9443 3E 01        	ld a,1
 396+ 9445 32 BA 88     	ld (Cuad_objeto),a
 397+ 9448 21 C0 4F     	ld hl,$4fc0
 398+ 944B 22 DE 88     	ld (Limite_horizontal),hl
 399+ 944E 21 E0 88     	ld hl,Limite_vertical
 400+ 9451 36 12        	ld (hl),$12
 401+ 9453 08           	ex af,af
 402+ 9454 CD E3 9B     1 call Genera_coordenadas
 403+ 9457 21 D0 88     	ld hl,Ctrl_0
 404+ 945A CB EE        	set 5,(hl)
 405+ 945C C9           	ret
 406+ 945D
 407+ 945D              ; ------------------------------------------------------------------------------------------------------------------
 408+ 945D
 409+ 945D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 945D              ;
 411+ 945D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 945D
 413+ 945D 7D           column ld a,l
 414+ 945E E6 1F        	and $1f
 415+ 9460 FE 10         	cp $10
 416+ 9462 C9            	ret
 417+ 9463
 418+ 9463              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9463              ;
 420+ 9463              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9463              ;
 422+ 9463              ; 14/12/22
 423+ 9463              ;
 424+ 9463              ;	Modifica: A y BC.
 425+ 9463
 426+ 9463 3A BA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9466 E6 01        	and 1
 428+ 9468 28 17        	jr z,1F
 429+ 946A
 430+ 946A              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 946A
 432+ 946A 3A AC 88     	ld a,(Coordenada_X)
 433+ 946D 47           	ld b,a
 434+ 946E 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 946F 79           	ld a,c
 436+ 9470 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9471 38 08        	jr c,2F
 438+ 9473 47           	ld b,a
 439+ 9474 79           	ld a,c
 440+ 9475 90           	sub b
 441+ 9476 32 DD 88     	ld (Columnas),a
 442+ 9479 18 1B        	jr 4F
 443+ 947B 79           2 ld a,c
 444+ 947C 32 DD 88     	ld (Columnas),a
 445+ 947F 18 15        	jr 4F
 446+ 9481
 447+ 9481              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9481
 449+ 9481 3A AC 88     1 ld a,(Coordenada_X)
 450+ 9484 81           	add c
 451+ 9485 3D           	dec a
 452+ 9486 D6 1F        	sub $1f
 453+ 9488 38 08        	jr c,3F
 454+ 948A 47           	ld b,a
 455+ 948B 79           	ld a,c
 456+ 948C 90           	sub b
 457+ 948D 32 DD 88     	ld (Columnas),a
 458+ 9490 18 04        	jr 4F
 459+ 9492 79           3 ld a,c
 460+ 9493 32 DD 88     	ld (Columnas),a
 461+ 9496 D9           4 exx
 462+ 9497 4F           	ld c,a
 463+ 9498 D9           	exx
 464+ 9499 C9            ret
 465+ 949A
 466+ 949A              ; --------------------------------------------------------------------------------------------------------------------
 467+ 949A              ;
 468+ 949A              ;   19/7/23
 469+ 949A              ;
 470+ 949A              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 949A              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 949A              ;
 473+ 949A              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 949A              ;			HL e IY Contienen (Puntero_objeto).
 475+ 949A              ;
 476+ 949A              ;	DESTRUYE: HL,B Y A.
 477+ 949A
 478+ 949A 3A BA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 949D FE 02        	cp 2
 480+ 949F 38 18        	jr c,1F
 481+ 94A1 28 16        	jr z,1F
 482+ 94A3 E6 01        	and 1
 483+ 94A5 28 0D        	jr z,3F
 484+ 94A7
 485+ 94A7              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94A7
 487+ 94A7 CD ED 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94AA
 489+ 94AA 7D           9 ld a,l
 490+ 94AB E6 1F        	and $1f
 491+ 94AD 28 2A        	jr z,7F
 492+ 94AF 2B           	dec hl
 493+ 94B0 10 F8        	djnz 9B
 494+ 94B2 18 25        	jr 7F
 495+ 94B4
 496+ 94B4              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 94B4
 498+ 94B4 2A A8 88     3 ld hl,(Posicion_actual)
 499+ 94B7 18 20        	jr 7F
 500+ 94B9
 501+ 94B9 28 14        1 jr z,2F
 502+ 94BB
 503+ 94BB              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 94BB
 505+ 94BB CD ED 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 94BE
 507+ 94BE 7D           4 ld a,l
 508+ 94BF E6 1F        	and $1f
 509+ 94C1 28 03        	jr z,6F
 510+ 94C3 2B           	dec hl
 511+ 94C4 10 F8        	djnz 4B
 512+ 94C6 06 0F        6 ld b,15
 513+ 94C8 CD 4E 95     5 call PreviousScan
 514+ 94CB 10 FB        	djnz 5B
 515+ 94CD 18 0A        	jr 7F
 516+ 94CF
 517+ 94CF              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 94CF
 519+ 94CF CD ED 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 94D2 06 0F        	ld b,15
 521+ 94D4 CD 4E 95     8 call PreviousScan
 522+ 94D7 10 FB        	djnz 8B
 523+ 94D9
 524+ 94D9 E5           7 push hl
 525+ 94DA DD E1        	pop ix
 526+ 94DC
 527+ 94DC 2A AA 88     	ld hl,(Puntero_objeto)
 528+ 94DF E5           	push hl
 529+ 94E0 FD E1        	pop iy
 530+ 94E2
 531+ 94E2              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 94E2
 533+ 94E2 3A D0 88     	ld a,(Ctrl_0)
 534+ 94E5 CB 77        	bit 6,a
 535+ 94E7 C8           	ret z
 536+ 94E8
 537+ 94E8              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 94E8              ; _ entidad / Amadeus´.
 539+ 94E8
 540+ 94E8 DD 22 13 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 94EC
 542+ 94EC C9           	ret
 543+ 94ED
 544+ 94ED              ; --------------------------------------------------------------------------------------------------------------------
 545+ 94ED              ;
 546+ 94ED              ;	2/1/23
 547+ 94ED              ;
 548+ 94ED              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 94ED              ;
 550+ 94ED              ;	Tras esta rutina tenemos:
 551+ 94ED              ;
 552+ 94ED              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 94ED              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 94ED              ;
 555+ 94ED              ;	DESTRUYE!!!!! HL,B y A.
 556+ 94ED
 557+ 94ED 2A A8 88     Operandos ld hl,(Posicion_actual)
 558+ 94F0 3A DD 88     	ld a,(Columnas)
 559+ 94F3 3D           	dec a
 560+ 94F4 20 01        	jr nz,1F
 561+ 94F6 3C           	inc a
 562+ 94F7 47           1 ld b,a
 563+ 94F8 C9           	ret
 564+ 94F9
 565+ 94F9              ; --------------------------------------------------------------------------------------------------------------------
 566+ 94F9              ;
 567+ 94F9              ;	3/1/23
 568+ 94F9              ;
 569+ 94F9              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 94F9              ;
 571+ 94F9              ;	Destruye: A,B,HL y DE.
 572+ 94F9
 573+ 94F9              Define_rutina_de_impresion
 574+ 94F9
 575+ 94F9 3A A7 88     	ld a,(Columns)
 576+ 94FC 47           	ld b,a
 577+ 94FD 3A DD 88     	ld a,(Columnas)
 578+ 9500 B8           	cp b
 579+ 9501 20 0D        	jr nz,2f
 580+ 9503
 581+ 9503              ;	La entidad se imprime entera.
 582+ 9503
 583+ 9503 21 28 96     	ld hl, Indice_entidades_completas
 584+ 9506 E6 01        	and 1
 585+ 9508 28 02        	jr z,1F
 586+ 950A
 587+ 950A 23           	inc hl
 588+ 950B 23           	inc hl
 589+ 950C
 590+ 950C CD DD 8B     1 call Extrae_address
 591+ 950F C9           	ret		;	ret
 592+ 9510
 593+ 9510              ;	La entidad no se imprime entera en pantalla.
 594+ 9510
 595+ 9510 3A BA 88     2 ld a,(Cuad_objeto)
 596+ 9513 E6 01        	and 1
 597+ 9515 28 17        	jr z,3F
 598+ 9517
 599+ 9517              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9517
 601+ 9517 21 2C 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 951A 3A A7 88     4 ld a,(Columns)
 603+ 951D E6 01        	and 1
 604+ 951F 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9521
 606+ 9521 23           	inc hl
 607+ 9522 23           	inc hl
 608+ 9523
 609+ 9523 3A DD 88     	ld a,(Columnas)
 610+ 9526 E6 01        	and 1
 611+ 9528 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 952A
 613+ 952A 23           	inc hl
 614+ 952B 23           	inc hl
 615+ 952C
 616+ 952C 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 952E
 618+ 952E 21 32 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9531 18 E7        	jr 4B
 620+ 9533
 621+ 9533              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9533              ;
 623+ 9533              ;	Prepara_draw
 624+ 9533              ;
 625+ 9533              ;	Es una rutina de carga.
 626+ 9533              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9533              ;
 628+ 9533              ;	FUNCIONAMIENTO:
 629+ 9533              ;
 630+ 9533              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9533              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9533              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9533              ;
 634+ 9533              ;	DESTRUYE:
 635+ 9533              ;
 636+ 9533              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9533
 638+ 9533 21 A6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9536 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9537 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9538 4E           	ld c,(hl)
 642+ 9539 2A A8 88     	ld hl,(Posicion_actual)
 643+ 953C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 953E C9           	ret
 645+ 953F
 646+ 953F              ;----------------------------------------------------------------------------------------------------------------
 647+ 953F              ;
 648+ 953F              ;	5/08/22
 649+ 953F              ;
 650+ 953F              ;   NextScan.
 651+ 953F              ;
 652+ 953F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 953F              ;
 654+ 953F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 953F              ;
 656+ 953F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 953F              ;
 658+ 953F              ;       DESTRUIDOS: AF y HL !!!
 659+ 953F              ;
 660+ 953F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 953F              ;
 662+ 953F
 663+ 953F 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9540 7C               ld a,h
 665+ 9541 E6 07            and 7
 666+ 9543 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9544
 668+ 9544 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9545 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9547 6F               ld l,a
 671+ 9548 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9549
 673+ 9549 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 954A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 954C 67               ld h,a
 676+ 954D C9               ret
 677+ 954E
 678+ 954E              ;----------------------------------------------------------------------------------------------------------------
 679+ 954E              ;
 680+ 954E              ;	5/08/22
 681+ 954E              ;
 682+ 954E              ;   PreviousScan.
 683+ 954E              ;
 684+ 954E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 954E              ;
 686+ 954E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 954E              ;
 688+ 954E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 954E              ;
 690+ 954E              ;       DESTRUIDOS: AF y HL !!!
 691+ 954E              ;
 692+ 954E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 954E              ;
 694+ 954E
 695+ 954E 7C           PreviousScan ld a,h
 696+ 954F 25               dec h               ; Dec H.
 697+ 9550 E6 07            and 7
 698+ 9552 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9553
 700+ 9553 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9554 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9556 6F               ld l,a
 703+ 9557 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9558
 705+ 9558 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9559 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 955B 67               ld h,a
 708+ 955C C9               ret
 709+ 955D
 710+ 955D              ; -----------------------------------------------------------------------------------
 711+ 955D              ;
 712+ 955D              ;	31/7/23
 713+ 955D              ;
 714+ 955D              ;	Rutina principal de pintado de entidades.
 715+ 955D              ;	Extrae la foto del frame, (entidades).
 716+ 955D
 717+ 955D              Extrae_foto_entidades
 718+ 955D
 719+ 955D 3A 02 89     	ld a,(Ctrl_3)
 720+ 9560 CB 47        	bit 0,a
 721+ 9562 C8           	ret Z 																	; Salimos si el FRAME a pintar NO ESTÁ COMPLETO.
 722+ 9563
 723+ 9563 21 01 70     	ld hl,Album_de_fotos+1
 724+ 9566 7E           	ld a,(hl)
 725+ 9567 A7           	and a
 726+ 9568 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 9569
 728+ 9569              ;	No hay datos, (entidades para pintar en este frame).
 729+ 9569
 730+ 9569 3A EF 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 731+ 956C A7           	and a
 732+ 956D C8           	ret z
 733+ 956E
 734+ 956E              ; -----------------------------------
 735+ 956E
 736+ 956E ED 73 F4 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 737+ 9572 31 00 70     	ld sp,Album_de_fotos
 738+ 9575
 739+ 9575 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 740+ 9577 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 741+ 9578 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 742+ 9579
 743+ 9579 ED 73 F6 88  	ld (Stack_2),sp
 744+ 957D ED 7B F4 88  	ld sp,(Stack)
 745+ 9581
 746+ 9581              ; Fabrica la llamada a la correspondiente rutina de impresión.
 747+ 9581
 748+ 9581 3E CD        	ld a,$cd
 749+ 9583 32 8B 95     	ld (Imprime),a
 750+ 9586 EB           	ex de,hl
 751+ 9587 22 8C 95     	ld (Imprime+1),hl
 752+ 958A EB           	ex de,hl
 753+ 958B
 754+ 958B              ; Ejecuta la llamada:	CALL $xx,xx
 755+ 958B
 756+ 958B 00 00 00     Imprime db 0,0,0
 757+ 958E
 758+ 958E ED 73 F4 88  	ld (Stack),sp
 759+ 9592
 760+ 9592 3A EF 88     	ld a,(Numero_de_malotes)
 761+ 9595 3D           	dec a
 762+ 9596 28 09        	jr z,1F
 763+ 9598 32 EF 88      	ld (Numero_de_malotes),a
 764+ 959B
 765+ 959B ED 7B F6 88  	ld sp,(Stack_2)
 766+ 959F 18 D4        	jr 2B
 767+ 95A1
 768+ 95A1 AF           1 xor a
 769+ 95A2 32 F6 88     	ld (Stack_2),a
 770+ 95A5
 771+ 95A5 C9           	ret
 772+ 95A6
 773+ 95A6              ; -----------------------------------------------------------------------------------
 774+ 95A6              ;
 775+ 95A6              ;	28/2/23
 776+ 95A6              ;
 777+ 95A6              ;	Pinta los disparos generados.
 778+ 95A6
 779+ 95A6              Extrae_foto_disparos
 780+ 95A6
 781+ 95A6 21 57 70     	ld hl,Album_de_fotos_disparos+1
 782+ 95A9 7E               ld a,(hl)
 783+ 95AA A7               and a
 784+ 95AB C8               ret z
 785+ 95AC
 786+ 95AC 3A 03 89     	ld a,(Numero_de_disparotes)
 787+ 95AF A7           	and a
 788+ 95B0 C8           	ret z
 789+ 95B1 ED 73 F4 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 790+ 95B5 31 56 70     	ld sp,Album_de_fotos_disparos
 791+ 95B8
 792+ 95B8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 793+ 95BA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 794+ 95BB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 795+ 95BC
 796+ 95BC ED 73 F6 88  	ld (Stack_2),sp
 797+ 95C0 ED 7B F4 88  	ld sp,(Stack)
 798+ 95C4
 799+ 95C4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 800+ 95C4
 801+ 95C4 3E CD        	ld a,$cd
 802+ 95C6 32 CE 95     	ld (Imprime2),a
 803+ 95C9 EB           	ex de,hl
 804+ 95CA 22 CF 95     	ld (Imprime2+1),hl
 805+ 95CD EB           	ex de,hl
 806+ 95CE
 807+ 95CE              ; Ejecuta la llamada:	CALL $xx,xx
 808+ 95CE
 809+ 95CE 00 00 00     Imprime2 db 0,0,0
 810+ 95D1
 811+ 95D1 3A 03 89     	ld a,(Numero_de_disparotes)
 812+ 95D4 3D           	dec a
 813+ 95D5 28 09        	jr z,1F
 814+ 95D7 32 03 89      	ld (Numero_de_disparotes),a
 815+ 95DA
 816+ 95DA ED 7B F6 88  	ld sp,(Stack_2)
 817+ 95DE 18 D8        	jr 2B
 818+ 95E0
 819+ 95E0 AF           1 xor a
 820+ 95E1 32 F6 88     	ld (Stack_2),a
 821+ 95E4 C9           	ret
 822+ 95E5
 823+ 95E5              ; -----------------------------------------------------------------------------------
 824+ 95E5              ;
 825+ 95E5              ;	4/9/23
 826+ 95E5              ;
 827+ 95E5              ;	Rutina principal de pintado de Amadeus.
 828+ 95E5              ;	Extrae fotos de Album_de_fotos_Amadeus.
 829+ 95E5
 830+ 95E5 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 831+ 95E8 7E           	ld a,(hl)
 832+ 95E9 A7           	and a
 833+ 95EA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 834+ 95EB
 835+ 95EB 3A EF 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 836+ 95EE A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 837+ 95EF C8           	ret z
 838+ 95F0
 839+ 95F0              ; -----------------------------------
 840+ 95F0
 841+ 95F0 ED 73 F4 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 842+ 95F4 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 843+ 95F7
 844+ 95F7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 845+ 95F9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 846+ 95FA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 847+ 95FB
 848+ 95FB ED 73 F6 88  	ld (Stack_2),sp
 849+ 95FF ED 7B F4 88  	ld sp,(Stack)
 850+ 9603
 851+ 9603              ; Fabrica la llamada a la correspondiente rutina de impresión.
 852+ 9603
 853+ 9603 3E CD        	ld a,$cd
 854+ 9605 32 0D 96     	ld (Imprime_Amadeus),a
 855+ 9608 EB           	ex de,hl
 856+ 9609 22 0E 96     	ld (Imprime_Amadeus+1),hl
 857+ 960C EB           	ex de,hl
 858+ 960D
 859+ 960D              ; Ejecuta la llamada:	CALL $xx,xx
 860+ 960D
 861+ 960D 00 00 00     Imprime_Amadeus db 0,0,0
 862+ 9610
 863+ 9610 ED 73 F4 88  	ld (Stack),sp
 864+ 9614
 865+ 9614 3A EF 88     	ld a,(Numero_de_malotes)
 866+ 9617 3D           	dec a
 867+ 9618 28 09        	jr z,1F
 868+ 961A 32 EF 88      	ld (Numero_de_malotes),a
 869+ 961D
 870+ 961D ED 7B F6 88  	ld sp,(Stack_2)
 871+ 9621 18 D4        	jr 2B
 872+ 9623
 873+ 9623 AF           1 xor a
 874+ 9624 32 F6 88     	ld (Stack_2),a
 875+ 9627
 876+ 9627 C9           	ret
# file closed: Draw_XOR.asm
1514  9628              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9628              ;   índices de Rutinas de impresión.
   2+ 9628
   3+ 9628 38 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 962A 65 96            defw Pinta_Amadeus_3x2
   5+ 962C
   6+ 962C BB 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 962E 5B 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9630 0F 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9632
  10+ 9632 E5 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9634 E9 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9636 9D 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9638
  14+ 9638
  15+ 9638              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9638              ;
  17+ 9638              ;   12/12/22
  18+ 9638              ;
  19+ 9638              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9638              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9638              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9638              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9638              ;
  24+ 9638              ;   Modifica: DE y HL.
  25+ 9638
  26+ 9638 ED 73 F4 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 963C FD F9        	ld sp,iy
  28+ 963E 06 10            ld b,16
  29+ 9640 D1           1 pop de
  30+ 9641 7B               ld a,e
  31+ 9642 AE               xor (hl)
  32+ 9643 77           	ld (hl),a
  33+ 9644 23           	inc hl
  34+ 9645 7A               ld a,d
  35+ 9646 AE               xor (hl)
  36+ 9647 77           	ld (hl),a
  37+ 9648 2B           	dec hl
  38+ 9649 24           	inc h
  39+ 964A 7C               ld a,h
  40+ 964B E6 07            and 7
  41+ 964D 20 0A            jr nz,2F
  42+ 964F 7D               ld a,l
  43+ 9650 C6 20            add a,$20
  44+ 9652 6F               ld l,a
  45+ 9653 38 04            jr c,2F
  46+ 9655 7C               ld a,h
  47+ 9656 D6 08            sub 8
  48+ 9658 67               ld h,a
  49+ 9659 7C           2 ld a,h
  50+ 965A FE 58            cp $58
  51+ 965C 28 02            jr z,3F
  52+ 965E 10 E0            djnz 1B
  53+ 9660 ED 7B F4 88  3 ld sp,(Stack)
  54+ 9664 C9           	ret
  55+ 9665
  56+ 9665 ED 73 F4 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9669 FD F9        	ld sp,iy
  58+ 966B 06 08            ld b,8
  59+ 966D D1           1 pop de
  60+ 966E 7B               ld a,e
  61+ 966F AE               xor (hl)
  62+ 9670 77           	ld (hl),a
  63+ 9671 23           	inc hl
  64+ 9672 7A               ld a,d
  65+ 9673 AE               xor (hl)
  66+ 9674 77           	ld (hl),a
  67+ 9675 23           	inc hl
  68+ 9676 D1           	pop de
  69+ 9677 7B               ld a,e
  70+ 9678 AE               xor (hl)
  71+ 9679 77           	ld (hl),a
  72+ 967A 2B           	dec hl
  73+ 967B 2B           	dec hl
  74+ 967C 24           	inc h
  75+ 967D 7C               ld a,h
  76+ 967E E6 07            and 7
  77+ 9680 20 0A            jr nz,2F
  78+ 9682 7D               ld a,l
  79+ 9683 C6 20            add a,$20
  80+ 9685 6F               ld l,a
  81+ 9686 38 04            jr c,2F
  82+ 9688 7C               ld a,h
  83+ 9689 D6 08            sub 8
  84+ 968B 67               ld h,a
  85+ 968C 7C           2 ld a,h
  86+ 968D FE 58            cp $58
  87+ 968F 28 25            jr z,4F
  88+ 9691 7A               ld a,d
  89+ 9692 AE               xor (hl)
  90+ 9693 77               ld (hl),a
  91+ 9694 D1           	pop de
  92+ 9695 23           	inc hl
  93+ 9696 7B               ld a,e
  94+ 9697 AE               xor (hl)
  95+ 9698 77           	ld (hl),a
  96+ 9699 23           	inc hl
  97+ 969A 7A               ld a,d
  98+ 969B AE               xor (hl)
  99+ 969C 77           	ld (hl),a
 100+ 969D 2B           	dec hl
 101+ 969E 2B           	dec hl
 102+ 969F 24           	inc h
 103+ 96A0 7C               ld a,h
 104+ 96A1 E6 07            and 7
 105+ 96A3 20 0A            jr nz,3F
 106+ 96A5 7D               ld a,l
 107+ 96A6 C6 20            add a,$20
 108+ 96A8 6F               ld l,a
 109+ 96A9 38 04            jr c,3F
 110+ 96AB 7C               ld a,h
 111+ 96AC D6 08            sub 8
 112+ 96AE 67               ld h,a
 113+ 96AF 7C           3 ld a,h
 114+ 96B0 FE 58            cp $58
 115+ 96B2 28 02            jr z,4F
 116+ 96B4 10 B7            djnz 1B
 117+ 96B6 ED 7B F4 88  4 ld sp,(Stack)
 118+ 96BA C9           	ret
 119+ 96BB
 120+ 96BB              ; ---------------------------------------------------
 121+ 96BB
 122+ 96BB ED 73 F4 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 96BF FD F9        	ld sp,iy
 124+ 96C1
 125+ 96C1              ; >>>
 126+ 96C1
 127+ 96C1 06 10            ld b,16
 128+ 96C3 D1           1 pop de
 129+ 96C4 7A           	ld a,d
 130+ 96C5 AE           	xor (hl)
 131+ 96C6 77           	ld (hl),a
 132+ 96C7 24           	inc h
 133+ 96C8 7C               ld a,h
 134+ 96C9 E6 07            and 7
 135+ 96CB 20 0C            jr nz,2F
 136+ 96CD 7D               ld a,l
 137+ 96CE C6 20            add a,$20
 138+ 96D0 6F               ld l,a
 139+ 96D1 38 06            jr c,2F
 140+ 96D3 7C               ld a,h
 141+ 96D4 D6 08            sub 8
 142+ 96D6 67               ld h,a
 143+ 96D7 18 00            jr 2F
 144+ 96D9 7C           2 ld a,h
 145+ 96DA FE 58            cp $58
 146+ 96DC 28 02            jr z,3F
 147+ 96DE 10 E3            djnz 1B
 148+ 96E0 ED 7B F4 88  3 ld sp,(Stack)
 149+ 96E4 C9           	ret
 150+ 96E5
 151+ 96E5 ED 73 F4 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96E9 FD F9        	ld sp,iy
 153+ 96EB
 154+ 96EB              ; >>>
 155+ 96EB
 156+ 96EB 06 10            ld b,16
 157+ 96ED D1           1 pop de
 158+ 96EE 7B           	ld a,e
 159+ 96EF AE           	xor (hl)
 160+ 96F0 77           	ld (hl),a
 161+ 96F1 24           	inc h
 162+ 96F2 7C               ld a,h
 163+ 96F3 E6 07            and 7
 164+ 96F5 20 0C            jr nz,2F
 165+ 96F7 7D               ld a,l
 166+ 96F8 C6 20            add a,$20
 167+ 96FA 6F               ld l,a
 168+ 96FB 38 06            jr c,2F
 169+ 96FD 7C               ld a,h
 170+ 96FE D6 08            sub 8
 171+ 9700 67               ld h,a
 172+ 9701 18 00            jr 2F
 173+ 9703 7C           2 ld a,h
 174+ 9704 FE 58            cp $58
 175+ 9706 28 02            jr z,3F
 176+ 9708 10 E3            djnz 1B
 177+ 970A ED 7B F4 88  3 ld sp,(Stack)
 178+ 970E C9           	ret
 179+ 970F
 180+ 970F              ; ---------------------------------------------------
 181+ 970F
 182+ 970F ED 73 F4 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9713 FD F9        	ld sp,iy
 184+ 9715 06 08            ld b,8
 185+ 9717 D1           1 pop de
 186+ 9718 7A           	ld a,d
 187+ 9719 AE           	xor (hl)
 188+ 971A 77           	ld (hl),a
 189+ 971B 23           	inc hl
 190+ 971C D1           	pop de
 191+ 971D 7B           	ld a,e
 192+ 971E AE           	xor (hl)
 193+ 971F 77           	ld (hl),a
 194+ 9720 2B           	dec hl
 195+ 9721 24            	inc h
 196+ 9722 7C               ld a,h
 197+ 9723 E6 07            and 7
 198+ 9725 20 0A            jr nz,2F
 199+ 9727 7D               ld a,l
 200+ 9728 C6 20            add a,$20
 201+ 972A 6F               ld l,a
 202+ 972B 38 04            jr c,2F
 203+ 972D 7C               ld a,h
 204+ 972E D6 08            sub 8
 205+ 9730 67               ld h,a
 206+ 9731 7C           2 ld a,h
 207+ 9732 FE 58            cp $58
 208+ 9734 28 20            jr z,4F
 209+ 9736 D1               pop de
 210+ 9737 7B           	ld a,e
 211+ 9738 AE           	xor (hl)
 212+ 9739 77           	ld (hl),a
 213+ 973A 23           	inc hl
 214+ 973B 7A           	ld a,d
 215+ 973C AE           	xor (hl)
 216+ 973D 77           	ld (hl),a
 217+ 973E 2B           	dec hl
 218+ 973F 24           	inc h
 219+ 9740 7C               ld a,h
 220+ 9741 E6 07            and 7
 221+ 9743 20 0A            jr nz,3F
 222+ 9745 7D               ld a,l
 223+ 9746 C6 20            add a,$20
 224+ 9748 6F               ld l,a
 225+ 9749 38 04            jr c,3F
 226+ 974B 7C               ld a,h
 227+ 974C D6 08            sub 8
 228+ 974E 67               ld h,a
 229+ 974F 7C           3 ld a,h
 230+ 9750 FE 58            cp $58
 231+ 9752 28 02            jr z,4F
 232+ 9754 10 C1            djnz 1B
 233+ 9756 ED 7B F4 88  4 ld sp,(Stack)
 234+ 975A C9           	ret
 235+ 975B
 236+ 975B ED 73 F4 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 975F FD F9        	ld sp,iy
 238+ 9761 06 08            ld b,8
 239+ 9763 D1           1 pop de
 240+ 9764 D1           	pop de
 241+ 9765 7B           	ld a,e
 242+ 9766 AE           	xor (hl)
 243+ 9767 77           	ld (hl),a
 244+ 9768 24            	inc h
 245+ 9769 7C               ld a,h
 246+ 976A E6 07            and 7
 247+ 976C 20 0A            jr nz,2F
 248+ 976E 7D               ld a,l
 249+ 976F C6 20            add a,$20
 250+ 9771 6F               ld l,a
 251+ 9772 38 04            jr c,2F
 252+ 9774 7C               ld a,h
 253+ 9775 D6 08            sub 8
 254+ 9777 67               ld h,a
 255+ 9778 7C           2 ld a,h
 256+ 9779 FE 58            cp $58
 257+ 977B 28 1B            jr z,4F
 258+ 977D D1               pop de
 259+ 977E 7A           	ld a,d
 260+ 977F AE           	xor (hl)
 261+ 9780 77           	ld (hl),a
 262+ 9781 24           	inc h
 263+ 9782 7C               ld a,h
 264+ 9783 E6 07            and 7
 265+ 9785 20 0A            jr nz,3F
 266+ 9787 7D               ld a,l
 267+ 9788 C6 20            add a,$20
 268+ 978A 6F               ld l,a
 269+ 978B 38 04            jr c,3F
 270+ 978D 7C               ld a,h
 271+ 978E D6 08            sub 8
 272+ 9790 67               ld h,a
 273+ 9791 7C           3 ld a,h
 274+ 9792 FE 58            cp $58
 275+ 9794 28 02            jr z,4F
 276+ 9796 10 CB            djnz 1B
 277+ 9798 ED 7B F4 88  4 ld sp,(Stack)
 278+ 979C C9           	ret
 279+ 979D
 280+ 979D ED 73 F4 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97A1 FD F9        	ld sp,iy
 282+ 97A3 06 08            ld b,8
 283+ 97A5 D1           1 pop de
 284+ 97A6 7B           	ld a,e
 285+ 97A7 AE           	xor (hl)
 286+ 97A8 77           	ld (hl),a
 287+ 97A9 23           	inc hl
 288+ 97AA 7A           	ld a,d
 289+ 97AB AE           	xor (hl)
 290+ 97AC 77           	ld (hl),a
 291+ 97AD 2B           	dec hl
 292+ 97AE 24             	inc h
 293+ 97AF 7C               ld a,h
 294+ 97B0 E6 07            and 7
 295+ 97B2 20 0A            jr nz,2F
 296+ 97B4 7D               ld a,l
 297+ 97B5 C6 20            add a,$20
 298+ 97B7 6F               ld l,a
 299+ 97B8 38 04            jr c,2F
 300+ 97BA 7C               ld a,h
 301+ 97BB D6 08            sub 8
 302+ 97BD 67               ld h,a
 303+ 97BE 7C           2 ld a,h
 304+ 97BF FE 58            cp $58
 305+ 97C1 28 21            jr z,4F
 306+ 97C3 D1               pop de
 307+ 97C4 7A           	ld a,d
 308+ 97C5 AE           	xor (hl)
 309+ 97C6 77           	ld (hl),a
 310+ 97C7 23           	inc hl
 311+ 97C8 D1               pop de
 312+ 97C9 7B           	ld a,e
 313+ 97CA AE           	xor (hl)
 314+ 97CB 77           	ld (hl),a
 315+ 97CC 2B           	dec hl
 316+ 97CD 24           	inc h
 317+ 97CE 7C               ld a,h
 318+ 97CF E6 07            and 7
 319+ 97D1 20 0A            jr nz,3F
 320+ 97D3 7D               ld a,l
 321+ 97D4 C6 20            add a,$20
 322+ 97D6 6F               ld l,a
 323+ 97D7 38 04            jr c,3F
 324+ 97D9 7C               ld a,h
 325+ 97DA D6 08            sub 8
 326+ 97DC 67               ld h,a
 327+ 97DD 7C           3 ld a,h
 328+ 97DE FE 58            cp $58
 329+ 97E0 28 02            jr z,4F
 330+ 97E2 10 C1            djnz 1B
 331+ 97E4 ED 7B F4 88  4 ld sp,(Stack)
 332+ 97E8 C9           	ret
 333+ 97E9
 334+ 97E9 ED 73 F4 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97ED FD F9        	ld sp,iy
 336+ 97EF 06 08            ld b,8
 337+ 97F1 D1           1 pop de
 338+ 97F2 7B           	ld a,e
 339+ 97F3 AE           	xor (hl)
 340+ 97F4 77           	ld (hl),a
 341+ 97F5 24            	inc h
 342+ 97F6 7C               ld a,h
 343+ 97F7 E6 07            and 7
 344+ 97F9 20 0A            jr nz,2F
 345+ 97FB 7D               ld a,l
 346+ 97FC C6 20            add a,$20
 347+ 97FE 6F               ld l,a
 348+ 97FF 38 04            jr c,2F
 349+ 9801 7C               ld a,h
 350+ 9802 D6 08            sub 8
 351+ 9804 67               ld h,a
 352+ 9805 7C           2 ld a,h
 353+ 9806 FE 58            cp $58
 354+ 9808 28 1C            jr z,4F
 355+ 980A D1               pop de
 356+ 980B 7A           	ld a,d
 357+ 980C AE           	xor (hl)
 358+ 980D 77           	ld (hl),a
 359+ 980E 24           	inc h
 360+ 980F 7C               ld a,h
 361+ 9810 E6 07            and 7
 362+ 9812 20 0A            jr nz,3F
 363+ 9814 7D               ld a,l
 364+ 9815 C6 20            add a,$20
 365+ 9817 6F               ld l,a
 366+ 9818 38 04            jr c,3F
 367+ 981A 7C               ld a,h
 368+ 981B D6 08            sub 8
 369+ 981D 67               ld h,a
 370+ 981E 7C           3 ld a,h
 371+ 981F FE 58            cp $58
 372+ 9821 28 03            jr z,4F
 373+ 9823 D1               pop de
 374+ 9824 10 CB            djnz 1B
 375+ 9826 ED 7B F4 88  4 ld sp,(Stack)
 376+ 982A C9           	ret
 377+ 982B
 378+ 982B              ; ---------------------------------------------------
 379+ 982B              ;
 380+ 982B              ;   27/02/23
 381+ 982B              ;
 382+ 982B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 982B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 982B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 982B
 386+ 982B ED 73 F4 88  Pinta_Disparo ld (Stack),sp
 387+ 982F FD F9            ld sp,iy
 388+ 9831 06 03            ld b,3
 389+ 9833 D1           1 pop de
 390+ 9834 7B               ld a,e
 391+ 9835 AE               xor (hl)
 392+ 9836 77               ld (hl),a
 393+ 9837 23               inc hl
 394+ 9838 7A               ld a,d
 395+ 9839 AE               xor (hl)
 396+ 983A 77               ld (hl),a
 397+ 983B 2B               dec hl
 398+ 983C
 399+ 983C 24               inc h
 400+ 983D 7C               ld a,h
 401+ 983E E6 07            and 7
 402+ 9840 20 0A            jr nz,2F
 403+ 9842 7D               ld a,l
 404+ 9843 C6 20            add a,$20
 405+ 9845 6F               ld l,a
 406+ 9846 38 04            jr c,2F
 407+ 9848 7C               ld a,h
 408+ 9849 D6 08            sub 8
 409+ 984B 67               ld h,a
 410+ 984C 7C           2 ld a,h
 411+ 984D FE 58            cp $58
 412+ 984F 28 02            jr z,3F
 413+ 9851
 414+ 9851 10 E0            djnz 1B
 415+ 9853 ED 7B F4 88  3 ld sp,(Stack)
 416+ 9857 C9               ret
 417+ 9858
# file closed: Rutinas_de_impresion_sprites.asm
1515  9858              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9858              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9858              ;
   3+ 9858              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9858              ;
   5+ 9858              ; *****************************************************************************************************************************************************************************************
   6+ 9858              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9858
   8+ 9858 7C           calcula_tercio ld a,h
   9+ 9859 E6 18        	and $18
  10+ 985B CB 2F        	sra a
  11+ 985D CB 2F        	sra a
  12+ 985F CB 2F        	sra a
  13+ 9861 C9           	ret
  14+ 9862
# file closed: calcula_tercio.asm
1516  9862              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9862              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9862              ;
   3+ 9862              ;
   4+ 9862              ;	CLS.
   5+ 9862              ;
   6+ 9862              ;	Limpia la pantalla y define sus atributos.
   7+ 9862              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9862              ;
   9+ 9862              ;	COLORES: 0 ..... NEGRO
  10+ 9862              ;    		 1 ..... AZUL
  11+ 9862              ; 			 2 ..... ROJO
  12+ 9862              ;			 3 ..... MAGENTA
  13+ 9862              ; 			 4 ..... VERDE
  14+ 9862              ; 			 5 ..... CIAN
  15+ 9862              ;			 6 ..... AMARILLO
  16+ 9862              ; 			 7 ..... BLANCO
  17+ 9862              ;
  18+ 9862              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9862              ;
  20+ 9862              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9862
  22+ 9862
  23+ 9862 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9865 11 01 40     	LD DE,$4001
  25+ 9868 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 986B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 986D ED B0        	LDIR
  28+ 986F 01 FF 02     	LD BC,767
  29+ 9872 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9873 ED B0        	LDIR
  31+ 9875 C9           	ret
  32+ 9876
# file closed: Cls.asm
1517  9876              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9876              ; ******************************************************************************************************************************************************************************************
   2+ 9876              ;
   3+ 9876              ;   20/05/23
   4+ 9876              ;
   5+ 9876              ;	Recompone_posicion_inicio
   6+ 9876              ;
   7+ 9876              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9876              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9876              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9876              ;	_ a una u otra rutina.
  11+ 9876
  12+ 9876              Recompone_posicion_inicio
  13+ 9876
  14+ 9876 2A B8 88     	ld hl,(Posicion_inicio)
  15+ 9879 7D           	ld a,l
  16+ 987A E6 1F        	and $1f
  17+ 987C 28 16        	jr z,1F
  18+ 987E
  19+ 987E FE 1F        	cp $1f
  20+ 9880 28 0D        	jr z,3F
  21+ 9882
  22+ 9882 21 E1 88     	ld hl,Ctrl_2
  23+ 9885 CB C6        	set 0,(hl)
  24+ 9887 2A AA 88     	ld hl,(Puntero_objeto)
  25+ 988A 22 E4 88     	ld (Repone_puntero_objeto),hl
  26+ 988D 18 08        	jr 2F
  27+ 988F
  28+ 988F CD 30 9A     3 call Mov_left
  29+ 9892 18 03        	jr 2F
  30+ 9894
  31+ 9894 CD 12 99     1 call Mov_right
  32+ 9897 21 00 F0     2 ld hl,Sprite_vacio
  33+ 989A 22 AA 88     	ld (Puntero_objeto),hl
  34+ 989D C9           	ret
  35+ 989E
  36+ 989E              ; ******************************************************************************************************************************************************************************************
  37+ 989E              ;
  38+ 989E              ;   27/05/23
  39+ 989E              ;
  40+ 989E              ;	Mov_down
  41+ 989E              ;
  42+ 989E              ; 	Mueve el Sprite X px hacia abajo.
  43+ 989E              ;
  44+ 989E              ;
  45+ 989E              Mov_down
  46+ 989E
  47+ 989E CD 00 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98A1              ;																	; _ repone (Puntero_objeto).
  49+ 98A1 21 D0 88     	ld hl,Ctrl_0
  50+ 98A4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98A6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98A6              ; 																	; _ en el caso de que no lo haya.
  53+ 98A6 3A BE 88     	ld a,(Vel_down)
  54+ 98A9 47           	ld b,a
  55+ 98AA 2A A8 88         ld hl,(Posicion_actual)
  56+ 98AD CD 58 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98B0 E6 02        	and 2
  58+ 98B2 28 0F        	jr z,1F
  59+ 98B4
  60+ 98B4              ; Nos encontramos en el último tercio de pantalla.
  61+ 98B4              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98B4
  63+ 98B4 7C           	ld a,h
  64+ 98B5 FE 57        	cp $57
  65+ 98B7 20 0A        	jr nz,1F
  66+ 98B9
  67+ 98B9 7D           	ld a,l
  68+ 98BA C6 20        	add $20
  69+ 98BC 30 05        	jr nc,1F
  70+ 98BE
  71+ 98BE              ; ------------------------------
  72+ 98BE              ;	call Reaparece_arriba
  73+ 98BE CD BD 9B     	call Reinicio
  74+ 98C1              ; ------------------------------
  75+ 98C1
  76+ 98C1 18 08        	jr 3F
  77+ 98C3 CD 3F 95     1 call NextScan
  78+ 98C6 22 A8 88     	ld (Posicion_actual),hl
  79+ 98C9 10 E2            djnz 2B
  80+ 98CB CD E3 9B     3 call Genera_coordenadas
  81+ 98CE C9           	ret
  82+ 98CF
  83+ 98CF              ; ******************************************************************************************************************************************************************************************
  84+ 98CF              ;
  85+ 98CF              ;   27/05/23
  86+ 98CF              ;
  87+ 98CF              ;	Mov_up
  88+ 98CF              ;
  89+ 98CF              ; 	Mueve el Sprite hacia arriba.
  90+ 98CF              ;
  91+ 98CF              ;
  92+ 98CF              Mov_up
  93+ 98CF
  94+ 98CF CD 00 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 98D2              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 98D2 21 D0 88     	ld hl,Ctrl_0
  97+ 98D5 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 98D7              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 98D7              ; 																		; _ en el caso de que no lo haya.
 100+ 98D7 3A BD 88     	ld a,(Vel_up)
 101+ 98DA 47           	ld b,a
 102+ 98DB 2A A8 88     	ld hl,(Posicion_actual)
 103+ 98DE CD 58 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 98E1 A7           	and a
 105+ 98E2 20 10        	jr nz,1F
 106+ 98E4
 107+ 98E4              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 98E4              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 98E4
 110+ 98E4 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 98E5 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 98E7 20 0B            jr nz,1F
 113+ 98E9 7D               ld a,l
 114+ 98EA D6 20            sub $20
 115+ 98EC 30 06            jr nc,1F
 116+ 98EE 25               dec h
 117+ 98EF
 118+ 98EF              ; -----------------------------
 119+ 98EF CD 9E 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 98F2              ;	call Reinicio
 121+ 98F2              ; -----------------------------
 122+ 98F2
 123+ 98F2 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 98F4 CD 4E 95     1 call PreviousScan
 125+ 98F7 22 A8 88     	ld (Posicion_actual),hl
 126+ 98FA 10 E2            djnz 3B
 127+ 98FC CD E3 9B     2 call Genera_coordenadas
 128+ 98FF C9           	ret
 129+ 9900
 130+ 9900              ; -----------------------------
 131+ 9900              ;
 132+ 9900              ;	27/5/23
 133+ 9900              ;
 134+ 9900              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9900              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9900              ;
 137+ 9900              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9900              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9900              ;
 140+ 9900              ;	Modifica: A y (Puntero_objeto).
 141+ 9900
 142+ 9900 3A E1 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9903 CB 47        	bit 0,a
 144+ 9905 C8           	ret z
 145+ 9906 CB 87        	res 0,a
 146+ 9908 32 E1 88     	ld (Ctrl_2),a
 147+ 990B 2A E4 88     	ld hl,(Repone_puntero_objeto)
 148+ 990E 22 AA 88     	ld (Puntero_objeto),hl
 149+ 9911 C9           	ret
 150+ 9912
 151+ 9912              ; ******************************************************************************************************************************************************************************************
 152+ 9912              ;
 153+ 9912              ;	19/10/22
 154+ 9912              ;
 155+ 9912              ;	Mov_right.
 156+ 9912              ;
 157+ 9912              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9912              ;
 159+ 9912
 160+ 9912 21 D0 88     Mov_right ld hl,Ctrl_0
 161+ 9915 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9917              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9917              ; 																	; _ en el caso de que no lo haya.
 164+ 9917 3A D0 88     	ld a,(Ctrl_0)
 165+ 991A CB 77        	bit 6,a
 166+ 991C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 991E
 168+ 991E CD 4C 9B     	call Stop_Amadeus_right
 169+ 9921 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9922 18 4D        	jr 8F
 171+ 9924
 172+ 9924 3A AC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9927 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9929 20 46        	jr nz,8F
 175+ 992B
 176+ 992B 3A AE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 992E A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 992F 28 40        	jr z,8F
 179+ 9931
 180+ 9931              ; ---------- ---------- ----------
 181+ 9931              ;
 182+ 9931              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9931
 184+ 9931 3A BC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9934 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9936 28 11        	jr z,1F
 187+ 9938 38 06        	jr c,6F
 188+ 993A FE 04        	cp 4
 189+ 993C 28 14        	jr z,7F
 190+ 993E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9940
 192+ 9940              ; ---------- ---------- ----------
 193+ 9940              ;
 194+ 9940              ; Perfiles de velocidad
 195+ 9940              ;
 196+ 9940
 197+ 9940 3A AE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9943 FE FE        	cp $fe
 199+ 9945 20 2A        	jr nz,8F
 200+ 9947 18 10        	jr 3F
 201+ 9949 3A AE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 994C FE FD        	cp $fd
 203+ 994E 20 21        	jr nz,8F
 204+ 9950 18 07        	jr 3F
 205+ 9952 3A AE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9955 FE FB        	cp $fb
 207+ 9957 20 18        	jr nz,8F
 208+ 9959
 209+ 9959              ; ---------- ---------- ----------
 210+ 9959
 211+ 9959              3
 212+ 9959 CD 8C 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 995C              ;	call Reinicio
 214+ 995C
 215+ 995C              ; ---------- ---------- ----------
 216+ 995C              ;
 217+ 995C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 995C
 219+ 995C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 995E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 995F CD 78 99     	call DESPLZ_DER
 222+ 9962 C1           	pop bc
 223+ 9963 10 F9        	djnz 5B
 224+ 9965 2A A8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9968 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9969 22 A8 88     	ld (Posicion_actual),hl
 227+ 996C CD E3 9B     	call Genera_coordenadas
 228+ 996F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9971
 230+ 9971              ; ---------- ---------- ----------
 231+ 9971
 232+ 9971 2A A8 88     8 ld hl,(Posicion_actual)
 233+ 9974 CD 78 99     	call DESPLZ_DER
 234+ 9977 C9           2 ret
 235+ 9978
 236+ 9978              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9978              ;
 238+ 9978              ;	22/9/22
 239+ 9978              ;
 240+ 9978
 241+ 9978 CD 87 99     DESPLZ_DER call Desplaza_derecha
 242+ 997B CD D3 99         call modifica_parametros_1er_DESPLZ_2
 243+ 997E CD FC 99         call Ciclo_completo
 244+ 9981 21 D0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9984 CB FE        	set 7,(hl)
 246+ 9986 C9           	ret
 247+ 9987
 248+ 9987              ; ******************************************************************************************************************************************************************************************
 249+ 9987              ;	15/02/23
 250+ 9987              ;
 251+ 9987
 252+ 9987 3A BC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 998A 47           	ld b,a
 254+ 998B 2A B4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 998E 23           1 inc hl
 256+ 998F 23           	inc hl
 257+ 9990 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9992 22 B4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9995 CD DD 8B     	call Extrae_address
 260+ 9998 22 AA 88     	ld (Puntero_objeto),hl
 261+ 999B
 262+ 999B              ; Modifica (Puntero_DESPLZ_izq).
 263+ 999B
 264+ 999B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 999B              ; Cuántos movimientos hemos hecho ??
 266+ 999B              ; DE contiene (Puntero_DESPLZ_der).
 267+ 999B
 268+ 999B 2A B0 88     7 ld hl,(Indice_Sprite_der)
 269+ 999E EB           	ex de,hl
 270+ 999F A7           	and a
 271+ 99A0 ED 52        	sbc hl,de
 272+ 99A2 CB 3D        	srl l
 273+ 99A4 3E 08        6 ld a,8
 274+ 99A6 95           	sub l
 275+ 99A7 30 1E        	jr nc,3F
 276+ 99A9
 277+ 99A9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99A9              ; B="0".
 279+ 99A9
 280+ 99A9 04           4 inc b
 281+ 99AA 3C           	inc a
 282+ 99AB 20 FC        	jr nz,4B
 283+ 99AD 78           	ld a,b
 284+ 99AE 08           	ex af,af
 285+ 99AF 2A B0 88     	ld hl,(Indice_Sprite_der)
 286+ 99B2 23           5 inc hl
 287+ 99B3 23           	inc hl
 288+ 99B4 10 FC        	djnz 5B
 289+ 99B6 22 B4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 99B9 CD DD 8B     	call Extrae_address
 291+ 99BC 22 AA 88     	ld (Puntero_objeto),hl
 292+ 99BF
 293+ 99BF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 99BF              ; _(Posicion_actual).
 295+ 99BF
 296+ 99BF 21 A8 88     	ld hl,Posicion_actual
 297+ 99C2 34           	inc (hl)
 298+ 99C3 08               ex af,af
 299+ 99C4 6F           	ld l,a
 300+ 99C5 18 DD        	jr 6B
 301+ 99C7
 302+ 99C7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 99C7
 304+ 99C7 47           3 ld b,a
 305+ 99C8 2A B2 88     	ld hl,(Indice_Sprite_izq)
 306+ 99CB 23           2 inc hl
 307+ 99CC 23           	inc hl
 308+ 99CD 10 FC        	djnz 2B
 309+ 99CF 22 B6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 99D2 C9           8 ret
 311+ 99D3
 312+ 99D3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 99D3              ;
 314+ 99D3              ;	24/7/22
 315+ 99D3              ;
 316+ 99D3              ;	modifica_parametros_1er_DESPLZ_2
 317+ 99D3              ;
 318+ 99D3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 99D3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 99D3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 99D3
 322+ 99D3 3A AE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 99D6 A7           	and a
 324+ 99D7 20 1F        	jr nz,1F
 325+ 99D9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 99DB 32 AE 88         ld (CTRL_DESPLZ),a
 327+ 99DE
 328+ 99DE 21 A7 88     	ld hl,Columns
 329+ 99E1 34           	inc (hl)
 330+ 99E2 3A BA 88     	ld a,(Cuad_objeto)
 331+ 99E5 E6 01        	and 1
 332+ 99E7 28 0F        	jr z,1F
 333+ 99E9 2A A8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 99EC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 99ED 22 A8 88     	ld (Posicion_actual),hl
 336+ 99F0 CD E3 9B     	call Genera_coordenadas
 337+ 99F3 CD 58 9B     	call Inc_CTRL_DESPLZ
 338+ 99F6 18 03        	jr 2F
 339+ 99F8 CD 58 9B     1 call Inc_CTRL_DESPLZ
 340+ 99FB C9           2 ret
 341+ 99FC
 342+ 99FC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 99FC              ;
 344+ 99FC              ;	24/7/22
 345+ 99FC              ;
 346+ 99FC              ;	Ciclo_completo.
 347+ 99FC              ;
 348+ 99FC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 99FC              ;
 350+ 99FC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 99FC              ; 	Decrementamos (Columns).
 352+ 99FC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 99FC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 99FC
 355+ 99FC
 356+ 99FC 3A AE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 99FF FE FF        	cp $ff
 358+ 9A01 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A03 E6 F0        	and $f0
 360+ 9A05 20 28        	jr nz,3F
 361+ 9A07
 362+ 9A07              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A07
 364+ 9A07 3A AE 88     	ld a,(CTRL_DESPLZ)
 365+ 9A0A 47           	ld b,a
 366+ 9A0B 3E F8        	ld a,$f8
 367+ 9A0D 80           	add b
 368+ 9A0E 32 AE 88     	ld (CTRL_DESPLZ),a
 369+ 9A11 18 1C        	jr 3F
 370+ 9A13 21 A7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A16 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A17 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A18 32 AE 88     	ld (CTRL_DESPLZ),a
 374+ 9A1B 3A BA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A1E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A20 20 0A        	jr nz,2F
 377+ 9A22 2A A8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A25 23           	inc hl
 379+ 9A26 22 A8 88     	ld (Posicion_actual),hl
 380+ 9A29 CD E3 9B     	call Genera_coordenadas
 381+ 9A2C
 382+ 9A2C              ; Inicia el puntero de Sprite.
 383+ 9A2C
 384+ 9A2C CD F4 8B     2 call Inicia_puntero_objeto_der
 385+ 9A2F C9           3 ret
 386+ 9A30
 387+ 9A30              ; ******************************************************************************************************************************************************************************************
 388+ 9A30              ;
 389+ 9A30              ;	15/02/23
 390+ 9A30              ;
 391+ 9A30              ;	Mov_left.
 392+ 9A30              ;
 393+ 9A30              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A30              ;
 395+ 9A30              Mov_left
 396+ 9A30
 397+ 9A30 21 D0 88     	ld hl,Ctrl_0
 398+ 9A33 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A35              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A35              ; 																	; _ en el caso de que no lo haya.
 401+ 9A35 3A D0 88     	ld a,(Ctrl_0)
 402+ 9A38 CB 77        	bit 6,a
 403+ 9A3A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A3C
 405+ 9A3C CD 52 9B     	call Stop_Amadeus_left
 406+ 9A3F C8           	ret z
 407+ 9A40 20 4A        	jr nz,8F
 408+ 9A42
 409+ 9A42 3A AC 88     11 ld a,(Coordenada_X)
 410+ 9A45 A7           	and a
 411+ 9A46 20 44        	jr nz,8F
 412+ 9A48
 413+ 9A48 3A AE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A4B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A4C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A4E
 417+ 9A4E              ; ---------- ---------- ----------
 418+ 9A4E
 419+ 9A4E 3A BB 88     	ld a,(Vel_left)
 420+ 9A51 FE 02        	cp 2
 421+ 9A53 28 0F        	jr z,1F
 422+ 9A55 38 04        	jr c,6F
 423+ 9A57 FE 04        	cp 4
 424+ 9A59 28 12        	jr z,7F
 425+ 9A5B
 426+ 9A5B              ; ---------- ---------- ----------
 427+ 9A5B
 428+ 9A5B 3A AE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9A5E FE F8        	cp $f8
 430+ 9A60 20 2A        	jr nz,8F
 431+ 9A62 18 10        	jr 4F
 432+ 9A64 3A AE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9A67 FE F9        	cp $f9
 434+ 9A69 20 21        	jr nz,8F
 435+ 9A6B 18 07        	jr 4F
 436+ 9A6D 3A AE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9A70 FE FB        	cp $fb
 438+ 9A72 20 18        	jr nz,8F
 439+ 9A74
 440+ 9A74              ; ---------- ---------- ----------
 441+ 9A74
 442+ 9A74              4
 443+ 9A74 CD 7A 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9A77              ;	call Reinicio
 445+ 9A77
 446+ 9A77              ; ---------- ---------- ----------
 447+ 9A77
 448+ 9A77 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9A79 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9A7A
 451+ 9A7A              ;	ld hl,(Indice_Sprite_izq)
 452+ 9A7A              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9A7A
 454+ 9A7A CD 93 9A     	call DESPLZ_IZQ
 455+ 9A7D C1           	pop bc
 456+ 9A7E 10 F9        	djnz 5B
 457+ 9A80 2A A8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9A83 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9A84 22 A8 88     	ld (Posicion_actual),hl
 460+ 9A87 CD E3 9B     	call Genera_coordenadas
 461+ 9A8A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9A8C
 463+ 9A8C              ; ---------- ---------- ----------
 464+ 9A8C
 465+ 9A8C              ; Movemos, no hay recolocación.
 466+ 9A8C
 467+ 9A8C 2A A8 88     8 ld hl,(Posicion_actual)
 468+ 9A8F CD 93 9A     	call DESPLZ_IZQ
 469+ 9A92 C9           2 ret
 470+ 9A93
 471+ 9A93              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9A93              ;
 473+ 9A93              ;	22/9/22
 474+ 9A93
 475+ 9A93              DESPLZ_IZQ
 476+ 9A93
 477+ 9A93 CD A2 9A     	call Desplaza_izquierda
 478+ 9A96 CD EE 9A         call modifica_parametros_1er_DESPLZ
 479+ 9A99 CD 16 9B     	call Ciclo_completo_2
 480+ 9A9C 21 D0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9A9F CB BE        	res 7,(hl)
 482+ 9AA1 C9           	ret
 483+ 9AA2
 484+ 9AA2              Desplaza_izquierda
 485+ 9AA2
 486+ 9AA2 3A BB 88     	ld a,(Vel_left)
 487+ 9AA5 47           	ld b,a
 488+ 9AA6 2A B6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9AA9 23           1 inc hl
 490+ 9AAA 23           	inc hl
 491+ 9AAB 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AAD 22 B6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9AB0 CD DD 8B     	call Extrae_address
 494+ 9AB3 22 AA 88     	ld (Puntero_objeto),hl
 495+ 9AB6
 496+ 9AB6              ; Modifica (Puntero_DESPLZ_der).
 497+ 9AB6
 498+ 9AB6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9AB6              ; Cuántos movimientos hemos hecho ??
 500+ 9AB6              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9AB6
 502+ 9AB6 2A B2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9AB9 EB           	ex de,hl
 504+ 9ABA A7           	and a
 505+ 9ABB ED 52        	sbc hl,de
 506+ 9ABD CB 3D        	srl l
 507+ 9ABF 3E 08        6 ld a,8
 508+ 9AC1 95           	sub l
 509+ 9AC2 30 1E        	jr nc,3F
 510+ 9AC4
 511+ 9AC4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9AC4              ; B="0".
 513+ 9AC4
 514+ 9AC4 04           4 inc b
 515+ 9AC5 3C           	inc a
 516+ 9AC6 20 FC        	jr nz,4B
 517+ 9AC8 78           	ld a,b
 518+ 9AC9 08           	ex af,af
 519+ 9ACA 2A B2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9ACD 23           5 inc hl
 521+ 9ACE 23           	inc hl
 522+ 9ACF 10 FC        	djnz 5B
 523+ 9AD1 22 B6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9AD4 CD DD 8B     	call Extrae_address
 525+ 9AD7 22 AA 88     	ld (Puntero_objeto),hl
 526+ 9ADA
 527+ 9ADA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9ADA              ; _(Posicion_actual).
 529+ 9ADA
 530+ 9ADA 21 A8 88     	ld hl,Posicion_actual
 531+ 9ADD 35           	dec (hl)
 532+ 9ADE 08           	ex af,af
 533+ 9ADF 6F           	ld l,a
 534+ 9AE0 18 DD        	jr 6B
 535+ 9AE2
 536+ 9AE2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9AE2
 538+ 9AE2 47           3 ld b,a
 539+ 9AE3 2A B0 88     	ld hl,(Indice_Sprite_der)
 540+ 9AE6 23           2 inc hl
 541+ 9AE7 23           	inc hl
 542+ 9AE8 10 FC        	djnz 2B
 543+ 9AEA 22 B4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9AED C9           8 ret
 545+ 9AEE
 546+ 9AEE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9AEE              ;
 548+ 9AEE              ;	modifica_parametros_1er_DESPLZ
 549+ 9AEE              ;
 550+ 9AEE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9AEE              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9AEE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9AEE
 554+ 9AEE 3A AE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9AF1 A7           	and a
 556+ 9AF2 20 1E        	jr nz,1F
 557+ 9AF4 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9AF5 32 AE 88         ld (CTRL_DESPLZ),a
 559+ 9AF8 21 A7 88     	ld hl,Columns
 560+ 9AFB 34           	inc (hl)
 561+ 9AFC 3A BA 88     	ld a,(Cuad_objeto)
 562+ 9AFF E6 01        	and 1
 563+ 9B01 20 0F        	jr nz,1F
 564+ 9B03 2A A8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B06 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B07 22 A8 88     	ld (Posicion_actual),hl
 567+ 9B0A CD E3 9B     	call Genera_coordenadas
 568+ 9B0D CD 69 9B     	call Dec_CTRL_DESPLZ
 569+ 9B10 18 03        	jr 2F
 570+ 9B12 CD 69 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B15 C9           2 ret
 572+ 9B16
 573+ 9B16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B16
 575+ 9B16 3A AE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B19 FE F7        	cp $f7
 577+ 9B1B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B1D 30 2C        	jr nc,3F
 579+ 9B1F
 580+ 9B1F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B1F
 582+ 9B1F 06 00        	ld b,0
 583+ 9B21 04           4 inc b
 584+ 9B22 3C           	inc a
 585+ 9B23 FE F7        	cp $f7
 586+ 9B25 20 FA        	jr nz,4B
 587+ 9B27 3E FF        	ld a,$ff
 588+ 9B29 90           	sub b
 589+ 9B2A 32 AE 88     	ld (CTRL_DESPLZ),a
 590+ 9B2D 18 1C        	jr 3F
 591+ 9B2F
 592+ 9B2F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B2F
 594+ 9B2F 21 A7 88     1 ld hl,Columns
 595+ 9B32 35           	dec (hl)
 596+ 9B33 AF           	xor a
 597+ 9B34 32 AE 88     	ld (CTRL_DESPLZ),a
 598+ 9B37 3A BA 88     	ld a,(Cuad_objeto)
 599+ 9B3A E6 01        	and 1
 600+ 9B3C 28 0A        	jr z,2F
 601+ 9B3E 2A A8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B41 2B           	dec hl
 603+ 9B42 22 A8 88     	ld (Posicion_actual),hl
 604+ 9B45 CD E3 9B     	call Genera_coordenadas
 605+ 9B48
 606+ 9B48              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B48
 608+ 9B48 CD 07 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B4B C9           3 ret
 610+ 9B4C
 611+ 9B4C              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B4C              ;
 613+ 9B4C              ;	19/10/22
 614+ 9B4C              ;
 615+ 9B4C              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B4C              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B4C
 618+ 9B4C 3A AC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B4F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9B51 C9           	ret
 621+ 9B52
 622+ 9B52              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9B52              ;
 624+ 9B52              ;	19/10/22
 625+ 9B52              ;
 626+ 9B52              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9B52              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9B52
 629+ 9B52 3A AC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9B55 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9B57 C9           	ret
 632+ 9B58
 633+ 9B58              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9B58              ;
 635+ 9B58              ;	24/7/22
 636+ 9B58              ;
 637+ 9B58              ;	Inc_CTRL_DESPLZ
 638+ 9B58              ;
 639+ 9B58              ;
 640+ 9B58              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9B58
 642+ 9B58 21 AE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9B5B 3A BC 88     	ld a,(Vel_right)
 644+ 9B5E A7           	and a
 645+ 9B5F 28 06        	jr z,1F
 646+ 9B61 47           	ld b,a
 647+ 9B62 34           3 inc (hl)
 648+ 9B63 10 FD        	djnz 3B
 649+ 9B65 18 01        	jr 2F
 650+ 9B67 34           1 inc (hl)
 651+ 9B68 C9           2 ret
 652+ 9B69
 653+ 9B69              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9B69              ;
 655+ 9B69              ;	5/2/23
 656+ 9B69              ;
 657+ 9B69              ;	Dec_CTRL_DESPLZ
 658+ 9B69              ;
 659+ 9B69              ;
 660+ 9B69              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9B69
 662+ 9B69 21 AE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9B6C 3A BB 88     	ld a,(Vel_left)
 664+ 9B6F A7           	and a
 665+ 9B70 28 06        	jr z,1F
 666+ 9B72 47           	ld b,a
 667+ 9B73 35           3 dec (hl)
 668+ 9B74 10 FD        	djnz 3B
 669+ 9B76 18 01        	jr 2F
 670+ 9B78 35           1 dec (hl)
 671+ 9B79 C9           2 ret
 672+ 9B7A
 673+ 9B7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9B7A
 675+ 9B7A 2A A8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9B7D 01 1F 00     	ld bc,31
 677+ 9B80 A7           	and a
 678+ 9B81 ED 4A        	adc hl,bc
 679+ 9B83 22 A8 88     	ld (Posicion_actual),hl
 680+ 9B86 21 D0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9B89 CB C6        	set 0,(hl)
 682+ 9B8B C9           	ret
 683+ 9B8C
 684+ 9B8C              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9B8C
 686+ 9B8C 2A A8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9B8F 01 1F 00     	ld bc,31
 688+ 9B92 A7           	and a
 689+ 9B93 ED 42        	sbc hl,bc
 690+ 9B95 22 A8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9B98 21 D0 88     	ld hl,Ctrl_0
 692+ 9B9B CB CE        	set 1,(hl)
 693+ 9B9D C9           	ret
 694+ 9B9E
 695+ 9B9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9B9E
 697+ 9B9E 24           Reaparece_abajo inc h
 698+ 9B9F 01 E0 17     	ld bc,$17e0
 699+ 9BA2 A7           	and a
 700+ 9BA3 ED 4A        	adc hl,bc
 701+ 9BA5 22 A8 88     	ld (Posicion_actual),hl
 702+ 9BA8 21 D0 88     	ld hl,Ctrl_0
 703+ 9BAB CB D6        	set 2,(hl)
 704+ 9BAD C9           	ret
 705+ 9BAE
 706+ 9BAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BAE
 708+ 9BAE 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9BB1 A7           	and a
 710+ 9BB2 ED 42        	sbc hl,bc
 711+ 9BB4 22 A8 88     	ld (Posicion_actual),hl
 712+ 9BB7 21 D0 88     	ld hl,Ctrl_0
 713+ 9BBA CB DE        	set 3,(hl)
 714+ 9BBC C9           	ret
 715+ 9BBD
 716+ 9BBD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9BBD              ;
 718+ 9BBD              ;	15/07/23
 719+ 9BBD
 720+ 9BBD              Reinicio
 721+ 9BBD
 722+ 9BBD              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9BBD
 724+ 9BBD AF           	xor a
 725+ 9BBE 21 D5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9BC1 CD DF 9B     	call Limpia_contenido_hl
 727+ 9BC4
 728+ 9BC4 21 A8 88     	ld hl,Posicion_actual
 729+ 9BC7 CD DF 9B     	call Limpia_contenido_hl
 730+ 9BCA
 731+ 9BCA CD 0F 9F     	call Inicializa_Puntero_indice_mov
 732+ 9BCD CD 99 9E     	call Inicia_Puntero_mov
 733+ 9BD0
 734+ 9BD0 21 D7 88     	ld hl,Incrementa_puntero
 735+ 9BD3 06 05        	ld b,5
 736+ 9BD5 77           1 ld (hl),a
 737+ 9BD6 23           	inc hl
 738+ 9BD7 10 FC        	djnz 1B
 739+ 9BD9
 740+ 9BD9 21 E1 88     	ld hl,Ctrl_2
 741+ 9BDC CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9BDE
 743+ 9BDE C9           	ret
 744+ 9BDF
 745+ 9BDF 77           Limpia_contenido_hl	ld (hl),a
 746+ 9BE0 23           	inc hl
 747+ 9BE1 77           	ld (hl),a
 748+ 9BE2 C9           	ret
 749+ 9BE3
 750+ 9BE3
# file closed: Direcciones.asm
1518  9BE3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BE3              ; ------------------------------------------------------------------------
   2+ 9BE3              ;
   3+ 9BE3              ;	02/04/23
   4+ 9BE3              ;
   5+ 9BE3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BE3              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BE3              ;
   8+ 9BE3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BE3              ;
  10+ 9BE3              ;	Modifica: A,BC y DE.
  11+ 9BE3
  12+ 9BE3 C5           Genera_coordenadas push bc
  13+ 9BE4 E5           	push hl
  14+ 9BE5 D5           	push de
  15+ 9BE6
  16+ 9BE6 2A A8 88     	ld hl,(Posicion_actual)
  17+ 9BE9
  18+ 9BE9 7D           	ld a,l
  19+ 9BEA E6 1F        	and $1f
  20+ 9BEC 32 AC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9BEF
  22+ 9BEF CD 58 98     	call calcula_tercio
  23+ 9BF2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9BF3
  25+ 9BF3 1E 00        	ld e,0
  26+ 9BF5 7D           	ld a,l
  27+ 9BF6 E6 E0        	and $e0
  28+ 9BF8 28 01        	jr z,1F
  29+ 9BFA 04           	inc b
  30+ 9BFB
  31+ 9BFB 04           1 inc b
  32+ 9BFC 05           	dec b
  33+ 9BFD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9BFF              ;														; _ , salimos.
  35+ 9BFF 1C           3 inc e
  36+ 9C00 D6 20        	sub 32
  37+ 9C02 20 FB        	jr nz,3B
  38+ 9C04 10 F5        	djnz 1B
  39+ 9C06
  40+ 9C06 7B           2 ld a,e
  41+ 9C07 32 AD 88     	ld (Coordenada_y),a
  42+ 9C0A
  43+ 9C0A D1           	pop de
  44+ 9C0B E1           	pop hl
  45+ 9C0C C1           	pop bc
  46+ 9C0D
  47+ 9C0D C9           	ret
  48+ 9C0E
  49+ 9C0E              ; ------------------------------------------------------------------------
  50+ 9C0E              ;	28/05/23
  51+ 9C0E              ;
  52+ 9C0E              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C0E              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C0E              ;
  55+ 9C0E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C0E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C0E              ;
  58+ 9C0E              ;		DE="$120d"
  59+ 9C0E              ;
  60+ 9C0E              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C0E              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C0E              ;
  63+ 9C0E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C0E
  65+ 9C0E              ;	Modifica: A,BC y DE.
  66+ 9C0E
  67+ 9C0E
  68+ 9C0E              Genera_coordenadas_disparo
  69+ 9C0E
  70+ 9C0E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C0E
  72+ 9C0E 7D           	ld a,l
  73+ 9C0F E6 1F        	and $1f
  74+ 9C11 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C12 CD 58 98     	call calcula_tercio
  76+ 9C15 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C16 1E 00        	ld e,0
  78+ 9C18 7D           	ld a,l
  79+ 9C19 E6 E0        	and $e0
  80+ 9C1B 28 01        	jr z,1F
  81+ 9C1D 04           	inc b
  82+ 9C1E 1C           1 inc e
  83+ 9C1F D6 20        	sub 32
  84+ 9C21 20 FB        	jr nz,1B
  85+ 9C23 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C25 C9           	ret
  87+ 9C26
# file closed: Genera_coordenadas.asm
1519  9C26              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C26              ; Relojes y temporizaciones.
   2+ 9C26
   3+ 9C26              ; ------------------------------------------------------
   4+ 9C26              ;
   5+ 9C26              ;	16/7/23
   6+ 9C26              ;
   7+ 9C26              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C26              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C26              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C26              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C26              ;
  12+ 9C26              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C26              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C26
  15+ 9C26              ; Disparo_entidad db 1
  16+ 9C26              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C26              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C26
  19+ 9C26              Habilita_disparos
  20+ 9C26
  21+ 9C26 7E           	ld a,(hl)
  22+ 9C27 A7           	and a
  23+ 9C28 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C29
  25+ 9C29 EB           	ex de,hl
  26+ 9C2A
  27+ 9C2A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C2B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C2C
  30+ 9C2C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C2C
  32+ 9C2C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C2D 7E           	ld a,(hl)
  34+ 9C2E 23           	inc hl
  35+ 9C2F 77           	ld (hl),a
  36+ 9C30
  37+ 9C30 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C31 3E 01        	ld a,1
  39+ 9C33 77           	ld (hl),a
  40+ 9C34 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1520  9C35              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C35
   2+ 9C35
   3+ 9C35              ;   07/07/23
   4+ 9C35              ;
   5+ 9C35              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C35              ;
   7+ 9C35              ;   Codificación:
   8+ 9C35              ;
   9+ 9C35              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C35              ;
  11+ 9C35              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C35              ;
  13+ 9C35              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C35              ;
  15+ 9C35              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C35              ;
  17+ 9C35              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C35              ;                               ..... %01000010 Vel_up 4
  19+ 9C35              ;                                               Vel_down 2
  20+ 9C35              ;                               ..... $42
  21+ 9C35              ;
  22+ 9C35              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C35              ;
  24+ 9C35              ;                               ..... %01000010 Vel_left 4
  25+ 9C35              ;                                               Vel_right 2
  26+ 9C35              ;                               ..... $42
  27+ 9C35              ;
  28+ 9C35              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C35              ;
  30+ 9C35              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C35              ;
  32+ 9C35              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C35              ;
  34+ 9C35              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C35              ;                                     $53
  36+ 9C35              ;
  37+ 9C35              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C35              ;
  39+ 9C35              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C35              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C35              ;
  42+ 9C35              ;                       Arriba ..... $81
  43+ 9C35              ;                       Arriba - izquierda ..... $a1
  44+ 9C35              ;                       Arriba - derecha ..... $91
  45+ 9C35              ;
  46+ 9C35              ;                       Abajo ..... $41
  47+ 9C35              ;                       Abajo - izquierda ..... $61
  48+ 9C35              ;                       Abajo - derecha ..... $51
  49+ 9C35              ;
  50+ 9C35              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C35              ;
  52+ 9C35              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C35              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C35              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C35              ;
  56+ 9C35              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C35              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C35              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C35              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C35              ;
  61+ 9C35              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C35              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C35              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C35              ;
  65+ 9C35              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C35              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C35              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C35              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C35
  70+ 9C35              ; ----- ----- ----- ----- -----
  71+ 9C35
  72+ 9C35 61 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C37 69 9C            defw F_1
  74+ 9C39 73 9C            defw F_2
  75+ 9C3B 7D 9C            defw Codo_abajo_derecha
  76+ 9C3D B1 9C            defw Derecha_y_subiendo
  77+ 9C3F BB 9C            defw Derecha_y_subiendo_1
  78+ 9C41 C5 9C            defw F_3
  79+ 9C43 CF 9C            defw F_4
  80+ 9C45 D9 9C            defw Derecha_y_bajando
  81+ 9C47 E3 9C            defw Derecha_y_bajando_1
  82+ 9C49 ED 9C            defw Derecha_y_bajando_2
  83+ 9C4B F7 9C            defw Codo_derecha_abajo
  84+ 9C4D 27 9D            defw Codo_abajo_izq.
  85+ 9C4F 5B 9D            defw Izquierda_y_subiendo
  86+ 9C51 65 9D            defw Izquierda_y_subiendo_1
  87+ 9C53 6F 9D            defw F_5
  88+ 9C55 79 9D            defw F_6
  89+ 9C57 83 9D            defw Izquierda_y_bajando
  90+ 9C59 8D 9D            defw Izquierda_y_bajando_1
  91+ 9C5B 97 9D            defw Izquierda_y_bajando_2
  92+ 9C5D A1 9D            defw Codo_izquierda_abajo
  93+ 9C5F 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C61
  95+ 9C61 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C65 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C69
  98+ 9C69 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C6D 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C71 08 00
 100+ 9C73 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C77 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C7B 0F FE
 102+ 9C7D
 103+ 9C7D 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C81 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C85 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C89 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C8D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C91 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C95 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C99 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C9D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CA1 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CA5 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CA9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CAD 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CB1
 117+ 9CB1 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9CB5 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9CB9 06 00
 119+ 9CBB
 120+ 9CBB 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9CBF 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CC3 02 00
 122+ 9CC5
 123+ 9CC5 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9CC9 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9CCD 04 00
 125+ 9CCF 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9CD3 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9CD7 08 00
 127+ 9CD9
 128+ 9CD9 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CDD 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CE1 02 00
 130+ 9CE3
 131+ 9CE3 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CE7 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CEB 06 00
 133+ 9CED
 134+ 9CED 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CF1 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CF5 06 00
 136+ 9CF7
 137+ 9CF7              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CF7
 139+ 9CF7 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CFB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CFF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D03 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D07 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D0B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D0F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D13 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D17 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D1B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D1F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D23 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D27
 152+ 9D27 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D2B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D2F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D33 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D37 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D3B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D3F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D43 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D47 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D4B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D4F 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D53 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D57 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D5B
 166+ 9D5B 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D5F 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D63 06 00
 168+ 9D65
 169+ 9D65 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D69 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D6D 02 00
 171+ 9D6F
 172+ 9D6F 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D73 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D77 04 00
 174+ 9D79 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D7D 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D81 08 00
 176+ 9D83
 177+ 9D83 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D87 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D8B 02 00
 179+ 9D8D
 180+ 9D8D 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D91 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D95 06 00
 182+ 9D97
 183+ 9D97 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D9B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D9F 06 00
 185+ 9DA1
 186+ 9DA1 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DA5 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DA9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DAD 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DB1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9DB5 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9DB9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9DBD 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DC1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DC5 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9DC9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9DCD 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9DD1
 199+ 9DD1              ; ----- ----- ----- ----- -----
 200+ 9DD1              ;
 201+ 9DD1              ;   27/06/23
 202+ 9DD1
 203+ 9DD1              Movimiento
 204+ 9DD1
 205+ 9DD1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9DD1
 207+ 9DD1              ;    ld hl,(Posicion_actual)
 208+ 9DD1
 209+ 9DD1 3A E1 88         ld a,(Ctrl_2)
 210+ 9DD4 CB 57            bit 2,a
 211+ 9DD6 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9DD8
 213+ 9DD8 2A D3 88         ld hl,(Puntero_mov)
 214+ 9DDB 7E               ld a,(hl)
 215+ 9DDC
 216+ 9DDC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9DDC
 218+ 9DDC              Inicia_desplazamiento.
 219+ 9DDC
 220+ 9DDC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9DDC
 222+ 9DDC CD D0 9E         call Ajusta_velocidad_desplazamiento
 223+ 9DDF
 224+ 9DDF              ; Iniciamos (Repetimos_mov).
 225+ 9DDF
 226+ 9DDF 7E               ld a,(hl)
 227+ 9DE0 E6 0F            and $0f
 228+ 9DE2 32 D9 88         ld (Repetimos_desplazamiento),a
 229+ 9DE5 32 DA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9DE8
 231+ 9DE8              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9DE8
 233+ 9DE8 23               inc hl
 234+ 9DE9 7E               ld a,(hl)
 235+ 9DEA 32 DC 88         ld (Cola_de_desplazamiento),a
 236+ 9DED 2B               dec hl
 237+ 9DEE
 238+ 9DEE 21 E1 88         ld hl,Ctrl_2
 239+ 9DF1 CB D6            set 2,(hl)
 240+ 9DF3
 241+ 9DF3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9DF3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9DF3
 244+ 9DF3              Desplazamiento_iniciado
 245+ 9DF3
 246+ 9DF3 CD A4 9E         call Aplica_desplazamiento
 247+ 9DF6
 248+ 9DF6 3A E1 88         ld a,(Ctrl_2)
 249+ 9DF9 CB 67            bit 4,a
 250+ 9DFB C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9DFC
 252+ 9DFC 21 D9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9DFF 35               dec (hl)
 254+ 9E00 C0               ret nz
 255+ 9E01
 256+ 9E01              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E01              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E01              ; Analiza (Cola_de_desplazamiento).
 259+ 9E01
 260+ 9E01 3A DC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E04 A7               and a
 262+ 9E05 CC F9 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E08 28 30            jr z,Reinicia_el_movimiento
 264+ 9E0A
 265+ 9E0A FE FF            cp $ff
 266+ 9E0C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E0E
 268+ 9E0E FE FE            cp $fe
 269+ 9E10 CC 7D 9E         call z,Fijamos_bucle
 270+ 9E13 28 25            jr z,Reinicia_el_movimiento
 271+ 9E15
 272+ 9E15 FE FD            cp $fd
 273+ 9E17 20 11            jr nz,1F
 274+ 9E19
 275+ 9E19              ; ---
 276+ 9E19              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E19
 278+ 9E19 3A E1 88         ld a,(Ctrl_2)
 279+ 9E1C CB 5F            bit 3,a
 280+ 9E1E 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E20
 282+ 9E20              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E20
 284+ 9E20 21 E1 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E23 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E25
 287+ 9E25 CD 8E 9E         call Inicia_Repetimos_movimiento
 288+ 9E28 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E2A              ; ---
 290+ 9E2A
 291+ 9E2A FE 01        1 cp 1
 292+ 9E2C CA 67 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E2F
 294+ 9E2F 3D               dec a
 295+ 9E30 32 DC 88         ld (Cola_de_desplazamiento),a
 296+ 9E33
 297+ 9E33 3A DA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E36 32 D9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E39              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E39 C9               ret
 301+ 9E3A
 302+ 9E3A              Reinicia_el_movimiento
 303+ 9E3A
 304+ 9E3A 3A E1 88         ld a,(Ctrl_2)
 305+ 9E3D CB 5F            bit 3,a
 306+ 9E3F 28 1B            jr z,2F
 307+ 9E41
 308+ 9E41              ; (Cola_de_desplazamiento)="254".
 309+ 9E41
 310+ 9E41 21 DB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E44 35               dec (hl)
 312+ 9E45 20 15            jr nz,2F
 313+ 9E47
 314+ 9E47              ; Fin de las repeticiones del último movimiento.
 315+ 9E47
 316+ 9E47 21 E1 88         ld hl,Ctrl_2
 317+ 9E4A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E4C
 319+ 9E4C 2A D3 88         ld hl,(Puntero_mov)
 320+ 9E4F 23               inc hl
 321+ 9E50 23               inc hl
 322+ 9E51 23               inc hl
 323+ 9E52 22 D3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9E55              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9E55 7E               ld a,(hl)
 326+ 9E56 32 DC 88         ld (Cola_de_desplazamiento),a
 327+ 9E59
 328+ 9E59 C3 01 9E         jp Cola
 329+ 9E5C
 330+ 9E5C CD 99 9E     2 call Inicia_Puntero_mov
 331+ 9E5F
 332+ 9E5F 21 E1 88         ld hl,Ctrl_2
 333+ 9E62 CB 96            res 2,(hl)
 334+ 9E64
 335+ 9E64 C3 D1 9D         jp Movimiento
 336+ 9E67
 337+ 9E67              Siguiente_desplazamiento
 338+ 9E67
 339+ 9E67              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9E67              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9E67
 342+ 9E67 21 E1 88         ld hl,Ctrl_2
 343+ 9E6A CB 96            res 2,(hl)
 344+ 9E6C
 345+ 9E6C 2A D3 88         ld hl,(Puntero_mov)
 346+ 9E6F 23               inc hl
 347+ 9E70 23               inc hl
 348+ 9E71 22 D3 88         ld (Puntero_mov),hl
 349+ 9E74
 350+ 9E74 7E               ld a,(hl)
 351+ 9E75 A7               and a
 352+ 9E76 CC F9 9E         call z,Incrementa_Puntero_indice_mov
 353+ 9E79 CA 3A 9E         jp z,Reinicia_el_movimiento
 354+ 9E7C
 355+ 9E7C C9               ret
 356+ 9E7D
 357+ 9E7D              ; Subrutinas -----------------------------------------
 358+ 9E7D              ; ---------- --------- --------- ---------- ----------
 359+ 9E7D              ;
 360+ 9E7D              ;   24/07/23
 361+ 9E7D              ;
 362+ 9E7D              ;   Fijamos_bucle
 363+ 9E7D              ;
 364+ 9E7D              ;
 365+ 9E7D
 366+ 9E7D              Fijamos_bucle
 367+ 9E7D
 368+ 9E7D 3A D7 88         ld a,(Incrementa_puntero)
 369+ 9E80 3C               inc a
 370+ 9E81 32 D8 88         ld (Incrementa_puntero_backup),a
 371+ 9E84
 372+ 9E84 CD F9 9E         call Incrementa_Puntero_indice_mov
 373+ 9E87 2A D1 88         ld hl,(Puntero_indice_mov)
 374+ 9E8A 22 D5 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9E8D C9               ret
 376+ 9E8E
 377+ 9E8E              ; ---------- --------- --------- ---------- ----------
 378+ 9E8E              ;
 379+ 9E8E              ;   07/7/23
 380+ 9E8E              ;
 381+ 9E8E              ;   Inicia_Repetimos_movimiento
 382+ 9E8E              ;
 383+ 9E8E              ;
 384+ 9E8E
 385+ 9E8E              Inicia_Repetimos_movimiento
 386+ 9E8E
 387+ 9E8E              ; Iniciamos (Repetimos_movimiento).
 388+ 9E8E
 389+ 9E8E DD 2A D3 88      ld ix,(Puntero_mov)
 390+ 9E92 DD 7E 02         ld a,(ix+2)
 391+ 9E95 32 DB 88         ld (Repetimos_movimiento),a
 392+ 9E98
 393+ 9E98 C9               ret
 394+ 9E99
 395+ 9E99              ; ---------- --------- --------- ---------- ----------
 396+ 9E99              ;
 397+ 9E99              ;   26/6/23
 398+ 9E99              ;
 399+ 9E99              ;   Inicia_Puntero_mov
 400+ 9E99              ;
 401+ 9E99              ;
 402+ 9E99
 403+ 9E99 2A D1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9E9C 5E               ld e,(hl)
 405+ 9E9D 23               inc hl
 406+ 9E9E 56               ld d,(hl)
 407+ 9E9F EB               ex de,hl
 408+ 9EA0 22 D3 88         ld (Puntero_mov),hl
 409+ 9EA3 C9               ret
 410+ 9EA4
 411+ 9EA4              ; ---------- --------- --------- ---------- ----------
 412+ 9EA4              ;
 413+ 9EA4              ;   27/06/23
 414+ 9EA4              ;
 415+ 9EA4              ;   Aplica_movimiento.
 416+ 9EA4
 417+ 9EA4              Aplica_desplazamiento
 418+ 9EA4
 419+ 9EA4              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EA4
 421+ 9EA4 2A D3 88         ld hl, (Puntero_mov)
 422+ 9EA7
 423+ 9EA7 7E               ld a,(hl)
 424+ 9EA8 E6 F0            and $f0
 425+ 9EAA C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EAB
 427+ 9EAB CB 7E            bit 7,(hl)
 428+ 9EAD 28 03            jr z,1F
 429+ 9EAF CD CF 98         call Mov_up
 430+ 9EB2 2A D3 88     1 ld hl, (Puntero_mov)
 431+ 9EB5 CB 76            bit 6,(hl)
 432+ 9EB7 28 03            jr z,2F
 433+ 9EB9 CD 9E 98         call Mov_down
 434+ 9EBC 2A D3 88     2 ld hl, (Puntero_mov)
 435+ 9EBF CB 6E            bit 5,(hl)
 436+ 9EC1 28 03            jr z,3F
 437+ 9EC3 CD 30 9A         call Mov_left
 438+ 9EC6 2A D3 88     3 ld hl, (Puntero_mov)
 439+ 9EC9 CB 66            bit 4,(hl)
 440+ 9ECB C8               ret z
 441+ 9ECC CD 12 99         call Mov_right
 442+ 9ECF C9               ret
 443+ 9ED0
 444+ 9ED0              ; ---------- --------- --------- ---------- ----------
 445+ 9ED0              ;
 446+ 9ED0              ;   26/06/23
 447+ 9ED0              ;
 448+ 9ED0              ;   Ajusta_velocidad_desplazamiento.
 449+ 9ED0
 450+ 9ED0              Ajusta_velocidad_desplazamiento
 451+ 9ED0
 452+ 9ED0              ; 1er byte de la cadena de movimiento.
 453+ 9ED0              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9ED0
 455+ 9ED0 CD EE 9E         call Extrae_nibble_alto
 456+ 9ED3
 457+ 9ED3 32 BD 88         ld (Vel_up),a
 458+ 9ED6 79               ld a,c
 459+ 9ED7 E6 0F            and $0f
 460+ 9ED9 32 BE 88         ld (Vel_down),a
 461+ 9EDC
 462+ 9EDC              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9EDC              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9EDC
 465+ 9EDC 23               inc hl
 466+ 9EDD CD EE 9E         call Extrae_nibble_alto
 467+ 9EE0
 468+ 9EE0 32 BB 88         ld (Vel_left),a
 469+ 9EE3 79               ld a,c
 470+ 9EE4 E6 0F            and $0f
 471+ 9EE6 32 BC 88         ld (Vel_right),a
 472+ 9EE9
 473+ 9EE9              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9EE9
 475+ 9EE9 23               inc hl
 476+ 9EEA 22 D3 88         ld (Puntero_mov),hl
 477+ 9EED C9               ret
 478+ 9EEE
 479+ 9EEE 06 04        Extrae_nibble_alto ld b,4
 480+ 9EF0 7E               ld a,(hl)
 481+ 9EF1 4F               ld c,a
 482+ 9EF2 E6 F0            and $f0
 483+ 9EF4 CB 3F        1 srl a
 484+ 9EF6 10 FC            djnz 1B
 485+ 9EF8 C9               ret
 486+ 9EF9
 487+ 9EF9              ; ---------- --------- --------- ---------- ----------
 488+ 9EF9              ;
 489+ 9EF9              ;   5/7/23
 490+ 9EF9              ;
 491+ 9EF9              ;   Incrementa_Puntero_indice_mov
 492+ 9EF9
 493+ 9EF9              Incrementa_Puntero_indice_mov
 494+ 9EF9
 495+ 9EF9 21 D7 88         ld hl,Incrementa_puntero
 496+ 9EFC 34               inc (hl)
 497+ 9EFD
 498+ 9EFD 2A D1 88         ld hl,(Puntero_indice_mov)
 499+ 9F00 01 02 00         ld bc,2
 500+ 9F03 A7               and a
 501+ 9F04 09               add hl,bc
 502+ 9F05 22 D1 88         ld (Puntero_indice_mov),hl
 503+ 9F08
 504+ 9F08 7E               ld a,(hl)
 505+ 9F09 A7               and a
 506+ 9F0A
 507+ 9F0A              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F0A
 509+ 9F0A              ;    jr z,$
 510+ 9F0A
 511+ 9F0A              ;! Reinicia el Patrón de movimiento.
 512+ 9F0A
 513+ 9F0A CC 0F 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F0D
 515+ 9F0D AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F0E
 517+ 9F0E C9               ret
 518+ 9F0F
 519+ 9F0F
 520+ 9F0F              ; ---------- --------- --------- ---------- ----------
 521+ 9F0F              ;
 522+ 9F0F              ;   24/07/23
 523+ 9F0F              ;
 524+ 9F0F              ;   Inicializa_Puntero_indice_mov
 525+ 9F0F
 526+ 9F0F              Inicializa_Puntero_indice_mov
 527+ 9F0F
 528+ 9F0F              ; Existe etiqueta de bucle principal???
 529+ 9F0F
 530+ 9F0F 2A D5 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F12 24               inc h
 532+ 9F13 25               dec h
 533+ 9F14 28 05            jr z,2F
 534+ 9F16
 535+ 9F16 22 D1 88         ld (Puntero_indice_mov),hl
 536+ 9F19 18 14            jr 3F
 537+ 9F1B
 538+ 9F1B              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F1B
 540+ 9F1B 3A D7 88     2 ld a,(Incrementa_puntero)
 541+ 9F1E 47               ld b,a
 542+ 9F1F
 543+ 9F1F 2A D1 88         ld hl,(Puntero_indice_mov)
 544+ 9F22 2B           1 dec hl
 545+ 9F23 2B               dec hl
 546+ 9F24 10 FC            djnz 1B
 547+ 9F26 22 D1 88         ld (Puntero_indice_mov),hl
 548+ 9F29
 549+ 9F29 AF               xor a
 550+ 9F2A 32 D7 88         ld (Incrementa_puntero),a
 551+ 9F2D 18 06            jr 4F
 552+ 9F2F
 553+ 9F2F 3A D8 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F32 32 D7 88         ld (Incrementa_puntero),a
 555+ 9F35 C9           4 ret
 556+ 9F36
 557+ 9F36
 558+ 9F36
# file closed: Patrones_de_mov.asm
1521  9F36              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F36              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F36              ;
   3+ 9F36              ;	27/10/23
   4+ 9F36              ;
   5+ 9F36              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F36
   7+ 9F36              ;	ADC HL,SP	LD (addr),SP
   8+ 9F36              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F36              ;	ADD IX,SP	LD SP,nn
  10+ 9F36              ; 	ADD IY,SP	LD SP,HL
  11+ 9F36              ;				LD SP,IX
  12+ 9F36              ;	DEC SP		LD SP,IY
  13+ 9F36
  14+ 9F36              ;	EX (SP),HL
  15+ 9F36              ;	EX (SP),IX
  16+ 9F36              ;	EX (SP),IY
  17+ 9F36
  18+ 9F36              ;	INC SP
  19+ 9F36
  20+ 9F36                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 F4 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 C6 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A E3 88         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A FC 88         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A D0 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 00 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A FA 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A E3 88         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 FC 88         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A D0 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 00 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B F4 88      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 FA 88     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B F4 88  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC FB               ei
 107+ 7FFD C9               ret
 108+ 7FFE
 109+ 7FFE              ; -----------------------------------------------------------------------------
 110+ 7FFE              ;
 111+ 7FFE              ;   21/11/23
 112+ 7FFE
 113+ 7FFE              Limpia_y_reinicia_Stack_Snapshot
 114+ 7FFE
 115+ 7FFE              ;   Limpia Album_de_fotos.
 116+ 7FFE
 117+ 7FFE 2A FA 88         ld hl,(Stack_snapshot)
 118+ 8001 7D               ld a,l
 119+ 8002 A7               and a
 120+ 8003 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8004
 122+ 8004 47               ld b,a
 123+ 8005 04               inc b
 124+ 8006
 125+ 8006 36 00        1 ld (hl),0
 126+ 8008 2D               dec l
 127+ 8009 10 FB            djnz 1B
 128+ 800B
 129+ 800B              ;   Reinicializa (Stack_snapshot).
 130+ 800B
 131+ 800B AF               xor a
 132+ 800C 32 FA 88         ld (Stack_snapshot),a
 133+ 800F
 134+ 800F C9               ret
# file closed: Guarda_foto_registros.asm
1522  8010
1523  8010              	SAVESNA "Pruebas.sna", START
1524  8010
1525  8010
1526  8010
1527  8010
# file closed: Banco_de_pruebas.asm
