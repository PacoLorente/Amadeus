# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B3 8E     	call Frame
  15  A104
  16  A104              ;	ld a,(Contador_de_frames)
  17  A104              ;	cp $1e
  18  A104              ;	jr z,$
  19  A104
  20  A104 ED 4D        	reti
  21  A106
  22  A106              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  23  A106
  24  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 0F 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 13 8A        	defw End_Snapshot_1
 267+ 8500 17 8A        	defw End_Snapshot_2
 268+ 8502 1B 8A        	defw End_Snapshot_3
 269+ 8504 11 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 15 8A        	defw End_Snapshot_disparos_1
 271+ 8508 19 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1D 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  25  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 5B 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 5B 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  26  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB B9 88        	defw Nivel_2
   7+ 88AD C6 88        	defw Nivel_3
   8+ 88AF D6 88        	defw Nivel_4
   9+ 88B1 E8 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88B8 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88B9 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88BE 01 02
  22+ 88C0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C4 01 02
  23+ 88C6 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CB 01
  25+ 88CC 03 01 01 01  	db 3,1,1,1,1
  25+ 88D0 01
  26+ 88D1 03 01 01 01  	db 3,1,1,1,1
  26+ 88D5 01
  27+ 88D6 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DB 01
  29+ 88DC 04 01 01 01  	db 4,1,1,1,1
  29+ 88E0 01
  30+ 88E1 04 01 01 01  	db 4,1,1,1,1
  30+ 88E5 01
  31+ 88E6 02 03        	db 2,3
  32+ 88E8 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88E9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88ED 01
  34+ 88EE 05 01 01 01  	db 5,1,1,1,1
  34+ 88F2 01
  35+ 88F3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F7 01
  36+ 88F8 05 01 01 01  	db 5,1,1,1,1
  36+ 88FC 01
  37+ 88FD
  38+ 88FD              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FD              ;
  40+ 88FD              ;   21/5/23
  41+ 88FD              ;
  42+ 88FD              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FD              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FD              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FD              ;	_en la caja DRAW correspondiente.
  46+ 88FD              ;
  47+ 88FD              ;	MODIFICA: HL,DE y A.
  48+ 88FD              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FD
  50+ 88FD              Inicializa_Punteros_de_nivel
  51+ 88FD
  52+ 88FD 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8900 22 49 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8903 CD 89 8D     	call Extrae_address
  55+ 8906 7E           	ld a,(hl)
  56+ 8907 32 FF 89     	ld (Numero_de_entidades),a
  57+ 890A 23           	inc hl
  58+ 890B 22 4B 8A     	ld (Datos_de_nivel),hl
  59+ 890E C9           	ret
  60+ 890F
  61+ 890F              ;---------------------------------------------------------------------------------------------------------------
  62+ 890F              ;
  63+ 890F              ;   13/5/23
  64+ 890F              ;
  65+ 890F              ;	Destruye A,BC,HL,DE
  66+ 890F
  67+ 890F              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 890F              ;	_del juego.
  69+ 890F
  70+ 890F              Prepara_cajas
  71+ 890F
  72+ 890F              ; Preparamos los punteros de las cajas.
  73+ 890F
  74+ 890F 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8912 CD 89 8D     	call Extrae_address
  76+ 8915 CD 52 89     	call Avanza_caja
  77+ 8918
  78+ 8918 CD 96 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891B
  80+ 891B 2A 4B 8A     	ld hl,(Datos_de_nivel)
  81+ 891E
  82+ 891E              ; HL está en los datos del nivel correspondiente.
  83+ 891E              ; B actuará como contador de cajas.
  84+ 891E
  85+ 891E C5           1 push bc
  86+ 891F
  87+ 891F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8920 CD 43 89     	call PreparaBC
  89+ 8923
  90+ 8923 21 85 88     	ld hl,Indice_de_entidades
  91+ 8926 CD 4B 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8929 22 05 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892C
  94+ 892C CD 5C 89     	call Datos_de_entidad_a_caja
  95+ 892F
  96+ 892F 2A FD 89     	ld hl,(Indice_restore_caja)
  97+ 8932 CD 89 8D     	call Extrae_address
  98+ 8935 CD 52 89     	call Avanza_caja
  99+ 8938
 100+ 8938 2A 4B 8A     	ld hl,(Datos_de_nivel)
 101+ 893B 23           	inc hl
 102+ 893C 22 4B 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 893F
 104+ 893F C1           	pop bc
 105+ 8940 10 DC        	djnz 1B
 106+ 8942 C9           	ret
 107+ 8943
 108+ 8943 CB 27        PreparaBC sla a
 109+ 8945 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8947 4F           	ld c,a
 111+ 8948 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894A C9           	ret
 113+ 894B
 114+ 894B A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894C ED 4A        	adc hl,bc
 116+ 894E CD 89 8D     	call Extrae_address
 117+ 8951 C9           	ret
 118+ 8952
 119+ 8952 22 F9 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8955 13           	inc de
 121+ 8956 13           	inc de
 122+ 8957 EB           	ex de,hl
 123+ 8958 22 FD 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895B C9           	ret
 125+ 895C
 126+ 895C              Datos_de_entidad_a_caja
 127+ 895C
 128+ 895C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895C
 130+ 895C
 131+ 895C ED 5B F9 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8960
 133+ 8960 01 02 00     	ld bc,2
 134+ 8963 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8965
 136+ 8965 01 07 00     	ld bc,7
 137+ 8968 CD 90 89     	call Situa_DE
 138+ 896B
 139+ 896B 01 05 00     	ld bc,5
 140+ 896E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8970
 142+ 8970 01 04 00     	ld bc,4
 143+ 8973 CD 90 89     	call Situa_DE
 144+ 8976
 145+ 8976 01 07 00     	ld bc,7
 146+ 8979 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897B
 148+ 897B 01 18 00     	ld bc,24
 149+ 897E CD 90 89     	call Situa_DE
 150+ 8981
 151+ 8981 01 02 00     	ld bc,2
 152+ 8984 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8986
 154+ 8986              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8986              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8986
 157+ 8986 01 0F 00     	ld bc,15									; *****
 158+ 8989 CD 90 89     	call Situa_DE
 159+ 898C
 160+ 898C 3E 03        	ld a,3
 161+ 898E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 898F
 163+ 898F C9           	ret
 164+ 8990
 165+ 8990 EB           Situa_DE ex de,hl
 166+ 8991 A7           	and a
 167+ 8992 ED 4A        	adc hl,bc
 168+ 8994 EB           	ex de,hl
 169+ 8995 C9           	ret
 170+ 8996
 171+ 8996              ;---------------------------------------------------------------------------------------------------------------
 172+ 8996              ;
 173+ 8996              ;	21/5/23
 174+ 8996              ;
 175+ 8996              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8996              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8996              ;
 178+ 8996              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8996              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8996              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8996              ;
 182+ 8996              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8996              ;	MODIFICA: A y B.
 184+ 8996              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8996
 186+ 8996              Admin_num_entidades
 187+ 8996
 188+ 8996              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8996
 190+ 8996 3A FF 89     	ld a,(Numero_de_entidades)
 191+ 8999 A7           	and a
 192+ 899A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899A              ;	jr z,$
 194+ 899A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899A
 196+ 899A 20 03        	jr nz,3F
 197+ 899C
 198+ 899C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899C
 200+ 899C CD FD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 899F
 202+ 899F
 203+ 899F 3A FF 89     3 ld a,(Numero_de_entidades)
 204+ 89A2 FE 0A        	cp 10
 205+ 89A4 38 08        	jr c,1F
 206+ 89A6
 207+ 89A6              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89A6              ; Actualizamos variables.
 209+ 89A6
 210+ 89A6 3E 0A        	ld a,10
 211+ 89A8 32 00 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89AB 47           	ld b,a
 213+ 89AC 18 04        	jr 2F
 214+ 89AE
 215+ 89AE              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89AE              ; (Numero_de_entidades)="0".
 217+ 89AE
 218+ 89AE 32 00 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89B1 47           	ld b,a
 220+ 89B2 C9           2 ret
# file closed: Niveles.asm
  27  89B3
  28  89B3              ; ******************************************************************************************************************************************************************************************
  29  89B3              ; Constantes.
  30  89B3              ; ******************************************************************************************************************************************************************************************
  31  89B3              ;
  32  89B3              ; 25/05/23
  33  89B3              ;
  34  89B3              ; Constantes generales.
  35  89B3              ;
  36  89B3
  37  89B3              Sprite_vacio equ $f000
  38  89B3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  39  89B3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  40  89B3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  41  89B3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  42  89B3
  43  89B3              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  44  89B3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  45  89B3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  46  89B3              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  47  89B3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  48  89B3              ;                               				        ; De momento situamos este almacén en $7060.
  49  89B3              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  50  89B3              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  51  89B3              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  52  89B3              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  53  89B3              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  54  89B3              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  55  89B3
  56  89B3              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  57  89B3
  58  89B3              ; ******************************************************************************************************************************************************************************************
  59  89B3              ; Variables.
  60  89B3              ; ******************************************************************************************************************************************************************************************
  61  89B3              ;
  62  89B3              ; 28/07/23
  63  89B3              ;
  64  89B3              ; Variables de DRAW. (Motor principal).
  65  89B3              ;
  66  89B3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  67  89B3
  68  89B3 00           Filas db 0												; Filas. [DRAW]
  69  89B4 00           Columns db 0  											; Nº de columnas. [DRAW]
  70  89B5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  71  89B7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  72  89B9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  73  89BA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  74  89BB
  75  89BB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  76  89BB
  77  89BB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  78  89BC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  79  89BC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  80  89BC 00           Attr db 0												; Atributos de la entidad:
  81  89BD
  82  89BD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  83  89BD              ;
  84  89BD              ;	COLORES: 0 ..... NEGRO
  85  89BD              ;    		 1 ..... AZUL
  86  89BD              ; 			 2 ..... ROJO
  87  89BD              ;			 3 ..... MAGENTA
  88  89BD              ; 			 4 ..... VERDE
  89  89BD              ; 			 5 ..... CIAN
  90  89BD              ;			 6 ..... AMARILLO
  91  89BD              ; 			 7 ..... BLANCO
  92  89BD
  93  89BD 00 00        Indice_Sprite_der defw 0
  94  89BF 00 00        Indice_Sprite_izq defw 0
  95  89C1 00 00        Puntero_DESPLZ_der defw 0
  96  89C3 00 00        Puntero_DESPLZ_izq defw 0
  97  89C5
  98  89C5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  99  89C7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 100  89C8
 101  89C8              ; Variables de objeto. (Características).
 102  89C8
 103  89C8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 104  89C9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 105  89CA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 106  89CB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 107  89CC
 108  89CC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 109  89CD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 110  89CD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 111  89CD
 112  89CD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 113  89CF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89D1 00 00        	defw 0
 115  89D3 00 00 00 00  	db 0,0,0,0
 116  89D7
 117  89D7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 118  89D9 00 00        	defw 0
 119  89DB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 120  89DD 00 00 00 00  	db 0,0,0,0
 121  89E1
 122  89E1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 123  89E1
 124  89E1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 125  89E2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 126  89E2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 127  89E2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 128  89E2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 129  89E2              ;
 130  89E2              ; 														DESCRIPCIÖN:
 131  89E2              ;
 132  89E2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 133  89E2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 134  89E2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 135  89E2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 136  89E2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 137  89E2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 138  89E2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 139  89E2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 140  89E2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 141  89E2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 142  89E2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 143  89E2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 144  89E2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 145  89E2              ;
 146  89E2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 147  89E2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 148  89E2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 149  89E2
 150  89E2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 151  89E3
 152  89E3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 153  89E3
 154  89E3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 155  89E4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 156  89E6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 157  89E8 00 00        Puntero_indice_mov_bucle defw 0							;
 158  89EA              ;
 159  89EA              ;
 160  89EA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 161  89EB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 162  89EB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 163  89EB 00           Incrementa_puntero_backup db 0
 164  89EC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 165  89ED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 166  89ED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 167  89EE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 168  89EF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 169  89F0              ;
 170  89F0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 171  89F0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 172  89F0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 173  89F0              ;
 174  89F0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 175  89F0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 176  89F0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 177  89F0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 178  89F0              ;
 179  89F0              ;														;	"$ff" ..... Bucle infinito de repetición.
 180  89F0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 181  89F0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 182  89F0
 183  89F0
 184  89F0              ; Variables de funcionamiento. [DRAW].
 185  89F0
 186  89F0 00           Columnas db 0
 187  89F1 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 188  89F3              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 189  89F3 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 190  89F4
 191  89F4              ; variables de control general.
 192  89F4
 193  89F4 00           Ctrl_2 db 0
 194  89F5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 195  89F5              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 196  89F5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 197  89F5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 198  89F5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 199  89F5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 200  89F5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 201  89F5              ;
 202  89F5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 203  89F5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 204  89F5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 205  89F5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 206  89F5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 207  89F5
 208  89F5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 209  89F6
 210  89F6              ;! 67 Bytes por entidad.
 211  89F6
 212  89F6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 213  89F6              ;					         		---------;      ;---------
 214  89F6
 215  89F6
 216  89F6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 217  89F6
 218  89F6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 219  89F7
 220  89F7              ;														DESCRIPCIÓN:
 221  89F7              ;
 222  89F7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 223  89F7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 224  89F7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 225  89F7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 226  89F7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 227  89F7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 228  89F7
 229  89F7              ;														BIT 3, Recarga de nueva oleada.
 230  89F7              ;														BIT 4, Recarga de nueva oleada.
 231  89F7
 232  89F7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 233  89F9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 234  89F9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 235  89F9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 236  89F9
 237  89F9
 238  89F9
 239  89F9              ; Gestión de ENTIDADES y CAJAS.
 240  89F9
 241  89F9 00 00        Puntero_store_caja defw 0
 242  89FB 00 00        Puntero_restore_caja defw 0
 243  89FD 00 00        Indice_restore_caja defw 0
 244  89FF 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 245  8A00 00           Numero_parcial_de_entidades db 0
 246  8A01 00           Entidades_en_curso db 0									; ..... ..... .....
 247  8A02 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 248  8A03              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 249  8A03              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 250  8A03              ;														; _ (Numero_de_malotes)="0".
 251  8A03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 252  8A05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 253  8A07              ;														; _ puntero (Indice_entidades).
 254  8A07
 255  8A07
 256  8A07              ;---------------------------------------------------------------------------------------------------------------
 257  8A07              ;
 258  8A07              ;	9/8/23
 259  8A07              ;
 260  8A07              ;	Álbumes.
 261  8A07
 262  8A07 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 263  8A09              ;															; _variable para almacenar lo posición del puntero_
 264  8A09              ; 															; _de pila, SP.
 265  8A09 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 266  8A0B              ;															; La utiliza la rutina [Extrae_foto_registros].
 267  8A0B 00 00        Stack_snapshot defw 0
 268  8A0D 00 00        Stack_snapshot_disparos defw 0
 269  8A0F
 270  8A0F 00 00        End_Snapshot defw 0
 271  8A11              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 272  8A11 00 00        End_Snapshot_disparos defw 0								; Puntero que indica la posición de memoria donde vamos a guardar_
 273  8A13              ;															; _el snapshot de los registros del siguiente disparo.
 274  8A13              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 275  8A13 00 00        End_Snapshot_1 defw 0
 276  8A15 00 00        End_Snapshot_disparos_1 defw 0
 277  8A17 00 00        End_Snapshot_2 defw 0
 278  8A19 00 00        End_Snapshot_disparos_2 defw 0
 279  8A1B 00 00        End_Snapshot_3 defw 0
 280  8A1D 00 00        End_Snapshot_disparos_3 defw 0
 281  8A1F
 282  8A1F 00 00        Puntero_indice_album_de_fotos defw 0
 283  8A21 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 284  8A23
 285  8A23 00 00        Puntero_indice_End_Snapshot defw 0
 286  8A25 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 287  8A27 00 00        Puntero_de_End_Snapshot defw 0
 288  8A29 00 00        Puntero_de_End_Snapshot_disparos defw 0
 289  8A2B
 290  8A2B              ;---------------------------------------------------------------------------------------------------------------
 291  8A2B
 292  8A2B              ; Gestión de Disparos.
 293  8A2B
 294  8A2B 00           Numero_de_disparotes db 0
 295  8A2C 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 296  8A2E 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 297  8A30 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 298  8A31              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 299  8A31              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 300  8A31 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 301  8A33              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 302  8A33              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 303  8A33              ;														; _produzca colisión.
 304  8A33 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 305  8A35              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 306  8A35 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A38              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 308  8A38 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 309  8A3B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 310  8A3B 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 311  8A3D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 312  8A3E
 313  8A3E              ;---------------------------------------------------------------------------------------------------------------
 314  8A3E
 315  8A3E              ; Relojes y temporizaciones.
 316  8A3E
 317  8A3E 00           Contador_de_frames db 0
 318  8A3F 04           Clock_explosion db 4
 319  8A40 1E           Clock_Entidades_en_curso db 30
 320  8A41 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  8A42              ;														; Repite la oleada de entidades.
 322  8A42 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  8A43 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  8A44 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  8A45
 326  8A45 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  8A46 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8A47 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8A48
 330  8A48              ;---------------------------------------------------------------------------------------------------------------
 331  8A48
 332  8A48              ; Gestión de NIVELES.
 333  8A48
 334  8A48 00           Nivel db 0												; Nivel actual del juego.
 335  8A49 00 00        Puntero_indice_NIVELES defw 0
 336  8A4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8A4D              ; 														; _ que definen el NIVEL.
 338  8A4D              ; Y todo comienza aquí .....
 339  8A4D              ;
 340  8A4D              ; Rutina principal *************************************************************************************************************************************************************************
 341  8A4D              ;
 342  8A4D              ;	14/11/22
 343  8A4D
 344  8A4D              START
 345  8A4D
 346  8A4D 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 347  8A50 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 348  8A52 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 349  8A54 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 350  8A56 F3           	DI
 351  8A57
 352  8A57 3E 07        	ld a,%00000111
 353  8A59 CD 97 99     	call Cls
 354  8A5C
 355  8A5C CD 62 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 356  8A5F
 357  8A5F              ; INICIALIZACIÓN.
 358  8A5F
 359  8A5F CD FD 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 360  8A62
 361  8A62 CD 0F 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 362  8A65
 363  8A65 CD DA 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 364  8A68              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 365  8A68 CD F0 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 366  8A6B              ;													     ; _ malotes antes de guardar ninguna foto.
 367  8A6B              ; ----------
 368  8A6B
 369  8A6B CD 12 8E     	call Restore_entidad
 370  8A6E
 371  8A6E 21 00 8A     	ld hl,Numero_parcial_de_entidades
 372  8A71 46           	ld b,(hl)
 373  8A72 04           	inc b
 374  8A73 05           	dec b
 375  8A74 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 376  8A76
 377  8A76              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 378  8A76              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 379  8A76              ;	Pintamos el resto de entidades:
 380  8A76
 381  8A76              ;	INICIA ENTIDADES !!!!!
 382  8A76
 383  8A76 C5           1 push bc  												; Guardo el contador de entidades.
 384  8A77
 385  8A77 CD 81 8C     	call Inicia_entidad
 386  8A7A
 387  8A7A C1           	pop bc
 388  8A7B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 389  8A7D
 390  8A7D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  8A7D              ; (Esto se dá cuando se inicia una nueva oleada).
 392  8A7D
 393  8A7D 3A F6 89     	ld a,(Ctrl_1)
 394  8A80 CB 5F        	bit 3,a
 395  8A82 20 18        	jr nz,5F											; Loop
 396  8A84
 397  8A84              ; 	INICIA AMADEUS !!!!!
 398  8A84
 399  8A84 CD 39 8E     3 call Restore_Amadeus
 400  8A87 CD 8F 8D     	call Inicia_Puntero_objeto
 401  8A8A CD CA 93     	call Draw
 402  8A8D CD A0 7F     	call Guarda_foto_registros
 403  8A90 11 A4 85     	ld de,Amadeus_db
 404  8A93 CD 4B 8E     	call Store_Amadeus
 405  8A96
 406  8A96              ; 	INICIA DISPAROS !!!!!
 407  8A96
 408  8A96 CD 4B 8D     	call Inicia_Puntero_Disparo_Entidades
 409  8A99 CD 52 8D     	call Inicia_Puntero_Disparo_Amadeus
 410  8A9C
 411  8A9C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 412  8A9C
 413  8A9C CD DA 8C     5 call Inicia_punteros_de_cajas
 414  8A9F CD 12 8E     	call Restore_entidad
 415  8AA2
 416  8AA2 3A F6 89     	ld a,(Ctrl_1)
 417  8AA5 CB 5F        	bit 3,a
 418  8AA7 28 0A        	jr z,6F
 419  8AA9
 420  8AA9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 421  8AA9
 422  8AA9 21 F6 89     	ld hl,Ctrl_1
 423  8AAC CB 9E        	res 3,(hl)
 424  8AAE CD 59 8D     	call Calcula_numero_de_malotes
 425  8AB1 18 0A        	jr Main
 426  8AB3
 427  8AB3              ; ----------
 428  8AB3
 429  8AB3 3A 00 8A     6 ld a,(Numero_parcial_de_entidades)
 430  8AB6 3C           	inc a
 431  8AB7 32 02 8A     	ld (Numero_de_malotes),a
 432  8ABA
 433  8ABA              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  8ABA              ; _ tenemos calculado (Numero_de_malotes).
 435  8ABA              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  8ABA              ; _ para situarnos en el siguiente album.
 437  8ABA
 438  8ABA CD 21 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  8ABD
 440  8ABD              ; ------------------------------------
 441  8ABD
 442  8ABD              Main
 443  8ABD
 444  8ABD FB           	ei ; Interrupciones habilitadas.
 445  8ABE
 446  8ABE              ; -----------------------------------------------------------------------
 447  8ABE              ;
 448  8ABE              ;	3/8/23
 449  8ABE
 450  8ABE 3A 40 8A     	ld a,(Clock_Entidades_en_curso)
 451  8AC1 47           	ld b,a
 452  8AC2 3A 3E 8A     	ld a,(Contador_de_frames)
 453  8AC5 B8           	cp b
 454  8AC6 20 18        	jr nz,13F
 455  8AC8              ;
 456  8AC8              ;!debuggg
 457  8AC8              ;    ld a,(Contador_de_frames)
 458  8AC8              ;    ld hl,(Stack_snapshot)
 459  8AC8              ;    jr $
 460  8AC8              ;!debuggg
 461  8AC8
 462  8AC8 3A 00 8A     	ld a,(Numero_parcial_de_entidades)
 463  8ACB 47           	ld b,a
 464  8ACC 3A 01 8A     	ld a,(Entidades_en_curso)
 465  8ACF B8           	cp b
 466  8AD0 28 0E        	jr z,13F
 467  8AD2 30 0C        	jr nc,13F
 468  8AD4
 469  8AD4 3C           	inc a
 470  8AD5 32 01 8A     	ld (Entidades_en_curso),a
 471  8AD8
 472  8AD8 3A 40 8A     	ld a,(Clock_Entidades_en_curso)
 473  8ADB
 474  8ADB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 475  8ADB              ;! _ IMPREDECIBLE !!!!
 476  8ADB
 477  8ADB C6 64        	add 100
 478  8ADD 32 40 8A     	ld (Clock_Entidades_en_curso),a
 479  8AE0
 480  8AE0              ; Habilita disparos.
 481  8AE0
 482  8AE0 21 42 8A     13 ld hl,Disparo_Amadeus
 483  8AE3 11 44 8A     	ld de,CLOCK_repone_disparo_Amadeus
 484  8AE6 CD 5C A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 485  8AE9
 486  8AE9 21 45 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 487  8AEC 11 47 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 488  8AEF CD 5C A0     	call Habilita_disparos
 489  8AF2
 490  8AF2              ; COLISIONES.
 491  8AF2
 492  8AF2 CD AC 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 493  8AF5
 494  8AF5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 495  8AF5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 496  8AF5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 497  8AF5
 498  8AF5 AF           	xor a
 499  8AF6 32 30 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 500  8AF9
 501  8AF9 CD DA 8C     	call Inicia_punteros_de_cajas
 502  8AFC CD 12 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 503  8AFF              ; 														; _ en DRAW.
 504  8AFF 3A B3 89     	ld a,(Filas)
 505  8B02 A7           	and a
 506  8B03 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 507  8B05 CD 24 8E     	call Incrementa_punteros_de_cajas
 508  8B08 18 F2        	jr 12B
 509  8B0A
 510  8B0A              ; ---------------------------------------------------------------------------------------
 511  8B0A
 512  8B0A 3A 00 8A     10 ld a,(Numero_parcial_de_entidades)
 513  8B0D 47               ld b,a
 514  8B0E A7           	and a
 515  8B0F 20 14        	jr nz,11F
 516  8B11
 517  8B11 21 F6 89     	ld hl,Ctrl_1
 518  8B14 CB 66        	bit 4,(hl)
 519  8B16 C2 A2 8B     	jp nz,16F
 520  8B19
 521  8B19 21 F6 89     	ld hl,Ctrl_1
 522  8B1C CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 523  8B1E
 524  8B1E 3A 3E 8A     	ld a,(Contador_de_frames)
 525  8B21 3C           	inc a
 526  8B22 32 41 8A     	ld (Activa_recarga_cajas),a
 527  8B25
 528  8B25              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 529  8B25
 530  8B25 3A 01 8A     11 ld a,(Entidades_en_curso)
 531  8B28 A7           	and a
 532  8B29 CA A2 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 533  8B2C 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 534  8B2D
 535  8B2D              ; Código que ejecutamos con cada entidad:
 536  8B2D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 537  8B2D
 538  8B2D C5           15 push bc 												; Nº de entidades en curso.
 539  8B2E
 540  8B2E              ; Impacto ???
 541  8B2E
 542  8B2E 3A CC 89     	ld a,(Impacto)
 543  8B31 A7           	and a
 544  8B32 28 2D        	jr z,8F
 545  8B34
 546  8B34              ; Hay Impacto en esta entidad.
 547  8B34
 548  8B34 21 3F 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 549  8B37 35           	dec (hl)
 550  8B38 20 62        	jr nz,17F
 551  8B3A
 552  8B3A              ;! Velocidad de la animación de la explosión.
 553  8B3A
 554  8B3A 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 555  8B3C              ;														; _,(velocidad de la explosión).
 556  8B3C CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 557  8B3F
 558  8B3F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 559  8B3F
 560  8B3F 3A F4 89     	ld a,(Ctrl_2)
 561  8B42 CB 4F        	bit 1,a
 562  8B44 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 563  8B46
 564  8B46              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 565  8B46
 566  8B46 3A BB 89     	ld a,(CTRL_DESPLZ)
 567  8B49 A7           	and a
 568  8B4A 20 08        	jr nz,18F
 569  8B4C
 570  8B4C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 571  8B4F 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 572  8B52 18 06        	jr 19F
 573  8B54
 574  8B54 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 575  8B57 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 576  8B5A
 577  8B5A 21 F4 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 578  8B5D CB CE        	set 1,(hl)
 579  8B5F 18 22        	jr 7F
 580  8B61
 581  8B61              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 582  8B61              ; _con las coordenadas de la entidad almacenada en DRAW.
 583  8B61
 584  8B61 3A F6 89     8 ld a,(Ctrl_1)
 585  8B64 CB 57        	bit 2,a
 586  8B66 28 1B        	jr z,7F
 587  8B68
 588  8B68 2A 33 8A     	ld hl,(Coordenadas_disparo_certero)
 589  8B6B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 590  8B6C              ;														; E contiene la coordenada_X del disparo.
 591  8B6C 2A B9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 592  8B6F              ;														; H FILA, (Coordenada_y de la entidad).
 593  8B6F A7           	and a
 594  8B70 ED 52        	sbc hl,de
 595  8B72
 596  8B72 CD E3 92     	call Determina_resultado_comparativa
 597  8B75
 598  8B75 78           	ld a,b
 599  8B76 A7           	and a
 600  8B77 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 601  8B79
 602  8B79              ; ----- ----- -----
 603  8B79
 604  8B79 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 605  8B7B 32 CC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 606  8B7E
 607  8B7E 21 F6 89     	ld hl,Ctrl_1
 608  8B81 CB 96        	res 2,(hl)
 609  8B83
 610  8B83 CD 03 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 611  8B86
 612  8B86 3A E1 89     	ld a,(Ctrl_0)
 613  8B89 CB 67        	bit 4,a
 614  8B8B 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 615  8B8D
 616  8B8D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 617  8B8D              ; [[[
 618  8B8D CD AD 8E     	call Detecta_disparo_entidad
 619  8B90              ; ]]]
 620  8B90 CD A1 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 621  8B93
 622  8B93 21 E1 89     	ld hl,Ctrl_0
 623  8B96 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 624  8B98 AF           	xor a
 625  8B99 32 E2 89     	ld (Obj_dibujado),a
 626  8B9C
 627  8B9C CD D7 8D     17 call Store_Restore_cajas
 628  8B9F
 629  8B9F C1           	pop bc
 630  8BA0 10 8B        	djnz 15B
 631  8BA2
 632  8BA2              ; ------------------------------------
 633  8BA2
 634  8BA2              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 635  8BA2              ; Hemos gestionado todas las unidades.
 636  8BA2              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 637  8BA2
 638  8BA2              ;	ld hl,Ctrl_1
 639  8BA2              ;	res 2,(hl)
 640  8BA2
 641  8BA2              ; ------------------------------------
 642  8BA2
 643  8BA2              ; Tras la gestión de las entidades, ... AMADEUS.
 644  8BA2
 645  8BA2 CD 39 8E     16 call Restore_Amadeus
 646  8BA5
 647  8BA5 3A CC 89     	ld a,(Impacto)
 648  8BA8 A7           	and a
 649  8BA9 20 FE        	jr nz,$
 650  8BAB
 651  8BAB CD 62 8C     	call Mov_Amadeus
 652  8BAE
 653  8BAE 3A E1 89     	ld a,(Ctrl_0)
 654  8BB1 CB 67        	bit 4,a
 655  8BB3 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 656  8BB5
 657  8BB5 CD A1 8C     	call Guarda_foto_entidad_a_pintar
 658  8BB8
 659  8BB8 21 E1 89     14 ld hl,Ctrl_0
 660  8BBB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 661  8BBD AF           	xor a
 662  8BBE 32 E2 89     	ld (Obj_dibujado),a
 663  8BC1
 664  8BC1 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 665  8BC4 CD 4B 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 666  8BC7
 667  8BC7 CD 40 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 668  8BCA
 669  8BCA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 670  8BCA
 671  8BCA CD 71 8D     	call Calcula_numero_de_disparotes
 672  8BCD CD 59 8D     9 call Calcula_numero_de_malotes
 673  8BD0
 674  8BD0 CD 21 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 675  8BD3
 676  8BD3 3E 04        	ld a,4
 677  8BD5 D3 FE        	out ($fe),a
 678  8BD7
 679  8BD7              ; ----------------------------------------
 680  8BD7
 681  8BD7 3A F6 89     	ld a,(Ctrl_1) 										; Existe Loop?
 682  8BDA CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 683  8BDC CA BD 8A     	jp z,Main
 684  8BDF
 685  8BDF              ; -----
 686  8BDF              ;	(((
 687  8BDF
 688  8BDF 3A 3E 8A     	ld a,(Contador_de_frames)
 689  8BE2 47           	ld b,a
 690  8BE3 3A 41 8A     	ld a,(Activa_recarga_cajas)
 691  8BE6 B8           	cp b
 692  8BE7 28 08        	jr z,20F
 693  8BE9
 694  8BE9 21 F6 89     	ld hl,Ctrl_1
 695  8BEC CB E6        	set 4,(hl)
 696  8BEE C3 BD 8A     	jp Main
 697  8BF1
 698  8BF1 21 F6 89     20 ld hl,Ctrl_1
 699  8BF4 CB A6        	res 4,(hl)
 700  8BF6 F3           	di
 701  8BF7
 702  8BF7 3A 3E 8A     	ld a,(Contador_de_frames)
 703  8BFA
 704  8BFA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 705  8BFA              ;! _ IMPREDECIBLE !!!!
 706  8BFA
 707  8BFA C6 0A        	add 10
 708  8BFC 32 40 8A     	ld (Clock_Entidades_en_curso),a
 709  8BFF
 710  8BFF C3 62 8A     	jp 4B
 711  8C02
 712  8C02 C9           	ret
 713  8C03
 714  8C03              ; --------------------------------------------------------------------------------------------------------------
 715  8C03              ;
 716  8C03              ;	27/05/23
 717  8C03
 718  8C03              Mov_obj
 719  8C03
 720  8C03              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 721  8C03
 722  8C03 3A F4 89     	ld a,(Ctrl_2)
 723  8C06 CB 4F        	bit 1,a
 724  8C08 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 725  8C0A
 726  8C0A              ; Explosión:
 727  8C0A
 728  8C0A 3A F5 89     	ld a,(Frames_explosion)
 729  8C0D A7           	and a
 730  8C0E 20 11        	jr nz,4F
 731  8C10
 732  8C10              ; Una alimaña menos!!!!!!!!!1
 733  8C10
 734  8C10 CD 54 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 735  8C13 21 00 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 736  8C16 35           	dec (hl)
 737  8C17 21 01 8A     	ld hl,Entidades_en_curso
 738  8C1A 35           	dec (hl)
 739  8C1B 21 FF 89     	ld hl,Numero_de_entidades
 740  8C1E 35           	dec (hl)
 741  8C1F 18 40        	jr 3F
 742  8C21
 743  8C21              ; -----
 744  8C21
 745  8C21              ;	`Movemos´ la explosión.
 746  8C21
 747  8C21 2A C1 89     4 ld hl,(Puntero_DESPLZ_der)
 748  8C24 23           	inc hl
 749  8C25 23           	inc hl
 750  8C26 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 751  8C29 CD 89 8D     	call Extrae_address
 752  8C2C 22 B7 89     	ld (Puntero_objeto),hl
 753  8C2F
 754  8C2F 21 F5 89     	ld hl,Frames_explosion
 755  8C32 35           	dec (hl)
 756  8C33
 757  8C33 CD 91 8C     	call Guarda_foto_entidad_a_borrar
 758  8C36 18 29        	jr 3F
 759  8C38
 760  8C38 AF           2 xor a
 761  8C39 32 E2 89     	ld (Obj_dibujado),a
 762  8C3C 32 E1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 763  8C3F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 764  8C3F              ; 														; _de la entidad.
 765  8C3F CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 766  8C42              ;														; Obj_dibujado="0".
 767  8C42              ; Movemos Entidades malignas.
 768  8C42
 769  8C42              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 770  8C42              ;	and a 												; _a movernos. (Limitador_de_entidades).
 771  8C42              ;	ret z
 772  8C42
 773  8C42 CD F7 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 774  8C45
 775  8C45 3A E1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 776  8C48 CB 67        	bit 4,a
 777  8C4A C8           	ret z
 778  8C4B
 779  8C4B              ; Ha habido desplazamiento de la entidad maligna.
 780  8C4B              ; Ha llegado a zona de AMADEUS ???
 781  8C4B
 782  8C4B 3A BA 89     	ld a,(Coordenada_y)
 783  8C4E FE 14        	cp $14
 784  8C50 D4 71 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 785  8C53              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 786  8C53              ; ---------
 787  8C53
 788  8C53 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 789  8C55 32 E2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 790  8C58 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 791  8C5B CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 792  8C5E CD 91 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 793  8C61 C9           3 ret													; _de la misma.
 794  8C62
 795  8C62              ; --------------------------------------------------------------------------------------------------------------
 796  8C62              ;
 797  8C62              ;	29/1/23
 798  8C62
 799  8C62              Mov_Amadeus
 800  8C62
 801  8C62 AF           	xor a
 802  8C63 32 E2 89     	ld (Obj_dibujado),a
 803  8C66 CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 804  8C69              ;														; Obj_dibujado="0".
 805  8C69              ; Movemos Amadeus.
 806  8C69
 807  8C69 CD 76 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 808  8C6C 3A E1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 809  8C6F CB 67        	bit 4,a
 810  8C71 C8           	ret z
 811  8C72
 812  8C72              ; ---------
 813  8C72
 814  8C72 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 815  8C74 32 E2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 816  8C77 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 817  8C7A CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 818  8C7D CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 819  8C80 C9           	ret													; _de la nave.
 820  8C81
 821  8C81              ; -----------------------------------------------------------------------------------
 822  8C81
 823  8C81 CD 8F 8D     Inicia_entidad	call Inicia_Puntero_objeto
 824  8C84 CD AB 99     	call Recompone_posicion_inicio
 825  8C87 CD CA 93     	call Draw
 826  8C8A CD A0 7F     	call Guarda_foto_registros
 827  8C8D CD D7 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 828  8C90 C9           	ret
 829  8C91
 830  8C91              ; --------------------------------------------------------------------------------------------------------------
 831  8C91              ;
 832  8C91              ;	31/01/23
 833  8C91              ;
 834  8C91              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 835  8C91
 836  8C91              Guarda_foto_entidad_a_borrar
 837  8C91
 838  8C91 CD AE 96     	call Prepara_draw
 839  8C94 CD DE 95     	call calcula_CColumnass
 840  8C97 CD 15 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 841  8C9A CD 74 96     	call Define_rutina_de_impresion
 842  8C9D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 843  8CA0 C9           	ret
 844  8CA1
 845  8CA1              ; --------------------------------------------------------------------------------------------------------------
 846  8CA1              ;
 847  8CA1              ;	31/01/23
 848  8CA1              ;
 849  8CA1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 850  8CA1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 851  8CA1
 852  8CA1              Guarda_foto_entidad_a_pintar
 853  8CA1
 854  8CA1 CD CE 8C     	call Repone_pintar
 855  8CA4 CD CA 93     	call Draw
 856  8CA7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 857  8CAA C9           	ret
 858  8CAB
 859  8CAB              ; --------------------------------------------------------------------------------------------------------------
 860  8CAB              ;
 861  8CAB              ;
 862  8CAB
 863  8CAB 21 B3 89     Prepara_var_pintado_borrado	ld hl,Filas
 864  8CAE 3A E2 89     	ld a,(Obj_dibujado)
 865  8CB1 A7           	and a
 866  8CB2 28 05        	jr z,1F
 867  8CB4 11 D7 89     	ld de,Variables_de_pintado
 868  8CB7 18 03        	jr 2F
 869  8CB9 11 CD 89     1 ld de,Variables_de_borrado
 870  8CBC 01 08 00     2 ld bc,8
 871  8CBF ED B0        	ldir
 872  8CC1 C9           	ret
 873  8CC2
 874  8CC2              ; --------------------------------------------------------------------------------------------------------------
 875  8CC2
 876  8CC2 21 CD 89     Repone_borrar ld hl,Variables_de_borrado
 877  8CC5 11 B3 89     	ld de,Filas
 878  8CC8 01 08 00     	ld bc,8
 879  8CCB ED B0        	ldir
 880  8CCD C9           	ret
 881  8CCE
 882  8CCE 21 D7 89     Repone_pintar ld hl,Variables_de_pintado
 883  8CD1 11 B3 89     	ld de,Filas
 884  8CD4 01 08 00     	ld bc,8
 885  8CD7 ED B0        	ldir
 886  8CD9 C9           	ret
 887  8CDA
 888  8CDA              ; *************************************************************************************************************************************************************
 889  8CDA              ;
 890  8CDA              ; 8/1/23
 891  8CDA              ;
 892  8CDA              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 893  8CDA              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 894  8CDA              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 895  8CDA
 896  8CDA              ; Destruye HL y DE !!!!!
 897  8CDA
 898  8CDA              Inicia_punteros_de_cajas
 899  8CDA
 900  8CDA 21 8C 85     	ld hl,Indice_de_cajas
 901  8CDD CD 89 8D         call Extrae_address
 902  8CE0 22 F9 89         ld (Puntero_store_caja),hl
 903  8CE3 21 8E 85     	ld hl,Indice_de_cajas+2
 904  8CE6 22 FD 89     	ld (Indice_restore_caja),hl
 905  8CE9 CD 89 8D     	call Extrae_address
 906  8CEC 22 FB 89     	ld (Puntero_restore_caja),hl
 907  8CEF C9               ret
 908  8CF0
 909  8CF0              ; ---------------------------------------------------------------
 910  8CF0              ;
 911  8CF0              ;	9/8/23
 912  8CF0              ;
 913  8CF0              ;	Inicialización y gestión de álbumes de fotos y cajas.
 914  8CF0
 915  8CF0              Inicia_punteros_de_albumes_y_malotes
 916  8CF0
 917  8CF0 21 EC 84     	ld hl,Indice_album_de_fotos
 918  8CF3 22 1F 8A     	ld (Puntero_indice_album_de_fotos),hl
 919  8CF6 CD 89 8D     	call Extrae_address
 920  8CF9 22 0B 8A     	ld (Stack_snapshot),hl
 921  8CFC
 922  8CFC 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 923  8CFF 22 21 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 924  8D02 CD 89 8D     	call Extrae_address
 925  8D05 22 0D 8A     	ld (Stack_snapshot_disparos),hl
 926  8D08
 927  8D08 21 FC 84     	ld hl,Indice_End_Snapshot
 928  8D0B 22 23 8A     	ld (Puntero_indice_End_Snapshot),hl
 929  8D0E CD 89 8D     	call Extrae_address
 930  8D11 22 27 8A     	ld (Puntero_de_End_Snapshot),hl
 931  8D14
 932  8D14 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 933  8D17 22 25 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 934  8D1A CD 89 8D     	call Extrae_address
 935  8D1D 22 29 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 936  8D20
 937  8D20 C9           	ret
 938  8D21
 939  8D21              Avanza_puntero_de_album_de_fotos_y_malotes
 940  8D21
 941  8D21              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 942  8D21
 943  8D21              ; Estamos en el último álbum del índice???.
 944  8D21
 945  8D21 2A 1F 8A     	ld hl,(Puntero_indice_album_de_fotos)
 946  8D24 01 F2 84     	ld bc,Indice_album_de_fotos+6
 947  8D27 A7           	and a
 948  8D28 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 949  8D2A 20 02        	jr nz,1F								 		; El buffer está lleno. HALT.
 950  8D2C
 951  8D2C 76           	halt
 952  8D2D C9           	ret
 953  8D2E
 954  8D2E 2A 1F 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 955  8D31 23           	inc hl
 956  8D32 23           	inc hl
 957  8D33 22 1F 8A     	ld (Puntero_indice_album_de_fotos),hl
 958  8D36 CD 89 8D     	call Extrae_address
 959  8D39 22 0B 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 960  8D3C
 961  8D3C 2A 23 8A     	ld hl,(Puntero_indice_End_Snapshot)
 962  8D3F 23           	inc hl
 963  8D40 23           	inc hl
 964  8D41 22 23 8A     	ld (Puntero_indice_End_Snapshot),hl
 965  8D44 CD 89 8D     	call Extrae_address
 966  8D47 22 27 8A     	ld (Puntero_de_End_Snapshot),hl
 967  8D4A
 968  8D4A C9           	ret
 969  8D4B
 970  8D4B              ; *************************************************************************************************************************************************************
 971  8D4B              ;
 972  8D4B              ; 8/1/23
 973  8D4B              ;
 974  8D4B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 975  8D4B
 976  8D4B 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 977  8D4E 22 2C 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 978  8D51 C9           	ret
 979  8D52 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 980  8D55 22 2E 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 981  8D58 C9           	ret
 982  8D59
 983  8D59              ; -------------------------------------------------------------------------------------------------------------
 984  8D59              ;
 985  8D59              ; 3/8/23
 986  8D59              ;
 987  8D59
 988  8D59              Calcula_numero_de_malotes
 989  8D59
 990  8D59 21 00 70     	ld hl,Album_de_fotos
 991  8D5C EB           	ex de,hl
 992  8D5D 2A 0F 8A     	ld hl,(End_Snapshot)
 993  8D60
 994  8D60 06 00        	ld b,0
 995  8D62 7D           	ld a,l
 996  8D63 93           	sub e
 997  8D64 28 07        	jr z,1F
 998  8D66
 999  8D66              ; Nº de malotes no es "0".
1000  8D66
1001  8D66 D6 06        2 sub 6
1002  8D68 04           	inc b
1003  8D69 A7           	and a
1004  8D6A 20 FA        	jr nz,2B
1005  8D6C 78           	ld a,b
1006  8D6D
1007  8D6D 32 02 8A     1 ld (Numero_de_malotes),a
1008  8D70 C9           	ret
1009  8D71
1010  8D71              ; -------------------------------------------------------------------------------------------------------------
1011  8D71              ;
1012  8D71              ; 28/2/23
1013  8D71              ;
1014  8D71
1015  8D71              Calcula_numero_de_disparotes
1016  8D71
1017  8D71 21 0D 72     	ld hl,Album_de_fotos_disparos
1018  8D74 EB           	ex de,hl
1019  8D75 2A 29 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1020  8D78
1021  8D78 06 00        	ld b,0
1022  8D7A 7D           	ld a,l
1023  8D7B 93           	sub e
1024  8D7C 28 07        	jr z,1F
1025  8D7E
1026  8D7E              ; Nº de malotes no es "0".
1027  8D7E
1028  8D7E D6 06        2 sub 6
1029  8D80 04           	inc b
1030  8D81 A7           	and a
1031  8D82 20 FA        	jr nz,2B
1032  8D84 78           	ld a,b
1033  8D85
1034  8D85 32 2B 8A     1 ld (Numero_de_disparotes),a
1035  8D88 C9           	ret
1036  8D89
1037  8D89              ; *************************************************************************************************************************************************************
1038  8D89              ;
1039  8D89              ; 20/10/22
1040  8D89              ;
1041  8D89              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1042  8D89              ;
1043  8D89              ; Destruye el puntero y DE !!!!!
1044  8D89
1045  8D89 5E           Extrae_address ld e,(hl)
1046  8D8A 23           	inc hl
1047  8D8B 56           	ld d,(hl)
1048  8D8C 2B           	dec hl
1049  8D8D EB           	ex de,hl
1050  8D8E C9           	ret
1051  8D8F
1052  8D8F              ; *************************************************************************************************************************************************************
1053  8D8F              ;
1054  8D8F              ;	7/2/23
1055  8D8F              ;
1056  8D8F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1057  8D8F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1058  8D8F              ;
1059  8D8F              ;   Destruye HL y BC !!!!!,
1060  8D8F              ;
1061  8D8F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1062  8D8F              ;					"0" ..... Izquierda.
1063  8D8F
1064  8D8F              Inicia_Puntero_objeto
1065  8D8F
1066  8D8F 3A C7 89     	ld a,(Cuad_objeto)
1067  8D92 E6 01        	and 1
1068  8D94 F5           	push af
1069  8D95 CC B3 8D     	call z,Inicia_puntero_objeto_izq
1070  8D98 F1           	pop af
1071  8D99 28 2B        	jr z,1F
1072  8D9B CD A0 8D     	call Inicia_puntero_objeto_der
1073  8D9E 18 26        	jr 1F
1074  8DA0
1075  8DA0              ; Arrancamos desde la parte izquierda de la pantalla.
1076  8DA0              ; Iniciamos (Indice_Sprite_der).
1077  8DA0
1078  8DA0 2A BD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1079  8DA3 22 C1 89     	ld (Puntero_DESPLZ_der),hl
1080  8DA6 CD 89 8D     	call Extrae_address
1081  8DA9 22 B7 89     	ld (Puntero_objeto),hl
1082  8DAC
1083  8DAC 2A BF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1084  8DAF 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
1085  8DB2 C9           	ret
1086  8DB3
1087  8DB3              ; Arrancamos desde la parte derecha de la pantalla.
1088  8DB3              ; Iniciamos (Indice_Sprite_izq).
1089  8DB3
1090  8DB3 2A BF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1091  8DB6 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
1092  8DB9 CD 89 8D     	call Extrae_address
1093  8DBC 22 B7 89     	ld (Puntero_objeto),hl
1094  8DBF
1095  8DBF 2A BD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1096  8DC2 22 C1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1097  8DC5 C9           	ret
1098  8DC6
1099  8DC6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1100  8DC6
1101  8DC6 21 40 83     1 ld hl,Amadeus
1102  8DC9 ED 4B B7 89  	ld bc,(Puntero_objeto)
1103  8DCD B7 ED 42     	sub hl,bc
1104  8DD0 C0           	ret nz
1105  8DD1 21 E1 89     	ld hl,Ctrl_0
1106  8DD4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1107  8DD6 C9           	ret 												; _de nuestra nave en los extremos.
1108  8DD7
1109  8DD7              ; *************************************************************************************************************************************************************
1110  8DD7              ;
1111  8DD7              ;	14/5/23
1112  8DD7              ;
1113  8DD7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1114  8DD7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1115  8DD7
1116  8DD7              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1117  8DD7              ;	_de la 2ª y 3ª entidad respectivamente.
1118  8DD7
1119  8DD7              Store_Restore_cajas
1120  8DD7
1121  8DD7 E5           	push hl
1122  8DD8 D5           	push de
1123  8DD9 C5            	push bc
1124  8DDA
1125  8DDA              ;	STORE !!!!!
1126  8DDA              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1127  8DDA
1128  8DDA 21 B3 89     	ld hl,Filas
1129  8DDD ED 5B F9 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1130  8DE1 01 43 00     	ld bc,67
1131  8DE4 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1132  8DE6
1133  8DE6              ; 	Entidad_sospechosa. 20/4/23
1134  8DE6
1135  8DE6 3A CC 89     	ld a,(Impacto)
1136  8DE9 A7           	and a
1137  8DEA 28 0C        	jr z,1F
1138  8DEC
1139  8DEC 2A F9 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1140  8DEF 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1141  8DF2 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1142  8DF3 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1143  8DF5 22 31 8A     	ld (Entidad_sospechosa_de_colision),hl
1144  8DF8
1145  8DF8              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1146  8DF8
1147  8DF8 2A FB 89     1 ld hl,(Puntero_restore_caja)
1148  8DFB 7E           	ld a,(hl)
1149  8DFC A7           	and a
1150  8DFD F5           	push af
1151  8DFE 28 08        	jr z,2F
1152  8E00
1153  8E00 11 B3 89     	ld de,Filas
1154  8E03 01 43 00     	ld bc,67
1155  8E06 ED B0        	ldir
1156  8E08
1157  8E08 CD 24 8E     2 call Incrementa_punteros_de_cajas
1158  8E0B F1           	pop af
1159  8E0C 28 EA        	jr z,1B
1160  8E0E
1161  8E0E C1           	pop bc
1162  8E0F D1           	pop de
1163  8E10 E1           	pop hl
1164  8E11
1165  8E11 C9           	ret
1166  8E12
1167  8E12              ; **************************************************************************************************
1168  8E12              ;
1169  8E12              ;	12/05/23
1170  8E12              ;
1171  8E12              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1172  8E12
1173  8E12 E5           Restore_entidad push hl
1174  8E13 D5           	push de
1175  8E14 C5            	push bc
1176  8E15
1177  8E15 2A F9 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1178  8E18 11 B3 89     	ld de,Filas
1179  8E1B 01 43 00     	ld bc,67
1180  8E1E ED B0        	ldir
1181  8E20
1182  8E20 C1           	pop bc
1183  8E21 D1           	pop de
1184  8E22 E1           	pop hl
1185  8E23 C9           	ret
1186  8E24
1187  8E24
1188  8E24              ; **************************************************************************************************
1189  8E24              ;
1190  8E24              ;	08/05/23
1191  8E24              ;
1192  8E24              ;	Incrementamos los dos punteros de entidades. (+1).
1193  8E24
1194  8E24 2A FB 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1195  8E27 22 F9 89     	ld (Puntero_store_caja),hl
1196  8E2A 2A FD 89     	ld hl,(Indice_restore_caja)
1197  8E2D 23           	inc hl
1198  8E2E 23           	inc hl
1199  8E2F 22 FD 89     	ld (Indice_restore_caja),hl
1200  8E32 CD 89 8D         call Extrae_address
1201  8E35 22 FB 89         ld (Puntero_restore_caja),hl
1202  8E38 C9               ret
1203  8E39
1204  8E39              ; **************************************************************************************************
1205  8E39              ;
1206  8E39              ;	25/01/23
1207  8E39              ;
1208  8E39              ;	Restore_Amadeus
1209  8E39              ;
1210  8E39              ;	Cargamos en DRAW los parámetros de Amadeus.
1211  8E39              ;
1212  8E39
1213  8E39 E5           Restore_Amadeus	push hl
1214  8E3A D5           	push de
1215  8E3B C5            	push bc
1216  8E3C 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1217  8E3F 11 B3 89     	ld de,Filas
1218  8E42 01 43 00     	ld bc,67
1219  8E45 ED B0        	ldir
1220  8E47 C1           	pop bc
1221  8E48 D1           	pop de
1222  8E49 E1           	pop hl
1223  8E4A C9           	ret
1224  8E4B
1225  8E4B              ; *************************************************************************************************************************************************************
1226  8E4B              ;
1227  8E4B              ;	29/04/23
1228  8E4B              ;
1229  8E4B              ;	Store_Amadeus
1230  8E4B              ;
1231  8E4B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1232  8E4B              ;
1233  8E4B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1234  8E4B              ;
1235  8E4B              ;	DESTRUYE: HL y BC y DE.
1236  8E4B
1237  8E4B 21 B3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1238  8E4E 01 43 00     	ld bc,67
1239  8E51 ED B0        	ldir
1240  8E53 C9           	ret
1241  8E54
1242  8E54              ; -----------------------------------------------------------
1243  8E54              ;
1244  8E54              ;	27/04/23
1245  8E54              ;
1246  8E54              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1247  8E54              ;
1248  8E54              ;	Destruye: HL,BC,DE,A
1249  8E54
1250  8E54 21 B3 89     Borra_datos_entidad ld hl,Filas
1251  8E57 01 42 00     	ld bc,66
1252  8E5A AF           	xor a
1253  8E5B 77           	ld (hl),a
1254  8E5C 11 B4 89     	ld de,Filas+1
1255  8E5F ED B0        	ldir
1256  8E61 C9           	ret
1257  8E62
1258  8E62              ; -----------------------------------------------------------
1259  8E62
1260  8E62              ; Teclado.
1261  8E62
1262  8E62 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1263  8E64 DB FE        	in a,($fe)
1264  8E66 E6 01        	and $01
1265  8E68 28 02        	jr z,1f
1266  8E6A 18 F6        	jr Pulsa_ENTER
1267  8E6C C9           1 ret
1268  8E6D
1269  8E6D              ; **************************************************************************************************
1270  8E6D              ;
1271  8E6D              ; Temporización.
1272  8E6D
1273  8E6D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1274  8E6D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1275  8E6D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1276  8E6D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1277  8E6D
1278  8E6D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1279  8E6D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1280  8E6D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1281  8E6D
1282  8E6D              ; A partir de $4f61 no hace falta DELAY.
1283  8E6D
1284  8E6D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1285  8E6D
1286  8E6D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1287  8E70 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1288  8E71 78           	LD A,B
1289  8E72 A7           	AND A
1290  8E73 20 FB        	JR NZ,wait
1291  8E75 C9           	RET
1292  8E76
1293  8E76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1294  8E76              ;
1295  8E76              ;	5/3/23
1296  8E76              ;
1297  8E76              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1298  8E76
1299  8E76              Movimiento_Amadeus
1300  8E76
1301  8E76              ; Disparo.
1302  8E76
1303  8E76 3A 42 8A     	ld a,(Disparo_Amadeus)
1304  8E79 A7           	and a
1305  8E7A 20 02        	jr nz,1F
1306  8E7C 18 15        	jr 2F
1307  8E7E
1308  8E7E 3E F7        1 ld a,$f7													; "5" para disparar.
1309  8E80 DB FE        	in a,($fe)
1310  8E82 E6 10        	and $10
1311  8E84
1312  8E84 F5           	push af
1313  8E85 CC D4 8E     	call z,Genera_disparo
1314  8E88 F1           	pop af
1315  8E89 20 08        	jr nz,2F
1316  8E8B
1317  8E8B 3A 42 8A     	ld a,(Disparo_Amadeus)
1318  8E8E EE 01        	xor 1
1319  8E90 32 42 8A     	ld (Disparo_Amadeus),a
1320  8E93
1321  8E93 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1322  8E95 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1323  8E97 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1324  8E99 CC 65 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1325  8E9C 3E F7        	ld a,$f7
1326  8E9E DB FE        	in a,($fe)
1327  8EA0 E6 01        	and $01
1328  8EA2 C8           	ret z
1329  8EA3
1330  8EA3 3E F7        	ld a,$f7
1331  8EA5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1332  8EA7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1333  8EA9 CC 47 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1334  8EAC C9           	ret
1335  8EAD
1336  8EAD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1337  8EAD              ;
1338  8EAD              ;	Rutina provisional para que los malotes cagen balas.
1339  8EAD
1340  8EAD              Detecta_disparo_entidad
1341  8EAD
1342  8EAD 3A 45 8A     	ld a,(Disparo_entidad)
1343  8EB0 A7           	and a
1344  8EB1 C8           	ret z
1345  8EB2
1346  8EB2              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1347  8EB2
1348  8EB2              ;	ld a,$7f				; Detecta SPACE.
1349  8EB2              ;	in a,($fe)
1350  8EB2              ;	and 1
1351  8EB2              ;	ret nz
1352  8EB2
1353  8EB2              ;	call Genera_disparo
1354  8EB2 C9           	ret
1355  8EB3
1356  8EB3              ; ----------------------------------------------------------------------
1357  8EB3              ;
1358  8EB3              ;	3/8/23
1359  8EB3
1360  8EB3              Frame
1361  8EB3
1362  8EB3              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1363  8EB3              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1364  8EB3
1365  8EB3              ; PINTAMOS.
1366  8EB3
1367  8EB3 F5           	push af
1368  8EB4 C5           	push bc
1369  8EB5 D5           	push de
1370  8EB6 E5           	push hl
1371  8EB7
1372  8EB7 3E 02            ld a,2
1373  8EB9 D3 FE            out ($fe),a											; Rojo.
1374  8EBB CD D8 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1375  8EBE CD 1E 97     	call Extrae_foto_disparos
1376  8EC1 3E 01            ld a,1
1377  8EC3 D3 FE            out ($fe),a											; Azul.
1378  8EC5
1379  8EC5              ; Gestiona los álbumes de fotos.
1380  8EC5
1381  8EC5 CD 22 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1382  8EC8 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1383  8ECB
1384  8ECB              ;	En este punto:
1385  8ECB
1386  8ECB              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1387  8ECB              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1388  8ECB
1389  8ECB              ; RELOJES.
1390  8ECB
1391  8ECB 21 3E 8A     	ld hl,Contador_de_frames
1392  8ECE 34           	inc (hl)											; 0 - 255
1393  8ECF
1394  8ECF E1           	pop hl
1395  8ED0 D1           	pop de
1396  8ED1 C1           	pop bc
1397  8ED2 F1           	pop af
1398  8ED3
1399  8ED3 C9           	ret
1400  8ED4
1401  8ED4              ; ---------------------------------------------------------------
1402  8ED4
1403  8ED4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8ED4              ; ******************************************************************************************************************************************************************************************
   2+ 8ED4              ;
   3+ 8ED4              ;   21/07/23
   4+ 8ED4              ;
   5+ 8ED4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8ED4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8ED4              ;
   8+ 8ED4              ;
   9+ 8ED4              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8ED4              ;
  11+ 8ED4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8ED4              ;               _ hacen las entidades hacia abajo.
  13+ 8ED4              ;
  14+ 8ED4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8ED4              ;
  16+ 8ED4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8ED4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8ED4              ;
  19+ 8ED4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8ED4              ;           _ la bala.
  21+ 8ED4              ;
  22+ 8ED4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8ED4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8ED4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8ED4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8ED4              ;           _ en el momento de generarse la bala)).
  27+ 8ED4
  28+ 8ED4              Genera_disparo
  29+ 8ED4
  30+ 8ED4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8ED4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8ED4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8ED4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8ED4              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8ED4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8ED4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8ED4
  38+ 8ED4              ; Exclusiones:
  39+ 8ED4
  40+ 8ED4 3A CB 89         ld a,(Vel_down)
  41+ 8ED7 47               ld b,a
  42+ 8ED8 3A 3D 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EDB B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EDC D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EDD 3A F0 89         ld a,(Columnas)
  46+ 8EE0 47               ld b,a
  47+ 8EE1 3A B4 89         ld a,(Columns)
  48+ 8EE4 B8               cp b
  49+ 8EE5 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EE6
  51+ 8EE6              ; ----- ----- -----
  52+ 8EE6
  53+ 8EE6 3A E1 89         ld a,(Ctrl_0)
  54+ 8EE9 CB 77            bit 6,a
  55+ 8EEB 20 06            jr nz,14F
  56+ 8EED
  57+ 8EED 3A BA 89         ld a,(Coordenada_y)
  58+ 8EF0 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EF2 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EF3
  61+ 8EF3 21 00 80     14 ld hl,Indice_disparo
  62+ 8EF6 3A BB 89         ld a,(CTRL_DESPLZ)
  63+ 8EF9 4F               ld c,a
  64+ 8EFA 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EFC              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EFC              ;                                            ""        ""       "f9", B="1"
  67+ 8EFC              ;                                            ""        ""       "fb", B="2"
  68+ 8EFC              ;                                            ""        ""       "fb", B="3"
  69+ 8EFC A7               and a
  70+ 8EFD 28 10            jr z,1F
  71+ 8EFF E6 01            and 1
  72+ 8F01 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F02
  74+ 8F02 79               ld a,c
  75+ 8F03 16 F9            ld d,$f9
  76+ 8F05 23           2 inc hl
  77+ 8F06 23               inc hl
  78+ 8F07 04               inc b
  79+ 8F08 BA               cp d
  80+ 8F09 28 04            jr z,1F
  81+ 8F0B 14               inc d
  82+ 8F0C 14               inc d
  83+ 8F0D 18 F6            jr 2B
  84+ 8F0F
  85+ 8F0F CD 89 8D     1 call Extrae_address
  86+ 8F12 E5               push hl
  87+ 8F13 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F15 DD 21 60 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F19
  90+ 8F19              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F19              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F19
  93+ 8F19 3A E1 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F1C CB 77            bit 6,a
  95+ 8F1E 20 04            jr nz,19F
  96+ 8F20
  97+ 8F20 AF               xor a
  98+ 8F21 32 45 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F24
 100+ 8F24 3A C7 89     19 ld a,(Cuad_objeto)
 101+ 8F27 FE 02            cp 2
 102+ 8F29 38 66            jr c,3F
 103+ 8F2B 28 64            jr z,3F
 104+ 8F2D
 105+ 8F2D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F2D
 107+ 8F2D E6 01            and 1
 108+ 8F2F 28 30            jr z,4F
 109+ 8F31
 110+ 8F31              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F31              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F31              ;
 113+ 8F31              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F31              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F31              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F31
 117+ 8F31 2A B5 89     	ld hl,(Posicion_actual)
 118+ 8F34
 119+ 8F34              ;   Amadeus o entidad ???.
 120+ 8F34
 121+ 8F34 3A E1 89         ld a,(Ctrl_0)
 122+ 8F37 CB 77            bit 6,a
 123+ 8F39 28 0A            jr z,8F
 124+ 8F3B
 125+ 8F3B              ; 	Dispara Amadeus.
 126+ 8F3B
 127+ 8F3B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F3D CD C9 96         call PreviousScan
 129+ 8F40 CD C9 96         call PreviousScan
 130+ 8F43
 131+ 8F43              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F43              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F43              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F43              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F43
 136+ 8F43 18 11            jr 10F
 137+ 8F45
 138+ 8F45              ; 	Dispara Entidad.
 139+ 8F45
 140+ 8F45 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F48              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F48
 143+ 8F48              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F48              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F48
 146+ 8F48 C5               push bc
 147+ 8F49 06 10            ld b,16
 148+ 8F4B CD BA 96     9 call NextScan
 149+ 8F4E 10 FB            djnz 9B
 150+ 8F50 C1               pop bc
 151+ 8F51 CD BB 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F54 18 06            jr 17F
 153+ 8F56
 154+ 8F56              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F56              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F56              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F56              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F56
 159+ 8F56 CD BB 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F59 CD 30 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F5C              ;                                                      ; _al generar el disparo.
 162+ 8F5C
 163+ 8F5C              ; 	LLegados a este punto tendremos:
 164+ 8F5C              ;
 165+ 8F5C              ;       Puntero_objeto_disparo en IY.
 166+ 8F5C              ;       Rutinas_de_impresion en IX.
 167+ 8F5C              ;       Puntero_de_impresion en HL.
 168+ 8F5C              ;       Impacto/Dirección en BC.
 169+ 8F5C
 170+ 8F5C CD C3 8F     17 call Almacena_disparo
 171+ 8F5F 18 52            jr 6F                                             ; RET.
 172+ 8F61
 173+ 8F61              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F61              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F61              ;
 176+ 8F61              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F61              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F61              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F61
 180+ 8F61 2A B5 89     4 ld hl,(Posicion_actual)
 181+ 8F64
 182+ 8F64              ;   Amadeus o entidad ???.
 183+ 8F64
 184+ 8F64 3A E1 89         ld a,(Ctrl_0)
 185+ 8F67 CB 77            bit 6,a
 186+ 8F69 28 0A            jr z,11F
 187+ 8F6B
 188+ 8F6B              ; 	Dispara Amadeus.
 189+ 8F6B
 190+ 8F6B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F6D CD C9 96         call PreviousScan
 192+ 8F70 CD C9 96         call PreviousScan
 193+ 8F73
 194+ 8F73              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F73              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F73              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F73              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F73
 199+ 8F73 18 11            jr 13F
 200+ 8F75
 201+ 8F75              ; 	Dispara Entidad.
 202+ 8F75
 203+ 8F75 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F78              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F78
 206+ 8F78              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F78              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F78
 209+ 8F78 C5               push bc
 210+ 8F79 06 10            ld b,16
 211+ 8F7B CD BA 96     12 call NextScan
 212+ 8F7E 10 FB            djnz 12B
 213+ 8F80 C1               pop bc
 214+ 8F81
 215+ 8F81 CD B4 8F         call Ajusta_disparo_parte_derecha
 216+ 8F84 18 06            jr 18F
 217+ 8F86
 218+ 8F86              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F86              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F86              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F86              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F86
 223+ 8F86 CD B4 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F89 CD 30 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F8C              ;                                                       ; _al generar el disparo.
 226+ 8F8C
 227+ 8F8C              ; LLegados a este punto tendremos:
 228+ 8F8C              ;
 229+ 8F8C              ;       Puntero_objeto_disparo en IY.
 230+ 8F8C              ;       Rutinas_de_impresion en IX.
 231+ 8F8C              ;       Puntero_de_impresion en HL.
 232+ 8F8C              ;       Impacto/Dirección en BC.
 233+ 8F8C
 234+ 8F8C CD C3 8F     18 call Almacena_disparo
 235+ 8F8F 18 22            jr 6F                                               ; RET.
 236+ 8F91
 237+ 8F91              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F91
 239+ 8F91 28 11        3 jr z,5F
 240+ 8F93
 241+ 8F93              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F93              ;
 243+ 8F93              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F93              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F93              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F93              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F93
 248+ 8F93              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F93              ;	   ""        ""       "f9", B="1"
 250+ 8F93              ;	   ""        ""       "fb", B="2"
 251+ 8F93              ; 	   ""        ""       "fb", B="3"
 252+ 8F93
 253+ 8F93 2A B5 89     	ld hl,(Posicion_actual)
 254+ 8F96 CD BA 96     	call NextScan
 255+ 8F99
 256+ 8F99              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F99              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F99              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F99              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F99
 261+ 8F99 CD BB 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F9C
 263+ 8F9C              ; 	No se produce impacto. B="$80"
 264+ 8F9C              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F9C
 266+ 8F9C 01 80 80         ld bc,$8080
 267+ 8F9F
 268+ 8F9F              ; 	LLegados a este punto tendremos:
 269+ 8F9F              ;
 270+ 8F9F              ;       Puntero_objeto_disparo en IY.
 271+ 8F9F              ;       Rutinas_de_impresion en IX.
 272+ 8F9F              ;       Puntero_de_impresion en HL.
 273+ 8F9F              ;       Impacto/Dirección en BC.
 274+ 8F9F
 275+ 8F9F CD C3 8F         call Almacena_disparo
 276+ 8FA2 18 0F            jr 6F                                           ; RET.
 277+ 8FA4
 278+ 8FA4              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FA4              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FA4              ;
 281+ 8FA4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FA4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FA4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FA4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FA4
 286+ 8FA4 2A B5 89     5 ld hl,(Posicion_actual)
 287+ 8FA7 CD BA 96     	call NextScan
 288+ 8FAA
 289+ 8FAA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FAA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FAA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FAA
 294+ 8FAA CD B4 8F         call Ajusta_disparo_parte_derecha
 295+ 8FAD
 296+ 8FAD              ; 	No se produce impacto. B="$80"
 297+ 8FAD              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FAD
 299+ 8FAD 01 80 80     15 ld bc,$8080
 300+ 8FB0
 301+ 8FB0              ; 	LLegados a este punto tendremos:
 302+ 8FB0              ;
 303+ 8FB0              ;       Puntero_objeto_disparo en IY.
 304+ 8FB0              ;       Rutinas_de_impresion en IX.
 305+ 8FB0              ;       Puntero_de_impresion en HL.
 306+ 8FB0              ;       Impacto/Dirección en BC.
 307+ 8FB0
 308+ 8FB0 CD C3 8F         call Almacena_disparo
 309+ 8FB3
 310+ 8FB3 C9           6 ret
 311+ 8FB4
 312+ 8FB4              ; ----------------------------------------------------------------
 313+ 8FB4              ;
 314+ 8FB4              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FB4              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FB4              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FB4
 318+ 8FB4 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FB5 FE 02            cp 2
 320+ 8FB7 38 01            jr c,1F
 321+ 8FB9 23               inc hl
 322+ 8FBA C9           1 ret
 323+ 8FBB
 324+ 8FBB 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FBC FE 01        	cp 1
 326+ 8FBE 20 01        	jr nz,1F
 327+ 8FC0 2B           	dec hl
 328+ 8FC1 2B           1 dec hl
 329+ 8FC2 C9               ret
 330+ 8FC3
 331+ 8FC3              ; ----------------------------------------------------------------
 332+ 8FC3              ;
 333+ 8FC3              ;   25/02/23
 334+ 8FC3              ;
 335+ 8FC3              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FC3              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FC3              ;
 338+ 8FC3              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FC3              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FC3
 341+ 8FC3              Almacena_disparo
 342+ 8FC3
 343+ 8FC3 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FC4 F1               pop af
 345+ 8FC5 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FC6
 347+ 8FC6 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FC7 E6 01            and 1
 349+ 8FC9 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FCB              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FCB              ; 	Dispara AMADEUS.
 352+ 8FCB
 353+ 8FCB              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FCB              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FCB              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FCB              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FCB
 358+ 8FCB C5               push bc
 359+ 8FCC 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FCF 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FD2 A7               and a
 362+ 8FD3 ED 42            sbc hl,bc
 363+ 8FD5 CC 52 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FD8 C1               pop bc
 365+ 8FD9 28 54            jr z,4F
 366+ 8FDB
 367+ 8FDB 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FDE 23               inc hl
 369+ 8FDF 23               inc hl
 370+ 8FE0 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FE3              ;                                                   ; _ Disparo_(+1).
 372+ 8FE3 18 18            jr 2F
 373+ 8FE5
 374+ 8FE5              ; Dispara una entidad.
 375+ 8FE5
 376+ 8FE5 C5           1 push bc
 377+ 8FE6 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FE9 2A 2C 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FEC A7               and a
 380+ 8FED ED 42            sbc hl,bc
 381+ 8FEF CC 4B 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FF2 C1               pop bc
 383+ 8FF3 28 3A            jr z,4F
 384+ 8FF5
 385+ 8FF5 2A 2C 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FF8 23               inc hl
 387+ 8FF9 23               inc hl
 388+ 8FFA 22 2C 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FFD              ;                                                   ; _ Disparo_(+1).
 390+ 8FFD CD 89 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9000              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9000              ;
 393+ 9000              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9000              ;                                                     Rutinas_de_impresion en IX.
 395+ 9000              ;                                                     Puntero_de_impresion en HL.
 396+ 9000              ;                                                     Impacto/Dirección en BC.
 397+ 9000
 398+ 9000 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9001 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9002 23               inc hl                                          ; _ al siguiente.
 401+ 9003 A7               and a
 402+ 9004 20 C0            jr nz,3B
 403+ 9006
 404+ 9006 08               ex af,af
 405+ 9007 ED 73 07 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 900B F9               ld sp,hl
 407+ 900C
 408+ 900C DD E5            push ix                                         ; Rutina de impresión.
 409+ 900E F5               push af                                         ; Puntero de impresión.
 410+ 900F FD E5            push iy                                         ; Puntero objeto.
 411+ 9011 C5               push bc                                         ; Control.
 412+ 9012
 413+ 9012 ED 7B 07 8A      ld sp,(Stack)
 414+ 9016
 415+ 9016              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9016
 417+ 9016 21 F6 89     	ld hl,Ctrl_1
 418+ 9019 CB C6        	set 0,(hl)
 419+ 901B
 420+ 901B DD E5        	push ix
 421+ 901D E1               pop hl
 422+ 901E F5               push af
 423+ 901F DD E1            pop ix
 424+ 9021
 425+ 9021 CD A0 7F     	call Guarda_foto_registros
 426+ 9024
 427+ 9024 21 F6 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9027 CB 86        	res 0,(hl)
 429+ 9029
 430+ 9029              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9029              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9029
 433+ 9029 CD 52 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 902C CD 4B 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 902F
 436+ 902F C9           4 ret
 437+ 9030
 438+ 9030              ; ----------------------------------------------------------------
 439+ 9030              ;
 440+ 9030              ;   4/3/23
 441+ 9030              ;
 442+ 9030              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9030              ;   _ al generarse el disparo.
 444+ 9030              ;
 445+ 9030              ;       "$80" ..... No se produce colisión.
 446+ 9030              ;       "$81" ..... Se produce colisión.
 447+ 9030              ;
 448+ 9030              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9030              ;         _ que forman el disparo.
 450+ 9030
 451+ 9030
 452+ 9030              Comprueba_Colision
 453+ 9030
 454+ 9030              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9030
 456+ 9030 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9032 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9033
 459+ 9033 CD 69 90         call Modifica_H_Velocidad_disparo
 460+ 9036
 461+ 9036 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9037 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9039 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 903B
 465+ 903B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 903D CD 59 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9040
 468+ 9040 7B               ld a,e
 469+ 9041 E6 01            and 1
 470+ 9043 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9045              ;                                                  ; _ para activar IMPACTO.
 472+ 9045 E1               pop hl
 473+ 9046 E5               push hl
 474+ 9047 CD BA 96         call NextScan
 475+ 904A
 476+ 904A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 904B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 904D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 904F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 904F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9051 CD 59 90         call Bucle_2
 482+ 9054
 483+ 9054 43           1 ld b,e
 484+ 9055 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9056 FD E1            pop iy
 486+ 9058 C9               ret
 487+ 9059
 488+ 9059              ; ---------- ----------
 489+ 9059
 490+ 9059 06 02        Bucle_2 ld b,2
 491+ 905B FD 7E 00     2 ld a,(iy)
 492+ 905E A6               and (hl)
 493+ 905F 28 02            jr z,1F
 494+ 9061 1E 81            ld e,$81
 495+ 9063 23           1 inc hl
 496+ 9064 FD 23            inc iy
 497+ 9066 10 F3            djnz 2B
 498+ 9068 C9               ret
 499+ 9069
 500+ 9069              ; ---------- ----------
 501+ 9069              ;
 502+ 9069              ;   21/7/23
 503+ 9069
 504+ 9069              Modifica_H_Velocidad_disparo
 505+ 9069
 506+ 9069 3A 3D 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 906C FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 906E D0               ret nc                                         ; _ incrementamos H.
 509+ 906F 24               inc h
 510+ 9070
 511+ 9070 C9               ret
 512+ 9071
 513+ 9071              ; -------------------------------------------------------------------------------------------------------------
 514+ 9071              ;
 515+ 9071              ;   11/04/23
 516+ 9071              ;
 517+ 9071              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9071              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9071              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9071              ;
 521+ 9071              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9071
 523+ 9071              Compara_coordenadas_X
 524+ 9071
 525+ 9071              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9071              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9071
 528+ 9071              ; Preparamos registros:
 529+ 9071
 530+ 9071 21 B9 89         ld hl,Filas+6
 531+ 9074 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9075 23               inc hl
 533+ 9076 23               inc hl
 534+ 9077 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9078 43               ld b,e
 536+ 9079
 537+ 9079 21 C7 89         ld hl,Filas+20
 538+ 907C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 907D 21 38 8A         ld hl,Coordenadas_X_Entidad
 540+ 9080 CD 9C 92         call Guarda_coordenadas_X
 541+ 9083
 542+ 9083              ; Preparamos registros:
 543+ 9083
 544+ 9083 21 AA 85         ld hl,Amadeus_db+6
 545+ 9086 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9087 23               inc hl
 547+ 9088 23               inc hl
 548+ 9089 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 908A 7B               ld a,e
 550+ 908B 08               ex af,af'
 551+ 908C 21 B8 85         ld hl,Amadeus_db+20
 552+ 908F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9090 21 35 8A         ld hl,Coordenadas_X_Amadeus
 554+ 9093 CD 9C 92         call Guarda_coordenadas_X
 555+ 9096
 556+ 9096              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9096              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9096
 559+ 9096 04               inc b
 560+ 9097 05               dec b
 561+ 9098 28 04            jr z,1F
 562+ 909A 06 03            ld b,3
 563+ 909C 18 02            jr 2F
 564+ 909E 06 02        1 ld b,2
 565+ 90A0 08           2 ex af,af'
 566+ 90A1 3C               inc a
 567+ 90A2 3D               dec a
 568+ 90A3 28 04            jr z,5F
 569+ 90A5 0E 03            ld c,3
 570+ 90A7 18 02            jr 6F
 571+ 90A9 0E 02        5 ld c,2
 572+ 90AB 79           6 ld a,c
 573+ 90AC 08               ex af,af'
 574+ 90AD 11 38 8A         ld de,Coordenadas_X_Entidad
 575+ 90B0 1A           4 ld a,(de)
 576+ 90B1 21 35 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90B4 BE           3 cp (hl)
 578+ 90B5 28 0E            jr z,7F
 579+ 90B7 23               inc hl
 580+ 90B8 0D               dec c
 581+ 90B9 20 F9            jr nz,3B
 582+ 90BB 13               inc de
 583+ 90BC 08               ex af,af'
 584+ 90BD 4F               ld c,a
 585+ 90BE 08               ex af,af'
 586+ 90BF 10 EF            djnz 4B
 587+ 90C1
 588+ 90C1              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90C1
 590+ 90C1 CD D8 92     8 call Limpia_Coordenadas_X
 591+ 90C4 C9               ret
 592+ 90C5
 593+ 90C5 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90C7 32 CC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90CA 21 30 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90CD CB D6            set 2,(hl)
 597+ 90CF 18 F0            jr 8B
 598+ 90D1
 599+ 90D1              ; -----------------------------------------------------------------------
 600+ 90D1              ;
 601+ 90D1              ;   17/04/23
 602+ 90D1              ;
 603+ 90D1
 604+ 90D1              Detecta_colision_nave_entidad
 605+ 90D1
 606+ 90D1              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90D1
 608+ 90D1 2A B5 89         ld hl,(Posicion_actual)
 609+ 90D4 CD 15 96         call Calcula_puntero_de_impresion
 610+ 90D7
 611+ 90D7              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90D7              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90D7
 614+ 90D7 DD E5            push ix
 615+ 90D9 E1               pop hl
 616+ 90DA E5               push hl
 617+ 90DB
 618+ 90DB              ; ----- ----- -----
 619+ 90DB 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90DD 06 0A            ld b,10
 621+ 90DF CD 0F 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90E2 7B               ld a,e
 623+ 90E3 FE 05            cp 5
 624+ 90E5 38 0E            jr c,3F
 625+ 90E7
 626+ 90E7              ; LLegados a este punto:
 627+ 90E7              ;
 628+ 90E7              ;   HAY COLISIÓN !!!!!.
 629+ 90E7              ;
 630+ 90E7              ;   .db (Impacto) de Amadeus a "1".
 631+ 90E7              ;   SET el bit3 de (Impacto2).
 632+ 90E7              ;
 633+ 90E7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90E7
 635+ 90E7 21 BD 85         ld hl,Amadeus_db+25
 636+ 90EA 36 01            ld (hl),1
 637+ 90EC 21 30 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90EF CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90F1 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90F3 18 18            jr 1F
 641+ 90F5
 642+ 90F5              ; -----
 643+ 90F5
 644+ 90F5 E1           3 pop hl
 645+ 90F6 CD BA 96         call NextScan
 646+ 90F9 E5               push hl
 647+ 90FA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90FB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90FD 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90FF 30 0C            jr nc,1F
 651+ 9101              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9101 10 DC            djnz 2B
 653+ 9103
 654+ 9103              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9103
 656+ 9103              ; LLegados a este punto:
 657+ 9103              ;
 658+ 9103              ;   NO HAY COLISIÓN !!!!!.
 659+ 9103              ;
 660+ 9103              ;   .db (Impacto) de Amadeus a "0".
 661+ 9103              ;   RES el bit2 de (Impacto2).
 662+ 9103              ;
 663+ 9103              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9103              ;   Lo colocamos a "0".
 665+ 9103
 666+ 9103 21 30 8A         ld hl,Impacto2
 667+ 9106 CB 96            res 2,(hl)
 668+ 9108 2A 31 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 910B 36 00            ld (hl),0
 670+ 910D
 671+ 910D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 910E C9               ret
 673+ 910F
 674+ 910F               ; ---------- ----------
 675+ 910F
 676+ 910F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9110 3A B4 89         ld a,(Columns)
 678+ 9113 47               ld b,a
 679+ 9114 FD 7E 00     2 ld a,(iy)
 680+ 9117 BE               cp (hl)
 681+ 9118 28 01            jr z,1F
 682+ 911A
 683+ 911A 1C               inc e
 684+ 911B
 685+ 911B 23           1 inc hl
 686+ 911C FD 23            inc iy
 687+ 911E 10 F4            djnz 2B
 688+ 9120 C1               pop bc
 689+ 9121 C9               ret
 690+ 9122
 691+ 9122              ; -------------------------------------------------------------------------------------------------------------
 692+ 9122              ;
 693+ 9122              ;   13/03/23
 694+ 9122              ;
 695+ 9122              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9122              ;
 697+ 9122              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9122
 699+ 9122 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9125 7E               ld a,(hl)
 701+ 9126 A7               and a
 702+ 9127 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9128
 704+ 9128 44               ld b,h
 705+ 9129 4D               ld c,l
 706+ 912A 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
 707+ 912D E5               push hl
 708+ 912E A7               and a
 709+ 912F ED 42            sbc hl,bc
 710+ 9131 E5               push hl
 711+ 9132 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9133
 713+ 9133 E1               pop hl
 714+ 9134 54               ld d,h
 715+ 9135 5D               ld e,l
 716+ 9136 1B               dec de
 717+ 9137 ED B8            lddr                                                ; Limpiamos.
 718+ 9139
 719+ 9139 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 913C 22 0D 8A         ld (Stack_snapshot_disparos),hl
 721+ 913F
 722+ 913F C9               ret
 723+ 9140
 724+ 9140              ; -------------------------------------------------------------------------------------------------------------
 725+ 9140              ;
 726+ 9140              ;   18/07/23
 727+ 9140              ;
 728+ 9140
 729+ 9140              Motor_de_disparos
 730+ 9140
 731+ 9140              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9140
 733+ 9140 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9143 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9146
 736+ 9146 CD 89 8D     2 call Extrae_address
 737+ 9149 7E               ld a,(hl)
 738+ 914A A7               and a
 739+ 914B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 914D
 741+ 914D              ; ----- ----- ----- ----- ----- -----
 742+ 914D
 743+ 914D C5               push bc
 744+ 914E CD 12 92         call foto_disparo_a_borrar
 745+ 9151
 746+ 9151              ; Existe colisión con este disparo???
 747+ 9151
 748+ 9151 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9152 7E               ld a,(hl)
 750+ 9153 2B               dec hl
 751+ 9154 E6 01            and 1
 752+ 9156 28 1D            jr z,9F
 753+ 9158
 754+ 9158              ;   En este punto:
 755+ 9158              ;
 756+ 9158              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9158              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9158              ;   _con la entidad).
 759+ 9158              ;
 760+ 9158              ;   Disparo_2A defw 0                                ; Control.
 761+ 9158              ;    defw 0                                          ; Puntero objeto.
 762+ 9158              ;    defw 0                                          ; Puntero de impresión.
 763+ 9158              ;    defw 0                                          ; Rutina de impresión.
 764+ 9158
 765+ 9158 E5               push hl
 766+ 9159
 767+ 9159 06 04            ld b,4
 768+ 915B 23           19 inc hl
 769+ 915C 10 FD            djnz 19B
 770+ 915E
 771+ 915E CD 89 8D         call Extrae_address
 772+ 9161 CD 43 9D         call Genera_coordenadas_disparo
 773+ 9164
 774+ 9164              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9164
 776+ 9164 21 33 8A         ld hl,Coordenadas_disparo_certero
 777+ 9167 72               ld (hl),d
 778+ 9168 23               inc hl
 779+ 9169 73               ld (hl),e
 780+ 916A
 781+ 916A              ; Elimino el disparo de la base de datos.
 782+ 916A
 783+ 916A E1               pop hl
 784+ 916B CD 91 92         call Elimina_disparo_de_base_de_datos
 785+ 916E 21 30 8A         ld hl,Impacto2
 786+ 9171 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9173
 788+ 9173 18 06            jr 11F
 789+ 9175
 790+ 9175 CD 3B 92     9 call Mueve_disparo
 791+ 9178 CD 12 92         call foto_disparo_a_borrar
 792+ 917B
 793+ 917B C1           11 pop bc
 794+ 917C 18 04            jr 7F
 795+ 917E
 796+ 917E              ; ----- ----- ----- ----- ----- -----
 797+ 917E
 798+ 917E ED 42        1 sbc hl,bc
 799+ 9180 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9182
 801+ 9182 2A 2E 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9185 23               inc hl
 803+ 9186 23               inc hl
 804+ 9187 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 918A 18 BA            jr 2B
 806+ 918C
 807+ 918C CD 52 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 918F              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 918F
 810+ 918F              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 918F
 812+ 918F 01 8A 85         ld bc,Disparo_11
 813+ 9192 2A 2C 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9195
 815+ 9195 CD 89 8D     5 call Extrae_address
 816+ 9198 7E               ld a,(hl)
 817+ 9199 A7               and a
 818+ 919A 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 919C
 820+ 919C              ; ----- ----- ----- ----- ----- -----
 821+ 919C
 822+ 919C C5               push bc
 823+ 919D CD 12 92         call foto_disparo_a_borrar
 824+ 91A0
 825+ 91A0              ; Existe colisión con este disparo???
 826+ 91A0
 827+ 91A0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91A1 7E               ld a,(hl)
 829+ 91A2 2B               dec hl
 830+ 91A3 E6 01            and 1
 831+ 91A5 28 4D            jr z,10F
 832+ 91A7
 833+ 91A7              ;! La colisión se produce con Amadeus???
 834+ 91A7              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91A7
 836+ 91A7 E5               push hl
 837+ 91A8
 838+ 91A8 06 04            ld b,4
 839+ 91AA 23           16 inc hl
 840+ 91AB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91AD
 842+ 91AD CD 89 8D         call Extrae_address
 843+ 91B0 CD 43 9D         call Genera_coordenadas_disparo
 844+ 91B3
 845+ 91B3 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91B4 FE 16            cp $16
 847+ 91B6 38 2A            jr c,15F
 848+ 91B8
 849+ 91B8
 850+ 91B8              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91B8
 852+ 91B8 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91B9
 854+ 91B9              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91B9
 856+ 91B9
 857+ 91B9 2A 3B 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91BC
 859+ 91BC              ; Coordenada X de Amadeus en D.
 860+ 91BC
 861+ 91BC 7D               ld a,l
 862+ 91BD E6 1F            and $1F
 863+ 91BF 57               ld d,a
 864+ 91C0
 865+ 91C0 21 AC 85         ld hl,Amadeus_db+8
 866+ 91C3 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91C4
 868+ 91C4 21 35 8A         ld hl,Coordenadas_X_Amadeus
 869+ 91C7 CD 9C 92         call Guarda_coordenadas_X
 870+ 91CA
 871+ 91CA D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91CB
 873+ 91CB              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91CB
 875+ 91CB 06 02            ld b,2
 876+ 91CD C5           20 push bc
 877+ 91CE
 878+ 91CE 06 03            ld b,3
 879+ 91D0 21 35 8A         ld hl,Coordenadas_X_Amadeus
 880+ 91D3 7E           18 ld a,(hl)
 881+ 91D4 BA               cp d
 882+ 91D5 20 04            jr nz,17F
 883+ 91D7
 884+ 91D7              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91D7
 886+ 91D7 C1               pop bc
 887+ 91D8 E1               pop hl
 888+ 91D9 18 0D            jr 14F
 889+ 91DB
 890+ 91DB 23           17 inc hl
 891+ 91DC 10 F5            djnz 18B
 892+ 91DE
 893+ 91DE 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91DF
 895+ 91DF C1               pop bc
 896+ 91E0 10 EB            djnz 20B
 897+ 91E2
 898+ 91E2
 899+ 91E2              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91E2              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91E2
 902+ 91E2 E1           15 pop hl
 903+ 91E3 23               inc hl
 904+ 91E4 35               dec (hl)
 905+ 91E5 2B               dec hl
 906+ 91E6 18 0C            jr 10F
 907+ 91E8
 908+ 91E8              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91E8              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91E8
 911+ 91E8 E5           14 push hl
 912+ 91E9 CD 91 92         call Elimina_disparo_de_base_de_datos
 913+ 91EC 21 30 8A         ld hl,Impacto2
 914+ 91EF CB CE            set 1,(hl)
 915+ 91F1 E1               pop hl
 916+ 91F2 18 06            jr 12F
 917+ 91F4
 918+ 91F4              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91F4
 920+ 91F4 CD 3B 92     10 call Mueve_disparo
 921+ 91F7 CD 12 92         call foto_disparo_a_borrar
 922+ 91FA C1           12 pop bc
 923+ 91FB
 924+ 91FB 18 04            jr 8F
 925+ 91FD
 926+ 91FD              ; ----- ----- ----- ----- ----- -----
 927+ 91FD
 928+ 91FD ED 42        4 sbc hl,bc
 929+ 91FF 28 0A            jr z,6F
 930+ 9201
 931+ 9201 2A 2C 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9204 23               inc hl
 933+ 9205 23               inc hl
 934+ 9206 22 2C 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9209 18 8A            jr 5B
 936+ 920B
 937+ 920B CD 4B 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 920E CD D8 92         call Limpia_Coordenadas_X
 939+ 9211 C9               ret
 940+ 9212
 941+ 9212              ; ------------------------------------------------------------------
 942+ 9212
 943+ 9212              foto_disparo_a_borrar
 944+ 9212
 945+ 9212 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9213 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9214 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9215
 949+ 9215 E5               push hl
 950+ 9216 23               inc hl
 951+ 9217 23               inc hl
 952+ 9218 ED 73 07 8A      ld (Stack),sp
 953+ 921C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 921D FD E1            pop iy
 955+ 921F DD E1            pop ix
 956+ 9221 E1               pop hl
 957+ 9222 ED 7B 07 8A      ld sp,(Stack)
 958+ 9226 3A F6 89         ld a,(Ctrl_1)
 959+ 9229 CB C7            set 0,a
 960+ 922B 32 F6 89         ld (Ctrl_1),a
 961+ 922E CD A0 7F         call Guarda_foto_registros
 962+ 9231 3A F6 89         ld a,(Ctrl_1)
 963+ 9234 CB 87            res 0,a
 964+ 9236 32 F6 89         ld (Ctrl_1),a
 965+ 9239 E1               pop hl
 966+ 923A C9               ret
 967+ 923B
 968+ 923B              ;---------------------------------------------------
 969+ 923B              ;
 970+ 923B              ;   18/07/23
 971+ 923B              ;
 972+ 923B
 973+ 923B              Mueve_disparo
 974+ 923B
 975+ 923B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 923B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 923B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 923B
 979+ 923B E5               push hl
 980+ 923C
 981+ 923C 7E               ld a,(hl)
 982+ 923D
 983+ 923D 06 04            ld b,4
 984+ 923F 23           1 inc hl
 985+ 9240 10 FD            djnz 1B
 986+ 9242
 987+ 9242              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9242
 989+ 9242 CD 89 8D         call Extrae_address
 990+ 9245
 991+ 9245 E6 01            and 1
 992+ 9247 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9249
 994+ 9249              ; Disparo hacia arriba, (Amadeus).
 995+ 9249
 996+ 9249              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9249              ; _ de la dificultad.
 998+ 9249
 999+ 9249 CD C9 96         call PreviousScan
1000+ 924C CD C9 96         call PreviousScan
1001+ 924F CD C9 96         call PreviousScan
1002+ 9252 CD C9 96         call PreviousScan
1003+ 9255
1004+ 9255              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9255
1006+ 9255 7C               ld a,h
1007+ 9256 FE 40            cp $40
1008+ 9258 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 925A
1010+ 925A              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 925A
1012+ 925A EB               ex de,hl
1013+ 925B 06 04            ld b,4
1014+ 925D 2B           6 dec hl
1015+ 925E 10 FD            djnz 6B
1016+ 9260
1017+ 9260 CD 91 92         call Elimina_disparo_de_base_de_datos
1018+ 9263 E1               pop hl
1019+ 9264 18 10            jr 7F
1020+ 9266
1021+ 9266              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9266              ; HL contiene el puntero de impresión del disparo.
1023+ 9266              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9266
1025+ 9266 D5           3 push de
1026+ 9267 C5               push bc
1027+ 9268
1028+ 9268 CD 30 90         call Comprueba_Colision
1029+ 926B
1030+ 926B              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 926B
1032+ 926B 78               ld a,b
1033+ 926C
1034+ 926C C1               pop bc
1035+ 926D D1               pop de
1036+ 926E
1037+ 926E EB               ex de,hl
1038+ 926F
1039+ 926F 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9270 23               inc hl                                      ; _ movimiento.
1041+ 9271 72               ld (hl),d
1042+ 9272
1043+ 9272 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9273
1045+ 9273 23               inc hl                                      ; _ en curso.
1046+ 9274 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9275 2B               dec hl
1048+ 9276
1049+ 9276 C9           7 ret
1050+ 9277
1051+ 9277              ; Disparo hacia abajo, (Entidad).
1052+ 9277
1053+ 9277 3A 3D 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 927A 47               ld b,a
1055+ 927B
1056+ 927B CD BA 96     4 call NextScan
1057+ 927E 10 FB            djnz 4B
1058+ 9280
1059+ 9280              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9280
1061+ 9280 7C               ld a,h
1062+ 9281 FE 58            cp $58
1063+ 9283 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9285
1065+ 9285 EB               ex de,hl
1066+ 9286 06 04            ld b,4
1067+ 9288 2B           5 dec hl
1068+ 9289 10 FD            djnz 5B
1069+ 928B
1070+ 928B CD 91 92         call Elimina_disparo_de_base_de_datos
1071+ 928E E1               pop hl
1072+ 928F 18 E5            jr 7B
1073+ 9291
1074+ 9291              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9291
1076+ 9291 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9294 AF               xor a
1078+ 9295 77               ld (hl),a
1079+ 9296 54               ld d,h
1080+ 9297 5D               ld e,l
1081+ 9298 13               inc de
1082+ 9299 ED B0            ldir
1083+ 929B C9               ret
1084+ 929C
1085+ 929C              ; -----------------------------------------------------------------
1086+ 929C              ;
1087+ 929C              ;   19/7/23
1088+ 929C              ;
1089+ 929C              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 929C              ;
1091+ 929C              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 929C              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 929C              ;
1094+ 929C              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 929C              ;
1096+ 929C              ;   INPUTS:
1097+ 929C              ;
1098+ 929C              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 929C              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 929C
1101+ 929C              ;   MODIFICA: A, HL, BC y DE.
1102+ 929C
1103+ 929C              Guarda_coordenadas_X
1104+ 929C
1105+ 929C 7B               ld a,e
1106+ 929D A7               and a
1107+ 929E 20 04            jr nz,1F
1108+ 92A0
1109+ 92A0 06 02            ld b,2
1110+ 92A2 18 02            jr 2F
1111+ 92A4
1112+ 92A4 06 03        1 ld b,3
1113+ 92A6 72           2 ld (hl),d
1114+ 92A7 23               inc hl
1115+ 92A8 14               inc d
1116+ 92A9 10 FB            djnz 2B
1117+ 92AB
1118+ 92AB C9               ret
1119+ 92AC
1120+ 92AC              ; -----------------------------------------------------------------
1121+ 92AC              ;
1122+ 92AC              ;   12/04/23
1123+ 92AC              ;
1124+ 92AC
1125+ 92AC 3A 30 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92AF A7               and a
1127+ 92B0 C8               ret z
1128+ 92B1
1129+ 92B1 FE 04            cp 4
1130+ 92B3 20 09            jr nz,1F
1131+ 92B5
1132+ 92B5
1133+ 92B5              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92B5
1135+ 92B5 CD D1 90         call Detecta_colision_nave_entidad
1136+ 92B8
1137+ 92B8 21 30 8A         ld hl,Impacto2
1138+ 92BB CB 5E            bit 3,(hl)
1139+ 92BD C0               ret nz                                               ; Existe colisión, RET.
1140+ 92BE
1141+ 92BE              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92BE              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92BE
1144+ 92BE 21 30 8A     1 ld hl,Impacto2
1145+ 92C1 CB 4E            bit 1,(hl)
1146+ 92C3 28 07            jr z,2F
1147+ 92C5
1148+ 92C5 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92C8 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92CA 18 0B            jr 3F
1151+ 92CC
1152+ 92CC 21 30 8A     2 ld hl,Impacto2
1153+ 92CF CB 46            bit 0,(hl)
1154+ 92D1 C8               ret z
1155+ 92D2
1156+ 92D2              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92D2
1158+ 92D2 21 F6 89         ld hl,Ctrl_1
1159+ 92D5 CB D6            set 2,(hl)
1160+ 92D7
1161+ 92D7 C9           3 ret
1162+ 92D8
1163+ 92D8              ; -----------------------------------------------------------------
1164+ 92D8              ;
1165+ 92D8              ;   19/7/23
1166+ 92D8              ;
1167+ 92D8              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92D8
1169+ 92D8 AF           Limpia_Coordenadas_X xor a
1170+ 92D9 06 06            ld b,6
1171+ 92DB 21 35 8A         ld hl,Coordenadas_X_Amadeus
1172+ 92DE 77           1 ld (hl),a
1173+ 92DF 23               inc hl
1174+ 92E0 10 FC            djnz 1B
1175+ 92E2 C9               ret
1176+ 92E3
1177+ 92E3              ; -----------------------------------------------------------------
1178+ 92E3              ;
1179+ 92E3              ;   25/04/23
1180+ 92E3              ;
1181+ 92E3
1182+ 92E3              Determina_resultado_comparativa
1183+ 92E3
1184+ 92E3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92E3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92E3              ;
1187+ 92E3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92E3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92E3              ;
1190+ 92E3              ;   SBC HL,DE
1191+ 92E3
1192+ 92E3              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92E3              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92E3
1195+ 92E3              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92E3              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92E3
1198+ 92E3
1199+ 92E3 3A C7 89         ld a,(Cuad_objeto)
1200+ 92E6 FE 02            cp 2
1201+ 92E8 28 26            jr z,2F
1202+ 92EA 38 24            jr c,2F
1203+ 92EC
1204+ 92EC              ; Cuadrantes 3º y 4º
1205+ 92EC
1206+ 92EC E6 01            and 1
1207+ 92EE 28 10            jr z,4F
1208+ 92F0
1209+ 92F0              ; Cuadrante 3º
1210+ 92F0
1211+ 92F0 7C               ld a,h
1212+ 92F1 06 00            ld b,0
1213+ 92F3
1214+ 92F3 CD 7E 93         call Compara_cositas_H3
1215+ 92F6
1216+ 92F6 04               inc b
1217+ 92F7 05               dec b
1218+ 92F8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92F9
1220+ 92F9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92FA 06 00            ld b,0
1222+ 92FC
1223+ 92FC CD 90 93         call Compara_cositas_L3
1224+ 92FF C9               ret
1225+ 9300
1226+ 9300              ; Cuadrante 4º
1227+ 9300
1228+ 9300 7C           4 ld a,h
1229+ 9301 06 00            ld b,0
1230+ 9303
1231+ 9303 CD A2 93         call Compara_cositas_H4
1232+ 9306
1233+ 9306 04               inc b
1234+ 9307 05               dec b
1235+ 9308 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9309
1237+ 9309 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 930A 06 00            ld b,0
1239+ 930C
1240+ 930C CD B8 93         call Compara_cositas_L4
1241+ 930F C9               ret
1242+ 9310
1243+ 9310              ; Cuadrantes 1º y 2º.
1244+ 9310
1245+ 9310 28 10        2 jr z,3F
1246+ 9312
1247+ 9312              ; 1er Cuadrante
1248+ 9312
1249+ 9312 7C               ld a,h
1250+ 9313 06 00            ld b,0
1251+ 9315
1252+ 9315 CD 56 93         call Compara_cositas_H1
1253+ 9318
1254+ 9318 04               inc b
1255+ 9319 05               dec b
1256+ 931A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 931B
1258+ 931B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 931C 06 00            ld b,0
1260+ 931E
1261+ 931E CD 6C 93         call Compara_cositas_L1
1262+ 9321 C9               ret
1263+ 9322
1264+ 9322
1265+ 9322              ; 2º Cuadrante
1266+ 9322
1267+ 9322 7C           3 ld a,h
1268+ 9323 06 00            ld b,0
1269+ 9325
1270+ 9325 CD 32 93         call Compara_cositas_H2
1271+ 9328
1272+ 9328 04               inc b
1273+ 9329 05               dec b
1274+ 932A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 932B
1276+ 932B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 932C 06 00            ld b,0
1278+ 932E
1279+ 932E CD 44 93         call Compara_cositas_L2
1280+ 9331 C9               ret
1281+ 9332
1282+ 9332 A7           Compara_cositas_H2 and a
1283+ 9333 28 0D            jr z,1F
1284+ 9335              ;    cp $fd
1285+ 9335              ;    jr z,1F
1286+ 9335              ;    cp $fe
1287+ 9335              ;    jr z,1F
1288+ 9335 FE FF            cp $ff
1289+ 9337 28 09            jr z,1F
1290+ 9339 FE 01            cp $01
1291+ 933B 28 05            jr z,1F
1292+ 933D FE 02            cp $02
1293+ 933F 28 01            jr z,1F
1294+ 9341 C0               ret nz
1295+ 9342 04           1 inc b
1296+ 9343 C9               ret
1297+ 9344
1298+ 9344 A7           Compara_cositas_L2 and a
1299+ 9345 28 0D            jr z,1F
1300+ 9347              ;    cp $fd
1301+ 9347              ;    jr z,1F
1302+ 9347 FE FE            cp $fe
1303+ 9349 28 09            jr z,1F
1304+ 934B FE FF            cp $ff
1305+ 934D 28 05            jr z,1F
1306+ 934F FE 01            cp $01
1307+ 9351 28 01            jr z,1F
1308+ 9353              ;    cp $02
1309+ 9353              ;    jr z,1F
1310+ 9353 C0               ret nz
1311+ 9354 04           1 inc b
1312+ 9355 C9               ret
1313+ 9356
1314+ 9356 A7           Compara_cositas_H1 and a
1315+ 9357 28 11            jr z,1F
1316+ 9359              ;    cp $fd
1317+ 9359              ;    jr z,1F
1318+ 9359              ;    cp $fe
1319+ 9359              ;    jr z,1F
1320+ 9359 FE FF            cp $ff
1321+ 935B 28 0D            jr z,1F
1322+ 935D FE 01            cp $01
1323+ 935F 28 09            jr z,1F
1324+ 9361 FE 02            cp $02
1325+ 9363 28 05            jr z,1F
1326+ 9365 FE 03            cp $03
1327+ 9367 28 01            jr z,1F
1328+ 9369 C0               ret nz
1329+ 936A 04           1 inc b
1330+ 936B C9               ret
1331+ 936C
1332+ 936C A7           Compara_cositas_L1 and a
1333+ 936D 28 0D            jr z,1F
1334+ 936F              ;    cp $fd
1335+ 936F              ;    jr z,1F
1336+ 936F              ;    cp $fe
1337+ 936F              ;    jr z,1F
1338+ 936F              ;    cp $ff
1339+ 936F              ;    jr z,1F
1340+ 936F FE 01            cp $01
1341+ 9371 28 09            jr z,1F
1342+ 9373 FE 02            cp $02
1343+ 9375 28 05            jr z,1F
1344+ 9377 FE 03            cp $03
1345+ 9379 28 01            jr z,1F
1346+ 937B C0               ret nz
1347+ 937C 04           1 inc b
1348+ 937D C9               ret
1349+ 937E
1350+ 937E A7           Compara_cositas_H3 and a
1351+ 937F 28 0D            jr z,1F
1352+ 9381              ;    cp $fd
1353+ 9381              ;    jr z,1F
1354+ 9381 FE FE            cp $fe
1355+ 9383 28 09            jr z,1F
1356+ 9385 FE FF            cp $ff
1357+ 9387 28 05            jr z,1F
1358+ 9389 FE 01            cp $01
1359+ 938B 28 01            jr z,1F
1360+ 938D              ;    cp $02
1361+ 938D              ;    jr z,1F
1362+ 938D              ;    cp $03
1363+ 938D              ;    jr z,1F
1364+ 938D C0               ret nz
1365+ 938E 04           1 inc b
1366+ 938F C9               ret
1367+ 9390
1368+ 9390 A7           Compara_cositas_L3 and a
1369+ 9391 28 0D            jr z,1F
1370+ 9393              ;    cp $fd
1371+ 9393              ;    jr z,1F
1372+ 9393              ;    cp $fe
1373+ 9393              ;    jr z,1F
1374+ 9393              ;    cp $ff
1375+ 9393              ;    jr z,1F
1376+ 9393 FE 01            cp $01
1377+ 9395 28 09            jr z,1F
1378+ 9397 FE 02            cp $02
1379+ 9399 28 05            jr z,1F
1380+ 939B FE 03            cp $03
1381+ 939D 28 01            jr z,1F
1382+ 939F C0               ret nz
1383+ 93A0 04           1 inc b
1384+ 93A1 C9               ret
1385+ 93A2
1386+ 93A2 A7           Compara_cositas_H4 and a
1387+ 93A3 28 11            jr z,1F
1388+ 93A5 FE FD            cp $fd
1389+ 93A7 28 0D            jr z,1F
1390+ 93A9 FE FE            cp $fe
1391+ 93AB 28 09            jr z,1F
1392+ 93AD FE FF            cp $ff
1393+ 93AF 28 05            jr z,1F
1394+ 93B1 FE 01            cp $01
1395+ 93B3 28 01            jr z,1F
1396+ 93B5              ;    cp $02
1397+ 93B5              ;    jr z,1F
1398+ 93B5              ;    cp $03
1399+ 93B5              ;    jr z,1F
1400+ 93B5 C0               ret nz
1401+ 93B6 04           1 inc b
1402+ 93B7 C9               ret
1403+ 93B8
1404+ 93B8 A7           Compara_cositas_L4 and a
1405+ 93B9 28 0D            jr z,1F
1406+ 93BB              ;    cp $fd
1407+ 93BB              ;    jr z,1F
1408+ 93BB FE FE            cp $fe
1409+ 93BD 28 09            jr z,1F
1410+ 93BF FE FF            cp $ff
1411+ 93C1 28 05            jr z,1F
1412+ 93C3 FE 01            cp $01
1413+ 93C5 28 01            jr z,1F
1414+ 93C7              ;    cp $02
1415+ 93C7              ;    jr z,1F
1416+ 93C7              ;    cp $03
1417+ 93C7              ;    jr z,1F
1418+ 93C7 C0               ret nz
1419+ 93C8 04           1 inc b
1420+ 93C9 C9               ret
# file closed: Disparo.asm
1404  93CA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93CA              ; ******************************************************************************************************************************************************************************************
   2+ 93CA              ;
   3+ 93CA              ; 26/06/23
   4+ 93CA              ;
   5+ 93CA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93CA
   7+ 93CA CD AE 96     Draw call Prepara_draw
   8+ 93CD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93CE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93CF 28 05        	jr z,2F
  11+ 93D1
  12+ 93D1 3A C7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93D4 18 0C        	jr 1F
  14+ 93D6
  15+ 93D6 2A C5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93D9 22 B5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93DC CD 6B 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93DF              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93DF CD BF 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93E2
  21+ 93E2 3A E1 89     1 ld a,(Ctrl_0)
  22+ 93E5 CB 6F        	bit 5,a
  23+ 93E7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93E9
  25+ 93E9 CD 01 94     	call Comprueba_limite_horizontal
  26+ 93EC CD 91 94     	call Comprueba_limite_vertical
  27+ 93EF
  28+ 93EF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93EF              ; -----------------------
  30+ 93EF              ; -----------------------
  31+ 93EF              ; -----------------------
  32+ 93EF
  33+ 93EF CD DE 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93F2 CD 15 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93F5 CD 74 96     	call Define_rutina_de_impresion
  36+ 93F8
  37+ 93F8 3A E1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93FB CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93FD 32 E1 89     	ld (Ctrl_0),a
  40+ 9400
  41+ 9400 C9           	ret
  42+ 9401
  43+ 9401              ; *******************************************************************************************************************************************************************************************
  44+ 9401              ;	21/01/23
  45+ 9401              ;
  46+ 9401              ; 	Comprueba_limite_horizontal.
  47+ 9401              ;
  48+ 9401              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9401              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9401              ;
  51+ 9401              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9401              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9401              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9401              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9401
  56+ 9401
  57+ 9401
  58+ 9401 3A E1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9404 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9406 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9408 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 940A 32 E1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 940D 18 09            jr 6F
  64+ 940F CB 5F        1 bit 3,a
  65+ 9411 28 0A            jr z,2F
  66+ 9413 E6 F7            and $f7
  67+ 9415 32 E1 89         ld (Ctrl_0),a
  68+ 9418 CD 6B 95     6 call Inicializacion
  69+ 941B 18 5B            jr 5F
  70+ 941D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 941E
  72+ 941E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 941E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 941E
  75+ 941E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 941F 2A F1 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9422 CD 8D 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9425 67           	ld h,a
  79+ 9426 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9427 CD 8D 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 942A 67           	ld h,a
  82+ 942B A7           	and a
  83+ 942C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 942E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 942F 3A C7 89     	ld a,(Cuad_objeto)
  86+ 9432 FE 02        	cp 2
  87+ 9434 38 1E        	jr c,3F
  88+ 9436 28 1C        	jr z,3F
  89+ 9438 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9439 28 23            jr z,7F
  91+ 943B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 943D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 943F E1           	pop hl
  94+ 9440
  95+ 9440              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9440              ; _para indicar con E="2" en caso necesario.
  97+ 9440
  98+ 9440 E5               push hl
  99+ 9441 C5               push bc
 100+ 9442 CD 8D 99     	call calcula_tercio
 101+ 9445 FE 01        	cp 1
 102+ 9447 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9449 CD 79 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 944C 28 26            jr z,9F
 105+ 944E 38 24            jr c,9F
 106+ 9450 1E 00        11 ld e,0
 107+ 9452 18 22            jr 8F
 108+ 9454 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9455 28 07        	jr z, 7F
 110+ 9457 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9459 1E 00         	ld e,0
 112+ 945B E1           	pop hl
 113+ 945C 18 04        	jr 4F
 114+ 945E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9460 18 15            jr 10F
 116+ 9462
 117+ 9462              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9462              ; _para indicar con E="2" en caso necesario.
 119+ 9462
 120+ 9462 E5           4 push hl
 121+ 9463 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9464 CD 8D 99     	call calcula_tercio
 123+ 9467 FE 01        	cp 1
 124+ 9469 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 946B CD 79 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 946E 28 04            jr z,9F
 127+ 9470 30 02            jr nc,9F
 128+ 9472 18 02        	jr 8F
 129+ 9474 1E 02        9 ld e,2
 130+ 9476 C1           8 pop bc
 131+ 9477 E1           10 pop hl
 132+ 9478 C9           5 ret
 133+ 9479
 134+ 9479              ; --------------------
 135+ 9479              ;
 136+ 9479              ; 25/08/22
 137+ 9479
 138+ 9479 CD 8D 99     Comprueba_centro call calcula_tercio
 139+ 947C 67               ld h,a
 140+ 947D 08           	ex af,af
 141+ 947E FE 02        	cp 2
 142+ 9480 38 07        	jr c,1F
 143+ 9482 28 05        	jr z,1F
 144+ 9484 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9487 18 03        	jr 2F
 146+ 9489 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 948C 08           2 ex af,af
 148+ 948D A7               and a
 149+ 948E ED 42            sbc hl,bc
 150+ 9490 C9               ret
 151+ 9491
 152+ 9491              ; *********************************************************************************************************************************************************************************************
 153+ 9491              ;
 154+ 9491              ;   16/8/22
 155+ 9491              ;
 156+ 9491              ;	Comprueba_limite_vertical
 157+ 9491              ;
 158+ 9491              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9491              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9491              ;
 161+ 9491
 162+ 9491 2A B5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9494 7D           	ld a,l
 164+ 9495 E6 1F        	and $1F
 165+ 9497 57           	ld d,a
 166+ 9498 3A F3 89     	ld a,(Limite_vertical)
 167+ 949B BA           	cp d 											; Límite - Posición.
 168+ 949C 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 949D 3A C7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94A0 CB 47        	bit 0,a
 171+ 94A2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94A4
 173+ 94A4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94A4
 175+ 94A4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94A5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94A7
 178+ 94A7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94A7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94A7
 181+ 94A7 3A B9 89         ld a,(Coordenada_X)
 182+ 94AA 16 0F            ld d,Centro_izquierda
 183+ 94AC A7               and a
 184+ 94AD 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94AE 28 1E            jr z,3F
 186+ 94B0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94B2              ;                                                    ; _salimos sin modificar nada.
 188+ 94B2 18 0E            jr 2F
 189+ 94B4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94B5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94B7
 192+ 94B7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94B7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94B7
 195+ 94B7 3A B9 89         ld a,(Coordenada_X)
 196+ 94BA 16 10            ld d,Centro_derecha
 197+ 94BC A7               and a
 198+ 94BD 92               sub d
 199+ 94BE 28 0E            jr z,3F
 200+ 94C0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94C2              ;                                                    ; _salimos sin modificar nada.
 202+ 94C2 CB 43        2 bit 0,e
 203+ 94C4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94C6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94C7 CD 5B 95         call Modificaccionne
 206+ 94CA C1           	pop bc
 207+ 94CB CD 6B 95         call Inicializacion
 208+ 94CE C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94CF
 210+ 94CF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94CF
 212+ 94CF C5           4 push bc
 213+ 94D0 01 B4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94D3 0A           	ld a,(bc)
 215+ 94D4 3D           	dec a
 216+ 94D5 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94D6 7D           	ld a,l
 218+ 94D7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94D8 CB 47        	bit 0,a
 220+ 94DA 28 03        	jr z,5F
 221+ 94DC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94DD 18 2E        	jr 7F
 223+ 94DF
 224+ 94DF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94DF
 226+ 94DF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94E0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94E1 3A E1 89     	ld a,(Ctrl_0)
 229+ 94E4 CB 4F        	bit 1,a
 230+ 94E6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94E8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94E9
 233+ 94E9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94E9
 235+ 94E9 1C               inc e
 236+ 94EA 1D               dec e
 237+ 94EB 20 07            jr nz,12F
 238+ 94ED 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94EE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94EF 22 B5 89     	ld (Posicion_actual),hl
 241+ 94F2 18 44        13 jr 9F
 242+ 94F4 CB 43        12 bit 0,e
 243+ 94F6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94F8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94F8 C1           	pop bc
 246+ 94F9 18 D3        	jr 3B
 247+ 94FB 80           14 add b
 248+ 94FC 6F               ld l,a
 249+ 94FD 22 B5 89     	ld (Posicion_actual),hl
 250+ 9500 CD 5B 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9503 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9505 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9507 32 E1 89         ld (Ctrl_0),a
 254+ 950A F1           	pop af
 255+ 950B 18 2B        	jr 9F
 256+ 950D
 257+ 950D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 950D
 259+ 950D F5           7 push af
 260+ 950E 3A E1 89     	ld a,(Ctrl_0)
 261+ 9511 CB 47        	bit 0,a
 262+ 9513 20 1D        	jr nz,8F
 263+ 9515 F1           	pop af
 264+ 9516
 265+ 9516              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9516
 267+ 9516 1C           	inc e
 268+ 9517 1D               dec e
 269+ 9518 20 07            jr nz,10F
 270+ 951A 90           	sub b
 271+ 951B 6F               ld l,a
 272+ 951C 22 B5 89     	ld (Posicion_actual),hl
 273+ 951F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9521              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9521 CB 43        10 bit 0,e
 276+ 9523 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9525              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9525 C1           	pop bc
 279+ 9526 18 A6        	jr 3B
 280+ 9528 90           16 sub b
 281+ 9529 6F               ld l,a
 282+ 952A 22 B5 89     	ld (Posicion_actual),hl
 283+ 952D CD 5B 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9530 18 06            jr 9F
 285+ 9532 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9534 32 E1 89         ld (Ctrl_0),a
 287+ 9537 F1           	pop af
 288+ 9538 C1           9 pop bc
 289+ 9539 1E 00        	ld e,0
 290+ 953B CD 6B 95         call Inicializacion
 291+ 953E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 953F 08           	ex af,af
 293+ 9540 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9541 18 8B            jr 3B
 295+ 9543
 296+ 9543              ; --------------------
 297+ 9543
 298+ 9543 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9545 CD C9 96     1 call PreviousScan
 300+ 9548 10 FB            djnz 1B
 301+ 954A 22 B5 89     	ld (Posicion_actual),hl
 302+ 954D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 954E C9           	ret
 304+ 954F
 305+ 954F              ; --------------------
 306+ 954F
 307+ 954F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9551 CD BA 96     1 call NextScan
 309+ 9554 10 FB            djnz 1B
 310+ 9556 22 B5 89     	ld (Posicion_actual),hl
 311+ 9559 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 955A C9           	ret
 313+ 955B
 314+ 955B              ; --------------------
 315+ 955B              ;
 316+ 955B              ;	22/01/23
 317+ 955B              ;
 318+ 955B              ;	E="1". Hemos cambiado de cuadrante.
 319+ 955B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 955B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 955B
 322+ 955B
 323+ 955B              Modificaccionne
 324+ 955B
 325+ 955B 3A C7 89     	ld a,(Cuad_objeto)
 326+ 955E FE 02        	cp 2
 327+ 9560 CC 43 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9563 DC 43 95         call c,Modifica_Pos_actual
 329+ 9566 C8           	ret z
 330+ 9567 CD 4F 95         call Modifica_Pos_actual2
 331+ 956A C9               ret
 332+ 956B
 333+ 956B              ; *************************************************************************************************************************************************************************************************
 334+ 956B              ;
 335+ 956B              ;	13/8/22
 336+ 956B              ;
 337+ 956B              ;	Inicializacion
 338+ 956B              ;
 339+ 956B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 956B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 956B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 956B              ;
 343+ 956B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 956B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 956B              ;	_ desaparece/aparece.
 346+ 956B
 347+ 956B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 956B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 956B              ;
 350+ 956B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 956B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 956B              ; 		   [E] ="0"
 353+ 956B
 354+ 956B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 956B
 356+ 956B CD 8D 99     Inicializacion call calcula_tercio
 357+ 956E 28 36        	jr z,primit
 358+ 9570 E6 02        	and 2
 359+ 9572 20 07        	jr nz,segmit
 360+ 9574 7D           	ld a,l
 361+ 9575 FE 7F        	cp $7f
 362+ 9577 38 2D        	jr c,primit
 363+ 9579 28 2B        	jr z,primit
 364+ 957B CD D8 95     segmit call column
 365+ 957E 38 13        	jr c,tercuad
 366+ 9580 3E 04        cuarcuad ld a,4
 367+ 9582 32 C7 89     	ld (Cuad_objeto),a
 368+ 9585 21 20 48     	ld hl,$4820
 369+ 9588 22 F1 89     	ld (Limite_horizontal),hl
 370+ 958B 21 F3 89     	ld hl,Limite_vertical
 371+ 958E 36 0D        	ld (hl),$0d
 372+ 9590 08           	ex af,af
 373+ 9591 18 3C        	jr 1F
 374+ 9593              tercuad
 375+ 9593 3E 03        	ld a,3
 376+ 9595 32 C7 89     	ld (Cuad_objeto),a
 377+ 9598 21 20 48     	ld hl,$4820
 378+ 959B 22 F1 89     	ld (Limite_horizontal),hl
 379+ 959E 21 F3 89     	ld hl,Limite_vertical
 380+ 95A1 36 12        	ld (hl),$12
 381+ 95A3 08           	ex af,af
 382+ 95A4 18 29        	jr 1F
 383+ 95A6 CD D8 95     primit call column
 384+ 95A9 38 13        	jr c, primcuad
 385+ 95AB              segcuad
 386+ 95AB 3E 02        	ld a,2
 387+ 95AD 32 C7 89     	ld (Cuad_objeto),a
 388+ 95B0 21 C0 4F     	ld hl,$4fc0
 389+ 95B3 22 F1 89     	ld (Limite_horizontal),hl
 390+ 95B6 21 F3 89     	ld hl,Limite_vertical
 391+ 95B9 36 0D        	ld (hl),$0d
 392+ 95BB 08           	ex af,af
 393+ 95BC 18 11        	jr 1F
 394+ 95BE              primcuad
 395+ 95BE 3E 01        	ld a,1
 396+ 95C0 32 C7 89     	ld (Cuad_objeto),a
 397+ 95C3 21 C0 4F     	ld hl,$4fc0
 398+ 95C6 22 F1 89     	ld (Limite_horizontal),hl
 399+ 95C9 21 F3 89     	ld hl,Limite_vertical
 400+ 95CC 36 12        	ld (hl),$12
 401+ 95CE 08           	ex af,af
 402+ 95CF CD 18 9D     1 call Genera_coordenadas
 403+ 95D2 21 E1 89     	ld hl,Ctrl_0
 404+ 95D5 CB EE        	set 5,(hl)
 405+ 95D7 C9           	ret
 406+ 95D8
 407+ 95D8              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95D8
 409+ 95D8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95D8              ;
 411+ 95D8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95D8
 413+ 95D8 7D           column ld a,l
 414+ 95D9 E6 1F        	and $1f
 415+ 95DB FE 10         	cp $10
 416+ 95DD C9            	ret
 417+ 95DE
 418+ 95DE              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95DE              ;
 420+ 95DE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95DE              ;
 422+ 95DE              ; 14/12/22
 423+ 95DE              ;
 424+ 95DE              ;	Modifica: A y BC.
 425+ 95DE
 426+ 95DE 3A C7 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95E1 E6 01        	and 1
 428+ 95E3 28 17        	jr z,1F
 429+ 95E5
 430+ 95E5              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95E5
 432+ 95E5 3A B9 89     	ld a,(Coordenada_X)
 433+ 95E8 47           	ld b,a
 434+ 95E9 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95EA 79           	ld a,c
 436+ 95EB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95EC 38 08        	jr c,2F
 438+ 95EE 47           	ld b,a
 439+ 95EF 79           	ld a,c
 440+ 95F0 90           	sub b
 441+ 95F1 32 F0 89     	ld (Columnas),a
 442+ 95F4 18 1B        	jr 4F
 443+ 95F6 79           2 ld a,c
 444+ 95F7 32 F0 89     	ld (Columnas),a
 445+ 95FA 18 15        	jr 4F
 446+ 95FC
 447+ 95FC              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95FC
 449+ 95FC 3A B9 89     1 ld a,(Coordenada_X)
 450+ 95FF 81           	add c
 451+ 9600 3D           	dec a
 452+ 9601 D6 1F        	sub $1f
 453+ 9603 38 08        	jr c,3F
 454+ 9605 47           	ld b,a
 455+ 9606 79           	ld a,c
 456+ 9607 90           	sub b
 457+ 9608 32 F0 89     	ld (Columnas),a
 458+ 960B 18 04        	jr 4F
 459+ 960D 79           3 ld a,c
 460+ 960E 32 F0 89     	ld (Columnas),a
 461+ 9611 D9           4 exx
 462+ 9612 4F           	ld c,a
 463+ 9613 D9           	exx
 464+ 9614 C9            ret
 465+ 9615
 466+ 9615              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9615              ;
 468+ 9615              ;   19/7/23
 469+ 9615              ;
 470+ 9615              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9615              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9615              ;
 473+ 9615              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9615              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9615              ;
 476+ 9615              ;	DESTRUYE: HL,B Y A.
 477+ 9615
 478+ 9615 3A C7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9618 FE 02        	cp 2
 480+ 961A 38 18        	jr c,1F
 481+ 961C 28 16        	jr z,1F
 482+ 961E E6 01        	and 1
 483+ 9620 28 0D        	jr z,3F
 484+ 9622
 485+ 9622              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9622
 487+ 9622 CD 68 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9625
 489+ 9625 7D           9 ld a,l
 490+ 9626 E6 1F        	and $1f
 491+ 9628 28 2A        	jr z,7F
 492+ 962A 2B           	dec hl
 493+ 962B 10 F8        	djnz 9B
 494+ 962D 18 25        	jr 7F
 495+ 962F
 496+ 962F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 962F
 498+ 962F 2A B5 89     3 ld hl,(Posicion_actual)
 499+ 9632 18 20        	jr 7F
 500+ 9634
 501+ 9634 28 14        1 jr z,2F
 502+ 9636
 503+ 9636              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9636
 505+ 9636 CD 68 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9639
 507+ 9639 7D           4 ld a,l
 508+ 963A E6 1F        	and $1f
 509+ 963C 28 03        	jr z,6F
 510+ 963E 2B           	dec hl
 511+ 963F 10 F8        	djnz 4B
 512+ 9641 06 0F        6 ld b,15
 513+ 9643 CD C9 96     5 call PreviousScan
 514+ 9646 10 FB        	djnz 5B
 515+ 9648 18 0A        	jr 7F
 516+ 964A
 517+ 964A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 964A
 519+ 964A CD 68 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 964D 06 0F        	ld b,15
 521+ 964F CD C9 96     8 call PreviousScan
 522+ 9652 10 FB        	djnz 8B
 523+ 9654
 524+ 9654 E5           7 push hl
 525+ 9655 DD E1        	pop ix
 526+ 9657
 527+ 9657 2A B7 89     	ld hl,(Puntero_objeto)
 528+ 965A E5           	push hl
 529+ 965B FD E1        	pop iy
 530+ 965D
 531+ 965D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 965D
 533+ 965D 3A E1 89     	ld a,(Ctrl_0)
 534+ 9660 CB 77        	bit 6,a
 535+ 9662 C8           	ret z
 536+ 9663
 537+ 9663              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9663              ; _ entidad / Amadeus´.
 539+ 9663
 540+ 9663 DD 22 3B 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9667
 542+ 9667 C9           	ret
 543+ 9668
 544+ 9668              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9668              ;
 546+ 9668              ;	2/1/23
 547+ 9668              ;
 548+ 9668              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9668              ;
 550+ 9668              ;	Tras esta rutina tenemos:
 551+ 9668              ;
 552+ 9668              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9668              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9668              ;
 555+ 9668              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9668
 557+ 9668 2A B5 89     Operandos ld hl,(Posicion_actual)
 558+ 966B 3A F0 89     	ld a,(Columnas)
 559+ 966E 3D           	dec a
 560+ 966F 20 01        	jr nz,1F
 561+ 9671 3C           	inc a
 562+ 9672 47           1 ld b,a
 563+ 9673 C9           	ret
 564+ 9674
 565+ 9674              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9674              ;
 567+ 9674              ;	3/1/23
 568+ 9674              ;
 569+ 9674              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9674              ;
 571+ 9674              ;	Destruye: A,B,HL y DE.
 572+ 9674
 573+ 9674              Define_rutina_de_impresion
 574+ 9674
 575+ 9674 3A B4 89     	ld a,(Columns)
 576+ 9677 47           	ld b,a
 577+ 9678 3A F0 89     	ld a,(Columnas)
 578+ 967B B8           	cp b
 579+ 967C 20 0D        	jr nz,2f
 580+ 967E
 581+ 967E              ;	La entidad se imprime entera.
 582+ 967E
 583+ 967E 21 5D 97     	ld hl, Indice_entidades_completas
 584+ 9681 E6 01        	and 1
 585+ 9683 28 02        	jr z,1F
 586+ 9685
 587+ 9685 23           	inc hl
 588+ 9686 23           	inc hl
 589+ 9687
 590+ 9687 CD 89 8D     1 call Extrae_address
 591+ 968A C9           	ret		;	ret
 592+ 968B
 593+ 968B              ;	La entidad no se imprime entera en pantalla.
 594+ 968B
 595+ 968B 3A C7 89     2 ld a,(Cuad_objeto)
 596+ 968E E6 01        	and 1
 597+ 9690 28 17        	jr z,3F
 598+ 9692
 599+ 9692              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9692
 601+ 9692 21 61 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9695 3A B4 89     4 ld a,(Columns)
 603+ 9698 E6 01        	and 1
 604+ 969A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 969C
 606+ 969C 23           	inc hl
 607+ 969D 23           	inc hl
 608+ 969E
 609+ 969E 3A F0 89     	ld a,(Columnas)
 610+ 96A1 E6 01        	and 1
 611+ 96A3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96A5
 613+ 96A5 23           	inc hl
 614+ 96A6 23           	inc hl
 615+ 96A7
 616+ 96A7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96A9
 618+ 96A9 21 67 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96AC 18 E7        	jr 4B
 620+ 96AE
 621+ 96AE              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96AE              ;
 623+ 96AE              ;	Prepara_draw
 624+ 96AE              ;
 625+ 96AE              ;	Es una rutina de carga.
 626+ 96AE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96AE              ;
 628+ 96AE              ;	FUNCIONAMIENTO:
 629+ 96AE              ;
 630+ 96AE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96AE              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96AE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96AE              ;
 634+ 96AE              ;	DESTRUYE:
 635+ 96AE              ;
 636+ 96AE              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96AE
 638+ 96AE 21 B3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96B1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96B2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96B3 4E           	ld c,(hl)
 642+ 96B4 2A B5 89     	ld hl,(Posicion_actual)
 643+ 96B7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96B9 C9           	ret
 645+ 96BA
 646+ 96BA              ;----------------------------------------------------------------------------------------------------------------
 647+ 96BA              ;
 648+ 96BA              ;	5/08/22
 649+ 96BA              ;
 650+ 96BA              ;   NextScan.
 651+ 96BA              ;
 652+ 96BA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96BA              ;
 654+ 96BA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96BA              ;
 656+ 96BA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96BA              ;
 658+ 96BA              ;       DESTRUIDOS: AF y HL !!!
 659+ 96BA              ;
 660+ 96BA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96BA              ;
 662+ 96BA
 663+ 96BA 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96BB 7C               ld a,h
 665+ 96BC E6 07            and 7
 666+ 96BE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96BF
 668+ 96BF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96C0 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96C2 6F               ld l,a
 671+ 96C3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96C4
 673+ 96C4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96C5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96C7 67               ld h,a
 676+ 96C8 C9               ret
 677+ 96C9
 678+ 96C9              ;----------------------------------------------------------------------------------------------------------------
 679+ 96C9              ;
 680+ 96C9              ;	5/08/22
 681+ 96C9              ;
 682+ 96C9              ;   PreviousScan.
 683+ 96C9              ;
 684+ 96C9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96C9              ;
 686+ 96C9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96C9              ;
 688+ 96C9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96C9              ;
 690+ 96C9              ;       DESTRUIDOS: AF y HL !!!
 691+ 96C9              ;
 692+ 96C9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96C9              ;
 694+ 96C9
 695+ 96C9 7C           PreviousScan ld a,h
 696+ 96CA 25               dec h               ; Dec H.
 697+ 96CB E6 07            and 7
 698+ 96CD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96CE
 700+ 96CE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96CF D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96D1 6F               ld l,a
 703+ 96D2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96D3
 705+ 96D3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96D4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96D6 67               ld h,a
 708+ 96D7 C9               ret
 709+ 96D8
 710+ 96D8              ; -----------------------------------------------------------------------------------
 711+ 96D8              ;
 712+ 96D8              ;	31/7/23
 713+ 96D8              ;
 714+ 96D8              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96D8              ;	Extrae fotos de Album_de_fotos.
 716+ 96D8
 717+ 96D8              Extrae_foto_entidades
 718+ 96D8
 719+ 96D8 3A 3E 8A     	ld a,(Contador_de_frames)
 720+ 96DB FE 1E        	cp $1e
 721+ 96DD 28 FE        	jr z,$
 722+ 96DF
 723+ 96DF 21 01 70     	ld hl,Album_de_fotos+1
 724+ 96E2 7E           	ld a,(hl)
 725+ 96E3 A7           	and a
 726+ 96E4 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 96E5
 728+ 96E5 3A 02 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96E8 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 96E9 C8           	ret z
 731+ 96EA
 732+ 96EA              ; -----------------------------------
 733+ 96EA
 734+ 96EA ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96EE 31 00 70     	ld sp,Album_de_fotos
 736+ 96F1
 737+ 96F1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96F3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96F4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96F5
 741+ 96F5 ED 73 09 8A  	ld (Stack_2),sp
 742+ 96F9 ED 7B 07 8A  	ld sp,(Stack)
 743+ 96FD
 744+ 96FD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96FD
 746+ 96FD 3E CD        	ld a,$cd
 747+ 96FF 32 07 97     	ld (Imprime),a
 748+ 9702 EB           	ex de,hl
 749+ 9703 22 08 97     	ld (Imprime+1),hl
 750+ 9706 EB           	ex de,hl
 751+ 9707
 752+ 9707              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 9707
 754+ 9707 00 00 00     Imprime db 0,0,0
 755+ 970A
 756+ 970A 3A 02 8A     	ld a,(Numero_de_malotes)
 757+ 970D 3D           	dec a
 758+ 970E 28 09        	jr z,1F
 759+ 9710 32 02 8A      	ld (Numero_de_malotes),a
 760+ 9713
 761+ 9713 ED 7B 09 8A   	ld sp,(Stack_2)
 762+ 9717 18 D8        	jr 2B
 763+ 9719
 764+ 9719 AF           1 xor a
 765+ 971A 32 09 8A     	ld (Stack_2),a
 766+ 971D C9           	ret
 767+ 971E
 768+ 971E              ; -----------------------------------------------------------------------------------
 769+ 971E              ;
 770+ 971E              ;	28/2/23
 771+ 971E              ;
 772+ 971E              ;	Pinta los disparos generados.
 773+ 971E
 774+ 971E              Extrae_foto_disparos
 775+ 971E
 776+ 971E 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 777+ 9721 7E               ld a,(hl)
 778+ 9722 A7               and a
 779+ 9723 C8               ret z
 780+ 9724
 781+ 9724 3A 2B 8A     	ld a,(Numero_de_disparotes)
 782+ 9727 A7           	and a
 783+ 9728 C8           	ret z
 784+ 9729 ED 73 07 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 785+ 972D 31 0D 72     	ld sp,Album_de_fotos_disparos
 786+ 9730
 787+ 9730 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 788+ 9732 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 789+ 9733 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 790+ 9734
 791+ 9734 ED 73 09 8A  	ld (Stack_2),sp
 792+ 9738 ED 7B 07 8A  	ld sp,(Stack)
 793+ 973C
 794+ 973C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 795+ 973C
 796+ 973C 3E CD        	ld a,$cd
 797+ 973E 32 46 97     	ld (Imprime2),a
 798+ 9741 EB           	ex de,hl
 799+ 9742 22 47 97     	ld (Imprime2+1),hl
 800+ 9745 EB           	ex de,hl
 801+ 9746
 802+ 9746              ; Ejecuta la llamada:	CALL $xx,xx
 803+ 9746
 804+ 9746 00 00 00     Imprime2 db 0,0,0
 805+ 9749
 806+ 9749 3A 2B 8A     	ld a,(Numero_de_disparotes)
 807+ 974C 3D           	dec a
 808+ 974D 28 09        	jr z,1F
 809+ 974F 32 2B 8A      	ld (Numero_de_disparotes),a
 810+ 9752
 811+ 9752 ED 7B 09 8A  	ld sp,(Stack_2)
 812+ 9756 18 D8        	jr 2B
 813+ 9758
 814+ 9758 AF           1 xor a
 815+ 9759 32 09 8A     	ld (Stack_2),a
 816+ 975C C9           	ret
 817+ 975D
# file closed: Draw_XOR.asm
1405  975D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 975D              ;   índices de Rutinas de impresión.
   2+ 975D
   3+ 975D 6D 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 975F 9A 97            defw Pinta_Amadeus_3x2
   5+ 9761
   6+ 9761 F0 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9763 90 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9765 44 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9767
  10+ 9767 1A 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9769 1E 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 976B D2 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 976D
  14+ 976D
  15+ 976D              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 976D              ;
  17+ 976D              ;   12/12/22
  18+ 976D              ;
  19+ 976D              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 976D              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 976D              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 976D              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 976D              ;
  24+ 976D              ;   Modifica: DE y HL.
  25+ 976D
  26+ 976D ED 73 07 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9771 FD F9        	ld sp,iy
  28+ 9773 06 10            ld b,16
  29+ 9775 D1           1 pop de
  30+ 9776 7B               ld a,e
  31+ 9777 AE               xor (hl)
  32+ 9778 77           	ld (hl),a
  33+ 9779 23           	inc hl
  34+ 977A 7A               ld a,d
  35+ 977B AE               xor (hl)
  36+ 977C 77           	ld (hl),a
  37+ 977D 2B           	dec hl
  38+ 977E 24           	inc h
  39+ 977F 7C               ld a,h
  40+ 9780 E6 07            and 7
  41+ 9782 20 0A            jr nz,2F
  42+ 9784 7D               ld a,l
  43+ 9785 C6 20            add a,$20
  44+ 9787 6F               ld l,a
  45+ 9788 38 04            jr c,2F
  46+ 978A 7C               ld a,h
  47+ 978B D6 08            sub 8
  48+ 978D 67               ld h,a
  49+ 978E 7C           2 ld a,h
  50+ 978F FE 58            cp $58
  51+ 9791 28 02            jr z,3F
  52+ 9793 10 E0            djnz 1B
  53+ 9795 ED 7B 07 8A  3 ld sp,(Stack)
  54+ 9799 C9           	ret
  55+ 979A
  56+ 979A ED 73 07 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 979E FD F9        	ld sp,iy
  58+ 97A0 06 08            ld b,8
  59+ 97A2 D1           1 pop de
  60+ 97A3 7B               ld a,e
  61+ 97A4 AE               xor (hl)
  62+ 97A5 77           	ld (hl),a
  63+ 97A6 23           	inc hl
  64+ 97A7 7A               ld a,d
  65+ 97A8 AE               xor (hl)
  66+ 97A9 77           	ld (hl),a
  67+ 97AA 23           	inc hl
  68+ 97AB D1           	pop de
  69+ 97AC 7B               ld a,e
  70+ 97AD AE               xor (hl)
  71+ 97AE 77           	ld (hl),a
  72+ 97AF 2B           	dec hl
  73+ 97B0 2B           	dec hl
  74+ 97B1 24           	inc h
  75+ 97B2 7C               ld a,h
  76+ 97B3 E6 07            and 7
  77+ 97B5 20 0A            jr nz,2F
  78+ 97B7 7D               ld a,l
  79+ 97B8 C6 20            add a,$20
  80+ 97BA 6F               ld l,a
  81+ 97BB 38 04            jr c,2F
  82+ 97BD 7C               ld a,h
  83+ 97BE D6 08            sub 8
  84+ 97C0 67               ld h,a
  85+ 97C1 7C           2 ld a,h
  86+ 97C2 FE 58            cp $58
  87+ 97C4 28 25            jr z,4F
  88+ 97C6 7A               ld a,d
  89+ 97C7 AE               xor (hl)
  90+ 97C8 77               ld (hl),a
  91+ 97C9 D1           	pop de
  92+ 97CA 23           	inc hl
  93+ 97CB 7B               ld a,e
  94+ 97CC AE               xor (hl)
  95+ 97CD 77           	ld (hl),a
  96+ 97CE 23           	inc hl
  97+ 97CF 7A               ld a,d
  98+ 97D0 AE               xor (hl)
  99+ 97D1 77           	ld (hl),a
 100+ 97D2 2B           	dec hl
 101+ 97D3 2B           	dec hl
 102+ 97D4 24           	inc h
 103+ 97D5 7C               ld a,h
 104+ 97D6 E6 07            and 7
 105+ 97D8 20 0A            jr nz,3F
 106+ 97DA 7D               ld a,l
 107+ 97DB C6 20            add a,$20
 108+ 97DD 6F               ld l,a
 109+ 97DE 38 04            jr c,3F
 110+ 97E0 7C               ld a,h
 111+ 97E1 D6 08            sub 8
 112+ 97E3 67               ld h,a
 113+ 97E4 7C           3 ld a,h
 114+ 97E5 FE 58            cp $58
 115+ 97E7 28 02            jr z,4F
 116+ 97E9 10 B7            djnz 1B
 117+ 97EB ED 7B 07 8A  4 ld sp,(Stack)
 118+ 97EF C9           	ret
 119+ 97F0
 120+ 97F0              ; ---------------------------------------------------
 121+ 97F0
 122+ 97F0 ED 73 07 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97F4 FD F9        	ld sp,iy
 124+ 97F6
 125+ 97F6              ; >>>
 126+ 97F6
 127+ 97F6 06 10            ld b,16
 128+ 97F8 D1           1 pop de
 129+ 97F9 7A           	ld a,d
 130+ 97FA AE           	xor (hl)
 131+ 97FB 77           	ld (hl),a
 132+ 97FC 24           	inc h
 133+ 97FD 7C               ld a,h
 134+ 97FE E6 07            and 7
 135+ 9800 20 0C            jr nz,2F
 136+ 9802 7D               ld a,l
 137+ 9803 C6 20            add a,$20
 138+ 9805 6F               ld l,a
 139+ 9806 38 06            jr c,2F
 140+ 9808 7C               ld a,h
 141+ 9809 D6 08            sub 8
 142+ 980B 67               ld h,a
 143+ 980C 18 00            jr 2F
 144+ 980E 7C           2 ld a,h
 145+ 980F FE 58            cp $58
 146+ 9811 28 02            jr z,3F
 147+ 9813 10 E3            djnz 1B
 148+ 9815 ED 7B 07 8A  3 ld sp,(Stack)
 149+ 9819 C9           	ret
 150+ 981A
 151+ 981A ED 73 07 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 981E FD F9        	ld sp,iy
 153+ 9820
 154+ 9820              ; >>>
 155+ 9820
 156+ 9820 06 10            ld b,16
 157+ 9822 D1           1 pop de
 158+ 9823 7B           	ld a,e
 159+ 9824 AE           	xor (hl)
 160+ 9825 77           	ld (hl),a
 161+ 9826 24           	inc h
 162+ 9827 7C               ld a,h
 163+ 9828 E6 07            and 7
 164+ 982A 20 0C            jr nz,2F
 165+ 982C 7D               ld a,l
 166+ 982D C6 20            add a,$20
 167+ 982F 6F               ld l,a
 168+ 9830 38 06            jr c,2F
 169+ 9832 7C               ld a,h
 170+ 9833 D6 08            sub 8
 171+ 9835 67               ld h,a
 172+ 9836 18 00            jr 2F
 173+ 9838 7C           2 ld a,h
 174+ 9839 FE 58            cp $58
 175+ 983B 28 02            jr z,3F
 176+ 983D 10 E3            djnz 1B
 177+ 983F ED 7B 07 8A  3 ld sp,(Stack)
 178+ 9843 C9           	ret
 179+ 9844
 180+ 9844              ; ---------------------------------------------------
 181+ 9844
 182+ 9844 ED 73 07 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9848 FD F9        	ld sp,iy
 184+ 984A 06 08            ld b,8
 185+ 984C D1           1 pop de
 186+ 984D 7A           	ld a,d
 187+ 984E AE           	xor (hl)
 188+ 984F 77           	ld (hl),a
 189+ 9850 23           	inc hl
 190+ 9851 D1           	pop de
 191+ 9852 7B           	ld a,e
 192+ 9853 AE           	xor (hl)
 193+ 9854 77           	ld (hl),a
 194+ 9855 2B           	dec hl
 195+ 9856 24            	inc h
 196+ 9857 7C               ld a,h
 197+ 9858 E6 07            and 7
 198+ 985A 20 0A            jr nz,2F
 199+ 985C 7D               ld a,l
 200+ 985D C6 20            add a,$20
 201+ 985F 6F               ld l,a
 202+ 9860 38 04            jr c,2F
 203+ 9862 7C               ld a,h
 204+ 9863 D6 08            sub 8
 205+ 9865 67               ld h,a
 206+ 9866 7C           2 ld a,h
 207+ 9867 FE 58            cp $58
 208+ 9869 28 20            jr z,4F
 209+ 986B D1               pop de
 210+ 986C 7B           	ld a,e
 211+ 986D AE           	xor (hl)
 212+ 986E 77           	ld (hl),a
 213+ 986F 23           	inc hl
 214+ 9870 7A           	ld a,d
 215+ 9871 AE           	xor (hl)
 216+ 9872 77           	ld (hl),a
 217+ 9873 2B           	dec hl
 218+ 9874 24           	inc h
 219+ 9875 7C               ld a,h
 220+ 9876 E6 07            and 7
 221+ 9878 20 0A            jr nz,3F
 222+ 987A 7D               ld a,l
 223+ 987B C6 20            add a,$20
 224+ 987D 6F               ld l,a
 225+ 987E 38 04            jr c,3F
 226+ 9880 7C               ld a,h
 227+ 9881 D6 08            sub 8
 228+ 9883 67               ld h,a
 229+ 9884 7C           3 ld a,h
 230+ 9885 FE 58            cp $58
 231+ 9887 28 02            jr z,4F
 232+ 9889 10 C1            djnz 1B
 233+ 988B ED 7B 07 8A  4 ld sp,(Stack)
 234+ 988F C9           	ret
 235+ 9890
 236+ 9890 ED 73 07 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9894 FD F9        	ld sp,iy
 238+ 9896 06 08            ld b,8
 239+ 9898 D1           1 pop de
 240+ 9899 D1           	pop de
 241+ 989A 7B           	ld a,e
 242+ 989B AE           	xor (hl)
 243+ 989C 77           	ld (hl),a
 244+ 989D 24            	inc h
 245+ 989E 7C               ld a,h
 246+ 989F E6 07            and 7
 247+ 98A1 20 0A            jr nz,2F
 248+ 98A3 7D               ld a,l
 249+ 98A4 C6 20            add a,$20
 250+ 98A6 6F               ld l,a
 251+ 98A7 38 04            jr c,2F
 252+ 98A9 7C               ld a,h
 253+ 98AA D6 08            sub 8
 254+ 98AC 67               ld h,a
 255+ 98AD 7C           2 ld a,h
 256+ 98AE FE 58            cp $58
 257+ 98B0 28 1B            jr z,4F
 258+ 98B2 D1               pop de
 259+ 98B3 7A           	ld a,d
 260+ 98B4 AE           	xor (hl)
 261+ 98B5 77           	ld (hl),a
 262+ 98B6 24           	inc h
 263+ 98B7 7C               ld a,h
 264+ 98B8 E6 07            and 7
 265+ 98BA 20 0A            jr nz,3F
 266+ 98BC 7D               ld a,l
 267+ 98BD C6 20            add a,$20
 268+ 98BF 6F               ld l,a
 269+ 98C0 38 04            jr c,3F
 270+ 98C2 7C               ld a,h
 271+ 98C3 D6 08            sub 8
 272+ 98C5 67               ld h,a
 273+ 98C6 7C           3 ld a,h
 274+ 98C7 FE 58            cp $58
 275+ 98C9 28 02            jr z,4F
 276+ 98CB 10 CB            djnz 1B
 277+ 98CD ED 7B 07 8A  4 ld sp,(Stack)
 278+ 98D1 C9           	ret
 279+ 98D2
 280+ 98D2 ED 73 07 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98D6 FD F9        	ld sp,iy
 282+ 98D8 06 08            ld b,8
 283+ 98DA D1           1 pop de
 284+ 98DB 7B           	ld a,e
 285+ 98DC AE           	xor (hl)
 286+ 98DD 77           	ld (hl),a
 287+ 98DE 23           	inc hl
 288+ 98DF 7A           	ld a,d
 289+ 98E0 AE           	xor (hl)
 290+ 98E1 77           	ld (hl),a
 291+ 98E2 2B           	dec hl
 292+ 98E3 24             	inc h
 293+ 98E4 7C               ld a,h
 294+ 98E5 E6 07            and 7
 295+ 98E7 20 0A            jr nz,2F
 296+ 98E9 7D               ld a,l
 297+ 98EA C6 20            add a,$20
 298+ 98EC 6F               ld l,a
 299+ 98ED 38 04            jr c,2F
 300+ 98EF 7C               ld a,h
 301+ 98F0 D6 08            sub 8
 302+ 98F2 67               ld h,a
 303+ 98F3 7C           2 ld a,h
 304+ 98F4 FE 58            cp $58
 305+ 98F6 28 21            jr z,4F
 306+ 98F8 D1               pop de
 307+ 98F9 7A           	ld a,d
 308+ 98FA AE           	xor (hl)
 309+ 98FB 77           	ld (hl),a
 310+ 98FC 23           	inc hl
 311+ 98FD D1               pop de
 312+ 98FE 7B           	ld a,e
 313+ 98FF AE           	xor (hl)
 314+ 9900 77           	ld (hl),a
 315+ 9901 2B           	dec hl
 316+ 9902 24           	inc h
 317+ 9903 7C               ld a,h
 318+ 9904 E6 07            and 7
 319+ 9906 20 0A            jr nz,3F
 320+ 9908 7D               ld a,l
 321+ 9909 C6 20            add a,$20
 322+ 990B 6F               ld l,a
 323+ 990C 38 04            jr c,3F
 324+ 990E 7C               ld a,h
 325+ 990F D6 08            sub 8
 326+ 9911 67               ld h,a
 327+ 9912 7C           3 ld a,h
 328+ 9913 FE 58            cp $58
 329+ 9915 28 02            jr z,4F
 330+ 9917 10 C1            djnz 1B
 331+ 9919 ED 7B 07 8A  4 ld sp,(Stack)
 332+ 991D C9           	ret
 333+ 991E
 334+ 991E ED 73 07 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9922 FD F9        	ld sp,iy
 336+ 9924 06 08            ld b,8
 337+ 9926 D1           1 pop de
 338+ 9927 7B           	ld a,e
 339+ 9928 AE           	xor (hl)
 340+ 9929 77           	ld (hl),a
 341+ 992A 24            	inc h
 342+ 992B 7C               ld a,h
 343+ 992C E6 07            and 7
 344+ 992E 20 0A            jr nz,2F
 345+ 9930 7D               ld a,l
 346+ 9931 C6 20            add a,$20
 347+ 9933 6F               ld l,a
 348+ 9934 38 04            jr c,2F
 349+ 9936 7C               ld a,h
 350+ 9937 D6 08            sub 8
 351+ 9939 67               ld h,a
 352+ 993A 7C           2 ld a,h
 353+ 993B FE 58            cp $58
 354+ 993D 28 1C            jr z,4F
 355+ 993F D1               pop de
 356+ 9940 7A           	ld a,d
 357+ 9941 AE           	xor (hl)
 358+ 9942 77           	ld (hl),a
 359+ 9943 24           	inc h
 360+ 9944 7C               ld a,h
 361+ 9945 E6 07            and 7
 362+ 9947 20 0A            jr nz,3F
 363+ 9949 7D               ld a,l
 364+ 994A C6 20            add a,$20
 365+ 994C 6F               ld l,a
 366+ 994D 38 04            jr c,3F
 367+ 994F 7C               ld a,h
 368+ 9950 D6 08            sub 8
 369+ 9952 67               ld h,a
 370+ 9953 7C           3 ld a,h
 371+ 9954 FE 58            cp $58
 372+ 9956 28 03            jr z,4F
 373+ 9958 D1               pop de
 374+ 9959 10 CB            djnz 1B
 375+ 995B ED 7B 07 8A  4 ld sp,(Stack)
 376+ 995F C9           	ret
 377+ 9960
 378+ 9960              ; ---------------------------------------------------
 379+ 9960              ;
 380+ 9960              ;   27/02/23
 381+ 9960              ;
 382+ 9960              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9960              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9960              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9960
 386+ 9960 ED 73 07 8A  Pinta_Disparo ld (Stack),sp
 387+ 9964 FD F9            ld sp,iy
 388+ 9966 06 03            ld b,3
 389+ 9968 D1           1 pop de
 390+ 9969 7B               ld a,e
 391+ 996A AE               xor (hl)
 392+ 996B 77               ld (hl),a
 393+ 996C 23               inc hl
 394+ 996D 7A               ld a,d
 395+ 996E AE               xor (hl)
 396+ 996F 77               ld (hl),a
 397+ 9970 2B               dec hl
 398+ 9971
 399+ 9971 24               inc h
 400+ 9972 7C               ld a,h
 401+ 9973 E6 07            and 7
 402+ 9975 20 0A            jr nz,2F
 403+ 9977 7D               ld a,l
 404+ 9978 C6 20            add a,$20
 405+ 997A 6F               ld l,a
 406+ 997B 38 04            jr c,2F
 407+ 997D 7C               ld a,h
 408+ 997E D6 08            sub 8
 409+ 9980 67               ld h,a
 410+ 9981 7C           2 ld a,h
 411+ 9982 FE 58            cp $58
 412+ 9984 28 02            jr z,3F
 413+ 9986
 414+ 9986 10 E0            djnz 1B
 415+ 9988 ED 7B 07 8A  3 ld sp,(Stack)
 416+ 998C C9               ret
 417+ 998D
# file closed: Rutinas_de_impresion_sprites.asm
1406  998D              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 998D              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 998D              ;
   3+ 998D              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 998D              ;
   5+ 998D              ; *****************************************************************************************************************************************************************************************
   6+ 998D              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 998D
   8+ 998D 7C           calcula_tercio ld a,h
   9+ 998E E6 18        	and $18
  10+ 9990 CB 2F        	sra a
  11+ 9992 CB 2F        	sra a
  12+ 9994 CB 2F        	sra a
  13+ 9996 C9           	ret
  14+ 9997
# file closed: calcula_tercio.asm
1407  9997              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9997              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9997              ;
   3+ 9997              ;
   4+ 9997              ;	CLS.
   5+ 9997              ;
   6+ 9997              ;	Limpia la pantalla y define sus atributos.
   7+ 9997              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9997              ;
   9+ 9997              ;	COLORES: 0 ..... NEGRO
  10+ 9997              ;    		 1 ..... AZUL
  11+ 9997              ; 			 2 ..... ROJO
  12+ 9997              ;			 3 ..... MAGENTA
  13+ 9997              ; 			 4 ..... VERDE
  14+ 9997              ; 			 5 ..... CIAN
  15+ 9997              ;			 6 ..... AMARILLO
  16+ 9997              ; 			 7 ..... BLANCO
  17+ 9997              ;
  18+ 9997              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9997              ;
  20+ 9997              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9997
  22+ 9997
  23+ 9997 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 999A 11 01 40     	LD DE,$4001
  25+ 999D 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99A0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99A2 ED B0        	LDIR
  28+ 99A4 01 FF 02     	LD BC,767
  29+ 99A7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99A8 ED B0        	LDIR
  31+ 99AA C9           	ret
  32+ 99AB
# file closed: Cls.asm
1408  99AB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99AB              ; ******************************************************************************************************************************************************************************************
   2+ 99AB              ;
   3+ 99AB              ;   20/05/23
   4+ 99AB              ;
   5+ 99AB              ;	Recompone_posicion_inicio
   6+ 99AB              ;
   7+ 99AB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99AB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99AB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99AB              ;	_ a una u otra rutina.
  11+ 99AB
  12+ 99AB              Recompone_posicion_inicio
  13+ 99AB
  14+ 99AB 2A C5 89     	ld hl,(Posicion_inicio)
  15+ 99AE 7D           	ld a,l
  16+ 99AF E6 1F        	and $1f
  17+ 99B1 28 16        	jr z,1F
  18+ 99B3
  19+ 99B3 FE 1F        	cp $1f
  20+ 99B5 28 0D        	jr z,3F
  21+ 99B7
  22+ 99B7 21 F4 89     	ld hl,Ctrl_2
  23+ 99BA CB C6        	set 0,(hl)
  24+ 99BC 2A B7 89     	ld hl,(Puntero_objeto)
  25+ 99BF 22 F7 89     	ld (Repone_puntero_objeto),hl
  26+ 99C2 18 08        	jr 2F
  27+ 99C4
  28+ 99C4 CD 65 9B     3 call Mov_left
  29+ 99C7 18 03        	jr 2F
  30+ 99C9
  31+ 99C9 CD 47 9A     1 call Mov_right
  32+ 99CC 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99CF 22 B7 89     	ld (Puntero_objeto),hl
  34+ 99D2 C9           	ret
  35+ 99D3
  36+ 99D3              ; ******************************************************************************************************************************************************************************************
  37+ 99D3              ;
  38+ 99D3              ;   27/05/23
  39+ 99D3              ;
  40+ 99D3              ;	Mov_down
  41+ 99D3              ;
  42+ 99D3              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99D3              ;
  44+ 99D3              ;
  45+ 99D3              Mov_down
  46+ 99D3
  47+ 99D3 CD 35 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99D6              ;																	; _ repone (Puntero_objeto).
  49+ 99D6 21 E1 89     	ld hl,Ctrl_0
  50+ 99D9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99DB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99DB              ; 																	; _ en el caso de que no lo haya.
  53+ 99DB 3A CB 89     	ld a,(Vel_down)
  54+ 99DE 47           	ld b,a
  55+ 99DF 2A B5 89         ld hl,(Posicion_actual)
  56+ 99E2 CD 8D 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99E5 E6 02        	and 2
  58+ 99E7 28 0F        	jr z,1F
  59+ 99E9
  60+ 99E9              ; Nos encontramos en el último tercio de pantalla.
  61+ 99E9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99E9
  63+ 99E9 7C           	ld a,h
  64+ 99EA FE 57        	cp $57
  65+ 99EC 20 0A        	jr nz,1F
  66+ 99EE
  67+ 99EE 7D           	ld a,l
  68+ 99EF C6 20        	add $20
  69+ 99F1 30 05        	jr nc,1F
  70+ 99F3
  71+ 99F3              ; ------------------------------
  72+ 99F3              ;	call Reaparece_arriba
  73+ 99F3 CD F2 9C     	call Reinicio
  74+ 99F6              ; ------------------------------
  75+ 99F6
  76+ 99F6 18 08        	jr 3F
  77+ 99F8 CD BA 96     1 call NextScan
  78+ 99FB 22 B5 89     	ld (Posicion_actual),hl
  79+ 99FE 10 E2            djnz 2B
  80+ 9A00 CD 18 9D     3 call Genera_coordenadas
  81+ 9A03 C9           	ret
  82+ 9A04
  83+ 9A04              ; ******************************************************************************************************************************************************************************************
  84+ 9A04              ;
  85+ 9A04              ;   27/05/23
  86+ 9A04              ;
  87+ 9A04              ;	Mov_up
  88+ 9A04              ;
  89+ 9A04              ; 	Mueve el Sprite hacia arriba.
  90+ 9A04              ;
  91+ 9A04              ;
  92+ 9A04              Mov_up
  93+ 9A04
  94+ 9A04 CD 35 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A07              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A07 21 E1 89     	ld hl,Ctrl_0
  97+ 9A0A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A0C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A0C              ; 																		; _ en el caso de que no lo haya.
 100+ 9A0C 3A CA 89     	ld a,(Vel_up)
 101+ 9A0F 47           	ld b,a
 102+ 9A10 2A B5 89     	ld hl,(Posicion_actual)
 103+ 9A13 CD 8D 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A16 A7           	and a
 105+ 9A17 20 10        	jr nz,1F
 106+ 9A19
 107+ 9A19              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A19              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A19
 110+ 9A19 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A1A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A1C 20 0B            jr nz,1F
 113+ 9A1E 7D               ld a,l
 114+ 9A1F D6 20            sub $20
 115+ 9A21 30 06            jr nc,1F
 116+ 9A23 25               dec h
 117+ 9A24
 118+ 9A24              ; -----------------------------
 119+ 9A24 CD D3 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A27              ;	call Reinicio
 121+ 9A27              ; -----------------------------
 122+ 9A27
 123+ 9A27 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A29 CD C9 96     1 call PreviousScan
 125+ 9A2C 22 B5 89     	ld (Posicion_actual),hl
 126+ 9A2F 10 E2            djnz 3B
 127+ 9A31 CD 18 9D     2 call Genera_coordenadas
 128+ 9A34 C9           	ret
 129+ 9A35
 130+ 9A35              ; -----------------------------
 131+ 9A35              ;
 132+ 9A35              ;	27/5/23
 133+ 9A35              ;
 134+ 9A35              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A35              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A35              ;
 137+ 9A35              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A35              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A35              ;
 140+ 9A35              ;	Modifica: A y (Puntero_objeto).
 141+ 9A35
 142+ 9A35 3A F4 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A38 CB 47        	bit 0,a
 144+ 9A3A C8           	ret z
 145+ 9A3B CB 87        	res 0,a
 146+ 9A3D 32 F4 89     	ld (Ctrl_2),a
 147+ 9A40 2A F7 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A43 22 B7 89     	ld (Puntero_objeto),hl
 149+ 9A46 C9           	ret
 150+ 9A47
 151+ 9A47              ; ******************************************************************************************************************************************************************************************
 152+ 9A47              ;
 153+ 9A47              ;	19/10/22
 154+ 9A47              ;
 155+ 9A47              ;	Mov_right.
 156+ 9A47              ;
 157+ 9A47              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A47              ;
 159+ 9A47
 160+ 9A47 21 E1 89     Mov_right ld hl,Ctrl_0
 161+ 9A4A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A4C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A4C              ; 																	; _ en el caso de que no lo haya.
 164+ 9A4C 3A E1 89     	ld a,(Ctrl_0)
 165+ 9A4F CB 77        	bit 6,a
 166+ 9A51 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A53
 168+ 9A53 CD 81 9C     	call Stop_Amadeus_right
 169+ 9A56 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A57 18 4D        	jr 8F
 171+ 9A59
 172+ 9A59 3A B9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A5C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A5E 20 46        	jr nz,8F
 175+ 9A60
 176+ 9A60 3A BB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A63 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A64 28 40        	jr z,8F
 179+ 9A66
 180+ 9A66              ; ---------- ---------- ----------
 181+ 9A66              ;
 182+ 9A66              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A66
 184+ 9A66 3A C9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A69 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A6B 28 11        	jr z,1F
 187+ 9A6D 38 06        	jr c,6F
 188+ 9A6F FE 04        	cp 4
 189+ 9A71 28 14        	jr z,7F
 190+ 9A73 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A75
 192+ 9A75              ; ---------- ---------- ----------
 193+ 9A75              ;
 194+ 9A75              ; Perfiles de velocidad
 195+ 9A75              ;
 196+ 9A75
 197+ 9A75 3A BB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A78 FE FE        	cp $fe
 199+ 9A7A 20 2A        	jr nz,8F
 200+ 9A7C 18 10        	jr 3F
 201+ 9A7E 3A BB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A81 FE FD        	cp $fd
 203+ 9A83 20 21        	jr nz,8F
 204+ 9A85 18 07        	jr 3F
 205+ 9A87 3A BB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A8A FE FB        	cp $fb
 207+ 9A8C 20 18        	jr nz,8F
 208+ 9A8E
 209+ 9A8E              ; ---------- ---------- ----------
 210+ 9A8E
 211+ 9A8E              3
 212+ 9A8E CD C1 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A91              ;	call Reinicio
 214+ 9A91
 215+ 9A91              ; ---------- ---------- ----------
 216+ 9A91              ;
 217+ 9A91              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A91
 219+ 9A91 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A93 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A94 CD AD 9A     	call DESPLZ_DER
 222+ 9A97 C1           	pop bc
 223+ 9A98 10 F9        	djnz 5B
 224+ 9A9A 2A B5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A9D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A9E 22 B5 89     	ld (Posicion_actual),hl
 227+ 9AA1 CD 18 9D     	call Genera_coordenadas
 228+ 9AA4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AA6
 230+ 9AA6              ; ---------- ---------- ----------
 231+ 9AA6
 232+ 9AA6 2A B5 89     8 ld hl,(Posicion_actual)
 233+ 9AA9 CD AD 9A     	call DESPLZ_DER
 234+ 9AAC C9           2 ret
 235+ 9AAD
 236+ 9AAD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AAD              ;
 238+ 9AAD              ;	22/9/22
 239+ 9AAD              ;
 240+ 9AAD
 241+ 9AAD CD BC 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AB0 CD 08 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AB3 CD 31 9B         call Ciclo_completo
 244+ 9AB6 21 E1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AB9 CB FE        	set 7,(hl)
 246+ 9ABB C9           	ret
 247+ 9ABC
 248+ 9ABC              ; ******************************************************************************************************************************************************************************************
 249+ 9ABC              ;	15/02/23
 250+ 9ABC              ;
 251+ 9ABC
 252+ 9ABC 3A C9 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9ABF 47           	ld b,a
 254+ 9AC0 2A C1 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AC3 23           1 inc hl
 256+ 9AC4 23           	inc hl
 257+ 9AC5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AC7 22 C1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9ACA CD 89 8D     	call Extrae_address
 260+ 9ACD 22 B7 89     	ld (Puntero_objeto),hl
 261+ 9AD0
 262+ 9AD0              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AD0
 264+ 9AD0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AD0              ; Cuántos movimientos hemos hecho ??
 266+ 9AD0              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AD0
 268+ 9AD0 2A BD 89     7 ld hl,(Indice_Sprite_der)
 269+ 9AD3 EB           	ex de,hl
 270+ 9AD4 A7           	and a
 271+ 9AD5 ED 52        	sbc hl,de
 272+ 9AD7 CB 3D        	srl l
 273+ 9AD9 3E 08        6 ld a,8
 274+ 9ADB 95           	sub l
 275+ 9ADC 30 1E        	jr nc,3F
 276+ 9ADE
 277+ 9ADE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9ADE              ; B="0".
 279+ 9ADE
 280+ 9ADE 04           4 inc b
 281+ 9ADF 3C           	inc a
 282+ 9AE0 20 FC        	jr nz,4B
 283+ 9AE2 78           	ld a,b
 284+ 9AE3 08           	ex af,af
 285+ 9AE4 2A BD 89     	ld hl,(Indice_Sprite_der)
 286+ 9AE7 23           5 inc hl
 287+ 9AE8 23           	inc hl
 288+ 9AE9 10 FC        	djnz 5B
 289+ 9AEB 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9AEE CD 89 8D     	call Extrae_address
 291+ 9AF1 22 B7 89     	ld (Puntero_objeto),hl
 292+ 9AF4
 293+ 9AF4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AF4              ; _(Posicion_actual).
 295+ 9AF4
 296+ 9AF4 21 B5 89     	ld hl,Posicion_actual
 297+ 9AF7 34           	inc (hl)
 298+ 9AF8 08               ex af,af
 299+ 9AF9 6F           	ld l,a
 300+ 9AFA 18 DD        	jr 6B
 301+ 9AFC
 302+ 9AFC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AFC
 304+ 9AFC 47           3 ld b,a
 305+ 9AFD 2A BF 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B00 23           2 inc hl
 307+ 9B01 23           	inc hl
 308+ 9B02 10 FC        	djnz 2B
 309+ 9B04 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B07 C9           8 ret
 311+ 9B08
 312+ 9B08              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B08              ;
 314+ 9B08              ;	24/7/22
 315+ 9B08              ;
 316+ 9B08              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B08              ;
 318+ 9B08              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B08              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B08              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B08
 322+ 9B08 3A BB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B0B A7           	and a
 324+ 9B0C 20 1F        	jr nz,1F
 325+ 9B0E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B10 32 BB 89         ld (CTRL_DESPLZ),a
 327+ 9B13
 328+ 9B13 21 B4 89     	ld hl,Columns
 329+ 9B16 34           	inc (hl)
 330+ 9B17 3A C7 89     	ld a,(Cuad_objeto)
 331+ 9B1A E6 01        	and 1
 332+ 9B1C 28 0F        	jr z,1F
 333+ 9B1E 2A B5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B21 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B22 22 B5 89     	ld (Posicion_actual),hl
 336+ 9B25 CD 18 9D     	call Genera_coordenadas
 337+ 9B28 CD 8D 9C     	call Inc_CTRL_DESPLZ
 338+ 9B2B 18 03        	jr 2F
 339+ 9B2D CD 8D 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B30 C9           2 ret
 341+ 9B31
 342+ 9B31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B31              ;
 344+ 9B31              ;	24/7/22
 345+ 9B31              ;
 346+ 9B31              ;	Ciclo_completo.
 347+ 9B31              ;
 348+ 9B31              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B31              ;
 350+ 9B31              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B31              ; 	Decrementamos (Columns).
 352+ 9B31              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B31              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B31
 355+ 9B31
 356+ 9B31 3A BB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B34 FE FF        	cp $ff
 358+ 9B36 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B38 E6 F0        	and $f0
 360+ 9B3A 20 28        	jr nz,3F
 361+ 9B3C
 362+ 9B3C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B3C
 364+ 9B3C 3A BB 89     	ld a,(CTRL_DESPLZ)
 365+ 9B3F 47           	ld b,a
 366+ 9B40 3E F8        	ld a,$f8
 367+ 9B42 80           	add b
 368+ 9B43 32 BB 89     	ld (CTRL_DESPLZ),a
 369+ 9B46 18 1C        	jr 3F
 370+ 9B48 21 B4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B4B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B4C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B4D 32 BB 89     	ld (CTRL_DESPLZ),a
 374+ 9B50 3A C7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B53 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B55 20 0A        	jr nz,2F
 377+ 9B57 2A B5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B5A 23           	inc hl
 379+ 9B5B 22 B5 89     	ld (Posicion_actual),hl
 380+ 9B5E CD 18 9D     	call Genera_coordenadas
 381+ 9B61
 382+ 9B61              ; Inicia el puntero de Sprite.
 383+ 9B61
 384+ 9B61 CD A0 8D     2 call Inicia_puntero_objeto_der
 385+ 9B64 C9           3 ret
 386+ 9B65
 387+ 9B65              ; ******************************************************************************************************************************************************************************************
 388+ 9B65              ;
 389+ 9B65              ;	15/02/23
 390+ 9B65              ;
 391+ 9B65              ;	Mov_left.
 392+ 9B65              ;
 393+ 9B65              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B65              ;
 395+ 9B65 21 E1 89     Mov_left ld hl,Ctrl_0
 396+ 9B68 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B6A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B6A              ; 																	; _ en el caso de que no lo haya.
 399+ 9B6A 3A E1 89     	ld a,(Ctrl_0)
 400+ 9B6D CB 77        	bit 6,a
 401+ 9B6F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B71
 403+ 9B71 CD 87 9C     	call Stop_Amadeus_left
 404+ 9B74 C8           	ret z
 405+ 9B75 20 4A        	jr nz,8F
 406+ 9B77
 407+ 9B77 3A B9 89     11 ld a,(Coordenada_X)
 408+ 9B7A A7           	and a
 409+ 9B7B 20 44        	jr nz,8F
 410+ 9B7D
 411+ 9B7D 3A BB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B80 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B81 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B83
 415+ 9B83              ; ---------- ---------- ----------
 416+ 9B83
 417+ 9B83 3A C8 89     	ld a,(Vel_left)
 418+ 9B86 FE 02        	cp 2
 419+ 9B88 28 0F        	jr z,1F
 420+ 9B8A 38 04        	jr c,6F
 421+ 9B8C FE 04        	cp 4
 422+ 9B8E 28 12        	jr z,7F
 423+ 9B90
 424+ 9B90              ; ---------- ---------- ----------
 425+ 9B90
 426+ 9B90 3A BB 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B93 FE F8        	cp $f8
 428+ 9B95 20 2A        	jr nz,8F
 429+ 9B97 18 10        	jr 4F
 430+ 9B99 3A BB 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B9C FE F9        	cp $f9
 432+ 9B9E 20 21        	jr nz,8F
 433+ 9BA0 18 07        	jr 4F
 434+ 9BA2 3A BB 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BA5 FE FB        	cp $fb
 436+ 9BA7 20 18        	jr nz,8F
 437+ 9BA9
 438+ 9BA9              ; ---------- ---------- ----------
 439+ 9BA9
 440+ 9BA9              4
 441+ 9BA9 CD AF 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BAC              ;	call Reinicio
 443+ 9BAC
 444+ 9BAC              ; ---------- ---------- ----------
 445+ 9BAC
 446+ 9BAC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BAE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BAF
 449+ 9BAF              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BAF              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BAF
 452+ 9BAF CD C8 9B     	call DESPLZ_IZQ
 453+ 9BB2 C1           	pop bc
 454+ 9BB3 10 F9        	djnz 5B
 455+ 9BB5 2A B5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BB8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BB9 22 B5 89     	ld (Posicion_actual),hl
 458+ 9BBC CD 18 9D     	call Genera_coordenadas
 459+ 9BBF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BC1
 461+ 9BC1              ; ---------- ---------- ----------
 462+ 9BC1
 463+ 9BC1              ; Movemos, no hay recolocación.
 464+ 9BC1
 465+ 9BC1 2A B5 89     8 ld hl,(Posicion_actual)
 466+ 9BC4 CD C8 9B     	call DESPLZ_IZQ
 467+ 9BC7 C9           2 ret
 468+ 9BC8
 469+ 9BC8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BC8              ;
 471+ 9BC8              ;	22/9/22
 472+ 9BC8
 473+ 9BC8              DESPLZ_IZQ
 474+ 9BC8
 475+ 9BC8 CD D7 9B     	call Desplaza_izquierda
 476+ 9BCB CD 23 9C         call modifica_parametros_1er_DESPLZ
 477+ 9BCE CD 4B 9C     	call Ciclo_completo_2
 478+ 9BD1 21 E1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9BD4 CB BE        	res 7,(hl)
 480+ 9BD6 C9           	ret
 481+ 9BD7
 482+ 9BD7              Desplaza_izquierda
 483+ 9BD7
 484+ 9BD7 3A C8 89     	ld a,(Vel_left)
 485+ 9BDA 47           	ld b,a
 486+ 9BDB 2A C3 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9BDE 23           1 inc hl
 488+ 9BDF 23           	inc hl
 489+ 9BE0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9BE2 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9BE5 CD 89 8D     	call Extrae_address
 492+ 9BE8 22 B7 89     	ld (Puntero_objeto),hl
 493+ 9BEB
 494+ 9BEB              ; Modifica (Puntero_DESPLZ_der).
 495+ 9BEB
 496+ 9BEB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9BEB              ; Cuántos movimientos hemos hecho ??
 498+ 9BEB              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9BEB
 500+ 9BEB 2A BF 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9BEE EB           	ex de,hl
 502+ 9BEF A7           	and a
 503+ 9BF0 ED 52        	sbc hl,de
 504+ 9BF2 CB 3D        	srl l
 505+ 9BF4 3E 08        6 ld a,8
 506+ 9BF6 95           	sub l
 507+ 9BF7 30 1E        	jr nc,3F
 508+ 9BF9
 509+ 9BF9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9BF9              ; B="0".
 511+ 9BF9
 512+ 9BF9 04           4 inc b
 513+ 9BFA 3C           	inc a
 514+ 9BFB 20 FC        	jr nz,4B
 515+ 9BFD 78           	ld a,b
 516+ 9BFE 08           	ex af,af
 517+ 9BFF 2A BF 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C02 23           5 inc hl
 519+ 9C03 23           	inc hl
 520+ 9C04 10 FC        	djnz 5B
 521+ 9C06 22 C3 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C09 CD 89 8D     	call Extrae_address
 523+ 9C0C 22 B7 89     	ld (Puntero_objeto),hl
 524+ 9C0F
 525+ 9C0F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C0F              ; _(Posicion_actual).
 527+ 9C0F
 528+ 9C0F 21 B5 89     	ld hl,Posicion_actual
 529+ 9C12 35           	dec (hl)
 530+ 9C13 08           	ex af,af
 531+ 9C14 6F           	ld l,a
 532+ 9C15 18 DD        	jr 6B
 533+ 9C17
 534+ 9C17              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C17
 536+ 9C17 47           3 ld b,a
 537+ 9C18 2A BD 89     	ld hl,(Indice_Sprite_der)
 538+ 9C1B 23           2 inc hl
 539+ 9C1C 23           	inc hl
 540+ 9C1D 10 FC        	djnz 2B
 541+ 9C1F 22 C1 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C22 C9           8 ret
 543+ 9C23
 544+ 9C23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C23              ;
 546+ 9C23              ;	modifica_parametros_1er_DESPLZ
 547+ 9C23              ;
 548+ 9C23              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C23              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C23              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C23
 552+ 9C23 3A BB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C26 A7           	and a
 554+ 9C27 20 1E        	jr nz,1F
 555+ 9C29 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C2A 32 BB 89         ld (CTRL_DESPLZ),a
 557+ 9C2D 21 B4 89     	ld hl,Columns
 558+ 9C30 34           	inc (hl)
 559+ 9C31 3A C7 89     	ld a,(Cuad_objeto)
 560+ 9C34 E6 01        	and 1
 561+ 9C36 20 0F        	jr nz,1F
 562+ 9C38 2A B5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C3B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C3C 22 B5 89     	ld (Posicion_actual),hl
 565+ 9C3F CD 18 9D     	call Genera_coordenadas
 566+ 9C42 CD 9E 9C     	call Dec_CTRL_DESPLZ
 567+ 9C45 18 03        	jr 2F
 568+ 9C47 CD 9E 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C4A C9           2 ret
 570+ 9C4B
 571+ 9C4B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C4B
 573+ 9C4B 3A BB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C4E FE F7        	cp $f7
 575+ 9C50 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C52 30 2C        	jr nc,3F
 577+ 9C54
 578+ 9C54              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C54
 580+ 9C54 06 00        	ld b,0
 581+ 9C56 04           4 inc b
 582+ 9C57 3C           	inc a
 583+ 9C58 FE F7        	cp $f7
 584+ 9C5A 20 FA        	jr nz,4B
 585+ 9C5C 3E FF        	ld a,$ff
 586+ 9C5E 90           	sub b
 587+ 9C5F 32 BB 89     	ld (CTRL_DESPLZ),a
 588+ 9C62 18 1C        	jr 3F
 589+ 9C64
 590+ 9C64              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C64
 592+ 9C64 21 B4 89     1 ld hl,Columns
 593+ 9C67 35           	dec (hl)
 594+ 9C68 AF           	xor a
 595+ 9C69 32 BB 89     	ld (CTRL_DESPLZ),a
 596+ 9C6C 3A C7 89     	ld a,(Cuad_objeto)
 597+ 9C6F E6 01        	and 1
 598+ 9C71 28 0A        	jr z,2F
 599+ 9C73 2A B5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C76 2B           	dec hl
 601+ 9C77 22 B5 89     	ld (Posicion_actual),hl
 602+ 9C7A CD 18 9D     	call Genera_coordenadas
 603+ 9C7D
 604+ 9C7D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C7D
 606+ 9C7D CD B3 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C80 C9           3 ret
 608+ 9C81
 609+ 9C81              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C81              ;
 611+ 9C81              ;	19/10/22
 612+ 9C81              ;
 613+ 9C81              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C81              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C81
 616+ 9C81 3A B9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C84 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C86 C9           	ret
 619+ 9C87
 620+ 9C87              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C87              ;
 622+ 9C87              ;	19/10/22
 623+ 9C87              ;
 624+ 9C87              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C87              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C87
 627+ 9C87 3A B9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C8A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C8C C9           	ret
 630+ 9C8D
 631+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C8D              ;
 633+ 9C8D              ;	24/7/22
 634+ 9C8D              ;
 635+ 9C8D              ;	Inc_CTRL_DESPLZ
 636+ 9C8D              ;
 637+ 9C8D              ;
 638+ 9C8D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C8D
 640+ 9C8D 21 BB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C90 3A C9 89     	ld a,(Vel_right)
 642+ 9C93 A7           	and a
 643+ 9C94 28 06        	jr z,1F
 644+ 9C96 47           	ld b,a
 645+ 9C97 34           3 inc (hl)
 646+ 9C98 10 FD        	djnz 3B
 647+ 9C9A 18 01        	jr 2F
 648+ 9C9C 34           1 inc (hl)
 649+ 9C9D C9           2 ret
 650+ 9C9E
 651+ 9C9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C9E              ;
 653+ 9C9E              ;	5/2/23
 654+ 9C9E              ;
 655+ 9C9E              ;	Dec_CTRL_DESPLZ
 656+ 9C9E              ;
 657+ 9C9E              ;
 658+ 9C9E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C9E
 660+ 9C9E 21 BB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CA1 3A C8 89     	ld a,(Vel_left)
 662+ 9CA4 A7           	and a
 663+ 9CA5 28 06        	jr z,1F
 664+ 9CA7 47           	ld b,a
 665+ 9CA8 35           3 dec (hl)
 666+ 9CA9 10 FD        	djnz 3B
 667+ 9CAB 18 01        	jr 2F
 668+ 9CAD 35           1 dec (hl)
 669+ 9CAE C9           2 ret
 670+ 9CAF
 671+ 9CAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CAF
 673+ 9CAF 2A B5 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CB2 01 1F 00     	ld bc,31
 675+ 9CB5 A7           	and a
 676+ 9CB6 ED 4A        	adc hl,bc
 677+ 9CB8 22 B5 89     	ld (Posicion_actual),hl
 678+ 9CBB 21 E1 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CBE CB C6        	set 0,(hl)
 680+ 9CC0 C9           	ret
 681+ 9CC1
 682+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CC1
 684+ 9CC1 2A B5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CC4 01 1F 00     	ld bc,31
 686+ 9CC7 A7           	and a
 687+ 9CC8 ED 42        	sbc hl,bc
 688+ 9CCA 22 B5 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CCD 21 E1 89     	ld hl,Ctrl_0
 690+ 9CD0 CB CE        	set 1,(hl)
 691+ 9CD2 C9           	ret
 692+ 9CD3
 693+ 9CD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9CD3
 695+ 9CD3 24           Reaparece_abajo inc h
 696+ 9CD4 01 E0 17     	ld bc,$17e0
 697+ 9CD7 A7           	and a
 698+ 9CD8 ED 4A        	adc hl,bc
 699+ 9CDA 22 B5 89     	ld (Posicion_actual),hl
 700+ 9CDD 21 E1 89     	ld hl,Ctrl_0
 701+ 9CE0 CB D6        	set 2,(hl)
 702+ 9CE2 C9           	ret
 703+ 9CE3
 704+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9CE3
 706+ 9CE3 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9CE6 A7           	and a
 708+ 9CE7 ED 42        	sbc hl,bc
 709+ 9CE9 22 B5 89     	ld (Posicion_actual),hl
 710+ 9CEC 21 E1 89     	ld hl,Ctrl_0
 711+ 9CEF CB DE        	set 3,(hl)
 712+ 9CF1 C9           	ret
 713+ 9CF2
 714+ 9CF2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9CF2              ;
 716+ 9CF2              ;	15/07/23
 717+ 9CF2
 718+ 9CF2              Reinicio
 719+ 9CF2
 720+ 9CF2              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9CF2
 722+ 9CF2 AF           	xor a
 723+ 9CF3 21 E8 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9CF6 CD 14 9D     	call Limpia_contenido_hl
 725+ 9CF9
 726+ 9CF9 21 B5 89     	ld hl,Posicion_actual
 727+ 9CFC CD 14 9D     	call Limpia_contenido_hl
 728+ 9CFF
 729+ 9CFF CD 35 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D02 CD BF 9F     	call Inicia_Puntero_mov
 731+ 9D05
 732+ 9D05 21 EA 89     	ld hl,Incrementa_puntero
 733+ 9D08 06 05        	ld b,5
 734+ 9D0A 77           1 ld (hl),a
 735+ 9D0B 23           	inc hl
 736+ 9D0C 10 FC        	djnz 1B
 737+ 9D0E
 738+ 9D0E 21 F4 89     	ld hl,Ctrl_2
 739+ 9D11 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D13
 741+ 9D13 C9           	ret
 742+ 9D14
 743+ 9D14 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D15 23           	inc hl
 745+ 9D16 77           	ld (hl),a
 746+ 9D17 C9           	ret
 747+ 9D18
 748+ 9D18
# file closed: Direcciones.asm
1409  9D18              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D18              ; ------------------------------------------------------------------------
   2+ 9D18              ;
   3+ 9D18              ;	02/04/23
   4+ 9D18              ;
   5+ 9D18              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D18              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D18              ;
   8+ 9D18              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D18              ;
  10+ 9D18              ;	Modifica: A,BC y DE.
  11+ 9D18
  12+ 9D18 C5           Genera_coordenadas push bc
  13+ 9D19 E5           	push hl
  14+ 9D1A D5           	push de
  15+ 9D1B
  16+ 9D1B 2A B5 89     	ld hl,(Posicion_actual)
  17+ 9D1E
  18+ 9D1E 7D           	ld a,l
  19+ 9D1F E6 1F        	and $1f
  20+ 9D21 32 B9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D24
  22+ 9D24 CD 8D 99     	call calcula_tercio
  23+ 9D27 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D28
  25+ 9D28 1E 00        	ld e,0
  26+ 9D2A 7D           	ld a,l
  27+ 9D2B E6 E0        	and $e0
  28+ 9D2D 28 01        	jr z,1F
  29+ 9D2F 04           	inc b
  30+ 9D30
  31+ 9D30 04           1 inc b
  32+ 9D31 05           	dec b
  33+ 9D32 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D34              ;														; _ , salimos.
  35+ 9D34 1C           3 inc e
  36+ 9D35 D6 20        	sub 32
  37+ 9D37 20 FB        	jr nz,3B
  38+ 9D39 10 F5        	djnz 1B
  39+ 9D3B
  40+ 9D3B 7B           2 ld a,e
  41+ 9D3C 32 BA 89     	ld (Coordenada_y),a
  42+ 9D3F
  43+ 9D3F D1           	pop de
  44+ 9D40 E1           	pop hl
  45+ 9D41 C1           	pop bc
  46+ 9D42
  47+ 9D42 C9           	ret
  48+ 9D43
  49+ 9D43              ; ------------------------------------------------------------------------
  50+ 9D43              ;	28/05/23
  51+ 9D43              ;
  52+ 9D43              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D43              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D43              ;
  55+ 9D43              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D43              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D43              ;
  58+ 9D43              ;		DE="$120d"
  59+ 9D43              ;
  60+ 9D43              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D43              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D43              ;
  63+ 9D43              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D43
  65+ 9D43              ;	Modifica: A,BC y DE.
  66+ 9D43
  67+ 9D43
  68+ 9D43              Genera_coordenadas_disparo
  69+ 9D43
  70+ 9D43              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D43
  72+ 9D43 7D           	ld a,l
  73+ 9D44 E6 1F        	and $1f
  74+ 9D46 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D47 CD 8D 99     	call calcula_tercio
  76+ 9D4A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D4B 1E 00        	ld e,0
  78+ 9D4D 7D           	ld a,l
  79+ 9D4E E6 E0        	and $e0
  80+ 9D50 28 01        	jr z,1F
  81+ 9D52 04           	inc b
  82+ 9D53 1C           1 inc e
  83+ 9D54 D6 20        	sub 32
  84+ 9D56 20 FB        	jr nz,1B
  85+ 9D58 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D5A C9           	ret
  87+ 9D5B
# file closed: Genera_coordenadas.asm
1410  9D5B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D5B
   2+ 9D5B
   3+ 9D5B              ;   07/07/23
   4+ 9D5B              ;
   5+ 9D5B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D5B              ;
   7+ 9D5B              ;   Codificación:
   8+ 9D5B              ;
   9+ 9D5B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D5B              ;
  11+ 9D5B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D5B              ;
  13+ 9D5B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D5B              ;
  15+ 9D5B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D5B              ;
  17+ 9D5B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D5B              ;                               ..... %01000010 Vel_up 4
  19+ 9D5B              ;                                               Vel_down 2
  20+ 9D5B              ;                               ..... $42
  21+ 9D5B              ;
  22+ 9D5B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D5B              ;
  24+ 9D5B              ;                               ..... %01000010 Vel_left 4
  25+ 9D5B              ;                                               Vel_right 2
  26+ 9D5B              ;                               ..... $42
  27+ 9D5B              ;
  28+ 9D5B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D5B              ;
  30+ 9D5B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D5B              ;
  32+ 9D5B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D5B              ;
  34+ 9D5B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D5B              ;                                     $53
  36+ 9D5B              ;
  37+ 9D5B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D5B              ;
  39+ 9D5B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D5B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D5B              ;
  42+ 9D5B              ;                       Arriba ..... $81
  43+ 9D5B              ;                       Arriba - izquierda ..... $a1
  44+ 9D5B              ;                       Arriba - derecha ..... $91
  45+ 9D5B              ;
  46+ 9D5B              ;                       Abajo ..... $41
  47+ 9D5B              ;                       Abajo - izquierda ..... $61
  48+ 9D5B              ;                       Abajo - derecha ..... $51
  49+ 9D5B              ;
  50+ 9D5B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D5B              ;
  52+ 9D5B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D5B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D5B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D5B              ;
  56+ 9D5B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D5B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D5B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D5B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D5B              ;
  61+ 9D5B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D5B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D5B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D5B              ;
  65+ 9D5B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D5B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D5B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D5B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D5B
  70+ 9D5B              ; ----- ----- ----- ----- -----
  71+ 9D5B
  72+ 9D5B 87 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D5D 8F 9D            defw F_1
  74+ 9D5F 99 9D            defw F_2
  75+ 9D61 A3 9D            defw Codo_abajo_derecha
  76+ 9D63 D7 9D            defw Derecha_y_subiendo
  77+ 9D65 E1 9D            defw Derecha_y_subiendo_1
  78+ 9D67 EB 9D            defw F_3
  79+ 9D69 F5 9D            defw F_4
  80+ 9D6B FF 9D            defw Derecha_y_bajando
  81+ 9D6D 09 9E            defw Derecha_y_bajando_1
  82+ 9D6F 13 9E            defw Derecha_y_bajando_2
  83+ 9D71 1D 9E            defw Codo_derecha_abajo
  84+ 9D73 4D 9E            defw Codo_abajo_izq.
  85+ 9D75 81 9E            defw Izquierda_y_subiendo
  86+ 9D77 8B 9E            defw Izquierda_y_subiendo_1
  87+ 9D79 95 9E            defw F_5
  88+ 9D7B 9F 9E            defw F_6
  89+ 9D7D A9 9E            defw Izquierda_y_bajando
  90+ 9D7F B3 9E            defw Izquierda_y_bajando_1
  91+ 9D81 BD 9E            defw Izquierda_y_bajando_2
  92+ 9D83 C7 9E            defw Codo_izquierda_abajo
  93+ 9D85 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D87
  95+ 9D87 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D8B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D8F
  98+ 9D8F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D93 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D97 08 00
 100+ 9D99 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D9D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DA1 0F FE
 102+ 9DA3
 103+ 9DA3 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DA7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DAB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DAF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DB3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DB7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DBB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DBF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DC3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DC7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DCB 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DCF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DD3 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DD7
 117+ 9DD7 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DDB 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DDF 06 00
 119+ 9DE1
 120+ 9DE1 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DE5 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DE9 02 00
 122+ 9DEB
 123+ 9DEB 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DEF 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DF3 04 00
 125+ 9DF5 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DF9 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DFD 08 00
 127+ 9DFF
 128+ 9DFF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E03 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E07 02 00
 130+ 9E09
 131+ 9E09 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E0D 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E11 06 00
 133+ 9E13
 134+ 9E13 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E17 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E1B 06 00
 136+ 9E1D
 137+ 9E1D              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E1D
 139+ 9E1D 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E21 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E25 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E29 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E2D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E31 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E35 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E39 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E3D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E41 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E45 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E49 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E4D
 152+ 9E4D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E51 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E55 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E59 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E5D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E61 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E65 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E69 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E6D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E71 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E75 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E79 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E7D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E81
 166+ 9E81 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E85 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E89 06 00
 168+ 9E8B
 169+ 9E8B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E8F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E93 02 00
 171+ 9E95
 172+ 9E95 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E99 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E9D 04 00
 174+ 9E9F 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EA3 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EA7 08 00
 176+ 9EA9
 177+ 9EA9 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EAD 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EB1 02 00
 179+ 9EB3
 180+ 9EB3 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EB7 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EBB 06 00
 182+ 9EBD
 183+ 9EBD 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EC1 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EC5 06 00
 185+ 9EC7
 186+ 9EC7 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9ECB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9ECF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9ED3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9ED7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EDB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EDF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EE3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EE7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EEB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EEF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EF3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EF7
 199+ 9EF7              ; ----- ----- ----- ----- -----
 200+ 9EF7              ;
 201+ 9EF7              ;   27/06/23
 202+ 9EF7
 203+ 9EF7              Movimiento
 204+ 9EF7
 205+ 9EF7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EF7
 207+ 9EF7              ;    ld hl,(Posicion_actual)
 208+ 9EF7
 209+ 9EF7 3A F4 89         ld a,(Ctrl_2)
 210+ 9EFA CB 57            bit 2,a
 211+ 9EFC 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EFE
 213+ 9EFE 2A E6 89         ld hl,(Puntero_mov)
 214+ 9F01 7E               ld a,(hl)
 215+ 9F02
 216+ 9F02              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F02
 218+ 9F02              Inicia_desplazamiento.
 219+ 9F02
 220+ 9F02              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F02
 222+ 9F02 CD F6 9F         call Ajusta_velocidad_desplazamiento
 223+ 9F05
 224+ 9F05              ; Iniciamos (Repetimos_mov).
 225+ 9F05
 226+ 9F05 7E               ld a,(hl)
 227+ 9F06 E6 0F            and $0f
 228+ 9F08 32 EC 89         ld (Repetimos_desplazamiento),a
 229+ 9F0B 32 ED 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F0E
 231+ 9F0E              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F0E
 233+ 9F0E 23               inc hl
 234+ 9F0F 7E               ld a,(hl)
 235+ 9F10 32 EF 89         ld (Cola_de_desplazamiento),a
 236+ 9F13 2B               dec hl
 237+ 9F14
 238+ 9F14 21 F4 89         ld hl,Ctrl_2
 239+ 9F17 CB D6            set 2,(hl)
 240+ 9F19
 241+ 9F19              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F19              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F19
 244+ 9F19              Desplazamiento_iniciado
 245+ 9F19
 246+ 9F19 CD CA 9F         call Aplica_desplazamiento
 247+ 9F1C
 248+ 9F1C 3A F4 89         ld a,(Ctrl_2)
 249+ 9F1F CB 67            bit 4,a
 250+ 9F21 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F22
 252+ 9F22 21 EC 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F25 35               dec (hl)
 254+ 9F26 C0               ret nz
 255+ 9F27
 256+ 9F27              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F27              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F27              ; Analiza (Cola_de_desplazamiento).
 259+ 9F27
 260+ 9F27 3A EF 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F2A A7               and a
 262+ 9F2B CC 1F A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F2E 28 30            jr z,Reinicia_el_movimiento
 264+ 9F30
 265+ 9F30 FE FF            cp $ff
 266+ 9F32 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F34
 268+ 9F34 FE FE            cp $fe
 269+ 9F36 CC A3 9F         call z,Fijamos_bucle
 270+ 9F39 28 25            jr z,Reinicia_el_movimiento
 271+ 9F3B
 272+ 9F3B FE FD            cp $fd
 273+ 9F3D 20 11            jr nz,1F
 274+ 9F3F
 275+ 9F3F              ; ---
 276+ 9F3F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F3F
 278+ 9F3F 3A F4 89         ld a,(Ctrl_2)
 279+ 9F42 CB 5F            bit 3,a
 280+ 9F44 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F46
 282+ 9F46              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F46
 284+ 9F46 21 F4 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F49 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F4B
 287+ 9F4B CD B4 9F         call Inicia_Repetimos_movimiento
 288+ 9F4E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F50              ; ---
 290+ 9F50
 291+ 9F50 FE 01        1 cp 1
 292+ 9F52 CA 8D 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F55
 294+ 9F55 3D               dec a
 295+ 9F56 32 EF 89         ld (Cola_de_desplazamiento),a
 296+ 9F59
 297+ 9F59 3A ED 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F5C 32 EC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F5F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F5F C9               ret
 301+ 9F60
 302+ 9F60              Reinicia_el_movimiento
 303+ 9F60
 304+ 9F60 3A F4 89         ld a,(Ctrl_2)
 305+ 9F63 CB 5F            bit 3,a
 306+ 9F65 28 1B            jr z,2F
 307+ 9F67
 308+ 9F67              ; (Cola_de_desplazamiento)="254".
 309+ 9F67
 310+ 9F67 21 EE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F6A 35               dec (hl)
 312+ 9F6B 20 15            jr nz,2F
 313+ 9F6D
 314+ 9F6D              ; Fin de las repeticiones del último movimiento.
 315+ 9F6D
 316+ 9F6D 21 F4 89         ld hl,Ctrl_2
 317+ 9F70 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F72
 319+ 9F72 2A E6 89         ld hl,(Puntero_mov)
 320+ 9F75 23               inc hl
 321+ 9F76 23               inc hl
 322+ 9F77 23               inc hl
 323+ 9F78 22 E6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F7B              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F7B 7E               ld a,(hl)
 326+ 9F7C 32 EF 89         ld (Cola_de_desplazamiento),a
 327+ 9F7F
 328+ 9F7F C3 27 9F         jp Cola
 329+ 9F82
 330+ 9F82
 331+ 9F82 CD BF 9F     2 call Inicia_Puntero_mov
 332+ 9F85
 333+ 9F85 21 F4 89         ld hl,Ctrl_2
 334+ 9F88 CB 96            res 2,(hl)
 335+ 9F8A
 336+ 9F8A C3 F7 9E         jp Movimiento
 337+ 9F8D
 338+ 9F8D              Siguiente_desplazamiento
 339+ 9F8D
 340+ 9F8D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F8D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F8D
 343+ 9F8D 21 F4 89         ld hl,Ctrl_2
 344+ 9F90 CB 96            res 2,(hl)
 345+ 9F92
 346+ 9F92 2A E6 89         ld hl,(Puntero_mov)
 347+ 9F95 23               inc hl
 348+ 9F96 23               inc hl
 349+ 9F97 22 E6 89         ld (Puntero_mov),hl
 350+ 9F9A
 351+ 9F9A 7E               ld a,(hl)
 352+ 9F9B A7               and a
 353+ 9F9C CC 1F A0         call z,Incrementa_Puntero_indice_mov
 354+ 9F9F CA 60 9F         jp z,Reinicia_el_movimiento
 355+ 9FA2
 356+ 9FA2 C9               ret
 357+ 9FA3              ; Subrutinas -----------------------------------------
 358+ 9FA3              ; ---------- --------- --------- ---------- ----------
 359+ 9FA3              ;
 360+ 9FA3              ;   24/07/23
 361+ 9FA3              ;
 362+ 9FA3              ;   Fijamos_bucle
 363+ 9FA3              ;
 364+ 9FA3              ;
 365+ 9FA3
 366+ 9FA3              Fijamos_bucle
 367+ 9FA3
 368+ 9FA3 3A EA 89         ld a,(Incrementa_puntero)
 369+ 9FA6 3C               inc a
 370+ 9FA7 32 EB 89         ld (Incrementa_puntero_backup),a
 371+ 9FAA
 372+ 9FAA CD 1F A0         call Incrementa_Puntero_indice_mov
 373+ 9FAD 2A E4 89         ld hl,(Puntero_indice_mov)
 374+ 9FB0 22 E8 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FB3 C9               ret
 376+ 9FB4
 377+ 9FB4              ; ---------- --------- --------- ---------- ----------
 378+ 9FB4              ;
 379+ 9FB4              ;   07/7/23
 380+ 9FB4              ;
 381+ 9FB4              ;   Inicia_Repetimos_movimiento
 382+ 9FB4              ;
 383+ 9FB4              ;
 384+ 9FB4
 385+ 9FB4              Inicia_Repetimos_movimiento
 386+ 9FB4
 387+ 9FB4              ; Iniciamos (Repetimos_movimiento).
 388+ 9FB4
 389+ 9FB4 DD 2A E6 89      ld ix,(Puntero_mov)
 390+ 9FB8 DD 7E 02         ld a,(ix+2)
 391+ 9FBB 32 EE 89         ld (Repetimos_movimiento),a
 392+ 9FBE
 393+ 9FBE C9               ret
 394+ 9FBF
 395+ 9FBF              ; ---------- --------- --------- ---------- ----------
 396+ 9FBF              ;
 397+ 9FBF              ;   26/6/23
 398+ 9FBF              ;
 399+ 9FBF              ;   Inicia_Puntero_mov
 400+ 9FBF              ;
 401+ 9FBF              ;
 402+ 9FBF
 403+ 9FBF 2A E4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FC2 5E               ld e,(hl)
 405+ 9FC3 23               inc hl
 406+ 9FC4 56               ld d,(hl)
 407+ 9FC5 EB               ex de,hl
 408+ 9FC6 22 E6 89         ld (Puntero_mov),hl
 409+ 9FC9 C9               ret
 410+ 9FCA
 411+ 9FCA              ; ---------- --------- --------- ---------- ----------
 412+ 9FCA              ;
 413+ 9FCA              ;   27/06/23
 414+ 9FCA              ;
 415+ 9FCA              ;   Aplica_movimiento.
 416+ 9FCA
 417+ 9FCA              Aplica_desplazamiento
 418+ 9FCA
 419+ 9FCA              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FCA
 421+ 9FCA 2A E6 89         ld hl, (Puntero_mov)
 422+ 9FCD
 423+ 9FCD 7E               ld a,(hl)
 424+ 9FCE E6 F0            and $f0
 425+ 9FD0 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9FD1
 427+ 9FD1 CB 7E            bit 7,(hl)
 428+ 9FD3 28 03            jr z,1F
 429+ 9FD5 CD 04 9A         call Mov_up
 430+ 9FD8 2A E6 89     1 ld hl, (Puntero_mov)
 431+ 9FDB CB 76            bit 6,(hl)
 432+ 9FDD 28 03            jr z,2F
 433+ 9FDF CD D3 99         call Mov_down
 434+ 9FE2 2A E6 89     2 ld hl, (Puntero_mov)
 435+ 9FE5 CB 6E            bit 5,(hl)
 436+ 9FE7 28 03            jr z,3F
 437+ 9FE9 CD 65 9B         call Mov_left
 438+ 9FEC 2A E6 89     3 ld hl, (Puntero_mov)
 439+ 9FEF CB 66            bit 4,(hl)
 440+ 9FF1 C8               ret z
 441+ 9FF2 CD 47 9A         call Mov_right
 442+ 9FF5 C9               ret
 443+ 9FF6
 444+ 9FF6              ; ---------- --------- --------- ---------- ----------
 445+ 9FF6              ;
 446+ 9FF6              ;   26/06/23
 447+ 9FF6              ;
 448+ 9FF6              ;   Ajusta_velocidad_desplazamiento.
 449+ 9FF6
 450+ 9FF6              Ajusta_velocidad_desplazamiento
 451+ 9FF6
 452+ 9FF6              ; 1er byte de la cadena de movimiento.
 453+ 9FF6              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9FF6
 455+ 9FF6 CD 14 A0         call Extrae_nibble_alto
 456+ 9FF9
 457+ 9FF9 32 CA 89         ld (Vel_up),a
 458+ 9FFC 79               ld a,c
 459+ 9FFD E6 0F            and $0f
 460+ 9FFF 32 CB 89         ld (Vel_down),a
 461+ A002
 462+ A002              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A002              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A002
 465+ A002 23               inc hl
 466+ A003 CD 14 A0         call Extrae_nibble_alto
 467+ A006
 468+ A006 32 C8 89         ld (Vel_left),a
 469+ A009 79               ld a,c
 470+ A00A E6 0F            and $0f
 471+ A00C 32 C9 89         ld (Vel_right),a
 472+ A00F
 473+ A00F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A00F
 475+ A00F 23               inc hl
 476+ A010 22 E6 89         ld (Puntero_mov),hl
 477+ A013 C9               ret
 478+ A014
 479+ A014 06 04        Extrae_nibble_alto ld b,4
 480+ A016 7E               ld a,(hl)
 481+ A017 4F               ld c,a
 482+ A018 E6 F0            and $f0
 483+ A01A CB 3F        1 srl a
 484+ A01C 10 FC            djnz 1B
 485+ A01E C9               ret
 486+ A01F
 487+ A01F              ; ---------- --------- --------- ---------- ----------
 488+ A01F              ;
 489+ A01F              ;   5/7/23
 490+ A01F              ;
 491+ A01F              ;   Incrementa_Puntero_indice_mov
 492+ A01F
 493+ A01F              Incrementa_Puntero_indice_mov
 494+ A01F
 495+ A01F 21 EA 89         ld hl,Incrementa_puntero
 496+ A022 34               inc (hl)
 497+ A023
 498+ A023 2A E4 89         ld hl,(Puntero_indice_mov)
 499+ A026 01 02 00         ld bc,2
 500+ A029 A7               and a
 501+ A02A 09               add hl,bc
 502+ A02B 22 E4 89         ld (Puntero_indice_mov),hl
 503+ A02E
 504+ A02E 7E               ld a,(hl)
 505+ A02F A7               and a
 506+ A030
 507+ A030              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A030
 509+ A030              ;    jr z,$
 510+ A030
 511+ A030              ;! Reinicia el Patrón de movimiento.
 512+ A030
 513+ A030 CC 35 A0         call z,Inicializa_Puntero_indice_mov
 514+ A033
 515+ A033 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A034
 517+ A034 C9               ret
 518+ A035
 519+ A035
 520+ A035              ; ---------- --------- --------- ---------- ----------
 521+ A035              ;
 522+ A035              ;   24/07/23
 523+ A035              ;
 524+ A035              ;   Inicializa_Puntero_indice_mov
 525+ A035
 526+ A035              Inicializa_Puntero_indice_mov
 527+ A035
 528+ A035              ; Existe etiqueta de bucle principal???
 529+ A035
 530+ A035 2A E8 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A038 24               inc h
 532+ A039 25               dec h
 533+ A03A 28 05            jr z,2F
 534+ A03C
 535+ A03C 22 E4 89         ld (Puntero_indice_mov),hl
 536+ A03F 18 14            jr 3F
 537+ A041
 538+ A041              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A041
 540+ A041 3A EA 89     2 ld a,(Incrementa_puntero)
 541+ A044 47               ld b,a
 542+ A045
 543+ A045 2A E4 89         ld hl,(Puntero_indice_mov)
 544+ A048 2B           1 dec hl
 545+ A049 2B               dec hl
 546+ A04A 10 FC            djnz 1B
 547+ A04C 22 E4 89         ld (Puntero_indice_mov),hl
 548+ A04F
 549+ A04F AF               xor a
 550+ A050 32 EA 89         ld (Incrementa_puntero),a
 551+ A053 18 06            jr 4F
 552+ A055
 553+ A055 3A EB 89     3 ld a,(Incrementa_puntero_backup)
 554+ A058 32 EA 89         ld (Incrementa_puntero),a
 555+ A05B C9           4 ret
 556+ A05C
 557+ A05C
 558+ A05C
# file closed: Patrones_de_mov.asm
1411  A05C              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A05C              ; Relojes y temporizaciones.
   2+ A05C
   3+ A05C              ; ------------------------------------------------------
   4+ A05C              ;
   5+ A05C              ;	16/7/23
   6+ A05C              ;
   7+ A05C              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A05C              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A05C              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A05C              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A05C              ;
  12+ A05C              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A05C              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A05C
  15+ A05C              ; Disparo_entidad db 1
  16+ A05C              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A05C              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A05C
  19+ A05C              Habilita_disparos
  20+ A05C
  21+ A05C 7E           	ld a,(hl)
  22+ A05D A7           	and a
  23+ A05E C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A05F
  25+ A05F EB           	ex de,hl
  26+ A060
  27+ A060 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A061 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A062
  30+ A062              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A062
  32+ A062 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A063 7E           	ld a,(hl)
  34+ A064 23           	inc hl
  35+ A065 77           	ld (hl),a
  36+ A066
  37+ A066 EB           	ex de,hl						; Habilitamos disparo.
  38+ A067 3E 01        	ld a,1
  39+ A069 77           	ld (hl),a
  40+ A06A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1412  A06B              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A06B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A06B              ;
   3+ A06B              ;	9/8/23
   4+ A06B              ;
   5+ A06B              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A06B
   7+ A06B              ;	ADC HL,SP	LD (addr),SP
   8+ A06B              ;	ADD HL,SP	LD SP,(addr)
   9+ A06B              ;	ADD IX,SP	LD SP,nn
  10+ A06B              ; 	ADD IY,SP	LD SP,HL
  11+ A06B              ;				LD SP,IX
  12+ A06B              ;	DEC SP		LD SP,IY
  13+ A06B
  14+ A06B              ;	EX (SP),HL
  15+ A06B              ;	EX (SP),IX
  16+ A06B              ;	EX (SP),IY
  17+ A06B
  18+ A06B              ;	INC SP
  19+ A06B
  20+ A06B                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;    ld a,(Contador_de_frames)
  32+ 7FA0              ;    jr $
  33+ 7FA0
  34+ 7FA0
  35+ 7FA0 ED 73 07 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  36+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  37+ 7FA7
  38+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  39+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  40+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  41+ 7FAC
  42+ 7FAC 3A F6 89         ld a,(Ctrl_1)
  43+ 7FAF CB 47            bit 0,a
  44+ 7FB1 28 05            jr z,2F
  45+ 7FB3
  46+ 7FB3 2A 0D 8A         ld hl,(Stack_snapshot_disparos)
  47+ 7FB6 18 03            jr 4F
  48+ 7FB8
  49+ 7FB8 2A 0B 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  50+ 7FBB
  51+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  52+ 7FBD
  53+ 7FBD D1           1 pop de
  54+ 7FBE 73               ld (hl),e
  55+ 7FBF 23               inc hl
  56+ 7FC0 72               ld (hl),d
  57+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  58+ 7FC2 10 F9            djnz 1B
  59+ 7FC4
  60+ 7FC4 CB 47            bit 0,a
  61+ 7FC6 28 05            jr z,5F
  62+ 7FC8
  63+ 7FC8 22 0D 8A         ld (Stack_snapshot_disparos),hl
  64+ 7FCB 18 03            jr 6F
  65+ 7FCD
  66+ 7FCD 22 0B 8A     5 ld (Stack_snapshot),hl
  67+ 7FD0 ED 7B 07 8A  6 ld sp,(Stack)
  68+ 7FD4
  69+ 7FD4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  70+ 7FD4
  71+ 7FD4 5D               ld e,l
  72+ 7FD5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  73+ 7FD6
  74+ 7FD6 2A 27 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  75+ 7FD9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  76+ 7FDA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  77+ 7FDB 72               ld (hl),d                                     ; _ álbum a otro.
  78+ 7FDC
  79+ 7FDC C9               ret
  80+ 7FDD
  81+ 7FDD              ; ------------------------------------------------
  82+ 7FDD              ;
  83+ 7FDD              ;   3/08/23
  84+ 7FDD              ;
  85+ 7FDD              ;   La rutina estará situada justo después de:
  86+ 7FDD              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDD              ;
  88+ 7FDD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDD
  91+ 7FDD                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 0F 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 0F 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 13 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447 2A 13 8A         ld hl,(End_Snapshot_1)
 136+ 744A 22 0F 8A         ld (End_Snapshot),hl        ; Transferimos (End_Snapshot) de un álbum a otro.
 137+ 744D
 138+ 744D              ;   Limpiamos Album_de_fotos_1.
 139+ 744D
 140+ 744D 2A 13 8A         ld hl,(End_Snapshot_1)
 141+ 7450 01 84 70         ld bc,Album_de_fotos_1
 142+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 143+ 7456 AF               xor a
 144+ 7457 02               ld (bc),a
 145+ 7458
 146+ 7458 CD BB 74         call Limpia_album
 147+ 745B
 148+ 745B 21 00 00         ld hl,0
 149+ 745E 22 13 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 150+ 7461
 151+ 7461              ; ----- ----- ----- -----
 152+ 7461
 153+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 154+ 7461
 155+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 156+ 7464 7E               ld a,(hl)
 157+ 7465 A7               and a
 158+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 159+ 7468              ;                               ; _ información del album3 al album2.
 160+ 7468              ; ----- ----- ----- -----
 161+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 162+ 7468
 163+ 7468 2A 17 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 164+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 165+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 166+ 7471
 167+ 7471 CD BB 74         call Limpia_album
 168+ 7474
 169+ 7474 2A 17 8A         ld hl,(End_Snapshot_2)
 170+ 7477 22 13 8A         ld (End_Snapshot_1),hl      ; Transferimos (End_Snapshot) de un álbum a otro.
 171+ 747A
 172+ 747A              ;   Limpiamos Album_de_fotos_2.
 173+ 747A
 174+ 747A 2A 17 8A         ld hl,(End_Snapshot_2)
 175+ 747D 01 07 71         ld bc,Album_de_fotos_2
 176+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 177+ 7483 AF               xor a
 178+ 7484 02               ld (bc),a
 179+ 7485
 180+ 7485 CD BB 74         call Limpia_album
 181+ 7488
 182+ 7488 21 00 00         ld hl,0
 183+ 748B 22 17 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 184+ 748E
 185+ 748E              ; ----- ----- ----- -----
 186+ 748E
 187+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 188+ 748E
 189+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 190+ 7491 7E               ld a,(hl)
 191+ 7492 A7               and a
 192+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 193+ 7494
 194+ 7494              ; ----- ----- ----- -----
 195+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 196+ 7494
 197+ 7494 2A 1B 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 198+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 199+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 200+ 749D
 201+ 749D CD BB 74         call Limpia_album
 202+ 74A0
 203+ 74A0 2A 1B 8A         ld hl,(End_Snapshot_3)
 204+ 74A3 22 17 8A         ld (End_Snapshot_2),hl      ; Transferimos (End_Snapshot) de un álbum a otro.
 205+ 74A6
 206+ 74A6              ;   Limpiamos Album_de_fotos_2.
 207+ 74A6
 208+ 74A6 2A 1B 8A         ld hl,(End_Snapshot_3)
 209+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 210+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 211+ 74AF AF               xor a
 212+ 74B0 02               ld (bc),a
 213+ 74B1
 214+ 74B1 CD BB 74         call Limpia_album
 215+ 74B4
 216+ 74B4 21 00 00         ld hl,0
 217+ 74B7 22 1B 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 218+ 74BA C9               ret
 219+ 74BB
 220+ 74BB              ; ----------------------------------------------------
 221+ 74BB              ;
 222+ 74BB              ;   10/8/23
 223+ 74BB              ;
 224+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 225+ 74BB              ;
 226+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 227+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 228+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 229+ 74BB
 230+ 74BB              ;    ld hl,(End_Snapshot)
 231+ 74BB              ;    ld bc,Album_de_fotos
 232+ 74BB              ;    ld de,Album_de_fotos+1
 233+ 74BB
 234+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 235+ 74BB
 236+ 74BB C5           Limpia_album push bc            ; Guardo ORIGEN.
 237+ 74BC ED 42            sbc hl,bc
 238+ 74BE 4D               ld c,l
 239+ 74BF 44               ld b,h
 240+ 74C0 E1               pop hl
 241+ 74C1 ED B0            ldir
 242+ 74C3 C9               ret
 243+ 74C4
 244+ 74C4              ; -----------------------------------------------
 245+ 74C4
 246+ 74C4
 247+ 74C4
 248+ 74C4
 249+ 74C4
# file closed: Guarda_foto_registros.asm
1413  74C4
1414  74C4              	SAVESNA "Pruebas.sna", START
1415  74C4
1416  74C4
1417  74C4
1418  74C4
# file closed: Banco_de_pruebas.asm
