# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15 CD 43 8E     	call Frame
  34  AA18              ;	call Pinta_Amadeus
  35  AA18 CD DE 8A     	call Gestiona_Amadeus
  36  AA1B
  37  AA1B FD E1        	pop iy
  38  AA1D DD E1        	pop ix
  39  AA1F F1           	pop af
  40  AA20 C1           	pop bc
  41  AA21 D1           	pop de
  42  AA22 E1           	pop hl
  43  AA23 D9           	exx
  44  AA24 C1           	pop bc
  45  AA25 D1           	pop de
  46  AA26 E1           	pop hl
  47  AA27 08           	ex af,af'
  48  AA28 F1           	pop af
  49  AA29 08           	ex af,af'
  50  AA2A D9           	exx
  51  AA2B
  52  AA2B ED 7B 18 89  	ld sp,(Stack_3)
  53  AA2F
  54  AA2F FB           	ei
  55  AA30 ED 4D        	reti
  56  AA32
  57  AA32              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  58  AA32
  59  AA32              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA32              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA32              ;
   3+ AA32              ;	17/02/23
   4+ AA32              ;
   5+ AA32              ;	Sprites e índices.
   6+ AA32
   7+ AA32              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  60  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 8C 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 8C 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  61  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 5B 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD D4 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 5D 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD D4 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 5D 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD D4 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 5D 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 5D 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD D4 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 14 00     	ld bc,20
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 0A        	cp 10
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 0A        	ld a,10
 209+ 88B9 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  62  88C4
  63  88C4              ; ******************************************************************************************************************************************************************************************
  64  88C4              ; Constantes.
  65  88C4              ; ******************************************************************************************************************************************************************************************
  66  88C4              ;
  67  88C4              ; 4/9/23
  68  88C4              ;
  69  88C4              ; Constantes generales.
  70  88C4              ;
  71  88C4
  72  88C4              Sprite_vacio equ $f000
  73  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  74  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  75  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  76  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  77  88C4
  78  88C4              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  79  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  80  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  81  88C4              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  82  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  83  88C4              ;
  84  88C4              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  85  88C4              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  86  88C4              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  87  88C4              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  88  88C4              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  89  88C4              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  90  88C4
  91  88C4              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
  92  88C4
  93  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  94  88C4
  95  88C4              ; ******************************************************************************************************************************************************************************************
  96  88C4              ; Variables.
  97  88C4              ; ******************************************************************************************************************************************************************************************
  98  88C4              ;
  99  88C4              ; 28/07/23
 100  88C4              ;
 101  88C4              ; Variables de DRAW. (Motor principal).
 102  88C4              ;
 103  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 104  88C4
 105  88C4 00           Filas db 0												; Filas. [DRAW]
 106  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
 107  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 108  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 109  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 110  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 111  88CC
 112  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 113  88CC
 114  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 115  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 116  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 117  88CD 00           Attr db 0												; Atributos de la entidad:
 118  88CE
 119  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 120  88CE              ;
 121  88CE              ;	COLORES: 0 ..... NEGRO
 122  88CE              ;    		 1 ..... AZUL
 123  88CE              ; 			 2 ..... ROJO
 124  88CE              ;			 3 ..... MAGENTA
 125  88CE              ; 			 4 ..... VERDE
 126  88CE              ; 			 5 ..... CIAN
 127  88CE              ;			 6 ..... AMARILLO
 128  88CE              ; 			 7 ..... BLANCO
 129  88CE
 130  88CE 00 00        Indice_Sprite_der defw 0
 131  88D0 00 00        Indice_Sprite_izq defw 0
 132  88D2 00 00        Puntero_DESPLZ_der defw 0
 133  88D4 00 00        Puntero_DESPLZ_izq defw 0
 134  88D6
 135  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 136  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 137  88D9
 138  88D9              ; Variables de objeto. (Características).
 139  88D9
 140  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 141  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 142  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 143  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 144  88DD
 145  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 146  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 147  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 148  88DE 00 00 00...  Variables_de_borrado ds 6
 149  88E4
 150  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 151  88E6 00 00        	defw 0
 152  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 153  88EA 00 00 00 00  	db 0,0,0,0
 154  88EE
 155  88EE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 156  88EE
 157  88EE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 158  88EF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 159  88EF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 160  88EF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 161  88EF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 162  88EF              ;
 163  88EF              ; 														DESCRIPCIÖN:
 164  88EF              ;
 165  88EF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 166  88EF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 167  88EF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 168  88EF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 169  88EF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 170  88EF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 171  88EF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 172  88EF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 173  88EF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 174  88EF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 175  88EF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 176  88EF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 177  88EF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 178  88EF              ;
 179  88EF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 180  88EF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 181  88EF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 182  88EF
 183  88EF 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 184  88F0
 185  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 186  88F0
 187  88F0 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 188  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 189  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 190  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 191  88F7              ;
 192  88F7              ;
 193  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 194  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 195  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 196  88F8 00           Incrementa_puntero_backup db 0
 197  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 198  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 199  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 200  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 201  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 202  88FD              ;
 203  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 204  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 205  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 206  88FD              ;
 207  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 208  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 209  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 210  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 211  88FD              ;
 212  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 213  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 214  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 215  88FD
 216  88FD
 217  88FD              ; Variables de funcionamiento. [DRAW].
 218  88FD
 219  88FD 00           Columnas db 0
 220  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 221  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 222  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 223  8901
 224  8901              ; variables de control general.
 225  8901
 226  8901 00           Ctrl_2 db 0
 227  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 228  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 229  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 230  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 231  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 232  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 233  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 234  8902              ;
 235  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 236  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 237  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 238  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 239  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 240  8902
 241  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 242  8903
 243  8903              ;! 63 Bytes por entidad.
 244  8903
 245  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 246  8903              ;					         		---------;      ;---------
 247  8903
 248  8903
 249  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 250  8903
 251  8903 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 252  8904
 253  8904              ;														DESCRIPCIÓN:
 254  8904              ;
 255  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 256  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 257  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 258  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 259  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 260  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 261  8904
 262  8904              ;														BIT 3, Recarga de nueva oleada.
 263  8904              ;														BIT 4, Recarga de nueva oleada.
 264  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 265  8904              ;														BIT 6, **** Frame completo.
 266  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 267  8904
 268  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 269  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 270  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 271  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 272  8906
 273  8906
 274  8906
 275  8906              ; Gestión de ENTIDADES y CAJAS.
 276  8906
 277  8906 00 00        Puntero_store_caja defw 0
 278  8908 00 00        Puntero_restore_caja defw 0
 279  890A 00 00        Indice_restore_caja defw 0
 280  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 281  890D 00           Numero_parcial_de_entidades db 0
 282  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 283  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 284  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 285  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 286  8910              ;														; _ (Numero_de_malotes)="0".
 287  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 288  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 289  8914              ;														; _ puntero (Indice_entidades).
 290  8914
 291  8914
 292  8914              ;---------------------------------------------------------------------------------------------------------------
 293  8914              ;
 294  8914              ;	2/9/23
 295  8914              ;
 296  8914              ;	Álbumes.
 297  8914
 298  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 299  8916              ;														; _variable para almacenar lo posición del puntero_
 300  8916              ; 														; _de pila, SP.
 301  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 302  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 303  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 304  891A 00 00        Stack_snapshot defw 0
 305  891C 00 00        Stack_snapshot_disparos defw 0
 306  891E
 307  891E 00 00        End_Snapshot defw 0
 308  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 309  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 310  8922              ;														; _el snapshot de los registros del siguiente disparo.
 311  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 312  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 313  8924 00 00        End_Snapshot_1 defw 0
 314  8926 00 00        End_Snapshot_disparos_1 defw 0
 315  8928 00 00        End_Snapshot_2 defw 0
 316  892A 00 00        End_Snapshot_disparos_2 defw 0
 317  892C 00 00        End_Snapshot_3 defw 0
 318  892E 00 00        End_Snapshot_disparos_3 defw 0
 319  8930
 320  8930 00 00        Puntero_indice_album_de_fotos defw 0
 321  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 322  8934
 323  8934 00 00        Puntero_indice_End_Snapshot defw 0
 324  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 325  8938 00 00        Puntero_de_End_Snapshot defw 0
 326  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 327  893C
 328  893C              ;---------------------------------------------------------------------------------------------------------------
 329  893C
 330  893C              ; Gestión de Disparos.
 331  893C
 332  893C 00           Numero_de_disparotes db 0
 333  893D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 334  893F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 335  8941 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 336  8942              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 337  8942              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 338  8942 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 339  8944              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 340  8944              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 341  8944              ;														; _produzca colisión.
 342  8944 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 343  8946              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 344  8946 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 345  8949              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 346  8949 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 347  894C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 348  894C 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 349  894E 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 350  894F
 351  894F              ;---------------------------------------------------------------------------------------------------------------
 352  894F
 353  894F              ; Relojes y temporizaciones.
 354  894F
 355  894F 00           Contador_de_frames db 0
 356  8950 00           Contador_de_frames_2 db 0
 357  8951
 358  8951 04           Clock_explosion db 4
 359  8952 1E           Clock_Entidades_en_curso db 30
 360  8953 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 361  8954              ;														; Repite la oleada de entidades.
 362  8954 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 363  8955 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 364  8956 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 365  8957
 366  8957 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 367  8958 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 368  8959 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 369  895A
 370  895A              ;---------------------------------------------------------------------------------------------------------------
 371  895A
 372  895A              ; Gestión de NIVELES.
 373  895A
 374  895A 00           Nivel db 0												; Nivel actual del juego.
 375  895B 00 00        Puntero_indice_NIVELES defw 0
 376  895D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 377  895F              ; 														; _ que definen el NIVEL.
 378  895F              ; Y todo comienza aquí .....
 379  895F              ;
 380  895F              ; Rutina principal *************************************************************************************************************************************************************************
 381  895F              ;
 382  895F              ;	14/11/22
 383  895F
 384  895F              START
 385  895F
 386  895F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 387  8962 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 388  8964 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 389  8966 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 390  8968 F3           	DI
 391  8969
 392  8969 3E 07        	ld a,%00000111
 393  896B CD B9 99     	call Cls
 394  896E
 395  896E CD AD 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 396  8971
 397  8971              ; INICIALIZACIÓN.
 398  8971
 399  8971 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 400  8974
 401  8974 CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 402  8977
 403  8977 CD D6 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 404  897A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 405  897A CD EC 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 406  897D              ;													     ; _ malotes antes de guardar ninguna foto.
 407  897D              ; ----------
 408  897D
 409  897D CD 5D 8D     	call Restore_entidad
 410  8980
 411  8980 21 0D 89     	ld hl,Numero_parcial_de_entidades
 412  8983 46           	ld b,(hl)
 413  8984 04           	inc b
 414  8985 05           	dec b
 415  8986 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 416  8988
 417  8988              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 418  8988              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 419  8988              ;	Pintamos el resto de entidades:
 420  8988
 421  8988              ;	INICIA ENTIDADES !!!!!
 422  8988
 423  8988 C5           1 push bc  												; Guardo el contador de entidades.
 424  8989 CD 7C 8B     	call Inicia_entidad
 425  898C C1           	pop bc
 426  898D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 427  898F
 428  898F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 429  898F              ; (Esto se dá cuando se inicia una nueva oleada).
 430  898F
 431  898F 3A 03 89     	ld a,(Ctrl_1)
 432  8992 CB 5F        	bit 3,a
 433  8994 20 15        	jr nz,5F											; Loop
 434  8996
 435  8996              ; 	INICIA AMADEUS !!!!!
 436  8996
 437  8996 CD 84 8D     3 call Restore_Amadeus
 438  8999 CD DA 8C     	call Inicia_Puntero_objeto
 439  899C CD AC 93     	call Draw
 440  899F CD A0 7F     	call Guarda_foto_registros
 441  89A2 CD 10 8E     	call Guarda_datos_de_borrado_Amadeus
 442  89A5
 443  89A5 11 9E 85     	ld de,Amadeus_db
 444  89A8 CD 96 8D     	call Store_Amadeus
 445  89AB
 446  89AB              ; 	INICIA DISPAROS !!!!!
 447  89AB
 448  89AB              ;	call Inicia_Puntero_Disparo_Entidades
 449  89AB              ;	call Inicia_Puntero_Disparo_Amadeus
 450  89AB
 451  89AB              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 452  89AB
 453  89AB CD D6 8B     5 call Inicia_punteros_de_cajas
 454  89AE CD 5D 8D     	call Restore_entidad
 455  89B1
 456  89B1 3A 03 89     	ld a,(Ctrl_1)
 457  89B4 CB 5F        	bit 3,a
 458  89B6 28 07        	jr z,6F
 459  89B8
 460  89B8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 461  89B8
 462  89B8 21 03 89     	ld hl,Ctrl_1
 463  89BB CB 9E        	res 3,(hl)
 464  89BD 18 04        	jr Main
 465  89BF
 466  89BF
 467  89BF              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 468  89BF              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 469  89BF              ; _ para situarnos en el siguiente album.
 470  89BF
 471  89BF CD 1D 8C     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 472  89C2 F3           	di
 473  89C3
 474  89C3              ; ------------------------------------
 475  89C3
 476  89C3              Main
 477  89C3              ;
 478  89C3              ;	3/8/23
 479  89C3
 480  89C3 3E 01            ld a,1
 481  89C5 D3 FE        	out ($fe),a											; Azul.
 482  89C7
 483  89C7 FB           	ei
 484  89C8
 485  89C8 3A 52 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 486  89CB 47           	ld b,a
 487  89CC 3A 4F 89     	ld a,(Contador_de_frames)
 488  89CF B8           	cp b
 489  89D0 20 18        	jr nz,13F
 490  89D2
 491  89D2 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 492  89D5 47           	ld b,a
 493  89D6 3A 0E 89     	ld a,(Entidades_en_curso)
 494  89D9 B8           	cp b
 495  89DA 28 0E        	jr z,13F
 496  89DC 30 0C        	jr nc,13F
 497  89DE
 498  89DE 3C           	inc a
 499  89DF 32 0E 89     	ld (Entidades_en_curso),a
 500  89E2
 501  89E2 3A 52 89     	ld a,(Clock_Entidades_en_curso)
 502  89E5
 503  89E5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 504  89E5              ;! _ IMPREDECIBLE !!!!
 505  89E5
 506  89E5 C6 64        	add 100
 507  89E7 32 52 89     	ld (Clock_Entidades_en_curso),a
 508  89EA
 509  89EA              ; Habilita disparos.
 510  89EA
 511  89EA 21 54 89     13 ld hl,Disparo_Amadeus
 512  89ED 11 56 89     	ld de,CLOCK_repone_disparo_Amadeus
 513  89F0 CD 7D 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 514  89F3
 515  89F3 21 57 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 516  89F6 11 59 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 517  89F9 CD 7D 9D     	call Habilita_disparos
 518  89FC
 519  89FC              ; COLISIONES.
 520  89FC
 521  89FC CD 8E 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 522  89FF
 523  89FF              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 524  89FF              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 525  89FF              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 526  89FF
 527  89FF AF           	xor a
 528  8A00 32 41 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 529  8A03
 530  8A03 CD D6 8B     	call Inicia_punteros_de_cajas
 531  8A06 CD 5D 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 532  8A09              ; 														; _ en DRAW.
 533  8A09 3A C4 88     	ld a,(Filas)
 534  8A0C A7           	and a
 535  8A0D 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 536  8A0F CD 6F 8D     	call Incrementa_punteros_de_cajas
 537  8A12 18 F2        	jr 12B
 538  8A14
 539  8A14              ; ---------------------------------------------------------------------------------------
 540  8A14
 541  8A14 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 542  8A17 47               ld b,a
 543  8A18 A7           	and a
 544  8A19 20 14        	jr nz,11F
 545  8A1B
 546  8A1B 21 03 89     	ld hl,Ctrl_1
 547  8A1E CB 66        	bit 4,(hl)
 548  8A20 C2 AF 8A     	jp nz,16F
 549  8A23
 550  8A23 21 03 89     	ld hl,Ctrl_1
 551  8A26 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 552  8A28
 553  8A28 3A 4F 89     	ld a,(Contador_de_frames)
 554  8A2B 3C           	inc a
 555  8A2C 32 53 89     	ld (Activa_recarga_cajas),a
 556  8A2F
 557  8A2F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 558  8A2F
 559  8A2F 3A 0E 89     11 ld a,(Entidades_en_curso)
 560  8A32 A7           	and a
 561  8A33 CA AF 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 562  8A36 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 563  8A37
 564  8A37              ; Código que ejecutamos con cada entidad:
 565  8A37              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 566  8A37
 567  8A37 C5           15 push bc 												; Nº de entidades en curso.
 568  8A38
 569  8A38              ; Impacto ???
 570  8A38
 571  8A38 3A DD 88     	ld a,(Impacto)
 572  8A3B A7           	and a
 573  8A3C 28 2D        	jr z,8F
 574  8A3E
 575  8A3E              ; Hay Impacto en esta entidad.
 576  8A3E
 577  8A3E 21 51 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 578  8A41 35           	dec (hl)
 579  8A42 20 65        	jr nz,17F
 580  8A44
 581  8A44              ;! Velocidad de la animación de la explosión.
 582  8A44
 583  8A44 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 584  8A46              ;														; _,(velocidad de la explosión).
 585  8A46 CD 90 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 586  8A49
 587  8A49              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 588  8A49
 589  8A49 3A 01 89     	ld a,(Ctrl_2)
 590  8A4C CB 4F        	bit 1,a
 591  8A4E 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 592  8A50
 593  8A50              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 594  8A50
 595  8A50 3A CC 88     	ld a,(CTRL_DESPLZ)
 596  8A53 A7           	and a
 597  8A54 20 08        	jr nz,18F
 598  8A56
 599  8A56 21 84 84     	ld hl,Indice_Explosion_2x2-2
 600  8A59 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 601  8A5C 18 06        	jr 19F
 602  8A5E
 603  8A5E 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 604  8A61 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 605  8A64
 606  8A64 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 607  8A67 CB CE        	set 1,(hl)
 608  8A69 18 22        	jr 7F
 609  8A6B
 610  8A6B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 611  8A6B              ; _con las coordenadas de la entidad almacenada en DRAW.
 612  8A6B
 613  8A6B 3A 03 89     8 ld a,(Ctrl_1)
 614  8A6E CB 57        	bit 2,a
 615  8A70 28 1B        	jr z,7F
 616  8A72
 617  8A72 2A 44 89     	ld hl,(Coordenadas_disparo_certero)
 618  8A75 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 619  8A76              ;														; E contiene la coordenada_X del disparo.
 620  8A76 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 621  8A79              ;														; H FILA, (Coordenada_y de la entidad).
 622  8A79 A7           	and a
 623  8A7A ED 52        	sbc hl,de
 624  8A7C
 625  8A7C CD C5 92     	call Determina_resultado_comparativa
 626  8A7F
 627  8A7F 78           	ld a,b
 628  8A80 A7           	and a
 629  8A81 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 630  8A83
 631  8A83              ; ----- ----- -----
 632  8A83
 633  8A83 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 634  8A85 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 635  8A88
 636  8A88 21 03 89     	ld hl,Ctrl_1
 637  8A8B CB 96        	res 2,(hl)
 638  8A8D
 639  8A8D CD 0B 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 640  8A90
 641  8A90 3A EE 88     	ld a,(Ctrl_0)
 642  8A93 CB 67        	bit 4,a
 643  8A95 28 12        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 644  8A97
 645  8A97              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 646  8A97              ; [[[
 647  8A97 CD F8 8D     	call Detecta_disparo_entidad
 648  8A9A              ; ]]]
 649  8A9A
 650  8A9A CD A0 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 651  8A9D CD FE 8D     	call Guarda_datos_de_borrado
 652  8AA0
 653  8AA0 21 EE 88     	ld hl,Ctrl_0
 654  8AA3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 655  8AA5 AF           	xor a
 656  8AA6 32 EF 88     	ld (Obj_dibujado),a
 657  8AA9
 658  8AA9 CD 22 8D     17 call Store_Restore_cajas
 659  8AAC
 660  8AAC C1           	pop bc
 661  8AAD 10 88        	djnz 15B
 662  8AAF
 663  8AAF              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 664  8AAF              ; Hemos gestionado todas las unidades.
 665  8AAF              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 666  8AAF
 667  8AAF              ;	ld hl,Ctrl_1
 668  8AAF              ;	res 2,(hl)
 669  8AAF
 670  8AAF CD 1D 8C     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 671  8AB2              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 672  8AB2              ;														; _ interrupción.
 673  8AB2              ; ----------------------------------------
 674  8AB2
 675  8AB2 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 676  8AB5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 677  8AB7 CA C3 89     	jp z,Main
 678  8ABA
 679  8ABA 3A 4F 89     	ld a,(Contador_de_frames)
 680  8ABD 47           	ld b,a
 681  8ABE 3A 53 89     	ld a,(Activa_recarga_cajas)
 682  8AC1 B8           	cp b
 683  8AC2 28 08        	jr z,20F
 684  8AC4
 685  8AC4 21 03 89     	ld hl,Ctrl_1
 686  8AC7 CB E6        	set 4,(hl)
 687  8AC9 C3 C3 89     	jp Main
 688  8ACC
 689  8ACC 21 03 89     20 ld hl,Ctrl_1
 690  8ACF CB A6        	res 4,(hl)
 691  8AD1
 692  8AD1 F3           	di
 693  8AD2
 694  8AD2 3A 4F 89     	ld a,(Contador_de_frames)
 695  8AD5
 696  8AD5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 697  8AD5              ;! _ IMPREDECIBLE !!!!
 698  8AD5
 699  8AD5 C6 0A        	add 10
 700  8AD7 32 52 89     	ld (Clock_Entidades_en_curso),a
 701  8ADA
 702  8ADA C3 74 89     	jp 4B
 703  8ADD
 704  8ADD C9           	ret
 705  8ADE
 706  8ADE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 707  8ADE
 708  8ADE              Gestiona_Amadeus
 709  8ADE
 710  8ADE 3E 04            ld a,4
 711  8AE0 D3 FE        	out ($fe),a											; Azul.
 712  8AE2
 713  8AE2
 714  8AE2 CD 84 8D     	call Restore_Amadeus
 715  8AE5
 716  8AE5              ;! Activa/desactiva impacto con Amadeus.
 717  8AE5
 718  8AE5 3A DD 88     	ld a,(Impacto)
 719  8AE8 A7           	and a
 720  8AE9 20 FE        	jr nz,$
 721  8AEB
 722  8AEB CD 64 8B     	call Mov_Amadeus
 723  8AEE
 724  8AEE 3A EE 88     	ld a,(Ctrl_0)
 725  8AF1 CB 67        	bit 4,a
 726  8AF3 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 727  8AF5
 728  8AF5 CD A0 8B     	call Guarda_foto_entidad_a_pintar
 729  8AF8 CD 10 8E     	call Guarda_datos_de_borrado_Amadeus
 730  8AFB
 731  8AFB 21 EE 88     14 ld hl,Ctrl_0
 732  8AFE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 733  8B00
 734  8B00 AF           	xor a
 735  8B01 32 EF 88     	ld (Obj_dibujado),a
 736  8B04
 737  8B04 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 738  8B07 CD 96 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 739  8B0A
 740  8B0A              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 741  8B0A
 742  8B0A              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 743  8B0A
 744  8B0A              ;	call Calcula_numero_de_disparotes
 745  8B0A
 746  8B0A C9           	ret
 747  8B0B
 748  8B0B              ; --------------------------------------------------------------------------------------------------------------
 749  8B0B              ;
 750  8B0B              ;	27/05/23
 751  8B0B
 752  8B0B              Mov_obj
 753  8B0B
 754  8B0B 3A 01 89     	ld a,(Ctrl_2)
 755  8B0E CB 4F        	bit 1,a
 756  8B10 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 757  8B12
 758  8B12              ; Explosión:
 759  8B12
 760  8B12 3A 02 89     	ld a,(Frames_explosion)
 761  8B15 A7           	and a
 762  8B16 20 11        	jr nz,4F
 763  8B18
 764  8B18              ; Una alimaña menos!!!!!!!!!1
 765  8B18
 766  8B18 CD 9F 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 767  8B1B 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 768  8B1E 35           	dec (hl)
 769  8B1F 21 0E 89     	ld hl,Entidades_en_curso
 770  8B22 35           	dec (hl)
 771  8B23 21 0C 89     	ld hl,Numero_de_entidades
 772  8B26 35           	dec (hl)
 773  8B27 18 3A        	jr 3F
 774  8B29
 775  8B29              ; -----
 776  8B29
 777  8B29              ;	`Movemos´ la explosión.
 778  8B29
 779  8B29 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 780  8B2C 23           	inc hl
 781  8B2D 23           	inc hl
 782  8B2E 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 783  8B31 CD D4 8C     	call Extrae_address
 784  8B34 22 C8 88     	ld (Puntero_objeto),hl
 785  8B37
 786  8B37 21 02 89     	ld hl,Frames_explosion
 787  8B3A 35           	dec (hl)
 788  8B3B
 789  8B3B CD 90 8B     	call Guarda_foto_entidad_a_borrar
 790  8B3E 18 23        	jr 3F
 791  8B40
 792  8B40 AF           2 xor a
 793  8B41 32 EE 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 794  8B44
 795  8B44              ; Movemos Entidades malignas.
 796  8B44
 797  8B44 CD 28 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 798  8B47
 799  8B47 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 800  8B4A CB 67        	bit 4,a
 801  8B4C C8           	ret z
 802  8B4D
 803  8B4D              ; Ha habido desplazamiento de la entidad maligna.
 804  8B4D              ; Ha llegado a zona de AMADEUS ???
 805  8B4D
 806  8B4D 3A CB 88     	ld a,(Coordenada_y)
 807  8B50 FE 14        	cp $14
 808  8B52 D4 53 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 809  8B55              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 810  8B55              ; ---------
 811  8B55
 812  8B55 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 813  8B57 32 EF 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 814  8B5A CD A7 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 815  8B5D CD 30 8E     	call Repone_datos_de_borrado
 816  8B60 CD 76 8C     	call Limpia_Variables_de_borrado
 817  8B63
 818  8B63 C9           3 ret													; _de la misma.
 819  8B64
 820  8B64              ; --------------------------------------------------------------------------------------------------------------
 821  8B64              ;
 822  8B64              ;	29/1/23
 823  8B64
 824  8B64              Mov_Amadeus
 825  8B64
 826  8B64 CD C1 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 827  8B67
 828  8B67 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 829  8B6A CB 67        	bit 4,a
 830  8B6C C8           	ret z
 831  8B6D
 832  8B6D              ; ---------
 833  8B6D
 834  8B6D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 835  8B6F 32 EF 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 836  8B72 CD A7 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 837  8B75
 838  8B75 CD 20 8E     	call Repone_datos_de_borrado_Amadeus
 839  8B78 CD 76 8C     	call Limpia_Variables_de_borrado
 840  8B7B
 841  8B7B C9           	ret
 842  8B7C
 843  8B7C              ; -----------------------------------------------------------------------------------
 844  8B7C
 845  8B7C CD DA 8C     Inicia_entidad	call Inicia_Puntero_objeto
 846  8B7F CD CD 99     	call Recompone_posicion_inicio
 847  8B82 CD AC 93     	call Draw
 848  8B85 CD A0 7F     	call Guarda_foto_registros
 849  8B88 CD FE 8D     	call Guarda_datos_de_borrado
 850  8B8B F3           	di
 851  8B8C CD 22 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 852  8B8F C9           	ret
 853  8B90
 854  8B90              ; --------------------------------------------------------------------------------------------------------------
 855  8B90              ;
 856  8B90              ;	31/8/23
 857  8B90              ;
 858  8B90              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 859  8B90
 860  8B90              Guarda_foto_entidad_a_borrar
 861  8B90
 862  8B90 CD 90 96     	call Prepara_draw
 863  8B93 CD C0 95     	call calcula_CColumnass
 864  8B96 CD F7 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 865  8B99 CD 56 96     	call Define_rutina_de_impresion
 866  8B9C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 867  8B9F C9           	ret
 868  8BA0
 869  8BA0              ; --------------------------------------------------------------------------------------------------------------
 870  8BA0              ;
 871  8BA0              ;	31/08/23
 872  8BA0              ;
 873  8BA0              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 874  8BA0              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 875  8BA0
 876  8BA0              Guarda_foto_entidad_a_pintar
 877  8BA0
 878  8BA0              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 879  8BA0
 880  8BA0 CD AC 93     	call Draw
 881  8BA3 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 882  8BA6 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 883  8BA7
 884  8BA7              ; --------------------------------------------------------------------------------------------------------------
 885  8BA7              ;
 886  8BA7              ;
 887  8BA7
 888  8BA7 21 C4 88     Prepara_var_pintado_borrado	ld hl,Filas
 889  8BAA 3A EF 88     	ld a,(Obj_dibujado)
 890  8BAD A7           	and a
 891  8BAE 28 05        	jr z,1F
 892  8BB0 11 E4 88     	ld de,Variables_de_pintado
 893  8BB3 18 03        	jr 2F
 894  8BB5 11 DE 88     1 ld de,Variables_de_borrado
 895  8BB8 01 08 00     2 ld bc,8
 896  8BBB ED B0        	ldir
 897  8BBD C9           	ret
 898  8BBE
 899  8BBE              ; --------------------------------------------------------------------------------------------------------------
 900  8BBE
 901  8BBE 21 DE 88     Repone_borrar ld hl,Variables_de_borrado
 902  8BC1 11 C4 88     	ld de,Filas
 903  8BC4 01 08 00     	ld bc,8
 904  8BC7 ED B0        	ldir
 905  8BC9 C9           	ret
 906  8BCA
 907  8BCA 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
 908  8BCD 11 C4 88     	ld de,Filas
 909  8BD0 01 08 00     	ld bc,8
 910  8BD3 ED B0        	ldir
 911  8BD5 C9           	ret
 912  8BD6
 913  8BD6              ; *************************************************************************************************************************************************************
 914  8BD6              ;
 915  8BD6              ; 8/1/23
 916  8BD6              ;
 917  8BD6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 918  8BD6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 919  8BD6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 920  8BD6
 921  8BD6              ; Destruye HL y DE !!!!!
 922  8BD6
 923  8BD6              Inicia_punteros_de_cajas
 924  8BD6
 925  8BD6 21 8C 85     	ld hl,Indice_de_cajas
 926  8BD9 CD D4 8C         call Extrae_address
 927  8BDC 22 06 89         ld (Puntero_store_caja),hl
 928  8BDF 21 8E 85     	ld hl,Indice_de_cajas+2
 929  8BE2 22 0A 89     	ld (Indice_restore_caja),hl
 930  8BE5 CD D4 8C     	call Extrae_address
 931  8BE8 22 08 89     	ld (Puntero_restore_caja),hl
 932  8BEB C9               ret
 933  8BEC
 934  8BEC              ; ---------------------------------------------------------------
 935  8BEC              ;
 936  8BEC              ;	9/8/23
 937  8BEC              ;
 938  8BEC              ;	Inicialización y gestión de álbumes de fotos y cajas.
 939  8BEC
 940  8BEC              Inicia_punteros_de_albumes_y_malotes
 941  8BEC
 942  8BEC 21 EC 84     	ld hl,Indice_album_de_fotos
 943  8BEF 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 944  8BF2 CD D4 8C     	call Extrae_address
 945  8BF5 22 1A 89     	ld (Stack_snapshot),hl
 946  8BF8
 947  8BF8 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 948  8BFB 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 949  8BFE CD D4 8C     	call Extrae_address
 950  8C01 22 1C 89     	ld (Stack_snapshot_disparos),hl
 951  8C04
 952  8C04 21 FC 84     	ld hl,Indice_End_Snapshot
 953  8C07 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 954  8C0A CD D4 8C     	call Extrae_address
 955  8C0D 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 956  8C10
 957  8C10 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 958  8C13 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 959  8C16 CD D4 8C     	call Extrae_address
 960  8C19 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 961  8C1C
 962  8C1C C9           	ret
 963  8C1D
 964  8C1D              ;	2/9/23
 965  8C1D
 966  8C1D              Avanza_puntero_de_album_de_fotos_y_malotes
 967  8C1D
 968  8C1D              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 969  8C1D
 970  8C1D              ; Estamos en el último álbum del índice???.
 971  8C1D
 972  8C1D 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 973  8C20 01 F2 84     	ld bc,Indice_album_de_fotos+6
 974  8C23 A7           	and a
 975  8C24 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 976  8C26 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 977  8C28
 978  8C28 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 979  8C2B CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 980  8C2D 76           	halt
 981  8C2E C9           	ret
 982  8C2F
 983  8C2F F3           1 di
 984  8C30 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 985  8C33 23           	inc hl
 986  8C34 23           	inc hl
 987  8C35 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 988  8C38 CD D4 8C     	call Extrae_address
 989  8C3B 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 990  8C3E
 991  8C3E 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
 992  8C41 23           	inc hl
 993  8C42 23           	inc hl
 994  8C43 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 995  8C46 CD D4 8C     	call Extrae_address
 996  8C49 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 997  8C4C FB           	ei
 998  8C4D
 999  8C4D C9           	ret
1000  8C4E
1001  8C4E              ; *************************************************************************************************************************************************************
1002  8C4E              ;
1003  8C4E              ; 8/1/23
1004  8C4E              ;
1005  8C4E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1006  8C4E
1007  8C4E 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1008  8C51 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1009  8C54 C9           	ret
1010  8C55 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1011  8C58 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1012  8C5B C9           	ret
1013  8C5C
1014  8C5C              ; -------------------------------------------------------------------------------------------------------------
1015  8C5C              ;
1016  8C5C              ; 4/9/23
1017  8C5C              ;
1018  8C5C
1019  8C5C              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1020  8C5C
1021  8C5C 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
1022  8C5F 7E           	ld a,(hl)
1023  8C60 A7           	and a
1024  8C61 C8           	ret z
1025  8C62
1026  8C62 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1027  8C65 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1028  8C68 01 0C 00     	ld bc,12
1029  8C6B AF           	xor a
1030  8C6C 77           	ld (hl),a
1031  8C6D ED B0        	ldir
1032  8C6F
1033  8C6F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1034  8C72 22 22 89     	ld (End_Snapshot_Amadeus),hl
1035  8C75
1036  8C75 C9           	ret
1037  8C76
1038  8C76 21 DE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1039  8C79 11 DF 88     	ld de,Variables_de_borrado+1
1040  8C7C 01 05 00     	ld bc,5
1041  8C7F AF           	xor a
1042  8C80 77           	ld (hl),a
1043  8C81 ED B0        	ldir
1044  8C83 C9           	ret
1045  8C84
1046  8C84              ; -------------------------------------------------------------------------------------------------------------
1047  8C84              ;
1048  8C84              ; 8/9/23
1049  8C84              ;
1050  8C84
1051  8C84              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1052  8C84              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1053  8C84
1054  8C84              Calcula_numero_de_malotes
1055  8C84
1056  8C84 21 00 70     	ld hl,Album_de_fotos
1057  8C87 EB           	ex de,hl
1058  8C88 2A 1E 89     	ld hl,(End_Snapshot)
1059  8C8B
1060  8C8B 7C           	ld a,h
1061  8C8C A7           	and a
1062  8C8D 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1063  8C8F
1064  8C8F 06 00        4 ld b,0
1065  8C91 7D           	ld a,l
1066  8C92 93           	sub e
1067  8C93 28 07        	jr z,1F
1068  8C95
1069  8C95              ; Nº de malotes no es "0".
1070  8C95
1071  8C95 D6 06        2 sub 6
1072  8C97 04           	inc b
1073  8C98 A7           	and a
1074  8C99 20 FA        	jr nz,2B
1075  8C9B 78           	ld a,b
1076  8C9C
1077  8C9C 32 0F 89     1 ld (Numero_de_malotes),a
1078  8C9F C9           	ret
1079  8CA0
1080  8CA0              ; -------------------------------------------------------------------------------------------------------------
1081  8CA0              ;
1082  8CA0              ; 8/9/23
1083  8CA0              ;
1084  8CA0
1085  8CA0              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1086  8CA0              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1087  8CA0
1088  8CA0              Calcula_malotes_Amadeus
1089  8CA0
1090  8CA0 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1091  8CA3 EB           	ex de,hl
1092  8CA4 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1093  8CA7
1094  8CA7 7C           	ld a,h
1095  8CA8 A7           	and a
1096  8CA9 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1097  8CAB
1098  8CAB 06 00        	ld b,0
1099  8CAD 7D           	ld a,l
1100  8CAE 93           	sub e
1101  8CAF 28 07        	jr z,1F
1102  8CB1
1103  8CB1              ; Nº de malotes no es "0".
1104  8CB1
1105  8CB1 D6 06        2 sub 6
1106  8CB3 04           	inc b
1107  8CB4 A7           	and a
1108  8CB5 20 FA        	jr nz,2B
1109  8CB7 78           	ld a,b
1110  8CB8
1111  8CB8 32 0F 89     1 ld (Numero_de_malotes),a
1112  8CBB C9           	ret
1113  8CBC
1114  8CBC              ; -------------------------------------------------------------------------------------------------------------
1115  8CBC              ;
1116  8CBC              ; 28/2/23
1117  8CBC              ;
1118  8CBC
1119  8CBC              Calcula_numero_de_disparotes
1120  8CBC
1121  8CBC 21 50 71     	ld hl,Album_de_fotos_disparos
1122  8CBF EB           	ex de,hl
1123  8CC0 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1124  8CC3
1125  8CC3 06 00        	ld b,0
1126  8CC5 7D           	ld a,l
1127  8CC6 93           	sub e
1128  8CC7 28 07        	jr z,1F
1129  8CC9
1130  8CC9              ; Nº de malotes no es "0".
1131  8CC9
1132  8CC9 D6 06        2 sub 6
1133  8CCB 04           	inc b
1134  8CCC A7           	and a
1135  8CCD 20 FA        	jr nz,2B
1136  8CCF 78           	ld a,b
1137  8CD0
1138  8CD0 32 3C 89     1 ld (Numero_de_disparotes),a
1139  8CD3 C9           	ret
1140  8CD4
1141  8CD4              ; *************************************************************************************************************************************************************
1142  8CD4              ;
1143  8CD4              ; 20/10/22
1144  8CD4              ;
1145  8CD4              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1146  8CD4              ;
1147  8CD4              ; Destruye el puntero y DE !!!!!
1148  8CD4
1149  8CD4 5E           Extrae_address ld e,(hl)
1150  8CD5 23           	inc hl
1151  8CD6 56           	ld d,(hl)
1152  8CD7 2B           	dec hl
1153  8CD8 EB           	ex de,hl
1154  8CD9 C9           	ret
1155  8CDA
1156  8CDA              ; *************************************************************************************************************************************************************
1157  8CDA              ;
1158  8CDA              ;	7/2/23
1159  8CDA              ;
1160  8CDA              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1161  8CDA              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1162  8CDA              ;
1163  8CDA              ;   Destruye HL y BC !!!!!,
1164  8CDA              ;
1165  8CDA              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1166  8CDA              ;					"0" ..... Izquierda.
1167  8CDA
1168  8CDA              Inicia_Puntero_objeto
1169  8CDA
1170  8CDA 3A D8 88     	ld a,(Cuad_objeto)
1171  8CDD E6 01        	and 1
1172  8CDF F5           	push af
1173  8CE0 CC FE 8C     	call z,Inicia_puntero_objeto_izq
1174  8CE3 F1           	pop af
1175  8CE4 28 2B        	jr z,1F
1176  8CE6 CD EB 8C     	call Inicia_puntero_objeto_der
1177  8CE9 18 26        	jr 1F
1178  8CEB
1179  8CEB              ; Arrancamos desde la parte izquierda de la pantalla.
1180  8CEB              ; Iniciamos (Indice_Sprite_der).
1181  8CEB
1182  8CEB 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1183  8CEE 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1184  8CF1 CD D4 8C     	call Extrae_address
1185  8CF4 22 C8 88     	ld (Puntero_objeto),hl
1186  8CF7
1187  8CF7 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1188  8CFA 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1189  8CFD C9           	ret
1190  8CFE
1191  8CFE              ; Arrancamos desde la parte derecha de la pantalla.
1192  8CFE              ; Iniciamos (Indice_Sprite_izq).
1193  8CFE
1194  8CFE 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1195  8D01 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1196  8D04 CD D4 8C     	call Extrae_address
1197  8D07 22 C8 88     	ld (Puntero_objeto),hl
1198  8D0A
1199  8D0A 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1200  8D0D 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1201  8D10 C9           	ret
1202  8D11
1203  8D11              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1204  8D11
1205  8D11 21 40 83     1 ld hl,Amadeus
1206  8D14 ED 4B C8 88  	ld bc,(Puntero_objeto)
1207  8D18 B7 ED 42     	sub hl,bc
1208  8D1B C0           	ret nz
1209  8D1C 21 EE 88     	ld hl,Ctrl_0
1210  8D1F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1211  8D21 C9           	ret 												; _de nuestra nave en los extremos.
1212  8D22
1213  8D22              ; *************************************************************************************************************************************************************
1214  8D22              ;
1215  8D22              ;	14/5/23
1216  8D22              ;
1217  8D22              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1218  8D22              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1219  8D22
1220  8D22              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1221  8D22              ;	_de la 2ª y 3ª entidad respectivamente.
1222  8D22
1223  8D22              Store_Restore_cajas
1224  8D22
1225  8D22 E5           	push hl
1226  8D23 D5           	push de
1227  8D24 C5            	push bc
1228  8D25
1229  8D25              ;	STORE !!!!!
1230  8D25              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1231  8D25
1232  8D25 21 C4 88     	ld hl,Filas
1233  8D28 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1234  8D2C 01 3F 00     	ld bc,63
1235  8D2F ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1236  8D31
1237  8D31              ; 	Entidad_sospechosa. 20/4/23
1238  8D31
1239  8D31 3A DD 88     	ld a,(Impacto)
1240  8D34 A7           	and a
1241  8D35 28 0C        	jr z,1F
1242  8D37
1243  8D37 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1244  8D3A 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1245  8D3D A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1246  8D3E ED 4A        	adc hl,bc 											; _ "0" más adelante.
1247  8D40 22 42 89     	ld (Entidad_sospechosa_de_colision),hl
1248  8D43
1249  8D43              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1250  8D43
1251  8D43 2A 08 89     1 ld hl,(Puntero_restore_caja)
1252  8D46 7E           	ld a,(hl)
1253  8D47 A7           	and a
1254  8D48 F5           	push af
1255  8D49 28 08        	jr z,2F
1256  8D4B
1257  8D4B 11 C4 88     	ld de,Filas
1258  8D4E 01 3F 00     	ld bc,63
1259  8D51 ED B0        	ldir
1260  8D53
1261  8D53 CD 6F 8D     2 call Incrementa_punteros_de_cajas
1262  8D56 F1           	pop af
1263  8D57 28 EA        	jr z,1B
1264  8D59
1265  8D59 C1           	pop bc
1266  8D5A D1           	pop de
1267  8D5B E1           	pop hl
1268  8D5C
1269  8D5C C9           	ret
1270  8D5D
1271  8D5D              ; **************************************************************************************************
1272  8D5D              ;
1273  8D5D              ;	12/05/23
1274  8D5D              ;
1275  8D5D              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1276  8D5D
1277  8D5D E5           Restore_entidad push hl
1278  8D5E D5           	push de
1279  8D5F C5            	push bc
1280  8D60
1281  8D60 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1282  8D63 11 C4 88     	ld de,Filas
1283  8D66 01 3F 00     	ld bc,63
1284  8D69 ED B0        	ldir
1285  8D6B
1286  8D6B C1           	pop bc
1287  8D6C D1           	pop de
1288  8D6D E1           	pop hl
1289  8D6E C9           	ret
1290  8D6F
1291  8D6F
1292  8D6F              ; **************************************************************************************************
1293  8D6F              ;
1294  8D6F              ;	08/05/23
1295  8D6F              ;
1296  8D6F              ;	Incrementamos los dos punteros de entidades. (+1).
1297  8D6F
1298  8D6F 2A 08 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1299  8D72 22 06 89     	ld (Puntero_store_caja),hl
1300  8D75 2A 0A 89     	ld hl,(Indice_restore_caja)
1301  8D78 23           	inc hl
1302  8D79 23           	inc hl
1303  8D7A 22 0A 89     	ld (Indice_restore_caja),hl
1304  8D7D CD D4 8C         call Extrae_address
1305  8D80 22 08 89         ld (Puntero_restore_caja),hl
1306  8D83 C9               ret
1307  8D84
1308  8D84              ; **************************************************************************************************
1309  8D84              ;
1310  8D84              ;	25/01/23
1311  8D84              ;
1312  8D84              ;	Restore_Amadeus
1313  8D84              ;
1314  8D84              ;	Cargamos en DRAW los parámetros de Amadeus.
1315  8D84              ;
1316  8D84
1317  8D84 E5           Restore_Amadeus	push hl
1318  8D85 D5           	push de
1319  8D86 C5            	push bc
1320  8D87 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1321  8D8A 11 C4 88     	ld de,Filas
1322  8D8D 01 3F 00     	ld bc,63
1323  8D90 ED B0        	ldir
1324  8D92 C1           	pop bc
1325  8D93 D1           	pop de
1326  8D94 E1           	pop hl
1327  8D95 C9           	ret
1328  8D96
1329  8D96              ; *************************************************************************************************************************************************************
1330  8D96              ;
1331  8D96              ;	29/04/23
1332  8D96              ;
1333  8D96              ;	Store_Amadeus
1334  8D96              ;
1335  8D96              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1336  8D96              ;
1337  8D96              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1338  8D96              ;
1339  8D96              ;	DESTRUYE: HL y BC y DE.
1340  8D96
1341  8D96 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1342  8D99 01 3F 00     	ld bc,63
1343  8D9C ED B0        	ldir
1344  8D9E C9           	ret
1345  8D9F
1346  8D9F              ; -----------------------------------------------------------
1347  8D9F              ;
1348  8D9F              ;	27/04/23
1349  8D9F              ;
1350  8D9F              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1351  8D9F              ;
1352  8D9F              ;	Destruye: HL,BC,DE,A
1353  8D9F
1354  8D9F 21 C4 88     Borra_datos_entidad ld hl,Filas
1355  8DA2 01 3E 00     	ld bc,62
1356  8DA5 AF           	xor a
1357  8DA6 77           	ld (hl),a
1358  8DA7 11 C5 88     	ld de,Filas+1
1359  8DAA ED B0        	ldir
1360  8DAC C9           	ret
1361  8DAD
1362  8DAD              ; -----------------------------------------------------------
1363  8DAD
1364  8DAD              ; Teclado.
1365  8DAD
1366  8DAD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1367  8DAF DB FE        	in a,($fe)
1368  8DB1 E6 01        	and $01
1369  8DB3 28 02        	jr z,1f
1370  8DB5 18 F6        	jr Pulsa_ENTER
1371  8DB7 C9           1 ret
1372  8DB8
1373  8DB8              ; **************************************************************************************************
1374  8DB8              ;
1375  8DB8              ; Temporización.
1376  8DB8
1377  8DB8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1378  8DB8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1379  8DB8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1380  8DB8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1381  8DB8
1382  8DB8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1383  8DB8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1384  8DB8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1385  8DB8
1386  8DB8              ; A partir de $4f61 no hace falta DELAY.
1387  8DB8
1388  8DB8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1389  8DB8
1390  8DB8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1391  8DBB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1392  8DBC 78           	LD A,B
1393  8DBD A7           	AND A
1394  8DBE 20 FB        	JR NZ,wait
1395  8DC0 C9           	RET
1396  8DC1
1397  8DC1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1398  8DC1              ;
1399  8DC1              ;	5/3/23
1400  8DC1              ;
1401  8DC1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1402  8DC1
1403  8DC1              Movimiento_Amadeus
1404  8DC1
1405  8DC1              ; Disparo.
1406  8DC1
1407  8DC1 3A 54 89     	ld a,(Disparo_Amadeus)
1408  8DC4 A7           	and a
1409  8DC5 20 02        	jr nz,1F
1410  8DC7 18 15        	jr 2F
1411  8DC9
1412  8DC9 3E F7        1 ld a,$f7													; "5" para disparar.
1413  8DCB DB FE        	in a,($fe)
1414  8DCD E6 10        	and $10
1415  8DCF
1416  8DCF F5           	push af
1417  8DD0 CC B6 8E     	call z,Genera_disparo
1418  8DD3 F1           	pop af
1419  8DD4 20 08        	jr nz,2F
1420  8DD6
1421  8DD6 3A 54 89     	ld a,(Disparo_Amadeus)
1422  8DD9 EE 01        	xor 1
1423  8DDB 32 54 89     	ld (Disparo_Amadeus),a
1424  8DDE
1425  8DDE 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1426  8DE0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1427  8DE2 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1428  8DE4 CC 87 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1429  8DE7
1430  8DE7 3E F7        	ld a,$f7
1431  8DE9 DB FE        	in a,($fe)
1432  8DEB E6 01        	and $01
1433  8DED C8           	ret z
1434  8DEE
1435  8DEE 3E F7        	ld a,$f7
1436  8DF0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1437  8DF2 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1438  8DF4 CC 69 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1439  8DF7 C9           	ret
1440  8DF8
1441  8DF8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1442  8DF8              ;
1443  8DF8              ;	Rutina provisional para que los malotes cagen balas.
1444  8DF8
1445  8DF8              Detecta_disparo_entidad
1446  8DF8
1447  8DF8 3A 57 89     	ld a,(Disparo_entidad)
1448  8DFB A7           	and a
1449  8DFC C8           	ret z
1450  8DFD
1451  8DFD              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1452  8DFD
1453  8DFD              ;	ld a,$7f				; Detecta SPACE.
1454  8DFD              ;	in a,($fe)
1455  8DFD              ;	and 1
1456  8DFD              ;	ret nz
1457  8DFD
1458  8DFD              ;	call Genera_disparo
1459  8DFD C9           	ret
1460  8DFE
1461  8DFE              ; ----------------------------------------------------------------------
1462  8DFE              ;
1463  8DFE              ;	8/9/23
1464  8DFE
1465  8DFE              Guarda_datos_de_borrado
1466  8DFE
1467  8DFE F3           	di
1468  8DFF
1469  8DFF 2A 1A 89     	ld hl,(Stack_snapshot)
1470  8E02
1471  8E02 2B           	dec hl
1472  8E03 7E           	ld a,(hl)
1473  8E04 A7           	and a
1474  8E05 C8           	ret z										; Salimos si es álbum está vacío.
1475  8E06
1476  8E06 11 E3 88     	ld de,Variables_de_borrado+5
1477  8E09 01 06 00     	ld bc,6
1478  8E0C ED B8        	lddr
1479  8E0E
1480  8E0E FB           	ei
1481  8E0F
1482  8E0F C9           	ret
1483  8E10
1484  8E10              ; ----------------------------------------------------------------------
1485  8E10              ;
1486  8E10              ;	8/9/23
1487  8E10
1488  8E10 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1489  8E13 2B            	dec hl
1490  8E14 7E           	ld a,(hl)
1491  8E15 A7           	and a
1492  8E16 C8           	ret z										; Salimos si es álbum está vacío.
1493  8E17
1494  8E17 11 E3 88     	ld de,Variables_de_borrado+5
1495  8E1A 01 06 00     	ld bc,6
1496  8E1D ED B8        	lddr
1497  8E1F C9           	ret
1498  8E20
1499  8E20              ; ----------------------------------------------------------------------
1500  8E20              ;
1501  8E20              ;	9/9/23
1502  8E20
1503  8E20              Repone_datos_de_borrado_Amadeus
1504  8E20
1505  8E20 21 DE 88     	ld hl,Variables_de_borrado
1506  8E23 11 A0 72     	ld de,Album_de_fotos_Amadeus
1507  8E26 01 06 00     	ld bc,6
1508  8E29 ED B0        	ldir
1509  8E2B
1510  8E2B EB           	ex de,hl
1511  8E2C 22 22 89     	ld (End_Snapshot_Amadeus),hl
1512  8E2F
1513  8E2F C9           	ret
1514  8E30
1515  8E30              ; ----------------------------------------------------------------------
1516  8E30              ;
1517  8E30              ;	18/9/23
1518  8E30              ;
1519  8E30
1520  8E30              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1521  8E30              ;	_ Album_de_fotos correspondiente.
1522  8E30
1523  8E30              ;	DI.
1524  8E30
1525  8E30              Repone_datos_de_borrado
1526  8E30
1527  8E30 F3           	di
1528  8E31
1529  8E31 ED 5B 1A 89  	ld de,(Stack_snapshot)
1530  8E35 21 DE 88     	ld hl,Variables_de_borrado
1531  8E38 01 06 00     	ld bc,6
1532  8E3B ED B0        	ldir
1533  8E3D
1534  8E3D EB           	ex de,hl
1535  8E3E 22 1A 89     	ld (Stack_snapshot),hl
1536  8E41
1537  8E41 FB           	ei
1538  8E42
1539  8E42 C9           	ret
1540  8E43
1541  8E43              ; ----------------------------------------------------------------------
1542  8E43              ;
1543  8E43              ;	11/8/23
1544  8E43
1545  8E43              Frame
1546  8E43
1547  8E43              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1548  8E43              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1549  8E43
1550  8E43              ; PINTAMOS.
1551  8E43
1552  8E43 3E 02        	ld a,2
1553  8E45 D3 FE            out ($fe),a											; Rojo.
1554  8E47
1555  8E47              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1556  8E47              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1557  8E47
1558  8E47 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1559  8E4A 01 EC 84     	ld bc,Indice_album_de_fotos
1560  8E4D A7           	and a
1561  8E4E ED 42        	sbc hl,bc
1562  8E50
1563  8E50 28 FE        	jr z,$
1564  8E52 28 4E        	jr z,6F
1565  8E54
1566  8E54 CD 84 8C     	call Calcula_numero_de_malotes
1567  8E57 CD BA 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1568  8E5A
1569  8E5A              ;	call Extrae_foto_disparos
1570  8E5A 3E 01            ld a,1
1571  8E5C D3 FE            out ($fe),a											; Azul.
1572  8E5E
1573  8E5E              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1574  8E5E CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1575  8E61
1576  8E61              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1577  8E61
1578  8E61 3A 03 89     	ld a,(Ctrl_1)
1579  8E64 CB 6F        	bit 5,a
1580  8E66 20 24        	jr nz,1F
1581  8E68
1582  8E68              ; No hemos terminado de guardar el último FRAME.
1583  8E68
1584  8E68 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1585  8E6B 2B           	dec hl
1586  8E6C 2B           	dec hl
1587  8E6D 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1588  8E70
1589  8E70 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1590  8E73 2B           	dec hl
1591  8E74 2B           	dec hl
1592  8E75 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1593  8E78 CD D4 8C     	call Extrae_address
1594  8E7B 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1595  8E7E
1596  8E7E CD D4 8C     	call Extrae_address
1597  8E81
1598  8E81              ; Esta vacío este album???
1599  8E81
1600  8E81 24           	inc h
1601  8E82 25           	dec h
1602  8E83 20 02        	jr nz,5F
1603  8E85
1604  8E85              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1605  8E85
1606  8E85 18 05        	jr 1F
1607  8E87
1608  8E87 22 1A 89     5 ld (Stack_snapshot),hl
1609  8E8A 18 09        	jr 2F
1610  8E8C
1611  8E8C              ; FRAME completo.
1612  8E8C
1613  8E8C 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1614  8E8F CD D4 8C     	call Extrae_address
1615  8E92 22 1A 89     	ld (Stack_snapshot),hl
1616  8E95
1617  8E95              ;	En este punto:
1618  8E95
1619  8E95              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1620  8E95              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1621  8E95
1622  8E95              ; RELOJES.
1623  8E95
1624  8E95 21 4F 89     2 ld hl,Contador_de_frames
1625  8E98 7E           	ld a,(hl)
1626  8E99 FE FF        	cp $ff
1627  8E9B 20 04        	jr nz,3F
1628  8E9D 34           	inc (hl)
1629  8E9E 21 50 89     	ld hl,Contador_de_frames_2
1630  8EA1 34           3 inc (hl)											; 0 - 255
1631  8EA2
1632  8EA2 21 03 89     6 ld hl,Ctrl_1
1633  8EA5 CB AE        	res 5,(hl)
1634  8EA7 C9           	ret
1635  8EA8
1636  8EA8              Pinta_Amadeus
1637  8EA8
1638  8EA8 3E 06        	ld a,6
1639  8EAA D3 FE            out ($fe),a										; Amarillo
1640  8EAC
1641  8EAC CD A0 8C     	call Calcula_malotes_Amadeus
1642  8EAF CD 3C 97     	call Extrae_foto_Amadeus
1643  8EB2 CD 5C 8C     	call Limpia_album_Amadeus
1644  8EB5 C9           	ret
1645  8EB6
1646  8EB6              ; ---------------------------------------------------------------
1647  8EB6
1648  8EB6              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EB6              ; ******************************************************************************************************************************************************************************************
   2+ 8EB6              ;
   3+ 8EB6              ;   21/07/23
   4+ 8EB6              ;
   5+ 8EB6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EB6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EB6              ;
   8+ 8EB6              ;
   9+ 8EB6              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EB6              ;
  11+ 8EB6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EB6              ;               _ hacen las entidades hacia abajo.
  13+ 8EB6              ;
  14+ 8EB6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EB6              ;
  16+ 8EB6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EB6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EB6              ;
  19+ 8EB6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EB6              ;           _ la bala.
  21+ 8EB6              ;
  22+ 8EB6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EB6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EB6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EB6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EB6              ;           _ en el momento de generarse la bala)).
  27+ 8EB6
  28+ 8EB6              Genera_disparo
  29+ 8EB6
  30+ 8EB6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EB6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EB6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EB6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EB6              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EB6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EB6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EB6
  38+ 8EB6              ; Exclusiones:
  39+ 8EB6
  40+ 8EB6 3A DC 88         ld a,(Vel_down)
  41+ 8EB9 47               ld b,a
  42+ 8EBA 3A 4E 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EBD B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EBE D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EBF 3A FD 88         ld a,(Columnas)
  46+ 8EC2 47               ld b,a
  47+ 8EC3 3A C5 88         ld a,(Columns)
  48+ 8EC6 B8               cp b
  49+ 8EC7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EC8
  51+ 8EC8              ; ----- ----- -----
  52+ 8EC8
  53+ 8EC8 3A EE 88         ld a,(Ctrl_0)
  54+ 8ECB CB 77            bit 6,a
  55+ 8ECD 20 06            jr nz,14F
  56+ 8ECF
  57+ 8ECF 3A CB 88         ld a,(Coordenada_y)
  58+ 8ED2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ED4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8ED5
  61+ 8ED5 21 00 80     14 ld hl,Indice_disparo
  62+ 8ED8 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8EDB 4F               ld c,a
  64+ 8EDC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EDE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EDE              ;                                            ""        ""       "f9", B="1"
  67+ 8EDE              ;                                            ""        ""       "fb", B="2"
  68+ 8EDE              ;                                            ""        ""       "fb", B="3"
  69+ 8EDE A7               and a
  70+ 8EDF 28 10            jr z,1F
  71+ 8EE1 E6 01            and 1
  72+ 8EE3 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EE4
  74+ 8EE4 79               ld a,c
  75+ 8EE5 16 F9            ld d,$f9
  76+ 8EE7 23           2 inc hl
  77+ 8EE8 23               inc hl
  78+ 8EE9 04               inc b
  79+ 8EEA BA               cp d
  80+ 8EEB 28 04            jr z,1F
  81+ 8EED 14               inc d
  82+ 8EEE 14               inc d
  83+ 8EEF 18 F6            jr 2B
  84+ 8EF1
  85+ 8EF1 CD D4 8C     1 call Extrae_address
  86+ 8EF4 E5               push hl
  87+ 8EF5 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EF7 DD 21 82 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EFB
  90+ 8EFB              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EFB              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EFB
  93+ 8EFB 3A EE 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EFE CB 77            bit 6,a
  95+ 8F00 20 04            jr nz,19F
  96+ 8F02
  97+ 8F02 AF               xor a
  98+ 8F03 32 57 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F06
 100+ 8F06 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8F09 FE 02            cp 2
 102+ 8F0B 38 66            jr c,3F
 103+ 8F0D 28 64            jr z,3F
 104+ 8F0F
 105+ 8F0F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F0F
 107+ 8F0F E6 01            and 1
 108+ 8F11 28 30            jr z,4F
 109+ 8F13
 110+ 8F13              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F13              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F13              ;
 113+ 8F13              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F13              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F13              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F13
 117+ 8F13 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8F16
 119+ 8F16              ;   Amadeus o entidad ???.
 120+ 8F16
 121+ 8F16 3A EE 88         ld a,(Ctrl_0)
 122+ 8F19 CB 77            bit 6,a
 123+ 8F1B 28 0A            jr z,8F
 124+ 8F1D
 125+ 8F1D              ; 	Dispara Amadeus.
 126+ 8F1D
 127+ 8F1D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F1F CD AB 96         call PreviousScan
 129+ 8F22 CD AB 96         call PreviousScan
 130+ 8F25
 131+ 8F25              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F25              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F25              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F25              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F25
 136+ 8F25 18 11            jr 10F
 137+ 8F27
 138+ 8F27              ; 	Dispara Entidad.
 139+ 8F27
 140+ 8F27 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F2A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F2A
 143+ 8F2A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F2A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F2A
 146+ 8F2A C5               push bc
 147+ 8F2B 06 10            ld b,16
 148+ 8F2D CD 9C 96     9 call NextScan
 149+ 8F30 10 FB            djnz 9B
 150+ 8F32 C1               pop bc
 151+ 8F33 CD 9D 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F36 18 06            jr 17F
 153+ 8F38
 154+ 8F38              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F38              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F38              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F38              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F38
 159+ 8F38 CD 9D 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F3B CD 12 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F3E              ;                                                      ; _al generar el disparo.
 162+ 8F3E
 163+ 8F3E              ; 	LLegados a este punto tendremos:
 164+ 8F3E              ;
 165+ 8F3E              ;       Puntero_objeto_disparo en IY.
 166+ 8F3E              ;       Rutinas_de_impresion en IX.
 167+ 8F3E              ;       Puntero_de_impresion en HL.
 168+ 8F3E              ;       Impacto/Dirección en BC.
 169+ 8F3E
 170+ 8F3E CD A5 8F     17 call Almacena_disparo
 171+ 8F41 18 52            jr 6F                                             ; RET.
 172+ 8F43
 173+ 8F43              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F43              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F43              ;
 176+ 8F43              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F43              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F43              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F43
 180+ 8F43 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8F46
 182+ 8F46              ;   Amadeus o entidad ???.
 183+ 8F46
 184+ 8F46 3A EE 88         ld a,(Ctrl_0)
 185+ 8F49 CB 77            bit 6,a
 186+ 8F4B 28 0A            jr z,11F
 187+ 8F4D
 188+ 8F4D              ; 	Dispara Amadeus.
 189+ 8F4D
 190+ 8F4D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F4F CD AB 96         call PreviousScan
 192+ 8F52 CD AB 96         call PreviousScan
 193+ 8F55
 194+ 8F55              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F55              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F55              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F55              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F55
 199+ 8F55 18 11            jr 13F
 200+ 8F57
 201+ 8F57              ; 	Dispara Entidad.
 202+ 8F57
 203+ 8F57 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F5A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F5A
 206+ 8F5A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F5A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F5A
 209+ 8F5A C5               push bc
 210+ 8F5B 06 10            ld b,16
 211+ 8F5D CD 9C 96     12 call NextScan
 212+ 8F60 10 FB            djnz 12B
 213+ 8F62 C1               pop bc
 214+ 8F63
 215+ 8F63 CD 96 8F         call Ajusta_disparo_parte_derecha
 216+ 8F66 18 06            jr 18F
 217+ 8F68
 218+ 8F68              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F68              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F68              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F68              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F68
 223+ 8F68 CD 96 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F6B CD 12 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F6E              ;                                                       ; _al generar el disparo.
 226+ 8F6E
 227+ 8F6E              ; LLegados a este punto tendremos:
 228+ 8F6E              ;
 229+ 8F6E              ;       Puntero_objeto_disparo en IY.
 230+ 8F6E              ;       Rutinas_de_impresion en IX.
 231+ 8F6E              ;       Puntero_de_impresion en HL.
 232+ 8F6E              ;       Impacto/Dirección en BC.
 233+ 8F6E
 234+ 8F6E CD A5 8F     18 call Almacena_disparo
 235+ 8F71 18 22            jr 6F                                               ; RET.
 236+ 8F73
 237+ 8F73              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F73
 239+ 8F73 28 11        3 jr z,5F
 240+ 8F75
 241+ 8F75              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F75              ;
 243+ 8F75              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F75              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F75              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F75              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F75
 248+ 8F75              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F75              ;	   ""        ""       "f9", B="1"
 250+ 8F75              ;	   ""        ""       "fb", B="2"
 251+ 8F75              ; 	   ""        ""       "fb", B="3"
 252+ 8F75
 253+ 8F75 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8F78 CD 9C 96     	call NextScan
 255+ 8F7B
 256+ 8F7B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F7B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F7B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F7B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F7B
 261+ 8F7B CD 9D 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F7E
 263+ 8F7E              ; 	No se produce impacto. B="$80"
 264+ 8F7E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F7E
 266+ 8F7E 01 80 80         ld bc,$8080
 267+ 8F81
 268+ 8F81              ; 	LLegados a este punto tendremos:
 269+ 8F81              ;
 270+ 8F81              ;       Puntero_objeto_disparo en IY.
 271+ 8F81              ;       Rutinas_de_impresion en IX.
 272+ 8F81              ;       Puntero_de_impresion en HL.
 273+ 8F81              ;       Impacto/Dirección en BC.
 274+ 8F81
 275+ 8F81 CD A5 8F         call Almacena_disparo
 276+ 8F84 18 0F            jr 6F                                           ; RET.
 277+ 8F86
 278+ 8F86              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F86              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F86              ;
 281+ 8F86              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F86              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F86              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F86              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F86
 286+ 8F86 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F89 CD 9C 96     	call NextScan
 288+ 8F8C
 289+ 8F8C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F8C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F8C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F8C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F8C
 294+ 8F8C CD 96 8F         call Ajusta_disparo_parte_derecha
 295+ 8F8F
 296+ 8F8F              ; 	No se produce impacto. B="$80"
 297+ 8F8F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F8F
 299+ 8F8F 01 80 80     15 ld bc,$8080
 300+ 8F92
 301+ 8F92              ; 	LLegados a este punto tendremos:
 302+ 8F92              ;
 303+ 8F92              ;       Puntero_objeto_disparo en IY.
 304+ 8F92              ;       Rutinas_de_impresion en IX.
 305+ 8F92              ;       Puntero_de_impresion en HL.
 306+ 8F92              ;       Impacto/Dirección en BC.
 307+ 8F92
 308+ 8F92 CD A5 8F         call Almacena_disparo
 309+ 8F95
 310+ 8F95 C9           6 ret
 311+ 8F96
 312+ 8F96              ; ----------------------------------------------------------------
 313+ 8F96              ;
 314+ 8F96              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F96              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F96              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F96
 318+ 8F96 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F97 FE 02            cp 2
 320+ 8F99 38 01            jr c,1F
 321+ 8F9B 23               inc hl
 322+ 8F9C C9           1 ret
 323+ 8F9D
 324+ 8F9D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F9E FE 01        	cp 1
 326+ 8FA0 20 01        	jr nz,1F
 327+ 8FA2 2B           	dec hl
 328+ 8FA3 2B           1 dec hl
 329+ 8FA4 C9               ret
 330+ 8FA5
 331+ 8FA5              ; ----------------------------------------------------------------
 332+ 8FA5              ;
 333+ 8FA5              ;   25/02/23
 334+ 8FA5              ;
 335+ 8FA5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FA5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FA5              ;
 338+ 8FA5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FA5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FA5
 341+ 8FA5              Almacena_disparo
 342+ 8FA5
 343+ 8FA5 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FA6 F1               pop af
 345+ 8FA7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FA8
 347+ 8FA8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FA9 E6 01            and 1
 349+ 8FAB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FAD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FAD              ; 	Dispara AMADEUS.
 352+ 8FAD
 353+ 8FAD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FAD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FAD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FAD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FAD
 358+ 8FAD C5               push bc
 359+ 8FAE 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FB1 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FB4 A7               and a
 362+ 8FB5 ED 42            sbc hl,bc
 363+ 8FB7 CC 55 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FBA C1               pop bc
 365+ 8FBB 28 54            jr z,4F
 366+ 8FBD
 367+ 8FBD 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FC0 23               inc hl
 369+ 8FC1 23               inc hl
 370+ 8FC2 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FC5              ;                                                   ; _ Disparo_(+1).
 372+ 8FC5 18 18            jr 2F
 373+ 8FC7
 374+ 8FC7              ; Dispara una entidad.
 375+ 8FC7
 376+ 8FC7 C5           1 push bc
 377+ 8FC8 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FCB 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FCE A7               and a
 380+ 8FCF ED 42            sbc hl,bc
 381+ 8FD1 CC 4E 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FD4 C1               pop bc
 383+ 8FD5 28 3A            jr z,4F
 384+ 8FD7
 385+ 8FD7 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FDA 23               inc hl
 387+ 8FDB 23               inc hl
 388+ 8FDC 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FDF              ;                                                   ; _ Disparo_(+1).
 390+ 8FDF CD D4 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FE2              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FE2              ;
 393+ 8FE2              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FE2              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FE2              ;                                                     Puntero_de_impresion en HL.
 396+ 8FE2              ;                                                     Impacto/Dirección en BC.
 397+ 8FE2
 398+ 8FE2 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FE3 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FE4 23               inc hl                                          ; _ al siguiente.
 401+ 8FE5 A7               and a
 402+ 8FE6 20 C0            jr nz,3B
 403+ 8FE8
 404+ 8FE8 08               ex af,af
 405+ 8FE9 ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FED F9               ld sp,hl
 407+ 8FEE
 408+ 8FEE DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FF0 F5               push af                                         ; Puntero de impresión.
 410+ 8FF1 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FF3 C5               push bc                                         ; Control.
 412+ 8FF4
 413+ 8FF4 ED 7B 14 89      ld sp,(Stack)
 414+ 8FF8
 415+ 8FF8              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FF8
 417+ 8FF8 21 03 89     	ld hl,Ctrl_1
 418+ 8FFB CB C6        	set 0,(hl)
 419+ 8FFD
 420+ 8FFD DD E5        	push ix
 421+ 8FFF E1               pop hl
 422+ 9000 F5               push af
 423+ 9001 DD E1            pop ix
 424+ 9003
 425+ 9003 CD A0 7F     	call Guarda_foto_registros
 426+ 9006
 427+ 9006 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9009 CB 86        	res 0,(hl)
 429+ 900B
 430+ 900B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 900B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 900B
 433+ 900B CD 55 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 900E CD 4E 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9011
 436+ 9011 C9           4 ret
 437+ 9012
 438+ 9012              ; ----------------------------------------------------------------
 439+ 9012              ;
 440+ 9012              ;   4/3/23
 441+ 9012              ;
 442+ 9012              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9012              ;   _ al generarse el disparo.
 444+ 9012              ;
 445+ 9012              ;       "$80" ..... No se produce colisión.
 446+ 9012              ;       "$81" ..... Se produce colisión.
 447+ 9012              ;
 448+ 9012              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9012              ;         _ que forman el disparo.
 450+ 9012
 451+ 9012
 452+ 9012              Comprueba_Colision
 453+ 9012
 454+ 9012              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9012
 456+ 9012 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9014 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9015
 459+ 9015 CD 4B 90         call Modifica_H_Velocidad_disparo
 460+ 9018
 461+ 9018 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9019 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 901B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 901D
 465+ 901D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 901F CD 3B 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9022
 468+ 9022 7B               ld a,e
 469+ 9023 E6 01            and 1
 470+ 9025 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9027              ;                                                  ; _ para activar IMPACTO.
 472+ 9027 E1               pop hl
 473+ 9028 E5               push hl
 474+ 9029 CD 9C 96         call NextScan
 475+ 902C
 476+ 902C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 902D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 902F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9031              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9031 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9033 CD 3B 90         call Bucle_2
 482+ 9036
 483+ 9036 43           1 ld b,e
 484+ 9037 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9038 FD E1            pop iy
 486+ 903A C9               ret
 487+ 903B
 488+ 903B              ; ---------- ----------
 489+ 903B
 490+ 903B 06 02        Bucle_2 ld b,2
 491+ 903D FD 7E 00     2 ld a,(iy)
 492+ 9040 A6               and (hl)
 493+ 9041 28 02            jr z,1F
 494+ 9043 1E 81            ld e,$81
 495+ 9045 23           1 inc hl
 496+ 9046 FD 23            inc iy
 497+ 9048 10 F3            djnz 2B
 498+ 904A C9               ret
 499+ 904B
 500+ 904B              ; ---------- ----------
 501+ 904B              ;
 502+ 904B              ;   21/7/23
 503+ 904B
 504+ 904B              Modifica_H_Velocidad_disparo
 505+ 904B
 506+ 904B 3A 4E 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 904E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9050 D0               ret nc                                         ; _ incrementamos H.
 509+ 9051 24               inc h
 510+ 9052
 511+ 9052 C9               ret
 512+ 9053
 513+ 9053              ; -------------------------------------------------------------------------------------------------------------
 514+ 9053              ;
 515+ 9053              ;   11/04/23
 516+ 9053              ;
 517+ 9053              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9053              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9053              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9053              ;
 521+ 9053              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9053
 523+ 9053              Compara_coordenadas_X
 524+ 9053
 525+ 9053              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9053              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9053
 528+ 9053              ; Preparamos registros:
 529+ 9053
 530+ 9053 21 CA 88         ld hl,Filas+6
 531+ 9056 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9057 23               inc hl
 533+ 9058 23               inc hl
 534+ 9059 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 905A 43               ld b,e
 536+ 905B
 537+ 905B 21 D8 88         ld hl,Filas+20
 538+ 905E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 905F 21 49 89         ld hl,Coordenadas_X_Entidad
 540+ 9062 CD 7E 92         call Guarda_coordenadas_X
 541+ 9065
 542+ 9065              ; Preparamos registros:
 543+ 9065
 544+ 9065 21 A4 85         ld hl,Amadeus_db+6
 545+ 9068 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9069 23               inc hl
 547+ 906A 23               inc hl
 548+ 906B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 906C 7B               ld a,e
 550+ 906D 08               ex af,af'
 551+ 906E 21 B2 85         ld hl,Amadeus_db+20
 552+ 9071 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9072 21 46 89         ld hl,Coordenadas_X_Amadeus
 554+ 9075 CD 7E 92         call Guarda_coordenadas_X
 555+ 9078
 556+ 9078              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9078              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9078
 559+ 9078 04               inc b
 560+ 9079 05               dec b
 561+ 907A 28 04            jr z,1F
 562+ 907C 06 03            ld b,3
 563+ 907E 18 02            jr 2F
 564+ 9080 06 02        1 ld b,2
 565+ 9082 08           2 ex af,af'
 566+ 9083 3C               inc a
 567+ 9084 3D               dec a
 568+ 9085 28 04            jr z,5F
 569+ 9087 0E 03            ld c,3
 570+ 9089 18 02            jr 6F
 571+ 908B 0E 02        5 ld c,2
 572+ 908D 79           6 ld a,c
 573+ 908E 08               ex af,af'
 574+ 908F 11 49 89         ld de,Coordenadas_X_Entidad
 575+ 9092 1A           4 ld a,(de)
 576+ 9093 21 46 89         ld hl,Coordenadas_X_Amadeus
 577+ 9096 BE           3 cp (hl)
 578+ 9097 28 0E            jr z,7F
 579+ 9099 23               inc hl
 580+ 909A 0D               dec c
 581+ 909B 20 F9            jr nz,3B
 582+ 909D 13               inc de
 583+ 909E 08               ex af,af'
 584+ 909F 4F               ld c,a
 585+ 90A0 08               ex af,af'
 586+ 90A1 10 EF            djnz 4B
 587+ 90A3
 588+ 90A3              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90A3
 590+ 90A3 CD BA 92     8 call Limpia_Coordenadas_X
 591+ 90A6 C9               ret
 592+ 90A7
 593+ 90A7 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90A9 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90AC 21 41 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90AF CB D6            set 2,(hl)
 597+ 90B1 18 F0            jr 8B
 598+ 90B3
 599+ 90B3              ; -----------------------------------------------------------------------
 600+ 90B3              ;
 601+ 90B3              ;   17/04/23
 602+ 90B3              ;
 603+ 90B3
 604+ 90B3              Detecta_colision_nave_entidad
 605+ 90B3
 606+ 90B3              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90B3
 608+ 90B3 2A C6 88         ld hl,(Posicion_actual)
 609+ 90B6 CD F7 95         call Calcula_puntero_de_impresion
 610+ 90B9
 611+ 90B9              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90B9              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90B9
 614+ 90B9 DD E5            push ix
 615+ 90BB E1               pop hl
 616+ 90BC E5               push hl
 617+ 90BD
 618+ 90BD              ; ----- ----- -----
 619+ 90BD 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90BF 06 0A            ld b,10
 621+ 90C1 CD F1 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90C4 7B               ld a,e
 623+ 90C5 FE 05            cp 5
 624+ 90C7 38 0E            jr c,3F
 625+ 90C9
 626+ 90C9              ; LLegados a este punto:
 627+ 90C9              ;
 628+ 90C9              ;   HAY COLISIÓN !!!!!.
 629+ 90C9              ;
 630+ 90C9              ;   .db (Impacto) de Amadeus a "1".
 631+ 90C9              ;   SET el bit3 de (Impacto2).
 632+ 90C9              ;
 633+ 90C9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90C9
 635+ 90C9 21 B7 85         ld hl,Amadeus_db+25
 636+ 90CC 36 01            ld (hl),1
 637+ 90CE 21 41 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90D1 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90D3 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90D5 18 18            jr 1F
 641+ 90D7
 642+ 90D7              ; -----
 643+ 90D7
 644+ 90D7 E1           3 pop hl
 645+ 90D8 CD 9C 96         call NextScan
 646+ 90DB E5               push hl
 647+ 90DC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90DD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90DF 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90E1 30 0C            jr nc,1F
 651+ 90E3              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90E3 10 DC            djnz 2B
 653+ 90E5
 654+ 90E5              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90E5
 656+ 90E5              ; LLegados a este punto:
 657+ 90E5              ;
 658+ 90E5              ;   NO HAY COLISIÓN !!!!!.
 659+ 90E5              ;
 660+ 90E5              ;   .db (Impacto) de Amadeus a "0".
 661+ 90E5              ;   RES el bit2 de (Impacto2).
 662+ 90E5              ;
 663+ 90E5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90E5              ;   Lo colocamos a "0".
 665+ 90E5
 666+ 90E5 21 41 89         ld hl,Impacto2
 667+ 90E8 CB 96            res 2,(hl)
 668+ 90EA 2A 42 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90ED 36 00            ld (hl),0
 670+ 90EF
 671+ 90EF E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90F0 C9               ret
 673+ 90F1
 674+ 90F1               ; ---------- ----------
 675+ 90F1
 676+ 90F1 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90F2 3A C5 88         ld a,(Columns)
 678+ 90F5 47               ld b,a
 679+ 90F6 FD 7E 00     2 ld a,(iy)
 680+ 90F9 BE               cp (hl)
 681+ 90FA 28 01            jr z,1F
 682+ 90FC
 683+ 90FC 1C               inc e
 684+ 90FD
 685+ 90FD 23           1 inc hl
 686+ 90FE FD 23            inc iy
 687+ 9100 10 F4            djnz 2B
 688+ 9102 C1               pop bc
 689+ 9103 C9               ret
 690+ 9104
 691+ 9104              ; -------------------------------------------------------------------------------------------------------------
 692+ 9104              ;
 693+ 9104              ;   13/03/23
 694+ 9104              ;
 695+ 9104              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9104              ;
 697+ 9104              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9104
 699+ 9104 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9107 7E               ld a,(hl)
 701+ 9108 A7               and a
 702+ 9109 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 910A
 704+ 910A 44               ld b,h
 705+ 910B 4D               ld c,l
 706+ 910C 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 910F E5               push hl
 708+ 9110 A7               and a
 709+ 9111 ED 42            sbc hl,bc
 710+ 9113 E5               push hl
 711+ 9114 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9115
 713+ 9115 E1               pop hl
 714+ 9116 54               ld d,h
 715+ 9117 5D               ld e,l
 716+ 9118 1B               dec de
 717+ 9119 ED B8            lddr                                                ; Limpiamos.
 718+ 911B
 719+ 911B 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 911E 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 9121
 722+ 9121 C9               ret
 723+ 9122
 724+ 9122              ; -------------------------------------------------------------------------------------------------------------
 725+ 9122              ;
 726+ 9122              ;   18/07/23
 727+ 9122              ;
 728+ 9122
 729+ 9122              Motor_de_disparos
 730+ 9122
 731+ 9122              ; Gestiona DISPAROS DE AMADEUS.
 732+ 9122
 733+ 9122 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9125 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9128
 736+ 9128 CD D4 8C     2 call Extrae_address
 737+ 912B 7E               ld a,(hl)
 738+ 912C A7               and a
 739+ 912D 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 912F
 741+ 912F              ; ----- ----- ----- ----- ----- -----
 742+ 912F
 743+ 912F C5               push bc
 744+ 9130 CD F4 91         call foto_disparo_a_borrar
 745+ 9133
 746+ 9133              ; Existe colisión con este disparo???
 747+ 9133
 748+ 9133 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9134 7E               ld a,(hl)
 750+ 9135 2B               dec hl
 751+ 9136 E6 01            and 1
 752+ 9138 28 1D            jr z,9F
 753+ 913A
 754+ 913A              ;   En este punto:
 755+ 913A              ;
 756+ 913A              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 913A              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 913A              ;   _con la entidad).
 759+ 913A              ;
 760+ 913A              ;   Disparo_2A defw 0                                ; Control.
 761+ 913A              ;    defw 0                                          ; Puntero objeto.
 762+ 913A              ;    defw 0                                          ; Puntero de impresión.
 763+ 913A              ;    defw 0                                          ; Rutina de impresión.
 764+ 913A
 765+ 913A E5               push hl
 766+ 913B
 767+ 913B 06 04            ld b,4
 768+ 913D 23           19 inc hl
 769+ 913E 10 FD            djnz 19B
 770+ 9140
 771+ 9140 CD D4 8C         call Extrae_address
 772+ 9143 CD 65 9D         call Genera_coordenadas_disparo
 773+ 9146
 774+ 9146              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9146
 776+ 9146 21 44 89         ld hl,Coordenadas_disparo_certero
 777+ 9149 72               ld (hl),d
 778+ 914A 23               inc hl
 779+ 914B 73               ld (hl),e
 780+ 914C
 781+ 914C              ; Elimino el disparo de la base de datos.
 782+ 914C
 783+ 914C E1               pop hl
 784+ 914D CD 73 92         call Elimina_disparo_de_base_de_datos
 785+ 9150 21 41 89         ld hl,Impacto2
 786+ 9153 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9155
 788+ 9155 18 06            jr 11F
 789+ 9157
 790+ 9157 CD 1D 92     9 call Mueve_disparo
 791+ 915A CD F4 91         call foto_disparo_a_borrar
 792+ 915D
 793+ 915D C1           11 pop bc
 794+ 915E 18 04            jr 7F
 795+ 9160
 796+ 9160              ; ----- ----- ----- ----- ----- -----
 797+ 9160
 798+ 9160 ED 42        1 sbc hl,bc
 799+ 9162 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9164
 801+ 9164 2A 3F 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9167 23               inc hl
 803+ 9168 23               inc hl
 804+ 9169 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 916C 18 BA            jr 2B
 806+ 916E
 807+ 916E CD 55 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9171              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9171
 810+ 9171              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9171
 812+ 9171 01 8A 85         ld bc,Disparo_11
 813+ 9174 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9177
 815+ 9177 CD D4 8C     5 call Extrae_address
 816+ 917A 7E               ld a,(hl)
 817+ 917B A7               and a
 818+ 917C 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 917E
 820+ 917E              ; ----- ----- ----- ----- ----- -----
 821+ 917E
 822+ 917E C5               push bc
 823+ 917F CD F4 91         call foto_disparo_a_borrar
 824+ 9182
 825+ 9182              ; Existe colisión con este disparo???
 826+ 9182
 827+ 9182 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9183 7E               ld a,(hl)
 829+ 9184 2B               dec hl
 830+ 9185 E6 01            and 1
 831+ 9187 28 4D            jr z,10F
 832+ 9189
 833+ 9189              ;! La colisión se produce con Amadeus???
 834+ 9189              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9189
 836+ 9189 E5               push hl
 837+ 918A
 838+ 918A 06 04            ld b,4
 839+ 918C 23           16 inc hl
 840+ 918D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 918F
 842+ 918F CD D4 8C         call Extrae_address
 843+ 9192 CD 65 9D         call Genera_coordenadas_disparo
 844+ 9195
 845+ 9195 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9196 FE 16            cp $16
 847+ 9198 38 2A            jr c,15F
 848+ 919A
 849+ 919A
 850+ 919A              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 919A
 852+ 919A D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 919B
 854+ 919B              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 919B
 856+ 919B
 857+ 919B 2A 4C 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 919E
 859+ 919E              ; Coordenada X de Amadeus en D.
 860+ 919E
 861+ 919E 7D               ld a,l
 862+ 919F E6 1F            and $1F
 863+ 91A1 57               ld d,a
 864+ 91A2
 865+ 91A2 21 A6 85         ld hl,Amadeus_db+8
 866+ 91A5 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91A6
 868+ 91A6 21 46 89         ld hl,Coordenadas_X_Amadeus
 869+ 91A9 CD 7E 92         call Guarda_coordenadas_X
 870+ 91AC
 871+ 91AC D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91AD
 873+ 91AD              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91AD
 875+ 91AD 06 02            ld b,2
 876+ 91AF C5           20 push bc
 877+ 91B0
 878+ 91B0 06 03            ld b,3
 879+ 91B2 21 46 89         ld hl,Coordenadas_X_Amadeus
 880+ 91B5 7E           18 ld a,(hl)
 881+ 91B6 BA               cp d
 882+ 91B7 20 04            jr nz,17F
 883+ 91B9
 884+ 91B9              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91B9
 886+ 91B9 C1               pop bc
 887+ 91BA E1               pop hl
 888+ 91BB 18 0D            jr 14F
 889+ 91BD
 890+ 91BD 23           17 inc hl
 891+ 91BE 10 F5            djnz 18B
 892+ 91C0
 893+ 91C0 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91C1
 895+ 91C1 C1               pop bc
 896+ 91C2 10 EB            djnz 20B
 897+ 91C4
 898+ 91C4
 899+ 91C4              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91C4              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91C4
 902+ 91C4 E1           15 pop hl
 903+ 91C5 23               inc hl
 904+ 91C6 35               dec (hl)
 905+ 91C7 2B               dec hl
 906+ 91C8 18 0C            jr 10F
 907+ 91CA
 908+ 91CA              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91CA              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91CA
 911+ 91CA E5           14 push hl
 912+ 91CB CD 73 92         call Elimina_disparo_de_base_de_datos
 913+ 91CE 21 41 89         ld hl,Impacto2
 914+ 91D1 CB CE            set 1,(hl)
 915+ 91D3 E1               pop hl
 916+ 91D4 18 06            jr 12F
 917+ 91D6
 918+ 91D6              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91D6
 920+ 91D6 CD 1D 92     10 call Mueve_disparo
 921+ 91D9 CD F4 91         call foto_disparo_a_borrar
 922+ 91DC C1           12 pop bc
 923+ 91DD
 924+ 91DD 18 04            jr 8F
 925+ 91DF
 926+ 91DF              ; ----- ----- ----- ----- ----- -----
 927+ 91DF
 928+ 91DF ED 42        4 sbc hl,bc
 929+ 91E1 28 0A            jr z,6F
 930+ 91E3
 931+ 91E3 2A 3D 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91E6 23               inc hl
 933+ 91E7 23               inc hl
 934+ 91E8 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91EB 18 8A            jr 5B
 936+ 91ED
 937+ 91ED CD 4E 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91F0 CD BA 92         call Limpia_Coordenadas_X
 939+ 91F3 C9               ret
 940+ 91F4
 941+ 91F4              ; ------------------------------------------------------------------
 942+ 91F4
 943+ 91F4              foto_disparo_a_borrar
 944+ 91F4
 945+ 91F4 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91F5 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91F6 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91F7
 949+ 91F7 E5               push hl
 950+ 91F8 23               inc hl
 951+ 91F9 23               inc hl
 952+ 91FA ED 73 14 89      ld (Stack),sp
 953+ 91FE F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91FF FD E1            pop iy
 955+ 9201 DD E1            pop ix
 956+ 9203 E1               pop hl
 957+ 9204 ED 7B 14 89      ld sp,(Stack)
 958+ 9208 3A 03 89         ld a,(Ctrl_1)
 959+ 920B CB C7            set 0,a
 960+ 920D 32 03 89         ld (Ctrl_1),a
 961+ 9210 CD A0 7F         call Guarda_foto_registros
 962+ 9213 3A 03 89         ld a,(Ctrl_1)
 963+ 9216 CB 87            res 0,a
 964+ 9218 32 03 89         ld (Ctrl_1),a
 965+ 921B E1               pop hl
 966+ 921C C9               ret
 967+ 921D
 968+ 921D              ;---------------------------------------------------
 969+ 921D              ;
 970+ 921D              ;   18/07/23
 971+ 921D              ;
 972+ 921D
 973+ 921D              Mueve_disparo
 974+ 921D
 975+ 921D              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 921D              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 921D              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 921D
 979+ 921D E5               push hl
 980+ 921E
 981+ 921E 7E               ld a,(hl)
 982+ 921F
 983+ 921F 06 04            ld b,4
 984+ 9221 23           1 inc hl
 985+ 9222 10 FD            djnz 1B
 986+ 9224
 987+ 9224              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 9224
 989+ 9224 CD D4 8C         call Extrae_address
 990+ 9227
 991+ 9227 E6 01            and 1
 992+ 9229 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 922B
 994+ 922B              ; Disparo hacia arriba, (Amadeus).
 995+ 922B
 996+ 922B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 922B              ; _ de la dificultad.
 998+ 922B
 999+ 922B CD AB 96         call PreviousScan
1000+ 922E CD AB 96         call PreviousScan
1001+ 9231 CD AB 96         call PreviousScan
1002+ 9234 CD AB 96         call PreviousScan
1003+ 9237
1004+ 9237              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9237
1006+ 9237 7C               ld a,h
1007+ 9238 FE 40            cp $40
1008+ 923A 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 923C
1010+ 923C              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 923C
1012+ 923C EB               ex de,hl
1013+ 923D 06 04            ld b,4
1014+ 923F 2B           6 dec hl
1015+ 9240 10 FD            djnz 6B
1016+ 9242
1017+ 9242 CD 73 92         call Elimina_disparo_de_base_de_datos
1018+ 9245 E1               pop hl
1019+ 9246 18 10            jr 7F
1020+ 9248
1021+ 9248              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9248              ; HL contiene el puntero de impresión del disparo.
1023+ 9248              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9248
1025+ 9248 D5           3 push de
1026+ 9249 C5               push bc
1027+ 924A
1028+ 924A CD 12 90         call Comprueba_Colision
1029+ 924D
1030+ 924D              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 924D
1032+ 924D 78               ld a,b
1033+ 924E
1034+ 924E C1               pop bc
1035+ 924F D1               pop de
1036+ 9250
1037+ 9250 EB               ex de,hl
1038+ 9251
1039+ 9251 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9252 23               inc hl                                      ; _ movimiento.
1041+ 9253 72               ld (hl),d
1042+ 9254
1043+ 9254 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9255
1045+ 9255 23               inc hl                                      ; _ en curso.
1046+ 9256 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9257 2B               dec hl
1048+ 9258
1049+ 9258 C9           7 ret
1050+ 9259
1051+ 9259              ; Disparo hacia abajo, (Entidad).
1052+ 9259
1053+ 9259 3A 4E 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 925C 47               ld b,a
1055+ 925D
1056+ 925D CD 9C 96     4 call NextScan
1057+ 9260 10 FB            djnz 4B
1058+ 9262
1059+ 9262              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9262
1061+ 9262 7C               ld a,h
1062+ 9263 FE 58            cp $58
1063+ 9265 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9267
1065+ 9267 EB               ex de,hl
1066+ 9268 06 04            ld b,4
1067+ 926A 2B           5 dec hl
1068+ 926B 10 FD            djnz 5B
1069+ 926D
1070+ 926D CD 73 92         call Elimina_disparo_de_base_de_datos
1071+ 9270 E1               pop hl
1072+ 9271 18 E5            jr 7B
1073+ 9273
1074+ 9273              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9273
1076+ 9273 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9276 AF               xor a
1078+ 9277 77               ld (hl),a
1079+ 9278 54               ld d,h
1080+ 9279 5D               ld e,l
1081+ 927A 13               inc de
1082+ 927B ED B0            ldir
1083+ 927D C9               ret
1084+ 927E
1085+ 927E              ; -----------------------------------------------------------------
1086+ 927E              ;
1087+ 927E              ;   19/7/23
1088+ 927E              ;
1089+ 927E              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 927E              ;
1091+ 927E              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 927E              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 927E              ;
1094+ 927E              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 927E              ;
1096+ 927E              ;   INPUTS:
1097+ 927E              ;
1098+ 927E              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 927E              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 927E
1101+ 927E              ;   MODIFICA: A, HL, BC y DE.
1102+ 927E
1103+ 927E              Guarda_coordenadas_X
1104+ 927E
1105+ 927E 7B               ld a,e
1106+ 927F A7               and a
1107+ 9280 20 04            jr nz,1F
1108+ 9282
1109+ 9282 06 02            ld b,2
1110+ 9284 18 02            jr 2F
1111+ 9286
1112+ 9286 06 03        1 ld b,3
1113+ 9288 72           2 ld (hl),d
1114+ 9289 23               inc hl
1115+ 928A 14               inc d
1116+ 928B 10 FB            djnz 2B
1117+ 928D
1118+ 928D C9               ret
1119+ 928E
1120+ 928E              ; -----------------------------------------------------------------
1121+ 928E              ;
1122+ 928E              ;   12/04/23
1123+ 928E              ;
1124+ 928E
1125+ 928E 3A 41 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9291 A7               and a
1127+ 9292 C8               ret z
1128+ 9293
1129+ 9293 FE 04            cp 4
1130+ 9295 20 09            jr nz,1F
1131+ 9297
1132+ 9297
1133+ 9297              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9297
1135+ 9297 CD B3 90         call Detecta_colision_nave_entidad
1136+ 929A
1137+ 929A 21 41 89         ld hl,Impacto2
1138+ 929D CB 5E            bit 3,(hl)
1139+ 929F C0               ret nz                                               ; Existe colisión, RET.
1140+ 92A0
1141+ 92A0              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92A0              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92A0
1144+ 92A0 21 41 89     1 ld hl,Impacto2
1145+ 92A3 CB 4E            bit 1,(hl)
1146+ 92A5 28 07            jr z,2F
1147+ 92A7
1148+ 92A7 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92AA 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92AC 18 0B            jr 3F
1151+ 92AE
1152+ 92AE 21 41 89     2 ld hl,Impacto2
1153+ 92B1 CB 46            bit 0,(hl)
1154+ 92B3 C8               ret z
1155+ 92B4
1156+ 92B4              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92B4
1158+ 92B4 21 03 89         ld hl,Ctrl_1
1159+ 92B7 CB D6            set 2,(hl)
1160+ 92B9
1161+ 92B9 C9           3 ret
1162+ 92BA
1163+ 92BA              ; -----------------------------------------------------------------
1164+ 92BA              ;
1165+ 92BA              ;   19/7/23
1166+ 92BA              ;
1167+ 92BA              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92BA
1169+ 92BA AF           Limpia_Coordenadas_X xor a
1170+ 92BB 06 06            ld b,6
1171+ 92BD 21 46 89         ld hl,Coordenadas_X_Amadeus
1172+ 92C0 77           1 ld (hl),a
1173+ 92C1 23               inc hl
1174+ 92C2 10 FC            djnz 1B
1175+ 92C4 C9               ret
1176+ 92C5
1177+ 92C5              ; -----------------------------------------------------------------
1178+ 92C5              ;
1179+ 92C5              ;   25/04/23
1180+ 92C5              ;
1181+ 92C5
1182+ 92C5              Determina_resultado_comparativa
1183+ 92C5
1184+ 92C5              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92C5              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92C5              ;
1187+ 92C5              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92C5              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92C5              ;
1190+ 92C5              ;   SBC HL,DE
1191+ 92C5
1192+ 92C5              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92C5              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92C5
1195+ 92C5              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92C5              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92C5
1198+ 92C5
1199+ 92C5 3A D8 88         ld a,(Cuad_objeto)
1200+ 92C8 FE 02            cp 2
1201+ 92CA 28 26            jr z,2F
1202+ 92CC 38 24            jr c,2F
1203+ 92CE
1204+ 92CE              ; Cuadrantes 3º y 4º
1205+ 92CE
1206+ 92CE E6 01            and 1
1207+ 92D0 28 10            jr z,4F
1208+ 92D2
1209+ 92D2              ; Cuadrante 3º
1210+ 92D2
1211+ 92D2 7C               ld a,h
1212+ 92D3 06 00            ld b,0
1213+ 92D5
1214+ 92D5 CD 60 93         call Compara_cositas_H3
1215+ 92D8
1216+ 92D8 04               inc b
1217+ 92D9 05               dec b
1218+ 92DA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92DB
1220+ 92DB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92DC 06 00            ld b,0
1222+ 92DE
1223+ 92DE CD 72 93         call Compara_cositas_L3
1224+ 92E1 C9               ret
1225+ 92E2
1226+ 92E2              ; Cuadrante 4º
1227+ 92E2
1228+ 92E2 7C           4 ld a,h
1229+ 92E3 06 00            ld b,0
1230+ 92E5
1231+ 92E5 CD 84 93         call Compara_cositas_H4
1232+ 92E8
1233+ 92E8 04               inc b
1234+ 92E9 05               dec b
1235+ 92EA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92EB
1237+ 92EB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92EC 06 00            ld b,0
1239+ 92EE
1240+ 92EE CD 9A 93         call Compara_cositas_L4
1241+ 92F1 C9               ret
1242+ 92F2
1243+ 92F2              ; Cuadrantes 1º y 2º.
1244+ 92F2
1245+ 92F2 28 10        2 jr z,3F
1246+ 92F4
1247+ 92F4              ; 1er Cuadrante
1248+ 92F4
1249+ 92F4 7C               ld a,h
1250+ 92F5 06 00            ld b,0
1251+ 92F7
1252+ 92F7 CD 38 93         call Compara_cositas_H1
1253+ 92FA
1254+ 92FA 04               inc b
1255+ 92FB 05               dec b
1256+ 92FC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92FD
1258+ 92FD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92FE 06 00            ld b,0
1260+ 9300
1261+ 9300 CD 4E 93         call Compara_cositas_L1
1262+ 9303 C9               ret
1263+ 9304
1264+ 9304
1265+ 9304              ; 2º Cuadrante
1266+ 9304
1267+ 9304 7C           3 ld a,h
1268+ 9305 06 00            ld b,0
1269+ 9307
1270+ 9307 CD 14 93         call Compara_cositas_H2
1271+ 930A
1272+ 930A 04               inc b
1273+ 930B 05               dec b
1274+ 930C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 930D
1276+ 930D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 930E 06 00            ld b,0
1278+ 9310
1279+ 9310 CD 26 93         call Compara_cositas_L2
1280+ 9313 C9               ret
1281+ 9314
1282+ 9314 A7           Compara_cositas_H2 and a
1283+ 9315 28 0D            jr z,1F
1284+ 9317              ;    cp $fd
1285+ 9317              ;    jr z,1F
1286+ 9317              ;    cp $fe
1287+ 9317              ;    jr z,1F
1288+ 9317 FE FF            cp $ff
1289+ 9319 28 09            jr z,1F
1290+ 931B FE 01            cp $01
1291+ 931D 28 05            jr z,1F
1292+ 931F FE 02            cp $02
1293+ 9321 28 01            jr z,1F
1294+ 9323 C0               ret nz
1295+ 9324 04           1 inc b
1296+ 9325 C9               ret
1297+ 9326
1298+ 9326 A7           Compara_cositas_L2 and a
1299+ 9327 28 0D            jr z,1F
1300+ 9329              ;    cp $fd
1301+ 9329              ;    jr z,1F
1302+ 9329 FE FE            cp $fe
1303+ 932B 28 09            jr z,1F
1304+ 932D FE FF            cp $ff
1305+ 932F 28 05            jr z,1F
1306+ 9331 FE 01            cp $01
1307+ 9333 28 01            jr z,1F
1308+ 9335              ;    cp $02
1309+ 9335              ;    jr z,1F
1310+ 9335 C0               ret nz
1311+ 9336 04           1 inc b
1312+ 9337 C9               ret
1313+ 9338
1314+ 9338 A7           Compara_cositas_H1 and a
1315+ 9339 28 11            jr z,1F
1316+ 933B              ;    cp $fd
1317+ 933B              ;    jr z,1F
1318+ 933B              ;    cp $fe
1319+ 933B              ;    jr z,1F
1320+ 933B FE FF            cp $ff
1321+ 933D 28 0D            jr z,1F
1322+ 933F FE 01            cp $01
1323+ 9341 28 09            jr z,1F
1324+ 9343 FE 02            cp $02
1325+ 9345 28 05            jr z,1F
1326+ 9347 FE 03            cp $03
1327+ 9349 28 01            jr z,1F
1328+ 934B C0               ret nz
1329+ 934C 04           1 inc b
1330+ 934D C9               ret
1331+ 934E
1332+ 934E A7           Compara_cositas_L1 and a
1333+ 934F 28 0D            jr z,1F
1334+ 9351              ;    cp $fd
1335+ 9351              ;    jr z,1F
1336+ 9351              ;    cp $fe
1337+ 9351              ;    jr z,1F
1338+ 9351              ;    cp $ff
1339+ 9351              ;    jr z,1F
1340+ 9351 FE 01            cp $01
1341+ 9353 28 09            jr z,1F
1342+ 9355 FE 02            cp $02
1343+ 9357 28 05            jr z,1F
1344+ 9359 FE 03            cp $03
1345+ 935B 28 01            jr z,1F
1346+ 935D C0               ret nz
1347+ 935E 04           1 inc b
1348+ 935F C9               ret
1349+ 9360
1350+ 9360 A7           Compara_cositas_H3 and a
1351+ 9361 28 0D            jr z,1F
1352+ 9363              ;    cp $fd
1353+ 9363              ;    jr z,1F
1354+ 9363 FE FE            cp $fe
1355+ 9365 28 09            jr z,1F
1356+ 9367 FE FF            cp $ff
1357+ 9369 28 05            jr z,1F
1358+ 936B FE 01            cp $01
1359+ 936D 28 01            jr z,1F
1360+ 936F              ;    cp $02
1361+ 936F              ;    jr z,1F
1362+ 936F              ;    cp $03
1363+ 936F              ;    jr z,1F
1364+ 936F C0               ret nz
1365+ 9370 04           1 inc b
1366+ 9371 C9               ret
1367+ 9372
1368+ 9372 A7           Compara_cositas_L3 and a
1369+ 9373 28 0D            jr z,1F
1370+ 9375              ;    cp $fd
1371+ 9375              ;    jr z,1F
1372+ 9375              ;    cp $fe
1373+ 9375              ;    jr z,1F
1374+ 9375              ;    cp $ff
1375+ 9375              ;    jr z,1F
1376+ 9375 FE 01            cp $01
1377+ 9377 28 09            jr z,1F
1378+ 9379 FE 02            cp $02
1379+ 937B 28 05            jr z,1F
1380+ 937D FE 03            cp $03
1381+ 937F 28 01            jr z,1F
1382+ 9381 C0               ret nz
1383+ 9382 04           1 inc b
1384+ 9383 C9               ret
1385+ 9384
1386+ 9384 A7           Compara_cositas_H4 and a
1387+ 9385 28 11            jr z,1F
1388+ 9387 FE FD            cp $fd
1389+ 9389 28 0D            jr z,1F
1390+ 938B FE FE            cp $fe
1391+ 938D 28 09            jr z,1F
1392+ 938F FE FF            cp $ff
1393+ 9391 28 05            jr z,1F
1394+ 9393 FE 01            cp $01
1395+ 9395 28 01            jr z,1F
1396+ 9397              ;    cp $02
1397+ 9397              ;    jr z,1F
1398+ 9397              ;    cp $03
1399+ 9397              ;    jr z,1F
1400+ 9397 C0               ret nz
1401+ 9398 04           1 inc b
1402+ 9399 C9               ret
1403+ 939A
1404+ 939A A7           Compara_cositas_L4 and a
1405+ 939B 28 0D            jr z,1F
1406+ 939D              ;    cp $fd
1407+ 939D              ;    jr z,1F
1408+ 939D FE FE            cp $fe
1409+ 939F 28 09            jr z,1F
1410+ 93A1 FE FF            cp $ff
1411+ 93A3 28 05            jr z,1F
1412+ 93A5 FE 01            cp $01
1413+ 93A7 28 01            jr z,1F
1414+ 93A9              ;    cp $02
1415+ 93A9              ;    jr z,1F
1416+ 93A9              ;    cp $03
1417+ 93A9              ;    jr z,1F
1418+ 93A9 C0               ret nz
1419+ 93AA 04           1 inc b
1420+ 93AB C9               ret
# file closed: Disparo.asm
1649  93AC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93AC              ; ******************************************************************************************************************************************************************************************
   2+ 93AC              ;
   3+ 93AC              ; 26/06/23
   4+ 93AC              ;
   5+ 93AC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93AC
   7+ 93AC CD 90 96     Draw call Prepara_draw
   8+ 93AF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93B0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93B1 28 05        	jr z,2F
  11+ 93B3
  12+ 93B3 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93B6 18 0C        	jr 1F
  14+ 93B8
  15+ 93B8 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93BB 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93BE CD 4D 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93C1              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93C1 CD F2 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93C4
  21+ 93C4 3A EE 88     1 ld a,(Ctrl_0)
  22+ 93C7 CB 6F        	bit 5,a
  23+ 93C9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93CB
  25+ 93CB CD E3 93     	call Comprueba_limite_horizontal
  26+ 93CE CD 73 94     	call Comprueba_limite_vertical
  27+ 93D1
  28+ 93D1              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93D1              ; -----------------------
  30+ 93D1              ; -----------------------
  31+ 93D1              ; -----------------------
  32+ 93D1
  33+ 93D1 CD C0 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93D4 CD F7 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93D7 CD 56 96     	call Define_rutina_de_impresion
  36+ 93DA
  37+ 93DA 3A EE 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93DD CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93DF 32 EE 88     	ld (Ctrl_0),a
  40+ 93E2
  41+ 93E2 C9           	ret
  42+ 93E3
  43+ 93E3              ; *******************************************************************************************************************************************************************************************
  44+ 93E3              ;	21/01/23
  45+ 93E3              ;
  46+ 93E3              ; 	Comprueba_limite_horizontal.
  47+ 93E3              ;
  48+ 93E3              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93E3              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93E3              ;
  51+ 93E3              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93E3              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93E3              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93E3              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93E3
  56+ 93E3
  57+ 93E3
  58+ 93E3 3A EE 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93E6 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93E8 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93EA E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93EC 32 EE 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93EF 18 09            jr 6F
  64+ 93F1 CB 5F        1 bit 3,a
  65+ 93F3 28 0A            jr z,2F
  66+ 93F5 E6 F7            and $f7
  67+ 93F7 32 EE 88         ld (Ctrl_0),a
  68+ 93FA CD 4D 95     6 call Inicializacion
  69+ 93FD 18 5B            jr 5F
  70+ 93FF E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9400
  72+ 9400              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9400              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9400
  75+ 9400 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9401 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9404 CD AF 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9407 67           	ld h,a
  79+ 9408 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9409 CD AF 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 940C 67           	ld h,a
  82+ 940D A7           	and a
  83+ 940E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9410 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9411 3A D8 88     	ld a,(Cuad_objeto)
  86+ 9414 FE 02        	cp 2
  87+ 9416 38 1E        	jr c,3F
  88+ 9418 28 1C        	jr z,3F
  89+ 941A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 941B 28 23            jr z,7F
  91+ 941D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 941F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9421 E1           	pop hl
  94+ 9422
  95+ 9422              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9422              ; _para indicar con E="2" en caso necesario.
  97+ 9422
  98+ 9422 E5               push hl
  99+ 9423 C5               push bc
 100+ 9424 CD AF 99     	call calcula_tercio
 101+ 9427 FE 01        	cp 1
 102+ 9429 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 942B CD 5B 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 942E 28 26            jr z,9F
 105+ 9430 38 24            jr c,9F
 106+ 9432 1E 00        11 ld e,0
 107+ 9434 18 22            jr 8F
 108+ 9436 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9437 28 07        	jr z, 7F
 110+ 9439 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 943B 1E 00         	ld e,0
 112+ 943D E1           	pop hl
 113+ 943E 18 04        	jr 4F
 114+ 9440 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9442 18 15            jr 10F
 116+ 9444
 117+ 9444              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9444              ; _para indicar con E="2" en caso necesario.
 119+ 9444
 120+ 9444 E5           4 push hl
 121+ 9445 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9446 CD AF 99     	call calcula_tercio
 123+ 9449 FE 01        	cp 1
 124+ 944B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 944D CD 5B 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9450 28 04            jr z,9F
 127+ 9452 30 02            jr nc,9F
 128+ 9454 18 02        	jr 8F
 129+ 9456 1E 02        9 ld e,2
 130+ 9458 C1           8 pop bc
 131+ 9459 E1           10 pop hl
 132+ 945A C9           5 ret
 133+ 945B
 134+ 945B              ; --------------------
 135+ 945B              ;
 136+ 945B              ; 25/08/22
 137+ 945B
 138+ 945B CD AF 99     Comprueba_centro call calcula_tercio
 139+ 945E 67               ld h,a
 140+ 945F 08           	ex af,af
 141+ 9460 FE 02        	cp 2
 142+ 9462 38 07        	jr c,1F
 143+ 9464 28 05        	jr z,1F
 144+ 9466 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9469 18 03        	jr 2F
 146+ 946B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 946E 08           2 ex af,af
 148+ 946F A7               and a
 149+ 9470 ED 42            sbc hl,bc
 150+ 9472 C9               ret
 151+ 9473
 152+ 9473              ; *********************************************************************************************************************************************************************************************
 153+ 9473              ;
 154+ 9473              ;   16/8/22
 155+ 9473              ;
 156+ 9473              ;	Comprueba_limite_vertical
 157+ 9473              ;
 158+ 9473              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9473              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9473              ;
 161+ 9473
 162+ 9473 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9476 7D           	ld a,l
 164+ 9477 E6 1F        	and $1F
 165+ 9479 57           	ld d,a
 166+ 947A 3A 00 89     	ld a,(Limite_vertical)
 167+ 947D BA           	cp d 											; Límite - Posición.
 168+ 947E 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 947F 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9482 CB 47        	bit 0,a
 171+ 9484 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9486
 173+ 9486              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9486
 175+ 9486 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9487 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9489
 178+ 9489              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9489              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9489
 181+ 9489 3A CA 88         ld a,(Coordenada_X)
 182+ 948C 16 0F            ld d,Centro_izquierda
 183+ 948E A7               and a
 184+ 948F 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9490 28 1E            jr z,3F
 186+ 9492 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9494              ;                                                    ; _salimos sin modificar nada.
 188+ 9494 18 0E            jr 2F
 189+ 9496 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9497 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9499
 192+ 9499              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9499              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9499
 195+ 9499 3A CA 88         ld a,(Coordenada_X)
 196+ 949C 16 10            ld d,Centro_derecha
 197+ 949E A7               and a
 198+ 949F 92               sub d
 199+ 94A0 28 0E            jr z,3F
 200+ 94A2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94A4              ;                                                    ; _salimos sin modificar nada.
 202+ 94A4 CB 43        2 bit 0,e
 203+ 94A6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94A8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94A9 CD 3D 95         call Modificaccionne
 206+ 94AC C1           	pop bc
 207+ 94AD CD 4D 95         call Inicializacion
 208+ 94B0 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94B1
 210+ 94B1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94B1
 212+ 94B1 C5           4 push bc
 213+ 94B2 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94B5 0A           	ld a,(bc)
 215+ 94B6 3D           	dec a
 216+ 94B7 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94B8 7D           	ld a,l
 218+ 94B9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94BA CB 47        	bit 0,a
 220+ 94BC 28 03        	jr z,5F
 221+ 94BE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94BF 18 2E        	jr 7F
 223+ 94C1
 224+ 94C1              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94C1
 226+ 94C1 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94C2 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94C3 3A EE 88     	ld a,(Ctrl_0)
 229+ 94C6 CB 4F        	bit 1,a
 230+ 94C8 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94CA F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94CB
 233+ 94CB              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94CB
 235+ 94CB 1C               inc e
 236+ 94CC 1D               dec e
 237+ 94CD 20 07            jr nz,12F
 238+ 94CF 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94D0 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94D1 22 C6 88     	ld (Posicion_actual),hl
 241+ 94D4 18 44        13 jr 9F
 242+ 94D6 CB 43        12 bit 0,e
 243+ 94D8 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94DA              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94DA C1           	pop bc
 246+ 94DB 18 D3        	jr 3B
 247+ 94DD 80           14 add b
 248+ 94DE 6F               ld l,a
 249+ 94DF 22 C6 88     	ld (Posicion_actual),hl
 250+ 94E2 CD 3D 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94E5 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94E7 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94E9 32 EE 88         ld (Ctrl_0),a
 254+ 94EC F1           	pop af
 255+ 94ED 18 2B        	jr 9F
 256+ 94EF
 257+ 94EF              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94EF
 259+ 94EF F5           7 push af
 260+ 94F0 3A EE 88     	ld a,(Ctrl_0)
 261+ 94F3 CB 47        	bit 0,a
 262+ 94F5 20 1D        	jr nz,8F
 263+ 94F7 F1           	pop af
 264+ 94F8
 265+ 94F8              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94F8
 267+ 94F8 1C           	inc e
 268+ 94F9 1D               dec e
 269+ 94FA 20 07            jr nz,10F
 270+ 94FC 90           	sub b
 271+ 94FD 6F               ld l,a
 272+ 94FE 22 C6 88     	ld (Posicion_actual),hl
 273+ 9501 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9503              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9503 CB 43        10 bit 0,e
 276+ 9505 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9507              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9507 C1           	pop bc
 279+ 9508 18 A6        	jr 3B
 280+ 950A 90           16 sub b
 281+ 950B 6F               ld l,a
 282+ 950C 22 C6 88     	ld (Posicion_actual),hl
 283+ 950F CD 3D 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9512 18 06            jr 9F
 285+ 9514 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9516 32 EE 88         ld (Ctrl_0),a
 287+ 9519 F1           	pop af
 288+ 951A C1           9 pop bc
 289+ 951B 1E 00        	ld e,0
 290+ 951D CD 4D 95         call Inicializacion
 291+ 9520 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9521 08           	ex af,af
 293+ 9522 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9523 18 8B            jr 3B
 295+ 9525
 296+ 9525              ; --------------------
 297+ 9525
 298+ 9525 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9527 CD AB 96     1 call PreviousScan
 300+ 952A 10 FB            djnz 1B
 301+ 952C 22 C6 88     	ld (Posicion_actual),hl
 302+ 952F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9530 C9           	ret
 304+ 9531
 305+ 9531              ; --------------------
 306+ 9531
 307+ 9531 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9533 CD 9C 96     1 call NextScan
 309+ 9536 10 FB            djnz 1B
 310+ 9538 22 C6 88     	ld (Posicion_actual),hl
 311+ 953B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 953C C9           	ret
 313+ 953D
 314+ 953D              ; --------------------
 315+ 953D              ;
 316+ 953D              ;	22/01/23
 317+ 953D              ;
 318+ 953D              ;	E="1". Hemos cambiado de cuadrante.
 319+ 953D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 953D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 953D
 322+ 953D
 323+ 953D              Modificaccionne
 324+ 953D
 325+ 953D 3A D8 88     	ld a,(Cuad_objeto)
 326+ 9540 FE 02        	cp 2
 327+ 9542 CC 25 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9545 DC 25 95         call c,Modifica_Pos_actual
 329+ 9548 C8           	ret z
 330+ 9549 CD 31 95         call Modifica_Pos_actual2
 331+ 954C C9               ret
 332+ 954D
 333+ 954D              ; *************************************************************************************************************************************************************************************************
 334+ 954D              ;
 335+ 954D              ;	13/8/22
 336+ 954D              ;
 337+ 954D              ;	Inicializacion
 338+ 954D              ;
 339+ 954D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 954D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 954D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 954D              ;
 343+ 954D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 954D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 954D              ;	_ desaparece/aparece.
 346+ 954D
 347+ 954D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 954D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 954D              ;
 350+ 954D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 954D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 954D              ; 		   [E] ="0"
 353+ 954D
 354+ 954D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 954D
 356+ 954D CD AF 99     Inicializacion call calcula_tercio
 357+ 9550 28 36        	jr z,primit
 358+ 9552 E6 02        	and 2
 359+ 9554 20 07        	jr nz,segmit
 360+ 9556 7D           	ld a,l
 361+ 9557 FE 7F        	cp $7f
 362+ 9559 38 2D        	jr c,primit
 363+ 955B 28 2B        	jr z,primit
 364+ 955D CD BA 95     segmit call column
 365+ 9560 38 13        	jr c,tercuad
 366+ 9562 3E 04        cuarcuad ld a,4
 367+ 9564 32 D8 88     	ld (Cuad_objeto),a
 368+ 9567 21 20 48     	ld hl,$4820
 369+ 956A 22 FE 88     	ld (Limite_horizontal),hl
 370+ 956D 21 00 89     	ld hl,Limite_vertical
 371+ 9570 36 0D        	ld (hl),$0d
 372+ 9572 08           	ex af,af
 373+ 9573 18 3C        	jr 1F
 374+ 9575              tercuad
 375+ 9575 3E 03        	ld a,3
 376+ 9577 32 D8 88     	ld (Cuad_objeto),a
 377+ 957A 21 20 48     	ld hl,$4820
 378+ 957D 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9580 21 00 89     	ld hl,Limite_vertical
 380+ 9583 36 12        	ld (hl),$12
 381+ 9585 08           	ex af,af
 382+ 9586 18 29        	jr 1F
 383+ 9588 CD BA 95     primit call column
 384+ 958B 38 13        	jr c, primcuad
 385+ 958D              segcuad
 386+ 958D 3E 02        	ld a,2
 387+ 958F 32 D8 88     	ld (Cuad_objeto),a
 388+ 9592 21 C0 4F     	ld hl,$4fc0
 389+ 9595 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9598 21 00 89     	ld hl,Limite_vertical
 391+ 959B 36 0D        	ld (hl),$0d
 392+ 959D 08           	ex af,af
 393+ 959E 18 11        	jr 1F
 394+ 95A0              primcuad
 395+ 95A0 3E 01        	ld a,1
 396+ 95A2 32 D8 88     	ld (Cuad_objeto),a
 397+ 95A5 21 C0 4F     	ld hl,$4fc0
 398+ 95A8 22 FE 88     	ld (Limite_horizontal),hl
 399+ 95AB 21 00 89     	ld hl,Limite_vertical
 400+ 95AE 36 12        	ld (hl),$12
 401+ 95B0 08           	ex af,af
 402+ 95B1 CD 3A 9D     1 call Genera_coordenadas
 403+ 95B4 21 EE 88     	ld hl,Ctrl_0
 404+ 95B7 CB EE        	set 5,(hl)
 405+ 95B9 C9           	ret
 406+ 95BA
 407+ 95BA              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95BA
 409+ 95BA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95BA              ;
 411+ 95BA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95BA
 413+ 95BA 7D           column ld a,l
 414+ 95BB E6 1F        	and $1f
 415+ 95BD FE 10         	cp $10
 416+ 95BF C9            	ret
 417+ 95C0
 418+ 95C0              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95C0              ;
 420+ 95C0              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95C0              ;
 422+ 95C0              ; 14/12/22
 423+ 95C0              ;
 424+ 95C0              ;	Modifica: A y BC.
 425+ 95C0
 426+ 95C0 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95C3 E6 01        	and 1
 428+ 95C5 28 17        	jr z,1F
 429+ 95C7
 430+ 95C7              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95C7
 432+ 95C7 3A CA 88     	ld a,(Coordenada_X)
 433+ 95CA 47           	ld b,a
 434+ 95CB 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95CC 79           	ld a,c
 436+ 95CD 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95CE 38 08        	jr c,2F
 438+ 95D0 47           	ld b,a
 439+ 95D1 79           	ld a,c
 440+ 95D2 90           	sub b
 441+ 95D3 32 FD 88     	ld (Columnas),a
 442+ 95D6 18 1B        	jr 4F
 443+ 95D8 79           2 ld a,c
 444+ 95D9 32 FD 88     	ld (Columnas),a
 445+ 95DC 18 15        	jr 4F
 446+ 95DE
 447+ 95DE              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95DE
 449+ 95DE 3A CA 88     1 ld a,(Coordenada_X)
 450+ 95E1 81           	add c
 451+ 95E2 3D           	dec a
 452+ 95E3 D6 1F        	sub $1f
 453+ 95E5 38 08        	jr c,3F
 454+ 95E7 47           	ld b,a
 455+ 95E8 79           	ld a,c
 456+ 95E9 90           	sub b
 457+ 95EA 32 FD 88     	ld (Columnas),a
 458+ 95ED 18 04        	jr 4F
 459+ 95EF 79           3 ld a,c
 460+ 95F0 32 FD 88     	ld (Columnas),a
 461+ 95F3 D9           4 exx
 462+ 95F4 4F           	ld c,a
 463+ 95F5 D9           	exx
 464+ 95F6 C9            ret
 465+ 95F7
 466+ 95F7              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95F7              ;
 468+ 95F7              ;   19/7/23
 469+ 95F7              ;
 470+ 95F7              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95F7              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95F7              ;
 473+ 95F7              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95F7              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95F7              ;
 476+ 95F7              ;	DESTRUYE: HL,B Y A.
 477+ 95F7
 478+ 95F7 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95FA FE 02        	cp 2
 480+ 95FC 38 18        	jr c,1F
 481+ 95FE 28 16        	jr z,1F
 482+ 9600 E6 01        	and 1
 483+ 9602 28 0D        	jr z,3F
 484+ 9604
 485+ 9604              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9604
 487+ 9604 CD 4A 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9607
 489+ 9607 7D           9 ld a,l
 490+ 9608 E6 1F        	and $1f
 491+ 960A 28 2A        	jr z,7F
 492+ 960C 2B           	dec hl
 493+ 960D 10 F8        	djnz 9B
 494+ 960F 18 25        	jr 7F
 495+ 9611
 496+ 9611              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9611
 498+ 9611 2A C6 88     3 ld hl,(Posicion_actual)
 499+ 9614 18 20        	jr 7F
 500+ 9616
 501+ 9616 28 14        1 jr z,2F
 502+ 9618
 503+ 9618              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9618
 505+ 9618 CD 4A 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 961B
 507+ 961B 7D           4 ld a,l
 508+ 961C E6 1F        	and $1f
 509+ 961E 28 03        	jr z,6F
 510+ 9620 2B           	dec hl
 511+ 9621 10 F8        	djnz 4B
 512+ 9623 06 0F        6 ld b,15
 513+ 9625 CD AB 96     5 call PreviousScan
 514+ 9628 10 FB        	djnz 5B
 515+ 962A 18 0A        	jr 7F
 516+ 962C
 517+ 962C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 962C
 519+ 962C CD 4A 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 962F 06 0F        	ld b,15
 521+ 9631 CD AB 96     8 call PreviousScan
 522+ 9634 10 FB        	djnz 8B
 523+ 9636
 524+ 9636 E5           7 push hl
 525+ 9637 DD E1        	pop ix
 526+ 9639
 527+ 9639 2A C8 88     	ld hl,(Puntero_objeto)
 528+ 963C E5           	push hl
 529+ 963D FD E1        	pop iy
 530+ 963F
 531+ 963F              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 963F
 533+ 963F 3A EE 88     	ld a,(Ctrl_0)
 534+ 9642 CB 77        	bit 6,a
 535+ 9644 C8           	ret z
 536+ 9645
 537+ 9645              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9645              ; _ entidad / Amadeus´.
 539+ 9645
 540+ 9645 DD 22 4C 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9649
 542+ 9649 C9           	ret
 543+ 964A
 544+ 964A              ; --------------------------------------------------------------------------------------------------------------------
 545+ 964A              ;
 546+ 964A              ;	2/1/23
 547+ 964A              ;
 548+ 964A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 964A              ;
 550+ 964A              ;	Tras esta rutina tenemos:
 551+ 964A              ;
 552+ 964A              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 964A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 964A              ;
 555+ 964A              ;	DESTRUYE!!!!! HL,B y A.
 556+ 964A
 557+ 964A 2A C6 88     Operandos ld hl,(Posicion_actual)
 558+ 964D 3A FD 88     	ld a,(Columnas)
 559+ 9650 3D           	dec a
 560+ 9651 20 01        	jr nz,1F
 561+ 9653 3C           	inc a
 562+ 9654 47           1 ld b,a
 563+ 9655 C9           	ret
 564+ 9656
 565+ 9656              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9656              ;
 567+ 9656              ;	3/1/23
 568+ 9656              ;
 569+ 9656              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9656              ;
 571+ 9656              ;	Destruye: A,B,HL y DE.
 572+ 9656
 573+ 9656              Define_rutina_de_impresion
 574+ 9656
 575+ 9656 3A C5 88     	ld a,(Columns)
 576+ 9659 47           	ld b,a
 577+ 965A 3A FD 88     	ld a,(Columnas)
 578+ 965D B8           	cp b
 579+ 965E 20 0D        	jr nz,2f
 580+ 9660
 581+ 9660              ;	La entidad se imprime entera.
 582+ 9660
 583+ 9660 21 7F 97     	ld hl, Indice_entidades_completas
 584+ 9663 E6 01        	and 1
 585+ 9665 28 02        	jr z,1F
 586+ 9667
 587+ 9667 23           	inc hl
 588+ 9668 23           	inc hl
 589+ 9669
 590+ 9669 CD D4 8C     1 call Extrae_address
 591+ 966C C9           	ret		;	ret
 592+ 966D
 593+ 966D              ;	La entidad no se imprime entera en pantalla.
 594+ 966D
 595+ 966D 3A D8 88     2 ld a,(Cuad_objeto)
 596+ 9670 E6 01        	and 1
 597+ 9672 28 17        	jr z,3F
 598+ 9674
 599+ 9674              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9674
 601+ 9674 21 83 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9677 3A C5 88     4 ld a,(Columns)
 603+ 967A E6 01        	and 1
 604+ 967C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 967E
 606+ 967E 23           	inc hl
 607+ 967F 23           	inc hl
 608+ 9680
 609+ 9680 3A FD 88     	ld a,(Columnas)
 610+ 9683 E6 01        	and 1
 611+ 9685 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9687
 613+ 9687 23           	inc hl
 614+ 9688 23           	inc hl
 615+ 9689
 616+ 9689 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 968B
 618+ 968B 21 89 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 968E 18 E7        	jr 4B
 620+ 9690
 621+ 9690              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9690              ;
 623+ 9690              ;	Prepara_draw
 624+ 9690              ;
 625+ 9690              ;	Es una rutina de carga.
 626+ 9690              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9690              ;
 628+ 9690              ;	FUNCIONAMIENTO:
 629+ 9690              ;
 630+ 9690              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9690              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9690              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9690              ;
 634+ 9690              ;	DESTRUYE:
 635+ 9690              ;
 636+ 9690              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9690
 638+ 9690 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9693 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9694 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9695 4E           	ld c,(hl)
 642+ 9696 2A C6 88     	ld hl,(Posicion_actual)
 643+ 9699 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 969B C9           	ret
 645+ 969C
 646+ 969C              ;----------------------------------------------------------------------------------------------------------------
 647+ 969C              ;
 648+ 969C              ;	5/08/22
 649+ 969C              ;
 650+ 969C              ;   NextScan.
 651+ 969C              ;
 652+ 969C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 969C              ;
 654+ 969C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 969C              ;
 656+ 969C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 969C              ;
 658+ 969C              ;       DESTRUIDOS: AF y HL !!!
 659+ 969C              ;
 660+ 969C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 969C              ;
 662+ 969C
 663+ 969C 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 969D 7C               ld a,h
 665+ 969E E6 07            and 7
 666+ 96A0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96A1
 668+ 96A1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96A2 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96A4 6F               ld l,a
 671+ 96A5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96A6
 673+ 96A6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96A7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96A9 67               ld h,a
 676+ 96AA C9               ret
 677+ 96AB
 678+ 96AB              ;----------------------------------------------------------------------------------------------------------------
 679+ 96AB              ;
 680+ 96AB              ;	5/08/22
 681+ 96AB              ;
 682+ 96AB              ;   PreviousScan.
 683+ 96AB              ;
 684+ 96AB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96AB              ;
 686+ 96AB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96AB              ;
 688+ 96AB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96AB              ;
 690+ 96AB              ;       DESTRUIDOS: AF y HL !!!
 691+ 96AB              ;
 692+ 96AB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96AB              ;
 694+ 96AB
 695+ 96AB 7C           PreviousScan ld a,h
 696+ 96AC 25               dec h               ; Dec H.
 697+ 96AD E6 07            and 7
 698+ 96AF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96B0
 700+ 96B0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96B1 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96B3 6F               ld l,a
 703+ 96B4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96B5
 705+ 96B5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96B6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96B8 67               ld h,a
 708+ 96B9 C9               ret
 709+ 96BA
 710+ 96BA              ; -----------------------------------------------------------------------------------
 711+ 96BA              ;
 712+ 96BA              ;	31/7/23
 713+ 96BA              ;
 714+ 96BA              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96BA              ;	Extrae fotos de Album_de_fotos.
 716+ 96BA
 717+ 96BA              Extrae_foto_entidades
 718+ 96BA
 719+ 96BA 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96BD 7E           	ld a,(hl)
 721+ 96BE A7           	and a
 722+ 96BF C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96C0
 724+ 96C0 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96C3 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96C4 C8           	ret z
 727+ 96C5
 728+ 96C5              ; -----------------------------------
 729+ 96C5
 730+ 96C5 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96C9 31 00 70     	ld sp,Album_de_fotos
 732+ 96CC
 733+ 96CC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96CE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96CF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96D0
 737+ 96D0 ED 73 16 89  	ld (Stack_2),sp
 738+ 96D4 ED 7B 14 89  	ld sp,(Stack)
 739+ 96D8
 740+ 96D8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96D8
 742+ 96D8 3E CD        	ld a,$cd
 743+ 96DA 32 E2 96     	ld (Imprime),a
 744+ 96DD EB           	ex de,hl
 745+ 96DE 22 E3 96     	ld (Imprime+1),hl
 746+ 96E1 EB           	ex de,hl
 747+ 96E2
 748+ 96E2              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96E2
 750+ 96E2 00 00 00     Imprime db 0,0,0
 751+ 96E5
 752+ 96E5 ED 73 14 89  	ld (Stack),sp
 753+ 96E9
 754+ 96E9 3A 0F 89     	ld a,(Numero_de_malotes)
 755+ 96EC 3D           	dec a
 756+ 96ED 28 09        	jr z,1F
 757+ 96EF 32 0F 89      	ld (Numero_de_malotes),a
 758+ 96F2
 759+ 96F2 ED 7B 16 89  	ld sp,(Stack_2)
 760+ 96F6 18 D4        	jr 2B
 761+ 96F8
 762+ 96F8 AF           1 xor a
 763+ 96F9 32 16 89     	ld (Stack_2),a
 764+ 96FC
 765+ 96FC C9           	ret
 766+ 96FD
 767+ 96FD              ; -----------------------------------------------------------------------------------
 768+ 96FD              ;
 769+ 96FD              ;	28/2/23
 770+ 96FD              ;
 771+ 96FD              ;	Pinta los disparos generados.
 772+ 96FD
 773+ 96FD              Extrae_foto_disparos
 774+ 96FD
 775+ 96FD 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 9700 7E               ld a,(hl)
 777+ 9701 A7               and a
 778+ 9702 C8               ret z
 779+ 9703
 780+ 9703 3A 3C 89     	ld a,(Numero_de_disparotes)
 781+ 9706 A7           	and a
 782+ 9707 C8           	ret z
 783+ 9708 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 970C 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 970F
 786+ 970F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 9711 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 9712 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 9713
 790+ 9713 ED 73 16 89  	ld (Stack_2),sp
 791+ 9717 ED 7B 14 89  	ld sp,(Stack)
 792+ 971B
 793+ 971B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 971B
 795+ 971B 3E CD        	ld a,$cd
 796+ 971D 32 25 97     	ld (Imprime2),a
 797+ 9720 EB           	ex de,hl
 798+ 9721 22 26 97     	ld (Imprime2+1),hl
 799+ 9724 EB           	ex de,hl
 800+ 9725
 801+ 9725              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 9725
 803+ 9725 00 00 00     Imprime2 db 0,0,0
 804+ 9728
 805+ 9728 3A 3C 89     	ld a,(Numero_de_disparotes)
 806+ 972B 3D           	dec a
 807+ 972C 28 09        	jr z,1F
 808+ 972E 32 3C 89      	ld (Numero_de_disparotes),a
 809+ 9731
 810+ 9731 ED 7B 16 89  	ld sp,(Stack_2)
 811+ 9735 18 D8        	jr 2B
 812+ 9737
 813+ 9737 AF           1 xor a
 814+ 9738 32 16 89     	ld (Stack_2),a
 815+ 973B C9           	ret
 816+ 973C
 817+ 973C              ; -----------------------------------------------------------------------------------
 818+ 973C              ;
 819+ 973C              ;	4/9/23
 820+ 973C              ;
 821+ 973C              ;	Rutina principal de pintado de Amadeus.
 822+ 973C              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 973C
 824+ 973C              Extrae_foto_Amadeus
 825+ 973C
 826+ 973C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 827+ 973F 7E           	ld a,(hl)
 828+ 9740 A7           	and a
 829+ 9741 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9742
 831+ 9742 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9745 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9746 C8           	ret z
 834+ 9747
 835+ 9747              ; -----------------------------------
 836+ 9747
 837+ 9747 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 974B 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 974E
 840+ 974E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9750 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9751 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9752
 844+ 9752 ED 73 16 89  	ld (Stack_2),sp
 845+ 9756 ED 7B 14 89  	ld sp,(Stack)
 846+ 975A
 847+ 975A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 975A
 849+ 975A 3E CD        	ld a,$cd
 850+ 975C 32 64 97     	ld (Imprime_Amadeus),a
 851+ 975F EB           	ex de,hl
 852+ 9760 22 65 97     	ld (Imprime_Amadeus+1),hl
 853+ 9763 EB           	ex de,hl
 854+ 9764
 855+ 9764              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9764
 857+ 9764 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9767
 859+ 9767 ED 73 14 89  	ld (Stack),sp
 860+ 976B
 861+ 976B 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 976E 3D           	dec a
 863+ 976F 28 09        	jr z,1F
 864+ 9771 32 0F 89      	ld (Numero_de_malotes),a
 865+ 9774
 866+ 9774 ED 7B 16 89  	ld sp,(Stack_2)
 867+ 9778 18 D4        	jr 2B
 868+ 977A
 869+ 977A AF           1 xor a
 870+ 977B 32 16 89     	ld (Stack_2),a
 871+ 977E
 872+ 977E C9           	ret
# file closed: Draw_XOR.asm
1650  977F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 977F              ;   índices de Rutinas de impresión.
   2+ 977F
   3+ 977F 8F 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9781 BC 97            defw Pinta_Amadeus_3x2
   5+ 9783
   6+ 9783 12 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9785 B2 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9787 66 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9789
  10+ 9789 3C 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 978B 40 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 978D F4 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 978F
  14+ 978F
  15+ 978F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 978F              ;
  17+ 978F              ;   12/12/22
  18+ 978F              ;
  19+ 978F              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 978F              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 978F              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 978F              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 978F              ;
  24+ 978F              ;   Modifica: DE y HL.
  25+ 978F
  26+ 978F ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9793 FD F9        	ld sp,iy
  28+ 9795 06 10            ld b,16
  29+ 9797 D1           1 pop de
  30+ 9798 7B               ld a,e
  31+ 9799 AE               xor (hl)
  32+ 979A 77           	ld (hl),a
  33+ 979B 23           	inc hl
  34+ 979C 7A               ld a,d
  35+ 979D AE               xor (hl)
  36+ 979E 77           	ld (hl),a
  37+ 979F 2B           	dec hl
  38+ 97A0 24           	inc h
  39+ 97A1 7C               ld a,h
  40+ 97A2 E6 07            and 7
  41+ 97A4 20 0A            jr nz,2F
  42+ 97A6 7D               ld a,l
  43+ 97A7 C6 20            add a,$20
  44+ 97A9 6F               ld l,a
  45+ 97AA 38 04            jr c,2F
  46+ 97AC 7C               ld a,h
  47+ 97AD D6 08            sub 8
  48+ 97AF 67               ld h,a
  49+ 97B0 7C           2 ld a,h
  50+ 97B1 FE 58            cp $58
  51+ 97B3 28 02            jr z,3F
  52+ 97B5 10 E0            djnz 1B
  53+ 97B7 ED 7B 14 89  3 ld sp,(Stack)
  54+ 97BB C9           	ret
  55+ 97BC
  56+ 97BC ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97C0 FD F9        	ld sp,iy
  58+ 97C2 06 08            ld b,8
  59+ 97C4 D1           1 pop de
  60+ 97C5 7B               ld a,e
  61+ 97C6 AE               xor (hl)
  62+ 97C7 77           	ld (hl),a
  63+ 97C8 23           	inc hl
  64+ 97C9 7A               ld a,d
  65+ 97CA AE               xor (hl)
  66+ 97CB 77           	ld (hl),a
  67+ 97CC 23           	inc hl
  68+ 97CD D1           	pop de
  69+ 97CE 7B               ld a,e
  70+ 97CF AE               xor (hl)
  71+ 97D0 77           	ld (hl),a
  72+ 97D1 2B           	dec hl
  73+ 97D2 2B           	dec hl
  74+ 97D3 24           	inc h
  75+ 97D4 7C               ld a,h
  76+ 97D5 E6 07            and 7
  77+ 97D7 20 0A            jr nz,2F
  78+ 97D9 7D               ld a,l
  79+ 97DA C6 20            add a,$20
  80+ 97DC 6F               ld l,a
  81+ 97DD 38 04            jr c,2F
  82+ 97DF 7C               ld a,h
  83+ 97E0 D6 08            sub 8
  84+ 97E2 67               ld h,a
  85+ 97E3 7C           2 ld a,h
  86+ 97E4 FE 58            cp $58
  87+ 97E6 28 25            jr z,4F
  88+ 97E8 7A               ld a,d
  89+ 97E9 AE               xor (hl)
  90+ 97EA 77               ld (hl),a
  91+ 97EB D1           	pop de
  92+ 97EC 23           	inc hl
  93+ 97ED 7B               ld a,e
  94+ 97EE AE               xor (hl)
  95+ 97EF 77           	ld (hl),a
  96+ 97F0 23           	inc hl
  97+ 97F1 7A               ld a,d
  98+ 97F2 AE               xor (hl)
  99+ 97F3 77           	ld (hl),a
 100+ 97F4 2B           	dec hl
 101+ 97F5 2B           	dec hl
 102+ 97F6 24           	inc h
 103+ 97F7 7C               ld a,h
 104+ 97F8 E6 07            and 7
 105+ 97FA 20 0A            jr nz,3F
 106+ 97FC 7D               ld a,l
 107+ 97FD C6 20            add a,$20
 108+ 97FF 6F               ld l,a
 109+ 9800 38 04            jr c,3F
 110+ 9802 7C               ld a,h
 111+ 9803 D6 08            sub 8
 112+ 9805 67               ld h,a
 113+ 9806 7C           3 ld a,h
 114+ 9807 FE 58            cp $58
 115+ 9809 28 02            jr z,4F
 116+ 980B 10 B7            djnz 1B
 117+ 980D ED 7B 14 89  4 ld sp,(Stack)
 118+ 9811 C9           	ret
 119+ 9812
 120+ 9812              ; ---------------------------------------------------
 121+ 9812
 122+ 9812 ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9816 FD F9        	ld sp,iy
 124+ 9818
 125+ 9818              ; >>>
 126+ 9818
 127+ 9818 06 10            ld b,16
 128+ 981A D1           1 pop de
 129+ 981B 7A           	ld a,d
 130+ 981C AE           	xor (hl)
 131+ 981D 77           	ld (hl),a
 132+ 981E 24           	inc h
 133+ 981F 7C               ld a,h
 134+ 9820 E6 07            and 7
 135+ 9822 20 0C            jr nz,2F
 136+ 9824 7D               ld a,l
 137+ 9825 C6 20            add a,$20
 138+ 9827 6F               ld l,a
 139+ 9828 38 06            jr c,2F
 140+ 982A 7C               ld a,h
 141+ 982B D6 08            sub 8
 142+ 982D 67               ld h,a
 143+ 982E 18 00            jr 2F
 144+ 9830 7C           2 ld a,h
 145+ 9831 FE 58            cp $58
 146+ 9833 28 02            jr z,3F
 147+ 9835 10 E3            djnz 1B
 148+ 9837 ED 7B 14 89  3 ld sp,(Stack)
 149+ 983B C9           	ret
 150+ 983C
 151+ 983C ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9840 FD F9        	ld sp,iy
 153+ 9842
 154+ 9842              ; >>>
 155+ 9842
 156+ 9842 06 10            ld b,16
 157+ 9844 D1           1 pop de
 158+ 9845 7B           	ld a,e
 159+ 9846 AE           	xor (hl)
 160+ 9847 77           	ld (hl),a
 161+ 9848 24           	inc h
 162+ 9849 7C               ld a,h
 163+ 984A E6 07            and 7
 164+ 984C 20 0C            jr nz,2F
 165+ 984E 7D               ld a,l
 166+ 984F C6 20            add a,$20
 167+ 9851 6F               ld l,a
 168+ 9852 38 06            jr c,2F
 169+ 9854 7C               ld a,h
 170+ 9855 D6 08            sub 8
 171+ 9857 67               ld h,a
 172+ 9858 18 00            jr 2F
 173+ 985A 7C           2 ld a,h
 174+ 985B FE 58            cp $58
 175+ 985D 28 02            jr z,3F
 176+ 985F 10 E3            djnz 1B
 177+ 9861 ED 7B 14 89  3 ld sp,(Stack)
 178+ 9865 C9           	ret
 179+ 9866
 180+ 9866              ; ---------------------------------------------------
 181+ 9866
 182+ 9866 ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 986A FD F9        	ld sp,iy
 184+ 986C 06 08            ld b,8
 185+ 986E D1           1 pop de
 186+ 986F 7A           	ld a,d
 187+ 9870 AE           	xor (hl)
 188+ 9871 77           	ld (hl),a
 189+ 9872 23           	inc hl
 190+ 9873 D1           	pop de
 191+ 9874 7B           	ld a,e
 192+ 9875 AE           	xor (hl)
 193+ 9876 77           	ld (hl),a
 194+ 9877 2B           	dec hl
 195+ 9878 24            	inc h
 196+ 9879 7C               ld a,h
 197+ 987A E6 07            and 7
 198+ 987C 20 0A            jr nz,2F
 199+ 987E 7D               ld a,l
 200+ 987F C6 20            add a,$20
 201+ 9881 6F               ld l,a
 202+ 9882 38 04            jr c,2F
 203+ 9884 7C               ld a,h
 204+ 9885 D6 08            sub 8
 205+ 9887 67               ld h,a
 206+ 9888 7C           2 ld a,h
 207+ 9889 FE 58            cp $58
 208+ 988B 28 20            jr z,4F
 209+ 988D D1               pop de
 210+ 988E 7B           	ld a,e
 211+ 988F AE           	xor (hl)
 212+ 9890 77           	ld (hl),a
 213+ 9891 23           	inc hl
 214+ 9892 7A           	ld a,d
 215+ 9893 AE           	xor (hl)
 216+ 9894 77           	ld (hl),a
 217+ 9895 2B           	dec hl
 218+ 9896 24           	inc h
 219+ 9897 7C               ld a,h
 220+ 9898 E6 07            and 7
 221+ 989A 20 0A            jr nz,3F
 222+ 989C 7D               ld a,l
 223+ 989D C6 20            add a,$20
 224+ 989F 6F               ld l,a
 225+ 98A0 38 04            jr c,3F
 226+ 98A2 7C               ld a,h
 227+ 98A3 D6 08            sub 8
 228+ 98A5 67               ld h,a
 229+ 98A6 7C           3 ld a,h
 230+ 98A7 FE 58            cp $58
 231+ 98A9 28 02            jr z,4F
 232+ 98AB 10 C1            djnz 1B
 233+ 98AD ED 7B 14 89  4 ld sp,(Stack)
 234+ 98B1 C9           	ret
 235+ 98B2
 236+ 98B2 ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98B6 FD F9        	ld sp,iy
 238+ 98B8 06 08            ld b,8
 239+ 98BA D1           1 pop de
 240+ 98BB D1           	pop de
 241+ 98BC 7B           	ld a,e
 242+ 98BD AE           	xor (hl)
 243+ 98BE 77           	ld (hl),a
 244+ 98BF 24            	inc h
 245+ 98C0 7C               ld a,h
 246+ 98C1 E6 07            and 7
 247+ 98C3 20 0A            jr nz,2F
 248+ 98C5 7D               ld a,l
 249+ 98C6 C6 20            add a,$20
 250+ 98C8 6F               ld l,a
 251+ 98C9 38 04            jr c,2F
 252+ 98CB 7C               ld a,h
 253+ 98CC D6 08            sub 8
 254+ 98CE 67               ld h,a
 255+ 98CF 7C           2 ld a,h
 256+ 98D0 FE 58            cp $58
 257+ 98D2 28 1B            jr z,4F
 258+ 98D4 D1               pop de
 259+ 98D5 7A           	ld a,d
 260+ 98D6 AE           	xor (hl)
 261+ 98D7 77           	ld (hl),a
 262+ 98D8 24           	inc h
 263+ 98D9 7C               ld a,h
 264+ 98DA E6 07            and 7
 265+ 98DC 20 0A            jr nz,3F
 266+ 98DE 7D               ld a,l
 267+ 98DF C6 20            add a,$20
 268+ 98E1 6F               ld l,a
 269+ 98E2 38 04            jr c,3F
 270+ 98E4 7C               ld a,h
 271+ 98E5 D6 08            sub 8
 272+ 98E7 67               ld h,a
 273+ 98E8 7C           3 ld a,h
 274+ 98E9 FE 58            cp $58
 275+ 98EB 28 02            jr z,4F
 276+ 98ED 10 CB            djnz 1B
 277+ 98EF ED 7B 14 89  4 ld sp,(Stack)
 278+ 98F3 C9           	ret
 279+ 98F4
 280+ 98F4 ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98F8 FD F9        	ld sp,iy
 282+ 98FA 06 08            ld b,8
 283+ 98FC D1           1 pop de
 284+ 98FD 7B           	ld a,e
 285+ 98FE AE           	xor (hl)
 286+ 98FF 77           	ld (hl),a
 287+ 9900 23           	inc hl
 288+ 9901 7A           	ld a,d
 289+ 9902 AE           	xor (hl)
 290+ 9903 77           	ld (hl),a
 291+ 9904 2B           	dec hl
 292+ 9905 24             	inc h
 293+ 9906 7C               ld a,h
 294+ 9907 E6 07            and 7
 295+ 9909 20 0A            jr nz,2F
 296+ 990B 7D               ld a,l
 297+ 990C C6 20            add a,$20
 298+ 990E 6F               ld l,a
 299+ 990F 38 04            jr c,2F
 300+ 9911 7C               ld a,h
 301+ 9912 D6 08            sub 8
 302+ 9914 67               ld h,a
 303+ 9915 7C           2 ld a,h
 304+ 9916 FE 58            cp $58
 305+ 9918 28 21            jr z,4F
 306+ 991A D1               pop de
 307+ 991B 7A           	ld a,d
 308+ 991C AE           	xor (hl)
 309+ 991D 77           	ld (hl),a
 310+ 991E 23           	inc hl
 311+ 991F D1               pop de
 312+ 9920 7B           	ld a,e
 313+ 9921 AE           	xor (hl)
 314+ 9922 77           	ld (hl),a
 315+ 9923 2B           	dec hl
 316+ 9924 24           	inc h
 317+ 9925 7C               ld a,h
 318+ 9926 E6 07            and 7
 319+ 9928 20 0A            jr nz,3F
 320+ 992A 7D               ld a,l
 321+ 992B C6 20            add a,$20
 322+ 992D 6F               ld l,a
 323+ 992E 38 04            jr c,3F
 324+ 9930 7C               ld a,h
 325+ 9931 D6 08            sub 8
 326+ 9933 67               ld h,a
 327+ 9934 7C           3 ld a,h
 328+ 9935 FE 58            cp $58
 329+ 9937 28 02            jr z,4F
 330+ 9939 10 C1            djnz 1B
 331+ 993B ED 7B 14 89  4 ld sp,(Stack)
 332+ 993F C9           	ret
 333+ 9940
 334+ 9940 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9944 FD F9        	ld sp,iy
 336+ 9946 06 08            ld b,8
 337+ 9948 D1           1 pop de
 338+ 9949 7B           	ld a,e
 339+ 994A AE           	xor (hl)
 340+ 994B 77           	ld (hl),a
 341+ 994C 24            	inc h
 342+ 994D 7C               ld a,h
 343+ 994E E6 07            and 7
 344+ 9950 20 0A            jr nz,2F
 345+ 9952 7D               ld a,l
 346+ 9953 C6 20            add a,$20
 347+ 9955 6F               ld l,a
 348+ 9956 38 04            jr c,2F
 349+ 9958 7C               ld a,h
 350+ 9959 D6 08            sub 8
 351+ 995B 67               ld h,a
 352+ 995C 7C           2 ld a,h
 353+ 995D FE 58            cp $58
 354+ 995F 28 1C            jr z,4F
 355+ 9961 D1               pop de
 356+ 9962 7A           	ld a,d
 357+ 9963 AE           	xor (hl)
 358+ 9964 77           	ld (hl),a
 359+ 9965 24           	inc h
 360+ 9966 7C               ld a,h
 361+ 9967 E6 07            and 7
 362+ 9969 20 0A            jr nz,3F
 363+ 996B 7D               ld a,l
 364+ 996C C6 20            add a,$20
 365+ 996E 6F               ld l,a
 366+ 996F 38 04            jr c,3F
 367+ 9971 7C               ld a,h
 368+ 9972 D6 08            sub 8
 369+ 9974 67               ld h,a
 370+ 9975 7C           3 ld a,h
 371+ 9976 FE 58            cp $58
 372+ 9978 28 03            jr z,4F
 373+ 997A D1               pop de
 374+ 997B 10 CB            djnz 1B
 375+ 997D ED 7B 14 89  4 ld sp,(Stack)
 376+ 9981 C9           	ret
 377+ 9982
 378+ 9982              ; ---------------------------------------------------
 379+ 9982              ;
 380+ 9982              ;   27/02/23
 381+ 9982              ;
 382+ 9982              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9982              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9982              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9982
 386+ 9982 ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 9986 FD F9            ld sp,iy
 388+ 9988 06 03            ld b,3
 389+ 998A D1           1 pop de
 390+ 998B 7B               ld a,e
 391+ 998C AE               xor (hl)
 392+ 998D 77               ld (hl),a
 393+ 998E 23               inc hl
 394+ 998F 7A               ld a,d
 395+ 9990 AE               xor (hl)
 396+ 9991 77               ld (hl),a
 397+ 9992 2B               dec hl
 398+ 9993
 399+ 9993 24               inc h
 400+ 9994 7C               ld a,h
 401+ 9995 E6 07            and 7
 402+ 9997 20 0A            jr nz,2F
 403+ 9999 7D               ld a,l
 404+ 999A C6 20            add a,$20
 405+ 999C 6F               ld l,a
 406+ 999D 38 04            jr c,2F
 407+ 999F 7C               ld a,h
 408+ 99A0 D6 08            sub 8
 409+ 99A2 67               ld h,a
 410+ 99A3 7C           2 ld a,h
 411+ 99A4 FE 58            cp $58
 412+ 99A6 28 02            jr z,3F
 413+ 99A8
 414+ 99A8 10 E0            djnz 1B
 415+ 99AA ED 7B 14 89  3 ld sp,(Stack)
 416+ 99AE C9               ret
 417+ 99AF
# file closed: Rutinas_de_impresion_sprites.asm
1651  99AF              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99AF              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99AF              ;
   3+ 99AF              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99AF              ;
   5+ 99AF              ; *****************************************************************************************************************************************************************************************
   6+ 99AF              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99AF
   8+ 99AF 7C           calcula_tercio ld a,h
   9+ 99B0 E6 18        	and $18
  10+ 99B2 CB 2F        	sra a
  11+ 99B4 CB 2F        	sra a
  12+ 99B6 CB 2F        	sra a
  13+ 99B8 C9           	ret
  14+ 99B9
# file closed: calcula_tercio.asm
1652  99B9              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99B9              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99B9              ;
   3+ 99B9              ;
   4+ 99B9              ;	CLS.
   5+ 99B9              ;
   6+ 99B9              ;	Limpia la pantalla y define sus atributos.
   7+ 99B9              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99B9              ;
   9+ 99B9              ;	COLORES: 0 ..... NEGRO
  10+ 99B9              ;    		 1 ..... AZUL
  11+ 99B9              ; 			 2 ..... ROJO
  12+ 99B9              ;			 3 ..... MAGENTA
  13+ 99B9              ; 			 4 ..... VERDE
  14+ 99B9              ; 			 5 ..... CIAN
  15+ 99B9              ;			 6 ..... AMARILLO
  16+ 99B9              ; 			 7 ..... BLANCO
  17+ 99B9              ;
  18+ 99B9              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99B9              ;
  20+ 99B9              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99B9
  22+ 99B9
  23+ 99B9 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99BC 11 01 40     	LD DE,$4001
  25+ 99BF 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99C2 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99C4 ED B0        	LDIR
  28+ 99C6 01 FF 02     	LD BC,767
  29+ 99C9 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99CA ED B0        	LDIR
  31+ 99CC C9           	ret
  32+ 99CD
# file closed: Cls.asm
1653  99CD              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99CD              ; ******************************************************************************************************************************************************************************************
   2+ 99CD              ;
   3+ 99CD              ;   20/05/23
   4+ 99CD              ;
   5+ 99CD              ;	Recompone_posicion_inicio
   6+ 99CD              ;
   7+ 99CD              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99CD              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99CD              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99CD              ;	_ a una u otra rutina.
  11+ 99CD
  12+ 99CD              Recompone_posicion_inicio
  13+ 99CD
  14+ 99CD 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 99D0 7D           	ld a,l
  16+ 99D1 E6 1F        	and $1f
  17+ 99D3 28 16        	jr z,1F
  18+ 99D5
  19+ 99D5 FE 1F        	cp $1f
  20+ 99D7 28 0D        	jr z,3F
  21+ 99D9
  22+ 99D9 21 01 89     	ld hl,Ctrl_2
  23+ 99DC CB C6        	set 0,(hl)
  24+ 99DE 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 99E1 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99E4 18 08        	jr 2F
  27+ 99E6
  28+ 99E6 CD 87 9B     3 call Mov_left
  29+ 99E9 18 03        	jr 2F
  30+ 99EB
  31+ 99EB CD 69 9A     1 call Mov_right
  32+ 99EE 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99F1 22 C8 88     	ld (Puntero_objeto),hl
  34+ 99F4 C9           	ret
  35+ 99F5
  36+ 99F5              ; ******************************************************************************************************************************************************************************************
  37+ 99F5              ;
  38+ 99F5              ;   27/05/23
  39+ 99F5              ;
  40+ 99F5              ;	Mov_down
  41+ 99F5              ;
  42+ 99F5              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99F5              ;
  44+ 99F5              ;
  45+ 99F5              Mov_down
  46+ 99F5
  47+ 99F5 CD 57 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99F8              ;																	; _ repone (Puntero_objeto).
  49+ 99F8 21 EE 88     	ld hl,Ctrl_0
  50+ 99FB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99FD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99FD              ; 																	; _ en el caso de que no lo haya.
  53+ 99FD 3A DC 88     	ld a,(Vel_down)
  54+ 9A00 47           	ld b,a
  55+ 9A01 2A C6 88         ld hl,(Posicion_actual)
  56+ 9A04 CD AF 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A07 E6 02        	and 2
  58+ 9A09 28 0F        	jr z,1F
  59+ 9A0B
  60+ 9A0B              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A0B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A0B
  63+ 9A0B 7C           	ld a,h
  64+ 9A0C FE 57        	cp $57
  65+ 9A0E 20 0A        	jr nz,1F
  66+ 9A10
  67+ 9A10 7D           	ld a,l
  68+ 9A11 C6 20        	add $20
  69+ 9A13 30 05        	jr nc,1F
  70+ 9A15
  71+ 9A15              ; ------------------------------
  72+ 9A15              ;	call Reaparece_arriba
  73+ 9A15 CD 14 9D     	call Reinicio
  74+ 9A18              ; ------------------------------
  75+ 9A18
  76+ 9A18 18 08        	jr 3F
  77+ 9A1A CD 9C 96     1 call NextScan
  78+ 9A1D 22 C6 88     	ld (Posicion_actual),hl
  79+ 9A20 10 E2            djnz 2B
  80+ 9A22 CD 3A 9D     3 call Genera_coordenadas
  81+ 9A25 C9           	ret
  82+ 9A26
  83+ 9A26              ; ******************************************************************************************************************************************************************************************
  84+ 9A26              ;
  85+ 9A26              ;   27/05/23
  86+ 9A26              ;
  87+ 9A26              ;	Mov_up
  88+ 9A26              ;
  89+ 9A26              ; 	Mueve el Sprite hacia arriba.
  90+ 9A26              ;
  91+ 9A26              ;
  92+ 9A26              Mov_up
  93+ 9A26
  94+ 9A26 CD 57 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A29              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A29 21 EE 88     	ld hl,Ctrl_0
  97+ 9A2C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A2E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A2E              ; 																		; _ en el caso de que no lo haya.
 100+ 9A2E 3A DB 88     	ld a,(Vel_up)
 101+ 9A31 47           	ld b,a
 102+ 9A32 2A C6 88     	ld hl,(Posicion_actual)
 103+ 9A35 CD AF 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A38 A7           	and a
 105+ 9A39 20 10        	jr nz,1F
 106+ 9A3B
 107+ 9A3B              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A3B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A3B
 110+ 9A3B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A3C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A3E 20 0B            jr nz,1F
 113+ 9A40 7D               ld a,l
 114+ 9A41 D6 20            sub $20
 115+ 9A43 30 06            jr nc,1F
 116+ 9A45 25               dec h
 117+ 9A46
 118+ 9A46              ; -----------------------------
 119+ 9A46 CD F5 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A49              ;	call Reinicio
 121+ 9A49              ; -----------------------------
 122+ 9A49
 123+ 9A49 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A4B CD AB 96     1 call PreviousScan
 125+ 9A4E 22 C6 88     	ld (Posicion_actual),hl
 126+ 9A51 10 E2            djnz 3B
 127+ 9A53 CD 3A 9D     2 call Genera_coordenadas
 128+ 9A56 C9           	ret
 129+ 9A57
 130+ 9A57              ; -----------------------------
 131+ 9A57              ;
 132+ 9A57              ;	27/5/23
 133+ 9A57              ;
 134+ 9A57              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A57              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A57              ;
 137+ 9A57              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A57              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A57              ;
 140+ 9A57              ;	Modifica: A y (Puntero_objeto).
 141+ 9A57
 142+ 9A57 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A5A CB 47        	bit 0,a
 144+ 9A5C C8           	ret z
 145+ 9A5D CB 87        	res 0,a
 146+ 9A5F 32 01 89     	ld (Ctrl_2),a
 147+ 9A62 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A65 22 C8 88     	ld (Puntero_objeto),hl
 149+ 9A68 C9           	ret
 150+ 9A69
 151+ 9A69              ; ******************************************************************************************************************************************************************************************
 152+ 9A69              ;
 153+ 9A69              ;	19/10/22
 154+ 9A69              ;
 155+ 9A69              ;	Mov_right.
 156+ 9A69              ;
 157+ 9A69              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A69              ;
 159+ 9A69
 160+ 9A69 21 EE 88     Mov_right ld hl,Ctrl_0
 161+ 9A6C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A6E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A6E              ; 																	; _ en el caso de que no lo haya.
 164+ 9A6E 3A EE 88     	ld a,(Ctrl_0)
 165+ 9A71 CB 77        	bit 6,a
 166+ 9A73 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A75
 168+ 9A75 CD A3 9C     	call Stop_Amadeus_right
 169+ 9A78 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A79 18 4D        	jr 8F
 171+ 9A7B
 172+ 9A7B 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A7E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A80 20 46        	jr nz,8F
 175+ 9A82
 176+ 9A82 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A85 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A86 28 40        	jr z,8F
 179+ 9A88
 180+ 9A88              ; ---------- ---------- ----------
 181+ 9A88              ;
 182+ 9A88              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A88
 184+ 9A88 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A8B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A8D 28 11        	jr z,1F
 187+ 9A8F 38 06        	jr c,6F
 188+ 9A91 FE 04        	cp 4
 189+ 9A93 28 14        	jr z,7F
 190+ 9A95 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A97
 192+ 9A97              ; ---------- ---------- ----------
 193+ 9A97              ;
 194+ 9A97              ; Perfiles de velocidad
 195+ 9A97              ;
 196+ 9A97
 197+ 9A97 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A9A FE FE        	cp $fe
 199+ 9A9C 20 2A        	jr nz,8F
 200+ 9A9E 18 10        	jr 3F
 201+ 9AA0 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AA3 FE FD        	cp $fd
 203+ 9AA5 20 21        	jr nz,8F
 204+ 9AA7 18 07        	jr 3F
 205+ 9AA9 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AAC FE FB        	cp $fb
 207+ 9AAE 20 18        	jr nz,8F
 208+ 9AB0
 209+ 9AB0              ; ---------- ---------- ----------
 210+ 9AB0
 211+ 9AB0              3
 212+ 9AB0 CD E3 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AB3              ;	call Reinicio
 214+ 9AB3
 215+ 9AB3              ; ---------- ---------- ----------
 216+ 9AB3              ;
 217+ 9AB3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AB3
 219+ 9AB3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AB5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AB6 CD CF 9A     	call DESPLZ_DER
 222+ 9AB9 C1           	pop bc
 223+ 9ABA 10 F9        	djnz 5B
 224+ 9ABC 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9ABF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AC0 22 C6 88     	ld (Posicion_actual),hl
 227+ 9AC3 CD 3A 9D     	call Genera_coordenadas
 228+ 9AC6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AC8
 230+ 9AC8              ; ---------- ---------- ----------
 231+ 9AC8
 232+ 9AC8 2A C6 88     8 ld hl,(Posicion_actual)
 233+ 9ACB CD CF 9A     	call DESPLZ_DER
 234+ 9ACE C9           2 ret
 235+ 9ACF
 236+ 9ACF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9ACF              ;
 238+ 9ACF              ;	22/9/22
 239+ 9ACF              ;
 240+ 9ACF
 241+ 9ACF CD DE 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AD2 CD 2A 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AD5 CD 53 9B         call Ciclo_completo
 244+ 9AD8 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9ADB CB FE        	set 7,(hl)
 246+ 9ADD C9           	ret
 247+ 9ADE
 248+ 9ADE              ; ******************************************************************************************************************************************************************************************
 249+ 9ADE              ;	15/02/23
 250+ 9ADE              ;
 251+ 9ADE
 252+ 9ADE 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AE1 47           	ld b,a
 254+ 9AE2 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AE5 23           1 inc hl
 256+ 9AE6 23           	inc hl
 257+ 9AE7 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AE9 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AEC CD D4 8C     	call Extrae_address
 260+ 9AEF 22 C8 88     	ld (Puntero_objeto),hl
 261+ 9AF2
 262+ 9AF2              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AF2
 264+ 9AF2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AF2              ; Cuántos movimientos hemos hecho ??
 266+ 9AF2              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AF2
 268+ 9AF2 2A CE 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AF5 EB           	ex de,hl
 270+ 9AF6 A7           	and a
 271+ 9AF7 ED 52        	sbc hl,de
 272+ 9AF9 CB 3D        	srl l
 273+ 9AFB 3E 08        6 ld a,8
 274+ 9AFD 95           	sub l
 275+ 9AFE 30 1E        	jr nc,3F
 276+ 9B00
 277+ 9B00              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B00              ; B="0".
 279+ 9B00
 280+ 9B00 04           4 inc b
 281+ 9B01 3C           	inc a
 282+ 9B02 20 FC        	jr nz,4B
 283+ 9B04 78           	ld a,b
 284+ 9B05 08           	ex af,af
 285+ 9B06 2A CE 88     	ld hl,(Indice_Sprite_der)
 286+ 9B09 23           5 inc hl
 287+ 9B0A 23           	inc hl
 288+ 9B0B 10 FC        	djnz 5B
 289+ 9B0D 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B10 CD D4 8C     	call Extrae_address
 291+ 9B13 22 C8 88     	ld (Puntero_objeto),hl
 292+ 9B16
 293+ 9B16              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B16              ; _(Posicion_actual).
 295+ 9B16
 296+ 9B16 21 C6 88     	ld hl,Posicion_actual
 297+ 9B19 34           	inc (hl)
 298+ 9B1A 08               ex af,af
 299+ 9B1B 6F           	ld l,a
 300+ 9B1C 18 DD        	jr 6B
 301+ 9B1E
 302+ 9B1E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B1E
 304+ 9B1E 47           3 ld b,a
 305+ 9B1F 2A D0 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B22 23           2 inc hl
 307+ 9B23 23           	inc hl
 308+ 9B24 10 FC        	djnz 2B
 309+ 9B26 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B29 C9           8 ret
 311+ 9B2A
 312+ 9B2A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B2A              ;
 314+ 9B2A              ;	24/7/22
 315+ 9B2A              ;
 316+ 9B2A              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B2A              ;
 318+ 9B2A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B2A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B2A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B2A
 322+ 9B2A 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B2D A7           	and a
 324+ 9B2E 20 1F        	jr nz,1F
 325+ 9B30 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B32 32 CC 88         ld (CTRL_DESPLZ),a
 327+ 9B35
 328+ 9B35 21 C5 88     	ld hl,Columns
 329+ 9B38 34           	inc (hl)
 330+ 9B39 3A D8 88     	ld a,(Cuad_objeto)
 331+ 9B3C E6 01        	and 1
 332+ 9B3E 28 0F        	jr z,1F
 333+ 9B40 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B43 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B44 22 C6 88     	ld (Posicion_actual),hl
 336+ 9B47 CD 3A 9D     	call Genera_coordenadas
 337+ 9B4A CD AF 9C     	call Inc_CTRL_DESPLZ
 338+ 9B4D 18 03        	jr 2F
 339+ 9B4F CD AF 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B52 C9           2 ret
 341+ 9B53
 342+ 9B53              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B53              ;
 344+ 9B53              ;	24/7/22
 345+ 9B53              ;
 346+ 9B53              ;	Ciclo_completo.
 347+ 9B53              ;
 348+ 9B53              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B53              ;
 350+ 9B53              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B53              ; 	Decrementamos (Columns).
 352+ 9B53              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B53              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B53
 355+ 9B53
 356+ 9B53 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B56 FE FF        	cp $ff
 358+ 9B58 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B5A E6 F0        	and $f0
 360+ 9B5C 20 28        	jr nz,3F
 361+ 9B5E
 362+ 9B5E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B5E
 364+ 9B5E 3A CC 88     	ld a,(CTRL_DESPLZ)
 365+ 9B61 47           	ld b,a
 366+ 9B62 3E F8        	ld a,$f8
 367+ 9B64 80           	add b
 368+ 9B65 32 CC 88     	ld (CTRL_DESPLZ),a
 369+ 9B68 18 1C        	jr 3F
 370+ 9B6A 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B6D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B6E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B6F 32 CC 88     	ld (CTRL_DESPLZ),a
 374+ 9B72 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B75 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B77 20 0A        	jr nz,2F
 377+ 9B79 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B7C 23           	inc hl
 379+ 9B7D 22 C6 88     	ld (Posicion_actual),hl
 380+ 9B80 CD 3A 9D     	call Genera_coordenadas
 381+ 9B83
 382+ 9B83              ; Inicia el puntero de Sprite.
 383+ 9B83
 384+ 9B83 CD EB 8C     2 call Inicia_puntero_objeto_der
 385+ 9B86 C9           3 ret
 386+ 9B87
 387+ 9B87              ; ******************************************************************************************************************************************************************************************
 388+ 9B87              ;
 389+ 9B87              ;	15/02/23
 390+ 9B87              ;
 391+ 9B87              ;	Mov_left.
 392+ 9B87              ;
 393+ 9B87              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B87              ;
 395+ 9B87              Mov_left
 396+ 9B87
 397+ 9B87 21 EE 88     	ld hl,Ctrl_0
 398+ 9B8A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B8C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B8C              ; 																	; _ en el caso de que no lo haya.
 401+ 9B8C 3A EE 88     	ld a,(Ctrl_0)
 402+ 9B8F CB 77        	bit 6,a
 403+ 9B91 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B93
 405+ 9B93 CD A9 9C     	call Stop_Amadeus_left
 406+ 9B96 C8           	ret z
 407+ 9B97 20 4A        	jr nz,8F
 408+ 9B99
 409+ 9B99 3A CA 88     11 ld a,(Coordenada_X)
 410+ 9B9C A7           	and a
 411+ 9B9D 20 44        	jr nz,8F
 412+ 9B9F
 413+ 9B9F 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9BA2 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9BA3 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9BA5
 417+ 9BA5              ; ---------- ---------- ----------
 418+ 9BA5
 419+ 9BA5 3A D9 88     	ld a,(Vel_left)
 420+ 9BA8 FE 02        	cp 2
 421+ 9BAA 28 0F        	jr z,1F
 422+ 9BAC 38 04        	jr c,6F
 423+ 9BAE FE 04        	cp 4
 424+ 9BB0 28 12        	jr z,7F
 425+ 9BB2
 426+ 9BB2              ; ---------- ---------- ----------
 427+ 9BB2
 428+ 9BB2 3A CC 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BB5 FE F8        	cp $f8
 430+ 9BB7 20 2A        	jr nz,8F
 431+ 9BB9 18 10        	jr 4F
 432+ 9BBB 3A CC 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BBE FE F9        	cp $f9
 434+ 9BC0 20 21        	jr nz,8F
 435+ 9BC2 18 07        	jr 4F
 436+ 9BC4 3A CC 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BC7 FE FB        	cp $fb
 438+ 9BC9 20 18        	jr nz,8F
 439+ 9BCB
 440+ 9BCB              ; ---------- ---------- ----------
 441+ 9BCB
 442+ 9BCB              4
 443+ 9BCB CD D1 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BCE              ;	call Reinicio
 445+ 9BCE
 446+ 9BCE              ; ---------- ---------- ----------
 447+ 9BCE
 448+ 9BCE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BD0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BD1
 451+ 9BD1              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BD1              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BD1
 454+ 9BD1 CD EA 9B     	call DESPLZ_IZQ
 455+ 9BD4 C1           	pop bc
 456+ 9BD5 10 F9        	djnz 5B
 457+ 9BD7 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BDA 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BDB 22 C6 88     	ld (Posicion_actual),hl
 460+ 9BDE CD 3A 9D     	call Genera_coordenadas
 461+ 9BE1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BE3
 463+ 9BE3              ; ---------- ---------- ----------
 464+ 9BE3
 465+ 9BE3              ; Movemos, no hay recolocación.
 466+ 9BE3
 467+ 9BE3 2A C6 88     8 ld hl,(Posicion_actual)
 468+ 9BE6 CD EA 9B     	call DESPLZ_IZQ
 469+ 9BE9 C9           2 ret
 470+ 9BEA
 471+ 9BEA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BEA              ;
 473+ 9BEA              ;	22/9/22
 474+ 9BEA
 475+ 9BEA              DESPLZ_IZQ
 476+ 9BEA
 477+ 9BEA CD F9 9B     	call Desplaza_izquierda
 478+ 9BED CD 45 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BF0 CD 6D 9C     	call Ciclo_completo_2
 480+ 9BF3 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BF6 CB BE        	res 7,(hl)
 482+ 9BF8 C9           	ret
 483+ 9BF9
 484+ 9BF9              Desplaza_izquierda
 485+ 9BF9
 486+ 9BF9 3A D9 88     	ld a,(Vel_left)
 487+ 9BFC 47           	ld b,a
 488+ 9BFD 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9C00 23           1 inc hl
 490+ 9C01 23           	inc hl
 491+ 9C02 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9C04 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C07 CD D4 8C     	call Extrae_address
 494+ 9C0A 22 C8 88     	ld (Puntero_objeto),hl
 495+ 9C0D
 496+ 9C0D              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C0D
 498+ 9C0D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C0D              ; Cuántos movimientos hemos hecho ??
 500+ 9C0D              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C0D
 502+ 9C0D 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C10 EB           	ex de,hl
 504+ 9C11 A7           	and a
 505+ 9C12 ED 52        	sbc hl,de
 506+ 9C14 CB 3D        	srl l
 507+ 9C16 3E 08        6 ld a,8
 508+ 9C18 95           	sub l
 509+ 9C19 30 1E        	jr nc,3F
 510+ 9C1B
 511+ 9C1B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C1B              ; B="0".
 513+ 9C1B
 514+ 9C1B 04           4 inc b
 515+ 9C1C 3C           	inc a
 516+ 9C1D 20 FC        	jr nz,4B
 517+ 9C1F 78           	ld a,b
 518+ 9C20 08           	ex af,af
 519+ 9C21 2A D0 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C24 23           5 inc hl
 521+ 9C25 23           	inc hl
 522+ 9C26 10 FC        	djnz 5B
 523+ 9C28 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C2B CD D4 8C     	call Extrae_address
 525+ 9C2E 22 C8 88     	ld (Puntero_objeto),hl
 526+ 9C31
 527+ 9C31              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C31              ; _(Posicion_actual).
 529+ 9C31
 530+ 9C31 21 C6 88     	ld hl,Posicion_actual
 531+ 9C34 35           	dec (hl)
 532+ 9C35 08           	ex af,af
 533+ 9C36 6F           	ld l,a
 534+ 9C37 18 DD        	jr 6B
 535+ 9C39
 536+ 9C39              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C39
 538+ 9C39 47           3 ld b,a
 539+ 9C3A 2A CE 88     	ld hl,(Indice_Sprite_der)
 540+ 9C3D 23           2 inc hl
 541+ 9C3E 23           	inc hl
 542+ 9C3F 10 FC        	djnz 2B
 543+ 9C41 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C44 C9           8 ret
 545+ 9C45
 546+ 9C45              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C45              ;
 548+ 9C45              ;	modifica_parametros_1er_DESPLZ
 549+ 9C45              ;
 550+ 9C45              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C45              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C45              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C45
 554+ 9C45 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C48 A7           	and a
 556+ 9C49 20 1E        	jr nz,1F
 557+ 9C4B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C4C 32 CC 88         ld (CTRL_DESPLZ),a
 559+ 9C4F 21 C5 88     	ld hl,Columns
 560+ 9C52 34           	inc (hl)
 561+ 9C53 3A D8 88     	ld a,(Cuad_objeto)
 562+ 9C56 E6 01        	and 1
 563+ 9C58 20 0F        	jr nz,1F
 564+ 9C5A 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C5D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C5E 22 C6 88     	ld (Posicion_actual),hl
 567+ 9C61 CD 3A 9D     	call Genera_coordenadas
 568+ 9C64 CD C0 9C     	call Dec_CTRL_DESPLZ
 569+ 9C67 18 03        	jr 2F
 570+ 9C69 CD C0 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C6C C9           2 ret
 572+ 9C6D
 573+ 9C6D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C6D
 575+ 9C6D 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C70 FE F7        	cp $f7
 577+ 9C72 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C74 30 2C        	jr nc,3F
 579+ 9C76
 580+ 9C76              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C76
 582+ 9C76 06 00        	ld b,0
 583+ 9C78 04           4 inc b
 584+ 9C79 3C           	inc a
 585+ 9C7A FE F7        	cp $f7
 586+ 9C7C 20 FA        	jr nz,4B
 587+ 9C7E 3E FF        	ld a,$ff
 588+ 9C80 90           	sub b
 589+ 9C81 32 CC 88     	ld (CTRL_DESPLZ),a
 590+ 9C84 18 1C        	jr 3F
 591+ 9C86
 592+ 9C86              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C86
 594+ 9C86 21 C5 88     1 ld hl,Columns
 595+ 9C89 35           	dec (hl)
 596+ 9C8A AF           	xor a
 597+ 9C8B 32 CC 88     	ld (CTRL_DESPLZ),a
 598+ 9C8E 3A D8 88     	ld a,(Cuad_objeto)
 599+ 9C91 E6 01        	and 1
 600+ 9C93 28 0A        	jr z,2F
 601+ 9C95 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C98 2B           	dec hl
 603+ 9C99 22 C6 88     	ld (Posicion_actual),hl
 604+ 9C9C CD 3A 9D     	call Genera_coordenadas
 605+ 9C9F
 606+ 9C9F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C9F
 608+ 9C9F CD FE 8C     2 call Inicia_puntero_objeto_izq
 609+ 9CA2 C9           3 ret
 610+ 9CA3
 611+ 9CA3              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9CA3              ;
 613+ 9CA3              ;	19/10/22
 614+ 9CA3              ;
 615+ 9CA3              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9CA3              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9CA3
 618+ 9CA3 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CA6 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CA8 C9           	ret
 621+ 9CA9
 622+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CA9              ;
 624+ 9CA9              ;	19/10/22
 625+ 9CA9              ;
 626+ 9CA9              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CA9              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CA9
 629+ 9CA9 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CAC FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CAE C9           	ret
 632+ 9CAF
 633+ 9CAF              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CAF              ;
 635+ 9CAF              ;	24/7/22
 636+ 9CAF              ;
 637+ 9CAF              ;	Inc_CTRL_DESPLZ
 638+ 9CAF              ;
 639+ 9CAF              ;
 640+ 9CAF              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CAF
 642+ 9CAF 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CB2 3A DA 88     	ld a,(Vel_right)
 644+ 9CB5 A7           	and a
 645+ 9CB6 28 06        	jr z,1F
 646+ 9CB8 47           	ld b,a
 647+ 9CB9 34           3 inc (hl)
 648+ 9CBA 10 FD        	djnz 3B
 649+ 9CBC 18 01        	jr 2F
 650+ 9CBE 34           1 inc (hl)
 651+ 9CBF C9           2 ret
 652+ 9CC0
 653+ 9CC0              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CC0              ;
 655+ 9CC0              ;	5/2/23
 656+ 9CC0              ;
 657+ 9CC0              ;	Dec_CTRL_DESPLZ
 658+ 9CC0              ;
 659+ 9CC0              ;
 660+ 9CC0              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CC0
 662+ 9CC0 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CC3 3A D9 88     	ld a,(Vel_left)
 664+ 9CC6 A7           	and a
 665+ 9CC7 28 06        	jr z,1F
 666+ 9CC9 47           	ld b,a
 667+ 9CCA 35           3 dec (hl)
 668+ 9CCB 10 FD        	djnz 3B
 669+ 9CCD 18 01        	jr 2F
 670+ 9CCF 35           1 dec (hl)
 671+ 9CD0 C9           2 ret
 672+ 9CD1
 673+ 9CD1              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CD1
 675+ 9CD1 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CD4 01 1F 00     	ld bc,31
 677+ 9CD7 A7           	and a
 678+ 9CD8 ED 4A        	adc hl,bc
 679+ 9CDA 22 C6 88     	ld (Posicion_actual),hl
 680+ 9CDD 21 EE 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CE0 CB C6        	set 0,(hl)
 682+ 9CE2 C9           	ret
 683+ 9CE3
 684+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CE3
 686+ 9CE3 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CE6 01 1F 00     	ld bc,31
 688+ 9CE9 A7           	and a
 689+ 9CEA ED 42        	sbc hl,bc
 690+ 9CEC 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CEF 21 EE 88     	ld hl,Ctrl_0
 692+ 9CF2 CB CE        	set 1,(hl)
 693+ 9CF4 C9           	ret
 694+ 9CF5
 695+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CF5
 697+ 9CF5 24           Reaparece_abajo inc h
 698+ 9CF6 01 E0 17     	ld bc,$17e0
 699+ 9CF9 A7           	and a
 700+ 9CFA ED 4A        	adc hl,bc
 701+ 9CFC 22 C6 88     	ld (Posicion_actual),hl
 702+ 9CFF 21 EE 88     	ld hl,Ctrl_0
 703+ 9D02 CB D6        	set 2,(hl)
 704+ 9D04 C9           	ret
 705+ 9D05
 706+ 9D05              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9D05
 708+ 9D05 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D08 A7           	and a
 710+ 9D09 ED 42        	sbc hl,bc
 711+ 9D0B 22 C6 88     	ld (Posicion_actual),hl
 712+ 9D0E 21 EE 88     	ld hl,Ctrl_0
 713+ 9D11 CB DE        	set 3,(hl)
 714+ 9D13 C9           	ret
 715+ 9D14
 716+ 9D14              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D14              ;
 718+ 9D14              ;	15/07/23
 719+ 9D14
 720+ 9D14              Reinicio
 721+ 9D14
 722+ 9D14              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D14
 724+ 9D14 AF           	xor a
 725+ 9D15 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D18 CD 36 9D     	call Limpia_contenido_hl
 727+ 9D1B
 728+ 9D1B 21 C6 88     	ld hl,Posicion_actual
 729+ 9D1E CD 36 9D     	call Limpia_contenido_hl
 730+ 9D21
 731+ 9D21 CD 68 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D24 CD F2 9F     	call Inicia_Puntero_mov
 733+ 9D27
 734+ 9D27 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9D2A 06 05        	ld b,5
 736+ 9D2C 77           1 ld (hl),a
 737+ 9D2D 23           	inc hl
 738+ 9D2E 10 FC        	djnz 1B
 739+ 9D30
 740+ 9D30 21 01 89     	ld hl,Ctrl_2
 741+ 9D33 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D35
 743+ 9D35 C9           	ret
 744+ 9D36
 745+ 9D36 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D37 23           	inc hl
 747+ 9D38 77           	ld (hl),a
 748+ 9D39 C9           	ret
 749+ 9D3A
 750+ 9D3A
# file closed: Direcciones.asm
1654  9D3A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D3A              ; ------------------------------------------------------------------------
   2+ 9D3A              ;
   3+ 9D3A              ;	02/04/23
   4+ 9D3A              ;
   5+ 9D3A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D3A              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D3A              ;
   8+ 9D3A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D3A              ;
  10+ 9D3A              ;	Modifica: A,BC y DE.
  11+ 9D3A
  12+ 9D3A C5           Genera_coordenadas push bc
  13+ 9D3B E5           	push hl
  14+ 9D3C D5           	push de
  15+ 9D3D
  16+ 9D3D 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9D40
  18+ 9D40 7D           	ld a,l
  19+ 9D41 E6 1F        	and $1f
  20+ 9D43 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D46
  22+ 9D46 CD AF 99     	call calcula_tercio
  23+ 9D49 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D4A
  25+ 9D4A 1E 00        	ld e,0
  26+ 9D4C 7D           	ld a,l
  27+ 9D4D E6 E0        	and $e0
  28+ 9D4F 28 01        	jr z,1F
  29+ 9D51 04           	inc b
  30+ 9D52
  31+ 9D52 04           1 inc b
  32+ 9D53 05           	dec b
  33+ 9D54 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D56              ;														; _ , salimos.
  35+ 9D56 1C           3 inc e
  36+ 9D57 D6 20        	sub 32
  37+ 9D59 20 FB        	jr nz,3B
  38+ 9D5B 10 F5        	djnz 1B
  39+ 9D5D
  40+ 9D5D 7B           2 ld a,e
  41+ 9D5E 32 CB 88     	ld (Coordenada_y),a
  42+ 9D61
  43+ 9D61 D1           	pop de
  44+ 9D62 E1           	pop hl
  45+ 9D63 C1           	pop bc
  46+ 9D64
  47+ 9D64 C9           	ret
  48+ 9D65
  49+ 9D65              ; ------------------------------------------------------------------------
  50+ 9D65              ;	28/05/23
  51+ 9D65              ;
  52+ 9D65              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D65              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D65              ;
  55+ 9D65              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D65              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D65              ;
  58+ 9D65              ;		DE="$120d"
  59+ 9D65              ;
  60+ 9D65              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D65              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D65              ;
  63+ 9D65              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D65
  65+ 9D65              ;	Modifica: A,BC y DE.
  66+ 9D65
  67+ 9D65
  68+ 9D65              Genera_coordenadas_disparo
  69+ 9D65
  70+ 9D65              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D65
  72+ 9D65 7D           	ld a,l
  73+ 9D66 E6 1F        	and $1f
  74+ 9D68 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D69 CD AF 99     	call calcula_tercio
  76+ 9D6C 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D6D 1E 00        	ld e,0
  78+ 9D6F 7D           	ld a,l
  79+ 9D70 E6 E0        	and $e0
  80+ 9D72 28 01        	jr z,1F
  81+ 9D74 04           	inc b
  82+ 9D75 1C           1 inc e
  83+ 9D76 D6 20        	sub 32
  84+ 9D78 20 FB        	jr nz,1B
  85+ 9D7A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D7C C9           	ret
  87+ 9D7D
# file closed: Genera_coordenadas.asm
1655  9D7D              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D7D              ; Relojes y temporizaciones.
   2+ 9D7D
   3+ 9D7D              ; ------------------------------------------------------
   4+ 9D7D              ;
   5+ 9D7D              ;	16/7/23
   6+ 9D7D              ;
   7+ 9D7D              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D7D              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D7D              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D7D              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D7D              ;
  12+ 9D7D              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D7D              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D7D
  15+ 9D7D              ; Disparo_entidad db 1
  16+ 9D7D              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D7D              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D7D
  19+ 9D7D              Habilita_disparos
  20+ 9D7D
  21+ 9D7D 7E           	ld a,(hl)
  22+ 9D7E A7           	and a
  23+ 9D7F C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D80
  25+ 9D80 EB           	ex de,hl
  26+ 9D81
  27+ 9D81 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D82 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D83
  30+ 9D83              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D83
  32+ 9D83 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D84 7E           	ld a,(hl)
  34+ 9D85 23           	inc hl
  35+ 9D86 77           	ld (hl),a
  36+ 9D87
  37+ 9D87 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D88 3E 01        	ld a,1
  39+ 9D8A 77           	ld (hl),a
  40+ 9D8B C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1656  9D8C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D8C
   2+ 9D8C
   3+ 9D8C              ;   07/07/23
   4+ 9D8C              ;
   5+ 9D8C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D8C              ;
   7+ 9D8C              ;   Codificación:
   8+ 9D8C              ;
   9+ 9D8C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D8C              ;
  11+ 9D8C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D8C              ;
  13+ 9D8C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D8C              ;
  15+ 9D8C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D8C              ;
  17+ 9D8C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D8C              ;                               ..... %01000010 Vel_up 4
  19+ 9D8C              ;                                               Vel_down 2
  20+ 9D8C              ;                               ..... $42
  21+ 9D8C              ;
  22+ 9D8C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D8C              ;
  24+ 9D8C              ;                               ..... %01000010 Vel_left 4
  25+ 9D8C              ;                                               Vel_right 2
  26+ 9D8C              ;                               ..... $42
  27+ 9D8C              ;
  28+ 9D8C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D8C              ;
  30+ 9D8C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D8C              ;
  32+ 9D8C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D8C              ;
  34+ 9D8C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D8C              ;                                     $53
  36+ 9D8C              ;
  37+ 9D8C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D8C              ;
  39+ 9D8C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D8C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D8C              ;
  42+ 9D8C              ;                       Arriba ..... $81
  43+ 9D8C              ;                       Arriba - izquierda ..... $a1
  44+ 9D8C              ;                       Arriba - derecha ..... $91
  45+ 9D8C              ;
  46+ 9D8C              ;                       Abajo ..... $41
  47+ 9D8C              ;                       Abajo - izquierda ..... $61
  48+ 9D8C              ;                       Abajo - derecha ..... $51
  49+ 9D8C              ;
  50+ 9D8C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D8C              ;
  52+ 9D8C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D8C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D8C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D8C              ;
  56+ 9D8C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D8C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D8C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D8C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D8C              ;
  61+ 9D8C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D8C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D8C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D8C              ;
  65+ 9D8C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D8C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D8C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D8C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D8C
  70+ 9D8C              ; ----- ----- ----- ----- -----
  71+ 9D8C
  72+ 9D8C B8 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D8E C0 9D            defw F_1
  74+ 9D90 CA 9D            defw F_2
  75+ 9D92 D4 9D            defw Codo_abajo_derecha
  76+ 9D94 08 9E            defw Derecha_y_subiendo
  77+ 9D96 12 9E            defw Derecha_y_subiendo_1
  78+ 9D98 1C 9E            defw F_3
  79+ 9D9A 26 9E            defw F_4
  80+ 9D9C 30 9E            defw Derecha_y_bajando
  81+ 9D9E 3A 9E            defw Derecha_y_bajando_1
  82+ 9DA0 44 9E            defw Derecha_y_bajando_2
  83+ 9DA2 4E 9E            defw Codo_derecha_abajo
  84+ 9DA4 7E 9E            defw Codo_abajo_izq.
  85+ 9DA6 B2 9E            defw Izquierda_y_subiendo
  86+ 9DA8 BC 9E            defw Izquierda_y_subiendo_1
  87+ 9DAA C6 9E            defw F_5
  88+ 9DAC D0 9E            defw F_6
  89+ 9DAE DA 9E            defw Izquierda_y_bajando
  90+ 9DB0 E4 9E            defw Izquierda_y_bajando_1
  91+ 9DB2 EE 9E            defw Izquierda_y_bajando_2
  92+ 9DB4 F8 9E            defw Codo_izquierda_abajo
  93+ 9DB6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DB8
  95+ 9DB8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DBC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DC0
  98+ 9DC0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DC4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DC8 08 00
 100+ 9DCA 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DCE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DD2 0F FE
 102+ 9DD4
 103+ 9DD4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DD8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DDC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DE0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DE4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DE8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DEC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DF0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DF4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DF8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DFC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E00 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E04 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E08
 117+ 9E08 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E0C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E10 06 00
 119+ 9E12
 120+ 9E12 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E16 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E1A 02 00
 122+ 9E1C
 123+ 9E1C 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E20 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E24 04 00
 125+ 9E26 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E2A 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E2E 08 00
 127+ 9E30
 128+ 9E30 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E34 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E38 02 00
 130+ 9E3A
 131+ 9E3A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E3E 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E42 06 00
 133+ 9E44
 134+ 9E44 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E48 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E4C 06 00
 136+ 9E4E
 137+ 9E4E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E4E
 139+ 9E4E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E52 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E56 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E5A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E5E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E62 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E66 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E6A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E6E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E72 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E76 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E7A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E7E
 152+ 9E7E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E86 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E8E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E92 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E96 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E9A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E9E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EA2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EAA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EAE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EB2
 166+ 9EB2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EBA 06 00
 168+ 9EBC
 169+ 9EBC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EC0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EC4 02 00
 171+ 9EC6
 172+ 9EC6 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ECA 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ECE 04 00
 174+ 9ED0 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ED4 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ED8 08 00
 176+ 9EDA
 177+ 9EDA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EDE 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EE2 02 00
 179+ 9EE4
 180+ 9EE4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EE8 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EEC 06 00
 182+ 9EEE
 183+ 9EEE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EF2 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF6 06 00
 185+ 9EF8
 186+ 9EF8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EFC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F00 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F04 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F08 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F0C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F10 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F14 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F18 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F1C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F20 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F24 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F28
 199+ 9F28              ; ----- ----- ----- ----- -----
 200+ 9F28              ;
 201+ 9F28              ;   27/06/23
 202+ 9F28
 203+ 9F28              Movimiento
 204+ 9F28
 205+ 9F28              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F28
 207+ 9F28              ;    ld hl,(Posicion_actual)
 208+ 9F28
 209+ 9F28 FB               ei
 210+ 9F29
 211+ 9F29 3A 01 89         ld a,(Ctrl_2)
 212+ 9F2C CB 57            bit 2,a
 213+ 9F2E 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F30
 215+ 9F30 2A F3 88         ld hl,(Puntero_mov)
 216+ 9F33 7E               ld a,(hl)
 217+ 9F34
 218+ 9F34              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F34
 220+ 9F34              Inicia_desplazamiento.
 221+ 9F34
 222+ 9F34              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F34
 224+ 9F34 CD 29 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F37
 226+ 9F37              ; Iniciamos (Repetimos_mov).
 227+ 9F37
 228+ 9F37 7E               ld a,(hl)
 229+ 9F38 E6 0F            and $0f
 230+ 9F3A 32 F9 88         ld (Repetimos_desplazamiento),a
 231+ 9F3D 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F40
 233+ 9F40              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F40
 235+ 9F40 23               inc hl
 236+ 9F41 7E               ld a,(hl)
 237+ 9F42 32 FC 88         ld (Cola_de_desplazamiento),a
 238+ 9F45 2B               dec hl
 239+ 9F46
 240+ 9F46 21 01 89         ld hl,Ctrl_2
 241+ 9F49 CB D6            set 2,(hl)
 242+ 9F4B
 243+ 9F4B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F4B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F4B
 246+ 9F4B              Desplazamiento_iniciado
 247+ 9F4B
 248+ 9F4B CD FD 9F         call Aplica_desplazamiento
 249+ 9F4E
 250+ 9F4E 3A 01 89         ld a,(Ctrl_2)
 251+ 9F51 CB 67            bit 4,a
 252+ 9F53 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F54
 254+ 9F54 21 F9 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F57 35               dec (hl)
 256+ 9F58 C0               ret nz
 257+ 9F59
 258+ 9F59              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F59              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F59              ; Analiza (Cola_de_desplazamiento).
 261+ 9F59
 262+ 9F59 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F5C A7               and a
 264+ 9F5D CC 52 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F60 28 30            jr z,Reinicia_el_movimiento
 266+ 9F62
 267+ 9F62 FE FF            cp $ff
 268+ 9F64 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F66
 270+ 9F66 FE FE            cp $fe
 271+ 9F68 CC D6 9F         call z,Fijamos_bucle
 272+ 9F6B 28 25            jr z,Reinicia_el_movimiento
 273+ 9F6D
 274+ 9F6D FE FD            cp $fd
 275+ 9F6F 20 11            jr nz,1F
 276+ 9F71
 277+ 9F71              ; ---
 278+ 9F71              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F71
 280+ 9F71 3A 01 89         ld a,(Ctrl_2)
 281+ 9F74 CB 5F            bit 3,a
 282+ 9F76 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F78
 284+ 9F78              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F78
 286+ 9F78 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F7B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F7D
 289+ 9F7D CD E7 9F         call Inicia_Repetimos_movimiento
 290+ 9F80 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F82              ; ---
 292+ 9F82
 293+ 9F82 FE 01        1 cp 1
 294+ 9F84 CA C0 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F87
 296+ 9F87 3D               dec a
 297+ 9F88 32 FC 88         ld (Cola_de_desplazamiento),a
 298+ 9F8B
 299+ 9F8B 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F8E 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F91              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F91 C9               ret
 303+ 9F92
 304+ 9F92              Reinicia_el_movimiento
 305+ 9F92
 306+ 9F92 F3               di
 307+ 9F93
 308+ 9F93 3A 01 89         ld a,(Ctrl_2)
 309+ 9F96 CB 5F            bit 3,a
 310+ 9F98 28 1B            jr z,2F
 311+ 9F9A
 312+ 9F9A              ; (Cola_de_desplazamiento)="254".
 313+ 9F9A
 314+ 9F9A 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F9D 35               dec (hl)
 316+ 9F9E 20 15            jr nz,2F
 317+ 9FA0
 318+ 9FA0              ; Fin de las repeticiones del último movimiento.
 319+ 9FA0
 320+ 9FA0 21 01 89         ld hl,Ctrl_2
 321+ 9FA3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FA5
 323+ 9FA5 2A F3 88         ld hl,(Puntero_mov)
 324+ 9FA8 23               inc hl
 325+ 9FA9 23               inc hl
 326+ 9FAA 23               inc hl
 327+ 9FAB 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FAE              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FAE 7E               ld a,(hl)
 330+ 9FAF 32 FC 88         ld (Cola_de_desplazamiento),a
 331+ 9FB2
 332+ 9FB2 C3 59 9F         jp Cola
 333+ 9FB5
 334+ 9FB5 CD F2 9F     2 call Inicia_Puntero_mov
 335+ 9FB8
 336+ 9FB8 21 01 89         ld hl,Ctrl_2
 337+ 9FBB CB 96            res 2,(hl)
 338+ 9FBD
 339+ 9FBD C3 28 9F         jp Movimiento
 340+ 9FC0
 341+ 9FC0              Siguiente_desplazamiento
 342+ 9FC0
 343+ 9FC0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FC0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FC0
 346+ 9FC0 21 01 89         ld hl,Ctrl_2
 347+ 9FC3 CB 96            res 2,(hl)
 348+ 9FC5
 349+ 9FC5 2A F3 88         ld hl,(Puntero_mov)
 350+ 9FC8 23               inc hl
 351+ 9FC9 23               inc hl
 352+ 9FCA 22 F3 88         ld (Puntero_mov),hl
 353+ 9FCD
 354+ 9FCD 7E               ld a,(hl)
 355+ 9FCE A7               and a
 356+ 9FCF CC 52 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FD2 CA 92 9F         jp z,Reinicia_el_movimiento
 358+ 9FD5
 359+ 9FD5 C9               ret
 360+ 9FD6              ; Subrutinas -----------------------------------------
 361+ 9FD6              ; ---------- --------- --------- ---------- ----------
 362+ 9FD6              ;
 363+ 9FD6              ;   24/07/23
 364+ 9FD6              ;
 365+ 9FD6              ;   Fijamos_bucle
 366+ 9FD6              ;
 367+ 9FD6              ;
 368+ 9FD6
 369+ 9FD6              Fijamos_bucle
 370+ 9FD6
 371+ 9FD6 3A F7 88         ld a,(Incrementa_puntero)
 372+ 9FD9 3C               inc a
 373+ 9FDA 32 F8 88         ld (Incrementa_puntero_backup),a
 374+ 9FDD
 375+ 9FDD CD 52 A0         call Incrementa_Puntero_indice_mov
 376+ 9FE0 2A F1 88         ld hl,(Puntero_indice_mov)
 377+ 9FE3 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FE6 C9               ret
 379+ 9FE7
 380+ 9FE7              ; ---------- --------- --------- ---------- ----------
 381+ 9FE7              ;
 382+ 9FE7              ;   07/7/23
 383+ 9FE7              ;
 384+ 9FE7              ;   Inicia_Repetimos_movimiento
 385+ 9FE7              ;
 386+ 9FE7              ;
 387+ 9FE7
 388+ 9FE7              Inicia_Repetimos_movimiento
 389+ 9FE7
 390+ 9FE7              ; Iniciamos (Repetimos_movimiento).
 391+ 9FE7
 392+ 9FE7 DD 2A F3 88      ld ix,(Puntero_mov)
 393+ 9FEB DD 7E 02         ld a,(ix+2)
 394+ 9FEE 32 FB 88         ld (Repetimos_movimiento),a
 395+ 9FF1
 396+ 9FF1 C9               ret
 397+ 9FF2
 398+ 9FF2              ; ---------- --------- --------- ---------- ----------
 399+ 9FF2              ;
 400+ 9FF2              ;   26/6/23
 401+ 9FF2              ;
 402+ 9FF2              ;   Inicia_Puntero_mov
 403+ 9FF2              ;
 404+ 9FF2              ;
 405+ 9FF2
 406+ 9FF2 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FF5 5E               ld e,(hl)
 408+ 9FF6 23               inc hl
 409+ 9FF7 56               ld d,(hl)
 410+ 9FF8 EB               ex de,hl
 411+ 9FF9 22 F3 88         ld (Puntero_mov),hl
 412+ 9FFC C9               ret
 413+ 9FFD
 414+ 9FFD              ; ---------- --------- --------- ---------- ----------
 415+ 9FFD              ;
 416+ 9FFD              ;   27/06/23
 417+ 9FFD              ;
 418+ 9FFD              ;   Aplica_movimiento.
 419+ 9FFD
 420+ 9FFD              Aplica_desplazamiento
 421+ 9FFD
 422+ 9FFD              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FFD
 424+ 9FFD 2A F3 88         ld hl, (Puntero_mov)
 425+ A000
 426+ A000 7E               ld a,(hl)
 427+ A001 E6 F0            and $f0
 428+ A003 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ A004
 430+ A004 CB 7E            bit 7,(hl)
 431+ A006 28 03            jr z,1F
 432+ A008 CD 26 9A         call Mov_up
 433+ A00B 2A F3 88     1 ld hl, (Puntero_mov)
 434+ A00E CB 76            bit 6,(hl)
 435+ A010 28 03            jr z,2F
 436+ A012 CD F5 99         call Mov_down
 437+ A015 2A F3 88     2 ld hl, (Puntero_mov)
 438+ A018 CB 6E            bit 5,(hl)
 439+ A01A 28 03            jr z,3F
 440+ A01C CD 87 9B         call Mov_left
 441+ A01F 2A F3 88     3 ld hl, (Puntero_mov)
 442+ A022 CB 66            bit 4,(hl)
 443+ A024 C8               ret z
 444+ A025 CD 69 9A         call Mov_right
 445+ A028 C9               ret
 446+ A029
 447+ A029              ; ---------- --------- --------- ---------- ----------
 448+ A029              ;
 449+ A029              ;   26/06/23
 450+ A029              ;
 451+ A029              ;   Ajusta_velocidad_desplazamiento.
 452+ A029
 453+ A029              Ajusta_velocidad_desplazamiento
 454+ A029
 455+ A029              ; 1er byte de la cadena de movimiento.
 456+ A029              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A029
 458+ A029 CD 47 A0         call Extrae_nibble_alto
 459+ A02C
 460+ A02C 32 DB 88         ld (Vel_up),a
 461+ A02F 79               ld a,c
 462+ A030 E6 0F            and $0f
 463+ A032 32 DC 88         ld (Vel_down),a
 464+ A035
 465+ A035              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A035              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A035
 468+ A035 23               inc hl
 469+ A036 CD 47 A0         call Extrae_nibble_alto
 470+ A039
 471+ A039 32 D9 88         ld (Vel_left),a
 472+ A03C 79               ld a,c
 473+ A03D E6 0F            and $0f
 474+ A03F 32 DA 88         ld (Vel_right),a
 475+ A042
 476+ A042              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A042
 478+ A042 23               inc hl
 479+ A043 22 F3 88         ld (Puntero_mov),hl
 480+ A046 C9               ret
 481+ A047
 482+ A047 06 04        Extrae_nibble_alto ld b,4
 483+ A049 7E               ld a,(hl)
 484+ A04A 4F               ld c,a
 485+ A04B E6 F0            and $f0
 486+ A04D CB 3F        1 srl a
 487+ A04F 10 FC            djnz 1B
 488+ A051 C9               ret
 489+ A052
 490+ A052              ; ---------- --------- --------- ---------- ----------
 491+ A052              ;
 492+ A052              ;   5/7/23
 493+ A052              ;
 494+ A052              ;   Incrementa_Puntero_indice_mov
 495+ A052
 496+ A052              Incrementa_Puntero_indice_mov
 497+ A052
 498+ A052 21 F7 88         ld hl,Incrementa_puntero
 499+ A055 34               inc (hl)
 500+ A056
 501+ A056 2A F1 88         ld hl,(Puntero_indice_mov)
 502+ A059 01 02 00         ld bc,2
 503+ A05C A7               and a
 504+ A05D 09               add hl,bc
 505+ A05E 22 F1 88         ld (Puntero_indice_mov),hl
 506+ A061
 507+ A061 7E               ld a,(hl)
 508+ A062 A7               and a
 509+ A063
 510+ A063              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A063
 512+ A063              ;    jr z,$
 513+ A063
 514+ A063              ;! Reinicia el Patrón de movimiento.
 515+ A063
 516+ A063 CC 68 A0         call z,Inicializa_Puntero_indice_mov
 517+ A066
 518+ A066 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A067
 520+ A067 C9               ret
 521+ A068
 522+ A068
 523+ A068              ; ---------- --------- --------- ---------- ----------
 524+ A068              ;
 525+ A068              ;   24/07/23
 526+ A068              ;
 527+ A068              ;   Inicializa_Puntero_indice_mov
 528+ A068
 529+ A068              Inicializa_Puntero_indice_mov
 530+ A068
 531+ A068              ; Existe etiqueta de bucle principal???
 532+ A068
 533+ A068 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A06B 24               inc h
 535+ A06C 25               dec h
 536+ A06D 28 05            jr z,2F
 537+ A06F
 538+ A06F 22 F1 88         ld (Puntero_indice_mov),hl
 539+ A072 18 14            jr 3F
 540+ A074
 541+ A074              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A074
 543+ A074 3A F7 88     2 ld a,(Incrementa_puntero)
 544+ A077 47               ld b,a
 545+ A078
 546+ A078 2A F1 88         ld hl,(Puntero_indice_mov)
 547+ A07B 2B           1 dec hl
 548+ A07C 2B               dec hl
 549+ A07D 10 FC            djnz 1B
 550+ A07F 22 F1 88         ld (Puntero_indice_mov),hl
 551+ A082
 552+ A082 AF               xor a
 553+ A083 32 F7 88         ld (Incrementa_puntero),a
 554+ A086 18 06            jr 4F
 555+ A088
 556+ A088 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 557+ A08B 32 F7 88         ld (Incrementa_puntero),a
 558+ A08E C9           4 ret
 559+ A08F
 560+ A08F
 561+ A08F
# file closed: Patrones_de_mov.asm
1657  A08F              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A08F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A08F              ;
   3+ A08F              ;	4/9/23
   4+ A08F              ;
   5+ A08F              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A08F
   7+ A08F              ;	ADC HL,SP	LD (addr),SP
   8+ A08F              ;	ADD HL,SP	LD SP,(addr)
   9+ A08F              ;	ADD IX,SP	LD SP,nn
  10+ A08F              ; 	ADD IY,SP	LD SP,HL
  11+ A08F              ;				LD SP,IX
  12+ A08F              ;	DEC SP		LD SP,IY
  13+ A08F
  14+ A08F              ;	EX (SP),HL
  15+ A08F              ;	EX (SP),IX
  16+ A08F              ;	EX (SP),IY
  17+ A08F
  18+ A08F              ;	INC SP
  19+ A08F
  20+ A08F                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 03 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A EE 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 03 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1C 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A EE 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 22 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 14 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 1A 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 14 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 113+ 7FFE              ;
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ac
 118+ 72AC
 119+ 72AC              Gestiona_albumes_de_fotos
 120+ 72AC
 121+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72AC              ;   Vaciamos Album_de_fotos.
 123+ 72AC
 124+ 72AC              ;   Album_de_fotos. Contiene datos ???
 125+ 72AC
 126+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72AF 7E               ld a,(hl)
 128+ 72B0 A7               and a
 129+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72B3
 131+ 72B3 2A 1E 89         ld hl,(End_Snapshot)
 132+ 72B6 01 00 70         ld bc,Album_de_fotos
 133+ 72B9 11 01 70         ld de,Album_de_fotos+1
 134+ 72BC AF               xor a
 135+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72BE
 137+ 72BE CD 4E 73         call Limpia_album
 138+ 72C1
 139+ 72C1 21 00 00         ld hl,0
 140+ 72C4 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 72C7
 142+ 72C7              ; ----- ----- ----- -----
 143+ 72C7
 144+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 145+ 72C7
 146+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 72CA 7E               ld a,(hl)
 148+ 72CB A7               and a
 149+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 72CE              ;                               ; _ información del album2 al album1.
 151+ 72CE
 152+ 72CE              ; ----- ----- ----- -----
 153+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 72CE
 155+ 72CE 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 72D7
 159+ 72D7 CD 4E 73         call Limpia_album
 160+ 72DA
 161+ 72DA              ;   Calculamos (End_Snapshot)
 162+ 72DA
 163+ 72DA A7               and a
 164+ 72DB ED 4A            adc hl,bc
 165+ 72DD 22 1E 89         ld (End_Snapshot),hl
 166+ 72E0
 167+ 72E0              ;   Limpiamos Album_de_fotos_1.
 168+ 72E0
 169+ 72E0 2A 24 89         ld hl,(End_Snapshot_1)
 170+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 171+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 172+ 72E9 AF               xor a
 173+ 72EA 02               ld (bc),a
 174+ 72EB
 175+ 72EB CD 4E 73         call Limpia_album
 176+ 72EE
 177+ 72EE 21 00 00         ld hl,0
 178+ 72F1 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 72F4
 180+ 72F4              ; ----- ----- ----- -----
 181+ 72F4
 182+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 183+ 72F4
 184+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 72F7 7E               ld a,(hl)
 186+ 72F8 A7               and a
 187+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 72FB              ;                               ; _ información del album3 al album2.
 189+ 72FB              ; ----- ----- ----- -----
 190+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 72FB
 192+ 72FB 2A 28 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7304
 196+ 7304 CD 4E 73         call Limpia_album
 197+ 7307
 198+ 7307              ;   Calculamos (End_Snapshot_1):
 199+ 7307
 200+ 7307 A7               and a
 201+ 7308 ED 4A            adc hl,bc
 202+ 730A 22 24 89         ld (End_Snapshot_1),hl
 203+ 730D
 204+ 730D              ;   Limpiamos Album_de_fotos_2.
 205+ 730D
 206+ 730D 2A 28 89         ld hl,(End_Snapshot_2)
 207+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7316 AF               xor a
 210+ 7317 02               ld (bc),a
 211+ 7318
 212+ 7318 CD 4E 73         call Limpia_album
 213+ 731B
 214+ 731B 21 00 00         ld hl,0
 215+ 731E 22 28 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7321
 217+ 7321              ; ----- ----- ----- -----
 218+ 7321
 219+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7321
 221+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7324 7E               ld a,(hl)
 223+ 7325 A7               and a
 224+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7327
 226+ 7327              ; ----- ----- ----- -----
 227+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7327
 229+ 7327 2A 2C 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7330
 233+ 7330 CD 4E 73         call Limpia_album
 234+ 7333
 235+ 7333              ;   Calculamos (End_Snapshot_2):
 236+ 7333
 237+ 7333 A7               and a
 238+ 7334 ED 4A            adc hl,bc
 239+ 7336 22 28 89         ld (End_Snapshot_2),hl
 240+ 7339
 241+ 7339              ;   Limpiamos Album_de_fotos_3.
 242+ 7339
 243+ 7339 2A 2C 89         ld hl,(End_Snapshot_3)
 244+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7342 AF               xor a
 247+ 7343 02               ld (bc),a
 248+ 7344
 249+ 7344 CD 4E 73         call Limpia_album
 250+ 7347
 251+ 7347 21 00 00         ld hl,0
 252+ 734A 22 2C 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 734D C9               ret
 254+ 734E
 255+ 734E              ; ----------------------------------------------------
 256+ 734E              ;
 257+ 734E              ;   10/8/23
 258+ 734E              ;
 259+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 734E              ;
 261+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 734E              ;           BC ..... Dirección de inicio del álbum.
 263+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 734E
 265+ 734E              ;    ld hl,(End_Snapshot)
 266+ 734E              ;    ld bc,Album_de_fotos
 267+ 734E              ;    ld de,Album_de_fotos+1
 268+ 734E
 269+ 734E              ;   MODIFICA: A,HL,BC y DE.
 270+ 734E
 271+ 734E              Limpia_album
 272+ 734E D5               push de                     ; Guardo DESTINO.
 273+ 734F C5               push bc                     ; Guardo ORIGEN.
 274+ 7350 ED 42            sbc hl,bc
 275+ 7352 4D               ld c,l
 276+ 7353 44               ld b,h
 277+ 7354 E1               pop hl
 278+ 7355 C5               push bc
 279+ 7356 ED B0            ldir
 280+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 735A C9               ret                         ; _ a otro).
 283+ 735B              ;
 284+ 735B
 285+ 735B              ; -----------------------------------------------
 286+ 735B
 287+ 735B
 288+ 735B
 289+ 735B
 290+ 735B
# file closed: Guarda_foto_registros.asm
1658  735B
1659  735B              	SAVESNA "Pruebas.sna", START
1660  735B
1661  735B
1662  735B
1663  735B
# file closed: Banco_de_pruebas.asm
