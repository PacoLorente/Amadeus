# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 26 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 8E A0     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 4E 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD 19 91     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD 29 91     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 143  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 144  8BB3
 145  8BB3              ; --------------------------------------------------------------------------------
 146  8BB3              ;
 147  8BB3              ; 12/05/24
 148  8BB3              ;
 149  8BB3              ; Parámetros DRAW.
 150  8BB3              ;
 151  8BB3
 152  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BB3
 154  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BB4              ;															- Patrón de movimiento.
 156  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BB6
 159  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BB7
 162  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BB7              ; Ejemplos.
 165  8BB7
 166  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BB7
 172  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BB8
 176  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BBA
 179  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BBC
 181  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BBC
 183  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 185  8BBE
 186  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BBE
 188  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BBF
 194  8BBF 00           Ctrl_2 db 0
 195  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC0              ;
 203  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC0              ;														BIT 4, ???
 209  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC0
 211  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC1              ;
 217  8BC1              ; 														DESCRIPCIÖN:
 218  8BC1              ;
 219  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC1              ;
 233  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC1
 237  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC1
 239  8BC1 00           Filas db 0												; Filas. [DRAW]
 240  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BC7
 244  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BC7
 246  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BC8
 250  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BC8
 252  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BC8              ;
 254  8BC8              ;	COLORES: 0 ..... NEGRO
 255  8BC8              ;    		 1 ..... AZUL
 256  8BC8              ; 			 2 ..... ROJO
 257  8BC8              ;			 3 ..... MAGENTA
 258  8BC8              ; 			 4 ..... VERDE
 259  8BC8              ; 			 5 ..... CIAN
 260  8BC8              ;			 6 ..... AMARILLO
 261  8BC8              ; 			 7 ..... BLANCO
 262  8BC8
 263  8BC8 00 00        Indice_Sprite_der defw 0
 264  8BCA 00 00        Indice_Sprite_izq defw 0
 265  8BCC 00 00        Puntero_DESPLZ_der defw 0
 266  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD0
 268  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BD3 00           Columnas db 0
 271  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD7
 275  8BD7              ; variables de control general.
 276  8BD7
 277  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BD8
 279  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BD8
 281  8BD8              Perfiles_de_velocidad
 282  8BD8
 283  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BDC
 288  8BDC              ; Contadores de 16 bits.
 289  8BDC
 290  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BE4
 295  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BE4
 297  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BEA              ;
 301  8BEA              ;
 302  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BEB 00           Incrementa_puntero_backup db 0
 306  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF0              ;
 312  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF0              ;
 316  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF0              ;
 321  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF0
 325  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF1
 327  8BF1              ;														DESCRIPCIÓN:
 328  8BF1              ;
 329  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF1
 336  8BF1              ;														BIT 3, Recarga de nueva oleada.
 337  8BF1              ;														BIT 4, Recarga de nueva oleada.
 338  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF1              ;														BIT 6, **** Frame completo.
 340  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF1
 342  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BF3
 347  8BF3              ; Gestión de ENTIDADES y CAJAS.
 348  8BF3
 349  8BF3 00 00        Puntero_store_caja defw 0
 350  8BF5 00 00        Puntero_restore_caja defw 0
 351  8BF7 00 00        Indice_restore_caja defw 0
 352  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8BFC
 356  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C00              ;														; _ puntero (Indice_entidades).
 359  8C00
 360  8C00              ;---------------------------------------------------------------------------------------------------------------
 361  8C00              ;
 362  8C00              ;	11/09/24
 363  8C00              ;
 364  8C00              ;	Álbumes.
 365  8C00
 366  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C02              ;														; _variable para almacenar lo posición del puntero_
 368  8C02              ; 														; _de pila, SP.
 369  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C04
 372  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C04
 374  8C04 00 00        Album_de_pintado defw 0
 375  8C06 00 00        Album_de_borrado defw 0
 376  8C08 00 00        Album_de_pintado_Amadeus defw 0
 377  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 378  8C0C 00 00        Album_de_pintado_disparos defw 0
 379  8C0E 00 00        Album_de_borrado_disparos defw 0
 380  8C10
 381  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C12 00           Num_de_bytes_album_de_disparos db 0
 383  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 384  8C14
 385  8C14 07           Numero_de_disparos_de_entidades db 7
 386  8C15
 387  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 388  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 389  8C17
 390  8C17 00 00        Puntero_rancio_disparos_album defw 0
 391  8C19
 392  8C19 00 00        Techo_Scanlines_album defw 0
 393  8C1B 00 00        Techo_Scanlines_album_2 defw 0
 394  8C1D 00           Switch db 0
 395  8C1E 00 00        Techo defw 0
 396  8C20 00 00        Scanlines_album_SP defw 0
 397  8C22 00 89        India_SP defw Tabla_de_pintado
 398  8C24 03 89        India_2_SP defw Tabla_de_pintado+3
 399  8C26
 400  8C26 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  8C27              ;
 402  8C27              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  8C27              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  8C27              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  8C27              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  8C27              ;																Habilita el borrado/pintado de sprites.
 407  8C27              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  8C27              ;																_ a la baja.
 409  8C27              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  8C27              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 411  8C27              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 412  8C27              ; 																_ el último frame de la explosión de nuestra nave.
 413  8C27              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 414  8C27              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 415  8C27
 416  8C27 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 417  8C28              ;
 418  8C28              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 419  8C28              ;
 420  8C28              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 421  8C28              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 422  8C28              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 423  8C28              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 424  8C28              ;
 425  8C28              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 426  8C28              ;															_ masticados ya generados.
 427  8C28              ;
 428  8C28              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 429  8C28              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 430  8C28              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 431  8C28              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 432  8C28
 433  8C28 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 434  8C29              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 435  8C29              ;                                                           BIT 2, "1" DEBUG !! Indica que se ha generado un disparo de entidad.
 436  8C29
 437  8C29
 438  8C29
 439  8C29
 440  8C29
 441  8C29              ; Gestión de Disparos.
 442  8C29
 443  8C29 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 444  8C2B
 445  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 446  8C2C
 447  8C2C              ;
 448  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 449  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 450  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 451  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C
 458  8C2C
 459  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 460  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 461  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 462  8C2E
 463  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 464  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 465  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 466  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 467  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 468  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 469  8C36
 470  8C36              ;---------------------------------------------------------------------------------------------------------------
 471  8C36
 472  8C36              ; Relojes y temporizaciones.
 473  8C36
 474  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 475  8C37 05           Clock_explosion_Amadeus db 5
 476  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 477  8C39
 478  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 479  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 480  8C3D 00           DB_RND_disparos db 0
 481  8C3E
 482  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 483  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 484  8C41              ;														; Repite la oleada de entidades.
 485  8C41 90           CLOCK_disparo_entidad_MASTER db $90						; Reloj, decreciente.
 486  8C42 90           CLOCK_disparo_entidad db $90
 487  8C43
 488  8C43              ;---------------------------------------------------------------------------------------------------------------
 489  8C43
 490  8C43              ; Gestión de NIVELES.
 491  8C43
 492  8C43 00           Nivel db 0												; Nivel actual del juego.
 493  8C44 00 00        Puntero_indice_NIVELES defw 0
 494  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 495  8C48              ; 														; _ que definen el NIVEL.
 496  8C48
 497  8C48              ; ---------------------------------------------------------------------------------------------------------------
 498  8C48
 499  8C48              ; Temporizaciones Shield.
 500  8C48
 501  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 502  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 503  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 504  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 505  8C50 00           Shield_3 db 0
 506  8C51
 507  8C51 06           Lives db 6
 508  8C52
 509  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 510  8C52              ;
 511  8C52              ;	5/1/24
 512  8C52
 513  8C52              START
 514  8C52
 515  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 516  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 517  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 518  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 519  8C5B F3           	DI
 520  8C5C
 521  8C5C              ; Limpiamos pantalla.
 522  8C5C
 523  8C5C 3E 07        	ld a,%00000111
 524  8C5E CD B6 94     	call Cls
 525  8C61 CD 0E 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 526  8C64
 527  8C64              ; INICIALIZACIÓN.
 528  8C64
 529  8C64 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 530  8C66 CD 5B 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 531  8C69 CD A5 8E     	call Extrae_numero_aleatorio_y_avanza
 532  8C6C
 533  8C6C 6F           	ld l,a
 534  8C6D 26 00        	ld h,0
 535  8C6F 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 536  8C72
 537  8C72              ;	Inicializa 1er Nivel.
 538  8C72
 539  8C72 21 94 8B     	ld hl,Indice_de_niveles
 540  8C75 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 541  8C78 CD 8B 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 542  8C7B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 543  8C7B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 544  8C7B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 545  8C7B
 546  8C7B              ;	Inicia los álbumes de líneas.
 547  8C7B
 548  8C7B CD 5E 90     	call Inicia_albumes_de_lineas
 549  8C7E              ;
 550  8C7E CD 6E 90     	call Inicia_albumes_de_lineas_Amadeus
 551  8C81 CD 7B 90     	call Inicia_albumes_de_disparos
 552  8C84
 553  8C84 CD A4 90     	call Inicia_Puntero_Disparo_Entidades
 554  8C87
 555  8C87 CD D0 92     4 call Inicia_Entidades
 556  8C8A CD 33 93     	call Inicia_Amadeus
 557  8C8D
 558  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 559  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 560  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 561  8C8D
 562  8C8D 11 6D 89     	ld de,Amadeus_BOX
 563  8C90 CD 86 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 564  8C93 CD 76 93     	call Limpiamos_bandeja_DRAW
 565  8C96
 566  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 567  8C96
 568  8C96 06 3C        	ld b,60
 569  8C98 CD 58 9D     2 call Amadeus_a_izquierda
 570  8C9B 10 FB        	djnz 2B
 571  8C9D
 572  8C9D CD 3C 90     	call Genera_datos_de_impresion_Amadeus
 573  8CA0
 574  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 575  8CA0
 576  8CA0 CD 8E 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 577  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 578  8CA3
 579  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 580  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 581  8CA3
 582  8CA3              ;	ld a,(Ctrl_1)
 583  8CA3              ;	bit 3,a
 584  8CA3              ;	jr nz,5F											 ; Loop
 585  8CA3
 586  8CA3              ;	ld de,Amadeus_db
 587  8CA3              ;	call Store_Amadeus
 588  8CA3
 589  8CA3              ; 	INICIA DISPAROS !!!!!
 590  8CA3
 591  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA3
 593  8CA3              ;5 call Inicia_punteros_de_cajas
 594  8CA3              ;	call Restore_entidad
 595  8CA3
 596  8CA3              ;	ld a,(Ctrl_1)
 597  8CA3              ;	bit 3,a
 598  8CA3              ;	jr z,6F
 599  8CA3
 600  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA3
 602  8CA3              ;	ld hl,Ctrl_1
 603  8CA3              ;	res 3,(hl)
 604  8CA3              ;	jr Main
 605  8CA3
 606  8CA3              ; Damos por concluida la construcción del FRAME.
 607  8CA3              ;
 608  8CA3
 609  8CA3 CD 19 91     	call Inicia_Shield
 610  8CA6
 611  8CA6
 612  8CA6 2A 20 8C     6 ld hl,(Scanlines_album_SP)
 613  8CA9 22 19 8C     	ld (Techo_Scanlines_album),hl
 614  8CAC
 615  8CAC 2A 06 8C     	ld hl,(Album_de_borrado)
 616  8CAF 22 20 8C     	ld (Scanlines_album_SP),hl
 617  8CB2
 618  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 619  8CB5 22 22 8C     	ld (India_SP),hl
 620  8CB8
 621  8CB8 21 26 8C     	ld hl,Ctrl_3
 622  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CBD CB D6        	set 2,(hl)
 624  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC1
 626  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC2
 628  8CC2 76           	halt
 629  8CC3
 630  8CC3              ; ------------------------------------
 631  8CC3
 632  8CC3              Main
 633  8CC3              ;
 634  8CC3              ; 22/08/24
 635  8CC3
 636  8CC3              ; Gestión de disparos.
 637  8CC3
 638  8CC3 CD E0 9F     	call Limpia_album_de_borrado_disparos
 639  8CC6 CD 8C 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CC9 CD 1C A0     	call Motor_Disparos
 641  8CCC
 642  8CCC              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CCC              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CCC              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CCC
 646  8CCC CD E1 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CCF
 648  8CCF              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 649  8CCF
 650  8CCF 21 42 8C     	ld hl,CLOCK_disparo_entidad
 651  8CD2 35           	dec (hl)
 652  8CD3 CC CF 8D     	call z,Autoriza_disparo_de_entidades
 653  8CD6
 654  8CD6 2A 3E 8C     	ld hl,(Clock_next_entity)
 655  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 656  8CDD A7           	and a
 657  8CDE ED 42        	sbc hl,bc
 658  8CE0 20 16        	jr nz,1F
 659  8CE2
 660  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 661  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 662  8CE2
 663  8CE2 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 664  8CE5 47           	ld b,a
 665  8CE6 3A FB 8B     	ld a,(Entidades_en_curso)
 666  8CE9 B8           	cp b
 667  8CEA 28 0C        	jr z,1F
 668  8CEC 30 0A        	jr nc,1F
 669  8CEE
 670  8CEE 3C           	inc a
 671  8CEF 32 FB 8B     	ld (Entidades_en_curso),a
 672  8CF2
 673  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 674  8CF2
 675  8CF2 CD A5 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 676  8CF5 CD C1 8E     	call Define_Clock_next_entity
 677  8CF8
 678  8CF8 3A FB 8B     1 ld a,(Entidades_en_curso)
 679  8CFB A7           	and a
 680  8CFC CA 7D 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 681  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 682  8D00
 683  8D00              ; ( Código que ejecutamos con cada entidad: ).
 684  8D00
 685  8D00              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 686  8D00              ;
 687  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 688  8D00
 689  8D00 21 00 89     	ld hl,Tabla_de_pintado
 690  8D03 22 22 8C     	ld (India_SP),hl
 691  8D06
 692  8D06 21 26 8C     	ld hl,Ctrl_3
 693  8D09 CB D6        	set 2,(hl)
 694  8D0B CD 61 8E     	call Change
 695  8D0E
 696  8D0E C5           2 push bc 												; Nº de entidades en curso.
 697  8D0F
 698  8D0F CD E6 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 699  8D12 ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 700  8D16
 701  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 702  8D16
 703  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 704  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 705  8D16
 706  8D16 3A 2B 8C     	ld a,(Impacto2)
 707  8D19 CB 5F        	bit 3,a
 708  8D1B C4 A6 9F     	call nz,Compara_con_coordenadas_de_disparo
 709  8D1E
 710  8D1E 3A B7 8B     	ld a,(Impacto)
 711  8D21 CB 4F        	bit 1,a
 712  8D23 C4 F6 91     	call nz,Genera_explosion
 713  8D26 20 31        	jr nz,Gestiona_siguiente_entidad
 714  8D28
 715  8D28 3A B7 8B     	ld a,(Impacto)
 716  8D2B A7           	and a
 717  8D2C 28 0C        	jr z,3F
 718  8D2E
 719  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 720  8D2E
 721  8D2E              ; 5/7/24
 722  8D2E              ; Nota importante:
 723  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 724  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 725  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 726  8D2E
 727  8D2E 3A 71 89     	ld a,(Impacto_Amadeus)
 728  8D31 A7           	and a
 729  8D32 C4 F6 91     	call nz,Genera_explosion
 730  8D35 20 22        	jr nz,Gestiona_siguiente_entidad
 731  8D37
 732  8D37              ; Falsa colisión !!!
 733  8D37
 734  8D37 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 735  8D3A
 736  8D3A              ; -------------------------------------------
 737  8D3A
 738  8D3A CD 05 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 739  8D3D CD 41 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 740  8D40 CD F5 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 741  8D43 CD F6 94     	call Genera_datos_de_impresion
 742  8D46 CD 99 93     	call Decrementa_Contador_de_mov_masticados
 743  8D49
 744  8D49              ; -------------------------------------------
 745  8D49
 746  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 747  8D49
 748  8D49 2A B8 8B     	ld hl,(Puntero_de_impresion)
 749  8D4C CD CA 94     	call Genera_coordenadas
 750  8D4F
 751  8D4F              ; TODO: Generamos disparo ???
 752  8D4F
 753  8D4F 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 754  8D52 A7           	and a
 755  8D53 C4 F1 8D     	call nz,Entidad_genera_disparo_si_procede
 756  8D56
 757  8D56 CD 5F A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 758  8D59
 759  8D59              Gestiona_siguiente_entidad
 760  8D59
 761  8D59 CD 6B 93      	call Store_Restore_cajas
 762  8D5C C1           	pop bc
 763  8D5D 10 AF        	djnz 2B
 764  8D5F
 765  8D5F              ; Hemos gestionado todas las entidades.
 766  8D5F              ; ----- ----- -----
 767  8D5F
 768  8D5F CD 19 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 769  8D62 CD 30 8F     	call Ordena_tabla_de_impresion
 770  8D65 CD 8E 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 771  8D68
 772  8D68              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 773  8D68              ; Hemos gestionado todas las unidades.
 774  8D68              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 775  8D68
 776  8D68              ;	ld hl,Ctrl_1
 777  8D68              ;	res 2,(hl)
 778  8D68
 779  8D68 CD D6 8E     	call Borra_diferencia
 780  8D6B
 781  8D6B 3A 26 8C     	ld a,(Ctrl_3)
 782  8D6E CB 5F        	bit 3,a
 783  8D70 20 0B        	jr nz,Gestion_de_Amadeus
 784  8D72
 785  8D72 EB           	ex de,hl
 786  8D73 71           	ld (hl),c
 787  8D74 2C           	inc l
 788  8D75 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 789  8D76
 790  8D76 AF           	xor a
 791  8D77 32 16 8C     	ld (Permiso_de_disparo_Entidades),a							; Volvemos a deshabilitar el permiso de disparo para las entidades hasta que (CLOCK_disparo_entidad) llegue a "0".
 792  8D7A CD 05 9F     	call Genera_datos_de_impresion_disparos_Entidades
 793  8D7D
 794  8D7D              ;! GESTIONA AMADEUS !!!!!!!!!!
 795  8D7D
 796  8D7D              Gestion_de_Amadeus
 797  8D7D
 798  8D7D 21 26 8C     	ld hl,Ctrl_3
 799  8D80 CB 76        	bit 6,(hl)
 800  8D82 28 13        	jr z,Amadeus_vivo
 801  8D84
 802  8D84              ; Amadeus ha sido destruido.
 803  8D84              ; Decrementa (Temp_new_live).
 804  8D84
 805  8D84 21 38 8C     	ld hl,Temp_new_live
 806  8D87 35           	dec (hl)
 807  8D88 20 26        	jr nz,End_frame
 808  8D8A
 809  8D8A              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 810  8D8A
 811  8D8A 21 51 8C     	ld hl,Lives
 812  8D8D 35           	dec (hl)
 813  8D8E
 814  8D8E              ;! Fin del juego
 815  8D8E
 816  8D8E F3           	di
 817  8D8F 28 FE        	jr z,$
 818  8D91 FB           	ei
 819  8D92
 820  8D92              ; Nueva nave.
 821  8D92
 822  8D92 CD 07 8E     	call Reinicia_Amadeus
 823  8D95 18 19        	jr End_frame
 824  8D97
 825  8D97              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 826  8D97
 827  8D97              Amadeus_vivo
 828  8D97
 829  8D97 3A 71 89     	ld a,(Impacto_Amadeus)
 830  8D9A A7           	and a
 831  8D9B C4 26 92     	call nz, Genera_explosion_Amadeus
 832  8D9E 20 10        	jr nz, End_frame
 833  8DA0
 834  8DA0 CD D3 91     	call Teclado
 835  8DA3
 836  8DA3 21 26 8C     	ld hl,Ctrl_3
 837  8DA6 CB 6E        	bit 5,(hl)
 838  8DA8 28 06        	jr z,End_frame
 839  8DAA
 840  8DAA              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 841  8DAA
 842  8DAA CD 7C 8E     	call Change_Amadeus
 843  8DAD CD 3C 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 844  8DB0
 845  8DB0              End_frame
 846  8DB0
 847  8DB0              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 848  8DB0              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 849  8DB0
 850  8DB0 CD C6 A0     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 851  8DB3 CD F6 9F     	call Calcula_bytes_pintado_disparos
 852  8DB6 CD 03 A0     	call Limpia_album_de_pintado_disparos
 853  8DB9
 854  8DB9              ; ------------ ------------- --------------
 855  8DB9
 856  8DB9 2A 06 8C     	ld hl,(Album_de_borrado)
 857  8DBC 22 20 8C     	ld (Scanlines_album_SP),hl
 858  8DBF
 859  8DBF 21 26 8C     	ld hl,Ctrl_3
 860  8DC2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 861  8DC4 CB 9E        	res 3,(hl)
 862  8DC6 CB A6        	res 4,(hl)
 863  8DC8
 864  8DC8 AF           	xor a
 865  8DC9 D3 FE        	out ($fe),a
 866  8DCB
 867  8DCB 76           	halt
 868  8DCC
 869  8DCC              ; ----------------------------------------
 870  8DCC
 871  8DCC              ;	ld a,(Ctrl_1) 										; Existe Loop?
 872  8DCC              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 873  8DCC CA C3 8C     	jp z,Main
 874  8DCF
 875  8DCF              ;------------------------------------------
 876  8DCF              ;
 877  8DCF              ;	14/09/24
 878  8DCF
 879  8DCF              Autoriza_disparo_de_entidades
 880  8DCF
 881  8DCF 3E 01        	ld a,1
 882  8DD1 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 883  8DD4
 884  8DD4 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 885  8DD7 32 42 8C     	ld (CLOCK_disparo_entidad),a
 886  8DDA
 887  8DDA 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 888  8DDD
 889  8DDD 7E           2 ld a,(hl)
 890  8DDE A7           	and a
 891  8DDF 28 08        	jr z,1F
 892  8DE1
 893  8DE1 32 3D 8C     	ld (DB_RND_disparos),a
 894  8DE4 23           	inc hl
 895  8DE5 22 3B 8C     	ld (RND_SP_Disparos),hl
 896  8DE8
 897  8DE8 C9           	ret
 898  8DE9
 899  8DE9 21 F6 88     1	ld hl,Numeros_aleatorios
 900  8DEC 22 3B 8C     	ld (RND_SP_Disparos),hl
 901  8DEF 18 EC        	jr 2B
 902  8DF1
 903  8DF1              ;------------------------------------------
 904  8DF1              ;
 905  8DF1              ;	14/09/24
 906  8DF1              ;
 907  8DF1              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 908  8DF1
 909  8DF1              Entidad_genera_disparo_si_procede
 910  8DF1
 911  8DF1 3A FB 8B     	ld a,(Entidades_en_curso)
 912  8DF4 A7           	and a
 913  8DF5 C8           	ret z
 914  8DF6
 915  8DF6 3A 3D 8C     	ld a,(DB_RND_disparos)
 916  8DF9 CB 4F        	bit 1,a
 917  8DFB F5           	push af											; Guardamos FLAGS.
 918  8DFC
 919  8DFC 17           	rla
 920  8DFD 17           	rla
 921  8DFE
 922  8DFE 32 3D 8C     	ld (DB_RND_disparos),a
 923  8E01
 924  8E01 F1           	pop af
 925  8E02 C4 44 9F     	call nz,Genera_disparo_de_entidad_maldosa
 926  8E05
 927  8E05 C9           	ret
 928  8E06
 929  8E06
 930  8E06              ; RECARGA DE NUEVA OLEADA.
 931  8E06
 932  8E06              ;	ld a,(Contador_de_frames)
 933  8E06              ;	ld b,a
 934  8E06              ;	ld a,(Activa_recarga_cajas)
 935  8E06              ;	cp b
 936  8E06              ;	jr z,20F
 937  8E06
 938  8E06              ;	ld hl,Ctrl_1
 939  8E06              ;	set 4,(hl)
 940  8E06              ;	jp Main
 941  8E06
 942  8E06              ;20 ld hl,Ctrl_1
 943  8E06              ;	res 4,(hl)
 944  8E06
 945  8E06              ;	ld a,(Contador_de_frames)
 946  8E06
 947  8E06              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 948  8E06              ;! _ IMPREDECIBLE !!!!
 949  8E06
 950  8E06              ;	add 10
 951  8E06              ;	ld (Clock_next_entity),a
 952  8E06
 953  8E06              ;	jp 4B
 954  8E06
 955  8E06 C9           	ret
 956  8E07
 957  8E07              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 958  8E07              ;
 959  8E07              ;	16/11/23
 960  8E07
 961  8E07              ;;Gestiona_Amadeus
 962  8E07
 963  8E07              ;! Activa/desactiva impacto con Amadeus.
 964  8E07
 965  8E07              ;	ld a,(Impacto)
 966  8E07              ;	and a
 967  8E07              ;	jr nz,2F
 968  8E07
 969  8E07              ;;	call Mov_Amadeus
 970  8E07
 971  8E07              ;;2 ld a,(Ctrl_0)
 972  8E07              ;;	bit 4,a
 973  8E07              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 974  8E07
 975  8E07              ;;	call Guarda_foto_entidad_a_pintar
 976  8E07              ;;	call Guarda_datos_de_borrado_Amadeus
 977  8E07
 978  8E07              ;;1 ld hl,Ctrl_0
 979  8E07              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 980  8E07
 981  8E07              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 982  8E07
 983  8E07              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 984  8E07
 985  8E07              ;	call Calcula_numero_de_disparotes
 986  8E07
 987  8E07              ;;	ret
 988  8E07
 989  8E07              ; -----------------------------
 990  8E07              ;
 991  8E07              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 992  8E07              ;
 993  8E07              ;	INPUTS: B a de estar a "0".
 994  8E07
 995  8E07              ;Prepara_Borra_sprites
 996  8E07
 997  8E07              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 998  8E07              ;	ld a,l
 999  8E07              ;	ret z
1000  8E07
1001  8E07              ;	srl a
1002  8E07
1003  8E07              ;2 sub 16
1004  8E07              ;	jr z,1F
1005  8E07              ;	inc b
1006  8E07              ;	jr 2B
1007  8E07
1008  8E07              ;1 inc b
1009  8E07
1010  8E07              ;	exx
1011  8E07              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1012  8E07              ;	exx
1013  8E07
1014  8E07              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1015  8E07              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1016  8E07
1017  8E07              ;	ret
1018  8E07
1019  8E07              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1020  8E07              ;
1021  8E07              ;	24/07/24
1022  8E07
1023  8E07              Reinicia_Amadeus
1024  8E07
1025  8E07              ;	Reinicia posición y estado.
1026  8E07
1027  8E07 21 CF 50     	ld hl,$50cf
1028  8E0A 22 72 89     	ld (p.imp.amadeus),hl
1029  8E0D 21 F0 E0     	ld hl,$e0f0
1030  8E10 22 74 89     	ld (Pamm_Amadeus),hl
1031  8E13 21 3D 00     	ld hl,$003d
1032  8E16 22 76 89     	ld (Comm_Amadeus),hl
1033  8E19
1034  8E19              ;	limpiamos el álbum de borrado.
1035  8E19
1036  8E19 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1037  8E1C
1038  8E1C AF           	xor a
1039  8E1D 77           	ld (hl),a
1040  8E1E
1041  8E1E E5           	push hl
1042  8E1F D1           	pop de
1043  8E20 13           	inc de
1044  8E21
1045  8E21 01 23 00     	ld bc,35
1046  8E24 ED B0        	ldir
1047  8E26
1048  8E26 CD 3C 90     	call Genera_datos_de_impresion_Amadeus
1049  8E29
1050  8E29              ;	Reinicia temporizaciones.
1051  8E29
1052  8E29 CD 19 91     	call Inicia_Shield
1053  8E2C
1054  8E2C 3E 5A        	ld a,90
1055  8E2E 32 4E 8C     	ld (Shield),a
1056  8E31
1057  8E31 3E 64        	ld a,100
1058  8E33 32 38 8C     	ld (Temp_new_live),a
1059  8E36
1060  8E36              ; 	Restauramos el FLAG: Amadeus vivo.
1061  8E36
1062  8E36 21 26 8C     	ld hl,Ctrl_3
1063  8E39 CB B6        	res 6,(hl)
1064  8E3B
1065  8E3B              ;	Fuerza la impresión de la nave en el siguiente frame.
1066  8E3B
1067  8E3B 21 26 8C      	ld hl,Ctrl_3
1068  8E3E CB EE        	set 5,(hl)
1069  8E40
1070  8E40 C9           	ret
1071  8E41
1072  8E41              ; --------------------------------------------------------------------------------------------------------------
1073  8E41              ;
1074  8E41              ;	12/05/24
1075  8E41
1076  8E41 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1077  8E44 CB 27        	sla a
1078  8E46 32 BE 8B     	ld (Velocidad),a
1079  8E49 E6 10        	and $10
1080  8E4B C8           	ret z
1081  8E4C
1082  8E4C              ; Restaura (Velocidad) a razón del nº de vueltas.
1083  8E4C
1084  8E4C 3A B6 8B     	ld a,(Contador_de_vueltas)
1085  8E4F CB 2F        	sra a
1086  8E51 CB 2F        	sra a
1087  8E53 32 BE 8B     	ld (Velocidad),a
1088  8E56
1089  8E56 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1090  8E59 23           	inc hl
1091  8E5A 23           	inc hl
1092  8E5B 23           	inc hl
1093  8E5C 23           	inc hl
1094  8E5D 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1095  8E60
1096  8E60 C9           	ret
1097  8E61
1098  8E61              ; --------------------------------------------------------------------------------------------------------------
1099  8E61              ;
1100  8E61              ;	25/08/24
1101  8E61
1102  8E61              Change
1103  8E61
1104  8E61 3A 1D 8C     	ld a,(Switch)
1105  8E64 EE 01        	xor 1
1106  8E66 32 1D 8C     	ld (Switch),a
1107  8E69 2A 04 8C     	ld hl,(Album_de_pintado)
1108  8E6C ED 5B 06 8C  	ld de,(Album_de_borrado)
1109  8E70 EB           	ex de,hl
1110  8E71 22 04 8C     	ld (Album_de_pintado),hl
1111  8E74 22 20 8C     	ld (Scanlines_album_SP),hl
1112  8E77 ED 53 06 8C  	ld (Album_de_borrado),de
1113  8E7B C9           	ret
1114  8E7C
1115  8E7C              Change_Amadeus
1116  8E7C
1117  8E7C 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1118  8E7F ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1119  8E83 EB           	ex de,hl
1120  8E84 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1121  8E87 ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1122  8E8B C9           	ret
1123  8E8C
1124  8E8C              Change_Disparos
1125  8E8C
1126  8E8C 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1127  8E8F ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1128  8E93 EB           	ex de,hl
1129  8E94 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1130  8E97 ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1131  8E9B 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1132  8E9E
1133  8E9E 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1134  8EA1 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1135  8EA4
1136  8EA4 C9           	ret
1137  8EA5
1138  8EA5              ; ------------------------------------
1139  8EA5              ;
1140  8EA5              ; 1/05/24
1141  8EA5
1142  8EA5              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1143  8EA5              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1144  8EA5
1145  8EA5              ;	DESTRUYE: HL,DE,A
1146  8EA5              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1147  8EA5
1148  8EA5              ;	Variables implicadas: (RND_SP).
1149  8EA5
1150  8EA5              Extrae_numero_aleatorio_y_avanza
1151  8EA5
1152  8EA5 21 00 89     	ld hl,Tabla_de_pintado
1153  8EA8 EB           	ex de,hl
1154  8EA9 2A 39 8C     	ld hl,(RND_SP)
1155  8EAC EB           	ex de,hl
1156  8EAD A7           	and a
1157  8EAE ED 52        	sbc hl,de
1158  8EB0
1159  8EB0 2A 39 8C     	ld hl,(RND_SP)
1160  8EB3 20 06        	jr nz,1F
1161  8EB5
1162  8EB5              ; Sitúa HL al principio de la tabla de nº aleatorios.
1163  8EB5
1164  8EB5 21 F6 88     	ld hl,Numeros_aleatorios
1165  8EB8 22 39 8C     	ld (RND_SP),HL
1166  8EBB
1167  8EBB              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1168  8EBB
1169  8EBB 7E           1 ld a,(hl)
1170  8EBC 23           	inc hl
1171  8EBD 22 39 8C     	ld (RND_SP),hl
1172  8EC0 C9           	ret
1173  8EC1
1174  8EC1              ; ------------------------------------
1175  8EC1              ;
1176  8EC1              ; 1/05/24
1177  8EC1
1178  8EC1              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1179  8EC1              ; (1 a 4 segundos).
1180  8EC1              ; Actualizamos (Clock_next_entity) con A.
1181  8EC1
1182  8EC1              ;	DESTRUYE: A y B.
1183  8EC1              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1184  8EC1              ;			 Actualiza (Clock_next_entity) con A.
1185  8EC1
1186  8EC1              ;	Variables implicadas: (Clock_next_entity).
1187  8EC1
1188  8EC1              ; Notas:
1189  8EC1
1190  8EC1              ; 	$32 1 seg.
1191  8EC1              ; 	$64 2 seg.
1192  8EC1              ; 	$96 3 seg.
1193  8EC1              ; 	$c8 4 seg.
1194  8EC1              ; 	$fa 5 seg.
1195  8EC1
1196  8EC1              ; $ffff 1310,7 seg, 22 minutos.
1197  8EC1
1198  8EC1              ;	$0100  5 seg. aproximadamente.
1199  8EC1              ;	$0200 10 seg. aproximadamente.
1200  8EC1              ;	$0300 15 seg. aproximadamente.
1201  8EC1              ;	$0400 20 seg. aproximadamente.
1202  8EC1              ;	$0500 25 seg. aproximadamente.
1203  8EC1              ;	$0600 30 seg. aproximadamente.
1204  8EC1
1205  8EC1              Define_Clock_next_entity
1206  8EC1
1207  8EC1 FE 34        	cp $34
1208  8EC3 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1209  8EC5
1210  8EC5              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1211  8EC5
1212  8EC5 4F           3 ld c,a
1213  8EC6 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1214  8EC8 2A 78 5C     	ld hl,(FRAMES)
1215  8ECB A7           	and a
1216  8ECC ED 4A        	adc hl,bc
1217  8ECE 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1218  8ED1 C9           	ret
1219  8ED2
1220  8ED2 3E 34        1 ld a,$34
1221  8ED4 18 EF        	jr 3B
1222  8ED6
1223  8ED6              ; ------------------------------------
1224  8ED6              ;
1225  8ED6              ; 18/03/24
1226  8ED6
1227  8ED6              Borra_diferencia
1228  8ED6
1229  8ED6 ED 4B 20 8C  	ld bc,(Scanlines_album_SP)
1230  8EDA
1231  8EDA 3A 1D 8C     	ld a,(Switch)
1232  8EDD A7           	and a
1233  8EDE 28 08        	jr z,2F
1234  8EE0
1235  8EE0 2A 1B 8C     	ld hl,(Techo_Scanlines_album_2)
1236  8EE3 11 1B 8C     	ld de,Techo_Scanlines_album_2
1237  8EE6 18 06        	jr 3F
1238  8EE8
1239  8EE8 2A 19 8C     2 ld hl,(Techo_Scanlines_album)
1240  8EEB 11 19 8C     	ld de,Techo_Scanlines_album
1241  8EEE
1242  8EEE              ; Diferencia.
1243  8EEE
1244  8EEE ED 42        3 sbc hl,bc
1245  8EF0
1246  8EF0 C8           	ret z
1247  8EF1 D8           	ret c
1248  8EF2
1249  8EF2              ; Nuevo techo, (más bajo que el anterior).
1250  8EF2              ; Fijamos nuevo techo y borramos bytes sobrantes.
1251  8EF2
1252  8EF2 EB           	ex de,hl
1253  8EF3
1254  8EF3 71           	ld (hl),c
1255  8EF4 2C           	inc l
1256  8EF5 70           	ld (hl),b
1257  8EF6
1258  8EF6 AF           	xor a
1259  8EF7 43           	ld b,e
1260  8EF8
1261  8EF8 2A 20 8C     	ld hl,(Scanlines_album_SP)
1262  8EFB
1263  8EFB 77           1 ld (hl),a
1264  8EFC 23           	inc hl
1265  8EFD 10 FC        	djnz 1B
1266  8EFF
1267  8EFF              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1268  8EFF
1269  8EFF 21 26 8C     	ld hl,Ctrl_3
1270  8F02 CB DE        	set 3,(hl)
1271  8F04
1272  8F04 C9           	ret
1273  8F05
1274  8F05              ; --------------------------------------------------------------------------------------------------------------
1275  8F05              ;
1276  8F05              ;	26/3/24
1277  8F05
1278  8F05              Recauda_informacion_de_entidad_en_curso
1279  8F05
1280  8F05              ; Almacena la Coordenada Y de la entidad en curso.
1281  8F05
1282  8F05              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1283  8F05
1284  8F05 3A B5 8B     	ld a,(Coordenada_y)
1285  8F08 2A 22 8C     	ld hl,(India_SP)
1286  8F0B 77           	ld (hl),a
1287  8F0C 2C           	inc l
1288  8F0D
1289  8F0D              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1290  8F0D
1291  8F0D ED 5B 20 8C  	ld de,(Scanlines_album_SP)
1292  8F11
1293  8F11 73           	ld (hl),e
1294  8F12 2C           	inc l
1295  8F13 72           	ld (hl),d
1296  8F14 2C           	inc l
1297  8F15
1298  8F15 22 22 8C     	ld (India_SP),hl
1299  8F18
1300  8F18 C9           	ret
1301  8F19
1302  8F19              ; --------------------------------------------------------------------------------------------------------------
1303  8F19              ;
1304  8F19              ;	27/03/24
1305  8F19              ;
1306  8F19
1307  8F19              Inicializa_India_y_limpia_Tabla_de_impresion
1308  8F19
1309  8F19 2A 22 8C     	ld hl,(India_SP)
1310  8F1C 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1311  8F1F
1312  8F1F 79           	ld a,c
1313  8F20 95           	sub l
1314  8F21 28 06        	jr z,2F
1315  8F23 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1316  8F24              ;														; _ y pasamos a inicializar (India_SP).
1317  8F24 AF           	xor a
1318  8F25
1319  8F25 77           1 ld (hl),a
1320  8F26 2C           	inc l
1321  8F27 10 FC        	djnz 1B												; Limpia Tabla.
1322  8F29
1323  8F29 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1324  8F2C 22 22 8C     	ld (India_SP),hl
1325  8F2F
1326  8F2F C9           	ret
1327  8F30
1328  8F30              ; --------------------------------------------------------------------------------------------------------------
1329  8F30              ;
1330  8F30              ;	31/3/24
1331  8F30
1332  8F30              Ordena_tabla_de_impresion
1333  8F30
1334  8F30              ; 5794 T/states.
1335  8F30              ; 6278 T/states.
1336  8F30              ; 5310 T/states.
1337  8F30
1338  8F30              ; Inicializamos punteros (India_SP) e (India_2_SP).
1339  8F30              ; Inicializamos contador de comparaciones, [C].
1340  8F30              ; Cargamos los registros A y B para efectuar comparación.
1341  8F30
1342  8F30 FD 2E 00     	ld iyl,0
1343  8F33
1344  8F33 3A FB 8B     	ld a,(Entidades_en_curso)
1345  8F36 FE 04        	cp 4 	;	4
1346  8F38 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1347  8F39
1348  8F39 3D           	dec a
1349  8F3A 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1350  8F3B 51           	ld d,c 										; Copia de respaldo.
1351  8F3C
1352  8F3C 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1353  8F3D
1354  8F3D 21 03 89     	ld hl,Tabla_de_pintado+3
1355  8F40 46           	ld b,(hl)
1356  8F41 22 24 8C     	ld (India_2_SP),hl
1357  8F44
1358  8F44 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1359  8F45 DC 6D 8F     	call c, Avanza_India_2_SP
1360  8F48 CC 6D 8F     	call z, Avanza_India_2_SP
1361  8F4B
1362  8F4B FD 2D        	dec iyl
1363  8F4D 28 18        	jr z,2F
1364  8F4F
1365  8F4F
1366  8F4F              ; --------------------------------------------------------------------------------------------------------------
1367  8F4F              ;
1368  8F4F              ;	7/4/24
1369  8F4F
1370  8F4F              Trueque
1371  8F4F
1372  8F4F              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1373  8F4F              ;  			A contiene en nº de fila de (India_SP).
1374  8F4F              ;			HL contiene (India_2_SP).
1375  8F4F
1376  8F4F D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1377  8F50 E5           	push hl										; Preservo (India_2_SP).
1378  8F51
1379  8F51 ED 5B 22 8C  	ld de,(India_SP)
1380  8F55 EB           	ex de,hl
1381  8F56 70           	ld (hl),b
1382  8F57 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1383  8F58
1384  8F58 CD 99 8F     	call Intercambia_1_byte
1385  8F5B CD 99 8F     	call Intercambia_1_byte
1386  8F5E
1387  8F5E
1388  8F5E              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1389  8F5E              ; Recuperamos (India_2_SP) en HL.
1390  8F5E
1391  8F5E 2A 22 8C     	ld hl,(India_SP)
1392  8F61 7E           	ld a,(hl)
1393  8F62
1394  8F62 E1           	pop hl
1395  8F63 D1           	pop de
1396  8F64
1397  8F64              ; --------------------------------------------------------------------------------------------------------------
1398  8F64
1399  8F64 CD 6D 8F     	call Avanza_India_2_SP
1400  8F67
1401  8F67 14           2 inc d
1402  8F68 15           	dec d
1403  8F69 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1404  8F6A 18 D8        	jr 1B
1405  8F6C
1406  8F6C C9           	ret
1407  8F6D
1408  8F6D              ; ----- ----- ----- ----- -----
1409  8F6D
1410  8F6D              Avanza_India_2_SP
1411  8F6D
1412  8F6D 0D           	dec c
1413  8F6E 28 0A        	jr z,Avanza_punteros_indios
1414  8F70
1415  8F70 FD 2C        	inc iyl
1416  8F72
1417  8F72 2C           	inc l
1418  8F73 2C           	inc l
1419  8F74 2C           	inc l
1420  8F75
1421  8F75 46           	ld b,(hl)
1422  8F76 22 24 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1423  8F79
1424  8F79 C9           	ret
1425  8F7A
1426  8F7A              ; ----- ----- ----- ----- -----
1427  8F7A
1428  8F7A              Avanza_punteros_indios
1429  8F7A
1430  8F7A 15           	dec d
1431  8F7B 28 15        	jr z,Prepara_salida
1432  8F7D
1433  8F7D 4A           	ld c,d
1434  8F7E
1435  8F7E 2A 22 8C     	ld hl,(India_SP)
1436  8F81 2C           	inc l
1437  8F82 2C           	inc l
1438  8F83 2C           	inc l
1439  8F84 7E           	ld a,(hl)
1440  8F85 22 22 8C     	ld (India_SP),hl
1441  8F88
1442  8F88 2C           	inc l
1443  8F89 2C           	inc l
1444  8F8A 2C           	inc l
1445  8F8B 46           	ld b,(hl)
1446  8F8C 22 24 8C     	ld (India_2_SP),hl
1447  8F8F
1448  8F8F FD 2C        	inc iyl
1449  8F91
1450  8F91 C9           	ret
1451  8F92
1452  8F92              Prepara_salida
1453  8F92
1454  8F92 21 00 89     	ld hl,Tabla_de_pintado
1455  8F95 22 22 8C     	ld (India_SP),hl
1456  8F98 C9           	ret
1457  8F99
1458  8F99
1459  8F99 2C           Intercambia_1_byte inc l
1460  8F9A 1C           	inc e
1461  8F9B 46           	ld b,(hl)
1462  8F9C 1A           	ld a,(de)
1463  8F9D EB           	ex de,hl
1464  8F9E 70           	ld (hl),b
1465  8F9F 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1466  8FA0 C9           	ret
1467  8FA1
1468  8FA1              ; -----------------------------------------------------------------------------------
1469  8FA1              ;
1470  8FA1              ;	20/01/24
1471  8FA1              ;
1472  8FA1              ;
1473  8FA1
1474  8FA1              Construye_movimientos_masticados_entidad
1475  8FA1
1476  8FA1 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1477  8FA4 E5           	push hl
1478  8FA5 CD E8 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1479  8FA8              ;															; _ el (Contador_de_mov_masticados).
1480  8FA8 CD B1 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1481  8FAB              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1482  8FAB CD DE 99     	call Recompone_posicion_inicio
1483  8FAE
1484  8FAE CD 0E 97     1 call Draw
1485  8FB1 CD CD 8F     	call Guarda_movimiento_masticado
1486  8FB4
1487  8FB4 CD 8B 9D     	call Movimiento
1488  8FB7
1489  8FB7 3A 26 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1490  8FBA CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1491  8FBC 28 F0        	jr z,1B
1492  8FBE
1493  8FBE              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1494  8FBE              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1495  8FBE
1496  8FBE E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1497  8FBF 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1498  8FC2
1499  8FC2              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1500  8FC2
1501  8FC2 CD EF 9E     	call Situa_en_contador_general_de_mov_masticados
1502  8FC5
1503  8FC5              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1504  8FC5              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1505  8FC5
1506  8FC5 ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1507  8FC9
1508  8FC9 71           	ld (hl),c
1509  8FCA 23           	inc hl
1510  8FCB 70           	ld (hl),b
1511  8FCC
1512  8FCC C9           	ret
1513  8FCD
1514  8FCD              ; -----------------------------------------------------------------------------------
1515  8FCD              ;
1516  8FCD              ;	28/12/23
1517  8FCD              ;
1518  8FCD              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1519  8FCD              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1520  8FCD
1521  8FCD              Guarda_movimiento_masticado
1522  8FCD
1523  8FCD ED 73 00 8C  	ld (Stack),sp
1524  8FD1 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1525  8FD5
1526  8FD5 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1527  8FD7 FD E5            push iy 												; Pushea Puntero_objeto.
1528  8FD9
1529  8FD9 ED 7B 00 8C      ld sp,(Stack)
1530  8FDD
1531  8FDD 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1532  8FE0 23           	inc hl
1533  8FE1 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1534  8FE4
1535  8FE4 CD E8 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1536  8FE7              ;															; _ el (Contador_de_mov_masticados).
1537  8FE7 C9               ret
1538  8FE8
1539  8FE8              ; --------------------------------------------------------------------------------------------------------------
1540  8FE8              ;
1541  8FE8              ;	12/1/24
1542  8FE8              ;
1543  8FE8              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1544  8FE8
1545  8FE8              Actualiza_Puntero_de_almacen_de_mov_masticados
1546  8FE8
1547  8FE8 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1548  8FEB 01 04 00     	ld bc,4
1549  8FEE A7           	and a
1550  8FEF ED 4A        	adc hl,bc
1551  8FF1 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1552  8FF4 C9           	ret
1553  8FF5
1554  8FF5              ; --------------------------------------------------------------------------------------------------------------
1555  8FF5              ;
1556  8FF5              ;	24/03/24
1557  8FF5              ;
1558  8FF5              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1559  8FF5              ;
1560  8FF5              ;	IX contiene el puntero de impresión.
1561  8FF5              ;	DE contiene (Puntero_objeto).
1562  8FF5
1563  8FF5
1564  8FF5              Cargamos_registros_con_mov_masticado
1565  8FF5
1566  8FF5 ED 73 00 8C  	ld (Stack),sp
1567  8FF9 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1568  8FFD
1569  8FFD D1           	pop de 															; DE contiene Puntero_objeto
1570  8FFE DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1571  9000
1572  9000 ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1573  9004 ED 7B 00 8C  	ld sp,(Stack)
1574  9008
1575  9008 7B           	ld a,e
1576  9009 82           	add d															; Comprueba si ya no hay datos en el almacén.
1577  900A
1578  900A CC A1 93     	call z,Reinicia_entidad_maliciosa
1579  900D
1580  900D C9           	ret
1581  900E
1582  900E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1583  900E              ;
1584  900E              ;	22/7/24
1585  900E
1586  900E              Cargamos_registros_con_explosion
1587  900E
1588  900E
1589  900E 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1590  9011 CD AB 90     	call Extrae_address
1591  9014
1592  9014 5D           	ld e,l
1593  9015 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1594  9016
1595  9016 DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1596  901A
1597  901A C9           	ret
1598  901B
1599  901B
1600  901B              Cargamos_registros_con_explosion_Amadeus
1601  901B
1602  901B 2A 74 89     	ld hl,(Pamm_Amadeus)
1603  901E CD AB 90     	call Extrae_address
1604  9021
1605  9021 5D           	ld e,l
1606  9022 54           	ld d,h
1607  9023
1608  9023 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1609  9027
1610  9027 C9           	ret
1611  9028
1612  9028              ; --------------------------------------------------------------------------------------------------------------
1613  9028              ;
1614  9028              ;	17/06/24
1615  9028              ;
1616  9028              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1617  9028              ;
1618  9028              ;	IX contiene el puntero de impresión.
1619  9028              ;	DE contiene (Puntero_objeto).
1620  9028
1621  9028
1622  9028              Cargamos_registros_con_mov_masticado_Amadeus
1623  9028
1624  9028 ED 73 00 8C  	ld (Stack),sp
1625  902C ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1626  9030 D1           	pop de 															; DE contiene Puntero_objeto
1627  9031 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1628  9033 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1629  9037 ED 7B 00 8C  	ld sp,(Stack)
1630  903B C9           	ret
1631  903C
1632  903C              ; ---------------------------------------------------------------------------------------------------------------------
1633  903C              ;
1634  903C              ;	18/6/24
1635  903C              ;
1636  903C              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1637  903C
1638  903C              Genera_datos_de_impresion_Amadeus
1639  903C
1640  903C 3A 71 89     	ld a,(Impacto_Amadeus)
1641  903F A7           	and a
1642  9040 20 03        	jr nz,1F
1643  9042
1644  9042              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1645  9042              ; _apuntando a la correspondiente explosión.
1646  9042
1647  9042 CD 28 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1648  9045
1649  9045 DD 7D        1 ld a,ixl
1650  9047 E6 1F        	and $1f
1651  9049 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1652  904C
1653  904C 2A 20 8C     	ld hl,(Scanlines_album_SP)
1654  904F E5           	push hl
1655  9050
1656  9050 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1657  9053 22 20 8C     	ld (Scanlines_album_SP),hl
1658  9056
1659  9056 CD F6 94     	call Genera_datos_de_impresion
1660  9059
1661  9059 E1           	pop hl
1662  905A 22 20 8C     	ld (Scanlines_album_SP),hl
1663  905D
1664  905D C9           	ret
1665  905E
1666  905E              ; ---------------------------------------------------------------------------------------------------------------------
1667  905E              ;
1668  905E              ;	13/03/24
1669  905E              ;
1670  905E              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1671  905E
1672  905E              Inicia_albumes_de_lineas
1673  905E
1674  905E 21 00 80     	ld hl,Scanlines_album
1675  9061 22 04 8C     	ld (Album_de_pintado),hl
1676  9064 22 20 8C     	ld (Scanlines_album_SP),hl
1677  9067
1678  9067 21 1A 81     	ld hl,Scanlines_album_2
1679  906A 22 06 8C     	ld (Album_de_borrado),hl
1680  906D
1681  906D C9           	ret
1682  906E
1683  906E              Inicia_albumes_de_lineas_Amadeus
1684  906E
1685  906E 21 34 82     	ld hl,Amadeus_scanlines_album
1686  9071 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1687  9074 21 58 82     	ld hl,Amadeus_scanlines_album_2
1688  9077 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1689  907A
1690  907A C9           	ret
1691  907B
1692  907B              Inicia_albumes_de_disparos
1693  907B
1694  907B 21 7C 82     	ld hl,Disparos_scanlines_album
1695  907E 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1696  9081 21 B8 82     	ld hl,Disparos_scanlines_album_2
1697  9084 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1698  9087
1699  9087 21 7C 82     	ld hl,Disparos_scanlines_album
1700  908A 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1701  908D
1702  908D C9           	ret
1703  908E
1704  908E              ; ---------------------------------------------------------------------------------------------------------------------
1705  908E              ;
1706  908E              ; 8/1/23
1707  908E              ;
1708  908E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1709  908E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1710  908E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1711  908E
1712  908E              ; Destruye HL y DE !!!!!
1713  908E
1714  908E              Inicia_punteros_de_cajas
1715  908E
1716  908E 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1717  9091 CD AB 90         call Extrae_address
1718  9094 22 F3 8B         ld (Puntero_store_caja),hl
1719  9097 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1720  909A 22 F7 8B     	ld (Indice_restore_caja),hl
1721  909D CD AB 90     	call Extrae_address
1722  90A0 22 F5 8B     	ld (Puntero_restore_caja),hl
1723  90A3 C9               ret
1724  90A4
1725  90A4              ; *************************************************************************************************************************************************************
1726  90A4              ;
1727  90A4              ; 8/1/23
1728  90A4              ;
1729  90A4              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1730  90A4
1731  90A4 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1732  90A7 22 29 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1733  90AA C9           	ret
1734  90AB
1735  90AB              ; *************************************************************************************************************************************************************
1736  90AB              ;
1737  90AB              ; 20/10/22
1738  90AB              ;
1739  90AB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1740  90AB              ;
1741  90AB              ; Destruye el puntero y DE !!!!!
1742  90AB
1743  90AB 5E           Extrae_address ld e,(hl)
1744  90AC 23           	inc hl
1745  90AD 56           	ld d,(hl)
1746  90AE 2B           	dec hl
1747  90AF EB           	ex de,hl
1748  90B0 C9           	ret
1749  90B1
1750  90B1              ; *************************************************************************************************************************************************************
1751  90B1              ;
1752  90B1              ;	20/1/24
1753  90B1              ;
1754  90B1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1755  90B1              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1756  90B1              ;
1757  90B1              ;   Destruye HL y BC !!!!!,
1758  90B1              ;
1759  90B1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1760  90B1              ;					"0" ..... Izquierda.
1761  90B1
1762  90B1              Inicia_Puntero_objeto
1763  90B1
1764  90B1 3A D2 8B     	ld a,(Cuad_objeto)
1765  90B4 E6 01        	and 1
1766  90B6 F5           	push af
1767  90B7 CC D3 90     	call z,Inicia_puntero_objeto_izq
1768  90BA F1           	pop af
1769  90BB C8           	ret z
1770  90BC CD C0 90     	call Inicia_puntero_objeto_der
1771  90BF C9           	ret
1772  90C0
1773  90C0              ; Arrancamos desde la parte izquierda de la pantalla.
1774  90C0              ; Iniciamos (Indice_Sprite_der).
1775  90C0
1776  90C0 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1777  90C3 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1778  90C6 CD AB 90     	call Extrae_address
1779  90C9 22 C5 8B     	ld (Puntero_objeto),hl
1780  90CC
1781  90CC 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1782  90CF 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1783  90D2 C9           	ret
1784  90D3
1785  90D3              ; Arrancamos desde la parte derecha de la pantalla.
1786  90D3              ; Iniciamos (Indice_Sprite_izq).
1787  90D3
1788  90D3 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1789  90D6 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1790  90D9 CD AB 90     	call Extrae_address
1791  90DC 22 C5 8B     	ld (Puntero_objeto),hl
1792  90DF
1793  90DF 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1794  90E2 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1795  90E5 C9           	ret
1796  90E6
1797  90E6              ; **************************************************************************************************
1798  90E6              ;
1799  90E6              ;	06/07/24
1800  90E6              ;
1801  90E6              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1802  90E6
1803  90E6              Restore_entidad
1804  90E6
1805  90E6 2A F3 8B     	ld hl,(Puntero_store_caja)
1806  90E9 7E           	ld a,(hl)
1807  90EA A7           	and a
1808  90EB CC F9 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1809  90EE 28 F6        	jr z,Restore_entidad
1810  90F0
1811  90F0 11 B3 8B     	ld de,Bandeja_DRAW
1812  90F3 01 0C 00     	ld bc,12
1813  90F6 ED B0        	ldir
1814  90F8 C9           	ret
1815  90F9
1816  90F9              ; **************************************************************************************************
1817  90F9              ;
1818  90F9              ;	08/05/23
1819  90F9              ;
1820  90F9              ;	Incrementamos los dos punteros de entidades. (+1).
1821  90F9
1822  90F9              Incrementa_punteros_de_cajas
1823  90F9
1824  90F9 2A F5 8B     	ld hl,(Puntero_restore_caja)
1825  90FC 22 F3 8B     	ld (Puntero_store_caja),hl
1826  90FF 2A F7 8B     	ld hl,(Indice_restore_caja)
1827  9102 23           	inc hl
1828  9103 23           	inc hl
1829  9104 22 F7 8B     	ld (Indice_restore_caja),hl
1830  9107 CD AB 90         call Extrae_address
1831  910A 22 F5 8B         ld (Puntero_restore_caja),hl
1832  910D C9               ret
1833  910E
1834  910E              ; -----------------------------------------------------------
1835  910E
1836  910E              ; Teclado.
1837  910E
1838  910E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1839  9110 DB FE        	in a,($fe)
1840  9112 E6 01        	and $01
1841  9114 28 02        	jr z,1f
1842  9116 18 F6        	jr Pulsa_ENTER
1843  9118 C9           1 ret
1844  9119
1845  9119              ; **************************************************************************************************
1846  9119              ;
1847  9119              ; Temporización.
1848  9119
1849  9119              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1850  9119              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1851  9119              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1852  9119              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1853  9119
1854  9119              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1855  9119              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1856  9119              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1857  9119
1858  9119              ; A partir de $4f61 no hace falta DELAY.
1859  9119
1860  9119              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1861  9119
1862  9119              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1863  9119              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1864  9119              ;	LD A,B
1865  9119              ;	AND A
1866  9119              ;	JR NZ,wait
1867  9119              ;	RET
1868  9119
1869  9119              ; ---------------------------------------------------------------------------------------------------------------
1870  9119              ;
1871  9119              ;	13/07/24
1872  9119              ;
1873  9119
1874  9119              Inicia_Shield
1875  9119
1876  9119 21 48 8C     	ld hl,Datos_Shield
1877  911C 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1878  911F
1879  911F 7E           	ld a,(hl)
1880  9120 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1881  9123
1882  9123 3E 01        	ld a,1
1883  9125 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1884  9128
1885  9128 C9           	ret
1886  9129
1887  9129              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1888  9129              ;
1889  9129              ;	4/6/24
1890  9129              ;
1891  9129              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1892  9129              ;
1893  9129              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1894  9129              ;
1895  9129
1896  9129              Actualiza_pantalla
1897  9129
1898  9129 3E 02        	ld a,2
1899  912B D3 FE        	out ($fe),a
1900  912D
1901  912D 3A 26 8C     	ld a,(Ctrl_3)
1902  9130 CB 57        	bit 2,a
1903  9132 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1904  9134
1905  9134              Borrando_entidades
1906  9134
1907  9134 2A 20 8C     	ld hl,(Scanlines_album_SP)
1908  9137 CD AB 90     	call Extrae_address
1909  913A 24           	inc h
1910  913B 25           	dec h
1911  913C 28 05        	jr z,Pintando_entidades
1912  913E CD EB 95     	call Pinta_Sprites
1913  9141 18 F1        	jr Borrando_entidades
1914  9143
1915  9143              Pintando_entidades
1916  9143
1917  9143 2A 22 8C     	ld hl,(India_SP)
1918  9146 2C           	inc l
1919  9147 CD AB 90     	call Extrae_address
1920  914A 24           	inc h
1921  914B 25           	dec h
1922  914C 28 0E        	jr z,Ejecuta_escudo
1923  914E 1C           	inc e
1924  914F 1C           	inc e
1925  9150 ED 53 22 8C  	ld (India_SP),de
1926  9154 CD AB 90     	call Extrae_address
1927  9157 CD EB 95     	call Pinta_Sprites
1928  915A 18 E7        	jr Pintando_entidades
1929  915C
1930  915C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1931  915C
1932  915C              Ejecuta_escudo
1933  915C
1934  915C 3A 4E 8C     	ld a,(Shield)
1935  915F A7           	and a
1936  9160 20 2F        	jr nz,Aplica_Shield
1937  9162
1938  9162              Borrando_Amadeus
1939  9162
1940  9162 21 26 8C     	ld hl,Ctrl_3
1941  9165 CB 6E        	bit 5,(hl)
1942  9167 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1943  9169
1944  9169 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1945  916C CD AB 90     	call Extrae_address
1946  916F 24           	inc h
1947  9170 25           	dec h
1948  9171 28 03        	jr z,Pintando_Amadeus
1949  9173 CD EB 95     	call Pinta_Sprites
1950  9176
1951  9176              Pintando_Amadeus
1952  9176
1953  9176 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1954  9179 CD AB 90     	call Extrae_address
1955  917C 24           	inc h
1956  917D 25           	dec h
1957  917E 28 03        	jr z,1F
1958  9180 CD EB 95     	call Pinta_Sprites
1959  9183
1960  9183              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1961  9183
1962  9183 21 26 8C     1 ld hl,Ctrl_3
1963  9186 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1964  9188 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1965  918A CB AE        	res 5,(hl)
1966  918C
1967  918C 3E 01        	ld a,1												; Borde azul.
1968  918E D3 FE        	out ($fe),a
1969  9190
1970  9190 C9           	ret
1971  9191
1972  9191              Aplica_Shield
1973  9191
1974  9191              ;	Bit 1 "1" (Shield_3) Sólo borra.
1975  9191              ;		  "0"     ""     Borra/Pinta.
1976  9191              ;	Bit 2    ""  RET.	 No borra, no pinta.
1977  9191
1978  9191 21 50 8C     	ld hl,Shield_3
1979  9194
1980  9194 CB 5E        	bit 3,(hl)
1981  9196 20 DE        	jr nz,Pintando_Amadeus
1982  9198
1983  9198 CB 56        	bit 2,(hl)
1984  919A 20 E7        	jr nz,1B
1985  919C
1986  919C CB 4E        	bit 1,(hl)
1987  919E C4 A5 91     	call nz,Borra_Amadeus_shield
1988  91A1
1989  91A1 28 BF        	jr z,Borrando_Amadeus
1990  91A3 18 DE        	jr 1B
1991  91A5
1992  91A5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1993  91A5
1994  91A5              Borra_Amadeus_shield
1995  91A5
1996  91A5 3A 26 8C     	ld a,(Ctrl_3)
1997  91A8 CB 6F        	bit 5,a
1998  91AA 28 08        	jr z,1F
1999  91AC
2000  91AC 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
2001  91AF CD AB 90     	call Extrae_address
2002  91B2 18 06        	jr 2F
2003  91B4
2004  91B4 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
2005  91B7 CD AB 90     	call Extrae_address
2006  91BA
2007  91BA CD EB 95     2 call Pinta_Sprites
2008  91BD
2009  91BD AF           	xor a
2010  91BE 3C           	inc a											; Asegura NZ en la salida de la rutina.
2011  91BF
2012  91BF C9           	ret
2013  91C0
2014  91C0              Pinta_Amadeus_shield
2015  91C0
2016  91C0 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2017  91C3 CD AB 90     	call Extrae_address
2018  91C6 CD EB 95     	call Pinta_Sprites
2019  91C9
2020  91C9 AF           	xor a
2021  91CA 3C           	inc a											; Asegura NZ en la salida de la rutina.
2022  91CB
2023  91CB C9           	ret
2024  91CC
2025  91CC              Borra_Pinta_Amadeus_shield
2026  91CC
2027  91CC CD A5 91     	call Borra_Amadeus_shield
2028  91CF CD C0 91     	call Pinta_Amadeus_shield
2029  91D2 C9           	ret
2030  91D3
2031  91D3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2032  91D3              ;
2033  91D3              ;	19/6/24
2034  91D3              ;
2035  91D3
2036  91D3              Teclado
2037  91D3
2038  91D3              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2039  91D3
2040  91D3 3E F7        	ld a,$f7												; "5" para disparar.
2041  91D5 DB FE        	in a,($fe)
2042  91D7 E6 10        	and $10
2043  91D9
2044  91D9 CC E9 A0     	call z,Genera_disparo_Amadeus
2045  91DC
2046  91DC 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2047  91DE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2048  91E0 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2049  91E2 CC 58 9D         call z,Amadeus_a_izquierda
2050  91E5
2051  91E5 3E F7        	ld a,$f7
2052  91E7 DB FE        	in a,($fe)
2053  91E9 E6 01        	and $01
2054  91EB C8           	ret z
2055  91EC
2056  91EC 3E F7        	ld a,$f7
2057  91EE DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2058  91F0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2059  91F2 CC 70 9D     	call z,Amadeus_a_derecha
2060  91F5
2061  91F5 C9           	ret
2062  91F6
2063  91F6              ; ------------------------------------------------------------------------------------------------------------------------
2064  91F6              ;
2065  91F6              ;	06/07/24
2066  91F6              ;
2067  91F6
2068  91F6              Genera_explosion
2069  91F6
2070  91F6 21 36 8C     	ld hl,Clock_explosion
2071  91F9 35           	dec (hl)
2072  91FA 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2073  91FC
2074  91FC              Borra_entidad_colisionada
2075  91FC
2076  91FC CD 05 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2077  91FF CD 0E 90     	call Cargamos_registros_con_explosion
2078  9202 CD F6 94     	call Genera_datos_de_impresion
2079  9205
2080  9205 AF           	xor a
2081  9206 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2082  9207
2083  9207 C9           	ret
2084  9208
2085  9208              Siguiente_frame_explosion
2086  9208
2087  9208 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2088  920A
2089  920A              ; Avanza Frame de explosión.
2090  920A
2091  920A 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2092  920D 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2093  9210
2094  9210 79           	ld a,c
2095  9211 95           	sub l
2096  9212 20 0B        	jr nz,1F
2097  9214
2098  9214              ; Fín de la entidad !!!!!!!!!!!!!
2099  9214
2100  9214 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2101  9217 35           	dec (hl)
2102  9218 23           	inc hl
2103  9219 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2104  921A
2105  921A CD 76 93     	call Limpiamos_bandeja_DRAW
2106  921D 18 DD        	jr Borra_entidad_colisionada
2107  921F
2108  921F 23           1 inc hl
2109  9220 23           	inc hl
2110  9221 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2111  9224 18 D6        	jr Borra_entidad_colisionada
2112  9226
2113  9226              ; ----- ----- ----- ----- -----
2114  9226
2115  9226              Genera_explosion_Amadeus
2116  9226
2117  9226 21 37 8C     	ld hl,Clock_explosion_Amadeus
2118  9229 35           	dec (hl)
2119  922A 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2120  922C
2121  922C              Borra_Amadeus_impactado
2122  922C
2123  922C CD 7C 8E     	call Change_Amadeus
2124  922F CD 1B 90     	call Cargamos_registros_con_explosion_Amadeus
2125  9232 CD 3C 90     	call Genera_datos_de_impresion_Amadeus
2126  9235
2127  9235 21 26 8C     	ld hl,Ctrl_3
2128  9238 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2129  923A
2130  923A AF           	xor a
2131  923B 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2132  923C
2133  923C C9           	ret
2134  923D
2135  923D              Siguiente_frame_explosion_Amadeus
2136  923D
2137  923D 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2138  923F
2139  923F              ; Avanza Frame de explosión.
2140  923F
2141  923F 2A 74 89     	ld hl,(Pamm_Amadeus)
2142  9242 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2143  9245
2144  9245 79           	ld a,c
2145  9246 95           	sub l
2146  9247 20 0B        	jr nz,1F
2147  9249
2148  9249              ; Fín de Amadeus !!!!!!!!!!!!!
2149  9249              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2150  9249
2151  9249 AF           	xor a
2152  924A 32 71 89     	ld (Impacto_Amadeus),a
2153  924D 21 26 8C     	ld hl,Ctrl_3
2154  9250 CB F6        	set 6,(hl)
2155  9252
2156  9252 18 D8        	jr Borra_Amadeus_impactado
2157  9254
2158  9254 23           1 inc hl
2159  9255 23           	inc hl
2160  9256 22 74 89     	ld (Pamm_Amadeus),hl
2161  9259 18 D1        	jr Borra_Amadeus_impactado
2162  925B
2163  925B              ; ---------------------------------------------------------------
2164  925B
2165  925B              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 925B              ; ******************************************************************************************************************************************************************************************
   2+ 925B              ;
   3+ 925B              ;   21/04/24
   4+ 925B              ;
   5+ 925B              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 925B              ;   (XOR) bit a bit.
   7+ 925B              ;
   8+ 925B              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 925B
  10+ 925B              Derivando_RND
  11+ 925B
  12+ 925B 21 F6 88         ld hl,Numeros_aleatorios
  13+ 925E
  14+ 925E ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9260 C5               push bc
  16+ 9261              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9261 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9264              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9264
  20+ 9264 A7           6 and a                                 ; Carry a "0".
  21+ 9265 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9267 30 02            jr nc,1F
  23+ 9269
  24+ 9269 CB C1            set 0,c
  25+ 926B
  26+ 926B 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 926C E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 926E 5F               ld e,a
  29+ 926F
  30+ 926F 7A               ld a,d
  31+ 9270 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9272 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9274
  34+ 9274 CB 3F            srl a
  35+ 9276
  36+ 9276 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9277
  38+ 9277 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9278 28 04            jr z,4F
  40+ 927A
  41+ 927A CB FF            set 7,a
  42+ 927C 18 02            jr 5F
  43+ 927E
  44+ 927E CB BF        4 res 7,a
  45+ 9280
  46+ 9280 CB 21        5 sla c
  47+ 9282 10 E0            djnz 6B
  48+ 9284
  49+ 9284 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9285
  51+ 9285 77               ld (hl),a
  52+ 9286 23               inc hl
  53+ 9287 C1               pop bc
  54+ 9288 10 D4            djnz 3B
  55+ 928A
  56+ 928A C9               ret
  57+ 928B
  58+ 928B
  59+ 928B
# file closed: RND_Derivando.asm
2166  928B              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 928B              ;---------------------------------------------------------------------------------------------------------------
   2+ 928B              ;
   3+ 928B              ;   8/3/24
   4+ 928B              ;
   5+ 928B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 928B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 928B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 928B              ;	_ de la 1ª entidad del Nivel.
   9+ 928B              ;
  10+ 928B              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 928B
  12+ 928B              ;	MODIFICA: HL,DE y A.
  13+ 928B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 928B
  15+ 928B              Inicializa_Nivel
  16+ 928B
  17+ 928B 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 928E CD AB 90     	call Extrae_address
  19+ 9291 7E           	ld a,(hl)
  20+ 9292 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9295 23           	inc hl
  22+ 9296 CD A3 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9299 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 929C CD AC 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 929F
  26+ 929F CD BD 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92A2 C9           	ret
  28+ 92A3
  29+ 92A3              ; ----------------------
  30+ 92A3
  31+ 92A3 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A6 01 04 00     	ld bc,4
  33+ 92A9 ED B0        	ldir
  34+ 92AB C9           	ret
  35+ 92AC
  36+ 92AC 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92AD CD 47 94         call Calcula_salto_en_BC
  38+ 92B0 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B3 A7               and a
  40+ 92B4 ED 4A            adc hl,bc
  41+ 92B6 CD AB 90         call Extrae_address
  42+ 92B9 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92BC C9               ret
  44+ 92BD
  45+ 92BD 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92C0 CD 47 94     	call Calcula_salto_en_BC
  47+ 92C3 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C6 A7               and a
  49+ 92C7 ED 4A            adc hl,bc
  50+ 92C9 CD AB 90         call Extrae_address
  51+ 92CC 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92CF C9           	ret
  53+ 92D0
  54+ 92D0              ;---------------------------------------------------------------------------------------------------------------
  55+ 92D0              ;
  56+ 92D0              ;   5/1/24
  57+ 92D0              ;
  58+ 92D0              ;	Destruye A,BC,HL,DE
  59+ 92D0
  60+ 92D0              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92D0              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92D0
  63+ 92D0              Inicia_Entidades
  64+ 92D0
  65+ 92D0              ; Preparamos los punteros de las cajas de entidades:
  66+ 92D0
  67+ 92D0 CD 8E 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D3              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D3 CD 8F 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D6
  71+ 92D6 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92D9
  73+ 92D9 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92DC
  75+ 92DC CD F5 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92DF
  77+ 92DF 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92E2
  79+ 92E2              ; En este punto:
  80+ 92E2              ;
  81+ 92E2              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92E2              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92E2
  84+ 92E2 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E3
  86+ 92E3 7E           	ld a,(hl)
  87+ 92E4 CD 61 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92E7
  89+ 92E7 CD 59 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92EA
  91+ 92EA              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92EA
  93+ 92EA CD 17 94     	call Busca_mov_masticados_segun_tipo
  94+ 92ED
  95+ 92ED A7           	and a
  96+ 92EE 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92F0
  98+ 92F0              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92F0
 100+ 92F0              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92F0              ;	_ de este tipo de entidad.
 102+ 92F0
 103+ 92F0 CD EF 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F3 CD FC 9E     	call Transfiere_datos_de_contadores
 105+ 92F6
 106+ 92F6 18 06        	jr 4F
 107+ 92F8
 108+ 92F8 CD A1 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92FB
 110+ 92FB              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92FB              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92FB              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92FB              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92FB              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92FB
 116+ 92FB CD D5 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92FE              ;																; _ Mov_masticados ya generados.
 118+ 92FE
 119+ 92FE CD F5 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9301
 121+ 9301 DD E5        	push ix
 122+ 9303 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9304
 124+ 9304 D5           	push de
 125+ 9305 CD CA 94     	call Genera_coordenadas
 126+ 9308
 127+ 9308 ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 128+ 930C CD 05 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 930F D1           	pop de
 130+ 9310
 131+ 9310 CD F6 94     	call Genera_datos_de_impresion
 132+ 9313              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9313              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9313              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9313              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9313
 137+ 9313 CD 99 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9316
 139+ 9316              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9316
 141+ 9316 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 931A CD 86 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 931D
 144+ 931D CD 76 93     	call Limpiamos_bandeja_DRAW
 145+ 9320 CD F9 90     	call Incrementa_punteros_de_cajas
 146+ 9323
 147+ 9323              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9323              ; _ entidad del Nivel.
 149+ 9323
 150+ 9323 3A 27 8C     	ld a,(Ctrl_4)
 151+ 9326 E6 F0        	and $f0
 152+ 9328 32 27 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 932B
 154+ 932B              ; Siguiente entidad del Nivel.
 155+ 932B
 156+ 932B 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 932E 23           	inc hl 														; _ entidad del Nivel.
 158+ 932F
 159+ 932F C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9330
 161+ 9330 10 A7        	djnz 2B
 162+ 9332
 163+ 9332 C9           	ret
 164+ 9333
 165+ 9333              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9333              ;
 167+ 9333              ;	27/5/24
 168+ 9333              ;
 169+ 9333              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9333              ;
 171+ 9333
 172+ 9333              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9333              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9333
 175+ 9333 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9336 CD 59 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9339
 178+ 9339
 179+ 9339              Construye_movimientos_masticados_Amadeus
 180+ 9339
 181+ 9339 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 933C CD E8 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 933F              ;															; _ el (Contador_de_mov_masticados).
 184+ 933F CD B1 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9342              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9342
 187+ 9342              ; Generamos movimientos masticados de Amadeus.
 188+ 9342
 189+ 9342 06 79        	ld b,121												; $0079, 121d.
 190+ 9344
 191+ 9344 C5           1 push bc
 192+ 9345 CD 0E 97     	call Draw
 193+ 9348 CD CD 8F     	call Guarda_movimiento_masticado
 194+ 934B
 195+ 934B CD 82 9A     	call Mov_right
 196+ 934E CD 82 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9351
 198+ 9351 C1           	pop bc
 199+ 9352 10 F0        	djnz 1B
 200+ 9354
 201+ 9354              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9354
 203+ 9354              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9354              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9354
 206+ 9354 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9357 01 08 00     	ld bc,8
 208+ 935A A7           	and a
 209+ 935B ED 42        	sbc hl,bc
 210+ 935D 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9360
 212+ 9360 C9           	ret
 213+ 9361
 214+ 9361              ; ---------------------------------------------------------------------
 215+ 9361              ;
 216+ 9361              ;	10/02/24
 217+ 9361              ;
 218+ 9361              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9361              ;
 220+ 9361              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9361
 222+ 9361              Definicion_segun_tipo
 223+ 9361
 224+ 9361 CD 47 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9364 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9367 CD 4F 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 936A C9           	ret
 228+ 936B
 229+ 936B              ; ---------------------------------------------------------------------
 230+ 936B              ;
 231+ 936B              ;	6/7/24
 232+ 936B
 233+ 936B
 234+ 936B              Store_Restore_cajas
 235+ 936B
 236+ 936B ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 936F CD 86 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9372 CD F9 90     	call Incrementa_punteros_de_cajas
 239+ 9375 C9           	ret
 240+ 9376
 241+ 9376              ; ---------------------------------------------------------------------
 242+ 9376              ;
 243+ 9376              ;	23/6/24
 244+ 9376              ;
 245+ 9376              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9376              ;
 247+ 9376              ;	MODIFY: HL
 248+ 9376
 249+ 9376              Limpiamos_bandeja_DRAW
 250+ 9376
 251+ 9376 ED 73 00 8C  	ld (Stack),sp
 252+ 937A 31 D8 8B     	ld sp,Vel_left
 253+ 937D
 254+ 937D AF           	xor a
 255+ 937E 67           	ld h,a
 256+ 937F 6F           	ld l,a
 257+ 9380
 258+ 9380 E5           	push hl
 259+ 9381 E5           	push hl
 260+ 9382 E5           	push hl
 261+ 9383 E5           	push hl
 262+ 9384 E5           	push hl
 263+ 9385 E5           	push hl
 264+ 9386 E5           	push hl
 265+ 9387 E5           	push hl
 266+ 9388 E5           	push hl
 267+ 9389 E5           	push hl
 268+ 938A E5           	push hl
 269+ 938B E5           	push hl
 270+ 938C E5           	push hl
 271+ 938D E5           	push hl
 272+ 938E E5           	push hl
 273+ 938F E5           	push hl
 274+ 9390 E5           	push hl
 275+ 9391 E5           	push hl
 276+ 9392
 277+ 9392 33           	inc sp
 278+ 9393
 279+ 9393 E5           	push hl
 280+ 9394 ED 7B 00 8C  	ld sp,(Stack)
 281+ 9398
 282+ 9398 C9           	ret
 283+ 9399
 284+ 9399              ; ---------------------------------------------------------------------
 285+ 9399              ;
 286+ 9399              ;	24/03/24
 287+ 9399
 288+ 9399 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 939C 2B           	dec hl
 290+ 939D 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93A0 C9           	ret
 292+ 93A1
 293+ 93A1              ; ---------------------------------------------------------------------
 294+ 93A1              ;
 295+ 93A1              ;	8/5/24
 296+ 93A1
 297+ 93A1              Reinicia_entidad_maliciosa
 298+ 93A1
 299+ 93A1              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93A1
 301+ 93A1 CD EF 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A4 CD FC 9E     	call Transfiere_datos_de_contadores
 303+ 93A7
 304+ 93A7              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93A7
 306+ 93A7 3A B3 8B     	ld a,(Tipo)
 307+ 93AA CD 61 93     	call Definicion_segun_tipo
 308+ 93AD
 309+ 93AD E5           	push hl
 310+ 93AE DD E1        	pop ix
 311+ 93B0
 312+ 93B0 DD 6E 0B     	ld l,(ix+11)
 313+ 93B3 DD 66 0C     	ld h,(ix+12)
 314+ 93B6
 315+ 93B6 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93B9
 317+ 93B9 CD F5 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93BC
 319+ 93BC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93BC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93BC              ; Ejemplos.
 322+ 93BC
 323+ 93BC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93BC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93BC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93BC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93BC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93BC
 329+ 93BC 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93BF CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93C1
 332+ 93C1 7E           	ld a,(hl)
 333+ 93C2 CB 2F        	sra a
 334+ 93C4 CB 2F        	sra a
 335+ 93C6
 336+ 93C6 32 BE 8B     	ld (Velocidad),a
 337+ 93C9
 338+ 93C9 3E 40        	ld a,$40
 339+ 93CB BE           	cp (hl)
 340+ 93CC C0           	ret nz
 341+ 93CD
 342+ 93CD              ; Límitador.
 343+ 93CD
 344+ 93CD              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93CD
 346+ 93CD CB 2E        	sra (hl)
 347+ 93CF 21 BE 8B     	ld hl,Velocidad
 348+ 93D2 CB 2E        	sra (hl)
 349+ 93D4
 350+ 93D4 C9           	ret
 351+ 93D5
 352+ 93D5              ; ---------------------------------------------------------------------
 353+ 93D5              ;
 354+ 93D5              ;	22/01/24
 355+ 93D5
 356+ 93D5 21 27 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93D8 CB 46        	bit 0,(hl)
 358+ 93DA 20 0D        	jr nz,1F
 359+ 93DC CB 4E        	bit 1,(hl)
 360+ 93DE 20 0C        	jr nz,2F
 361+ 93E0 CB 56        	bit 2,(hl)
 362+ 93E2 20 0B        	jr nz,3F
 363+ 93E4 CB 5E        	bit 3,(hl)
 364+ 93E6 20 0A        	jr nz,4F
 365+ 93E8 C9           	ret
 366+ 93E9
 367+ 93E9 CB E6        1 set 4,(hl)
 368+ 93EB C9           	ret
 369+ 93EC CB EE        2 set 5,(hl)
 370+ 93EE C9           	ret
 371+ 93EF CB F6        3 set 6,(hl)
 372+ 93F1 C9           	ret
 373+ 93F2 CB FE        4 set 7,(hl)
 374+ 93F4 C9           	ret
 375+ 93F5
 376+ 93F5              ; ---------------------------------------------------------------------
 377+ 93F5              ;
 378+ 93F5              ;	23/01/24
 379+ 93F5              ;
 380+ 93F5              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F5              ;
 382+ 93F5              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F5              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F5              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F5              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F5
 387+ 93F5              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F5
 389+ 93F5 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F6 3D           	dec a
 391+ 93F7 20 06        	jr nz,1F
 392+ 93F9
 393+ 93F9              ; --- Tipo_1
 394+ 93F9
 395+ 93F9 21 27 8C     	ld hl,Ctrl_4
 396+ 93FC CB C6        	set 0,(hl)
 397+ 93FE C9           	ret
 398+ 93FF
 399+ 93FF 3D           1 dec a
 400+ 9400 20 06        	jr nz,2F
 401+ 9402
 402+ 9402              ; --- Tipo_2
 403+ 9402
 404+ 9402 21 27 8C     	ld hl,Ctrl_4
 405+ 9405 CB CE        	set 1,(hl)
 406+ 9407 C9           	ret
 407+ 9408
 408+ 9408 3D           2 dec a
 409+ 9409 20 06        	jr nz,3F
 410+ 940B
 411+ 940B              ; --- Tipo_3
 412+ 940B
 413+ 940B 21 27 8C     	ld hl,Ctrl_4
 414+ 940E CB D6        	set 2,(hl)
 415+ 9410 C9           	ret
 416+ 9411
 417+ 9411              ; --- Tipo_3
 418+ 9411
 419+ 9411 21 27 8C     3 ld hl,Ctrl_4
 420+ 9414 CB D6        	set 2,(hl)
 421+ 9416 C9           	ret
 422+ 9417
 423+ 9417              ; ---------------------------------------------------------------------
 424+ 9417              ;
 425+ 9417              ;	22/01/24
 426+ 9417
 427+ 9417 21 27 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 941A CB 46        	bit 0,(hl)
 429+ 941C 20 0E        	jr nz,1F
 430+ 941E
 431+ 941E CB 4E        	bit 1,(hl)
 432+ 9420 20 10        	jr nz,2F
 433+ 9422
 434+ 9422 CB 56        	bit 2,(hl)
 435+ 9424 20 12        	jr nz,3F
 436+ 9426
 437+ 9426 CB 5E        	bit 3,(hl)
 438+ 9428 20 14        	jr nz,4F
 439+ 942A 18 19        	jr 6F
 440+ 942C
 441+ 942C              ; Entidad_de_Tipo_1.
 442+ 942C
 443+ 942C CB 66        1 bit 4,(hl)
 444+ 942E 28 15        	jr z,6F
 445+ 9430 18 10        	jr 5F
 446+ 9432
 447+ 9432              ; Entidad_de_Tipo_2.
 448+ 9432
 449+ 9432 CB 6E        2 bit 5,(hl)
 450+ 9434 28 0F        	jr z,6F
 451+ 9436 18 0A        	jr 5F
 452+ 9438
 453+ 9438              ; Entidad_de_Tipo_3.
 454+ 9438
 455+ 9438 CB 76        3 bit 6,(hl)
 456+ 943A 28 09        	jr z,6F
 457+ 943C 18 04        	jr 5F
 458+ 943E
 459+ 943E              ; Entidad_de_Tipo_4.
 460+ 943E
 461+ 943E CB 7E        4 bit 7,(hl)
 462+ 9440 28 03        	jr z,6F
 463+ 9442
 464+ 9442              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9442
 466+ 9442 AF           5 xor a
 467+ 9443 3C           	inc a
 468+ 9444 C9           	ret
 469+ 9445
 470+ 9445              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9445
 472+ 9445 AF           6 xor a
 473+ 9446 C9           	ret
 474+ 9447
 475+ 9447              ;	------------------------------------------------------------------------------------
 476+ 9447              ;
 477+ 9447              ;	12/01/24
 478+ 9447              ;
 479+ 9447              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9447              ;
 481+ 9447              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9447              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9447
 484+ 9447 CB 27        Calcula_salto_en_BC sla a
 485+ 9449 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 944B 4F           	ld c,a
 487+ 944C 06 00        	ld b,0
 488+ 944E C9           	ret
 489+ 944F
 490+ 944F              ; ------------------------------------------------------------------
 491+ 944F              ;
 492+ 944F              ;	19/1/24
 493+ 944F              ;
 494+ 944F              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 944F              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 944F
 497+ 944F A7           Situa_en_datos_de_definicion and a
 498+ 9450 ED 4A        	adc hl,bc
 499+ 9452 CD AB 90     	call Extrae_address
 500+ 9455 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 9458 C9           	ret
 502+ 9459
 503+ 9459              ; ------------------------------------------------------------------
 504+ 9459
 505+ 9459              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9459              ; 	inc de
 507+ 9459              ; 	inc de
 508+ 9459              ; 	ex de,hl
 509+ 9459              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9459              ; 	ret
 511+ 9459
 512+ 9459              ; ----------------------------------------------------------------------------------------------------------
 513+ 9459              ;
 514+ 9459              ;	24/6/24
 515+ 9459              ;
 516+ 9459              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9459              ;	_ de entidad.
 518+ 9459              ;
 519+ 9459              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9459              ;
 521+ 9459              ;
 522+ 9459              ;	MODIFICA: HL,DE y BC
 523+ 9459
 524+ 9459
 525+ 9459              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9459
 527+ 9459 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 945C 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 945D 12           	ld (de),a
 530+ 945E 23           	inc hl
 531+ 945F              ;
 532+ 945F 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9462 01 02 00     	ld bc,2
 534+ 9465 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9467              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9467 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 946A 7E           	ld a,(hl)
 538+ 946B 12           	ld (de),a
 539+ 946C 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 946D
 541+ 946D 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 9470 01 04 00     	ld bc,4
 543+ 9473 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9475
 545+ 9475 11 D0 8B     	ld de,Posicion_inicio
 546+ 9478 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 947B ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 947D
 549+ 947D 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9480 01 02 00     	ld bc,2
 551+ 9483 ED B0        	ldir
 552+ 9485
 553+ 9485 C9           	ret
 554+ 9486
 555+ 9486              ; ----------------------------------------------------------------------------------------------------------
 556+ 9486              ;
 557+ 9486              ;	1/8/24
 558+ 9486              ;
 559+ 9486
 560+ 9486              Parametros_de_bandeja_DRAW_a_caja
 561+ 9486
 562+ 9486 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 9489 01 0C 00     	ld bc,12
 564+ 948C ED B0        	ldir
 565+ 948E C9           	ret
 566+ 948F
 567+ 948F              ;---------------------------------------------------------------------------------------------------------------
 568+ 948F              ;
 569+ 948F              ;	5/1/24
 570+ 948F              ;
 571+ 948F              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 948F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 948F              ;
 574+ 948F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 948F              ;
 576+ 948F              ;	(Numero_parcial_de_entidades)="7".
 577+ 948F              ;
 578+ 948F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 948F              ;
 580+ 948F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 948F              ;
 582+ 948F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 948F              ;	MODIFICA: A y B.
 584+ 948F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 948F
 586+ 948F              Inicializa_Numero_parcial_de_entidades
 587+ 948F
 588+ 948F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 948F
 590+ 948F 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 9492 A7           	and a
 592+ 9493
 593+ 9493              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9493              ;	jr z,$
 595+ 9493              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9493
 597+ 9493 20 03        	jr nz,3F
 598+ 9495
 599+ 9495              ; ---------- ---------- ----------
 600+ 9495
 601+ 9495              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9495              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9495
 604+ 9495 CD 8B 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9498
 606+ 9498              ; ---------- ---------- ----------
 607+ 9498
 608+ 9498 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 949B FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 949D 38 08        	jr c,1F
 611+ 949F
 612+ 949F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 949F              ; Actualizamos variables.
 614+ 949F
 615+ 949F 3E 07        	ld a,7
 616+ 94A1 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94A4 47           	ld b,a
 618+ 94A5 18 04        	jr 2F
 619+ 94A7
 620+ 94A7              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94A7              ; (Numero_de_entidades)="0".
 622+ 94A7
 623+ 94A7 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94AA 47           	ld b,a
 625+ 94AB C9           2 ret
 626+ 94AC
# file closed: Rutinas_de_inicio_y_niveles.asm
2167  94AC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94AC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94AC              ;
   3+ 94AC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94AC              ;
   5+ 94AC              ; *****************************************************************************************************************************************************************************************
   6+ 94AC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94AC
   8+ 94AC 7C           calcula_tercio ld a,h
   9+ 94AD E6 18        	and $18
  10+ 94AF CB 2F        	sra a
  11+ 94B1 CB 2F        	sra a
  12+ 94B3 CB 2F        	sra a
  13+ 94B5 C9           	ret
  14+ 94B6
# file closed: calcula_tercio.asm
2168  94B6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B6              ;
   3+ 94B6              ;
   4+ 94B6              ;	CLS.
   5+ 94B6              ;
   6+ 94B6              ;	Limpia la pantalla y define sus atributos.
   7+ 94B6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B6              ;
   9+ 94B6              ;	COLORES: 0 ..... NEGRO
  10+ 94B6              ;    		 1 ..... AZUL
  11+ 94B6              ; 			 2 ..... ROJO
  12+ 94B6              ;			 3 ..... MAGENTA
  13+ 94B6              ; 			 4 ..... VERDE
  14+ 94B6              ; 			 5 ..... CIAN
  15+ 94B6              ;			 6 ..... AMARILLO
  16+ 94B6              ; 			 7 ..... BLANCO
  17+ 94B6              ;
  18+ 94B6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B6              ;
  20+ 94B6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B6
  22+ 94B6
  23+ 94B6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94B9 11 01 40     	LD DE,$4001
  25+ 94BC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94BF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94C1 ED B0        	LDIR
  28+ 94C3 01 FF 02     	LD BC,767
  29+ 94C6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94C7 ED B0        	LDIR
  31+ 94C9 C9           	ret
  32+ 94CA
# file closed: Cls.asm
2169  94CA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94CA              ; ------------------------------------------------------------------------
   2+ 94CA              ;
   3+ 94CA              ;	30/1/24
   4+ 94CA              ;
   5+ 94CA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94CA              ;	Fila superior "0", Columna izquierda "0".
   7+ 94CA              ;
   8+ 94CA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94CA              ;
  10+ 94CA              ;	Modifica: A,BC y DE.
  11+ 94CA
  12+ 94CA 7D           Genera_coordenadas ld a,l
  13+ 94CB E6 1F        	and $1f
  14+ 94CD 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94D0
  16+ 94D0 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94D1 FE 40        	cp $40
  18+ 94D3 38 1C        	jr c,4F
  19+ 94D5
  20+ 94D5 CD AC 94     	call calcula_tercio
  21+ 94D8 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94D9
  23+ 94D9 1E 00        	ld e,0
  24+ 94DB 7D           	ld a,l
  25+ 94DC E6 E0        	and $e0
  26+ 94DE 28 01        	jr z,1F
  27+ 94E0 04           	inc b
  28+ 94E1
  29+ 94E1 04           1 inc b
  30+ 94E2 05           	dec b
  31+ 94E3 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E5              ;														; _ , salimos.
  33+ 94E5 1C           3 inc e
  34+ 94E6 D6 20        	sub 32
  35+ 94E8 20 FB        	jr nz,3B
  36+ 94EA 10 F5        	djnz 1B
  37+ 94EC
  38+ 94EC 7B           2 ld a,e
  39+ 94ED 32 B5 8B     	ld (Coordenada_y),a
  40+ 94F0 C9           	ret
  41+ 94F1
  42+ 94F1 AF           4 xor a
  43+ 94F2 32 B5 8B     	ld (Coordenada_y),a
  44+ 94F5 C9           	ret
  45+ 94F6
# file closed: Genera_coordenadas.asm
2170  94F6              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F6              ;
   3+ 94F6              ;	11/03/24
   4+ 94F6              ;
   5+ 94F6              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F6              ;   DE contiene Puntero_objeto.
   7+ 94F6              ;   IX contiene el Puntero de impresión.
   8+ 94F6
   9+ 94F6              Genera_datos_de_impresion
  10+ 94F6
  11+ 94F6 ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94FA
  13+ 94FA 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94FD DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94FF
  16+ 94FF 2A 20 8C         ld hl,(Scanlines_album_SP)
  17+ 9502
  18+ 9502 3E 05            ld a,5
  19+ 9504 85               add l
  20+ 9505 6F               ld l,a
  21+ 9506
  22+ 9506 F9               ld sp,hl
  23+ 9507 22 20 8C         ld (Scanlines_album_SP),hl
  24+ 950A
  25+ 950A 21 00 00         ld hl,0
  26+ 950D
  27+ 950D DD E5            push ix
  28+ 950F 3B               dec sp
  29+ 9510 ED 7A            adc hl,sp
  30+ 9512 D5               push de
  31+ 9513
  32+ 9513              ; Recuperamos SP.
  33+ 9513
  34+ 9513 ED 7B 00 8C      ld sp,(Stack)
  35+ 9517
  36+ 9517 E5               push hl
  37+ 9518 F1               pop af
  38+ 9519 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 951A
  40+ 951A              ; Tenemos el encabezado listo.
  41+ 951A              ; Preparamos registros para generar los scanlines.
  42+ 951A
  43+ 951A DD E5            push ix
  44+ 951C E1               pop hl                                          ; 1er scanline en HL.
  45+ 951D
  46+ 951D ED 5B 20 8C      ld de,(Scanlines_album_SP)
  47+ 9521
  48+ 9521              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9521              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9521
  51+ 9521 7C               ld a,h
  52+ 9522 FE 50            cp $50
  53+ 9524 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9526
  55+ 9526 20 05            jr nz,2F
  56+ 9528
  57+ 9528 7D               ld a,l
  58+ 9529 FE E0            cp $e0
  59+ 952B 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 952D
  61+ 952D 7D           2 ld a,l
  62+ 952E FE C0            cp $c0
  63+ 9530 D2 C2 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9533
  65+ 9533              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9533
  67+ 9533 CD C0 99         call NextScan
  68+ 9536 EB               ex de,hl
  69+ 9537
  70+ 9537 73               ld (hl),e
  71+ 9538 23               inc hl
  72+ 9539 72               ld (hl),d
  73+ 953A 23               inc hl
  74+ 953B
  75+ 953B EB               ex de,hl
  76+ 953C
  77+ 953C CD C0 99         call NextScan
  78+ 953F EB               ex de,hl
  79+ 9540
  80+ 9540 73               ld (hl),e
  81+ 9541 23               inc hl
  82+ 9542 72               ld (hl),d
  83+ 9543 23               inc hl
  84+ 9544
  85+ 9544 EB               ex de,hl
  86+ 9545
  87+ 9545 CD C0 99         call NextScan
  88+ 9548 EB               ex de,hl
  89+ 9549
  90+ 9549 73               ld (hl),e
  91+ 954A 23               inc hl
  92+ 954B 72               ld (hl),d
  93+ 954C 23               inc hl
  94+ 954D
  95+ 954D EB               ex de,hl
  96+ 954E
  97+ 954E CD C0 99         call NextScan
  98+ 9551 EB               ex de,hl
  99+ 9552
 100+ 9552 73               ld (hl),e
 101+ 9553 23               inc hl
 102+ 9554 72               ld (hl),d
 103+ 9555 23               inc hl
 104+ 9556
 105+ 9556 EB               ex de,hl
 106+ 9557
 107+ 9557 CD C0 99         call NextScan
 108+ 955A EB               ex de,hl
 109+ 955B
 110+ 955B 73               ld (hl),e
 111+ 955C 23               inc hl
 112+ 955D 72               ld (hl),d
 113+ 955E 23               inc hl
 114+ 955F
 115+ 955F EB               ex de,hl
 116+ 9560
 117+ 9560 CD C0 99         call NextScan
 118+ 9563 EB               ex de,hl
 119+ 9564
 120+ 9564 73               ld (hl),e
 121+ 9565 23               inc hl
 122+ 9566 72               ld (hl),d
 123+ 9567 23               inc hl
 124+ 9568
 125+ 9568 EB               ex de,hl
 126+ 9569
 127+ 9569 CD C0 99         call NextScan
 128+ 956C EB               ex de,hl
 129+ 956D
 130+ 956D 73               ld (hl),e
 131+ 956E 23               inc hl
 132+ 956F 72               ld (hl),d
 133+ 9570 23               inc hl
 134+ 9571
 135+ 9571 EB               ex de,hl
 136+ 9572
 137+ 9572 CD C0 99         call NextScan
 138+ 9575 EB               ex de,hl
 139+ 9576
 140+ 9576 73               ld (hl),e
 141+ 9577 23               inc hl
 142+ 9578 72               ld (hl),d
 143+ 9579 23               inc hl
 144+ 957A
 145+ 957A EB               ex de,hl
 146+ 957B
 147+ 957B CD C0 99         call NextScan
 148+ 957E EB               ex de,hl
 149+ 957F
 150+ 957F 73               ld (hl),e
 151+ 9580 23               inc hl
 152+ 9581 72               ld (hl),d
 153+ 9582 23               inc hl
 154+ 9583
 155+ 9583 EB               ex de,hl
 156+ 9584
 157+ 9584 CD C0 99         call NextScan
 158+ 9587 EB               ex de,hl
 159+ 9588
 160+ 9588 73               ld (hl),e
 161+ 9589 23               inc hl
 162+ 958A 72               ld (hl),d
 163+ 958B 23               inc hl
 164+ 958C
 165+ 958C EB               ex de,hl
 166+ 958D
 167+ 958D CD C0 99         call NextScan
 168+ 9590 EB               ex de,hl
 169+ 9591
 170+ 9591 73               ld (hl),e
 171+ 9592 23               inc hl
 172+ 9593 72               ld (hl),d
 173+ 9594 23               inc hl
 174+ 9595
 175+ 9595 EB               ex de,hl
 176+ 9596
 177+ 9596 CD C0 99         call NextScan
 178+ 9599 EB               ex de,hl
 179+ 959A
 180+ 959A 73               ld (hl),e
 181+ 959B 23               inc hl
 182+ 959C 72               ld (hl),d
 183+ 959D 23               inc hl
 184+ 959E
 185+ 959E EB               ex de,hl
 186+ 959F
 187+ 959F CD C0 99         call NextScan
 188+ 95A2 EB               ex de,hl
 189+ 95A3
 190+ 95A3 73               ld (hl),e
 191+ 95A4 23               inc hl
 192+ 95A5 72               ld (hl),d
 193+ 95A6 23               inc hl
 194+ 95A7
 195+ 95A7 EB               ex de,hl
 196+ 95A8
 197+ 95A8 CD C0 99         call NextScan
 198+ 95AB EB               ex de,hl
 199+ 95AC
 200+ 95AC 73               ld (hl),e
 201+ 95AD 23               inc hl
 202+ 95AE 72               ld (hl),d
 203+ 95AF 23               inc hl
 204+ 95B0
 205+ 95B0 EB               ex de,hl
 206+ 95B1
 207+ 95B1 CD C0 99         call NextScan
 208+ 95B4 EB               ex de,hl
 209+ 95B5
 210+ 95B5 73               ld (hl),e
 211+ 95B6 23               inc hl
 212+ 95B7 72               ld (hl),d
 213+ 95B8 23               inc hl
 214+ 95B9
 215+ 95B9              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 95B9
 217+ 95B9 22 20 8C         ld (Scanlines_album_SP),hl
 218+ 95BC
 219+ 95BC              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 95BC
 221+ 95BC 08               ex af,af
 222+ 95BD
 223+ 95BD F5               push af
 224+ 95BE E1               pop hl
 225+ 95BF
 226+ 95BF 36 10            ld (hl),16
 227+ 95C1
 228+ 95C1 C9               ret
 229+ 95C2
 230+ 95C2              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95C2
 232+ 95C2              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95C2
 234+ 95C2 3E 57            ld a,$57
 235+ 95C4 94               sub h
 236+ 95C5 47               ld b,a
 237+ 95C6
 238+ 95C6 3E DF            ld a,$df
 239+ 95C8 BD               cp l
 240+ 95C9 38 04            jr c,1F
 241+ 95CB
 242+ 95CB 3E 08            ld a,8
 243+ 95CD 80               add b
 244+ 95CE 47               ld b,a
 245+ 95CF
 246+ 95CF              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95CF              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95CF
 249+ 95CF 48           1 ld c,b
 250+ 95D0 0C               inc c
 251+ 95D1
 252+ 95D1 04               inc b
 253+ 95D2 05               dec b
 254+ 95D3 20 02            jr nz,3F
 255+ 95D5
 256+ 95D5 18 0B            jr 6F
 257+ 95D7
 258+ 95D7 CD C0 99     3 call NextScan
 259+ 95DA EB               ex de,hl
 260+ 95DB
 261+ 95DB 73               ld (hl),e
 262+ 95DC 23               inc hl
 263+ 95DD 72               ld (hl),d
 264+ 95DE 23               inc hl
 265+ 95DF
 266+ 95DF EB               ex de,hl
 267+ 95E0 10 F5            djnz 3B
 268+ 95E2
 269+ 95E2 ED 53 20 8C  6 ld (Scanlines_album_SP),de
 270+ 95E6
 271+ 95E6 08           5 ex af,af
 272+ 95E7 F5               push af
 273+ 95E8 E1               pop hl
 274+ 95E9
 275+ 95E9 71               ld (hl),c
 276+ 95EA
 277+ 95EA C9               ret
 278+ 95EB
# file closed: Genera_datos_de_impresion.asm
2171  95EB              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95EB              ; -----------------------------------------------------------------------------
   2+ 95EB              ;
   3+ 95EB              ;   11/03/24
   4+ 95EB              ;
   5+ 95EB
   6+ 95EB              Pinta_Sprites
   7+ 95EB
   8+ 95EB              ;    ld hl,(Scanlines_album_SP)
   9+ 95EB              ;    call Extrae_address
  10+ 95EB
  11+ 95EB              ;    inc h
  12+ 95EB              ;    dec h
  13+ 95EB              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95EB
  15+ 95EB ED 73 00 8C      ld (Stack),sp
  16+ 95EF
  17+ 95EF EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F0              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F0 2C               inc l
  20+ 95F1 2C               inc l
  21+ 95F2
  22+ 95F2 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F3
  24+ 95F3 2C               inc l
  25+ 95F4 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95F5
  27+ 95F5              ;   Seleccionamos rutina de impresión:
  28+ 95F5
  29+ 95F5 3E 10            ld a,16
  30+ 95F7 B8               cp b
  31+ 95F8 C2 F4 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95FB
  33+ 95FB              ;   Rutinas:
  34+ 95FB
  35+ 95FB              Pinta_rapido    ;   1520 t/states.
  36+ 95FB
  37+ 95FB E1               pop hl
  38+ 95FC
  39+ 95FC 1A               ld a,(de)
  40+ 95FD AE               xor (hl)
  41+ 95FE 77               ld (hl),a
  42+ 95FF 2C               inc l
  43+ 9600 1C               inc e
  44+ 9601 1A               ld a,(de)
  45+ 9602 AE               xor (hl)
  46+ 9603 77               ld (hl),a
  47+ 9604 2C               inc l
  48+ 9605 1C               inc e
  49+ 9606 1A               ld a,(de)
  50+ 9607 AE               xor (hl)
  51+ 9608 77               ld (hl),a
  52+ 9609 13               inc de
  53+ 960A
  54+ 960A E1               pop hl
  55+ 960B
  56+ 960B 1A               ld a,(de)
  57+ 960C AE               xor (hl)
  58+ 960D 77               ld (hl),a
  59+ 960E 2C               inc l
  60+ 960F 1C               inc e
  61+ 9610 1A               ld a,(de)
  62+ 9611 AE               xor (hl)
  63+ 9612 77               ld (hl),a
  64+ 9613 2C               inc l
  65+ 9614 1C               inc e
  66+ 9615 1A               ld a,(de)
  67+ 9616 AE               xor (hl)
  68+ 9617 77               ld (hl),a
  69+ 9618 13               inc de
  70+ 9619
  71+ 9619 E1               pop hl
  72+ 961A
  73+ 961A 1A               ld a,(de)
  74+ 961B AE               xor (hl)
  75+ 961C 77               ld (hl),a
  76+ 961D 2C               inc l
  77+ 961E 1C               inc e
  78+ 961F 1A               ld a,(de)
  79+ 9620 AE               xor (hl)
  80+ 9621 77               ld (hl),a
  81+ 9622 2C               inc l
  82+ 9623 1C               inc e
  83+ 9624 1A               ld a,(de)
  84+ 9625 AE               xor (hl)
  85+ 9626 77               ld (hl),a
  86+ 9627 13               inc de
  87+ 9628
  88+ 9628 E1               pop hl
  89+ 9629
  90+ 9629 1A               ld a,(de)
  91+ 962A AE               xor (hl)
  92+ 962B 77               ld (hl),a
  93+ 962C 2C               inc l
  94+ 962D 1C               inc e
  95+ 962E 1A               ld a,(de)
  96+ 962F AE               xor (hl)
  97+ 9630 77               ld (hl),a
  98+ 9631 2C               inc l
  99+ 9632 1C               inc e
 100+ 9633 1A               ld a,(de)
 101+ 9634 AE               xor (hl)
 102+ 9635 77               ld (hl),a
 103+ 9636 13               inc de
 104+ 9637
 105+ 9637 E1               pop hl
 106+ 9638
 107+ 9638 1A               ld a,(de)
 108+ 9639 AE               xor (hl)
 109+ 963A 77               ld (hl),a
 110+ 963B 2C               inc l
 111+ 963C 1C               inc e
 112+ 963D 1A               ld a,(de)
 113+ 963E AE               xor (hl)
 114+ 963F 77               ld (hl),a
 115+ 9640 2C               inc l
 116+ 9641 1C               inc e
 117+ 9642 1A               ld a,(de)
 118+ 9643 AE               xor (hl)
 119+ 9644 77               ld (hl),a
 120+ 9645 13               inc de
 121+ 9646
 122+ 9646 E1               pop hl
 123+ 9647
 124+ 9647 1A               ld a,(de)
 125+ 9648 AE               xor (hl)
 126+ 9649 77               ld (hl),a
 127+ 964A 2C               inc l
 128+ 964B 1C               inc e
 129+ 964C 1A               ld a,(de)
 130+ 964D AE               xor (hl)
 131+ 964E 77               ld (hl),a
 132+ 964F 2C               inc l
 133+ 9650 1C               inc e
 134+ 9651 1A               ld a,(de)
 135+ 9652 AE               xor (hl)
 136+ 9653 77               ld (hl),a
 137+ 9654 13               inc de
 138+ 9655
 139+ 9655 E1               pop hl
 140+ 9656
 141+ 9656 1A               ld a,(de)
 142+ 9657 AE               xor (hl)
 143+ 9658 77               ld (hl),a
 144+ 9659 2C               inc l
 145+ 965A 1C               inc e
 146+ 965B 1A               ld a,(de)
 147+ 965C AE               xor (hl)
 148+ 965D 77               ld (hl),a
 149+ 965E 2C               inc l
 150+ 965F 1C               inc e
 151+ 9660 1A               ld a,(de)
 152+ 9661 AE               xor (hl)
 153+ 9662 77               ld (hl),a
 154+ 9663 13               inc de
 155+ 9664
 156+ 9664 E1               pop hl
 157+ 9665
 158+ 9665 1A               ld a,(de)
 159+ 9666 AE               xor (hl)
 160+ 9667 77               ld (hl),a
 161+ 9668 2C               inc l
 162+ 9669 1C               inc e
 163+ 966A 1A               ld a,(de)
 164+ 966B AE               xor (hl)
 165+ 966C 77               ld (hl),a
 166+ 966D 2C               inc l
 167+ 966E 1C               inc e
 168+ 966F 1A               ld a,(de)
 169+ 9670 AE               xor (hl)
 170+ 9671 77               ld (hl),a
 171+ 9672 13               inc de
 172+ 9673
 173+ 9673 E1               pop hl
 174+ 9674
 175+ 9674 1A               ld a,(de)
 176+ 9675 AE               xor (hl)
 177+ 9676 77               ld (hl),a
 178+ 9677 2C               inc l
 179+ 9678 1C               inc e
 180+ 9679 1A               ld a,(de)
 181+ 967A AE               xor (hl)
 182+ 967B 77               ld (hl),a
 183+ 967C 2C               inc l
 184+ 967D 1C               inc e
 185+ 967E 1A               ld a,(de)
 186+ 967F AE               xor (hl)
 187+ 9680 77               ld (hl),a
 188+ 9681 13               inc de
 189+ 9682
 190+ 9682 E1               pop hl
 191+ 9683
 192+ 9683 1A               ld a,(de)
 193+ 9684 AE               xor (hl)
 194+ 9685 77               ld (hl),a
 195+ 9686 2C               inc l
 196+ 9687 1C               inc e
 197+ 9688 1A               ld a,(de)
 198+ 9689 AE               xor (hl)
 199+ 968A 77               ld (hl),a
 200+ 968B 2C               inc l
 201+ 968C 1C               inc e
 202+ 968D 1A               ld a,(de)
 203+ 968E AE               xor (hl)
 204+ 968F 77               ld (hl),a
 205+ 9690 13               inc de
 206+ 9691
 207+ 9691 E1               pop hl
 208+ 9692
 209+ 9692 1A               ld a,(de)
 210+ 9693 AE               xor (hl)
 211+ 9694 77               ld (hl),a
 212+ 9695 2C               inc l
 213+ 9696 1C               inc e
 214+ 9697 1A               ld a,(de)
 215+ 9698 AE               xor (hl)
 216+ 9699 77               ld (hl),a
 217+ 969A 2C               inc l
 218+ 969B 1C               inc e
 219+ 969C 1A               ld a,(de)
 220+ 969D AE               xor (hl)
 221+ 969E 77               ld (hl),a
 222+ 969F 13               inc de
 223+ 96A0
 224+ 96A0 E1               pop hl
 225+ 96A1
 226+ 96A1 1A               ld a,(de)
 227+ 96A2 AE               xor (hl)
 228+ 96A3 77               ld (hl),a
 229+ 96A4 2C               inc l
 230+ 96A5 1C               inc e
 231+ 96A6 1A               ld a,(de)
 232+ 96A7 AE               xor (hl)
 233+ 96A8 77               ld (hl),a
 234+ 96A9 2C               inc l
 235+ 96AA 1C               inc e
 236+ 96AB 1A               ld a,(de)
 237+ 96AC AE               xor (hl)
 238+ 96AD 77               ld (hl),a
 239+ 96AE 13               inc de
 240+ 96AF
 241+ 96AF E1               pop hl
 242+ 96B0
 243+ 96B0 1A               ld a,(de)
 244+ 96B1 AE               xor (hl)
 245+ 96B2 77               ld (hl),a
 246+ 96B3 2C               inc l
 247+ 96B4 1C               inc e
 248+ 96B5 1A               ld a,(de)
 249+ 96B6 AE               xor (hl)
 250+ 96B7 77               ld (hl),a
 251+ 96B8 2C               inc l
 252+ 96B9 1C               inc e
 253+ 96BA 1A               ld a,(de)
 254+ 96BB AE               xor (hl)
 255+ 96BC 77               ld (hl),a
 256+ 96BD 13               inc de
 257+ 96BE
 258+ 96BE E1               pop hl
 259+ 96BF
 260+ 96BF 1A               ld a,(de)
 261+ 96C0 AE               xor (hl)
 262+ 96C1 77               ld (hl),a
 263+ 96C2 2C               inc l
 264+ 96C3 1C               inc e
 265+ 96C4 1A               ld a,(de)
 266+ 96C5 AE               xor (hl)
 267+ 96C6 77               ld (hl),a
 268+ 96C7 2C               inc l
 269+ 96C8 1C               inc e
 270+ 96C9 1A               ld a,(de)
 271+ 96CA AE               xor (hl)
 272+ 96CB 77               ld (hl),a
 273+ 96CC 13               inc de
 274+ 96CD
 275+ 96CD E1               pop hl
 276+ 96CE
 277+ 96CE 1A               ld a,(de)
 278+ 96CF AE               xor (hl)
 279+ 96D0 77               ld (hl),a
 280+ 96D1 2C               inc l
 281+ 96D2 1C               inc e
 282+ 96D3 1A               ld a,(de)
 283+ 96D4 AE               xor (hl)
 284+ 96D5 77               ld (hl),a
 285+ 96D6 2C               inc l
 286+ 96D7 1C               inc e
 287+ 96D8 1A               ld a,(de)
 288+ 96D9 AE               xor (hl)
 289+ 96DA 77               ld (hl),a
 290+ 96DB 13               inc de
 291+ 96DC
 292+ 96DC E1               pop hl
 293+ 96DD
 294+ 96DD 1A               ld a,(de)
 295+ 96DE AE               xor (hl)
 296+ 96DF 77               ld (hl),a
 297+ 96E0 2C               inc l
 298+ 96E1 1C               inc e
 299+ 96E2 1A               ld a,(de)
 300+ 96E3 AE               xor (hl)
 301+ 96E4 77               ld (hl),a
 302+ 96E5 2C               inc l
 303+ 96E6 1C               inc e
 304+ 96E7 1A               ld a,(de)
 305+ 96E8 AE               xor (hl)
 306+ 96E9 77               ld (hl),a
 307+ 96EA 13               inc de
 308+ 96EB
 309+ 96EB ED 73 20 8C      ld (Scanlines_album_SP),sp
 310+ 96EF ED 7B 00 8C      ld sp,(Stack)
 311+ 96F3 C9               ret
 312+ 96F4
 313+ 96F4              Pinta_lento
 314+ 96F4
 315+ 96F4 E1           1 pop hl
 316+ 96F5
 317+ 96F5 1A               ld a,(de)
 318+ 96F6 AE               xor (hl)
 319+ 96F7 77               ld (hl),a
 320+ 96F8 2C               inc l
 321+ 96F9 1C               inc e
 322+ 96FA 1A               ld a,(de)
 323+ 96FB AE               xor (hl)
 324+ 96FC 77               ld (hl),a
 325+ 96FD 2C               inc l
 326+ 96FE 1C               inc e
 327+ 96FF 1A               ld a,(de)
 328+ 9700 AE               xor (hl)
 329+ 9701 77               ld (hl),a
 330+ 9702 13               inc de
 331+ 9703
 332+ 9703 10 EF            djnz 1B
 333+ 9705
 334+ 9705 ED 73 20 8C      ld (Scanlines_album_SP),sp
 335+ 9709 ED 7B 00 8C      ld sp,(Stack)
 336+ 970D C9               ret
# file closed: Pinta_Sprites.asm
2172  970E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 970E              ; ******************************************************************************************************************************************************************************************
   2+ 970E              ;
   3+ 970E              ; 26/06/23
   4+ 970E              ;
   5+ 970E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 970E
   7+ 970E              Draw
   8+ 970E
   9+ 970E CD B4 99     	call Prepara_draw
  10+ 9711 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9712 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9713 28 05        	jr z,2F
  13+ 9715
  14+ 9715 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9718 18 0C        	jr 1F
  16+ 971A
  17+ 971A 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 971D 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9720 CD AC 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9723              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9723
  22+ 9723 CD 53 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9726
  24+ 9726 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 9729 CB 6F        	bit 5,a
  26+ 972B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 972D
  28+ 972D CD 42 97     	call Comprueba_limite_horizontal
  29+ 9730 CD D2 97     	call Comprueba_limite_vertical
  30+ 9733
  31+ 9733              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9733              ; -----------------------
  33+ 9733              ; -----------------------
  34+ 9733              ; -----------------------
  35+ 9733
  36+ 9733 CD 28 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9736 CD 5F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9739
  39+ 9739 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 973C CB AF        	res 5,a											; _a ser de utilidad.
  41+ 973E 32 C0 8B     	ld (Ctrl_0),a
  42+ 9741
  43+ 9741 C9           	ret
  44+ 9742
  45+ 9742              ; *******************************************************************************************************************************************************************************************
  46+ 9742              ;	21/01/23
  47+ 9742              ;
  48+ 9742              ; 	Comprueba_limite_horizontal.
  49+ 9742              ;
  50+ 9742              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9742              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9742              ;
  53+ 9742              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9742              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9742              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9742              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9742
  58+ 9742
  59+ 9742
  60+ 9742 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9745 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9747 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9749 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 974B 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 974E 18 09            jr 6F
  66+ 9750 CB 5F        1 bit 3,a
  67+ 9752 28 0A            jr z,2F
  68+ 9754 E6 F7            and $f7
  69+ 9756 32 C0 8B         ld (Ctrl_0),a
  70+ 9759 CD AC 98     6 call Inicializacion
  71+ 975C 18 5B            jr 5F
  72+ 975E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 975F
  74+ 975F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 975F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 975F
  77+ 975F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9760 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9763 CD AC 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9766 67           	ld h,a
  81+ 9767 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9768 CD AC 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 976B 67           	ld h,a
  84+ 976C A7           	and a
  85+ 976D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 976F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9770 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9773 FE 02        	cp 2
  89+ 9775 38 1E        	jr c,3F
  90+ 9777 28 1C        	jr z,3F
  91+ 9779 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 977A 28 23            jr z,7F
  93+ 977C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 977E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9780 E1           	pop hl
  96+ 9781
  97+ 9781              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9781              ; _para indicar con E="2" en caso necesario.
  99+ 9781
 100+ 9781 E5               push hl
 101+ 9782 C5               push bc
 102+ 9783 CD AC 94     	call calcula_tercio
 103+ 9786 FE 01        	cp 1
 104+ 9788 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 978A CD BA 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 978D 28 26            jr z,9F
 107+ 978F 38 24            jr c,9F
 108+ 9791 1E 00        11 ld e,0
 109+ 9793 18 22            jr 8F
 110+ 9795 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9796 28 07        	jr z, 7F
 112+ 9798 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 979A 1E 00         	ld e,0
 114+ 979C E1           	pop hl
 115+ 979D 18 04        	jr 4F
 116+ 979F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97A1 18 15            jr 10F
 118+ 97A3
 119+ 97A3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A3              ; _para indicar con E="2" en caso necesario.
 121+ 97A3
 122+ 97A3 E5           4 push hl
 123+ 97A4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97A5 CD AC 94     	call calcula_tercio
 125+ 97A8 FE 01        	cp 1
 126+ 97AA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97AC CD BA 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97AF 28 04            jr z,9F
 129+ 97B1 30 02            jr nc,9F
 130+ 97B3 18 02        	jr 8F
 131+ 97B5 1E 02        9 ld e,2
 132+ 97B7 C1           8 pop bc
 133+ 97B8 E1           10 pop hl
 134+ 97B9 C9           5 ret
 135+ 97BA
 136+ 97BA              ; --------------------
 137+ 97BA              ;
 138+ 97BA              ; 25/08/22
 139+ 97BA
 140+ 97BA CD AC 94     Comprueba_centro call calcula_tercio
 141+ 97BD 67               ld h,a
 142+ 97BE 08           	ex af,af
 143+ 97BF FE 02        	cp 2
 144+ 97C1 38 07        	jr c,1F
 145+ 97C3 28 05        	jr z,1F
 146+ 97C5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97C8 18 03        	jr 2F
 148+ 97CA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97CD 08           2 ex af,af
 150+ 97CE A7               and a
 151+ 97CF ED 42            sbc hl,bc
 152+ 97D1 C9               ret
 153+ 97D2
 154+ 97D2              ; *********************************************************************************************************************************************************************************************
 155+ 97D2              ;
 156+ 97D2              ;   16/8/22
 157+ 97D2              ;
 158+ 97D2              ;	Comprueba_limite_vertical
 159+ 97D2              ;
 160+ 97D2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97D2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97D2              ;
 163+ 97D2
 164+ 97D2 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97D5 7D           	ld a,l
 166+ 97D6 E6 1F        	and $1F
 167+ 97D8 57           	ld d,a
 168+ 97D9 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97DC BA           	cp d 											; Límite - Posición.
 170+ 97DD 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97DE 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97E1 CB 47        	bit 0,a
 173+ 97E3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97E5
 175+ 97E5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97E5
 177+ 97E5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97E8
 180+ 97E8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97E8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97E8
 183+ 97E8 3A B4 8B         ld a,(Coordenada_X)
 184+ 97EB 16 0F            ld d,Centro_izquierda
 185+ 97ED A7               and a
 186+ 97EE 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97EF 28 1E            jr z,3F
 188+ 97F1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F3              ;                                                    ; _salimos sin modificar nada.
 190+ 97F3 18 0E            jr 2F
 191+ 97F5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97F8
 194+ 97F8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97F8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97F8
 197+ 97F8 3A B4 8B         ld a,(Coordenada_X)
 198+ 97FB 16 10            ld d,Centro_derecha
 199+ 97FD A7               and a
 200+ 97FE 92               sub d
 201+ 97FF 28 0E            jr z,3F
 202+ 9801 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9803              ;                                                    ; _salimos sin modificar nada.
 204+ 9803 CB 43        2 bit 0,e
 205+ 9805 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9807 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9808 CD 9C 98         call Modificaccionne
 208+ 980B C1           	pop bc
 209+ 980C CD AC 98         call Inicializacion
 210+ 980F C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9810
 212+ 9810              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9810
 214+ 9810 C5           4 push bc
 215+ 9811 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9814 0A           	ld a,(bc)
 217+ 9815 3D           	dec a
 218+ 9816 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9817 7D           	ld a,l
 220+ 9818 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9819 CB 47        	bit 0,a
 222+ 981B 28 03        	jr z,5F
 223+ 981D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 981E 18 2E        	jr 7F
 225+ 9820
 226+ 9820              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9820
 228+ 9820 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9821 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9822 3A C0 8B     	ld a,(Ctrl_0)
 231+ 9825 CB 4F        	bit 1,a
 232+ 9827 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9829 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 982A
 235+ 982A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 982A
 237+ 982A 1C               inc e
 238+ 982B 1D               dec e
 239+ 982C 20 07            jr nz,12F
 240+ 982E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 982F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9830 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9833 18 44        13 jr 9F
 244+ 9835 CB 43        12 bit 0,e
 245+ 9837 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9839              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9839 C1           	pop bc
 248+ 983A 18 D3        	jr 3B
 249+ 983C 80           14 add b
 250+ 983D 6F               ld l,a
 251+ 983E 22 C3 8B     	ld (Posicion_actual),hl
 252+ 9841 CD 9C 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9844 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9846 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9848 32 C0 8B         ld (Ctrl_0),a
 256+ 984B F1           	pop af
 257+ 984C 18 2B        	jr 9F
 258+ 984E
 259+ 984E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 984E
 261+ 984E F5           7 push af
 262+ 984F 3A C0 8B     	ld a,(Ctrl_0)
 263+ 9852 CB 47        	bit 0,a
 264+ 9854 20 1D        	jr nz,8F
 265+ 9856 F1           	pop af
 266+ 9857
 267+ 9857              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9857
 269+ 9857 1C           	inc e
 270+ 9858 1D               dec e
 271+ 9859 20 07            jr nz,10F
 272+ 985B 90           	sub b
 273+ 985C 6F               ld l,a
 274+ 985D 22 C3 8B     	ld (Posicion_actual),hl
 275+ 9860 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9862              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9862 CB 43        10 bit 0,e
 278+ 9864 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9866              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9866 C1           	pop bc
 281+ 9867 18 A6        	jr 3B
 282+ 9869 90           16 sub b
 283+ 986A 6F               ld l,a
 284+ 986B 22 C3 8B     	ld (Posicion_actual),hl
 285+ 986E CD 9C 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9871 18 06            jr 9F
 287+ 9873 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9875 32 C0 8B         ld (Ctrl_0),a
 289+ 9878 F1           	pop af
 290+ 9879 C1           9 pop bc
 291+ 987A 1E 00        	ld e,0
 292+ 987C CD AC 98         call Inicializacion
 293+ 987F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9880 08           	ex af,af
 295+ 9881 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9882 18 8B            jr 3B
 297+ 9884
 298+ 9884              ; --------------------
 299+ 9884
 300+ 9884 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9886 CD CF 99     1 call PreviousScan
 302+ 9889 10 FB            djnz 1B
 303+ 988B 22 C3 8B     	ld (Posicion_actual),hl
 304+ 988E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 988F C9           	ret
 306+ 9890
 307+ 9890              ; --------------------
 308+ 9890
 309+ 9890 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9892 CD C0 99     1 call NextScan
 311+ 9895 10 FB            djnz 1B
 312+ 9897 22 C3 8B     	ld (Posicion_actual),hl
 313+ 989A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 989B C9           	ret
 315+ 989C
 316+ 989C              ; --------------------
 317+ 989C              ;
 318+ 989C              ;	22/01/23
 319+ 989C              ;
 320+ 989C              ;	E="1". Hemos cambiado de cuadrante.
 321+ 989C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 989C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 989C
 324+ 989C
 325+ 989C              Modificaccionne
 326+ 989C
 327+ 989C 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 989F FE 02        	cp 2
 329+ 98A1 CC 84 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98A4 DC 84 98         call c,Modifica_Pos_actual
 331+ 98A7 C8           	ret z
 332+ 98A8 CD 90 98         call Modifica_Pos_actual2
 333+ 98AB C9               ret
 334+ 98AC
 335+ 98AC              ; *************************************************************************************************************************************************************************************************
 336+ 98AC              ;
 337+ 98AC              ;	13/8/22
 338+ 98AC              ;
 339+ 98AC              ;	Inicializacion
 340+ 98AC              ;
 341+ 98AC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98AC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98AC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98AC              ;
 345+ 98AC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98AC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98AC              ;	_ desaparece/aparece.
 348+ 98AC
 349+ 98AC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98AC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98AC              ;
 352+ 98AC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98AC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98AC              ; 		   [E] ="0"
 355+ 98AC
 356+ 98AC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98AC
 358+ 98AC CD AC 94     Inicializacion call calcula_tercio
 359+ 98AF 28 36        	jr z,primit
 360+ 98B1 E6 02        	and 2
 361+ 98B3 20 07        	jr nz,segmit
 362+ 98B5 7D           	ld a,l
 363+ 98B6 FE 7F        	cp $7f
 364+ 98B8 38 2D        	jr c,primit
 365+ 98BA 28 2B        	jr z,primit
 366+ 98BC CD 22 99     segmit call column
 367+ 98BF 38 13        	jr c,tercuad
 368+ 98C1 3E 04        cuarcuad ld a,4
 369+ 98C3 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98C6 21 20 48     	ld hl,$4820
 371+ 98C9 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98CC 21 D6 8B     	ld hl,Limite_vertical
 373+ 98CF 36 0D        	ld (hl),$0d
 374+ 98D1 08           	ex af,af
 375+ 98D2 18 3C        	jr 1F
 376+ 98D4              tercuad
 377+ 98D4 3E 03        	ld a,3
 378+ 98D6 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98D9 21 20 48     	ld hl,$4820
 380+ 98DC 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98DF 21 D6 8B     	ld hl,Limite_vertical
 382+ 98E2 36 12        	ld (hl),$12
 383+ 98E4 08           	ex af,af
 384+ 98E5 18 29        	jr 1F
 385+ 98E7 CD 22 99     primit call column
 386+ 98EA 38 13        	jr c, primcuad
 387+ 98EC              segcuad
 388+ 98EC 3E 02        	ld a,2
 389+ 98EE 32 D2 8B     	ld (Cuad_objeto),a
 390+ 98F1 21 C0 4F     	ld hl,$4fc0
 391+ 98F4 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 98F7 21 D6 8B     	ld hl,Limite_vertical
 393+ 98FA 36 0D        	ld (hl),$0d
 394+ 98FC 08           	ex af,af
 395+ 98FD 18 11        	jr 1F
 396+ 98FF              primcuad
 397+ 98FF 3E 01        	ld a,1
 398+ 9901 32 D2 8B     	ld (Cuad_objeto),a
 399+ 9904 21 C0 4F     	ld hl,$4fc0
 400+ 9907 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 990A 21 D6 8B     	ld hl,Limite_vertical
 402+ 990D 36 12        	ld (hl),$12
 403+ 990F 08           	ex af,af
 404+ 9910
 405+ 9910 C5           1 push bc
 406+ 9911 E5           	push hl
 407+ 9912 D5           	push de
 408+ 9913
 409+ 9913 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 9916 CD CA 94     	call Genera_coordenadas
 411+ 9919
 412+ 9919 D1           	pop de
 413+ 991A E1           	pop hl
 414+ 991B C1           	pop bc
 415+ 991C
 416+ 991C 21 C0 8B     	ld hl,Ctrl_0
 417+ 991F CB EE        	set 5,(hl)
 418+ 9921 C9           	ret
 419+ 9922
 420+ 9922              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9922
 422+ 9922              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9922              ;
 424+ 9922              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9922
 426+ 9922 7D           column ld a,l
 427+ 9923 E6 1F        	and $1f
 428+ 9925 FE 10         	cp $10
 429+ 9927 C9            	ret
 430+ 9928
 431+ 9928              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9928              ;
 433+ 9928              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9928              ;
 435+ 9928              ; 14/12/22
 436+ 9928              ;
 437+ 9928              ;	Modifica: A y BC.
 438+ 9928
 439+ 9928 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 992B E6 01        	and 1
 441+ 992D 28 17        	jr z,1F
 442+ 992F
 443+ 992F              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 992F
 445+ 992F 3A B4 8B     	ld a,(Coordenada_X)
 446+ 9932 47           	ld b,a
 447+ 9933 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9934 79           	ld a,c
 449+ 9935 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9936 38 08        	jr c,2F
 451+ 9938 47           	ld b,a
 452+ 9939 79           	ld a,c
 453+ 993A 90           	sub b
 454+ 993B 32 D3 8B     	ld (Columnas),a
 455+ 993E 18 1B        	jr 4F
 456+ 9940 79           2 ld a,c
 457+ 9941 32 D3 8B     	ld (Columnas),a
 458+ 9944 18 15        	jr 4F
 459+ 9946
 460+ 9946              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9946
 462+ 9946 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 9949 81           	add c
 464+ 994A 3D           	dec a
 465+ 994B D6 1F        	sub $1f
 466+ 994D 38 08        	jr c,3F
 467+ 994F 47           	ld b,a
 468+ 9950 79           	ld a,c
 469+ 9951 90           	sub b
 470+ 9952 32 D3 8B     	ld (Columnas),a
 471+ 9955 18 04        	jr 4F
 472+ 9957 79           3 ld a,c
 473+ 9958 32 D3 8B     	ld (Columnas),a
 474+ 995B D9           4 exx
 475+ 995C 4F           	ld c,a
 476+ 995D D9           	exx
 477+ 995E C9            ret
 478+ 995F
 479+ 995F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 995F              ;
 481+ 995F              ;   19/7/23
 482+ 995F              ;
 483+ 995F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 995F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 995F              ;
 486+ 995F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 995F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 995F              ;
 489+ 995F              ;	DESTRUYE: HL,B Y A.
 490+ 995F
 491+ 995F 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9962 FE 02        	cp 2
 493+ 9964 38 18        	jr c,1F
 494+ 9966 28 16        	jr z,1F
 495+ 9968 E6 01        	and 1
 496+ 996A 28 0D        	jr z,3F
 497+ 996C
 498+ 996C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 996C
 500+ 996C CD A8 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 996F
 502+ 996F 7D           9 ld a,l
 503+ 9970 E6 1F        	and $1f
 504+ 9972 28 2A        	jr z,7F
 505+ 9974 2B           	dec hl
 506+ 9975 10 F8        	djnz 9B
 507+ 9977 18 25        	jr 7F
 508+ 9979
 509+ 9979              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9979
 511+ 9979 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 997C 18 20        	jr 7F
 513+ 997E
 514+ 997E 28 14        1 jr z,2F
 515+ 9980
 516+ 9980              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9980
 518+ 9980 CD A8 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9983
 520+ 9983 7D           4 ld a,l
 521+ 9984 E6 1F        	and $1f
 522+ 9986 28 03        	jr z,6F
 523+ 9988 2B           	dec hl
 524+ 9989 10 F8        	djnz 4B
 525+ 998B 06 0F        6 ld b,15
 526+ 998D CD CF 99     5 call PreviousScan
 527+ 9990 10 FB        	djnz 5B
 528+ 9992 18 0A        	jr 7F
 529+ 9994
 530+ 9994              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9994
 532+ 9994 CD A8 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9997 06 0F        	ld b,15
 534+ 9999 CD CF 99     8 call PreviousScan
 535+ 999C 10 FB        	djnz 8B
 536+ 999E
 537+ 999E E5           7 push hl
 538+ 999F DD E1        	pop ix
 539+ 99A1
 540+ 99A1 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 99A4 E5           	push hl
 542+ 99A5 FD E1        	pop iy
 543+ 99A7
 544+ 99A7 C9           	ret
 545+ 99A8
 546+ 99A8              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99A8              ;
 548+ 99A8              ;	2/1/23
 549+ 99A8              ;
 550+ 99A8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99A8              ;
 552+ 99A8              ;	Tras esta rutina tenemos:
 553+ 99A8              ;
 554+ 99A8              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99A8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99A8              ;
 557+ 99A8              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99A8
 559+ 99A8 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 99AB 3A D3 8B     	ld a,(Columnas)
 561+ 99AE 3D           	dec a
 562+ 99AF 20 01        	jr nz,1F
 563+ 99B1 3C           	inc a
 564+ 99B2 47           1 ld b,a
 565+ 99B3 C9           	ret
 566+ 99B4
 567+ 99B4              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99B4              ;
 569+ 99B4              ;	Prepara_draw
 570+ 99B4              ;
 571+ 99B4              ;	Es una rutina de carga.
 572+ 99B4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99B4              ;
 574+ 99B4              ;	FUNCIONAMIENTO:
 575+ 99B4              ;
 576+ 99B4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99B4              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99B4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99B4              ;
 580+ 99B4              ;	DESTRUYE:
 581+ 99B4              ;
 582+ 99B4              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99B4
 584+ 99B4 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99B7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99B8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99B9 4E           	ld c,(hl)
 588+ 99BA 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99BD 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99BF C9           	ret
 591+ 99C0
 592+ 99C0              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C0              ;
 594+ 99C0              ;	5/08/22
 595+ 99C0              ;
 596+ 99C0              ;   NextScan.
 597+ 99C0              ;
 598+ 99C0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C0              ;
 600+ 99C0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C0              ;
 602+ 99C0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C0              ;
 604+ 99C0              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C0              ;
 606+ 99C0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C0              ;
 608+ 99C0
 609+ 99C0 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99C1 7C               ld a,h
 611+ 99C2 E6 07            and 7
 612+ 99C4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99C5
 614+ 99C5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C6 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99C8 6F               ld l,a
 617+ 99C9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99CA
 619+ 99CA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99CB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99CD 67               ld h,a
 622+ 99CE C9               ret
 623+ 99CF
 624+ 99CF              ;----------------------------------------------------------------------------------------------------------------
 625+ 99CF              ;
 626+ 99CF              ;	5/08/22
 627+ 99CF              ;
 628+ 99CF              ;   PreviousScan.
 629+ 99CF              ;
 630+ 99CF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99CF              ;
 632+ 99CF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99CF              ;
 634+ 99CF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99CF              ;
 636+ 99CF              ;       DESTRUIDOS: AF y HL !!!
 637+ 99CF              ;
 638+ 99CF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99CF              ;
 640+ 99CF
 641+ 99CF 7C           PreviousScan ld a,h
 642+ 99D0 25               dec h               ; Dec H.
 643+ 99D1 E6 07            and 7
 644+ 99D3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99D4
 646+ 99D4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99D5 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99D7 6F               ld l,a
 649+ 99D8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99D9
 651+ 99D9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99DA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99DC 67               ld h,a
 654+ 99DD C9               ret
 655+ 99DE
 656+ 99DE
 657+ 99DE
 658+ 99DE
 659+ 99DE
 660+ 99DE
 661+ 99DE
 662+ 99DE
 663+ 99DE
 664+ 99DE
 665+ 99DE
 666+ 99DE
# file closed: Draw_XOR.asm
2173  99DE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99DE
   2+ 99DE              ; ******************************************************************************************************************************************************************************************
   3+ 99DE              ;
   4+ 99DE              ;   20/05/23
   5+ 99DE              ;
   6+ 99DE              ;	Recompone_posicion_inicio
   7+ 99DE              ;
   8+ 99DE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99DE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99DE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99DE              ;	_ a una u otra rutina.
  12+ 99DE
  13+ 99DE              Recompone_posicion_inicio
  14+ 99DE
  15+ 99DE 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99E1 7D           	ld a,l
  17+ 99E2 E6 1F        	and $1f
  18+ 99E4 28 16        	jr z,1F
  19+ 99E6
  20+ 99E6 FE 1F        	cp $1f
  21+ 99E8 28 0D        	jr z,3F
  22+ 99EA
  23+ 99EA 21 BF 8B     	ld hl,Ctrl_2
  24+ 99ED CB C6        	set 0,(hl)
  25+ 99EF 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 99F2 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 99F5 18 08        	jr 2F
  28+ 99F7
  29+ 99F7 CD A5 9B     3 call Mov_left
  30+ 99FA 18 03        	jr 2F
  31+ 99FC
  32+ 99FC CD 82 9A     1 call Mov_right
  33+ 99FF 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A02 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 9A05 C9           	ret
  36+ 9A06
  37+ 9A06              ; ******************************************************************************************************************************************************************************************
  38+ 9A06              ;
  39+ 9A06              ;   27/05/23
  40+ 9A06              ;
  41+ 9A06              ;	Mov_down
  42+ 9A06              ;
  43+ 9A06              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A06              ;
  45+ 9A06              ;
  46+ 9A06              Mov_down
  47+ 9A06
  48+ 9A06 CD 70 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A09              ;																	; _ repone (Puntero_objeto).
  50+ 9A09 21 C0 8B     	ld hl,Ctrl_0
  51+ 9A0C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A0E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A0E              ; 																	; _ en el caso de que no lo haya.
  54+ 9A0E 3A DB 8B     	ld a,(Vel_down)
  55+ 9A11 47           	ld b,a
  56+ 9A12 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A15 CD AC 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A18 E6 02        	and 2
  59+ 9A1A 28 17        	jr z,1F
  60+ 9A1C
  61+ 9A1C              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A1C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A1C
  64+ 9A1C 7C           	ld a,h
  65+ 9A1D FE 57        	cp $57
  66+ 9A1F 20 12        	jr nz,1F
  67+ 9A21
  68+ 9A21 7D           	ld a,l
  69+ 9A22 C6 20        	add $20
  70+ 9A24 30 0D        	jr nc,1F
  71+ 9A26
  72+ 9A26              ; ------------------------------
  73+ 9A26              ;
  74+ 9A26              ;	12/01/24
  75+ 9A26
  76+ 9A26              ;	call Reaparece_arriba
  77+ 9A26 CD 32 9D     	call Reinicio
  78+ 9A29
  79+ 9A29              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A29
  81+ 9A29 3A 26 8C     	ld a,(Ctrl_3)
  82+ 9A2C CB CF        	set 1,a
  83+ 9A2E 32 26 8C     	ld (Ctrl_3),a
  84+ 9A31
  85+ 9A31 18 08        	jr 3F
  86+ 9A33              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A33              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A33              ; ------------------------------
  89+ 9A33
  90+ 9A33 CD C0 99     1 call NextScan
  91+ 9A36 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A39 10 DA            djnz 2B
  93+ 9A3B CD CA 94     3 call Genera_coordenadas
  94+ 9A3E C9           	ret
  95+ 9A3F
  96+ 9A3F              ; ******************************************************************************************************************************************************************************************
  97+ 9A3F              ;
  98+ 9A3F              ;   27/05/23
  99+ 9A3F              ;
 100+ 9A3F              ;	Mov_up
 101+ 9A3F              ;
 102+ 9A3F              ; 	Mueve el Sprite hacia arriba.
 103+ 9A3F              ;
 104+ 9A3F              ;
 105+ 9A3F              Mov_up
 106+ 9A3F
 107+ 9A3F CD 70 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A42              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A42 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A45 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A47              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A47              ; 																		; _ en el caso de que no lo haya.
 113+ 9A47 3A DA 8B     	ld a,(Vel_up)
 114+ 9A4A 47           	ld b,a
 115+ 9A4B 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A4E CD AC 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A51 A7           	and a
 118+ 9A52 20 10        	jr nz,1F
 119+ 9A54
 120+ 9A54              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A54              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A54
 123+ 9A54 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A55 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A57 20 0B            jr nz,1F
 126+ 9A59 7D               ld a,l
 127+ 9A5A D6 20            sub $20
 128+ 9A5C 30 06            jr nc,1F
 129+ 9A5E 25               dec h
 130+ 9A5F
 131+ 9A5F              ; -----------------------------
 132+ 9A5F CD 13 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A62              ;	call Reinicio
 134+ 9A62              ; -----------------------------
 135+ 9A62
 136+ 9A62 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A64 CD CF 99     1 call PreviousScan
 138+ 9A67 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A6A 10 E2            djnz 3B
 140+ 9A6C CD CA 94     2 call Genera_coordenadas
 141+ 9A6F C9           	ret
 142+ 9A70
 143+ 9A70              ; -----------------------------
 144+ 9A70              ;
 145+ 9A70              ;	27/5/23
 146+ 9A70              ;
 147+ 9A70              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A70              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A70              ;
 150+ 9A70              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A70              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A70              ;
 153+ 9A70              ;	Modifica: A y (Puntero_objeto).
 154+ 9A70
 155+ 9A70 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A73 CB 47        	bit 0,a
 157+ 9A75 C8           	ret z
 158+ 9A76 CB 87        	res 0,a
 159+ 9A78 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A7B 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A7E 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A81 C9           	ret
 163+ 9A82
 164+ 9A82              ; ******************************************************************************************************************************************************************************************
 165+ 9A82              ;
 166+ 9A82              ;	19/10/22
 167+ 9A82              ;
 168+ 9A82              ;	Mov_right.
 169+ 9A82              ;
 170+ 9A82              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A82              ;
 172+ 9A82
 173+ 9A82 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A85 CB 77        	bit 6,a
 175+ 9A87 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A89
 177+ 9A89 CD C1 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A8C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A8D
 180+ 9A8D 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A90 CB E6        	set 4,(hl)
 182+ 9A92 18 52        	jr 8F
 183+ 9A94
 184+ 9A94 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9A97 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A99              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A99              ; 																	; _ en el caso de que no lo haya.
 188+ 9A99 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A9C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A9E 20 46        	jr nz,8F
 191+ 9AA0
 192+ 9AA0 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AA4 28 40        	jr z,8F
 195+ 9AA6
 196+ 9AA6              ; ---------- ---------- ----------
 197+ 9AA6              ;
 198+ 9AA6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA6
 200+ 9AA6 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AA9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AAB 28 11        	jr z,1F
 203+ 9AAD 38 06        	jr c,6F
 204+ 9AAF FE 04        	cp 4
 205+ 9AB1 28 14        	jr z,7F
 206+ 9AB3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AB5
 208+ 9AB5              ; ---------- ---------- ----------
 209+ 9AB5              ;
 210+ 9AB5              ; Perfiles de velocidad
 211+ 9AB5              ;
 212+ 9AB5
 213+ 9AB5 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AB8 FE FE        	cp $fe
 215+ 9ABA 20 2A        	jr nz,8F
 216+ 9ABC 18 10        	jr 3F
 217+ 9ABE 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AC1 FE FD        	cp $fd
 219+ 9AC3 20 21        	jr nz,8F
 220+ 9AC5 18 07        	jr 3F
 221+ 9AC7 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ACA FE FB        	cp $fb
 223+ 9ACC 20 18        	jr nz,8F
 224+ 9ACE
 225+ 9ACE              ; ---------- ---------- ----------
 226+ 9ACE
 227+ 9ACE              3
 228+ 9ACE CD 01 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AD1              ;	call Reinicio
 230+ 9AD1
 231+ 9AD1              ; ---------- ---------- ----------
 232+ 9AD1              ;
 233+ 9AD1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AD1
 235+ 9AD1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AD4 CD ED 9A     	call DESPLZ_DER
 238+ 9AD7 C1           	pop bc
 239+ 9AD8 10 F9        	djnz 5B
 240+ 9ADA 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ADD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ADE 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9AE1 CD CA 94     	call Genera_coordenadas
 244+ 9AE4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE6
 246+ 9AE6              ; ---------- ---------- ----------
 247+ 9AE6
 248+ 9AE6 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AE9 CD ED 9A     	call DESPLZ_DER
 250+ 9AEC C9           2 ret
 251+ 9AED
 252+ 9AED              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AED              ;
 254+ 9AED              ;	22/9/22
 255+ 9AED              ;
 256+ 9AED
 257+ 9AED CD FC 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AF0 CD 48 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF3 CD 71 9B         call Ciclo_completo
 260+ 9AF6 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AF9 CB FE        	set 7,(hl)
 262+ 9AFB C9           	ret
 263+ 9AFC
 264+ 9AFC              ; ******************************************************************************************************************************************************************************************
 265+ 9AFC              ;	15/02/23
 266+ 9AFC              ;
 267+ 9AFC
 268+ 9AFC 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AFF 47           	ld b,a
 270+ 9B00 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B03 23           1 inc hl
 272+ 9B04 23           	inc hl
 273+ 9B05 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B07 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B0A CD AB 90     	call Extrae_address
 276+ 9B0D 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9B10
 278+ 9B10              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B10
 280+ 9B10              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B10              ; Cuántos movimientos hemos hecho ??
 282+ 9B10              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B10
 284+ 9B10 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B13 EB           	ex de,hl
 286+ 9B14 A7           	and a
 287+ 9B15 ED 52        	sbc hl,de
 288+ 9B17 CB 3D        	srl l
 289+ 9B19 3E 08        6 ld a,8
 290+ 9B1B 95           	sub l
 291+ 9B1C 30 1E        	jr nc,3F
 292+ 9B1E
 293+ 9B1E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B1E              ; B="0".
 295+ 9B1E
 296+ 9B1E 04           4 inc b
 297+ 9B1F 3C           	inc a
 298+ 9B20 20 FC        	jr nz,4B
 299+ 9B22 78           	ld a,b
 300+ 9B23 08           	ex af,af
 301+ 9B24 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B27 23           5 inc hl
 303+ 9B28 23           	inc hl
 304+ 9B29 10 FC        	djnz 5B
 305+ 9B2B 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B2E CD AB 90     	call Extrae_address
 307+ 9B31 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B34
 309+ 9B34              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B34              ; _(Posicion_actual).
 311+ 9B34
 312+ 9B34 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B37 34           	inc (hl)
 314+ 9B38 08               ex af,af
 315+ 9B39 6F           	ld l,a
 316+ 9B3A 18 DD        	jr 6B
 317+ 9B3C
 318+ 9B3C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B3C
 320+ 9B3C 47           3 ld b,a
 321+ 9B3D 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B40 23           2 inc hl
 323+ 9B41 23           	inc hl
 324+ 9B42 10 FC        	djnz 2B
 325+ 9B44 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B47 C9           8 ret
 327+ 9B48
 328+ 9B48              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B48              ;
 330+ 9B48              ;	24/7/22
 331+ 9B48              ;
 332+ 9B48              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B48              ;
 334+ 9B48              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B48              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B48              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B48
 338+ 9B48 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B4B A7           	and a
 340+ 9B4C 20 1F        	jr nz,1F
 341+ 9B4E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B50 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B53
 344+ 9B53 21 C2 8B     	ld hl,Columns
 345+ 9B56 34           	inc (hl)
 346+ 9B57 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B5A E6 01        	and 1
 348+ 9B5C 28 0F        	jr z,1F
 349+ 9B5E 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B61 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B62 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B65 CD CA 94     	call Genera_coordenadas
 353+ 9B68 CD CD 9C     	call Inc_CTRL_DESPLZ
 354+ 9B6B 18 03        	jr 2F
 355+ 9B6D CD CD 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B70 C9           2 ret
 357+ 9B71
 358+ 9B71              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B71              ;
 360+ 9B71              ;	24/7/22
 361+ 9B71              ;
 362+ 9B71              ;	Ciclo_completo.
 363+ 9B71              ;
 364+ 9B71              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B71              ;
 366+ 9B71              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B71              ; 	Decrementamos (Columns).
 368+ 9B71              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B71              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B71
 371+ 9B71
 372+ 9B71 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B74 FE FF        	cp $ff
 374+ 9B76 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B78 E6 F0        	and $f0
 376+ 9B7A 20 28        	jr nz,3F
 377+ 9B7C
 378+ 9B7C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B7C
 380+ 9B7C 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B7F 47           	ld b,a
 382+ 9B80 3E F8        	ld a,$f8
 383+ 9B82 80           	add b
 384+ 9B83 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B86 18 1C        	jr 3F
 386+ 9B88 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B8B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B8C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B8D 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B90 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B93 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B95 20 0A        	jr nz,2F
 393+ 9B97 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B9A 23           	inc hl
 395+ 9B9B 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9B9E CD CA 94     	call Genera_coordenadas
 397+ 9BA1
 398+ 9BA1              ; Inicia el puntero de Sprite.
 399+ 9BA1
 400+ 9BA1 CD C0 90     2 call Inicia_puntero_objeto_der
 401+ 9BA4 C9           3 ret
 402+ 9BA5
 403+ 9BA5              ; ******************************************************************************************************************************************************************************************
 404+ 9BA5              ;
 405+ 9BA5              ;	15/02/23
 406+ 9BA5              ;
 407+ 9BA5              ;	Mov_left.
 408+ 9BA5              ;
 409+ 9BA5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BA5              ;
 411+ 9BA5              Mov_left
 412+ 9BA5
 413+ 9BA5 21 C0 8B     	ld hl,Ctrl_0
 414+ 9BA8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BAA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BAA              ; 																	; _ en el caso de que no lo haya.
 417+ 9BAA 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9BAD CB 77        	bit 6,a
 419+ 9BAF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BB1
 421+ 9BB1 CD C7 9C     	call Stop_Amadeus_left
 422+ 9BB4 C8           	ret z
 423+ 9BB5 20 4A        	jr nz,8F
 424+ 9BB7
 425+ 9BB7 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BBA A7           	and a
 427+ 9BBB 20 44        	jr nz,8F
 428+ 9BBD
 429+ 9BBD 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BC1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC3
 433+ 9BC3              ; ---------- ---------- ----------
 434+ 9BC3
 435+ 9BC3 3A D8 8B     	ld a,(Vel_left)
 436+ 9BC6 FE 02        	cp 2
 437+ 9BC8 28 0F        	jr z,1F
 438+ 9BCA 38 04        	jr c,6F
 439+ 9BCC FE 04        	cp 4
 440+ 9BCE 28 12        	jr z,7F
 441+ 9BD0
 442+ 9BD0              ; ---------- ---------- ----------
 443+ 9BD0
 444+ 9BD0 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BD3 FE F8        	cp $f8
 446+ 9BD5 20 2A        	jr nz,8F
 447+ 9BD7 18 10        	jr 4F
 448+ 9BD9 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BDC FE F9        	cp $f9
 450+ 9BDE 20 21        	jr nz,8F
 451+ 9BE0 18 07        	jr 4F
 452+ 9BE2 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BE5 FE FB        	cp $fb
 454+ 9BE7 20 18        	jr nz,8F
 455+ 9BE9
 456+ 9BE9              ; ---------- ---------- ----------
 457+ 9BE9
 458+ 9BE9              4
 459+ 9BE9 CD EF 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BEC              ;	call Reinicio
 461+ 9BEC
 462+ 9BEC              ; ---------- ---------- ----------
 463+ 9BEC
 464+ 9BEC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BEE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BEF
 467+ 9BEF              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BEF              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BEF
 470+ 9BEF CD 08 9C     	call DESPLZ_IZQ
 471+ 9BF2 C1           	pop bc
 472+ 9BF3 10 F9        	djnz 5B
 473+ 9BF5 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BF8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BF9 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9BFC CD CA 94     	call Genera_coordenadas
 477+ 9BFF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C01
 479+ 9C01              ; ---------- ---------- ----------
 480+ 9C01
 481+ 9C01              ; Movemos, no hay recolocación.
 482+ 9C01
 483+ 9C01 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9C04 CD 08 9C     	call DESPLZ_IZQ
 485+ 9C07 C9           2 ret
 486+ 9C08
 487+ 9C08              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C08              ;
 489+ 9C08              ;	22/9/22
 490+ 9C08
 491+ 9C08              DESPLZ_IZQ
 492+ 9C08
 493+ 9C08 CD 17 9C     	call Desplaza_izquierda
 494+ 9C0B CD 63 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C0E CD 8B 9C     	call Ciclo_completo_2
 496+ 9C11 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C14 CB BE        	res 7,(hl)
 498+ 9C16 C9           	ret
 499+ 9C17
 500+ 9C17              Desplaza_izquierda
 501+ 9C17
 502+ 9C17 3A D8 8B     	ld a,(Vel_left)
 503+ 9C1A 47           	ld b,a
 504+ 9C1B 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C1E 23           1 inc hl
 506+ 9C1F 23           	inc hl
 507+ 9C20 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C22 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C25 CD AB 90     	call Extrae_address
 510+ 9C28 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C2B
 512+ 9C2B              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C2B
 514+ 9C2B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C2B              ; Cuántos movimientos hemos hecho ??
 516+ 9C2B              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C2B
 518+ 9C2B 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C2E EB           	ex de,hl
 520+ 9C2F A7           	and a
 521+ 9C30 ED 52        	sbc hl,de
 522+ 9C32 CB 3D        	srl l
 523+ 9C34 3E 08        6 ld a,8
 524+ 9C36 95           	sub l
 525+ 9C37 30 1E        	jr nc,3F
 526+ 9C39
 527+ 9C39              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C39              ; B="0".
 529+ 9C39
 530+ 9C39 04           4 inc b
 531+ 9C3A 3C           	inc a
 532+ 9C3B 20 FC        	jr nz,4B
 533+ 9C3D 78           	ld a,b
 534+ 9C3E 08           	ex af,af
 535+ 9C3F 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C42 23           5 inc hl
 537+ 9C43 23           	inc hl
 538+ 9C44 10 FC        	djnz 5B
 539+ 9C46 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C49 CD AB 90     	call Extrae_address
 541+ 9C4C 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C4F
 543+ 9C4F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C4F              ; _(Posicion_actual).
 545+ 9C4F
 546+ 9C4F 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C52 35           	dec (hl)
 548+ 9C53 08           	ex af,af
 549+ 9C54 6F           	ld l,a
 550+ 9C55 18 DD        	jr 6B
 551+ 9C57
 552+ 9C57              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C57
 554+ 9C57 47           3 ld b,a
 555+ 9C58 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C5B 23           2 inc hl
 557+ 9C5C 23           	inc hl
 558+ 9C5D 10 FC        	djnz 2B
 559+ 9C5F 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C62 C9           8 ret
 561+ 9C63
 562+ 9C63              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C63              ;
 564+ 9C63              ;	modifica_parametros_1er_DESPLZ
 565+ 9C63              ;
 566+ 9C63              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C63              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C63              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C63
 570+ 9C63 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C66 A7           	and a
 572+ 9C67 20 1E        	jr nz,1F
 573+ 9C69 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C6A 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C6D 21 C2 8B     	ld hl,Columns
 576+ 9C70 34           	inc (hl)
 577+ 9C71 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C74 E6 01        	and 1
 579+ 9C76 20 0F        	jr nz,1F
 580+ 9C78 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C7B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C7C 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C7F CD CA 94     	call Genera_coordenadas
 584+ 9C82 CD DE 9C     	call Dec_CTRL_DESPLZ
 585+ 9C85 18 03        	jr 2F
 586+ 9C87 CD DE 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C8A C9           2 ret
 588+ 9C8B
 589+ 9C8B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C8B
 591+ 9C8B 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C8E FE F7        	cp $f7
 593+ 9C90 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C92 30 2C        	jr nc,3F
 595+ 9C94
 596+ 9C94              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C94
 598+ 9C94 06 00        	ld b,0
 599+ 9C96 04           4 inc b
 600+ 9C97 3C           	inc a
 601+ 9C98 FE F7        	cp $f7
 602+ 9C9A 20 FA        	jr nz,4B
 603+ 9C9C 3E FF        	ld a,$ff
 604+ 9C9E 90           	sub b
 605+ 9C9F 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9CA2 18 1C        	jr 3F
 607+ 9CA4
 608+ 9CA4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CA4
 610+ 9CA4 21 C2 8B     1 ld hl,Columns
 611+ 9CA7 35           	dec (hl)
 612+ 9CA8 AF           	xor a
 613+ 9CA9 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9CAC 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9CAF E6 01        	and 1
 616+ 9CB1 28 0A        	jr z,2F
 617+ 9CB3 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB6 2B           	dec hl
 619+ 9CB7 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CBA CD CA 94     	call Genera_coordenadas
 621+ 9CBD
 622+ 9CBD              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CBD
 624+ 9CBD CD D3 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC0 C9           3 ret
 626+ 9CC1
 627+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CC1              ;
 629+ 9CC1              ;	19/10/22
 630+ 9CC1              ;
 631+ 9CC1              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CC1              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CC1
 634+ 9CC1 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CC4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC6 C9           	ret
 637+ 9CC7
 638+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CC7              ;
 640+ 9CC7              ;	19/10/22
 641+ 9CC7              ;
 642+ 9CC7              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CC7              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CC7
 645+ 9CC7 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CCA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CCC C9           	ret
 648+ 9CCD
 649+ 9CCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CCD              ;
 651+ 9CCD              ;	24/7/22
 652+ 9CCD              ;
 653+ 9CCD              ;	Inc_CTRL_DESPLZ
 654+ 9CCD              ;
 655+ 9CCD              ;
 656+ 9CCD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CCD
 658+ 9CCD 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD0 3A D9 8B     	ld a,(Vel_right)
 660+ 9CD3 A7           	and a
 661+ 9CD4 28 06        	jr z,1F
 662+ 9CD6 47           	ld b,a
 663+ 9CD7 34           3 inc (hl)
 664+ 9CD8 10 FD        	djnz 3B
 665+ 9CDA 18 01        	jr 2F
 666+ 9CDC 34           1 inc (hl)
 667+ 9CDD C9           2 ret
 668+ 9CDE
 669+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CDE              ;
 671+ 9CDE              ;	5/2/23
 672+ 9CDE              ;
 673+ 9CDE              ;	Dec_CTRL_DESPLZ
 674+ 9CDE              ;
 675+ 9CDE              ;
 676+ 9CDE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CDE
 678+ 9CDE 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CE1 3A D8 8B     	ld a,(Vel_left)
 680+ 9CE4 A7           	and a
 681+ 9CE5 28 06        	jr z,1F
 682+ 9CE7 47           	ld b,a
 683+ 9CE8 35           3 dec (hl)
 684+ 9CE9 10 FD        	djnz 3B
 685+ 9CEB 18 01        	jr 2F
 686+ 9CED 35           1 dec (hl)
 687+ 9CEE C9           2 ret
 688+ 9CEF
 689+ 9CEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CEF
 691+ 9CEF 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CF2 01 1F 00     	ld bc,31
 693+ 9CF5 A7           	and a
 694+ 9CF6 ED 4A        	adc hl,bc
 695+ 9CF8 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9CFB 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CFE CB C6        	set 0,(hl)
 698+ 9D00 C9           	ret
 699+ 9D01
 700+ 9D01              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D01
 702+ 9D01 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D04 01 1F 00     	ld bc,31
 704+ 9D07 A7           	and a
 705+ 9D08 ED 42        	sbc hl,bc
 706+ 9D0A 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D0D 21 C0 8B     	ld hl,Ctrl_0
 708+ 9D10 CB CE        	set 1,(hl)
 709+ 9D12 C9           	ret
 710+ 9D13
 711+ 9D13              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D13
 713+ 9D13 24           Reaparece_abajo inc h
 714+ 9D14 01 E0 17     	ld bc,$17e0
 715+ 9D17 A7           	and a
 716+ 9D18 ED 4A        	adc hl,bc
 717+ 9D1A 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D1D 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D20 CB D6        	set 2,(hl)
 720+ 9D22 C9           	ret
 721+ 9D23
 722+ 9D23              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D23
 724+ 9D23 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D26 A7           	and a
 726+ 9D27 ED 42        	sbc hl,bc
 727+ 9D29 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D2C 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D2F CB DE        	set 3,(hl)
 730+ 9D31 C9           	ret
 731+ 9D32
 732+ 9D32              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D32              ;
 734+ 9D32              ;	15/07/23
 735+ 9D32
 736+ 9D32              Reinicio
 737+ 9D32
 738+ 9D32              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D32
 740+ 9D32 AF           	xor a
 741+ 9D33 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D36 CD 54 9D     	call Limpia_contenido_hl
 743+ 9D39
 744+ 9D39 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D3C CD 54 9D     	call Limpia_contenido_hl
 746+ 9D3F
 747+ 9D3F CD AC 92     	call Inicializa_Puntero_indice_mov
 748+ 9D42 CD 53 9E     	call Inicia_Puntero_mov
 749+ 9D45
 750+ 9D45 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D48 06 05        	ld b,5
 752+ 9D4A 77           1 ld (hl),a
 753+ 9D4B 23           	inc hl
 754+ 9D4C 10 FC        	djnz 1B
 755+ 9D4E
 756+ 9D4E 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D51 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D53
 759+ 9D53 C9           	ret
 760+ 9D54
 761+ 9D54 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D55 23           	inc hl
 763+ 9D56 77           	ld (hl),a
 764+ 9D57 C9           	ret
 765+ 9D58
 766+ 9D58              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D58              ;
 768+ 9D58              ;	18/6/24
 769+ 9D58              ;
 770+ 9D58
 771+ 9D58              Amadeus_a_izquierda
 772+ 9D58
 773+ 9D58              ;	Actualiza contador de movimientos.
 774+ 9D58
 775+ 9D58 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D5B 35           	dec (hl)
 777+ 9D5C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D5E
 779+ 9D5E 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D61 2B           	dec hl
 781+ 9D62 2B           	dec hl
 782+ 9D63 2B           	dec hl
 783+ 9D64 2B           	dec hl
 784+ 9D65 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D68
 786+ 9D68 21 26 8C     	ld hl,Ctrl_3
 787+ 9D6B CB EE        	set 5,(hl)
 788+ 9D6D
 789+ 9D6D C9           	ret
 790+ 9D6E
 791+ 9D6E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D6F C9           	ret
 793+ 9D70
 794+ 9D70
 795+ 9D70              Amadeus_a_derecha
 796+ 9D70
 797+ 9D70              ;	Actualiza contador de movimientos.
 798+ 9D70
 799+ 9D70 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D73 34           	inc (hl)
 801+ 9D74 3E 7A        	ld a,$7a
 802+ 9D76 BE           	cp (hl)
 803+ 9D77 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D79
 805+ 9D79 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D7C 23           	inc hl
 807+ 9D7D 23           	inc hl
 808+ 9D7E 23           	inc hl
 809+ 9D7F 23           	inc hl
 810+ 9D80 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D83
 812+ 9D83 21 26 8C     	ld hl,Ctrl_3
 813+ 9D86 CB EE        	set 5,(hl)
 814+ 9D88 C9           	ret
 815+ 9D89
 816+ 9D89 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D8A C9           	ret
# file closed: Direcciones.asm
2174  9D8B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D8B              ; ----- ----- ----- ----- -----
   2+ 9D8B              ;
   3+ 9D8B              ;   28/12/23
   4+ 9D8B
   5+ 9D8B              Movimiento
   6+ 9D8B
   7+ 9D8B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D8B
   9+ 9D8B 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D8E CB 57            bit 2,a
  11+ 9D90 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D92
  13+ 9D92 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9D95 7E               ld a,(hl)
  15+ 9D96
  16+ 9D96              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D96
  18+ 9D96              Inicia_desplazamiento.
  19+ 9D96
  20+ 9D96              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D96
  22+ 9D96 CD 89 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D99
  24+ 9D99              ; Iniciamos (Repetimos_mov).
  25+ 9D99
  26+ 9D99 7E               ld a,(hl)
  27+ 9D9A E6 0F            and $0f
  28+ 9D9C 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9D9F 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DA2
  31+ 9DA2              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DA2
  33+ 9DA2 23               inc hl
  34+ 9DA3 7E               ld a,(hl)
  35+ 9DA4 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9DA7 2B               dec hl
  37+ 9DA8
  38+ 9DA8 21 BF 8B         ld hl,Ctrl_2
  39+ 9DAB CB D6            set 2,(hl)
  40+ 9DAD
  41+ 9DAD              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DAD              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DAD
  44+ 9DAD              Desplazamiento_iniciado
  45+ 9DAD
  46+ 9DAD CD 5D 9E         call Aplica_desplazamiento
  47+ 9DB0
  48+ 9DB0              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB0
  50+ 9DB0 3A 26 8C         ld a,(Ctrl_3)
  51+ 9DB3 CB 4F            bit 1,a
  52+ 9DB5 C0               ret nz
  53+ 9DB6
  54+ 9DB6 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DB9 35               dec (hl)
  56+ 9DBA C0               ret nz
  57+ 9DBB
  58+ 9DBB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DBB              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DBB              ; Analiza (Cola_de_desplazamiento).
  61+ 9DBB
  62+ 9DBB 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DBE A7               and a
  64+ 9DBF CC B2 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DC2 28 30            jr z,Reinicia_el_movimiento
  66+ 9DC4
  67+ 9DC4 FE FF            cp $ff
  68+ 9DC6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DC8
  70+ 9DC8 FE FE            cp $fe
  71+ 9DCA CC 37 9E         call z,Fijamos_bucle
  72+ 9DCD 28 25            jr z,Reinicia_el_movimiento
  73+ 9DCF
  74+ 9DCF FE FD            cp $fd
  75+ 9DD1 20 11            jr nz,1F
  76+ 9DD3
  77+ 9DD3              ; ---
  78+ 9DD3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD3
  80+ 9DD3 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DD6 CB 5F            bit 3,a
  82+ 9DD8 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DDA
  84+ 9DDA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DDA
  86+ 9DDA 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DDD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DDF
  89+ 9DDF CD 48 9E         call Inicia_Repetimos_movimiento
  90+ 9DE2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DE4              ; ---
  92+ 9DE4
  93+ 9DE4 FE 01        1 cp 1
  94+ 9DE6 CA 21 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DE9
  96+ 9DE9 3D               dec a
  97+ 9DEA 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DED
  99+ 9DED 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF0 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF3 C9               ret
 103+ 9DF4
 104+ 9DF4              Reinicia_el_movimiento
 105+ 9DF4
 106+ 9DF4 3A BF 8B         ld a,(Ctrl_2)
 107+ 9DF7 CB 5F            bit 3,a
 108+ 9DF9 28 1B            jr z,2F
 109+ 9DFB
 110+ 9DFB              ; (Cola_de_desplazamiento)="254".
 111+ 9DFB
 112+ 9DFB 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DFE 35               dec (hl)
 114+ 9DFF 20 15            jr nz,2F
 115+ 9E01
 116+ 9E01              ; Fin de las repeticiones del último movimiento.
 117+ 9E01
 118+ 9E01 21 BF 8B         ld hl,Ctrl_2
 119+ 9E04 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E06
 121+ 9E06 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9E09 23               inc hl
 123+ 9E0A 23               inc hl
 124+ 9E0B 23               inc hl
 125+ 9E0C 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E0F              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E0F 7E               ld a,(hl)
 128+ 9E10 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E13
 130+ 9E13 C3 BB 9D         jp Cola
 131+ 9E16
 132+ 9E16 CD 53 9E     2 call Inicia_Puntero_mov
 133+ 9E19
 134+ 9E19 21 BF 8B         ld hl,Ctrl_2
 135+ 9E1C CB 96            res 2,(hl)
 136+ 9E1E
 137+ 9E1E C3 8B 9D         jp Movimiento
 138+ 9E21
 139+ 9E21              Siguiente_desplazamiento
 140+ 9E21
 141+ 9E21              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E21              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E21
 144+ 9E21 21 BF 8B         ld hl,Ctrl_2
 145+ 9E24 CB 96            res 2,(hl)
 146+ 9E26
 147+ 9E26 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E29 23               inc hl
 149+ 9E2A 23               inc hl
 150+ 9E2B 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E2E
 152+ 9E2E 7E               ld a,(hl)
 153+ 9E2F A7               and a
 154+ 9E30 CC B2 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E33 CA F4 9D         jp z,Reinicia_el_movimiento
 156+ 9E36
 157+ 9E36 C9               ret
 158+ 9E37
 159+ 9E37              ; Subrutinas -----------------------------------------
 160+ 9E37              ; ---------- --------- --------- ---------- ----------
 161+ 9E37              ;
 162+ 9E37              ;   24/07/23
 163+ 9E37              ;
 164+ 9E37              ;   Fijamos_bucle
 165+ 9E37              ;
 166+ 9E37              ;
 167+ 9E37
 168+ 9E37              Fijamos_bucle
 169+ 9E37
 170+ 9E37 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E3A 3C               inc a
 172+ 9E3B 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E3E
 174+ 9E3E CD B2 9E         call Incrementa_Puntero_indice_mov
 175+ 9E41 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E44 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E47 C9               ret
 178+ 9E48
 179+ 9E48              ; ---------- --------- --------- ---------- ----------
 180+ 9E48              ;
 181+ 9E48              ;   07/7/23
 182+ 9E48              ;
 183+ 9E48              ;   Inicia_Repetimos_movimiento
 184+ 9E48              ;
 185+ 9E48              ;
 186+ 9E48
 187+ 9E48              Inicia_Repetimos_movimiento
 188+ 9E48
 189+ 9E48              ; Iniciamos (Repetimos_movimiento).
 190+ 9E48
 191+ 9E48 DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E4C DD 7E 02         ld a,(ix+2)
 193+ 9E4F 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E52
 195+ 9E52 C9               ret
 196+ 9E53
 197+ 9E53              ; ---------- --------- --------- ---------- ----------
 198+ 9E53              ;
 199+ 9E53              ;   26/6/23
 200+ 9E53              ;
 201+ 9E53              ;   Inicia_Puntero_mov
 202+ 9E53              ;
 203+ 9E53              ;
 204+ 9E53
 205+ 9E53 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E56 CD AB 90         call Extrae_address
 207+ 9E59 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E5C C9               ret
 209+ 9E5D
 210+ 9E5D              ; ---------- --------- --------- ---------- ----------
 211+ 9E5D              ;
 212+ 9E5D              ;   27/06/23
 213+ 9E5D              ;
 214+ 9E5D              ;   Aplica_movimiento.
 215+ 9E5D
 216+ 9E5D              Aplica_desplazamiento
 217+ 9E5D
 218+ 9E5D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E5D
 220+ 9E5D 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E60
 222+ 9E60 7E               ld a,(hl)
 223+ 9E61 E6 F0            and $f0
 224+ 9E63 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E64
 226+ 9E64 CB 7E            bit 7,(hl)
 227+ 9E66 28 03            jr z,1F
 228+ 9E68 CD 3F 9A         call Mov_up
 229+ 9E6B 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E6E CB 76            bit 6,(hl)
 231+ 9E70 28 03            jr z,2F
 232+ 9E72 CD 06 9A         call Mov_down
 233+ 9E75
 234+ 9E75              ; Se ha aplicado reinicio ???
 235+ 9E75              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E75
 237+ 9E75              ;    ld a,(Ctrl_3)
 238+ 9E75              ;    bit 1,a
 239+ 9E75              ;    ret nz
 240+ 9E75
 241+ 9E75 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E78 CB 6E            bit 5,(hl)
 243+ 9E7A 28 03            jr z,3F
 244+ 9E7C CD A5 9B         call Mov_left
 245+ 9E7F 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E82 CB 66            bit 4,(hl)
 247+ 9E84 C8               ret z
 248+ 9E85 CD 82 9A         call Mov_right
 249+ 9E88 C9               ret
 250+ 9E89
 251+ 9E89              ; ---------- --------- --------- ---------- ----------
 252+ 9E89              ;
 253+ 9E89              ;   26/06/23
 254+ 9E89              ;
 255+ 9E89              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E89
 257+ 9E89              Ajusta_velocidad_desplazamiento
 258+ 9E89
 259+ 9E89              ; 1er byte de la cadena de movimiento.
 260+ 9E89              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E89
 262+ 9E89 CD A7 9E         call Extrae_nibble_alto
 263+ 9E8C
 264+ 9E8C 32 DA 8B         ld (Vel_up),a
 265+ 9E8F 79               ld a,c
 266+ 9E90 E6 0F            and $0f
 267+ 9E92 32 DB 8B         ld (Vel_down),a
 268+ 9E95
 269+ 9E95              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E95              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E95
 272+ 9E95 23               inc hl
 273+ 9E96 CD A7 9E         call Extrae_nibble_alto
 274+ 9E99
 275+ 9E99 32 D8 8B         ld (Vel_left),a
 276+ 9E9C 79               ld a,c
 277+ 9E9D E6 0F            and $0f
 278+ 9E9F 32 D9 8B         ld (Vel_right),a
 279+ 9EA2
 280+ 9EA2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EA2
 282+ 9EA2 23               inc hl
 283+ 9EA3 22 E6 8B         ld (Puntero_mov),hl
 284+ 9EA6 C9               ret
 285+ 9EA7
 286+ 9EA7 06 04        Extrae_nibble_alto ld b,4
 287+ 9EA9 7E               ld a,(hl)
 288+ 9EAA 4F               ld c,a
 289+ 9EAB E6 F0            and $f0
 290+ 9EAD CB 3F        1 srl a
 291+ 9EAF 10 FC            djnz 1B
 292+ 9EB1 C9               ret
 293+ 9EB2
 294+ 9EB2              ; ---------- --------- --------- ---------- ----------
 295+ 9EB2              ;
 296+ 9EB2              ;   5/7/23
 297+ 9EB2              ;
 298+ 9EB2              ;   Incrementa_Puntero_indice_mov
 299+ 9EB2
 300+ 9EB2              Incrementa_Puntero_indice_mov
 301+ 9EB2
 302+ 9EB2 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9EB5 34               inc (hl)
 304+ 9EB6
 305+ 9EB6 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EB9 01 02 00         ld bc,2
 307+ 9EBC A7               and a
 308+ 9EBD 09               add hl,bc
 309+ 9EBE 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9EC1
 311+ 9EC1 7E               ld a,(hl)
 312+ 9EC2 A7               and a
 313+ 9EC3
 314+ 9EC3              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC3
 316+ 9EC3              ;    jr z,$
 317+ 9EC3
 318+ 9EC3              ;! Reinicia el Patrón de movimiento.
 319+ 9EC3
 320+ 9EC3 CC C8 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC6
 322+ 9EC6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EC7
 324+ 9EC7 C9               ret
 325+ 9EC8
 326+ 9EC8              ; ---------- --------- --------- ---------- ----------
 327+ 9EC8              ;
 328+ 9EC8              ;   15/01/24
 329+ 9EC8              ;
 330+ 9EC8              ;   Inicializa_Puntero_indice_mov
 331+ 9EC8
 332+ 9EC8              Inicializa_Puntero_indice_mov_2
 333+ 9EC8
 334+ 9EC8              ; Existe etiqueta de bucle principal???
 335+ 9EC8
 336+ 9EC8 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ECB 24               inc h
 338+ 9ECC 25               dec h
 339+ 9ECD 28 05            jr z,2F
 340+ 9ECF
 341+ 9ECF 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9ED2 18 14            jr 3F
 343+ 9ED4
 344+ 9ED4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ED4
 346+ 9ED4 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9ED7 47               ld b,a
 348+ 9ED8
 349+ 9ED8 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9EDB 2B           1 dec hl
 351+ 9EDC 2B               dec hl
 352+ 9EDD 10 FC            djnz 1B
 353+ 9EDF 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9EE2
 355+ 9EE2 AF               xor a
 356+ 9EE3 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9EE6 18 06            jr 4F
 358+ 9EE8
 359+ 9EE8 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EEB 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9EEE C9           4 ret
 362+ 9EEF
 363+ 9EEF              ; ----------------------------------------------------------------------
 364+ 9EEF              ;
 365+ 9EEF              ;   30/01/24
 366+ 9EEF              ;
 367+ 9EEF              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EEF
 369+ 9EEF 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EF2 CD 47 94         call Calcula_salto_en_BC
 371+ 9EF5 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EF8 A7               and a
 373+ 9EF9 ED 4A            adc hl,bc
 374+ 9EFB C9               ret
 375+ 9EFC
 376+ 9EFC              ; ----------------------------------------------------------------------
 377+ 9EFC              ;
 378+ 9EFC              ;   30/01/24
 379+ 9EFC              ;
 380+ 9EFC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EFC              ;
 382+ 9EFC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EFC
 384+ 9EFC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EFD 23               inc hl
 386+ 9EFE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EFF 69               ld l,c
 388+ 9F00 60               ld h,b
 389+ 9F01 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F04 C9               ret
 391+ 9F05
# file closed: Movimiento.asm
2175  9F05              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F05              ; --------------------------------------------------------------------------------------
   2+ 9F05              ;
   3+ 9F05              ;   19/09/24
   4+ 9F05              ;
   5+ 9F05
   6+ 9F05              Genera_datos_de_impresion_disparos_Entidades
   7+ 9F05
   8+ 9F05              ;*  Exclusiones.
   9+ 9F05
  10+ 9F05 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
  11+ 9F08 FE 07            cp 7
  12+ 9F0A C8               ret z                                                     ;? Salimos si no hay generado ningún disparo de entidad.
  13+ 9F0B
  14+ 9F0B              ; ---------------
  15+ 9F0B
  16+ 9F0B 21 28 8C         ld hl,Ctrl_5
  17+ 9F0E CB D6            set 2,(hl)
  18+ 9F10
  19+ 9F10              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
  20+ 9F10
  21+ 9F10 3E 07            ld a,7
  22+ 9F12 08               ex af,af                                                   ;? 7 Cajas como 7 soles. Contador de cajas alojado en A´.
  23+ 9F13
  24+ 9F13 2A 29 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  25+ 9F16 CD AB 90     1 call Extrae_address
  26+ 9F19
  27+ 9F19 23               inc hl
  28+ 9F1A 7E               ld a,(hl)
  29+ 9F1B A7               and a
  30+ 9F1C
  31+ 9F1C 28 19            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
  32+ 9F1E
  33+ 9F1E 2B               dec hl
  34+ 9F1F
  35+ 9F1F ED 73 00 8C      ld (Stack),sp
  36+ 9F23 F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
  37+ 9F24
  38+ 9F24              Genera_scanlines_de_los_disparos_de_entidades.
  39+ 9F24
  40+ 9F24 C1               pop bc
  41+ 9F25 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
  42+ 9F26              ;                                                             ;? Puntero_de_impresión del disparo en HL.
  43+ 9F26 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
  44+ 9F2A
  45+ 9F2A F1               pop af
  46+ 9F2B F1               pop af
  47+ 9F2C F1               pop af
  48+ 9F2D
  49+ 9F2D ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
  50+ 9F31
  51+ 9F31 E5               push hl                                                   ;? Sube 2º scanline al álbum.
  52+ 9F32 CD C0 99         call NextScan
  53+ 9F35 E5               push hl                                                   ;? Sube 1er scanline al álbum.
  54+ 9F36 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
  55+ 9F37
  56+ 9F37              Situa_en_siguiente_caja
  57+ 9F37
  58+ 9F37 ED 7B 00 8C      ld sp,(Stack)
  59+ 9F3B
  60+ 9F3B 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
  61+ 9F3C 3D               dec a
  62+ 9F3D C8               ret z
  63+ 9F3E 08               ex af,af
  64+ 9F3F
  65+ 9F3F 13               inc de
  66+ 9F40 13               inc de
  67+ 9F41
  68+ 9F41 EB               ex de,hl
  69+ 9F42 18 D2            jr 1B
  70+ 9F44
  71+ 9F44              ; --------------------------------------------------------------------------------------
  72+ 9F44              ;
  73+ 9F44              ;   18/09/24
  74+ 9F44              ;
  75+ 9F44
  76+ 9F44              Genera_disparo_de_entidad_maldosa
  77+ 9F44
  78+ 9F44              ;   Estructura de un disparo de entidades.
  79+ 9F44
  80+ 9F44              ;   Disparo_1 defw 0								; Puntero objeto.
  81+ 9F44              ; 	defw 0											; Puntero de impresión.
  82+ 9F44              ;	defw 0											; Control.
  83+ 9F44
  84+ 9F44              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
  85+ 9F44              ;   _de la entidad en el momento de disparar.
  86+ 9F44
  87+ 9F44              ;   El byte alto muestra la siguiente información:
  88+ 9F44              ;
  89+ 9F44              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
  90+ 9F44              ;                        _antes de desplazarse a derecha/izquierda.
  91+ 9F44              ;
  92+ 9F44              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
  93+ 9F44              ;
  94+ 9F44              ;                        10xx ..... Izquierda.
  95+ 9F44              ;                        01xx ..... Derecha.
  96+ 9F44              ;                        00xx ..... Recto.
  97+ 9F44
  98+ 9F44              ;*  Exclusiones.
  99+ 9F44
 100+ 9F44              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 101+ 9F44              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 102+ 9F44
 103+ 9F44 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 104+ 9F47 A7               and a
 105+ 9F48 C8               ret z
 106+ 9F49
 107+ 9F49 3A B5 8B         ld a,(Coordenada_y)
 108+ 9F4C A7               and a
 109+ 9F4D C8               ret z
 110+ 9F4E
 111+ 9F4E 3D               dec a
 112+ 9F4F C8               ret z
 113+ 9F50
 114+ 9F50 FE 0E            cp 14
 115+ 9F52 D0               ret nc
 116+ 9F53
 117+ 9F53              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 118+ 9F53              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 119+ 9F53              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 120+ 9F53              ;
 121+ 9F53
 122+ 9F53 FD 21 70 83      ld iy,Disparo_entidad
 123+ 9F57
 124+ 9F57 7D               ld a,l
 125+ 9F58 C6 40            add $40
 126+ 9F5A 6F               ld l,a
 127+ 9F5B
 128+ 9F5B 4D               ld c,l
 129+ 9F5C 44               ld b,h
 130+ 9F5D
 131+ 9F5D              ;   Decrementa el numero de disparos de entidades.
 132+ 9F5D
 133+ 9F5D 21 28 8C         ld hl,Ctrl_5
 134+ 9F60 CB D6            set 2,(hl)
 135+ 9F62
 136+ 9F62 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 137+ 9F65 35               dec (hl)
 138+ 9F66
 139+ 9F66              ;   Puntero de impresión del disparo en BC , (1 scanline libre entre la entidad y el disparo).
 140+ 9F66
 141+ 9F66 2A 29 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 142+ 9F69 CD AB 90     1 call Extrae_address
 143+ 9F6C
 144+ 9F6C              ;   Comprobamos si la caja está vacía.
 145+ 9F6C
 146+ 9F6C 23               inc hl
 147+ 9F6D 7E               ld a,(hl)
 148+ 9F6E A7               and a
 149+ 9F6F
 150+ 9F6F 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 151+ 9F71
 152+ 9F71              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 153+ 9F71
 154+ 9F71 2B               dec hl
 155+ 9F72
 156+ 9F72 FD 7D            ld a,iyl
 157+ 9F74 77               ld (hl),a
 158+ 9F75 23               inc hl
 159+ 9F76 FD 7C            ld a,iyh
 160+ 9F78 77               ld (hl),a
 161+ 9F79 23               inc hl                                              ; Guarda el puntero objeto del disparo en la caja.
 162+ 9F7A
 163+ 9F7A 71               ld (hl),c
 164+ 9F7B 23               inc hl
 165+ 9F7C 70               ld (hl),b
 166+ 9F7D 23               inc hl                                              ; Guarda el puntero de impresión.
 167+ 9F7E
 168+ 9F7E 3A BE 8B         ld a,(Velocidad)                                    ; Byte bajo de Control guarda la velocidad de la entidad/disparo.
 169+ 9F81 77               ld (hl),a
 170+ 9F82
 171+ 9F82 23               inc hl
 172+ 9F83
 173+ 9F83              ;! Ajusta el grado de inclinación del disparo.
 174+ 9F83
 175+ 9F83 36 07            ld (hl),7
 176+ 9F85
 177+ 9F85              ; Determina tendencia del disparo.
 178+ 9F85
 179+ 9F85 3A 6E 89         ld a,(CX_Amadeus)
 180+ 9F88 47               ld b,a
 181+ 9F89 3A B4 8B         ld a,(Coordenada_X)
 182+ 9F8C 90               sub b
 183+ 9F8D 38 07            jr c,Disparo_a_derecha
 184+ 9F8F
 185+ 9F8F FE 04        Disparo_a_izquierda cp 4
 186+ 9F91
 187+ 9F91 D8               ret c
 188+ 9F92 C8               ret z
 189+ 9F93
 190+ 9F93 CB FE            set 7,(hl)
 191+ 9F95 C9               ret
 192+ 9F96
 193+ 9F96 47           Disparo_a_derecha ld b,a
 194+ 9F97 3E FF            ld a,$ff
 195+ 9F99 90               sub b
 196+ 9F9A
 197+ 9F9A FE 04            cp 4
 198+ 9F9C
 199+ 9F9C D8               ret c
 200+ 9F9D C8               ret z
 201+ 9F9E
 202+ 9F9E CB F6            set 6,(hl)
 203+ 9FA0 C9               ret
 204+ 9FA1
 205+ 9FA1              ;   --- --- ---
 206+ 9FA1
 207+ 9FA1              Situa_en_siguiente_disparo
 208+ 9FA1
 209+ 9FA1 13               inc de
 210+ 9FA2 13               inc de
 211+ 9FA3
 212+ 9FA3 EB               ex de,hl
 213+ 9FA4 18 C3            jr 1B
 214+ 9FA6
 215+ 9FA6              ; --------------------------------------------------------------------------------------
 216+ 9FA6              ;
 217+ 9FA6              ;   31/08/24
 218+ 9FA6              ;
 219+ 9FA6
 220+ 9FA6              Compara_con_coordenadas_de_disparo
 221+ 9FA6
 222+ 9FA6 3A B5 8B         ld a,(Coordenada_y)
 223+ 9FA9 47               ld b,a
 224+ 9FAA 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 225+ 9FAD 90               sub b
 226+ 9FAE
 227+ 9FAE              ; A = "0" ok
 228+ 9FAE              ; A = "1" ok
 229+ 9FAE
 230+ 9FAE 28 08            jr z,Comprueba_coordenada_X
 231+ 9FB0 3D               dec a
 232+ 9FB1 28 05            jr z,Comprueba_coordenada_X
 233+ 9FB3
 234+ 9FB3              ; A = "$ff" ok
 235+ 9FB3
 236+ 9FB3 FE FE            cp $fe
 237+ 9FB5 28 01            jr z,Comprueba_coordenada_X
 238+ 9FB7
 239+ 9FB7 C9               ret
 240+ 9FB8
 241+ 9FB8              Comprueba_coordenada_X
 242+ 9FB8
 243+ 9FB8 3A B4 8B         ld a,(Coordenada_X)
 244+ 9FBB 47               ld b,a
 245+ 9FBC 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 246+ 9FBF 7E               ld a,(hl)
 247+ 9FC0 90               sub b
 248+ 9FC1
 249+ 9FC1              ; A = "0" ok
 250+ 9FC1              ; A = "1" ok
 251+ 9FC1
 252+ 9FC1 28 09            jr z,Activa_Impacto_en_entidad
 253+ 9FC3 3D               dec a
 254+ 9FC4 28 06            jr z,Activa_Impacto_en_entidad
 255+ 9FC6
 256+ 9FC6              ; A = "2" ok
 257+ 9FC6
 258+ 9FC6 3D               dec a
 259+ 9FC7 28 03            jr z,Activa_Impacto_en_entidad
 260+ 9FC9
 261+ 9FC9              ; A = "$ff"
 262+ 9FC9
 263+ 9FC9 FE FD            cp $fd
 264+ 9FCB C0               ret nz
 265+ 9FCC
 266+ 9FCC              Activa_Impacto_en_entidad
 267+ 9FCC
 268+ 9FCC              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 269+ 9FCC
 270+ 9FCC 3E 02            ld a,2
 271+ 9FCE 32 B7 8B         ld (Impacto),a
 272+ 9FD1
 273+ 9FD1              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 274+ 9FD1
 275+ 9FD1 11 C0 87         ld de,Indice_Explosion_entidades
 276+ 9FD4 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 277+ 9FD7
 278+ 9FD7 73               ld (hl),e
 279+ 9FD8 23               inc hl
 280+ 9FD9 72               ld (hl),d
 281+ 9FDA
 282+ 9FDA              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 283+ 9FDA
 284+ 9FDA 21 2B 8C         ld hl,Impacto2
 285+ 9FDD CB 9E            res 3,(hl)
 286+ 9FDF
 287+ 9FDF C9               ret
 288+ 9FE0
 289+ 9FE0              ; --------------------------------------------------------------------------------------
 290+ 9FE0              ;
 291+ 9FE0              ;   11/09/24
 292+ 9FE0              ;
 293+ 9FE0
 294+ 9FE0              Limpia_album_de_borrado_disparos
 295+ 9FE0
 296+ 9FE0 21 28 8C         ld hl,Ctrl_5
 297+ 9FE3 CB 46            bit 0,(hl)
 298+ 9FE5 C8               ret z
 299+ 9FE6 CB 86            res 0,(hl)
 300+ 9FE8
 301+ 9FE8              Limpiando
 302+ 9FE8
 303+ 9FE8 AF               xor a
 304+ 9FE9 2A 0E 8C         ld hl,(Album_de_borrado_disparos)
 305+ 9FEC 77               ld (hl),a
 306+ 9FED 5D               ld e,l
 307+ 9FEE 54               ld d,h
 308+ 9FEF 1C               inc e                                           ; DE = HL+1
 309+ 9FF0 01 3A 00         ld bc,$003a
 310+ 9FF3 ED B0            ldir
 311+ 9FF5
 312+ 9FF5 C9               ret
 313+ 9FF6
 314+ 9FF6
 315+ 9FF6              ; --------------------------------------------------------------------------------------
 316+ 9FF6              ;
 317+ 9FF6              ;   26/08/24
 318+ 9FF6              ;
 319+ 9FF6
 320+ 9FF6              Calcula_bytes_pintado_disparos
 321+ 9FF6
 322+ 9FF6 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 323+ 9FF9 45               ld b,l
 324+ 9FFA 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 325+ 9FFD 7D               ld a,l
 326+ 9FFE
 327+ 9FFE 90               sub b
 328+ 9FFF 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 329+ A002
 330+ A002 C9               ret
 331+ A003
 332+ A003              ; --------------------------------------------------------------------------------------
 333+ A003              ;
 334+ A003              ;   11/09/24
 335+ A003              ;
 336+ A003              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 337+ A003              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 338+ A003              ;   _disparos que el álbum del FRAME actual).
 339+ A003
 340+ A003              Limpia_album_de_pintado_disparos
 341+ A003
 342+ A003              ;*   Exclusiones.
 343+ A003
 344+ A003 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 345+ A006 A7               and a
 346+ A007 C8               ret z
 347+ A008
 348+ A008              ; -----
 349+ A008
 350+ A008 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 351+ A00B 47               ld b,a
 352+ A00C 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 353+ A00F
 354+ A00F 90               sub b
 355+ A010
 356+ A010 C8               ret z
 357+ A011 D8               ret c
 358+ A012
 359+ A012 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 360+ A015 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 361+ A016 AF               xor a                                                               ; "0".
 362+ A017
 363+ A017 77           1 ld (hl),a
 364+ A018 2C               inc l
 365+ A019 10 FC            djnz 1B
 366+ A01B
 367+ A01B C9               ret
 368+ A01C
 369+ A01C              ; --------------------------------------------------------------------------------------
 370+ A01C              ;
 371+ A01C              ;   27/08/24
 372+ A01C              ;
 373+ A01C
 374+ A01C              Motor_Disparos
 375+ A01C
 376+ A01C              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 377+ A01C
 378+ A01C 21 20 89         ld hl,Disparo_Amad+1
 379+ A01F
 380+ A01F 34               inc (hl)
 381+ A020 35               dec (hl)
 382+ A021
 383+ A021 28 06            jr z,2F
 384+ A023
 385+ A023              ;   Esta caja contiene un disparo.
 386+ A023
 387+ A023 CD 45 A0         call Consulta_Impacto
 388+ A026 CC 5E A0         call z,Mueve_disparo_Amadeus
 389+ A029
 390+ A029              ; Disparos de entidades.
 391+ A029
 392+ A029 3A 14 8C     2 ld a,(Numero_de_disparos_de_entidades)
 393+ A02C A7               and a
 394+ A02D C8               ret z
 395+ A02E
 396+ A02E 06 07            ld b,7                                                               ; Contador de disparos.
 397+ A030 21 23 89         ld hl,Indice_de_disparos_entidades
 398+ A033
 399+ A033 CD AB 90     4 call Extrae_address
 400+ A036 13               inc de
 401+ A037 13               inc de
 402+ A038 ED 53 17 8C      ld (Puntero_rancio_disparos_album),de
 403+ A03C
 404+ A03C 23               inc hl
 405+ A03D
 406+ A03D 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
 407+ A03E 35               dec (hl)
 408+ A03F 28 00            jr z,3F
 409+ A041
 410+ A041 EB           3 ex de,hl
 411+ A042 10 EF            djnz 4B
 412+ A044
 413+ A044 C9               ret
 414+ A045
 415+ A045              ; ----------------------
 416+ A045              ;
 417+ A045              ;
 418+ A045              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 419+ A045              ;
 420+ A045              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 421+ A045
 422+ A045
 423+ A045              Consulta_Impacto
 424+ A045
 425+ A045              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 426+ A045              ;   _sea lo más coherente posible.
 427+ A045
 428+ A045 E5               push hl
 429+ A046 2B               dec hl
 430+ A047 CD 46 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 431+ A04A E1               pop hl
 432+ A04B 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 433+ A04C
 434+ A04C C8               ret z
 435+ A04D
 436+ A04D 3A 2B 8C         ld a,(Impacto2)
 437+ A050 CB DF            set 3,a
 438+ A052 32 2B 8C         ld (Impacto2),a
 439+ A055
 440+ A055 E5               push hl
 441+ A056 CD 33 A1         call Genera_coordenadas_de_disparo_Amadeus
 442+ A059 E1               pop hl
 443+ A05A CD 77 A0         call Elimina_disparo
 444+ A05D
 445+ A05D C9               ret
 446+ A05E
 447+ A05E              ; ----------------------
 448+ A05E              ;
 449+ A05E              ;
 450+ A05E              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 451+ A05E
 452+ A05E              Mueve_disparo_Amadeus
 453+ A05E
 454+ A05E CD AB 90         call Extrae_address
 455+ A061
 456+ A061 CD CF 99         call PreviousScan
 457+ A064 CD CF 99         call PreviousScan
 458+ A067 CD CF 99         call PreviousScan
 459+ A06A CD CF 99         call PreviousScan
 460+ A06D
 461+ A06D              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 462+ A06D
 463+ A06D 7C               ld a,h
 464+ A06E D6 40            sub $40
 465+ A070 EB               ex de,hl
 466+ A071 38 04            jr c,Elimina_disparo
 467+ A073
 468+ A073               ; Introduce nuevo puntero_de_impresión en la caja.
 469+ A073
 470+ A073 73               ld (hl),e
 471+ A074 23               inc hl
 472+ A075 72               ld (hl),d
 473+ A076
 474+ A076 C9               ret
 475+ A077
 476+ A077              ; ----------------------
 477+ A077              ;
 478+ A077              ;   11/9/24
 479+ A077
 480+ A077              Elimina_disparo
 481+ A077
 482+ A077              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 483+ A077              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 484+ A077
 485+ A077              ;   Disparo_1A defw 0									; Puntero objeto.
 486+ A077              ;   	defw 0											; Puntero de impresión.
 487+ A077
 488+ A077 2B               dec hl
 489+ A078 2B               dec hl
 490+ A079
 491+ A079 AF               xor a
 492+ A07A 77               ld (hl),a
 493+ A07B 23               inc hl
 494+ A07C 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 495+ A07D
 496+ A07D 23               inc hl
 497+ A07E 77               ld (hl),a
 498+ A07F 23               inc hl
 499+ A080 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 500+ A081
 501+ A081 3E 01            ld a,1
 502+ A083 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 503+ A086
 504+ A086 21 28 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 505+ A089 CB C6            set 0,(hl)
 506+ A08B
 507+ A08B AF               xor a
 508+ A08C 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 509+ A08D
 510+ A08D C9               ret
 511+ A08E
 512+ A08E              ; --------------------------------------------------------------------------------------
 513+ A08E              ;
 514+ A08E              ;   21/8/24
 515+ A08E              ;
 516+ A08E
 517+ A08E              Pinta_disparos
 518+ A08E
 519+ A08E 3A 28 8C         ld a,(Ctrl_5)
 520+ A091 CB 57            bit 2,a
 521+ A093 20 FE            jr nz,$
 522+ A095
 523+ A095 ED 73 00 8C      ld (Stack),sp
 524+ A099 06 02            ld b,2
 525+ A09B
 526+ A09B ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 527+ A09F
 528+ A09F D1           2 pop de
 529+ A0A0
 530+ A0A0 14               inc d
 531+ A0A1 15               dec d
 532+ A0A2
 533+ A0A2 28 1B            jr z,1F
 534+ A0A4
 535+ A0A4              Imprime_scanlines_de_disparo
 536+ A0A4
 537+ A0A4 E1               pop hl
 538+ A0A5
 539+ A0A5              ; Puntero objeto en DE.
 540+ A0A5              ; Puntero_de_impresión en HL.
 541+ A0A5
 542+ A0A5              ; 1er scanline.
 543+ A0A5
 544+ A0A5 1A               ld a,(de)
 545+ A0A6 AE               xor (hl)
 546+ A0A7 77               ld (hl),a
 547+ A0A8
 548+ A0A8 13               inc de
 549+ A0A9 2C               inc l
 550+ A0AA
 551+ A0AA 1A               ld a,(de)
 552+ A0AB AE               xor (hl)
 553+ A0AC 77               ld (hl),a
 554+ A0AD
 555+ A0AD              ; 2º scanline.
 556+ A0AD
 557+ A0AD E1               pop hl
 558+ A0AE 1B               dec de
 559+ A0AF
 560+ A0AF 1A               ld a,(de)
 561+ A0B0 AE               xor (hl)
 562+ A0B1 77               ld (hl),a
 563+ A0B2
 564+ A0B2 13               inc de
 565+ A0B3 2C               inc l
 566+ A0B4
 567+ A0B4 1A               ld a,(de)
 568+ A0B5 AE               xor (hl)
 569+ A0B6 77               ld (hl),a
 570+ A0B7
 571+ A0B7              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 572+ A0B7
 573+ A0B7 18 E6            jr 2B
 574+ A0B9
 575+ A0B9 ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 576+ A0BD 18 E0            jr 2B
 577+ A0BF
 578+ A0BF 10 F8        1 djnz 3B
 579+ A0C1 ED 7B 00 8C      ld sp,(Stack)
 580+ A0C5 C9               ret
 581+ A0C6
 582+ A0C6              ; --------------------------------------------------------------------------------------
 583+ A0C6              ;
 584+ A0C6              ;   14/09/24
 585+ A0C6              ;
 586+ A0C6              ;   Modifica: HL y DE.
 587+ A0C6
 588+ A0C6
 589+ A0C6              Genera_datos_de_impresion_disparos_Amadeus
 590+ A0C6
 591+ A0C6 ED 73 00 8C      ld (Stack),sp
 592+ A0CA 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 593+ A0CD D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 594+ A0CE
 595+ A0CE 14               inc d                                                     ;? Salimos si no hay disparo.
 596+ A0CF 15               dec d
 597+ A0D0
 598+ A0D0 28 12            jr z,Salida
 599+ A0D2
 600+ A0D2              Genera_scanlines_de_disparo_Amadeus
 601+ A0D2
 602+ A0D2 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 603+ A0D3              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 604+ A0D3 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 605+ A0D7
 606+ A0D7 C1               pop bc
 607+ A0D8 C1               pop bc
 608+ A0D9 C1               pop bc
 609+ A0DA
 610+ A0DA ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 611+ A0DE
 612+ A0DE E5               push hl                                                   ;? Sube 2º scanline al álbum.
 613+ A0DF CD CF 99         call PreviousScan
 614+ A0E2 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 615+ A0E3 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 616+ A0E4
 617+ A0E4              Salida
 618+ A0E4
 619+ A0E4 ED 7B 00 8C      ld sp,(Stack)
 620+ A0E8 C9               ret
 621+ A0E9
 622+ A0E9              ; --------------------------------------------------------------------------------------
 623+ A0E9              ;
 624+ A0E9              ;   12/09/24
 625+ A0E9              ;
 626+ A0E9
 627+ A0E9              Genera_disparo_Amadeus
 628+ A0E9
 629+ A0E9              ;*  Exclusiones.
 630+ A0E9
 631+ A0E9 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 632+ A0EC A7               and a
 633+ A0ED C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 634+ A0EE
 635+ A0EE 3D               dec a
 636+ A0EF 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 637+ A0F2
 638+ A0F2              Define_puntero_objeto_disparo
 639+ A0F2
 640+ A0F2              ;   Inicializamos contador.
 641+ A0F2
 642+ A0F2 06 00            ld b,0
 643+ A0F4
 644+ A0F4 2A 72 89         ld hl,(p.imp.amadeus)
 645+ A0F7 2C               inc l
 646+ A0F8
 647+ A0F8 3E 80            ld a,$80
 648+ A0FA BE               cp (hl)
 649+ A0FB 28 0D            jr z,1F
 650+ A0FD
 651+ A0FD 04               inc b
 652+ A0FE
 653+ A0FE 3E 60            ld a,$60
 654+ A100 BE               cp (hl)
 655+ A101 28 07            jr z,1F
 656+ A103
 657+ A103
 658+ A103 04               inc b
 659+ A104
 660+ A104 3E 18            ld a,$18
 661+ A106 BE               cp (hl)
 662+ A107 28 01            jr z,1F
 663+ A109
 664+ A109 04               inc b
 665+ A10A
 666+ A10A              ;   Calcula el Puntero_de_impresión del disparo.
 667+ A10A
 668+ A10A              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 669+ A10A
 670+ A10A CD CF 99     1 call PreviousScan
 671+ A10D
 672+ A10D 78               ld a,b
 673+ A10E CB 3F            srl a
 674+ A110 28 03            jr z,4F
 675+ A112
 676+ A112              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 677+ A112 E5               push hl
 678+ A113 18 02            jr 5F
 679+ A115 2D           4 dec l
 680+ A116 E5               push hl
 681+ A117              ; ---
 682+ A117
 683+ A117              ;   Calcula el Puntero_objeto del disparo.
 684+ A117
 685+ A117 21 72 83     5 ld hl,Indice_disparo_Amadeus
 686+ A11A 04               inc b
 687+ A11B 05               dec b
 688+ A11C 28 04            jr z,2F
 689+ A11E
 690+ A11E              ;   Nos desplazamos por el índice de disparos.
 691+ A11E
 692+ A11E 2C           3 inc l
 693+ A11F 2C               inc l
 694+ A120 10 FC            djnz 3B
 695+ A122
 696+ A122              ; --- Guarda el Puntero_objeto del disparo en la pila.
 697+ A122 CD AB 90     2 call Extrae_address
 698+ A125 E5               push hl
 699+ A126              ; ---
 700+ A126
 701+ A126              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 702+ A126              ; HL en el 1er .db de la caja.
 703+ A126
 704+ A126 21 1F 89         ld hl,Disparo_Amad
 705+ A129
 706+ A129 06 02            ld b,2
 707+ A12B
 708+ A12B D1           6 pop de
 709+ A12C 73               ld (hl),e
 710+ A12D 23               inc hl
 711+ A12E 72               ld (hl),d
 712+ A12F 23               inc hl
 713+ A130
 714+ A130 10 F9            djnz 6B
 715+ A132
 716+ A132 C9               ret
 717+ A133
 718+ A133              Genera_coordenadas_de_disparo_Amadeus
 719+ A133
 720+ A133              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 721+ A133              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 722+ A133              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 723+ A133
 724+ A133 CD AB 90         call Extrae_address
 725+ A136 CD CA 94         call Genera_coordenadas
 726+ A139
 727+ A139 3D               dec a
 728+ A13A
 729+ A13A 21 2E 8C         ld hl,Coordenadas_disparo_certero
 730+ A13D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 731+ A13E 23               inc hl
 732+ A13F 3A B4 8B         ld a,(Coordenada_X)
 733+ A142 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 734+ A143
 735+ A143 AF               xor a
 736+ A144 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 737+ A145
 738+ A145 C9               ret
 739+ A146
 740+ A146              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 741+ A146              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 742+ A146              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 743+ A146
 744+ A146              ; ----------------------------------------------
 745+ A146              ;
 746+ A146              ;   27/08/24
 747+ A146              ;
 748+ A146              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 749+ A146              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 750+ A146
 751+ A146              Detecta_impacto_en_disparo_de_Amadeus
 752+ A146
 753+ A146              Extraccion_de_datos
 754+ A146
 755+ A146 13               inc de
 756+ A147 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 757+ A148
 758+ A148 5E               ld e,(hl)
 759+ A149 23               inc hl
 760+ A14A 56               ld d,(hl)
 761+ A14B
 762+ A14B 23               inc hl
 763+ A14C
 764+ A14C 4E               ld c,(hl)
 765+ A14D 23               inc hl
 766+ A14E 46               ld b,(hl)
 767+ A14F
 768+ A14F C5               push bc
 769+ A150 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 770+ A151
 771+ A151              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 772+ A151
 773+ A151 CD CF 99         call PreviousScan
 774+ A154 CD CF 99         call PreviousScan
 775+ A157
 776+ A157              Detecta_impacto_
 777+ A157
 778+ A157 1A               ld a,(de)
 779+ A158 A6               and (hl)
 780+ A159 C0               ret nz
 781+ A15A
 782+ A15A 13               inc de
 783+ A15B 23               inc hl
 784+ A15C
 785+ A15C 1A               ld a,(de)
 786+ A15D A6               and (hl)
 787+ A15E C9               ret
 788+ A15F
 789+ A15F              ; -------------------------------------------------------------------------------------------------------------
 790+ A15F              ;
 791+ A15F              ;   8/8/24
 792+ A15F              ;
 793+ A15F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 794+ A15F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 795+ A15F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 796+ A15F              ;
 797+ A15F              ;   MODIFICA: HL,DE,BC y A.
 798+ A15F              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 799+ A15F              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 800+ A15F
 801+ A15F              Colision_Entidad_Amadeus
 802+ A15F
 803+ A15F              ; Posible contacto de entidad con Amadeus. ?????
 804+ A15F
 805+ A15F              ; Exclusiones:
 806+ A15F
 807+ A15F 3A 4E 8C         ld a,(Shield)
 808+ A162 A7               and a
 809+ A163 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 810+ A164
 811+ A164 21 26 8C         ld hl,Ctrl_3
 812+ A167 CB 76            bit 6,(hl)
 813+ A169 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 814+ A16A
 815+ A16A 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 816+ A16D CB 56            bit 2,(hl)
 817+ A16F C0               ret nz
 818+ A170
 819+ A170 3A B5 8B     	ld a,(Coordenada_y)
 820+ A173 FE 14        	cp $14
 821+ A175 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 822+ A176
 823+ A176 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 824+ A179 A7               and a
 825+ A17A C0               ret nz
 826+ A17B
 827+ A17B              Genera_coordenadas_X
 828+ A17B
 829+ A17B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 830+ A17B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 831+ A17B
 832+ A17B              ;   Limpiamos almacenes.
 833+ A17B
 834+ A17B              ;    call Limpia_Coordenadas_X
 835+ A17B
 836+ A17B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 837+ A17B
 838+ A17B 21 30 8C         ld hl,Coordenadas_X_Entidad
 839+ A17E 3A B4 8B         ld a,(Coordenada_X)
 840+ A181 CD A3 A1         call Guarda_coordenadas_X
 841+ A184
 842+ A184              ;   Almacenamos las coordenadas X de Amadeus.
 843+ A184
 844+ A184 3A 6E 89         ld a,(CX_Amadeus)
 845+ A187 CD A3 A1         call Guarda_coordenadas_X
 846+ A18A CD B7 A1         call Compara_coordenadas_X
 847+ A18D C0               ret nz
 848+ A18E
 849+ A18E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 850+ A190 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 851+ A193
 852+ A193 2A F3 8B         ld hl,(Puntero_store_caja)
 853+ A196 2C               inc l
 854+ A197 2C               inc l
 855+ A198 2C               inc l
 856+ A199 2C               inc l
 857+ A19A 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 858+ A19D
 859+ A19D 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 860+ A1A0 CB D6            set 2,(hl)
 861+ A1A2
 862+ A1A2 C9               ret
 863+ A1A3
 864+ A1A3               ; ----- ----- ----- ----- -----
 865+ A1A3
 866+ A1A3 77           Guarda_coordenadas_X ld (hl),a
 867+ A1A4 3C               inc a
 868+ A1A5 2C               inc l
 869+ A1A6 77               ld (hl),a
 870+ A1A7 3C               inc a
 871+ A1A8 2C               inc l
 872+ A1A9 77               ld (hl),a
 873+ A1AA 2C               inc l
 874+ A1AB C9               ret
 875+ A1AC
 876+ A1AC AF           Limpia_Coordenadas_X xor a
 877+ A1AD 06 06            ld b,6
 878+ A1AF 21 33 8C         ld hl,Coordenadas_X_Amadeus
 879+ A1B2 77           1 ld (hl),a
 880+ A1B3 23               inc hl
 881+ A1B4 10 FC            djnz 1B
 882+ A1B6 C9               ret
 883+ A1B7
 884+ A1B7              ; ----- ----- ----- ----- -----
 885+ A1B7
 886+ A1B7              Compara_coordenadas_X
 887+ A1B7
 888+ A1B7 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 889+ A1BB DD 7E 00         ld a,(ix+0)
 890+ A1BE CD CC A1         call Comparando
 891+ A1C1 C8               ret z
 892+ A1C2
 893+ A1C2 3C               inc a
 894+ A1C3 CD DB A1         call Comparando_1
 895+ A1C6 C8               ret z
 896+ A1C7
 897+ A1C7 3C               inc a
 898+ A1C8 CD DB A1         call Comparando_1
 899+ A1CB C9               ret
 900+ A1CC
 901+ A1CC              ; ----- ----- ----- ----- -----
 902+ A1CC              ;
 903+ A1CC              ;   4/12/23
 904+ A1CC              ;
 905+ A1CC              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 906+ A1CC
 907+ A1CC              Comparando
 908+ A1CC
 909+ A1CC DD 2C            inc ixl
 910+ A1CE DD 2C            inc ixl
 911+ A1D0 DD 2C            inc ixl
 912+ A1D2
 913+ A1D2 DD 46 00         ld b,(ix+0)
 914+ A1D5 DD 4E 01         ld c,(ix+1)
 915+ A1D8 DD 56 02         ld d,(ix+2)
 916+ A1DB
 917+ A1DB B8           Comparando_1 cp b
 918+ A1DC C8               ret z
 919+ A1DD B9               cp c
 920+ A1DE C8               ret z
 921+ A1DF BA               cp d
 922+ A1E0 C9               ret
 923+ A1E1
 924+ A1E1              ; -----------------------------------------------------------------------
 925+ A1E1              ;
 926+ A1E1              ;   04/7/24
 927+ A1E1              ;
 928+ A1E1
 929+ A1E1              Detecta_colision_nave_entidad
 930+ A1E1
 931+ A1E1              ; Exclusiones:
 932+ A1E1
 933+ A1E1              ; Salimos de la rutina si no hay advertencia de posible colisión.
 934+ A1E1
 935+ A1E1 21 2B 8C     	ld hl,Impacto2
 936+ A1E4 CB 56        	bit 2,(hl)
 937+ A1E6 C8           	ret z
 938+ A1E7
 939+ A1E7              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 940+ A1E7
 941+ A1E7 2A 74 89         ld hl,(Pamm_Amadeus)
 942+ A1EA CD AB 90         call Extrae_address
 943+ A1ED 54               ld d,h
 944+ A1EE 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 945+ A1EF
 946+ A1EF 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 947+ A1F2 06 10            ld b,16                                        ; Contador de scanlines en B.
 948+ A1F4 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 949+ A1F7
 950+ A1F7 C5           1 push bc
 951+ A1F8 06 03            ld b,3
 952+ A1FA E5               push hl
 953+ A1FB
 954+ A1FB              ; .db
 955+ A1FB
 956+ A1FB 1A           3 ld a,(de)
 957+ A1FC A7               and a
 958+ A1FD 20 03            jr nz,4F
 959+ A1FF
 960+ A1FF 2C               inc l
 961+ A200 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 962+ A202
 963+ A202 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 964+ A204 28 04            jr z,2F
 965+ A206
 966+ A206              ; Impacto.
 967+ A206 FD 2D            dec iyl
 968+ A208 28 22            jr z,5F
 969+ A20A
 970+ A20A 1C           2 inc e
 971+ A20B 10 EE            djnz 3B
 972+ A20D
 973+ A20D E1               pop hl
 974+ A20E
 975+ A20E              ; Hay salto de línea en el puntero de impresión ???
 976+ A20E
 977+ A20E 7C               ld a,h
 978+ A20F D6 57            sub $57
 979+ A211 20 0A            jr nz,6F
 980+ A213
 981+ A213              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 982+ A213
 983+ A213 2A 72 89         ld hl,(p.imp.amadeus)
 984+ A216 3E 20            ld a,$20
 985+ A218 A7               and a
 986+ A219 85               add l
 987+ A21A 6F               ld l,a
 988+ A21B 18 01            jr 7F
 989+ A21D
 990+ A21D 24           6 inc h
 991+ A21E
 992+ A21E C1           7 pop bc
 993+ A21F 10 D6            djnz 1B
 994+ A221
 995+ A221              ;   Fin de la comparativa.
 996+ A221
 997+ A221              ;   NO HAY COLISIÓN !!!!!.
 998+ A221              ;
 999+ A221              ;   .db (Impacto) de Amadeus a "0".
1000+ A221              ;   RES el bit2 de (Impacto2).
1001+ A221              ;
1002+ A221              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1003+ A221              ;   Lo colocamos a "0".
1004+ A221
1005+ A221 21 2B 8C         ld hl,Impacto2
1006+ A224 CB 96            res 2,(hl)
1007+ A226 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1008+ A229 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1009+ A22B C9               ret
1010+ A22C
1011+ A22C              ;   COLISIÓN !!!!!.
1012+ A22C              ;
1013+ A22C              ;   .db (Impacto) de Amadeus a "1".
1014+ A22C              ;   SET el bit3 de (Impacto2).
1015+ A22C              ;
1016+ A22C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1017+ A22C
1018+ A22C E1           5 pop hl
1019+ A22D C1               pop bc
1020+ A22E
1021+ A22E 21 71 89         ld hl,Impacto_Amadeus
1022+ A231 36 01            ld (hl),1
1023+ A233 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1024+ A236 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1025+ A238
1026+ A238 11 C0 87         ld de,Indice_Explosion_entidades
1027+ A23B 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1028+ A23E
1029+ A23E 23               inc hl
1030+ A23F 23               inc hl
1031+ A240 23               inc hl
1032+ A241
1033+ A241 73               ld (hl),e
1034+ A242 23               inc hl
1035+ A243 72               ld (hl),d
1036+ A244
1037+ A244              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1038+ A244
1039+ A244 11 60 88         ld de,Indice_Explosion_Amadeus
1040+ A247 21 74 89         ld hl,Pamm_Amadeus
1041+ A24A
1042+ A24A 73               ld (hl),e
1043+ A24B 23               inc hl
1044+ A24C 72               ld (hl),d
1045+ A24D
1046+ A24D C9               ret
1047+ A24E
1048+ A24E
1049+ A24E
# file closed: Disparo.asm
2176  A24E
2177  A24E              	SAVESNA "Pruebas.sna", START
2178  A24E
2179  A24E
2180  A24E
2181  A24E
# file closed: Banco_de_pruebas.asm
