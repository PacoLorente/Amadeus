# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 62 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD C8 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 93 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8B 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD AD 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 89 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 89 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 8C 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD CB 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 18								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 8912
  20+ 8912              ;	db 0, defw 0
  21+ 8912              ;	db 0, defw 0
  22+ 8912              ;	db 0, defw 0
  23+ 8912              ;	db 0, defw 0
  24+ 8912              ;	db 0, defw 0
  25+ 8912              ;	db 0, defw 0
  26+ 8912              ;	db 0, defw 0
  27+ 8912
  28+ 8912 C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 8914 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 8916              ;	defw ...
  31+ 8916              ; 	defw ...
  32+ 8916 00 00        	defw 0
  33+ 8918
  34+ 8918 37 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 891A              ;	defw ...
  36+ 891A              ; 	defw ...
  37+ 891A 00 00        	defw 0
  38+ 891C
  39+ 891C              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 891C
  41+ 891C 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 891E 00 00        	defw 0											; Puntero de impresión.
  43+ 8920
  44+ 8920 57 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 8922 51 89        	defw Disparo_2
  46+ 8924 4B 89        	defw Disparo_3
  47+ 8926 45 89        	defw Disparo_4
  48+ 8928 3F 89        	defw Disparo_5
  49+ 892A 39 89        	defw Disparo_6
  50+ 892C 33 89        	defw Disparo_7
  51+ 892E
  52+ 892E 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 8931 00 00        	defw 0									; Puntero de impresión.
  54+ 8933 00           Disparo_7 db 0	     						; Control.
  55+ 8934
  56+ 8934 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8937 00 00        	defw 0									; Puntero de impresión.
  58+ 8939 00           Disparo_6 db 0		    					; Control.
  59+ 893A
  60+ 893A 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 893D 00 00        	defw 0									; Puntero de impresión.
  62+ 893F 00           Disparo_5 db 0			    				; Control.
  63+ 8940
  64+ 8940 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 8943 00 00        	defw 0									; Puntero de impresión.
  66+ 8945 00           Disparo_4 db 0				     			; Control.
  67+ 8946
  68+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8949 00 00        	defw 0									; Puntero de impresión.
  70+ 894B 00           Disparo_3 db 0					    		; Control.
  71+ 894C
  72+ 894C 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 894F 00 00        	defw 0									; Puntero de impresión.
  74+ 8951 00           Disparo_2 db 0						    	; Control.
  75+ 8952
  76+ 8952 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 8955 00 00        	defw 0									; Puntero de impresión.
  78+ 8957 00           Disparo_1 db 0							    ; Control.
  79+ 8958
  80+ 8958              ; -------------------------------------------------------------------------------------
  81+ 8958              ;
  82+ 8958              ;	Índice de cajas_Masters.
  83+ 8958              ;
  84+ 8958              ;	11/11/24
  85+ 8958              ;
  86+ 8958              ;	12 bytes.
  87+ 8958
  88+ 8958              Indice_de_cajas_master
  89+ 8958
  90+ 8958 62 89        	defw Caja_master_1
  91+ 895A 6E 89        	defw Caja_master_2
  92+ 895C 7A 89        	defw Caja_master_3
  93+ 895E 86 89        	defw Caja_master_4
  94+ 8960 92 89        	defw Caja_master_5
  95+ 8962
  96+ 8962 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 8965 00           	db 0												; (Contador_de_vueltas).
  98+ 8966 00           	db 0												; (Impacto).
  99+ 8967 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8969 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 896B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 896D 00           	db 0												; (Velocidad).
 103+ 896E
 104+ 896E              ; ---------- ---------- ---------- ---------- ----------
 105+ 896E
 106+ 896E 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 8971 00           	db 0 												; (Contador_de_vueltas).
 108+ 8972 00           	db 0												; (Impacto).
 109+ 8973 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 8975 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8977 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8979 00           	db 0												; (Velocidad).
 113+ 897A
 114+ 897A              ; ---------- ---------- ---------- ---------- ----------
 115+ 897A
 116+ 897A 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 897D 00           	db 0 												; (Contador_de_vueltas).
 118+ 897E 00           	db 0												; (Impacto).
 119+ 897F 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 8981 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 8983 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 8985 00           	db 0												; (Velocidad).
 123+ 8986
 124+ 8986              ; ---------- ---------- ---------- ---------- ----------
 125+ 8986
 126+ 8986 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8989 00           	db 0 												; (Contador_de_vueltas).
 128+ 898A 00           	db 0												; (Impacto).
 129+ 898B 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 898D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 898F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 8991 00           	db 0												; (Velocidad).
 133+ 8992
 134+ 8992              ; ---------- ---------- ---------- ---------- ----------
 135+ 8992
 136+ 8992 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 8995 00           	db 0 												; (Contador_de_vueltas).
 138+ 8996 00           	db 0												; (Impacto).
 139+ 8997 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 8999 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 899B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 899D 00           	db 0												; (Velocidad).
 143+ 899E
 144+ 899E              ; -------------------------------------------------------------------------------------
 145+ 899E              ;
 146+ 899E              ;	Índice de cajas de entidades.
 147+ 899E              ;
 148+ 899E              ;	18/1/24
 149+ 899E              ;
 150+ 899E
 151+ 899E              Indice_de_cajas_de_entidades
 152+ 899E
 153+ 899E BA 89        	defw Caja_1
 154+ 89A0 C6 89        	defw Caja_2
 155+ 89A2 D2 89        	defw Caja_3
 156+ 89A4 DE 89        	defw Caja_4
 157+ 89A6 EA 89        	defw Caja_5
 158+ 89A8 00 8A        	defw Caja_6
 159+ 89AA              ;	defw Caja_7
 160+ 89AA
 161+ 89AA 00 00        	defw 0
 162+ 89AC 00 00        	defw 0
 163+ 89AE
 164+ 89AE              ; -------------------------
 165+ 89AE
 166+ 89AE              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89AE
 168+ 89AE              ;	db 0
 169+ 89AE
 170+ 89AE              ; ---------- ---------- ---------- ---------- ----------
 171+ 89AE              ;
 172+ 89AE              ;	28/05/24
 173+ 89AE              ;
 174+ 89AE              ; 	Cada caja tiene 14 bytes !!!
 175+ 89AE              ;
 176+ 89AE              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89AE
 178+ 89AE 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89AF 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89B1 00           	db 0												; (Contador_de_vueltas).
 181+ 89B2 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89B3 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89B5 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89B7 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89B9 00           	db 0												; (Velocidad).
 186+ 89BA
 187+ 89BA              ; ---------- ---------- ---------- ---------- ----------
 188+ 89BA              ;
 189+ 89BA              ;	22/01/24
 190+ 89BA              ;
 191+ 89BA              ; 	Cada caja tiene 12 bytes !!!
 192+ 89BA              ;
 193+ 89BA              ;	Para darle más velocidad al motor incrementamos sólo el byte bajo cuando trabajamos con las cajas de entidades. Este es el motivo del ORG antes de la última caja.
 194+ 89BA
 195+ 89BA
 196+ 89BA 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 197+ 89BD 00           	db 0												; (Contador_de_vueltas).
 198+ 89BE 00           	db 0												; (Impacto).
 199+ 89BF 00 00        	defw 0												; (Puntero_de_impresion).
 200+ 89C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 201+ 89C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 202+ 89C5 00           	db 0												; (Velocidad).
 203+ 89C6
 204+ 89C6              ; ---------- ---------- ---------- ---------- ----------
 205+ 89C6
 206+ 89C6 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 207+ 89C9 00           	db 0 												; (Contador_de_vueltas).
 208+ 89CA 00           	db 0												; (Impacto).
 209+ 89CB 00 00        	defw 0												; (Puntero_de_impresion).
 210+ 89CD 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 211+ 89CF 00 00        	defw 0 												; (Contador_de_mov_masticados).
 212+ 89D1 00           	db 0												; (Velocidad).
 213+ 89D2
 214+ 89D2              ; ---------- ---------- ---------- ---------- ----------
 215+ 89D2
 216+ 89D2 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 89D5 00           	db 0 												; (Contador_de_vueltas).
 218+ 89D6 00           	db 0												; (Impacto).
 219+ 89D7 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 89D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 89DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 89DD 00           	db 0												; (Velocidad).
 223+ 89DE
 224+ 89DE              ; ---------- ---------- ---------- ---------- ----------
 225+ 89DE
 226+ 89DE 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 227+ 89E1 00           	db 0 												; (Contador_de_vueltas).
 228+ 89E2 00           	db 0												; (Impacto).
 229+ 89E3 00 00        	defw 0												; (Puntero_de_impresion).
 230+ 89E5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 231+ 89E7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 232+ 89E9 00           	db 0												; (Velocidad).
 233+ 89EA
 234+ 89EA              ; ---------- ---------- ---------- ---------- ----------
 235+ 89EA
 236+ 89EA 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 237+ 89ED 00           	db 0 												; (Contador_de_vueltas).
 238+ 89EE 00           	db 0												; (Impacto).
 239+ 89EF 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 89F1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 89F3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 89F5 00           	db 0												; (Velocidad).
 243+ 89F6
 244+ 89F6              	org $8a00
 245+ 8A00
 246+ 8A00 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 247+ 8A03 00           	db 0 												; (Contador_de_vueltas).
 248+ 8A04 00           	db 0												; (Impacto).
 249+ 8A05 00 00        	defw 0												; (Puntero_de_impresion).
 250+ 8A07 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 251+ 8A09 00 00        	defw 0 												; (Contador_de_mov_masticados).
 252+ 8A0B 00           	db 0												; (Velocidad).
 253+ 8A0C
 254+ 8A0C              ; ---------- ---------- ---------- ---------- ----------
 255+ 8A0C
 256+ 8A0C              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 257+ 8A0C              ;	db 0 												; (Contador_de_vueltas).
 258+ 8A0C              ;	db 0												; (Impacto).
 259+ 8A0C              ;	defw 0												; (Puntero_de_impresion).
 260+ 8A0C              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 261+ 8A0C              ;	defw 0 												; (Contador_de_mov_masticados).
 262+ 8A0C              ;	db 0												; (Velocidad).
 263+ 8A0C
 264+ 8A0C              ; -------------------------------------------------------------------------------------
 265+ 8A0C              ;
 266+ 8A0C              ;	10/11/24
 267+ 8A0C              ;
 268+ 8A0C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 269+ 8A0C              ;
 270+ 8A0C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 271+ 8A0C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 272+ 8A0C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 273+ 8A0C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 274+ 8A0C
 275+ 8A0C              Indice_de_definiciones_de_entidades
 276+ 8A0C
 277+ 8A0C 10 8A        	defw Entidad_1
 278+ 8A0E 1D 8A        	defw Entidad_2
 279+ 8A10
 280+ 8A10              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 281+ 8A10
 282+ 8A10              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 283+ 8A10
 284+ 8A10 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 285+ 8A13 01           	db 1												; (Contador_de_vueltas).
 286+ 8A14 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 287+ 8A16 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 288+ 8A18
 289+ 8A18              ; Aleatoriedad en la posición de inicio de la entidad.
 290+ 8A18              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 291+ 8A18
 292+ 8A18 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 293+ 8A1A 00           	db 0												; (Cuad_objeto).
 294+ 8A1B
 295+ 8A1B C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 296+ 8A1D
 297+ 8A1D              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 298+ 8A1D
 299+ 8A1D 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 300+ 8A20 01           	db 1												; (Contador_de_vueltas).
 301+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 302+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 303+ 8A25 40 50        	defw $5040                                      	; (Posicion_inicio).
 304+ 8A27 01           	db 1												; (Cuad_objeto).
 305+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 306+ 8A2A
 307+ 8A2A              ; -------------------------------------------------------------------------------------
 308+ 8A2A              ;
 309+ 8A2A              ;	28/05/24
 310+ 8A2A              ;
 311+ 8A2A              ;	Definición de Amadeus.
 312+ 8A2A              ;
 313+ 8A2A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 314+ 8A2A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 315+ 8A2A
 316+ 8A2A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 317+ 8A2D 00           	db 0												; (Contador_de_vueltas).
 318+ 8A2E C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 319+ 8A30 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 320+ 8A32 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 321+ 8A34 03           	db 3												; (Cuad_objeto).
 322+ 8A35 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A37              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A37
   2+ 8A37
   3+ 8A37              ;   07/07/23
   4+ 8A37              ;
   5+ 8A37              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A37              ;
   7+ 8A37              ;   Codificación:
   8+ 8A37              ;
   9+ 8A37              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A37              ;
  11+ 8A37              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A37              ;
  13+ 8A37              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A37              ;
  15+ 8A37              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A37              ;
  17+ 8A37              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A37              ;                               ..... %01000010 Vel_up 4
  19+ 8A37              ;                                               Vel_down 2
  20+ 8A37              ;                               ..... $42
  21+ 8A37              ;
  22+ 8A37              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A37              ;
  24+ 8A37              ;                               ..... %01000010 Vel_left 4
  25+ 8A37              ;                                               Vel_right 2
  26+ 8A37              ;                               ..... $42
  27+ 8A37              ;
  28+ 8A37              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A37              ;
  30+ 8A37              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A37              ;
  32+ 8A37              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A37              ;
  34+ 8A37              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A37              ;                                     $53
  36+ 8A37              ;
  37+ 8A37              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A37              ;
  39+ 8A37              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A37              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A37              ;
  42+ 8A37              ;                       Arriba ..... $81
  43+ 8A37              ;                       Arriba - izquierda ..... $a1
  44+ 8A37              ;                       Arriba - derecha ..... $91
  45+ 8A37              ;
  46+ 8A37              ;                       Abajo ..... $41
  47+ 8A37              ;                       Abajo - izquierda ..... $61
  48+ 8A37              ;                       Abajo - derecha ..... $51
  49+ 8A37              ;
  50+ 8A37              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A37              ;
  52+ 8A37              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A37              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A37              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A37              ;
  56+ 8A37              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A37              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A37              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A37              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A37              ;
  61+ 8A37              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A37              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A37              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A37              ;
  65+ 8A37              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A37              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A37              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A37              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A37
  70+ 8A37              ; ----- ----- ----- ----- -----
  71+ 8A37
  72+ 8A37 63 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A39 6B 8A            defw F_1
  74+ 8A3B 75 8A            defw F_2
  75+ 8A3D 7F 8A            defw Codo_abajo_derecha
  76+ 8A3F B3 8A            defw Derecha_y_subiendo
  77+ 8A41 BD 8A            defw Derecha_y_subiendo_1
  78+ 8A43 C7 8A            defw F_3
  79+ 8A45 D1 8A            defw F_4
  80+ 8A47 DB 8A            defw Derecha_y_bajando
  81+ 8A49 E5 8A            defw Derecha_y_bajando_1
  82+ 8A4B EF 8A            defw Derecha_y_bajando_2
  83+ 8A4D F9 8A            defw Codo_derecha_abajo
  84+ 8A4F 29 8B            defw Codo_abajo_izq.
  85+ 8A51 5D 8B            defw Izquierda_y_subiendo
  86+ 8A53 67 8B            defw Izquierda_y_subiendo_1
  87+ 8A55 71 8B            defw F_5
  88+ 8A57 7B 8B            defw F_6
  89+ 8A59 85 8B            defw Izquierda_y_bajando
  90+ 8A5B 8F 8B            defw Izquierda_y_bajando_1
  91+ 8A5D 99 8B            defw Izquierda_y_bajando_2
  92+ 8A5F A3 8B            defw Codo_izquierda_abajo
  93+ 8A61 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A63
  95+ 8A63 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A67 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6B
  98+ 8A6B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A73 08 00
 100+ 8A75
 101+ 8A75 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A79 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7D 0F FE
 103+ 8A7F
 104+ 8A7F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A83 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A87 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A93 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB3
 118+ 8AB3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABB 06 00
 120+ 8ABD
 121+ 8ABD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC5 02 00
 123+ 8AC7
 124+ 8AC7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACF 04 00
 126+ 8AD1
 127+ 8AD1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD9 08 00
 129+ 8ADB
 130+ 8ADB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE3 02 00
 132+ 8AE5
 133+ 8AE5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AED 06 00
 135+ 8AEF
 136+ 8AEF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF3 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF7 06 00
 138+ 8AF9
 139+ 8AF9              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF9
 141+ 8AF9 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B01 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B09 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B11 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B15 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B21 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B25 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B29
 154+ 8B29 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B31 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B35 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B39 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B45 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B49 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B51 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B55 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B59 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5D
 168+ 8B5D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B61 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B65 06 00
 170+ 8B67
 171+ 8B67 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6F 02 00
 173+ 8B71
 174+ 8B71 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B75 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B79 04 00
 176+ 8B7B
 177+ 8B7B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B83 08 00
 179+ 8B85
 180+ 8B85 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B89 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8D 02 00
 182+ 8B8F
 183+ 8B8F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B93 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B97 06 00
 185+ 8B99
 186+ 8B99 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9D 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA1 06 00
 188+ 8BA3
 189+ 8BA3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD3
 202+ 8BD3
 203+ 8BD3
 204+ 8BD3
 205+ 8BD3
 206+ 8BD3
 207+ 8BD3
 208+ 8BD3
 209+ 8BD3
 210+ 8BD3
# file closed: Patrones_de_mov.asm
 149  8BD3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD3              ; 19/1/24
   2+ 8BD3
   3+ 8BD3              Indice_de_niveles
   4+ 8BD3
   5+ 8BD3 DB 8B        	defw Nivel_1
   6+ 8BD5 DE 8B        	defw Nivel_2
   7+ 8BD7
   8+ 8BD7              ;	...
   9+ 8BD7              ;	...
  10+ 8BD7              ;	+ Niveles ...
  11+ 8BD7
  12+ 8BD7 00 00        	defw 0
  13+ 8BD9 00 00        	defw 0
  14+ 8BDB
  15+ 8BDB 02           Nivel_1 db 2									; Nº de entidades.
  16+ 8BDC 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BDE              ;	db 1,1,1,1,1
  18+ 8BDE              ;	db 1,1,1,1,1
  19+ 8BDE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BDF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 8BE3 01 02
  21+ 8BE5 02 01 01 01  	db 2,1,1,1,1,2
  21+ 8BE9 01 02
  22+ 8BEB
# file closed: Niveles.asm
 150  8BEB
 151  8BEB              ; --------------------------------------------------------------------------------
 152  8BEB              ;
 153  8BEB              ; 12/05/24
 154  8BEB              ;
 155  8BEB              ; Parámetros DRAW.
 156  8BEB              ;
 157  8BEB
 158  8BEB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEB
 160  8BEB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEC              ;															- Patrón de movimiento.
 162  8BEC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BED 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BEE
 165  8BEE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BEF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BEF
 168  8BEF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BEF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BEF              ; Ejemplos.
 171  8BEF
 172  8BEF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BEF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BEF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BEF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BEF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BEF
 178  8BEF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF0
 182  8BF0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF2
 185  8BF2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF4
 187  8BF4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF4
 189  8BF4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF6              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF6
 192  8BF6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF6
 194  8BF6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BF7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BF7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BF7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BF7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BF7
 200  8BF7 00           Ctrl_2 db 0
 201  8BF8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BF8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BF8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BF8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BF8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BF8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BF8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BF8              ;
 209  8BF8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BF8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BF8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BF8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BF8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BF8              ;														BIT 4, ???
 215  8BF8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BF8
 217  8BF8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BF9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BF9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BF9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BF9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BF9              ;
 223  8BF9              ; 														DESCRIPCIÖN:
 224  8BF9              ;
 225  8BF9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BF9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BF9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BF9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BF9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BF9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BF9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BF9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BF9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BF9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BF9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BF9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BF9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BF9              ;
 239  8BF9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BF9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BF9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BF9
 243  8BF9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BF9
 245  8BF9 00           Filas db 0												; Filas. [DRAW]
 246  8BFA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8BFD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8BFF
 250  8BFF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BFF
 252  8BFF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C00              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C00              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C00
 256  8C00              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C00
 258  8C00              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C00              ;
 260  8C00              ;	COLORES: 0 ..... NEGRO
 261  8C00              ;    		 1 ..... AZUL
 262  8C00              ; 			 2 ..... ROJO
 263  8C00              ;			 3 ..... MAGENTA
 264  8C00              ; 			 4 ..... VERDE
 265  8C00              ; 			 5 ..... CIAN
 266  8C00              ;			 6 ..... AMARILLO
 267  8C00              ; 			 7 ..... BLANCO
 268  8C00
 269  8C00 00 00        Indice_Sprite_der defw 0
 270  8C02 00 00        Indice_Sprite_izq defw 0
 271  8C04 00 00        Puntero_DESPLZ_der defw 0
 272  8C06 00 00        Puntero_DESPLZ_izq defw 0
 273  8C08
 274  8C08 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0A 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0B 00           Columnas db 0
 277  8C0C 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C0E              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C0E 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C0F
 281  8C0F              ; variables de control general.
 282  8C0F
 283  8C0F 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C10
 285  8C10              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C10
 287  8C10              Perfiles_de_velocidad
 288  8C10
 289  8C10 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C11 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C12 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C13 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C14
 294  8C14              ; Contadores de 16 bits.
 295  8C14
 296  8C14 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C16 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C18 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1A 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1C
 301  8C1C              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1C
 303  8C1C 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C1E 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C20 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C22              ;
 307  8C22              ;
 308  8C22 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C23              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C23              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C23 00           Incrementa_puntero_backup db 0
 312  8C24 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C25              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C25 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C26 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C27 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C28              ;
 318  8C28              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C28              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C28              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C28              ;
 322  8C28              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C28              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C28              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C28              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C28              ;
 327  8C28              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C28              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C28              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C28
 331  8C28 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C29
 333  8C29              ;														DESCRIPCIÓN:
 334  8C29              ;
 335  8C29              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C29              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C29              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C29              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C29              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C29              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C29
 342  8C29              ;														BIT 3, Recarga de nueva oleada.
 343  8C29              ;														BIT 4, Recarga de nueva oleada.
 344  8C29              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C29              ;														BIT 6, **** Frame completo.
 346  8C29              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C29
 348  8C29 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2B
 353  8C2B              ; Gestión de ENTIDADES y CAJAS.
 354  8C2B
 355  8C2B 00 00        Puntero_store_caja defw 0
 356  8C2D 00 00        Puntero_restore_caja defw 0
 357  8C2F 00 00        Indice_restore_caja defw 0
 358  8C31 00 00        Puntero_indice_master defw 0
 359  8C33
 360  8C33 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C34 00           Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C35 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C36
 364  8C36 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C38 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3A              ;														; _ puntero (Indice_entidades).
 367  8C3A
 368  8C3A              ;---------------------------------------------------------------------------------------------------------------
 369  8C3A              ;
 370  8C3A              ;	13/10/24
 371  8C3A              ;
 372  8C3A              ;	Álbumes.
 373  8C3A
 374  8C3A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3C              ;														; _variable para almacenar lo posición del puntero_
 376  8C3C              ; 														; _de pila, SP.
 377  8C3C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C3E              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C3E
 380  8C3E              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C3E
 382  8C3E 00 00        Album_de_pintado defw 0
 383  8C40 00 00        Album_de_borrado defw 0
 384  8C42 00 00        Album_de_pintado_Amadeus defw 0
 385  8C44 00 00        Album_de_borrado_Amadeus defw 0
 386  8C46
 387  8C46 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C48 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4A
 390  8C4A 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4C 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C4E
 393  8C4E
 394  8C4E 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C50
 396  8C50 00           Num_de_bytes_album_de_disparos db 0
 397  8C51 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C52
 399  8C52 07           Numero_de_disparos_de_entidades db 7
 400  8C53
 401  8C53 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C54 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C55
 404  8C55 00 00        Techo_Scanlines_album defw 0
 405  8C57 00 00        Techo_Scanlines_album_2 defw 0
 406  8C59 00           Switch db 0
 407  8C5A 00 00        Techo defw 0
 408  8C5C 00 00        Scanlines_album_SP defw 0
 409  8C5E 00 89        India_SP defw Tabla_de_pintado
 410  8C60 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C62
 412  8C62 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C63              ;
 414  8C63              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C63              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C63              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C63              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C63              ;																Habilita el borrado/pintado de sprites.
 419  8C63              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C63              ;																_ a la baja.
 421  8C63              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C63              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C63              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C63              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C63              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C63              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C63
 428  8C63 00           Ctrl_4 db 0												; 4º Byte de Ctrl. general, (no específico) a una única entidad.
 429  8C64              ;
 430  8C64              ;															BIT 0, "1" Cada vez que se incrementan las entidades en curso, este bit se pone a "1". Esto hará que una entidad pase de "dormida" a "activa".
 431  8C64
 432  8C64 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 433  8C65              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 434  8C65              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 435  8C65
 436  8C65              ; Gestión de Disparos.
 437  8C65
 438  8C65 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 439  8C67 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 440  8C69 00           Impacto2 db 0											; Byte de control de impactos.
 441  8C6A
 442  8C6A              ;
 443  8C6A              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 444  8C6A              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 445  8C6A              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 446  8C6A              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 447  8C6A
 448  8C6A
 449  8C6A
 450  8C6A
 451  8C6A
 452  8C6A
 453  8C6A
 454  8C6A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 455  8C6C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 456  8C6C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 457  8C6C
 458  8C6C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 459  8C6E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 460  8C6E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 461  8C71              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 462  8C71 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C74              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 464  8C74
 465  8C74              ;---------------------------------------------------------------------------------------------------------------
 466  8C74
 467  8C74              ; Relojes y temporizaciones.
 468  8C74
 469  8C74 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 470  8C75 05           Clock_explosion_Amadeus db 5
 471  8C76 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 472  8C77
 473  8C77 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 474  8C79 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 475  8C7B 00           Numero_rnd_disparos db 0
 476  8C7C
 477  8C7C 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 478  8C7E A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 479  8C7F A0           CLOCK_disparos_de_entidades db $a0
 480  8C80
 481  8C80              ;---------------------------------------------------------------------------------------------------------------
 482  8C80
 483  8C80              ; Gestión de NIVELES.
 484  8C80
 485  8C80 00           Nivel db 0												; Nivel actual del juego.
 486  8C81 00 00        Puntero_indice_NIVELES defw 0
 487  8C83 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 488  8C85              ; 														; _ que definen el NIVEL.
 489  8C85
 490  8C85              ; ---------------------------------------------------------------------------------------------------------------
 491  8C85
 492  8C85              ; Temporizaciones Shield.
 493  8C85
 494  8C85 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 495  8C89 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 496  8C8B 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 497  8C8C 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 498  8C8D 00           Shield_3 db 0
 499  8C8E
 500  8C8E 07           Lives db 7
 501  8C8F
 502  8C8F              ; 	INICIO  *************************************************************************************************************************************************************************
 503  8C8F              ;
 504  8C8F              ;	13/11/24
 505  8C8F
 506  8C8F              START
 507  8C8F
 508  8C8F 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 509  8C92 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 510  8C94 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 511  8C96 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 512  8C98 F3           	DI
 513  8C99
 514  8C99              ; Limpiamos pantalla.
 515  8C99
 516  8C99 3E 07        	ld a,%00000111
 517  8C9B CD 44 95     	call Cls
 518  8C9E CD A2 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 519  8CA1
 520  8CA1              INICIALIZACION
 521  8CA1
 522  8CA1 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 523  8CA3 CD 3D 93     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 524  8CA6 CD 26 8F     	call Extrae_numero_aleatorio_y_avanza
 525  8CA9 6F           	ld l,a
 526  8CAA 26 00        	ld h,0
 527  8CAC 22 7C 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8CAF
 529  8CAF              ;	Inicia los álbumes de líneas.
 530  8CAF
 531  8CAF CD F4 90     	call Inicia_albumes_de_lineas
 532  8CB2 CD 04 91     	call Inicia_albumes_de_lineas_Amadeus
 533  8CB5 CD 11 91     	call Inicia_albumes_de_disparos
 534  8CB8
 535  8CB8              ;	Inicia 1er Nivel.
 536  8CB8
 537  8CB8 CD 9F 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 538  8CBB CD 6D 93     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 539  8CBE              ;														   _reponiendo entidades eliminadas.
 540  8CBE CD D3 93     	call Prepara_Cajas_de_Entidades
 541  8CC1
 542  8CC1 CD 24 94     	call Inicia_Amadeus
 543  8CC4
 544  8CC4              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 545  8CC4              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 546  8CC4              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 547  8CC4 11 AE 89     	ld de,Amadeus_BOX
 548  8CC7 CD 13 95     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CCA CD 67 94     	call Limpiamos_bandeja_DRAW
 550  8CCD
 551  8CCD              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8CCD
 553  8CCD 06 3C        	ld b,60
 554  8CCF CD E5 9D     2 call Amadeus_a_izquierda
 555  8CD2 10 FB        	djnz 2B
 556  8CD4
 557  8CD4 CD D2 90     	call Genera_datos_de_impresion_Amadeus
 558  8CD7
 559  8CD7              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8CD7
 561  8CD7 CD 2D 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8CDA
 563  8CDA CD AD 91     	call Inicia_Shield
 564  8CDD
 565  8CDD 2A 5C 8C     6 ld hl,(Scanlines_album_SP)
 566  8CE0 22 55 8C     	ld (Techo_Scanlines_album),hl
 567  8CE3
 568  8CE3 2A 40 8C     	ld hl,(Album_de_borrado)
 569  8CE6 22 5C 8C     	ld (Scanlines_album_SP),hl
 570  8CE9
 571  8CE9 21 00 89     	ld hl,Tabla_de_pintado
 572  8CEC 22 5E 8C     	ld (India_SP),hl
 573  8CEF
 574  8CEF 21 62 8C     	ld hl,Ctrl_3
 575  8CF2 CB C6        	set 0,(hl) 											; Indica Frame completo.
 576  8CF4 CB D6        	set 2,(hl)
 577  8CF6 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 578  8CF8
 579  8CF8 FB           	ei 													; Ha de apuntar a $5c3a.
 580  8CF9
 581  8CF9 76           	halt
 582  8CFA
 583  8CFA              ; ------------------------------------
 584  8CFA
 585  8CFA              Main
 586  8CFA              ;
 587  8CFA              ; 07/11/24.
 588  8CFA
 589  8CFA              ; Gestión de disparos.
 590  8CFA
 591  8CFA CD FB 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 592  8CFD CD D9 9F     	call Motor_de_disparos_entidades
 593  8D00 CD 74 A2     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 594  8D03
 595  8D03              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 596  8D03              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 597  8D03              ; Este hecho lo indica el bit2 de (Impacto2).
 598  8D03
 599  8D03 CD 15 A4     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 600  8D06
 601  8D06              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 602  8D06
 603  8D06 21 7F 8C     	ld hl,CLOCK_disparos_de_entidades
 604  8D09 35           	dec (hl)
 605  8D0A CC 3C 8E     	call z,Autoriza_disparo_de_entidades
 606  8D0D
 607  8D0D 2A 7C 8C     	ld hl,(Clock_next_entity)
 608  8D10 ED 4B 78 5C  	ld bc,(FRAMES)
 609  8D14 A7           	and a
 610  8D15 ED 42        	sbc hl,bc
 611  8D17 20 21        	jr nz,1F
 612  8D19
 613  8D19              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8D19
 615  8D19 CD 26 8F     	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 616  8D1C CD 3D 8F     	call Define_Clock_next_entity
 617  8D1F
 618  8D1F              ; GESTIÓN DE ENTIDADES.
 619  8D1F
 620  8D1F              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 621  8D1F              ; _ (Clock_next_entity) para la siguiente entidad.
 622  8D1F
 623  8D1F              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 624  8D1F              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 625  8D1F              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 626  8D1F
 627  8D1F 21 34 8C     	ld hl,Numero_parcial_de_entidades
 628  8D22 46           	ld b,(hl)
 629  8D23
 630  8D23 04           	inc b
 631  8D24 05           	dec b
 632  8D25
 633  8D25 F3           	di
 634  8D26 28 FE        	jr z,$													;! Nivel superado !!!!!
 635  8D28 FB           	ei
 636  8D29
 637  8D29 3A 35 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 638  8D2C B8           	cp b
 639  8D2D 28 0B        	jr z,1F
 640  8D2F 30 09        	jr nc,1F
 641  8D31
 642  8D31              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 643  8D31
 644  8D31 3C           	inc a
 645  8D32 32 35 8C     	ld (Entidades_en_curso),a
 646  8D35
 647  8D35 21 63 8C     	ld hl,Ctrl_4
 648  8D38 CB C6        	set 0,(hl)												; Permiso para activar a una entidad "dormida".
 649  8D3A
 650  8D3A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 651  8D3A
 652  8D3A              ;	call Extrae_numero_aleatorio_y_avanza 					; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 653  8D3A              ;	call Define_Clock_next_entity
 654  8D3A
 655  8D3A 3A 35 8C     1 ld a,(Entidades_en_curso)
 656  8D3D A7           	and a
 657  8D3E CA E2 8D     	jp z,Gestion_de_Amadeus									; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 658  8D41 47           	ld b,a													; No hay entidades que gestionar.
 659  8D42
 660  8D42              ; ( Código que ejecutamos con cada entidad: ).
 661  8D42
 662  8D42              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 663  8D42              ;
 664  8D42              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 665  8D42
 666  8D42 21 00 89     	ld hl,Tabla_de_pintado
 667  8D45 22 5E 8C     	ld (India_SP),hl
 668  8D48
 669  8D48 21 62 8C     	ld hl,Ctrl_3
 670  8D4B CB D6        	set 2,(hl)
 671  8D4D CD D0 8E     	call Change
 672  8D50
 673  8D50 C5           2 push bc 												; Nº de entidades en curso.
 674  8D51
 675  8D51 DD 2A 2B 8C  6 ld ix,(Puntero_store_caja)							;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 676  8D55 CD 7E 91     	call Salta_caja_de_entidades_vacia
 677  8D58
 678  8D58              ; Esta caja contiene datos. Es una entidad "dormida"???. Si no es así gestionamos esta entidad, (jr 5F).
 679  8D58
 680  8D58 DD 7E 00     	ld a,(ix+0)
 681  8D5B CB 7F        	bit 7,a
 682  8D5D 28 11        	jr z,5F
 683  8D5F
 684  8D5F              ; Esta entidad esta "dormida", tenemos permiso para despertarla. ???
 685  8D5F
 686  8D5F 21 63 8C     	ld hl,Ctrl_4
 687  8D62 CB 46        	bit 0,(hl)
 688  8D64 CC 8D 91     	call z,Incrementa_punteros_de_cajas 				; Si no tenemos permiso para despertarla saltaremos a la siguiente entidad activa.
 689  8D67 28 E8        	jr z,6B
 690  8D69
 691  8D69 CB 86        	res 0,(hl)											; Restaura bit "despertador".
 692  8D6B CB BF        	res 7,a
 693  8D6D DD 77 00     	ld (ix+0),a											; Convierte esta entidad dormilona en una entidad ACTIVA.
 694  8D70
 695  8D70              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 696  8D70              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 697  8D70
 698  8D70 3A 69 8C     5 ld a,(Impacto2)
 699  8D73 CB 5F        	bit 3,a
 700  8D75 C4 0B A2     	call nz,Compara_con_coordenadas_de_disparo
 701  8D78
 702  8D78              ; Existe colisión entre esta entidad y Amadeus ???
 703  8D78
 704  8D78 DD 7E 04     	ld a,(ix+4)													; (ix+4) - (Impacto)
 705  8D7B CB 4F        	bit 1,a
 706  8D7D C4 98 92     	call nz,Genera_explosion
 707  8D80 20 43        	jr nz,Gestiona_siguiente_entidad
 708  8D82
 709  8D82 DD 7E 04     	ld a,(ix+4)													; ld a,(Impacto)
 710  8D85 A7           	and a
 711  8D86 28 0C        	jr z,3F
 712  8D88
 713  8D88              ; IMPACTO en entidad por colisión con Amadeus.
 714  8D88
 715  8D88              ; 5/7/24
 716  8D88              ; Nota importante:
 717  8D88              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 718  8D88              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 719  8D88              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 720  8D88
 721  8D88 3A B2 89     	ld a,(Impacto_Amadeus)
 722  8D8B A7           	and a
 723  8D8C C4 98 92     	call nz,Genera_explosion
 724  8D8F 20 34        	jr nz,Gestiona_siguiente_entidad
 725  8D91
 726  8D91              ; Falsa colisión !!!
 727  8D91
 728  8D91 32 EF 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 729  8D94
 730  8D94              ; -------------------------------------------
 731  8D94
 732  8D94 CD 81 8F     3 call Entidad_a_Tabla_de_pintado								; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 733  8D97 CD A8 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 734  8D9A CD 71 90     	call Obtenemos_puntero_de_impresion							; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 735  8D9D
 736  8D9D DD E5        	push ix														; Push .db (Tipo) de la entidad, (caja de entidades correspondiente).
 737  8D9F DD 2A F0 8B  	ld ix,(Puntero_de_impresion)
 738  8DA3 CD 84 95     	call Genera_datos_de_impresion
 739  8DA6 DD E1        	pop ix														; Pop .db (Tipo) de la entidad, (caja de entidades correspondiente) en IX.
 740  8DA8
 741  8DA8 CD 8A 94     	call Decrementa_Contador_de_mov_masticados
 742  8DAB
 743  8DAB              ; -------------------------------------------
 744  8DAB
 745  8DAB              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 746  8DAB
 747  8DAB 2A F0 8B     	ld hl,(Puntero_de_impresion)
 748  8DAE CD 58 95     	call Genera_coordenadas
 749  8DB1
 750  8DB1 ED 4B EC 8B  	ld bc,(Coordenada_X)
 751  8DB5
 752  8DB5 DD 71 01     	ld (ix+1),c													; Actualiza las coordenadas de la entidad.
 753  8DB8 DD 70 02     	ld (ix+2),b
 754  8DBB
 755  8DBB              ; TODO: Generamos disparo ???
 756  8DBB
 757  8DBB 3A 54 8C     	ld a,(Permiso_de_disparo_Entidades)
 758  8DBE A7           	and a
 759  8DBF C4 51 8E     	call nz,Entidad_genera_disparo_si_procede
 760  8DC2
 761  8DC2 CD 8F A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 762  8DC5
 763  8DC5              Gestiona_siguiente_entidad
 764  8DC5
 765  8DC5 CD 8D 91     	call Incrementa_punteros_de_cajas
 766  8DC8
 767  8DC8 C1           	pop bc
 768  8DC9 10 85        	djnz 2B
 769  8DCB
 770  8DCB              ; Hemos gestionado todas las entidades.
 771  8DCB              ; ----- ----- -----
 772  8DCB
 773  8DCB CD 95 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 774  8DCE CD AC 8F     	call Ordena_tabla_de_impresion
 775  8DD1 CD 2D 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 776  8DD4
 777  8DD4 CD 52 8F     	call Borra_diferencia
 778  8DD7
 779  8DD7 3A 62 8C     	ld a,(Ctrl_3)
 780  8DDA CB 5F        	bit 3,a
 781  8DDC 20 04        	jr nz,Gestion_de_Amadeus
 782  8DDE
 783  8DDE EB           	ex de,hl
 784  8DDF 71           	ld (hl),c
 785  8DE0 2C           	inc l
 786  8DE1 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 787  8DE2
 788  8DE2              ;! GESTIONA AMADEUS !!!!!!!!!!
 789  8DE2
 790  8DE2              Gestion_de_Amadeus
 791  8DE2
 792  8DE2 21 62 8C     	ld hl,Ctrl_3
 793  8DE5 CB 76        	bit 6,(hl)
 794  8DE7 28 13        	jr z,Amadeus_vivo
 795  8DE9
 796  8DE9              ; Amadeus ha sido destruido.
 797  8DE9              ; Decrementa (Temp_new_live).
 798  8DE9
 799  8DE9 21 76 8C     	ld hl,Temp_new_live
 800  8DEC 35           	dec (hl)
 801  8DED 20 26        	jr nz,End_frame
 802  8DEF
 803  8DEF              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 804  8DEF
 805  8DEF 21 8E 8C     	ld hl,Lives
 806  8DF2 35           	dec (hl)
 807  8DF3
 808  8DF3              ;! Fin del juego
 809  8DF3
 810  8DF3 F3           	di
 811  8DF4 28 FE        	jr z,$														;! GAME OVER !!!!!
 812  8DF6 FB           	ei
 813  8DF7
 814  8DF7              ; Nueva nave.
 815  8DF7
 816  8DF7 CD 6E 8E     	call Reinicia_Amadeus
 817  8DFA 18 19        	jr End_frame
 818  8DFC
 819  8DFC              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 820  8DFC
 821  8DFC              Amadeus_vivo
 822  8DFC
 823  8DFC 3A B2 89     	ld a,(Impacto_Amadeus)
 824  8DFF A7           	and a
 825  8E00 C4 08 93     	call nz, Genera_explosion_Amadeus
 826  8E03 20 10        	jr nz, End_frame
 827  8E05
 828  8E05 CD 75 92     	call Teclado
 829  8E08 21 62 8C     	ld hl,Ctrl_3
 830  8E0B
 831  8E0B CB 6E        	bit 5,(hl)
 832  8E0D 28 06        	jr z,End_frame
 833  8E0F
 834  8E0F              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 835  8E0F
 836  8E0F CD EB 8E     	call Change_Amadeus
 837  8E12 CD D2 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 838  8E15
 839  8E15              End_frame
 840  8E15
 841  8E15              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 842  8E15              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 843  8E15
 844  8E15 CD 36 A1     	call Genera_datos_de_impresion_disparos_Entidades
 845  8E18 CD FA A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 846  8E1B CD 50 A2     	call Calcula_bytes_pintado_disparos
 847  8E1E CD 5D A2     	call Limpia_album_de_pintado_disparos_entidades
 848  8E21
 849  8E21              ; ------------ ------------- --------------
 850  8E21
 851  8E21 2A 40 8C     	ld hl,(Album_de_borrado)
 852  8E24 22 5C 8C     	ld (Scanlines_album_SP),hl
 853  8E27
 854  8E27 21 62 8C     	ld hl,Ctrl_3
 855  8E2A CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8E2C CB 9E        	res 3,(hl)
 857  8E2E CB A6        	res 4,(hl)
 858  8E30
 859  8E30 21 63 8C     	ld hl,Ctrl_4
 860  8E33 CB 86        	res 0,(hl)
 861  8E35
 862  8E35 AF           	xor a
 863  8E36 D3 FE        	out ($fe),a
 864  8E38
 865  8E38 76           	halt
 866  8E39
 867  8E39              ; ----------------------------------------
 868  8E39
 869  8E39              ;	ld a,(Ctrl_1) 										; Existe Loop?
 870  8E39              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 871  8E39 CA FA 8C     	jp z,Main
 872  8E3C
 873  8E3C              ;------------------------------------------
 874  8E3C              ;
 875  8E3C              ;	07/11/24
 876  8E3C
 877  8E3C              Autoriza_disparo_de_entidades
 878  8E3C
 879  8E3C 3E 01        	ld a,1
 880  8E3E 32 54 8C     	ld (Permiso_de_disparo_Entidades),a
 881  8E41
 882  8E41 3A 7E 8C     	ld a,(Repone_CLOCK_disparos)
 883  8E44 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 884  8E46 38 02        	jr c,1F
 885  8E48
 886  8E48              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 887  8E48              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 888  8E48              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 889  8E48
 890  8E48 D6 03        	sub 3
 891  8E4A
 892  8E4A 32 7E 8C     1 ld (Repone_CLOCK_disparos),a
 893  8E4D 32 7F 8C     	ld (CLOCK_disparos_de_entidades),a
 894  8E50
 895  8E50 C9           	ret
 896  8E51
 897  8E51              ;------------------------------------------
 898  8E51              ;
 899  8E51              ;	14/09/24
 900  8E51              ;
 901  8E51              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 902  8E51
 903  8E51              Entidad_genera_disparo_si_procede
 904  8E51
 905  8E51 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 906  8E54 CB 06        	rlc (hl)
 907  8E56
 908  8E56 DC 86 A1     	call c,Genera_disparo_de_entidad_maldosa
 909  8E59
 910  8E59 C9           	ret
 911  8E5A
 912  8E5A              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 913  8E5A              ;
 914  8E5A              ;	30/09/24
 915  8E5A
 916  8E5A              Actuaiza_sp_de_disparos_de_entidades
 917  8E5A
 918  8E5A 2A 79 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 919  8E5D 23           	inc hl
 920  8E5E 22 79 8C     	ld (Puntero_num_aleatorios_disparos),hl
 921  8E61
 922  8E61 11 FD 88     	ld de,Numeros_aleatorios+7
 923  8E64 7B           	ld a,e
 924  8E65 95           	sub l
 925  8E66 C0           	ret nz
 926  8E67
 927  8E67 21 F6 88     1 ld hl,Numeros_aleatorios
 928  8E6A 22 79 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 929  8E6D C9           	ret
 930  8E6E
 931  8E6E              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 932  8E6E              ;
 933  8E6E              ;	24/07/24
 934  8E6E
 935  8E6E              Reinicia_Amadeus
 936  8E6E
 937  8E6E              ;	Reinicia posición y estado.
 938  8E6E
 939  8E6E 21 CF 50     	ld hl,$50cf
 940  8E71 22 B3 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 941  8E74 21 CC DC     	ld hl,$dccc
 942  8E77 22 B5 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 943  8E7A 21 3D 00     	ld hl,$003d
 944  8E7D 22 B7 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 945  8E80
 946  8E80              ;	limpiamos el álbum de borrado.
 947  8E80
 948  8E80 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
 949  8E83
 950  8E83 AF           	xor a
 951  8E84 77           	ld (hl),a
 952  8E85
 953  8E85 E5           	push hl
 954  8E86 D1           	pop de
 955  8E87 13           	inc de
 956  8E88
 957  8E88 01 23 00     	ld bc,35
 958  8E8B ED B0        	ldir
 959  8E8D
 960  8E8D CD D2 90     	call Genera_datos_de_impresion_Amadeus
 961  8E90
 962  8E90              ;	Reinicia temporizaciones.
 963  8E90
 964  8E90 CD AD 91     	call Inicia_Shield
 965  8E93
 966  8E93 3E 5A        	ld a,90
 967  8E95 32 8B 8C     	ld (Shield),a
 968  8E98
 969  8E98 3E 64        	ld a,100
 970  8E9A 32 76 8C     	ld (Temp_new_live),a
 971  8E9D
 972  8E9D              ; 	Restauramos el FLAG: Amadeus vivo.
 973  8E9D
 974  8E9D 21 62 8C     	ld hl,Ctrl_3
 975  8EA0 CB B6        	res 6,(hl)
 976  8EA2
 977  8EA2              ;	Fuerza la impresión de la nave en el siguiente frame.
 978  8EA2
 979  8EA2 21 62 8C      	ld hl,Ctrl_3
 980  8EA5 CB EE        	set 5,(hl)
 981  8EA7
 982  8EA7 C9           	ret
 983  8EA8
 984  8EA8              ; --------------------------------------------------------------------------------------------------------------
 985  8EA8              ;
 986  8EA8              ;	23/11/24
 987  8EA8
 988  8EA8              Ajusta_velocidad_entidad
 989  8EA8
 990  8EA8 DD 7E 0B     	ld a,(ix+11)						; ld a,(Velocidad)
 991  8EAB A7           	and a
 992  8EAC C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 993  8EAD              	;									  _ una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 994  8EAD              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 995  8EAD
 996  8EAD
 997  8EAD              ; Incrementa (Contador_de_vueltas)x2.
 998  8EAD              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 999  8EAD
1000  8EAD              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
1001  8EAD              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
1002  8EAD              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
1003  8EAD              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
1004  8EAD              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
1005  8EAD
1006  8EAD
1007  8EAD CB 27        	sla a 								; Multiplica x2 (Velocidad) en cada FRAME.
1008  8EAF DD 77 0B     	ld (ix+11),a						; ld (Velocidad),a
1009  8EB2 E6 10        	and $10
1010  8EB4 C8           	ret z
1011  8EB5
1012  8EB5              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
1013  8EB5
1014  8EB5 DD 7E 03     	ld a,(ix+3)							; ld a,(Contador_de_vueltas)
1015  8EB8 CB 2F        	sra a
1016  8EBA CB 2F        	sra a
1017  8EBC DD 77 0B     	ld (ix+11),a
1018  8EBF
1019  8EBF DD 6E 07     	ld l,(ix+7)
1020  8EC2 DD 66 08     	ld h,(ix+8)							; HL contiene (Puntero_de_almacen_de_mov_masticados)
1021  8EC5
1022  8EC5              ;	ld hl,(Puntero_de_almacen_de_mov_masticados)
1023  8EC5 23           	inc hl
1024  8EC6 23           	inc hl
1025  8EC7 23           	inc hl
1026  8EC8 23           	inc hl
1027  8EC9              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
1028  8EC9
1029  8EC9 DD 75 07     	ld (ix+7),l
1030  8ECC DD 74 08     	ld (ix+8),h							; (Puntero_de_almacen_de_mov_masticados) actualizado.
1031  8ECF
1032  8ECF C9           	ret
1033  8ED0
1034  8ED0              ; --------------------------------------------------------------------------------------------------------------
1035  8ED0              ;
1036  8ED0              ;	25/08/24
1037  8ED0
1038  8ED0              Change
1039  8ED0
1040  8ED0 3A 59 8C     	ld a,(Switch)
1041  8ED3 EE 01        	xor 1
1042  8ED5 32 59 8C     	ld (Switch),a
1043  8ED8 2A 3E 8C     	ld hl,(Album_de_pintado)
1044  8EDB ED 5B 40 8C  	ld de,(Album_de_borrado)
1045  8EDF EB           	ex de,hl
1046  8EE0 22 3E 8C     	ld (Album_de_pintado),hl
1047  8EE3 22 5C 8C     	ld (Scanlines_album_SP),hl
1048  8EE6 ED 53 40 8C  	ld (Album_de_borrado),de
1049  8EEA C9           	ret
1050  8EEB
1051  8EEB              Change_Amadeus
1052  8EEB
1053  8EEB 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1054  8EEE ED 5B 44 8C  	ld de,(Album_de_borrado_Amadeus)
1055  8EF2 EB           	ex de,hl
1056  8EF3 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1057  8EF6 ED 53 44 8C  	ld (Album_de_borrado_Amadeus),de
1058  8EFA C9           	ret
1059  8EFB
1060  8EFB              Change_Disparos
1061  8EFB
1062  8EFB              ; Álbumes de Amadeus.
1063  8EFB
1064  8EFB 2A 46 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1065  8EFE ED 5B 48 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1066  8F02 EB           	ex de,hl
1067  8F03 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1068  8F06 ED 53 48 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1069  8F0A CD 45 A2     	call Limpia_album_de_pintado_disparos_Amadeus
1070  8F0D
1071  8F0D              ; Álbumes de entidades.
1072  8F0D
1073  8F0D 2A 4A 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1074  8F10 ED 5B 4C 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1075  8F14 EB           	ex de,hl
1076  8F15 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1077  8F18 ED 53 4C 8C  	ld (Album_de_borrado_disparos_Entidades),de
1078  8F1C 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1079  8F1F
1080  8F1F 3A 50 8C     	ld a,(Num_de_bytes_album_de_disparos)
1081  8F22 32 51 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1082  8F25
1083  8F25 C9           	ret
1084  8F26
1085  8F26              ; ------------------------------------
1086  8F26              ;
1087  8F26              ; 1/05/24
1088  8F26
1089  8F26              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1090  8F26              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1091  8F26
1092  8F26              ;	DESTRUYE: HL,DE,A
1093  8F26              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1094  8F26
1095  8F26              ;	Variables implicadas: (RND_SP).
1096  8F26
1097  8F26              Extrae_numero_aleatorio_y_avanza
1098  8F26
1099  8F26 21 FD 88     	ld hl,Numeros_aleatorios+7
1100  8F29 EB           	ex de,hl
1101  8F2A 2A 77 8C     	ld hl,(RND_SP)
1102  8F2D
1103  8F2D 7B           	ld a,e
1104  8F2E 95           	sub l
1105  8F2F 20 06        	jr nz,1F
1106  8F31
1107  8F31              ; Sitúa HL al principio de la tabla de nº aleatorios.
1108  8F31
1109  8F31 21 F6 88     	ld hl,Numeros_aleatorios
1110  8F34 22 77 8C     	ld (RND_SP),HL
1111  8F37
1112  8F37              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1113  8F37
1114  8F37 7E           1 ld a,(hl)
1115  8F38 23           	inc hl
1116  8F39 22 77 8C     	ld (RND_SP),hl
1117  8F3C C9           	ret
1118  8F3D
1119  8F3D              ; ------------------------------------
1120  8F3D              ;
1121  8F3D              ; 1/05/24
1122  8F3D
1123  8F3D              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1124  8F3D              ; (1 a 4 segundos).
1125  8F3D              ; Actualizamos (Clock_next_entity) con A.
1126  8F3D
1127  8F3D              ;	DESTRUYE: A y B.
1128  8F3D              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1129  8F3D              ;			 Actualiza (Clock_next_entity) con A.
1130  8F3D
1131  8F3D              ;	Variables implicadas: (Clock_next_entity).
1132  8F3D
1133  8F3D              ; Notas:
1134  8F3D
1135  8F3D              ; 	$32 1 seg.
1136  8F3D              ; 	$64 2 seg.
1137  8F3D              ; 	$96 3 seg.
1138  8F3D              ; 	$c8 4 seg.
1139  8F3D              ; 	$fa 5 seg.
1140  8F3D
1141  8F3D              ; $ffff 1310,7 seg, 22 minutos.
1142  8F3D
1143  8F3D              ;	$0100  5 seg. aproximadamente.
1144  8F3D              ;	$0200 10 seg. aproximadamente.
1145  8F3D              ;	$0300 15 seg. aproximadamente.
1146  8F3D              ;	$0400 20 seg. aproximadamente.
1147  8F3D              ;	$0500 25 seg. aproximadamente.
1148  8F3D              ;	$0600 30 seg. aproximadamente.
1149  8F3D
1150  8F3D              Define_Clock_next_entity
1151  8F3D
1152  8F3D FE 34        	cp $34
1153  8F3F 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1154  8F41
1155  8F41              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1156  8F41
1157  8F41 4F           3 ld c,a
1158  8F42 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1159  8F44 2A 78 5C     	ld hl,(FRAMES)
1160  8F47 A7           	and a
1161  8F48 ED 4A        	adc hl,bc
1162  8F4A 22 7C 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1163  8F4D C9           	ret
1164  8F4E
1165  8F4E 3E 34        1 ld a,$34
1166  8F50 18 EF        	jr 3B
1167  8F52
1168  8F52              ; ------------------------------------
1169  8F52              ;
1170  8F52              ; 18/03/24
1171  8F52
1172  8F52              Borra_diferencia
1173  8F52
1174  8F52 ED 4B 5C 8C  	ld bc,(Scanlines_album_SP)
1175  8F56
1176  8F56 3A 59 8C     	ld a,(Switch)
1177  8F59 A7           	and a
1178  8F5A 28 08        	jr z,2F
1179  8F5C
1180  8F5C 2A 57 8C     	ld hl,(Techo_Scanlines_album_2)
1181  8F5F 11 57 8C     	ld de,Techo_Scanlines_album_2
1182  8F62 18 06        	jr 3F
1183  8F64
1184  8F64 2A 55 8C     2 ld hl,(Techo_Scanlines_album)
1185  8F67 11 55 8C     	ld de,Techo_Scanlines_album
1186  8F6A
1187  8F6A              ; Diferencia.
1188  8F6A
1189  8F6A ED 42        3 sbc hl,bc
1190  8F6C
1191  8F6C C8           	ret z
1192  8F6D D8           	ret c
1193  8F6E
1194  8F6E              ; Nuevo techo, (más bajo que el anterior).
1195  8F6E              ; Fijamos nuevo techo y borramos bytes sobrantes.
1196  8F6E
1197  8F6E EB           	ex de,hl
1198  8F6F
1199  8F6F 71           	ld (hl),c
1200  8F70 2C           	inc l
1201  8F71 70           	ld (hl),b
1202  8F72
1203  8F72 AF           	xor a
1204  8F73 43           	ld b,e
1205  8F74
1206  8F74 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1207  8F77
1208  8F77 77           1 ld (hl),a
1209  8F78 23           	inc hl
1210  8F79 10 FC        	djnz 1B
1211  8F7B
1212  8F7B              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1213  8F7B
1214  8F7B 21 62 8C     	ld hl,Ctrl_3
1215  8F7E CB DE        	set 3,(hl)
1216  8F80
1217  8F80 C9           	ret
1218  8F81
1219  8F81              ; --------------------------------------------------------------------------------------------------------------
1220  8F81              ;
1221  8F81              ;	23/11/24
1222  8F81              ;
1223  8F81              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1224  8F81
1225  8F81              Entidad_a_Tabla_de_pintado
1226  8F81
1227  8F81              ; Almacena la Coordenada Y de la entidad en curso.
1228  8F81
1229  8F81              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1230  8F81
1231  8F81 DD 7E 02     	ld a,(ix+2)
1232  8F84 2A 5E 8C     	ld hl,(India_SP)
1233  8F87 77           	ld (hl),a
1234  8F88 2C           	inc l
1235  8F89
1236  8F89              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1237  8F89
1238  8F89 ED 5B 5C 8C  	ld de,(Scanlines_album_SP)
1239  8F8D
1240  8F8D 73           	ld (hl),e
1241  8F8E 2C           	inc l
1242  8F8F 72           	ld (hl),d
1243  8F90 2C           	inc l
1244  8F91
1245  8F91 22 5E 8C     	ld (India_SP),hl
1246  8F94
1247  8F94 C9           	ret
1248  8F95
1249  8F95              ; --------------------------------------------------------------------------------------------------------------
1250  8F95              ;
1251  8F95              ;	27/03/24
1252  8F95              ;
1253  8F95
1254  8F95              Inicializa_India_y_limpia_Tabla_de_impresion
1255  8F95
1256  8F95 2A 5E 8C     	ld hl,(India_SP)
1257  8F98 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1258  8F9B
1259  8F9B 79           	ld a,c
1260  8F9C 95           	sub l
1261  8F9D 28 06        	jr z,2F
1262  8F9F 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1263  8FA0              ;														; _ y pasamos a inicializar (India_SP).
1264  8FA0 AF           	xor a
1265  8FA1
1266  8FA1 77           1 ld (hl),a
1267  8FA2 2C           	inc l
1268  8FA3 10 FC        	djnz 1B												; Limpia Tabla.
1269  8FA5
1270  8FA5 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1271  8FA8 22 5E 8C     	ld (India_SP),hl
1272  8FAB
1273  8FAB C9           	ret
1274  8FAC
1275  8FAC              ; --------------------------------------------------------------------------------------------------------------
1276  8FAC              ;
1277  8FAC              ;	31/3/24
1278  8FAC
1279  8FAC              Ordena_tabla_de_impresion
1280  8FAC
1281  8FAC              ; 5794 T/states.
1282  8FAC              ; 6278 T/states.
1283  8FAC              ; 5310 T/states.
1284  8FAC
1285  8FAC              ; Inicializamos punteros (India_SP) e (India_2_SP).
1286  8FAC              ; Inicializamos contador de comparaciones, [C].
1287  8FAC              ; Cargamos los registros A y B para efectuar comparación.
1288  8FAC
1289  8FAC FD 2E 00     	ld iyl,0
1290  8FAF
1291  8FAF 3A 35 8C     	ld a,(Entidades_en_curso)
1292  8FB2 FE 04        	cp 4 	;	4
1293  8FB4 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1294  8FB5
1295  8FB5 3D           	dec a
1296  8FB6 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1297  8FB7 51           	ld d,c 										; Copia de respaldo.
1298  8FB8
1299  8FB8 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1300  8FB9
1301  8FB9 21 03 89     	ld hl,Tabla_de_pintado+3
1302  8FBC 46           	ld b,(hl)
1303  8FBD 22 60 8C     	ld (India_2_SP),hl
1304  8FC0
1305  8FC0 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1306  8FC1 DC E9 8F     	call c, Avanza_India_2_SP
1307  8FC4 CC E9 8F     	call z, Avanza_India_2_SP
1308  8FC7
1309  8FC7 FD 2D        	dec iyl
1310  8FC9 28 18        	jr z,2F
1311  8FCB
1312  8FCB
1313  8FCB              ; --------------------------------------------------------------------------------------------------------------
1314  8FCB              ;
1315  8FCB              ;	7/4/24
1316  8FCB
1317  8FCB              Trueque
1318  8FCB
1319  8FCB              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1320  8FCB              ;  			A contiene en nº de fila de (India_SP).
1321  8FCB              ;			HL contiene (India_2_SP).
1322  8FCB
1323  8FCB D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1324  8FCC E5           	push hl										; Preservo (India_2_SP).
1325  8FCD
1326  8FCD ED 5B 5E 8C  	ld de,(India_SP)
1327  8FD1 EB           	ex de,hl
1328  8FD2 70           	ld (hl),b
1329  8FD3 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1330  8FD4
1331  8FD4 CD 15 90     	call Intercambia_1_byte
1332  8FD7 CD 15 90     	call Intercambia_1_byte
1333  8FDA
1334  8FDA
1335  8FDA              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1336  8FDA              ; Recuperamos (India_2_SP) en HL.
1337  8FDA
1338  8FDA 2A 5E 8C     	ld hl,(India_SP)
1339  8FDD 7E           	ld a,(hl)
1340  8FDE
1341  8FDE E1           	pop hl
1342  8FDF D1           	pop de
1343  8FE0
1344  8FE0              ; --------------------------------------------------------------------------------------------------------------
1345  8FE0
1346  8FE0 CD E9 8F     	call Avanza_India_2_SP
1347  8FE3
1348  8FE3 14           2 inc d
1349  8FE4 15           	dec d
1350  8FE5 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1351  8FE6 18 D8        	jr 1B
1352  8FE8
1353  8FE8 C9           	ret
1354  8FE9
1355  8FE9              ; ----- ----- ----- ----- -----
1356  8FE9
1357  8FE9              Avanza_India_2_SP
1358  8FE9
1359  8FE9 0D           	dec c
1360  8FEA 28 0A        	jr z,Avanza_punteros_indios
1361  8FEC
1362  8FEC FD 2C        	inc iyl
1363  8FEE
1364  8FEE 2C           	inc l
1365  8FEF 2C           	inc l
1366  8FF0 2C           	inc l
1367  8FF1
1368  8FF1 46           	ld b,(hl)
1369  8FF2 22 60 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1370  8FF5
1371  8FF5 C9           	ret
1372  8FF6
1373  8FF6              ; ----- ----- ----- ----- -----
1374  8FF6
1375  8FF6              Avanza_punteros_indios
1376  8FF6
1377  8FF6 15           	dec d
1378  8FF7 28 15        	jr z,Prepara_salida
1379  8FF9
1380  8FF9 4A           	ld c,d
1381  8FFA
1382  8FFA 2A 5E 8C     	ld hl,(India_SP)
1383  8FFD 2C           	inc l
1384  8FFE 2C           	inc l
1385  8FFF 2C           	inc l
1386  9000 7E           	ld a,(hl)
1387  9001 22 5E 8C     	ld (India_SP),hl
1388  9004
1389  9004 2C           	inc l
1390  9005 2C           	inc l
1391  9006 2C           	inc l
1392  9007 46           	ld b,(hl)
1393  9008 22 60 8C     	ld (India_2_SP),hl
1394  900B
1395  900B FD 2C        	inc iyl
1396  900D
1397  900D C9           	ret
1398  900E
1399  900E              Prepara_salida
1400  900E
1401  900E 21 00 89     	ld hl,Tabla_de_pintado
1402  9011 22 5E 8C     	ld (India_SP),hl
1403  9014 C9           	ret
1404  9015
1405  9015
1406  9015 2C           Intercambia_1_byte inc l
1407  9016 1C           	inc e
1408  9017 46           	ld b,(hl)
1409  9018 1A           	ld a,(de)
1410  9019 EB           	ex de,hl
1411  901A 70           	ld (hl),b
1412  901B 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1413  901C C9           	ret
1414  901D
1415  901D              ; -----------------------------------------------------------------------------------
1416  901D              ;
1417  901D              ;	20/01/24
1418  901D              ;
1419  901D              ;
1420  901D
1421  901D              Construye_movimientos_masticados_entidad
1422  901D
1423  901D 2A F2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1424  9020 E5           	push hl
1425  9021 CD 64 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1426  9024              ;															; _ el (Contador_de_mov_masticados).
1427  9024 CD 49 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1428  9027              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1429  9027 CD 6B 9A     	call Recompone_posicion_inicio
1430  902A
1431  902A CD 9B 97     1 call Draw
1432  902D CD 49 90     	call Guarda_movimiento_masticado
1433  9030
1434  9030 CD 18 9E     	call Movimiento
1435  9033
1436  9033 3A 62 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1437  9036 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1438  9038 28 F0        	jr z,1B
1439  903A
1440  903A              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1441  903A              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1442  903A
1443  903A E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1444  903B 22 F2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1445  903E
1446  903E              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1447  903E
1448  903E CD 7C 9F     	call Situa_en_contador_general_de_mov_masticados
1449  9041
1450  9041              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1451  9041              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1452  9041
1453  9041 ED 4B F4 8B  	ld bc,(Contador_de_mov_masticados)
1454  9045
1455  9045 71           	ld (hl),c
1456  9046 23           	inc hl
1457  9047 70           	ld (hl),b
1458  9048
1459  9048 C9           	ret
1460  9049
1461  9049              ; -----------------------------------------------------------------------------------
1462  9049              ;
1463  9049              ;	28/12/23
1464  9049              ;
1465  9049              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1466  9049              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1467  9049
1468  9049              Guarda_movimiento_masticado
1469  9049
1470  9049 ED 73 3A 8C  	ld (Stack),sp
1471  904D ED 7B F2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1472  9051
1473  9051 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1474  9053 FD E5            push iy 												; Pushea Puntero_objeto.
1475  9055
1476  9055 ED 7B 3A 8C      ld sp,(Stack)
1477  9059
1478  9059 2A F4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1479  905C 23           	inc hl
1480  905D 22 F4 8B     	ld (Contador_de_mov_masticados),hl
1481  9060
1482  9060 CD 64 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1483  9063              ;															; _ el (Contador_de_mov_masticados).
1484  9063 C9               ret
1485  9064
1486  9064              ; --------------------------------------------------------------------------------------------------------------
1487  9064              ;
1488  9064              ;	12/1/24
1489  9064              ;
1490  9064              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1491  9064
1492  9064              Actualiza_Puntero_de_almacen_de_mov_masticados
1493  9064
1494  9064 2A F2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1495  9067 01 04 00     	ld bc,4
1496  906A A7           	and a
1497  906B ED 4A        	adc hl,bc
1498  906D 22 F2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1499  9070 C9           	ret
1500  9071
1501  9071              ; ------------------------------------------
1502  9071              ;
1503  9071              ;	23/11/24
1504  9071              ;
1505  9071              ;	Almacena (Puntero_de_impresion) en su caja y en la bandeja DRAW. Actualiza (Puntero_de_almacen_de_mov_masticados).
1506  9071
1507  9071
1508  9071              Obtenemos_puntero_de_impresion
1509  9071
1510  9071 DD 6E 07     	ld l,(ix+7)
1511  9074 DD 66 08     	ld h,(ix+8)
1512  9077
1513  9077              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1514  9077
1515  9077 ED 73 3A 8C  	ld (Stack),sp
1516  907B F9           	ld sp,hl
1517  907C
1518  907C AF           	xor a
1519  907D 67           	ld h,a
1520  907E 6C           	ld l,h															; ld hl,"0"
1521  907F
1522  907F D1           	pop de															; (Puntero_objeto) en DE.
1523  9080 C1           	pop bc
1524  9081
1525  9081              ; 	Almacena (Puntero_de_impresion) en caja.
1526  9081
1527  9081 DD 71 05     	ld (ix+5),c
1528  9084 DD 70 06     	ld (ix+6),b
1529  9087
1530  9087 ED 43 F0 8B  	ld (Puntero_de_impresion),bc
1531  908B
1532  908B              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1533  908B
1534  908B 39           	add hl,sp
1535  908C DD 75 07     	ld (ix+7),l
1536  908F DD 74 08     	ld (ix+8),h
1537  9092
1538  9092 C1           	pop bc
1539  9093
1540  9093 79           	ld a,c
1541  9094 80           	add b															; Comprueba si ya no hay datos en el almacén.
1542  9095
1543  9095 ED 7B 3A 8C  	ld sp,(Stack)
1544  9099
1545  9099 CC 98 94     	call z,Reinicia_entidad_maliciosa
1546  909C
1547  909C C9           	ret
1548  909D
1549  909D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1550  909D              ;
1551  909D              ;	25/11/24
1552  909D
1553  909D              Cargamos_registros_con_explosion
1554  909D
1555  909D DD 6E 07     	ld l,(ix+7)
1556  90A0 DD 66 08     	ld h,(ix+8)
1557  90A3 CD 43 91     	call Extrae_address
1558  90A6 EB           	ex de,hl														; Puntero objeto, (Explosión), en DE.
1559  90A7
1560  90A7 DD 6E 05     	ld l,(ix+5)
1561  90AA DD 66 06     	ld h,(ix+6)
1562  90AD
1563  90AD E5           	push hl
1564  90AE DD E1        	pop ix															; (Puntero_de_impresion) en IX.
1565  90B0
1566  90B0 C9           	ret
1567  90B1
1568  90B1
1569  90B1              Cargamos_registros_con_explosion_Amadeus
1570  90B1
1571  90B1 2A B5 89     	ld hl,(Pamm_Amadeus)
1572  90B4 CD 43 91     	call Extrae_address
1573  90B7
1574  90B7 5D           	ld e,l
1575  90B8 54           	ld d,h
1576  90B9
1577  90B9 DD 2A B3 89  	ld ix,(p.imp.amadeus)
1578  90BD
1579  90BD C9           	ret
1580  90BE
1581  90BE              ; --------------------------------------------------------------------------------------------------------------
1582  90BE              ;
1583  90BE              ;	17/06/24
1584  90BE              ;
1585  90BE              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1586  90BE              ;
1587  90BE              ;	IX contiene el puntero de impresión.
1588  90BE              ;	DE contiene (Puntero_objeto).
1589  90BE
1590  90BE
1591  90BE              Cargamos_registros_con_mov_masticado_Amadeus
1592  90BE
1593  90BE ED 73 3A 8C  	ld (Stack),sp
1594  90C2 ED 7B B5 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1595  90C6 D1           	pop de 															; DE contiene Puntero_objeto
1596  90C7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1597  90C9 DD 22 B3 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1598  90CD ED 7B 3A 8C  	ld sp,(Stack)
1599  90D1 C9           	ret
1600  90D2
1601  90D2              ; ---------------------------------------------------------------------------------------------------------------------
1602  90D2              ;
1603  90D2              ;	18/6/24
1604  90D2              ;
1605  90D2              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1606  90D2
1607  90D2              Genera_datos_de_impresion_Amadeus
1608  90D2
1609  90D2 3A B2 89     	ld a,(Impacto_Amadeus)
1610  90D5 A7           	and a
1611  90D6 20 03        	jr nz,1F
1612  90D8
1613  90D8              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1614  90D8              ; _apuntando a la correspondiente explosión.
1615  90D8
1616  90D8 CD BE 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1617  90DB
1618  90DB DD 7D        1 ld a,ixl
1619  90DD E6 1F        	and $1f
1620  90DF 32 AF 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1621  90E2
1622  90E2 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1623  90E5 E5           	push hl
1624  90E6
1625  90E6 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1626  90E9 22 5C 8C     	ld (Scanlines_album_SP),hl
1627  90EC
1628  90EC CD 84 95     	call Genera_datos_de_impresion
1629  90EF
1630  90EF E1           	pop hl
1631  90F0 22 5C 8C     	ld (Scanlines_album_SP),hl
1632  90F3
1633  90F3 C9           	ret
1634  90F4
1635  90F4              ; ---------------------------------------------------------------------------------------------------------------------
1636  90F4              ;
1637  90F4              ;	13/03/24
1638  90F4              ;
1639  90F4              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1640  90F4
1641  90F4              Inicia_albumes_de_lineas
1642  90F4
1643  90F4 21 00 80     	ld hl,Scanlines_album
1644  90F7 22 3E 8C     	ld (Album_de_pintado),hl
1645  90FA 22 5C 8C     	ld (Scanlines_album_SP),hl
1646  90FD
1647  90FD 21 1A 81     	ld hl,Scanlines_album_2
1648  9100 22 40 8C     	ld (Album_de_borrado),hl
1649  9103
1650  9103 C9           	ret
1651  9104
1652  9104              Inicia_albumes_de_lineas_Amadeus
1653  9104
1654  9104 21 34 82     	ld hl,Amadeus_scanlines_album
1655  9107 22 42 8C     	ld (Album_de_pintado_Amadeus),hl
1656  910A 21 58 82     	ld hl,Amadeus_scanlines_album_2
1657  910D 22 44 8C     	ld (Album_de_borrado_Amadeus),hl
1658  9110
1659  9110 C9           	ret
1660  9111
1661  9111              Inicia_albumes_de_disparos
1662  9111
1663  9111 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1664  9114 22 46 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1665  9117 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1666  911A 22 48 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1667  911D
1668  911D 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1669  9120 22 4A 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1670  9123 22 4E 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1671  9126
1672  9126 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1673  9129 22 4C 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1674  912C
1675  912C C9           	ret
1676  912D
1677  912D              ; ---------------------------------------------------------------------------------------------------------------------
1678  912D              ;
1679  912D              ; 8/1/23
1680  912D              ;
1681  912D              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1682  912D              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1683  912D              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1684  912D
1685  912D              ; Destruye HL y DE !!!!!
1686  912D
1687  912D              Inicia_punteros_de_cajas
1688  912D
1689  912D 21 9E 89     	ld hl,Indice_de_cajas_de_entidades
1690  9130 CD 43 91         call Extrae_address
1691  9133 22 2B 8C         ld (Puntero_store_caja),hl
1692  9136 21 A0 89     	ld hl,Indice_de_cajas_de_entidades+2
1693  9139 22 2F 8C     	ld (Indice_restore_caja),hl
1694  913C CD 43 91     	call Extrae_address
1695  913F 22 2D 8C     	ld (Puntero_restore_caja),hl
1696  9142 C9               ret
1697  9143
1698  9143              ; *************************************************************************************************************************************************************
1699  9143
1700  9143              ;
1701  9143              ; 20/10/22
1702  9143              ;
1703  9143              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1704  9143              ;
1705  9143              ; Destruye el puntero y DE !!!!!
1706  9143
1707  9143 5E           Extrae_address ld e,(hl)
1708  9144 23           	inc hl
1709  9145 56           	ld d,(hl)
1710  9146 2B           	dec hl
1711  9147 EB           	ex de,hl
1712  9148 C9           	ret
1713  9149
1714  9149              ; *************************************************************************************************************************************************************
1715  9149              ;
1716  9149              ;	20/1/24
1717  9149              ;
1718  9149              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1719  9149              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1720  9149              ;
1721  9149              ;   Destruye HL y BC !!!!!,
1722  9149              ;
1723  9149              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1724  9149              ;					"0" ..... Izquierda.
1725  9149
1726  9149              Inicia_Puntero_objeto
1727  9149
1728  9149 3A 0A 8C     	ld a,(Cuad_objeto)
1729  914C E6 01        	and 1
1730  914E F5           	push af
1731  914F CC 6B 91     	call z,Inicia_puntero_objeto_izq
1732  9152 F1           	pop af
1733  9153 C8           	ret z
1734  9154 CD 58 91     	call Inicia_puntero_objeto_der
1735  9157 C9           	ret
1736  9158
1737  9158              ; Arrancamos desde la parte izquierda de la pantalla.
1738  9158              ; Iniciamos (Indice_Sprite_der).
1739  9158
1740  9158 2A 00 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1741  915B 22 04 8C     	ld (Puntero_DESPLZ_der),hl
1742  915E CD 43 91     	call Extrae_address
1743  9161 22 FD 8B     	ld (Puntero_objeto),hl
1744  9164
1745  9164 2A 02 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1746  9167 22 06 8C     	ld (Puntero_DESPLZ_izq),hl
1747  916A C9           	ret
1748  916B
1749  916B              ; Arrancamos desde la parte derecha de la pantalla.
1750  916B              ; Iniciamos (Indice_Sprite_izq).
1751  916B
1752  916B 2A 02 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1753  916E 22 06 8C     	ld (Puntero_DESPLZ_izq),hl
1754  9171 CD 43 91     	call Extrae_address
1755  9174 22 FD 8B     	ld (Puntero_objeto),hl
1756  9177
1757  9177 2A 00 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1758  917A 22 04 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1759  917D C9           	ret
1760  917E
1761  917E              ; **************************************************************************************************
1762  917E              ;
1763  917E              ;	27/11/24
1764  917E              ;
1765  917E              ;	INPUT: IX contiene (Puntero_store_caja).
1766  917E              ;
1767  917E              ;	No situamos en la siguiente caja de entidades si esta está vacía.
1768  917E
1769  917E              Salta_caja_de_entidades_vacia
1770  917E
1771  917E DD 7E 00     	ld a,(ix+0)
1772  9181 A7           	and a
1773  9182 C0           	ret nz
1774  9183
1775  9183 CD 8D 91     	call Incrementa_punteros_de_cajas
1776  9186 DD 2A 2B 8C  	ld ix,(Puntero_store_caja)
1777  918A 18 F2        	jr Salta_caja_de_entidades_vacia
1778  918C
1779  918C C9           	ret
1780  918D
1781  918D              ; **************************************************************************************************
1782  918D              ;
1783  918D              ;	08/05/23
1784  918D              ;
1785  918D              ;	Incrementamos los dos punteros de entidades. (+1).
1786  918D
1787  918D              Incrementa_punteros_de_cajas
1788  918D
1789  918D 2A 2D 8C     	ld hl,(Puntero_restore_caja)
1790  9190 22 2B 8C     	ld (Puntero_store_caja),hl
1791  9193 2A 2F 8C     	ld hl,(Indice_restore_caja)
1792  9196 23           	inc hl
1793  9197 23           	inc hl
1794  9198 22 2F 8C     	ld (Indice_restore_caja),hl
1795  919B CD 43 91         call Extrae_address
1796  919E 22 2D 8C         ld (Puntero_restore_caja),hl
1797  91A1 C9               ret
1798  91A2
1799  91A2              ; -----------------------------------------------------------
1800  91A2
1801  91A2              ; Teclado.
1802  91A2
1803  91A2 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1804  91A4 DB FE        	in a,($fe)
1805  91A6 E6 01        	and $01
1806  91A8 28 02        	jr z,1f
1807  91AA 18 F6        	jr Pulsa_ENTER
1808  91AC C9           1 ret
1809  91AD
1810  91AD              ; **************************************************************************************************
1811  91AD              ;
1812  91AD              ; Temporización.
1813  91AD
1814  91AD              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1815  91AD              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1816  91AD              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1817  91AD              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1818  91AD
1819  91AD              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1820  91AD              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1821  91AD              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1822  91AD
1823  91AD              ; A partir de $4f61 no hace falta DELAY.
1824  91AD
1825  91AD              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1826  91AD
1827  91AD              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1828  91AD              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1829  91AD              ;	LD A,B
1830  91AD              ;	AND A
1831  91AD              ;	JR NZ,wait
1832  91AD              ;	RET
1833  91AD
1834  91AD              ; ---------------------------------------------------------------------------------------------------------------
1835  91AD              ;
1836  91AD              ;	13/07/24
1837  91AD              ;
1838  91AD
1839  91AD              Inicia_Shield
1840  91AD
1841  91AD 21 85 8C     	ld hl,Datos_Shield
1842  91B0 22 89 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1843  91B3
1844  91B3 7E           	ld a,(hl)
1845  91B4 32 8C 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1846  91B7
1847  91B7 3E 01        	ld a,1
1848  91B9 32 8D 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1849  91BC
1850  91BC C9           	ret
1851  91BD
1852  91BD              ; ---------- ---------- ---------- ---------- ----------
1853  91BD              ;
1854  91BD              ;	30/11/24
1855  91BD              ;
1856  91BD              ;	Limpia la caja de entidades de una entidad eliminada.
1857  91BD              ;
1858  91BD              ;	INPUT: IX contiene el 1er .db de la entidad en curso.
1859  91BD              ;	MODIFY: A,BC,DE y HL.
1860  91BD
1861  91BD              Limpia_caja_de_entidades
1862  91BD
1863  91BD DD E5        	push ix
1864  91BF E1           	pop hl
1865  91C0 AF           	xor a
1866  91C1 77           	ld (hl),a
1867  91C2 5D           	ld e,l
1868  91C3 54           	ld d,h
1869  91C4 1C           	inc e
1870  91C5 01 0B 00     	ld bc,11
1871  91C8 ED B0        	ldir
1872  91CA C9           	ret
1873  91CB
1874  91CB              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1875  91CB              ;
1876  91CB              ;	4/6/24
1877  91CB              ;
1878  91CB              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1879  91CB              ;
1880  91CB              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1881  91CB              ;
1882  91CB
1883  91CB              Actualiza_pantalla
1884  91CB
1885  91CB 3E 02        	ld a,2
1886  91CD D3 FE        	out ($fe),a
1887  91CF
1888  91CF 3A 62 8C     	ld a,(Ctrl_3)
1889  91D2 CB 57        	bit 2,a
1890  91D4 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1891  91D6
1892  91D6              Borrando_entidades
1893  91D6
1894  91D6 2A 5C 8C     	ld hl,(Scanlines_album_SP)
1895  91D9 CD 43 91     	call Extrae_address
1896  91DC 24           	inc h
1897  91DD 25           	dec h
1898  91DE 28 05        	jr z,Pintando_entidades
1899  91E0 CD 78 96     	call Pinta_Sprites
1900  91E3 18 F1        	jr Borrando_entidades
1901  91E5
1902  91E5              Pintando_entidades
1903  91E5
1904  91E5 2A 5E 8C     	ld hl,(India_SP)
1905  91E8 2C           	inc l
1906  91E9 CD 43 91     	call Extrae_address
1907  91EC 24           	inc h
1908  91ED 25           	dec h
1909  91EE 28 0E        	jr z,Ejecuta_escudo
1910  91F0 1C           	inc e
1911  91F1 1C           	inc e
1912  91F2 ED 53 5E 8C  	ld (India_SP),de
1913  91F6 CD 43 91     	call Extrae_address
1914  91F9 CD 78 96     	call Pinta_Sprites
1915  91FC 18 E7        	jr Pintando_entidades
1916  91FE
1917  91FE              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1918  91FE
1919  91FE              Ejecuta_escudo
1920  91FE
1921  91FE 3A 8B 8C     	ld a,(Shield)
1922  9201 A7           	and a
1923  9202 20 2F        	jr nz,Aplica_Shield
1924  9204
1925  9204              Borrando_Amadeus
1926  9204
1927  9204 21 62 8C     	ld hl,Ctrl_3
1928  9207 CB 6E        	bit 5,(hl)
1929  9209 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1930  920B
1931  920B 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
1932  920E CD 43 91     	call Extrae_address
1933  9211 24           	inc h
1934  9212 25           	dec h
1935  9213 28 03        	jr z,Pintando_Amadeus
1936  9215 CD 78 96     	call Pinta_Sprites
1937  9218
1938  9218              Pintando_Amadeus
1939  9218
1940  9218 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
1941  921B CD 43 91     	call Extrae_address
1942  921E 24           	inc h
1943  921F 25           	dec h
1944  9220 28 03        	jr z,1F
1945  9222 CD 78 96     	call Pinta_Sprites
1946  9225
1947  9225              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1948  9225
1949  9225 21 62 8C     1 ld hl,Ctrl_3
1950  9228 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1951  922A CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1952  922C CB AE        	res 5,(hl)
1953  922E
1954  922E 3E 01        	ld a,1												; Borde azul.
1955  9230 D3 FE        	out ($fe),a
1956  9232
1957  9232 C9           	ret
1958  9233
1959  9233              Aplica_Shield
1960  9233
1961  9233              ;	Bit 1 "1" (Shield_3) Sólo borra.
1962  9233              ;		  "0"     ""     Borra/Pinta.
1963  9233              ;	Bit 2    ""  RET.	 No borra, no pinta.
1964  9233
1965  9233 21 8D 8C     	ld hl,Shield_3
1966  9236
1967  9236 CB 5E        	bit 3,(hl)
1968  9238 20 DE        	jr nz,Pintando_Amadeus
1969  923A
1970  923A CB 56        	bit 2,(hl)
1971  923C 20 E7        	jr nz,1B
1972  923E
1973  923E CB 4E        	bit 1,(hl)
1974  9240 C4 47 92     	call nz,Borra_Amadeus_shield
1975  9243
1976  9243 28 BF        	jr z,Borrando_Amadeus
1977  9245 18 DE        	jr 1B
1978  9247
1979  9247              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1980  9247
1981  9247              Borra_Amadeus_shield
1982  9247
1983  9247 3A 62 8C     	ld a,(Ctrl_3)
1984  924A CB 6F        	bit 5,a
1985  924C 28 08        	jr z,1F
1986  924E
1987  924E 2A 44 8C     	ld hl,(Album_de_borrado_Amadeus)
1988  9251 CD 43 91     	call Extrae_address
1989  9254 18 06        	jr 2F
1990  9256
1991  9256 2A 42 8C     1 ld hl,(Album_de_pintado_Amadeus)
1992  9259 CD 43 91     	call Extrae_address
1993  925C
1994  925C CD 78 96     2 call Pinta_Sprites
1995  925F
1996  925F AF           	xor a
1997  9260 3C           	inc a											; Asegura NZ en la salida de la rutina.
1998  9261
1999  9261 C9           	ret
2000  9262
2001  9262              Pinta_Amadeus_shield
2002  9262
2003  9262 2A 42 8C     	ld hl,(Album_de_pintado_Amadeus)
2004  9265 CD 43 91     	call Extrae_address
2005  9268 CD 78 96     	call Pinta_Sprites
2006  926B
2007  926B AF           	xor a
2008  926C 3C           	inc a											; Asegura NZ en la salida de la rutina.
2009  926D
2010  926D C9           	ret
2011  926E
2012  926E              Borra_Pinta_Amadeus_shield
2013  926E
2014  926E CD 47 92     	call Borra_Amadeus_shield
2015  9271 CD 62 92     	call Pinta_Amadeus_shield
2016  9274 C9           	ret
2017  9275
2018  9275              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2019  9275              ;
2020  9275              ;	19/6/24
2021  9275              ;
2022  9275
2023  9275              Teclado
2024  9275
2025  9275              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2026  9275
2027  9275 3E F7        	ld a,$f7												; "5" para disparar.
2028  9277 DB FE        	in a,($fe)
2029  9279 E6 10        	and $10
2030  927B
2031  927B CC 19 A3     	call z,Genera_disparo_Amadeus
2032  927E
2033  927E 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2034  9280 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2035  9282 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2036  9284 CC E5 9D         call z,Amadeus_a_izquierda
2037  9287
2038  9287 3E F7        	ld a,$f7
2039  9289 DB FE        	in a,($fe)
2040  928B E6 01        	and $01
2041  928D C8           	ret z
2042  928E
2043  928E 3E F7        	ld a,$f7
2044  9290 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2045  9292 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2046  9294 CC FD 9D     	call z,Amadeus_a_derecha
2047  9297
2048  9297 C9           	ret
2049  9298
2050  9298              ; ------------------------------------------------------------------------------------------------------------------------
2051  9298              ;
2052  9298              ;	06/07/24
2053  9298              ;
2054  9298
2055  9298              Genera_explosion
2056  9298
2057  9298 21 74 8C     	ld hl,Clock_explosion
2058  929B 35           	dec (hl)
2059  929C 28 10        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2060  929E
2061  929E              Borra_entidad_colisionada
2062  929E
2063  929E CD 81 8F     	call Entidad_a_Tabla_de_pintado									; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2064  92A1
2065  92A1 DD E5        	push ix
2066  92A3 CD 9D 90     	call Cargamos_registros_con_explosion
2067  92A6 CD 84 95     	call Genera_datos_de_impresion
2068  92A9 DD E1        	pop ix
2069  92AB
2070  92AB AF           	xor a
2071  92AC 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2072  92AD
2073  92AD C9           	ret
2074  92AE
2075  92AE              Siguiente_frame_explosion
2076  92AE
2077  92AE 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2078  92B0
2079  92B0              ; Avanza Frame de explosión.
2080  92B0
2081  92B0 DD 6E 07     	ld l,(ix+7)
2082  92B3 DD 66 08     	ld h,(ix+8)														; ld hl,(Puntero_de_almacen_de_mov_masticados).
2083  92B6
2084  92B6 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2085  92B9
2086  92B9 79           	ld a,c
2087  92BA 95           	sub l
2088  92BB 20 41        	jr nz,1F
2089  92BD
2090  92BD
2091  92BD              ; Fín de la entidad !!!!!!!!!!!!!
2092  92BD              ; Gestionamos entidades !!!!!!!!!!!!!!!!!!!!!!!!!!
2093  92BD
2094  92BD              ; Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
2095  92BD              ; Numero_parcial_de_entidades db 0						; Nº de cajas que contiene un bloque de entidades. (6 Cajas).
2096  92BD              ; Entidades_en_curso db 0								; Entidades en pantalla.
2097  92BD
2098  92BD              ; La entidad eliminada, es la última del nivel ?
2099  92BD
2100  92BD 3A 33 8C     	ld a,(Numero_de_entidades)
2101  92C0 A7           	and a
2102  92C1 28 30        	jr z,2F
2103  92C3
2104  92C3              ; Decrementa (Numero_de_entidades)
2105  92C3
2106  92C3 3D           	dec a
2107  92C4 32 33 8C     	ld (Numero_de_entidades),a
2108  92C7 21 35 8C     	ld hl,Entidades_en_curso
2109  92CA 35           	dec (hl)
2110  92CB
2111  92CB              ; Restauramos una nueva entidad de la caja "Master" correspondiente.
2112  92CB              ; IX apunta al 1er .db de la entidad eliminada.
2113  92CB
2114  92CB 2A 31 8C     	ld hl,(Puntero_indice_master)
2115  92CE CD 43 91     	call Extrae_address
2116  92D1
2117  92D1 DD E5        	push ix
2118  92D3 D1           	pop de
2119  92D4
2120  92D4 01 0C 00     	ld bc,12
2121  92D7 ED B0        	ldir
2122  92D9
2123  92D9              ; Generamos (Puntero_de_impresion) y coordenadas de la nueva entidad restaurada.
2124  92D9
2125  92D9 CD 71 90     	call Obtenemos_puntero_de_impresion
2126  92DC
2127  92DC DD 6E 05     	ld l,(ix+5)
2128  92DF 2C           	inc l
2129  92E0 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
2130  92E3
2131  92E3 CD 58 95     	call Genera_coordenadas
2132  92E6
2133  92E6 ED 4B EC 8B  	ld bc,(Coordenada_X)
2134  92EA
2135  92EA DD 71 01     	ld (ix+1),c
2136  92ED DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
2137  92F0
2138  92F0 AF           	xor a
2139  92F1 3C           	inc a 														; Necesario NZ a la salida de la subrutina.
2140  92F2
2141  92F2 C9           	ret
2142  92F3
2143  92F3              ; Decrementa (Numero_parcial_de_entidades) y (Entidades_en_curso).
2144  92F3
2145  92F3 21 34 8C     2 ld hl,Numero_parcial_de_entidades
2146  92F6 35           	dec (hl)
2147  92F7 23           	inc hl
2148  92F8 35           	dec (hl)
2149  92F9
2150  92F9 CD BD 91     	call Limpia_caja_de_entidades
2151  92FC 18 A0        	jr Borra_entidad_colisionada
2152  92FE
2153  92FE 23           1 inc hl
2154  92FF 23           	inc hl
2155  9300
2156  9300 DD 75 07     	ld (ix+7),l
2157  9303 DD 74 08     	ld (ix+8),h														; (Puntero_de_almacen_de_mov_masticados) a la siguiente explosión.
2158  9306
2159  9306 18 96        	jr Borra_entidad_colisionada
2160  9308
2161  9308              ; ----- ----- ----- ----- -----
2162  9308
2163  9308              Genera_explosion_Amadeus
2164  9308
2165  9308 21 75 8C     	ld hl,Clock_explosion_Amadeus
2166  930B 35           	dec (hl)
2167  930C 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2168  930E
2169  930E              Borra_Amadeus_impactado
2170  930E
2171  930E CD EB 8E     	call Change_Amadeus
2172  9311 CD B1 90     	call Cargamos_registros_con_explosion_Amadeus
2173  9314 CD D2 90     	call Genera_datos_de_impresion_Amadeus
2174  9317
2175  9317 21 62 8C     	ld hl,Ctrl_3
2176  931A CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2177  931C
2178  931C AF           	xor a
2179  931D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2180  931E
2181  931E C9           	ret
2182  931F
2183  931F              Siguiente_frame_explosion_Amadeus
2184  931F
2185  931F 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2186  9321
2187  9321              ; Avanza Frame de explosión.
2188  9321
2189  9321 2A B5 89     	ld hl,(Pamm_Amadeus)
2190  9324 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2191  9327
2192  9327 79           	ld a,c
2193  9328 95           	sub l
2194  9329 20 0B        	jr nz,1F
2195  932B
2196  932B              ; Fín de Amadeus !!!!!!!!!!!!!
2197  932B              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2198  932B
2199  932B AF           	xor a
2200  932C 32 B2 89     	ld (Impacto_Amadeus),a
2201  932F 21 62 8C     	ld hl,Ctrl_3
2202  9332 CB F6        	set 6,(hl)
2203  9334
2204  9334 18 D8        	jr Borra_Amadeus_impactado
2205  9336
2206  9336 23           1 inc hl
2207  9337 23           	inc hl
2208  9338 22 B5 89     	ld (Pamm_Amadeus),hl
2209  933B 18 D1        	jr Borra_Amadeus_impactado
2210  933D
2211  933D              ; ---------------------------------------------------------------
2212  933D
2213  933D              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 933D              ; ******************************************************************************************************************************************************************************************
   2+ 933D              ;
   3+ 933D              ;   21/04/24
   4+ 933D              ;
   5+ 933D              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 933D              ;   (XOR) bit a bit.
   7+ 933D              ;
   8+ 933D              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 933D
  10+ 933D              Derivando_RND
  11+ 933D
  12+ 933D 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9340
  14+ 9340 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9342 C5               push bc
  16+ 9343              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9343 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9346              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9346
  20+ 9346 A7           6 and a                                 ; Carry a "0".
  21+ 9347 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9349 30 02            jr nc,1F
  23+ 934B
  24+ 934B CB C1            set 0,c
  25+ 934D
  26+ 934D 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 934E E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9350 5F               ld e,a
  29+ 9351
  30+ 9351 7A               ld a,d
  31+ 9352 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9354 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9356
  34+ 9356 CB 3F            srl a
  35+ 9358
  36+ 9358 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9359
  38+ 9359 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 935A 28 04            jr z,4F
  40+ 935C
  41+ 935C CB FF            set 7,a
  42+ 935E 18 02            jr 5F
  43+ 9360
  44+ 9360 CB BF        4 res 7,a
  45+ 9362
  46+ 9362 CB 21        5 sla c
  47+ 9364 10 E0            djnz 6B
  48+ 9366
  49+ 9366 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9367
  51+ 9367 77               ld (hl),a
  52+ 9368 23               inc hl
  53+ 9369 C1               pop bc
  54+ 936A 10 D4            djnz 3B
  55+ 936C
  56+ 936C C9               ret
  57+ 936D
  58+ 936D
  59+ 936D
# file closed: RND_Derivando.asm
2214  936D              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 936D              ;---------------------------------------------------------------------------------------------------------------
   2+ 936D              ;
   3+ 936D              ;   13/11/24
   4+ 936D
   5+ 936D              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 936D
   7+ 936D              Genera_movimientos_masticados_del_nivel
   8+ 936D
   9+ 936D              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 936D
  11+ 936D              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 936D              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 936D              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 936D
  15+ 936D 2D           	dec l
  16+ 936E 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 936F 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 9370 4E           	ld c,(hl)
  19+ 9371
  20+ 9371 E5           1 push hl														; Push (Datos_de_nivel).
  21+ 9372 C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 9373
  23+ 9373              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 9373
  25+ 9373 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 9374
  27+ 9374 CD B2 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9377
  29+ 9377              ;	Caja Master inicializada ???
  30+ 9377
  31+ 9377 7E           	ld a,(hl)
  32+ 9378 A7           	and a
  33+ 9379 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 937B
  35+ 937B              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 937B
  37+ 937B C1           	pop bc
  38+ 937C 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 937D C5           	push bc
  40+ 937E
  41+ 937E CD 52 94     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 9381 CD E6 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 9384
  44+ 9384 3A EB 8B     	ld a,(Tipo)
  45+ 9387 CD C2 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 938A
  47+ 938A              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 938A
  49+ 938A              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 938A              ;	ld a,(hl)
  51+ 938A              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 938A
  53+ 938A              ;	ld hl,Posicion_inicio
  54+ 938A              ;	ld (hl),a
  55+ 938A
  56+ 938A              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 938A              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 938A
  59+ 938A CD 1D 90     	call Construye_movimientos_masticados_entidad
  60+ 938D
  61+ 938D 2A 31 8C     	ld hl,(Puntero_indice_master)
  62+ 9390 CD 43 91     	call Extrae_address
  63+ 9393
  64+ 9393 5D           	ld e,l
  65+ 9394 54           	ld d,h
  66+ 9395
  67+ 9395 CD 13 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9398
  69+ 9398              Movimientos_masticados_construidos
  70+ 9398
  71+ 9398 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9399
  73+ 9399 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 939A 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 939B
  76+ 939B 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 939C 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 939E
  79+ 939E C9           	ret
  80+ 939F
  81+ 939F              ;---------------------------------------------------------------------------------------------------------------
  82+ 939F              ;
  83+ 939F              ;   9/11/24
  84+ 939F              ;
  85+ 939F              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 939F              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 939F              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 939F              ;	_ de la 1ª entidad del Nivel.
  89+ 939F              ;
  90+ 939F              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 939F
  92+ 939F              ;	MODIFICA: HL,DE y A.
  93+ 939F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 939F
  95+ 939F              Inicializa_1er_Nivel
  96+ 939F
  97+ 939F              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 939F
  99+ 939F 21 D3 8B     	ld hl,Indice_de_niveles
 100+ 93A2 CD 43 91     	call Extrae_address
 101+ 93A5 ED 53 81 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 93A9
 103+ 93A9 7E           	ld a,(hl)
 104+ 93AA 32 33 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 93AD
 106+ 93AD 2C           	inc l
 107+ 93AE 22 83 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 93B1
 109+ 93B1 C9           	ret
 110+ 93B2
 111+ 93B2              ; ----------------------
 112+ 93B2              ;
 113+ 93B2              ;	13/11/24
 114+ 93B2              ;
 115+ 93B2
 116+ 93B2              Situa_en_Caja_Master
 117+ 93B2
 118+ 93B2 CD D1 94         call Calcula_salto_en_BC
 119+ 93B5 21 58 89         ld hl,Indice_de_cajas_master
 120+ 93B8 A7               and a
 121+ 93B9 ED 4A            adc hl,bc
 122+ 93BB 22 31 8C       	ld (Puntero_indice_master),hl
 123+ 93BE CD 43 91     	call Extrae_address
 124+ 93C1 C9           	ret
 125+ 93C2
 126+ 93C2              ; ----------------------
 127+ 93C2
 128+ 93C2              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 93C2              ; 	ld bc,4
 130+ 93C2              ; 	ldir
 131+ 93C2              ; 	ret
 132+ 93C2
 133+ 93C2 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 93C3 CD D1 94         call Calcula_salto_en_BC
 135+ 93C6 21 18 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 93C9 A7               and a
 137+ 93CA ED 4A            adc hl,bc
 138+ 93CC CD 43 91         call Extrae_address
 139+ 93CF 22 1C 8C         ld (Puntero_indice_mov),hl
 140+ 93D2 C9               ret
 141+ 93D3
 142+ 93D3              ;---------------------------------------------------------------------------------------------------------------
 143+ 93D3              ;
 144+ 93D3              ;   13/11/24
 145+ 93D3              ;
 146+ 93D3              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 93D3
 148+ 93D3
 149+ 93D3              Prepara_Cajas_de_Entidades
 150+ 93D3
 151+ 93D3              ; Preparamos los punteros de las cajas de entidades:
 152+ 93D3
 153+ 93D3 CD 2D 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 93D6              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 93D6 CD 1C 95     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 93D9
 157+ 93D9 2A 83 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 93DC
 159+ 93DC              ; En este punto:
 160+ 93DC              ;
 161+ 93DC              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 93DC              ; B contiene (Numero_parcial_de_entidades).
 163+ 93DC
 164+ 93DC C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 93DD
 166+ 93DD 7E           	ld a,(hl)
 167+ 93DE
 168+ 93DE CD B2 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 93E1
 170+ 93E1 ED 5B 2B 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 93E5
 172+ 93E5 D5           	push de
 173+ 93E6 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 93E8
 175+ 93E8 01 0C 00     	ld bc,12
 176+ 93EB ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 93ED              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 93ED
 179+ 93ED              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 93ED              ;
 181+ 93ED              ;
 182+ 93ED              ; ------------------------------------------------------ IX
 183+ 93ED              ; ------------------------------------------------------ IX
 184+ 93ED              ; ------------------------------------------------------ IX
 185+ 93ED              ; ------------------------------------------------------ IX
 186+ 93ED
 187+ 93ED DD E5        	push ix														; Push 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 188+ 93EF
 189+ 93EF CD 71 90     	call Obtenemos_puntero_de_impresion
 190+ 93F2
 191+ 93F2 DD 6E 05     	ld l,(ix+5)
 192+ 93F5 2C           	inc l
 193+ 93F6 DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 194+ 93F9
 195+ 93F9 D5           	push de														; Push (Puntero_objeto).
 196+ 93FA E5           	push hl														; Push (Puntero_de_impresion).
 197+ 93FB
 198+ 93FB CD 58 95     	call Genera_coordenadas
 199+ 93FE
 200+ 93FE ED 4B EC 8B  	ld bc,(Coordenada_X)
 201+ 9402
 202+ 9402 DD 71 01     	ld (ix+1),c
 203+ 9405 DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 204+ 9408
 205+ 9408 CD 81 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 940B
 207+ 940B DD E1        	pop ix														; Pop (Puntero_de_impresion) en IX.
 208+ 940D D1           	pop de														; Pop (Puntero_objeto) en DE.
 209+ 940E
 210+ 940E CD 84 95     	call Genera_datos_de_impresion
 211+ 9411
 212+ 9411 DD E1        	pop ix														; Pop 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 213+ 9413
 214+ 9413              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 9413
 216+ 9413 CD 8A 94     	call Decrementa_Contador_de_mov_masticados
 217+ 9416 CD 67 94     	call Limpiamos_bandeja_DRAW
 218+ 9419 CD 8D 91     	call Incrementa_punteros_de_cajas
 219+ 941C
 220+ 941C              ; Siguiente entidad del Nivel.
 221+ 941C
 222+ 941C 2A 83 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 223+ 941F 23           	inc hl 														; _ entidad del Nivel.
 224+ 9420
 225+ 9420 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 226+ 9421
 227+ 9421 10 B9        	djnz 1B
 228+ 9423
 229+ 9423 C9           	ret
 230+ 9424
 231+ 9424              ; -------------------------------------------------------------------------------------------------------------------
 232+ 9424              ;
 233+ 9424              ;	27/5/24
 234+ 9424              ;
 235+ 9424              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 236+ 9424              ;
 237+ 9424
 238+ 9424              ; 	Cargamos la definición de Amadeus en DRAW.
 239+ 9424              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 240+ 9424
 241+ 9424 21 2A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 242+ 9427 CD E6 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 243+ 942A
 244+ 942A
 245+ 942A              Construye_movimientos_masticados_Amadeus
 246+ 942A
 247+ 942A 2A F2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 248+ 942D CD 64 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 249+ 9430              ;															; _ el (Contador_de_mov_masticados).
 250+ 9430 CD 49 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 251+ 9433              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 252+ 9433
 253+ 9433              ; Generamos movimientos masticados de Amadeus.
 254+ 9433
 255+ 9433 06 79        	ld b,121												; $0079, 121d.
 256+ 9435
 257+ 9435 C5           1 push bc
 258+ 9436 CD 9B 97     	call Draw
 259+ 9439 CD 49 90     	call Guarda_movimiento_masticado
 260+ 943C
 261+ 943C CD 0F 9B     	call Mov_right
 262+ 943F CD 0F 9B     	call Mov_right											; Amadeus se mueve x2 pixel.
 263+ 9442
 264+ 9442 C1           	pop bc
 265+ 9443 10 F0        	djnz 1B
 266+ 9445
 267+ 9445              ; Todos los movimientos masticados de Amadeus se han creado.
 268+ 9445
 269+ 9445              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 270+ 9445              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 271+ 9445
 272+ 9445 2A F2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 273+ 9448 01 08 00     	ld bc,8
 274+ 944B A7           	and a
 275+ 944C ED 42        	sbc hl,bc
 276+ 944E 22 F2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 277+ 9451
 278+ 9451 C9           	ret
 279+ 9452
 280+ 9452              ; ---------------------------------------------------------------------
 281+ 9452              ;
 282+ 9452              ;	10/02/24
 283+ 9452              ;
 284+ 9452              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 285+ 9452              ;
 286+ 9452              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 287+ 9452
 288+ 9452              Definicion_segun_tipo
 289+ 9452
 290+ 9452 CD D1 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 291+ 9455 21 0C 8A     	ld hl,Indice_de_definiciones_de_entidades
 292+ 9458 CD DC 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 293+ 945B C9           	ret
 294+ 945C
 295+ 945C              ; ---------------------------------------------------------------------
 296+ 945C              ;
 297+ 945C              ;	6/7/24
 298+ 945C
 299+ 945C
 300+ 945C              Store_Restore_cajas
 301+ 945C
 302+ 945C ED 5B 2B 8C  	ld de,(Puntero_store_caja)
 303+ 9460 CD 13 95     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 304+ 9463 CD 8D 91     	call Incrementa_punteros_de_cajas
 305+ 9466 C9           	ret
 306+ 9467
 307+ 9467              ; ---------------------------------------------------------------------
 308+ 9467              ;
 309+ 9467              ;	23/6/24
 310+ 9467              ;
 311+ 9467              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 312+ 9467              ;
 313+ 9467              ;	MODIFY: HL
 314+ 9467
 315+ 9467              Limpiamos_bandeja_DRAW
 316+ 9467
 317+ 9467 ED 73 3A 8C  	ld (Stack),sp
 318+ 946B 31 10 8C     	ld sp,Vel_left
 319+ 946E
 320+ 946E AF           	xor a
 321+ 946F 67           	ld h,a
 322+ 9470 6F           	ld l,a
 323+ 9471
 324+ 9471 E5           	push hl
 325+ 9472 E5           	push hl
 326+ 9473 E5           	push hl
 327+ 9474 E5           	push hl
 328+ 9475 E5           	push hl
 329+ 9476 E5           	push hl
 330+ 9477 E5           	push hl
 331+ 9478 E5           	push hl
 332+ 9479 E5           	push hl
 333+ 947A E5           	push hl
 334+ 947B E5           	push hl
 335+ 947C E5           	push hl
 336+ 947D E5           	push hl
 337+ 947E E5           	push hl
 338+ 947F E5           	push hl
 339+ 9480 E5           	push hl
 340+ 9481 E5           	push hl
 341+ 9482 E5           	push hl
 342+ 9483
 343+ 9483 33           	inc sp
 344+ 9484
 345+ 9484 E5           	push hl
 346+ 9485 ED 7B 3A 8C  	ld sp,(Stack)
 347+ 9489
 348+ 9489 C9           	ret
 349+ 948A
 350+ 948A              ; ---------------------------------------------------------------------
 351+ 948A              ;
 352+ 948A              ;	23/11/24
 353+ 948A              ;
 354+ 948A              ;	Actualiza el (Contador_de_mov_masticados) de la entidad.
 355+ 948A
 356+ 948A              Decrementa_Contador_de_mov_masticados
 357+ 948A
 358+ 948A DD 6E 09     	ld l,(ix+9)
 359+ 948D DD 66 0A     	ld h,(ix+10)
 360+ 9490
 361+ 9490 2B           	dec hl
 362+ 9491
 363+ 9491 DD 75 09     	ld (ix+9),l
 364+ 9494 DD 74 0A     	ld (ix+10),h
 365+ 9497
 366+ 9497 C9           	ret
 367+ 9498
 368+ 9498              ; ---------------------------------------------------------------------
 369+ 9498              ;
 370+ 9498              ;	24/11/24
 371+ 9498
 372+ 9498              Reinicia_entidad_maliciosa
 373+ 9498
 374+ 9498              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 375+ 9498
 376+ 9498 CD 7C 9F     	call Situa_en_contador_general_de_mov_masticados					; [[Movimiento]]
 377+ 949B CD 89 9F     	call Transfiere_datos_de_contadores
 378+ 949E
 379+ 949E              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 380+ 949E
 381+ 949E DD 7E 00     	ld a,(ix+0)															; ld a,(Tipo)
 382+ 94A1 CD 52 94     	call Definicion_segun_tipo											; HL apunta al 1er .db (Tipo) de la "Definición" de este (Tipo) de entidad.
 383+ 94A4
 384+ 94A4 7D           	ld a,l
 385+ 94A5 C6 0B        	add 11
 386+ 94A7 6F           	ld l,a 																; Situamos en el .defw (Almacen_de_movimientos_masticados) de la definición de entidad.
 387+ 94A8
 388+ 94A8 CD 43 91     	call Extrae_address
 389+ 94AB
 390+ 94AB DD 75 07     	ld (ix+7),l
 391+ 94AE DD 74 08     	ld (ix+8),h
 392+ 94B1
 393+ 94B1 CD 71 90     	call Obtenemos_puntero_de_impresion
 394+ 94B4
 395+ 94B4              ; Incrementa (Contador_de_vueltas)x2.
 396+ 94B4              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 397+ 94B4
 398+ 94B4              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 399+ 94B4              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 400+ 94B4              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 401+ 94B4              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 402+ 94B4              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 403+ 94B4
 404+ 94B4 DD CB 03 26  	sla (ix+3)									; sla (Contador_de_vueltas).
 405+ 94B8
 406+ 94B8 DD 7E 03     	ld a,(ix+3)   								; ld a,(Contador_de_vueltas)
 407+ 94BB CB 2F        	sra a
 408+ 94BD CB 2F        	sra a
 409+ 94BF
 410+ 94BF DD 77 0B     	ld (ix+11),a 								; ld (Velocidad),a
 411+ 94C2
 412+ 94C2 3E 40        	ld a,$40
 413+ 94C4 DD BE 03     	cp (ix+3)
 414+ 94C7 C0           	ret nz
 415+ 94C8
 416+ 94C8              ; Límitador.
 417+ 94C8
 418+ 94C8              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 419+ 94C8
 420+ 94C8 DD CB 03 2E  	sra (ix+3)
 421+ 94CC DD CB 0B 2E  	sra (ix+11)
 422+ 94D0
 423+ 94D0 C9           	ret
 424+ 94D1
 425+ 94D1              ;	------------------------------------------------------------------------------------
 426+ 94D1              ;
 427+ 94D1              ;	09/11/24
 428+ 94D1              ;
 429+ 94D1              ;	INPUTS:	A contiene el (Tipo) de entidad.
 430+ 94D1              ;
 431+ 94D1              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 432+ 94D1              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 433+ 94D1
 434+ 94D1 A7           Calcula_salto_en_BC and a
 435+ 94D2 28 04        	jr z,1F
 436+ 94D4 CB 27        	sla a
 437+ 94D6 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 438+ 94D8 4F           1 ld c,a
 439+ 94D9 06 00        	ld b,0
 440+ 94DB C9           	ret
 441+ 94DC
 442+ 94DC              ; ------------------------------------------------------------------
 443+ 94DC              ;
 444+ 94DC              ;	19/1/24
 445+ 94DC              ;
 446+ 94DC              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 447+ 94DC              ;	Actualiza (Datos_de_entidad) con esa dirección.
 448+ 94DC
 449+ 94DC A7           Situa_en_datos_de_definicion and a
 450+ 94DD ED 4A        	adc hl,bc
 451+ 94DF CD 43 91     	call Extrae_address
 452+ 94E2 22 38 8C         ld (Datos_de_entidad),hl
 453+ 94E5 C9           	ret
 454+ 94E6
 455+ 94E6              ; ----------------------------------------------------------------------------------------------------------
 456+ 94E6              ;
 457+ 94E6              ;	24/6/24
 458+ 94E6              ;
 459+ 94E6              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 460+ 94E6              ;	_ de entidad.
 461+ 94E6              ;
 462+ 94E6              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 463+ 94E6              ;
 464+ 94E6              ;
 465+ 94E6              ;	MODIFICA: HL,DE y BC
 466+ 94E6
 467+ 94E6
 468+ 94E6              Definicion_de_entidad_a_bandeja_DRAW
 469+ 94E6
 470+ 94E6 11 EB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 471+ 94E9 7E           	ld a,(hl) 									; Volcamos Tipo.
 472+ 94EA 12           	ld (de),a
 473+ 94EB 23           	inc hl
 474+ 94EC              ;
 475+ 94EC 11 F9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 476+ 94EF 01 02 00     	ld bc,2
 477+ 94F2 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 478+ 94F4              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 479+ 94F4 11 EE 8B     	ld de,Contador_de_vueltas
 480+ 94F7 7E           	ld a,(hl)
 481+ 94F8 12           	ld (de),a
 482+ 94F9 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 483+ 94FA
 484+ 94FA 11 00 8C     	ld de,Indice_Sprite_der
 485+ 94FD 01 04 00     	ld bc,4
 486+ 9500 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 487+ 9502
 488+ 9502 11 08 8C     	ld de,Posicion_inicio
 489+ 9505 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 490+ 9508 ED B0        	ldir 									; Vuelco (Frames_explosion).
 491+ 950A
 492+ 950A 11 F2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 493+ 950D 01 02 00     	ld bc,2
 494+ 9510 ED B0        	ldir
 495+ 9512
 496+ 9512 C9           	ret
 497+ 9513
 498+ 9513              ; ----------------------------------------------------------------------------------------------------------
 499+ 9513              ;
 500+ 9513              ;	1/8/24
 501+ 9513              ;
 502+ 9513
 503+ 9513              Parametros_de_bandeja_DRAW_a_caja
 504+ 9513
 505+ 9513 21 EB 8B     	ld hl,Bandeja_DRAW
 506+ 9516 01 0C 00     	ld bc,12
 507+ 9519 ED B0        	ldir
 508+ 951B C9           	ret
 509+ 951C
 510+ 951C              ;---------------------------------------------------------------------------------------------------------------
 511+ 951C              ;
 512+ 951C              ;	13/11/24
 513+ 951C              ;
 514+ 951C              ;	INICIALIZA (Numero_parcial_de_entidades).
 515+ 951C              ;
 516+ 951C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 517+ 951C              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 518+ 951C
 519+ 951C              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 520+ 951C              ;			- Actualiza (Numero_de_entidades).
 521+ 951C
 522+ 951C              ;	MODIFICA: A y B.
 523+ 951C
 524+ 951C
 525+ 951C              Inicializa_Numero_parcial_de_entidades
 526+ 951C
 527+ 951C 3A 33 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 528+ 951F FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 529+ 9521 38 0E        	jr c,1F
 530+ 9523 28 0C        	jr z,1F
 531+ 9525
 532+ 9525              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 9525              ; Actualizamos variables.
 534+ 9525
 535+ 9525 D6 06        	sub 6
 536+ 9527 32 33 8C     	ld (Numero_de_entidades),a
 537+ 952A 3E 06        	ld a,6
 538+ 952C 32 34 8C     	ld (Numero_parcial_de_entidades),a
 539+ 952F 47           	ld b,a
 540+ 9530 C9           	ret
 541+ 9531
 542+ 9531              ; El nº total de entidades no supera el nº de cajas de entidades.
 543+ 9531              ; (Numero_de_entidades)="0".
 544+ 9531
 545+ 9531 32 34 8C     1 ld (Numero_parcial_de_entidades),a
 546+ 9534 47           	ld b,a
 547+ 9535 AF           	xor a
 548+ 9536 32 33 8C     	ld (Numero_de_entidades),a
 549+ 9539 C9           	ret
 550+ 953A
# file closed: Rutinas_de_inicio_y_niveles.asm
2215  953A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 953A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 953A              ;
   3+ 953A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 953A              ;
   5+ 953A              ; *****************************************************************************************************************************************************************************************
   6+ 953A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 953A
   8+ 953A 7C           calcula_tercio ld a,h
   9+ 953B E6 18        	and $18
  10+ 953D CB 2F        	sra a
  11+ 953F CB 2F        	sra a
  12+ 9541 CB 2F        	sra a
  13+ 9543 C9           	ret
  14+ 9544
# file closed: calcula_tercio.asm
2216  9544              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9544              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9544              ;
   3+ 9544              ;
   4+ 9544              ;	CLS.
   5+ 9544              ;
   6+ 9544              ;	Limpia la pantalla y define sus atributos.
   7+ 9544              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9544              ;
   9+ 9544              ;	COLORES: 0 ..... NEGRO
  10+ 9544              ;    		 1 ..... AZUL
  11+ 9544              ; 			 2 ..... ROJO
  12+ 9544              ;			 3 ..... MAGENTA
  13+ 9544              ; 			 4 ..... VERDE
  14+ 9544              ; 			 5 ..... CIAN
  15+ 9544              ;			 6 ..... AMARILLO
  16+ 9544              ; 			 7 ..... BLANCO
  17+ 9544              ;
  18+ 9544              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9544              ;
  20+ 9544              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9544
  22+ 9544
  23+ 9544 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9547 11 01 40     	LD DE,$4001
  25+ 954A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 954D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 954F ED B0        	LDIR
  28+ 9551 01 FF 02     	LD BC,767
  29+ 9554 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9555 ED B0        	LDIR
  31+ 9557 C9           	ret
  32+ 9558
# file closed: Cls.asm
2217  9558              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9558              ; ------------------------------------------------------------------------
   2+ 9558              ;
   3+ 9558              ;	30/1/24
   4+ 9558              ;
   5+ 9558              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9558              ;	Fila superior "0", Columna izquierda "0".
   7+ 9558              ;
   8+ 9558              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9558              ;
  10+ 9558              ;	Modifica: A,BC y DE.
  11+ 9558
  12+ 9558              Genera_coordenadas
  13+ 9558
  14+ 9558 7D           	ld a,l
  15+ 9559 E6 1F        	and $1f
  16+ 955B
  17+ 955B 32 EC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 955E
  19+ 955E 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 955F FE 40        	cp $40
  21+ 9561 38 1C        	jr c,4F
  22+ 9563
  23+ 9563 CD 3A 95     	call calcula_tercio
  24+ 9566 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 9567
  26+ 9567 1E 00        	ld e,0
  27+ 9569 7D           	ld a,l
  28+ 956A E6 E0        	and $e0
  29+ 956C 28 01        	jr z,1F
  30+ 956E 04           	inc b
  31+ 956F
  32+ 956F 04           1 inc b
  33+ 9570 05           	dec b
  34+ 9571 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 9573              ;														; _ , salimos.
  36+ 9573 1C           3 inc e
  37+ 9574 D6 20        	sub 32
  38+ 9576 20 FB        	jr nz,3B
  39+ 9578 10 F5        	djnz 1B
  40+ 957A
  41+ 957A 7B           2 ld a,e
  42+ 957B 32 ED 8B     	ld (Coordenada_y),a
  43+ 957E C9           	ret
  44+ 957F
  45+ 957F AF           4 xor a
  46+ 9580 32 ED 8B     	ld (Coordenada_y),a
  47+ 9583 C9           	ret
  48+ 9584
# file closed: Genera_coordenadas.asm
2218  9584              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9584              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9584              ;
   3+ 9584              ;	20/09/24
   4+ 9584              ;
   5+ 9584              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9584              ;   DE contiene Puntero_objeto.
   7+ 9584              ;   IX contiene el Puntero de impresión.
   8+ 9584
   9+ 9584              Genera_datos_de_impresion
  10+ 9584
  11+ 9584 ED 73 3A 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9588
  13+ 9588 2A 5C 8C         ld hl,(Scanlines_album_SP)
  14+ 958B
  15+ 958B 3E 05            ld a,5
  16+ 958D 85               add l
  17+ 958E 6F               ld l,a
  18+ 958F
  19+ 958F F9               ld sp,hl
  20+ 9590 22 5C 8C         ld (Scanlines_album_SP),hl
  21+ 9593
  22+ 9593 21 00 00         ld hl,0
  23+ 9596
  24+ 9596 DD E5            push ix
  25+ 9598 3B               dec sp
  26+ 9599 ED 7A            adc hl,sp
  27+ 959B D5               push de
  28+ 959C
  29+ 959C              ; Recuperamos SP.
  30+ 959C
  31+ 959C ED 7B 3A 8C      ld sp,(Stack)
  32+ 95A0
  33+ 95A0 E5               push hl
  34+ 95A1 F1               pop af
  35+ 95A2 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  36+ 95A3
  37+ 95A3              ; Tenemos el encabezado listo.
  38+ 95A3              ; Preparamos registros para generar los scanlines.
  39+ 95A3
  40+ 95A3 DD E5            push ix
  41+ 95A5 E1               pop hl                                          ; 1er scanline en HL.
  42+ 95A6
  43+ 95A6 ED 5B 5C 8C      ld de,(Scanlines_album_SP)
  44+ 95AA
  45+ 95AA              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  46+ 95AA              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  47+ 95AA
  48+ 95AA 7C               ld a,h
  49+ 95AB FE 50            cp $50
  50+ 95AD 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  51+ 95AF
  52+ 95AF 20 05            jr nz,2F
  53+ 95B1
  54+ 95B1 7D               ld a,l
  55+ 95B2 FE E0            cp $e0
  56+ 95B4 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  57+ 95B6
  58+ 95B6 7D           2 ld a,l
  59+ 95B7 FE C0            cp $c0
  60+ 95B9 D2 4F 96         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  61+ 95BC
  62+ 95BC              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  63+ 95BC
  64+ 95BC CD 4D 9A         call NextScan
  65+ 95BF EB               ex de,hl
  66+ 95C0
  67+ 95C0 73               ld (hl),e
  68+ 95C1 23               inc hl
  69+ 95C2 72               ld (hl),d
  70+ 95C3 23               inc hl
  71+ 95C4
  72+ 95C4 EB               ex de,hl
  73+ 95C5
  74+ 95C5 CD 4D 9A         call NextScan
  75+ 95C8 EB               ex de,hl
  76+ 95C9
  77+ 95C9 73               ld (hl),e
  78+ 95CA 23               inc hl
  79+ 95CB 72               ld (hl),d
  80+ 95CC 23               inc hl
  81+ 95CD
  82+ 95CD EB               ex de,hl
  83+ 95CE
  84+ 95CE CD 4D 9A         call NextScan
  85+ 95D1 EB               ex de,hl
  86+ 95D2
  87+ 95D2 73               ld (hl),e
  88+ 95D3 23               inc hl
  89+ 95D4 72               ld (hl),d
  90+ 95D5 23               inc hl
  91+ 95D6
  92+ 95D6 EB               ex de,hl
  93+ 95D7
  94+ 95D7 CD 4D 9A         call NextScan
  95+ 95DA EB               ex de,hl
  96+ 95DB
  97+ 95DB 73               ld (hl),e
  98+ 95DC 23               inc hl
  99+ 95DD 72               ld (hl),d
 100+ 95DE 23               inc hl
 101+ 95DF
 102+ 95DF EB               ex de,hl
 103+ 95E0
 104+ 95E0 CD 4D 9A         call NextScan
 105+ 95E3 EB               ex de,hl
 106+ 95E4
 107+ 95E4 73               ld (hl),e
 108+ 95E5 23               inc hl
 109+ 95E6 72               ld (hl),d
 110+ 95E7 23               inc hl
 111+ 95E8
 112+ 95E8 EB               ex de,hl
 113+ 95E9
 114+ 95E9 CD 4D 9A         call NextScan
 115+ 95EC EB               ex de,hl
 116+ 95ED
 117+ 95ED 73               ld (hl),e
 118+ 95EE 23               inc hl
 119+ 95EF 72               ld (hl),d
 120+ 95F0 23               inc hl
 121+ 95F1
 122+ 95F1 EB               ex de,hl
 123+ 95F2
 124+ 95F2 CD 4D 9A         call NextScan
 125+ 95F5 EB               ex de,hl
 126+ 95F6
 127+ 95F6 73               ld (hl),e
 128+ 95F7 23               inc hl
 129+ 95F8 72               ld (hl),d
 130+ 95F9 23               inc hl
 131+ 95FA
 132+ 95FA EB               ex de,hl
 133+ 95FB
 134+ 95FB CD 4D 9A         call NextScan
 135+ 95FE EB               ex de,hl
 136+ 95FF
 137+ 95FF 73               ld (hl),e
 138+ 9600 23               inc hl
 139+ 9601 72               ld (hl),d
 140+ 9602 23               inc hl
 141+ 9603
 142+ 9603 EB               ex de,hl
 143+ 9604
 144+ 9604 CD 4D 9A         call NextScan
 145+ 9607 EB               ex de,hl
 146+ 9608
 147+ 9608 73               ld (hl),e
 148+ 9609 23               inc hl
 149+ 960A 72               ld (hl),d
 150+ 960B 23               inc hl
 151+ 960C
 152+ 960C EB               ex de,hl
 153+ 960D
 154+ 960D CD 4D 9A         call NextScan
 155+ 9610 EB               ex de,hl
 156+ 9611
 157+ 9611 73               ld (hl),e
 158+ 9612 23               inc hl
 159+ 9613 72               ld (hl),d
 160+ 9614 23               inc hl
 161+ 9615
 162+ 9615 EB               ex de,hl
 163+ 9616
 164+ 9616 CD 4D 9A         call NextScan
 165+ 9619 EB               ex de,hl
 166+ 961A
 167+ 961A 73               ld (hl),e
 168+ 961B 23               inc hl
 169+ 961C 72               ld (hl),d
 170+ 961D 23               inc hl
 171+ 961E
 172+ 961E EB               ex de,hl
 173+ 961F
 174+ 961F CD 4D 9A         call NextScan
 175+ 9622 EB               ex de,hl
 176+ 9623
 177+ 9623 73               ld (hl),e
 178+ 9624 23               inc hl
 179+ 9625 72               ld (hl),d
 180+ 9626 23               inc hl
 181+ 9627
 182+ 9627 EB               ex de,hl
 183+ 9628
 184+ 9628 CD 4D 9A         call NextScan
 185+ 962B EB               ex de,hl
 186+ 962C
 187+ 962C 73               ld (hl),e
 188+ 962D 23               inc hl
 189+ 962E 72               ld (hl),d
 190+ 962F 23               inc hl
 191+ 9630
 192+ 9630 EB               ex de,hl
 193+ 9631
 194+ 9631 CD 4D 9A         call NextScan
 195+ 9634 EB               ex de,hl
 196+ 9635
 197+ 9635 73               ld (hl),e
 198+ 9636 23               inc hl
 199+ 9637 72               ld (hl),d
 200+ 9638 23               inc hl
 201+ 9639
 202+ 9639 EB               ex de,hl
 203+ 963A
 204+ 963A CD 4D 9A         call NextScan
 205+ 963D EB               ex de,hl
 206+ 963E
 207+ 963E              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 208+ 963E              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 209+ 963E              ;   _ generar sus scanlines.
 210+ 963E
 211+ 963E              ;    ld (Puntero_de_impresion_disparo),de
 212+ 963E
 213+ 963E 73               ld (hl),e
 214+ 963F 23               inc hl
 215+ 9640 72               ld (hl),d
 216+ 9641 23               inc hl
 217+ 9642
 218+ 9642              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 219+ 9642
 220+ 9642 22 5C 8C         ld (Scanlines_album_SP),hl
 221+ 9645
 222+ 9645 EB               ex de,hl
 223+ 9646
 224+ 9646              ; El disparo aparecerá dos líneas por debajo de la entidad.
 225+ 9646
 226+ 9646              ;    call NextScan
 227+ 9646              ;    call NextScan
 228+ 9646
 229+ 9646 22 67 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 230+ 9649
 231+ 9649              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 232+ 9649
 233+ 9649 08               ex af,af
 234+ 964A
 235+ 964A F5               push af
 236+ 964B E1               pop hl
 237+ 964C
 238+ 964C 36 10            ld (hl),16
 239+ 964E
 240+ 964E C9               ret
 241+ 964F
 242+ 964F              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 243+ 964F
 244+ 964F              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 245+ 964F
 246+ 964F 3E 57            ld a,$57
 247+ 9651 94               sub h
 248+ 9652 47               ld b,a
 249+ 9653
 250+ 9653 3E DF            ld a,$df
 251+ 9655 BD               cp l
 252+ 9656 38 04            jr c,1F
 253+ 9658
 254+ 9658 3E 08            ld a,8
 255+ 965A 80               add b
 256+ 965B 47               ld b,a
 257+ 965C
 258+ 965C              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 259+ 965C              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 260+ 965C
 261+ 965C 48           1 ld c,b
 262+ 965D 0C               inc c
 263+ 965E
 264+ 965E 04               inc b
 265+ 965F 05               dec b
 266+ 9660 20 02            jr nz,3F
 267+ 9662
 268+ 9662 18 0B            jr 6F
 269+ 9664
 270+ 9664 CD 4D 9A     3 call NextScan
 271+ 9667 EB               ex de,hl
 272+ 9668
 273+ 9668 73               ld (hl),e
 274+ 9669 23               inc hl
 275+ 966A 72               ld (hl),d
 276+ 966B 23               inc hl
 277+ 966C
 278+ 966C EB               ex de,hl
 279+ 966D 10 F5            djnz 3B
 280+ 966F
 281+ 966F ED 53 5C 8C  6 ld (Scanlines_album_SP),de
 282+ 9673
 283+ 9673 08           5 ex af,af
 284+ 9674 F5               push af
 285+ 9675 E1               pop hl
 286+ 9676
 287+ 9676 71               ld (hl),c
 288+ 9677
 289+ 9677 C9               ret
 290+ 9678
# file closed: Genera_datos_de_impresion.asm
2219  9678              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9678              ; -----------------------------------------------------------------------------
   2+ 9678              ;
   3+ 9678              ;   11/03/24
   4+ 9678              ;
   5+ 9678
   6+ 9678              Pinta_Sprites
   7+ 9678
   8+ 9678              ;    ld hl,(Scanlines_album_SP)
   9+ 9678              ;    call Extrae_address
  10+ 9678
  11+ 9678              ;    inc h
  12+ 9678              ;    dec h
  13+ 9678              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9678
  15+ 9678 ED 73 3A 8C      ld (Stack),sp
  16+ 967C
  17+ 967C EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 967D              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 967D 2C               inc l
  20+ 967E 2C               inc l
  21+ 967F
  22+ 967F 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9680
  24+ 9680 2C               inc l
  25+ 9681 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9682
  27+ 9682              ;   Seleccionamos rutina de impresión:
  28+ 9682
  29+ 9682 3E 10            ld a,16
  30+ 9684 B8               cp b
  31+ 9685 C2 81 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9688
  33+ 9688              ;   Rutinas:
  34+ 9688
  35+ 9688              Pinta_rapido    ;   1520 t/states.
  36+ 9688
  37+ 9688 E1               pop hl
  38+ 9689
  39+ 9689 1A               ld a,(de)
  40+ 968A AE               xor (hl)
  41+ 968B 77               ld (hl),a
  42+ 968C 2C               inc l
  43+ 968D 1C               inc e
  44+ 968E 1A               ld a,(de)
  45+ 968F AE               xor (hl)
  46+ 9690 77               ld (hl),a
  47+ 9691 2C               inc l
  48+ 9692 1C               inc e
  49+ 9693 1A               ld a,(de)
  50+ 9694 AE               xor (hl)
  51+ 9695 77               ld (hl),a
  52+ 9696 13               inc de
  53+ 9697
  54+ 9697 E1               pop hl
  55+ 9698
  56+ 9698 1A               ld a,(de)
  57+ 9699 AE               xor (hl)
  58+ 969A 77               ld (hl),a
  59+ 969B 2C               inc l
  60+ 969C 1C               inc e
  61+ 969D 1A               ld a,(de)
  62+ 969E AE               xor (hl)
  63+ 969F 77               ld (hl),a
  64+ 96A0 2C               inc l
  65+ 96A1 1C               inc e
  66+ 96A2 1A               ld a,(de)
  67+ 96A3 AE               xor (hl)
  68+ 96A4 77               ld (hl),a
  69+ 96A5 13               inc de
  70+ 96A6
  71+ 96A6 E1               pop hl
  72+ 96A7
  73+ 96A7 1A               ld a,(de)
  74+ 96A8 AE               xor (hl)
  75+ 96A9 77               ld (hl),a
  76+ 96AA 2C               inc l
  77+ 96AB 1C               inc e
  78+ 96AC 1A               ld a,(de)
  79+ 96AD AE               xor (hl)
  80+ 96AE 77               ld (hl),a
  81+ 96AF 2C               inc l
  82+ 96B0 1C               inc e
  83+ 96B1 1A               ld a,(de)
  84+ 96B2 AE               xor (hl)
  85+ 96B3 77               ld (hl),a
  86+ 96B4 13               inc de
  87+ 96B5
  88+ 96B5 E1               pop hl
  89+ 96B6
  90+ 96B6 1A               ld a,(de)
  91+ 96B7 AE               xor (hl)
  92+ 96B8 77               ld (hl),a
  93+ 96B9 2C               inc l
  94+ 96BA 1C               inc e
  95+ 96BB 1A               ld a,(de)
  96+ 96BC AE               xor (hl)
  97+ 96BD 77               ld (hl),a
  98+ 96BE 2C               inc l
  99+ 96BF 1C               inc e
 100+ 96C0 1A               ld a,(de)
 101+ 96C1 AE               xor (hl)
 102+ 96C2 77               ld (hl),a
 103+ 96C3 13               inc de
 104+ 96C4
 105+ 96C4 E1               pop hl
 106+ 96C5
 107+ 96C5 1A               ld a,(de)
 108+ 96C6 AE               xor (hl)
 109+ 96C7 77               ld (hl),a
 110+ 96C8 2C               inc l
 111+ 96C9 1C               inc e
 112+ 96CA 1A               ld a,(de)
 113+ 96CB AE               xor (hl)
 114+ 96CC 77               ld (hl),a
 115+ 96CD 2C               inc l
 116+ 96CE 1C               inc e
 117+ 96CF 1A               ld a,(de)
 118+ 96D0 AE               xor (hl)
 119+ 96D1 77               ld (hl),a
 120+ 96D2 13               inc de
 121+ 96D3
 122+ 96D3 E1               pop hl
 123+ 96D4
 124+ 96D4 1A               ld a,(de)
 125+ 96D5 AE               xor (hl)
 126+ 96D6 77               ld (hl),a
 127+ 96D7 2C               inc l
 128+ 96D8 1C               inc e
 129+ 96D9 1A               ld a,(de)
 130+ 96DA AE               xor (hl)
 131+ 96DB 77               ld (hl),a
 132+ 96DC 2C               inc l
 133+ 96DD 1C               inc e
 134+ 96DE 1A               ld a,(de)
 135+ 96DF AE               xor (hl)
 136+ 96E0 77               ld (hl),a
 137+ 96E1 13               inc de
 138+ 96E2
 139+ 96E2 E1               pop hl
 140+ 96E3
 141+ 96E3 1A               ld a,(de)
 142+ 96E4 AE               xor (hl)
 143+ 96E5 77               ld (hl),a
 144+ 96E6 2C               inc l
 145+ 96E7 1C               inc e
 146+ 96E8 1A               ld a,(de)
 147+ 96E9 AE               xor (hl)
 148+ 96EA 77               ld (hl),a
 149+ 96EB 2C               inc l
 150+ 96EC 1C               inc e
 151+ 96ED 1A               ld a,(de)
 152+ 96EE AE               xor (hl)
 153+ 96EF 77               ld (hl),a
 154+ 96F0 13               inc de
 155+ 96F1
 156+ 96F1 E1               pop hl
 157+ 96F2
 158+ 96F2 1A               ld a,(de)
 159+ 96F3 AE               xor (hl)
 160+ 96F4 77               ld (hl),a
 161+ 96F5 2C               inc l
 162+ 96F6 1C               inc e
 163+ 96F7 1A               ld a,(de)
 164+ 96F8 AE               xor (hl)
 165+ 96F9 77               ld (hl),a
 166+ 96FA 2C               inc l
 167+ 96FB 1C               inc e
 168+ 96FC 1A               ld a,(de)
 169+ 96FD AE               xor (hl)
 170+ 96FE 77               ld (hl),a
 171+ 96FF 13               inc de
 172+ 9700
 173+ 9700 E1               pop hl
 174+ 9701
 175+ 9701 1A               ld a,(de)
 176+ 9702 AE               xor (hl)
 177+ 9703 77               ld (hl),a
 178+ 9704 2C               inc l
 179+ 9705 1C               inc e
 180+ 9706 1A               ld a,(de)
 181+ 9707 AE               xor (hl)
 182+ 9708 77               ld (hl),a
 183+ 9709 2C               inc l
 184+ 970A 1C               inc e
 185+ 970B 1A               ld a,(de)
 186+ 970C AE               xor (hl)
 187+ 970D 77               ld (hl),a
 188+ 970E 13               inc de
 189+ 970F
 190+ 970F E1               pop hl
 191+ 9710
 192+ 9710 1A               ld a,(de)
 193+ 9711 AE               xor (hl)
 194+ 9712 77               ld (hl),a
 195+ 9713 2C               inc l
 196+ 9714 1C               inc e
 197+ 9715 1A               ld a,(de)
 198+ 9716 AE               xor (hl)
 199+ 9717 77               ld (hl),a
 200+ 9718 2C               inc l
 201+ 9719 1C               inc e
 202+ 971A 1A               ld a,(de)
 203+ 971B AE               xor (hl)
 204+ 971C 77               ld (hl),a
 205+ 971D 13               inc de
 206+ 971E
 207+ 971E E1               pop hl
 208+ 971F
 209+ 971F 1A               ld a,(de)
 210+ 9720 AE               xor (hl)
 211+ 9721 77               ld (hl),a
 212+ 9722 2C               inc l
 213+ 9723 1C               inc e
 214+ 9724 1A               ld a,(de)
 215+ 9725 AE               xor (hl)
 216+ 9726 77               ld (hl),a
 217+ 9727 2C               inc l
 218+ 9728 1C               inc e
 219+ 9729 1A               ld a,(de)
 220+ 972A AE               xor (hl)
 221+ 972B 77               ld (hl),a
 222+ 972C 13               inc de
 223+ 972D
 224+ 972D E1               pop hl
 225+ 972E
 226+ 972E 1A               ld a,(de)
 227+ 972F AE               xor (hl)
 228+ 9730 77               ld (hl),a
 229+ 9731 2C               inc l
 230+ 9732 1C               inc e
 231+ 9733 1A               ld a,(de)
 232+ 9734 AE               xor (hl)
 233+ 9735 77               ld (hl),a
 234+ 9736 2C               inc l
 235+ 9737 1C               inc e
 236+ 9738 1A               ld a,(de)
 237+ 9739 AE               xor (hl)
 238+ 973A 77               ld (hl),a
 239+ 973B 13               inc de
 240+ 973C
 241+ 973C E1               pop hl
 242+ 973D
 243+ 973D 1A               ld a,(de)
 244+ 973E AE               xor (hl)
 245+ 973F 77               ld (hl),a
 246+ 9740 2C               inc l
 247+ 9741 1C               inc e
 248+ 9742 1A               ld a,(de)
 249+ 9743 AE               xor (hl)
 250+ 9744 77               ld (hl),a
 251+ 9745 2C               inc l
 252+ 9746 1C               inc e
 253+ 9747 1A               ld a,(de)
 254+ 9748 AE               xor (hl)
 255+ 9749 77               ld (hl),a
 256+ 974A 13               inc de
 257+ 974B
 258+ 974B E1               pop hl
 259+ 974C
 260+ 974C 1A               ld a,(de)
 261+ 974D AE               xor (hl)
 262+ 974E 77               ld (hl),a
 263+ 974F 2C               inc l
 264+ 9750 1C               inc e
 265+ 9751 1A               ld a,(de)
 266+ 9752 AE               xor (hl)
 267+ 9753 77               ld (hl),a
 268+ 9754 2C               inc l
 269+ 9755 1C               inc e
 270+ 9756 1A               ld a,(de)
 271+ 9757 AE               xor (hl)
 272+ 9758 77               ld (hl),a
 273+ 9759 13               inc de
 274+ 975A
 275+ 975A E1               pop hl
 276+ 975B
 277+ 975B 1A               ld a,(de)
 278+ 975C AE               xor (hl)
 279+ 975D 77               ld (hl),a
 280+ 975E 2C               inc l
 281+ 975F 1C               inc e
 282+ 9760 1A               ld a,(de)
 283+ 9761 AE               xor (hl)
 284+ 9762 77               ld (hl),a
 285+ 9763 2C               inc l
 286+ 9764 1C               inc e
 287+ 9765 1A               ld a,(de)
 288+ 9766 AE               xor (hl)
 289+ 9767 77               ld (hl),a
 290+ 9768 13               inc de
 291+ 9769
 292+ 9769 E1               pop hl
 293+ 976A
 294+ 976A 1A               ld a,(de)
 295+ 976B AE               xor (hl)
 296+ 976C 77               ld (hl),a
 297+ 976D 2C               inc l
 298+ 976E 1C               inc e
 299+ 976F 1A               ld a,(de)
 300+ 9770 AE               xor (hl)
 301+ 9771 77               ld (hl),a
 302+ 9772 2C               inc l
 303+ 9773 1C               inc e
 304+ 9774 1A               ld a,(de)
 305+ 9775 AE               xor (hl)
 306+ 9776 77               ld (hl),a
 307+ 9777 13               inc de
 308+ 9778
 309+ 9778 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 310+ 977C ED 7B 3A 8C      ld sp,(Stack)
 311+ 9780 C9               ret
 312+ 9781
 313+ 9781              Pinta_lento
 314+ 9781
 315+ 9781 E1           1 pop hl
 316+ 9782
 317+ 9782 1A               ld a,(de)
 318+ 9783 AE               xor (hl)
 319+ 9784 77               ld (hl),a
 320+ 9785 2C               inc l
 321+ 9786 1C               inc e
 322+ 9787 1A               ld a,(de)
 323+ 9788 AE               xor (hl)
 324+ 9789 77               ld (hl),a
 325+ 978A 2C               inc l
 326+ 978B 1C               inc e
 327+ 978C 1A               ld a,(de)
 328+ 978D AE               xor (hl)
 329+ 978E 77               ld (hl),a
 330+ 978F 13               inc de
 331+ 9790
 332+ 9790 10 EF            djnz 1B
 333+ 9792
 334+ 9792 ED 73 5C 8C      ld (Scanlines_album_SP),sp
 335+ 9796 ED 7B 3A 8C      ld sp,(Stack)
 336+ 979A C9               ret
# file closed: Pinta_Sprites.asm
2220  979B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 979B              ; ******************************************************************************************************************************************************************************************
   2+ 979B              ;
   3+ 979B              ; 26/06/23
   4+ 979B              ;
   5+ 979B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 979B
   7+ 979B              Draw
   8+ 979B
   9+ 979B CD 41 9A     	call Prepara_draw
  10+ 979E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 979F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 97A0 28 05        	jr z,2F
  13+ 97A2
  14+ 97A2 3A 0A 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 97A5 18 0C        	jr 1F
  16+ 97A7
  17+ 97A7 2A 08 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 97AA 22 FB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 97AD CD 39 99     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 97B0              ;													; _la esquina superior izquierda de la pantalla.
  21+ 97B0
  22+ 97B0 CD E0 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 97B3
  24+ 97B3 3A F8 8B     1 ld a,(Ctrl_0)
  25+ 97B6 CB 6F        	bit 5,a
  26+ 97B8 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 97BA
  28+ 97BA CD CF 97     	call Comprueba_limite_horizontal
  29+ 97BD CD 5F 98     	call Comprueba_limite_vertical
  30+ 97C0
  31+ 97C0              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 97C0              ; -----------------------
  33+ 97C0              ; -----------------------
  34+ 97C0              ; -----------------------
  35+ 97C0
  36+ 97C0 CD B5 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 97C3 CD EC 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 97C6
  39+ 97C6 3A F8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 97C9 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 97CB 32 F8 8B     	ld (Ctrl_0),a
  42+ 97CE
  43+ 97CE C9           	ret
  44+ 97CF
  45+ 97CF              ; *******************************************************************************************************************************************************************************************
  46+ 97CF              ;	21/01/23
  47+ 97CF              ;
  48+ 97CF              ; 	Comprueba_limite_horizontal.
  49+ 97CF              ;
  50+ 97CF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 97CF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 97CF              ;
  53+ 97CF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 97CF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 97CF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 97CF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 97CF
  58+ 97CF
  59+ 97CF
  60+ 97CF 3A F8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 97D2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 97D4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 97D6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 97D8 32 F8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 97DB 18 09            jr 6F
  66+ 97DD CB 5F        1 bit 3,a
  67+ 97DF 28 0A            jr z,2F
  68+ 97E1 E6 F7            and $f7
  69+ 97E3 32 F8 8B         ld (Ctrl_0),a
  70+ 97E6 CD 39 99     6 call Inicializacion
  71+ 97E9 18 5B            jr 5F
  72+ 97EB E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 97EC
  74+ 97EC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 97EC              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 97EC
  77+ 97EC EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 97ED 2A 0C 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 97F0 CD 3A 95     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 97F3 67           	ld h,a
  81+ 97F4 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 97F5 CD 3A 95     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 97F8 67           	ld h,a
  84+ 97F9 A7           	and a
  85+ 97FA ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 97FC 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 97FD 3A 0A 8C     	ld a,(Cuad_objeto)
  88+ 9800 FE 02        	cp 2
  89+ 9802 38 1E        	jr c,3F
  90+ 9804 28 1C        	jr z,3F
  91+ 9806 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9807 28 23            jr z,7F
  93+ 9809 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 980B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 980D E1           	pop hl
  96+ 980E
  97+ 980E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 980E              ; _para indicar con E="2" en caso necesario.
  99+ 980E
 100+ 980E E5               push hl
 101+ 980F C5               push bc
 102+ 9810 CD 3A 95     	call calcula_tercio
 103+ 9813 FE 01        	cp 1
 104+ 9815 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9817 CD 47 98         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 981A 28 26            jr z,9F
 107+ 981C 38 24            jr c,9F
 108+ 981E 1E 00        11 ld e,0
 109+ 9820 18 22            jr 8F
 110+ 9822 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9823 28 07        	jr z, 7F
 112+ 9825 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9827 1E 00         	ld e,0
 114+ 9829 E1           	pop hl
 115+ 982A 18 04        	jr 4F
 116+ 982C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 982E 18 15            jr 10F
 118+ 9830
 119+ 9830              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9830              ; _para indicar con E="2" en caso necesario.
 121+ 9830
 122+ 9830 E5           4 push hl
 123+ 9831 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9832 CD 3A 95     	call calcula_tercio
 125+ 9835 FE 01        	cp 1
 126+ 9837 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9839 CD 47 98         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 983C 28 04            jr z,9F
 129+ 983E 30 02            jr nc,9F
 130+ 9840 18 02        	jr 8F
 131+ 9842 1E 02        9 ld e,2
 132+ 9844 C1           8 pop bc
 133+ 9845 E1           10 pop hl
 134+ 9846 C9           5 ret
 135+ 9847
 136+ 9847              ; --------------------
 137+ 9847              ;
 138+ 9847              ; 25/08/22
 139+ 9847
 140+ 9847 CD 3A 95     Comprueba_centro call calcula_tercio
 141+ 984A 67               ld h,a
 142+ 984B 08           	ex af,af
 143+ 984C FE 02        	cp 2
 144+ 984E 38 07        	jr c,1F
 145+ 9850 28 05        	jr z,1F
 146+ 9852 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9855 18 03        	jr 2F
 148+ 9857 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 985A 08           2 ex af,af
 150+ 985B A7               and a
 151+ 985C ED 42            sbc hl,bc
 152+ 985E C9               ret
 153+ 985F
 154+ 985F              ; *********************************************************************************************************************************************************************************************
 155+ 985F              ;
 156+ 985F              ;   16/8/22
 157+ 985F              ;
 158+ 985F              ;	Comprueba_limite_vertical
 159+ 985F              ;
 160+ 985F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 985F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 985F              ;
 163+ 985F
 164+ 985F 2A FB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9862 7D           	ld a,l
 166+ 9863 E6 1F        	and $1F
 167+ 9865 57           	ld d,a
 168+ 9866 3A 0E 8C     	ld a,(Limite_vertical)
 169+ 9869 BA           	cp d 											; Límite - Posición.
 170+ 986A 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 986B 3A 0A 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 986E CB 47        	bit 0,a
 173+ 9870 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9872
 175+ 9872              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9872
 177+ 9872 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9873 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9875
 180+ 9875              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9875              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9875
 183+ 9875 3A EC 8B         ld a,(Coordenada_X)
 184+ 9878 16 0F            ld d,Centro_izquierda
 185+ 987A A7               and a
 186+ 987B 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 987C 28 1E            jr z,3F
 188+ 987E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9880              ;                                                    ; _salimos sin modificar nada.
 190+ 9880 18 0E            jr 2F
 191+ 9882 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9883 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9885
 194+ 9885              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9885              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9885
 197+ 9885 3A EC 8B         ld a,(Coordenada_X)
 198+ 9888 16 10            ld d,Centro_derecha
 199+ 988A A7               and a
 200+ 988B 92               sub d
 201+ 988C 28 0E            jr z,3F
 202+ 988E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9890              ;                                                    ; _salimos sin modificar nada.
 204+ 9890 CB 43        2 bit 0,e
 205+ 9892 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9894 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9895 CD 29 99         call Modificaccionne
 208+ 9898 C1           	pop bc
 209+ 9899 CD 39 99         call Inicializacion
 210+ 989C C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 989D
 212+ 989D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 989D
 214+ 989D C5           4 push bc
 215+ 989E 01 FA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 98A1 0A           	ld a,(bc)
 217+ 98A2 3D           	dec a
 218+ 98A3 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 98A4 7D           	ld a,l
 220+ 98A5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 98A6 CB 47        	bit 0,a
 222+ 98A8 28 03        	jr z,5F
 223+ 98AA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 98AB 18 2E        	jr 7F
 225+ 98AD
 226+ 98AD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 98AD
 228+ 98AD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 98AE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 98AF 3A F8 8B     	ld a,(Ctrl_0)
 231+ 98B2 CB 4F        	bit 1,a
 232+ 98B4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 98B6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 98B7
 235+ 98B7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 98B7
 237+ 98B7 1C               inc e
 238+ 98B8 1D               dec e
 239+ 98B9 20 07            jr nz,12F
 240+ 98BB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 98BC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 98BD 22 FB 8B     	ld (Posicion_actual),hl
 243+ 98C0 18 44        13 jr 9F
 244+ 98C2 CB 43        12 bit 0,e
 245+ 98C4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 98C6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 98C6 C1           	pop bc
 248+ 98C7 18 D3        	jr 3B
 249+ 98C9 80           14 add b
 250+ 98CA 6F               ld l,a
 251+ 98CB 22 FB 8B     	ld (Posicion_actual),hl
 252+ 98CE CD 29 99         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 98D1 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 98D3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 98D5 32 F8 8B         ld (Ctrl_0),a
 256+ 98D8 F1           	pop af
 257+ 98D9 18 2B        	jr 9F
 258+ 98DB
 259+ 98DB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 98DB
 261+ 98DB F5           7 push af
 262+ 98DC 3A F8 8B     	ld a,(Ctrl_0)
 263+ 98DF CB 47        	bit 0,a
 264+ 98E1 20 1D        	jr nz,8F
 265+ 98E3 F1           	pop af
 266+ 98E4
 267+ 98E4              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 98E4
 269+ 98E4 1C           	inc e
 270+ 98E5 1D               dec e
 271+ 98E6 20 07            jr nz,10F
 272+ 98E8 90           	sub b
 273+ 98E9 6F               ld l,a
 274+ 98EA 22 FB 8B     	ld (Posicion_actual),hl
 275+ 98ED 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 98EF              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 98EF CB 43        10 bit 0,e
 278+ 98F1 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 98F3              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 98F3 C1           	pop bc
 281+ 98F4 18 A6        	jr 3B
 282+ 98F6 90           16 sub b
 283+ 98F7 6F               ld l,a
 284+ 98F8 22 FB 8B     	ld (Posicion_actual),hl
 285+ 98FB CD 29 99         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 98FE 18 06            jr 9F
 287+ 9900 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9902 32 F8 8B         ld (Ctrl_0),a
 289+ 9905 F1           	pop af
 290+ 9906 C1           9 pop bc
 291+ 9907 1E 00        	ld e,0
 292+ 9909 CD 39 99         call Inicializacion
 293+ 990C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 990D 08           	ex af,af
 295+ 990E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 990F 18 8B            jr 3B
 297+ 9911
 298+ 9911              ; --------------------
 299+ 9911
 300+ 9911 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9913 CD 5C 9A     1 call PreviousScan
 302+ 9916 10 FB            djnz 1B
 303+ 9918 22 FB 8B     	ld (Posicion_actual),hl
 304+ 991B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 991C C9           	ret
 306+ 991D
 307+ 991D              ; --------------------
 308+ 991D
 309+ 991D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 991F CD 4D 9A     1 call NextScan
 311+ 9922 10 FB            djnz 1B
 312+ 9924 22 FB 8B     	ld (Posicion_actual),hl
 313+ 9927 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9928 C9           	ret
 315+ 9929
 316+ 9929              ; --------------------
 317+ 9929              ;
 318+ 9929              ;	22/01/23
 319+ 9929              ;
 320+ 9929              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9929              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9929              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9929
 324+ 9929
 325+ 9929              Modificaccionne
 326+ 9929
 327+ 9929 3A 0A 8C     	ld a,(Cuad_objeto)
 328+ 992C FE 02        	cp 2
 329+ 992E CC 11 99         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9931 DC 11 99         call c,Modifica_Pos_actual
 331+ 9934 C8           	ret z
 332+ 9935 CD 1D 99         call Modifica_Pos_actual2
 333+ 9938 C9               ret
 334+ 9939
 335+ 9939              ; *************************************************************************************************************************************************************************************************
 336+ 9939              ;
 337+ 9939              ;	13/8/22
 338+ 9939              ;
 339+ 9939              ;	Inicializacion
 340+ 9939              ;
 341+ 9939              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9939              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9939              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9939              ;
 345+ 9939              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9939              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9939              ;	_ desaparece/aparece.
 348+ 9939
 349+ 9939              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9939              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9939              ;
 352+ 9939              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9939              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9939              ; 		   [E] ="0"
 355+ 9939
 356+ 9939              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9939
 358+ 9939 CD 3A 95     Inicializacion call calcula_tercio
 359+ 993C 28 36        	jr z,primit
 360+ 993E E6 02        	and 2
 361+ 9940 20 07        	jr nz,segmit
 362+ 9942 7D           	ld a,l
 363+ 9943 FE 7F        	cp $7f
 364+ 9945 38 2D        	jr c,primit
 365+ 9947 28 2B        	jr z,primit
 366+ 9949 CD AF 99     segmit call column
 367+ 994C 38 13        	jr c,tercuad
 368+ 994E 3E 04        cuarcuad ld a,4
 369+ 9950 32 0A 8C     	ld (Cuad_objeto),a
 370+ 9953 21 20 48     	ld hl,$4820
 371+ 9956 22 0C 8C     	ld (Limite_horizontal),hl
 372+ 9959 21 0E 8C     	ld hl,Limite_vertical
 373+ 995C 36 0D        	ld (hl),$0d
 374+ 995E 08           	ex af,af
 375+ 995F 18 3C        	jr 1F
 376+ 9961              tercuad
 377+ 9961 3E 03        	ld a,3
 378+ 9963 32 0A 8C     	ld (Cuad_objeto),a
 379+ 9966 21 20 48     	ld hl,$4820
 380+ 9969 22 0C 8C     	ld (Limite_horizontal),hl
 381+ 996C 21 0E 8C     	ld hl,Limite_vertical
 382+ 996F 36 12        	ld (hl),$12
 383+ 9971 08           	ex af,af
 384+ 9972 18 29        	jr 1F
 385+ 9974 CD AF 99     primit call column
 386+ 9977 38 13        	jr c, primcuad
 387+ 9979              segcuad
 388+ 9979 3E 02        	ld a,2
 389+ 997B 32 0A 8C     	ld (Cuad_objeto),a
 390+ 997E 21 C0 4F     	ld hl,$4fc0
 391+ 9981 22 0C 8C     	ld (Limite_horizontal),hl
 392+ 9984 21 0E 8C     	ld hl,Limite_vertical
 393+ 9987 36 0D        	ld (hl),$0d
 394+ 9989 08           	ex af,af
 395+ 998A 18 11        	jr 1F
 396+ 998C              primcuad
 397+ 998C 3E 01        	ld a,1
 398+ 998E 32 0A 8C     	ld (Cuad_objeto),a
 399+ 9991 21 C0 4F     	ld hl,$4fc0
 400+ 9994 22 0C 8C     	ld (Limite_horizontal),hl
 401+ 9997 21 0E 8C     	ld hl,Limite_vertical
 402+ 999A 36 12        	ld (hl),$12
 403+ 999C 08           	ex af,af
 404+ 999D
 405+ 999D C5           1 push bc
 406+ 999E E5           	push hl
 407+ 999F D5           	push de
 408+ 99A0
 409+ 99A0 2A FB 8B     	ld hl,(Posicion_actual)
 410+ 99A3 CD 58 95     	call Genera_coordenadas
 411+ 99A6
 412+ 99A6 D1           	pop de
 413+ 99A7 E1           	pop hl
 414+ 99A8 C1           	pop bc
 415+ 99A9
 416+ 99A9 21 F8 8B     	ld hl,Ctrl_0
 417+ 99AC CB EE        	set 5,(hl)
 418+ 99AE C9           	ret
 419+ 99AF
 420+ 99AF              ; ------------------------------------------------------------------------------------------------------------------
 421+ 99AF
 422+ 99AF              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 99AF              ;
 424+ 99AF              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 99AF
 426+ 99AF 7D           column ld a,l
 427+ 99B0 E6 1F        	and $1f
 428+ 99B2 FE 10         	cp $10
 429+ 99B4 C9            	ret
 430+ 99B5
 431+ 99B5              ; --------------------------------------------------------------------------------------------------------------------
 432+ 99B5              ;
 433+ 99B5              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 99B5              ;
 435+ 99B5              ; 14/12/22
 436+ 99B5              ;
 437+ 99B5              ;	Modifica: A y BC.
 438+ 99B5
 439+ 99B5 3A 0A 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 99B8 E6 01        	and 1
 441+ 99BA 28 17        	jr z,1F
 442+ 99BC
 443+ 99BC              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 99BC
 445+ 99BC 3A EC 8B     	ld a,(Coordenada_X)
 446+ 99BF 47           	ld b,a
 447+ 99C0 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 99C1 79           	ld a,c
 449+ 99C2 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 99C3 38 08        	jr c,2F
 451+ 99C5 47           	ld b,a
 452+ 99C6 79           	ld a,c
 453+ 99C7 90           	sub b
 454+ 99C8 32 0B 8C     	ld (Columnas),a
 455+ 99CB 18 1B        	jr 4F
 456+ 99CD 79           2 ld a,c
 457+ 99CE 32 0B 8C     	ld (Columnas),a
 458+ 99D1 18 15        	jr 4F
 459+ 99D3
 460+ 99D3              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 99D3
 462+ 99D3 3A EC 8B     1 ld a,(Coordenada_X)
 463+ 99D6 81           	add c
 464+ 99D7 3D           	dec a
 465+ 99D8 D6 1F        	sub $1f
 466+ 99DA 38 08        	jr c,3F
 467+ 99DC 47           	ld b,a
 468+ 99DD 79           	ld a,c
 469+ 99DE 90           	sub b
 470+ 99DF 32 0B 8C     	ld (Columnas),a
 471+ 99E2 18 04        	jr 4F
 472+ 99E4 79           3 ld a,c
 473+ 99E5 32 0B 8C     	ld (Columnas),a
 474+ 99E8 D9           4 exx
 475+ 99E9 4F           	ld c,a
 476+ 99EA D9           	exx
 477+ 99EB C9            ret
 478+ 99EC
 479+ 99EC              ; --------------------------------------------------------------------------------------------------------------------
 480+ 99EC              ;
 481+ 99EC              ;   19/7/23
 482+ 99EC              ;
 483+ 99EC              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 99EC              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 99EC              ;
 486+ 99EC              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 99EC              ;			HL e IY Contienen (Puntero_objeto).
 488+ 99EC              ;
 489+ 99EC              ;	DESTRUYE: HL,B Y A.
 490+ 99EC
 491+ 99EC 3A 0A 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 99EF FE 02        	cp 2
 493+ 99F1 38 18        	jr c,1F
 494+ 99F3 28 16        	jr z,1F
 495+ 99F5 E6 01        	and 1
 496+ 99F7 28 0D        	jr z,3F
 497+ 99F9
 498+ 99F9              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 99F9
 500+ 99F9 CD 35 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 99FC
 502+ 99FC 7D           9 ld a,l
 503+ 99FD E6 1F        	and $1f
 504+ 99FF 28 2A        	jr z,7F
 505+ 9A01 2B           	dec hl
 506+ 9A02 10 F8        	djnz 9B
 507+ 9A04 18 25        	jr 7F
 508+ 9A06
 509+ 9A06              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9A06
 511+ 9A06 2A FB 8B     3 ld hl,(Posicion_actual)
 512+ 9A09 18 20        	jr 7F
 513+ 9A0B
 514+ 9A0B 28 14        1 jr z,2F
 515+ 9A0D
 516+ 9A0D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9A0D
 518+ 9A0D CD 35 9A     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9A10
 520+ 9A10 7D           4 ld a,l
 521+ 9A11 E6 1F        	and $1f
 522+ 9A13 28 03        	jr z,6F
 523+ 9A15 2B           	dec hl
 524+ 9A16 10 F8        	djnz 4B
 525+ 9A18 06 0F        6 ld b,15
 526+ 9A1A CD 5C 9A     5 call PreviousScan
 527+ 9A1D 10 FB        	djnz 5B
 528+ 9A1F 18 0A        	jr 7F
 529+ 9A21
 530+ 9A21              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9A21
 532+ 9A21 CD 35 9A     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9A24 06 0F        	ld b,15
 534+ 9A26 CD 5C 9A     8 call PreviousScan
 535+ 9A29 10 FB        	djnz 8B
 536+ 9A2B
 537+ 9A2B E5           7 push hl
 538+ 9A2C DD E1        	pop ix
 539+ 9A2E
 540+ 9A2E 2A FD 8B     	ld hl,(Puntero_objeto)
 541+ 9A31 E5           	push hl
 542+ 9A32 FD E1        	pop iy
 543+ 9A34
 544+ 9A34 C9           	ret
 545+ 9A35
 546+ 9A35              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9A35              ;
 548+ 9A35              ;	2/1/23
 549+ 9A35              ;
 550+ 9A35              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9A35              ;
 552+ 9A35              ;	Tras esta rutina tenemos:
 553+ 9A35              ;
 554+ 9A35              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9A35              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9A35              ;
 557+ 9A35              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9A35
 559+ 9A35 2A FB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9A38 3A 0B 8C     	ld a,(Columnas)
 561+ 9A3B 3D           	dec a
 562+ 9A3C 20 01        	jr nz,1F
 563+ 9A3E 3C           	inc a
 564+ 9A3F 47           1 ld b,a
 565+ 9A40 C9           	ret
 566+ 9A41
 567+ 9A41              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9A41              ;
 569+ 9A41              ;	Prepara_draw
 570+ 9A41              ;
 571+ 9A41              ;	Es una rutina de carga.
 572+ 9A41              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9A41              ;
 574+ 9A41              ;	FUNCIONAMIENTO:
 575+ 9A41              ;
 576+ 9A41              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9A41              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9A41              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9A41              ;
 580+ 9A41              ;	DESTRUYE:
 581+ 9A41              ;
 582+ 9A41              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9A41
 584+ 9A41 21 F9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9A44 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9A45 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9A46 4E           	ld c,(hl)
 588+ 9A47 2A FB 8B     	ld hl,(Posicion_actual)
 589+ 9A4A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9A4C C9           	ret
 591+ 9A4D
 592+ 9A4D              ;----------------------------------------------------------------------------------------------------------------
 593+ 9A4D              ;
 594+ 9A4D              ;	5/08/22
 595+ 9A4D              ;
 596+ 9A4D              ;   NextScan.
 597+ 9A4D              ;
 598+ 9A4D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9A4D              ;
 600+ 9A4D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9A4D              ;
 602+ 9A4D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9A4D              ;
 604+ 9A4D              ;       DESTRUIDOS: AF y HL !!!
 605+ 9A4D              ;
 606+ 9A4D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9A4D              ;
 608+ 9A4D
 609+ 9A4D 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9A4E 7C               ld a,h
 611+ 9A4F E6 07            and 7
 612+ 9A51 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9A52
 614+ 9A52 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9A53 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9A55 6F               ld l,a
 617+ 9A56 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9A57
 619+ 9A57 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9A58 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9A5A 67               ld h,a
 622+ 9A5B C9               ret
 623+ 9A5C
 624+ 9A5C              ;----------------------------------------------------------------------------------------------------------------
 625+ 9A5C              ;
 626+ 9A5C              ;	5/08/22
 627+ 9A5C              ;
 628+ 9A5C              ;   PreviousScan.
 629+ 9A5C              ;
 630+ 9A5C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9A5C              ;
 632+ 9A5C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9A5C              ;
 634+ 9A5C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9A5C              ;
 636+ 9A5C              ;       DESTRUIDOS: AF y HL !!!
 637+ 9A5C              ;
 638+ 9A5C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9A5C              ;
 640+ 9A5C
 641+ 9A5C 7C           PreviousScan ld a,h
 642+ 9A5D 25               dec h               ; Dec H.
 643+ 9A5E E6 07            and 7
 644+ 9A60 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9A61
 646+ 9A61 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9A62 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9A64 6F               ld l,a
 649+ 9A65 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9A66
 651+ 9A66 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9A67 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9A69 67               ld h,a
 654+ 9A6A C9               ret
 655+ 9A6B
 656+ 9A6B
 657+ 9A6B
 658+ 9A6B
 659+ 9A6B
 660+ 9A6B
 661+ 9A6B
 662+ 9A6B
 663+ 9A6B
 664+ 9A6B
 665+ 9A6B
 666+ 9A6B
# file closed: Draw_XOR.asm
2221  9A6B              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A6B
   2+ 9A6B              ; ******************************************************************************************************************************************************************************************
   3+ 9A6B              ;
   4+ 9A6B              ;   20/05/23
   5+ 9A6B              ;
   6+ 9A6B              ;	Recompone_posicion_inicio
   7+ 9A6B              ;
   8+ 9A6B              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9A6B              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9A6B              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9A6B              ;	_ a una u otra rutina.
  12+ 9A6B
  13+ 9A6B              Recompone_posicion_inicio
  14+ 9A6B
  15+ 9A6B 2A 08 8C     	ld hl,(Posicion_inicio)
  16+ 9A6E 7D           	ld a,l
  17+ 9A6F E6 1F        	and $1f
  18+ 9A71 28 16        	jr z,1F
  19+ 9A73
  20+ 9A73 FE 1F        	cp $1f
  21+ 9A75 28 0D        	jr z,3F
  22+ 9A77
  23+ 9A77 21 F7 8B     	ld hl,Ctrl_2
  24+ 9A7A CB C6        	set 0,(hl)
  25+ 9A7C 2A FD 8B     	ld hl,(Puntero_objeto)
  26+ 9A7F 22 29 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A82 18 08        	jr 2F
  28+ 9A84
  29+ 9A84 CD 32 9C     3 call Mov_left
  30+ 9A87 18 03        	jr 2F
  31+ 9A89
  32+ 9A89 CD 0F 9B     1 call Mov_right
  33+ 9A8C 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A8F 22 FD 8B     	ld (Puntero_objeto),hl
  35+ 9A92 C9           	ret
  36+ 9A93
  37+ 9A93              ; ******************************************************************************************************************************************************************************************
  38+ 9A93              ;
  39+ 9A93              ;   27/05/23
  40+ 9A93              ;
  41+ 9A93              ;	Mov_down
  42+ 9A93              ;
  43+ 9A93              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A93              ;
  45+ 9A93              ;
  46+ 9A93              Mov_down
  47+ 9A93
  48+ 9A93 CD FD 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A96              ;																	; _ repone (Puntero_objeto).
  50+ 9A96 21 F8 8B     	ld hl,Ctrl_0
  51+ 9A99 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A9B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A9B              ; 																	; _ en el caso de que no lo haya.
  54+ 9A9B 3A 13 8C     	ld a,(Vel_down)
  55+ 9A9E 47           	ld b,a
  56+ 9A9F 2A FB 8B         ld hl,(Posicion_actual)
  57+ 9AA2 CD 3A 95     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9AA5 E6 02        	and 2
  59+ 9AA7 28 17        	jr z,1F
  60+ 9AA9
  61+ 9AA9              ; Nos encontramos en el último tercio de pantalla.
  62+ 9AA9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9AA9
  64+ 9AA9 7C           	ld a,h
  65+ 9AAA FE 57        	cp $57
  66+ 9AAC 20 12        	jr nz,1F
  67+ 9AAE
  68+ 9AAE 7D           	ld a,l
  69+ 9AAF C6 20        	add $20
  70+ 9AB1 30 0D        	jr nc,1F
  71+ 9AB3
  72+ 9AB3              ; ------------------------------
  73+ 9AB3              ;
  74+ 9AB3              ;	12/01/24
  75+ 9AB3
  76+ 9AB3              ;	call Reaparece_arriba
  77+ 9AB3 CD BF 9D     	call Reinicio
  78+ 9AB6
  79+ 9AB6              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9AB6
  81+ 9AB6 3A 62 8C     	ld a,(Ctrl_3)
  82+ 9AB9 CB CF        	set 1,a
  83+ 9ABB 32 62 8C     	ld (Ctrl_3),a
  84+ 9ABE
  85+ 9ABE 18 08        	jr 3F
  86+ 9AC0              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9AC0              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9AC0              ; ------------------------------
  89+ 9AC0
  90+ 9AC0 CD 4D 9A     1 call NextScan
  91+ 9AC3 22 FB 8B     	ld (Posicion_actual),hl
  92+ 9AC6 10 DA            djnz 2B
  93+ 9AC8 CD 58 95     3 call Genera_coordenadas
  94+ 9ACB C9           	ret
  95+ 9ACC
  96+ 9ACC              ; ******************************************************************************************************************************************************************************************
  97+ 9ACC              ;
  98+ 9ACC              ;   27/05/23
  99+ 9ACC              ;
 100+ 9ACC              ;	Mov_up
 101+ 9ACC              ;
 102+ 9ACC              ; 	Mueve el Sprite hacia arriba.
 103+ 9ACC              ;
 104+ 9ACC              ;
 105+ 9ACC              Mov_up
 106+ 9ACC
 107+ 9ACC CD FD 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9ACF              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9ACF 21 F8 8B     	ld hl,Ctrl_0
 110+ 9AD2 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9AD4              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9AD4              ; 																		; _ en el caso de que no lo haya.
 113+ 9AD4 3A 12 8C     	ld a,(Vel_up)
 114+ 9AD7 47           	ld b,a
 115+ 9AD8 2A FB 8B     	ld hl,(Posicion_actual)
 116+ 9ADB CD 3A 95     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9ADE A7           	and a
 118+ 9ADF 20 10        	jr nz,1F
 119+ 9AE1
 120+ 9AE1              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9AE1              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9AE1
 123+ 9AE1 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9AE2 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9AE4 20 0B            jr nz,1F
 126+ 9AE6 7D               ld a,l
 127+ 9AE7 D6 20            sub $20
 128+ 9AE9 30 06            jr nc,1F
 129+ 9AEB 25               dec h
 130+ 9AEC
 131+ 9AEC              ; -----------------------------
 132+ 9AEC CD A0 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9AEF              ;	call Reinicio
 134+ 9AEF              ; -----------------------------
 135+ 9AEF
 136+ 9AEF 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9AF1 CD 5C 9A     1 call PreviousScan
 138+ 9AF4 22 FB 8B     	ld (Posicion_actual),hl
 139+ 9AF7 10 E2            djnz 3B
 140+ 9AF9 CD 58 95     2 call Genera_coordenadas
 141+ 9AFC C9           	ret
 142+ 9AFD
 143+ 9AFD              ; -----------------------------
 144+ 9AFD              ;
 145+ 9AFD              ;	27/5/23
 146+ 9AFD              ;
 147+ 9AFD              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9AFD              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9AFD              ;
 150+ 9AFD              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9AFD              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9AFD              ;
 153+ 9AFD              ;	Modifica: A y (Puntero_objeto).
 154+ 9AFD
 155+ 9AFD 3A F7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9B00 CB 47        	bit 0,a
 157+ 9B02 C8           	ret z
 158+ 9B03 CB 87        	res 0,a
 159+ 9B05 32 F7 8B     	ld (Ctrl_2),a
 160+ 9B08 2A 29 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9B0B 22 FD 8B     	ld (Puntero_objeto),hl
 162+ 9B0E C9           	ret
 163+ 9B0F
 164+ 9B0F              ; ******************************************************************************************************************************************************************************************
 165+ 9B0F              ;
 166+ 9B0F              ;	19/10/22
 167+ 9B0F              ;
 168+ 9B0F              ;	Mov_right.
 169+ 9B0F              ;
 170+ 9B0F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9B0F              ;
 172+ 9B0F
 173+ 9B0F 3A F8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9B12 CB 77        	bit 6,a
 175+ 9B14 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9B16
 177+ 9B16 CD 4E 9D     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9B19 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9B1A
 180+ 9B1A 21 F8 8B     	ld hl,Ctrl_0
 181+ 9B1D CB E6        	set 4,(hl)
 182+ 9B1F 18 52        	jr 8F
 183+ 9B21
 184+ 9B21 21 F8 8B     10 ld hl,Ctrl_0
 185+ 9B24 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9B26              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9B26              ; 																	; _ en el caso de que no lo haya.
 188+ 9B26 3A EC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9B29 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9B2B 20 46        	jr nz,8F
 191+ 9B2D
 192+ 9B2D 3A FF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9B30 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9B31 28 40        	jr z,8F
 195+ 9B33
 196+ 9B33              ; ---------- ---------- ----------
 197+ 9B33              ;
 198+ 9B33              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9B33
 200+ 9B33 3A 11 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9B36 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9B38 28 11        	jr z,1F
 203+ 9B3A 38 06        	jr c,6F
 204+ 9B3C FE 04        	cp 4
 205+ 9B3E 28 14        	jr z,7F
 206+ 9B40 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9B42
 208+ 9B42              ; ---------- ---------- ----------
 209+ 9B42              ;
 210+ 9B42              ; Perfiles de velocidad
 211+ 9B42              ;
 212+ 9B42
 213+ 9B42 3A FF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9B45 FE FE        	cp $fe
 215+ 9B47 20 2A        	jr nz,8F
 216+ 9B49 18 10        	jr 3F
 217+ 9B4B 3A FF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9B4E FE FD        	cp $fd
 219+ 9B50 20 21        	jr nz,8F
 220+ 9B52 18 07        	jr 3F
 221+ 9B54 3A FF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9B57 FE FB        	cp $fb
 223+ 9B59 20 18        	jr nz,8F
 224+ 9B5B
 225+ 9B5B              ; ---------- ---------- ----------
 226+ 9B5B
 227+ 9B5B              3
 228+ 9B5B CD 8E 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9B5E              ;	call Reinicio
 230+ 9B5E
 231+ 9B5E              ; ---------- ---------- ----------
 232+ 9B5E              ;
 233+ 9B5E              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9B5E
 235+ 9B5E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9B60 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9B61 CD 7A 9B     	call DESPLZ_DER
 238+ 9B64 C1           	pop bc
 239+ 9B65 10 F9        	djnz 5B
 240+ 9B67 2A FB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9B6A 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9B6B 22 FB 8B     	ld (Posicion_actual),hl
 243+ 9B6E CD 58 95     	call Genera_coordenadas
 244+ 9B71 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B73
 246+ 9B73              ; ---------- ---------- ----------
 247+ 9B73
 248+ 9B73 2A FB 8B     8 ld hl,(Posicion_actual)
 249+ 9B76 CD 7A 9B     	call DESPLZ_DER
 250+ 9B79 C9           2 ret
 251+ 9B7A
 252+ 9B7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B7A              ;
 254+ 9B7A              ;	22/9/22
 255+ 9B7A              ;
 256+ 9B7A
 257+ 9B7A CD 89 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B7D CD D5 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B80 CD FE 9B         call Ciclo_completo
 260+ 9B83 21 F8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B86 CB FE        	set 7,(hl)
 262+ 9B88 C9           	ret
 263+ 9B89
 264+ 9B89              ; ******************************************************************************************************************************************************************************************
 265+ 9B89              ;	15/02/23
 266+ 9B89              ;
 267+ 9B89
 268+ 9B89 3A 11 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B8C 47           	ld b,a
 270+ 9B8D 2A 04 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B90 23           1 inc hl
 272+ 9B91 23           	inc hl
 273+ 9B92 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B94 22 04 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B97 CD 43 91     	call Extrae_address
 276+ 9B9A 22 FD 8B     	ld (Puntero_objeto),hl
 277+ 9B9D
 278+ 9B9D              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B9D
 280+ 9B9D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B9D              ; Cuántos movimientos hemos hecho ??
 282+ 9B9D              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B9D
 284+ 9B9D 2A 00 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9BA0 EB           	ex de,hl
 286+ 9BA1 A7           	and a
 287+ 9BA2 ED 52        	sbc hl,de
 288+ 9BA4 CB 3D        	srl l
 289+ 9BA6 3E 08        6 ld a,8
 290+ 9BA8 95           	sub l
 291+ 9BA9 30 1E        	jr nc,3F
 292+ 9BAB
 293+ 9BAB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9BAB              ; B="0".
 295+ 9BAB
 296+ 9BAB 04           4 inc b
 297+ 9BAC 3C           	inc a
 298+ 9BAD 20 FC        	jr nz,4B
 299+ 9BAF 78           	ld a,b
 300+ 9BB0 08           	ex af,af
 301+ 9BB1 2A 00 8C     	ld hl,(Indice_Sprite_der)
 302+ 9BB4 23           5 inc hl
 303+ 9BB5 23           	inc hl
 304+ 9BB6 10 FC        	djnz 5B
 305+ 9BB8 22 04 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9BBB CD 43 91     	call Extrae_address
 307+ 9BBE 22 FD 8B     	ld (Puntero_objeto),hl
 308+ 9BC1
 309+ 9BC1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9BC1              ; _(Posicion_actual).
 311+ 9BC1
 312+ 9BC1 21 FB 8B     	ld hl,Posicion_actual
 313+ 9BC4 34           	inc (hl)
 314+ 9BC5 08               ex af,af
 315+ 9BC6 6F           	ld l,a
 316+ 9BC7 18 DD        	jr 6B
 317+ 9BC9
 318+ 9BC9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9BC9
 320+ 9BC9 47           3 ld b,a
 321+ 9BCA 2A 02 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9BCD 23           2 inc hl
 323+ 9BCE 23           	inc hl
 324+ 9BCF 10 FC        	djnz 2B
 325+ 9BD1 22 06 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9BD4 C9           8 ret
 327+ 9BD5
 328+ 9BD5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9BD5              ;
 330+ 9BD5              ;	24/7/22
 331+ 9BD5              ;
 332+ 9BD5              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9BD5              ;
 334+ 9BD5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9BD5              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9BD5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9BD5
 338+ 9BD5 3A FF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9BD8 A7           	and a
 340+ 9BD9 20 1F        	jr nz,1F
 341+ 9BDB D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9BDD 32 FF 8B         ld (CTRL_DESPLZ),a
 343+ 9BE0
 344+ 9BE0 21 FA 8B     	ld hl,Columns
 345+ 9BE3 34           	inc (hl)
 346+ 9BE4 3A 0A 8C     	ld a,(Cuad_objeto)
 347+ 9BE7 E6 01        	and 1
 348+ 9BE9 28 0F        	jr z,1F
 349+ 9BEB 2A FB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9BEE 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9BEF 22 FB 8B     	ld (Posicion_actual),hl
 352+ 9BF2 CD 58 95     	call Genera_coordenadas
 353+ 9BF5 CD 5A 9D     	call Inc_CTRL_DESPLZ
 354+ 9BF8 18 03        	jr 2F
 355+ 9BFA CD 5A 9D     1 call Inc_CTRL_DESPLZ
 356+ 9BFD C9           2 ret
 357+ 9BFE
 358+ 9BFE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9BFE              ;
 360+ 9BFE              ;	24/7/22
 361+ 9BFE              ;
 362+ 9BFE              ;	Ciclo_completo.
 363+ 9BFE              ;
 364+ 9BFE              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9BFE              ;
 366+ 9BFE              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9BFE              ; 	Decrementamos (Columns).
 368+ 9BFE              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9BFE              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9BFE
 371+ 9BFE
 372+ 9BFE 3A FF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9C01 FE FF        	cp $ff
 374+ 9C03 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9C05 E6 F0        	and $f0
 376+ 9C07 20 28        	jr nz,3F
 377+ 9C09
 378+ 9C09              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9C09
 380+ 9C09 3A FF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9C0C 47           	ld b,a
 382+ 9C0D 3E F8        	ld a,$f8
 383+ 9C0F 80           	add b
 384+ 9C10 32 FF 8B     	ld (CTRL_DESPLZ),a
 385+ 9C13 18 1C        	jr 3F
 386+ 9C15 21 FA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9C18 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9C19 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9C1A 32 FF 8B     	ld (CTRL_DESPLZ),a
 390+ 9C1D 3A 0A 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9C20 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9C22 20 0A        	jr nz,2F
 393+ 9C24 2A FB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9C27 23           	inc hl
 395+ 9C28 22 FB 8B     	ld (Posicion_actual),hl
 396+ 9C2B CD 58 95     	call Genera_coordenadas
 397+ 9C2E
 398+ 9C2E              ; Inicia el puntero de Sprite.
 399+ 9C2E
 400+ 9C2E CD 58 91     2 call Inicia_puntero_objeto_der
 401+ 9C31 C9           3 ret
 402+ 9C32
 403+ 9C32              ; ******************************************************************************************************************************************************************************************
 404+ 9C32              ;
 405+ 9C32              ;	15/02/23
 406+ 9C32              ;
 407+ 9C32              ;	Mov_left.
 408+ 9C32              ;
 409+ 9C32              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9C32              ;
 411+ 9C32              Mov_left
 412+ 9C32
 413+ 9C32 21 F8 8B     	ld hl,Ctrl_0
 414+ 9C35 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9C37              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9C37              ; 																	; _ en el caso de que no lo haya.
 417+ 9C37 3A F8 8B     	ld a,(Ctrl_0)
 418+ 9C3A CB 77        	bit 6,a
 419+ 9C3C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9C3E
 421+ 9C3E CD 54 9D     	call Stop_Amadeus_left
 422+ 9C41 C8           	ret z
 423+ 9C42 20 4A        	jr nz,8F
 424+ 9C44
 425+ 9C44 3A EC 8B     11 ld a,(Coordenada_X)
 426+ 9C47 A7           	and a
 427+ 9C48 20 44        	jr nz,8F
 428+ 9C4A
 429+ 9C4A 3A FF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9C4D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9C4E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9C50
 433+ 9C50              ; ---------- ---------- ----------
 434+ 9C50
 435+ 9C50 3A 10 8C     	ld a,(Vel_left)
 436+ 9C53 FE 02        	cp 2
 437+ 9C55 28 0F        	jr z,1F
 438+ 9C57 38 04        	jr c,6F
 439+ 9C59 FE 04        	cp 4
 440+ 9C5B 28 12        	jr z,7F
 441+ 9C5D
 442+ 9C5D              ; ---------- ---------- ----------
 443+ 9C5D
 444+ 9C5D 3A FF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9C60 FE F8        	cp $f8
 446+ 9C62 20 2A        	jr nz,8F
 447+ 9C64 18 10        	jr 4F
 448+ 9C66 3A FF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9C69 FE F9        	cp $f9
 450+ 9C6B 20 21        	jr nz,8F
 451+ 9C6D 18 07        	jr 4F
 452+ 9C6F 3A FF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C72 FE FB        	cp $fb
 454+ 9C74 20 18        	jr nz,8F
 455+ 9C76
 456+ 9C76              ; ---------- ---------- ----------
 457+ 9C76
 458+ 9C76              4
 459+ 9C76 CD 7C 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C79              ;	call Reinicio
 461+ 9C79
 462+ 9C79              ; ---------- ---------- ----------
 463+ 9C79
 464+ 9C79 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C7B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C7C
 467+ 9C7C              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C7C              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C7C
 470+ 9C7C CD 95 9C     	call DESPLZ_IZQ
 471+ 9C7F C1           	pop bc
 472+ 9C80 10 F9        	djnz 5B
 473+ 9C82 2A FB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C85 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C86 22 FB 8B     	ld (Posicion_actual),hl
 476+ 9C89 CD 58 95     	call Genera_coordenadas
 477+ 9C8C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C8E
 479+ 9C8E              ; ---------- ---------- ----------
 480+ 9C8E
 481+ 9C8E              ; Movemos, no hay recolocación.
 482+ 9C8E
 483+ 9C8E 2A FB 8B     8 ld hl,(Posicion_actual)
 484+ 9C91 CD 95 9C     	call DESPLZ_IZQ
 485+ 9C94 C9           2 ret
 486+ 9C95
 487+ 9C95              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C95              ;
 489+ 9C95              ;	22/9/22
 490+ 9C95
 491+ 9C95              DESPLZ_IZQ
 492+ 9C95
 493+ 9C95 CD A4 9C     	call Desplaza_izquierda
 494+ 9C98 CD F0 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C9B CD 18 9D     	call Ciclo_completo_2
 496+ 9C9E 21 F8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9CA1 CB BE        	res 7,(hl)
 498+ 9CA3 C9           	ret
 499+ 9CA4
 500+ 9CA4              Desplaza_izquierda
 501+ 9CA4
 502+ 9CA4 3A 10 8C     	ld a,(Vel_left)
 503+ 9CA7 47           	ld b,a
 504+ 9CA8 2A 06 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9CAB 23           1 inc hl
 506+ 9CAC 23           	inc hl
 507+ 9CAD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9CAF 22 06 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9CB2 CD 43 91     	call Extrae_address
 510+ 9CB5 22 FD 8B     	ld (Puntero_objeto),hl
 511+ 9CB8
 512+ 9CB8              ; Modifica (Puntero_DESPLZ_der).
 513+ 9CB8
 514+ 9CB8              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9CB8              ; Cuántos movimientos hemos hecho ??
 516+ 9CB8              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9CB8
 518+ 9CB8 2A 02 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9CBB EB           	ex de,hl
 520+ 9CBC A7           	and a
 521+ 9CBD ED 52        	sbc hl,de
 522+ 9CBF CB 3D        	srl l
 523+ 9CC1 3E 08        6 ld a,8
 524+ 9CC3 95           	sub l
 525+ 9CC4 30 1E        	jr nc,3F
 526+ 9CC6
 527+ 9CC6              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9CC6              ; B="0".
 529+ 9CC6
 530+ 9CC6 04           4 inc b
 531+ 9CC7 3C           	inc a
 532+ 9CC8 20 FC        	jr nz,4B
 533+ 9CCA 78           	ld a,b
 534+ 9CCB 08           	ex af,af
 535+ 9CCC 2A 02 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9CCF 23           5 inc hl
 537+ 9CD0 23           	inc hl
 538+ 9CD1 10 FC        	djnz 5B
 539+ 9CD3 22 06 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9CD6 CD 43 91     	call Extrae_address
 541+ 9CD9 22 FD 8B     	ld (Puntero_objeto),hl
 542+ 9CDC
 543+ 9CDC              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9CDC              ; _(Posicion_actual).
 545+ 9CDC
 546+ 9CDC 21 FB 8B     	ld hl,Posicion_actual
 547+ 9CDF 35           	dec (hl)
 548+ 9CE0 08           	ex af,af
 549+ 9CE1 6F           	ld l,a
 550+ 9CE2 18 DD        	jr 6B
 551+ 9CE4
 552+ 9CE4              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9CE4
 554+ 9CE4 47           3 ld b,a
 555+ 9CE5 2A 00 8C     	ld hl,(Indice_Sprite_der)
 556+ 9CE8 23           2 inc hl
 557+ 9CE9 23           	inc hl
 558+ 9CEA 10 FC        	djnz 2B
 559+ 9CEC 22 04 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9CEF C9           8 ret
 561+ 9CF0
 562+ 9CF0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9CF0              ;
 564+ 9CF0              ;	modifica_parametros_1er_DESPLZ
 565+ 9CF0              ;
 566+ 9CF0              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9CF0              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9CF0              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9CF0
 570+ 9CF0 3A FF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9CF3 A7           	and a
 572+ 9CF4 20 1E        	jr nz,1F
 573+ 9CF6 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9CF7 32 FF 8B         ld (CTRL_DESPLZ),a
 575+ 9CFA 21 FA 8B     	ld hl,Columns
 576+ 9CFD 34           	inc (hl)
 577+ 9CFE 3A 0A 8C     	ld a,(Cuad_objeto)
 578+ 9D01 E6 01        	and 1
 579+ 9D03 20 0F        	jr nz,1F
 580+ 9D05 2A FB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9D08 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9D09 22 FB 8B     	ld (Posicion_actual),hl
 583+ 9D0C CD 58 95     	call Genera_coordenadas
 584+ 9D0F CD 6B 9D     	call Dec_CTRL_DESPLZ
 585+ 9D12 18 03        	jr 2F
 586+ 9D14 CD 6B 9D     1 call Dec_CTRL_DESPLZ
 587+ 9D17 C9           2 ret
 588+ 9D18
 589+ 9D18              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9D18
 591+ 9D18 3A FF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9D1B FE F7        	cp $f7
 593+ 9D1D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9D1F 30 2C        	jr nc,3F
 595+ 9D21
 596+ 9D21              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9D21
 598+ 9D21 06 00        	ld b,0
 599+ 9D23 04           4 inc b
 600+ 9D24 3C           	inc a
 601+ 9D25 FE F7        	cp $f7
 602+ 9D27 20 FA        	jr nz,4B
 603+ 9D29 3E FF        	ld a,$ff
 604+ 9D2B 90           	sub b
 605+ 9D2C 32 FF 8B     	ld (CTRL_DESPLZ),a
 606+ 9D2F 18 1C        	jr 3F
 607+ 9D31
 608+ 9D31              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9D31
 610+ 9D31 21 FA 8B     1 ld hl,Columns
 611+ 9D34 35           	dec (hl)
 612+ 9D35 AF           	xor a
 613+ 9D36 32 FF 8B     	ld (CTRL_DESPLZ),a
 614+ 9D39 3A 0A 8C     	ld a,(Cuad_objeto)
 615+ 9D3C E6 01        	and 1
 616+ 9D3E 28 0A        	jr z,2F
 617+ 9D40 2A FB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9D43 2B           	dec hl
 619+ 9D44 22 FB 8B     	ld (Posicion_actual),hl
 620+ 9D47 CD 58 95     	call Genera_coordenadas
 621+ 9D4A
 622+ 9D4A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9D4A
 624+ 9D4A CD 6B 91     2 call Inicia_puntero_objeto_izq
 625+ 9D4D C9           3 ret
 626+ 9D4E
 627+ 9D4E              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9D4E              ;
 629+ 9D4E              ;	19/10/22
 630+ 9D4E              ;
 631+ 9D4E              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9D4E              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9D4E
 634+ 9D4E 3A EC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9D51 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9D53 C9           	ret
 637+ 9D54
 638+ 9D54              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9D54              ;
 640+ 9D54              ;	19/10/22
 641+ 9D54              ;
 642+ 9D54              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9D54              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9D54
 645+ 9D54 3A EC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9D57 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9D59 C9           	ret
 648+ 9D5A
 649+ 9D5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9D5A              ;
 651+ 9D5A              ;	24/7/22
 652+ 9D5A              ;
 653+ 9D5A              ;	Inc_CTRL_DESPLZ
 654+ 9D5A              ;
 655+ 9D5A              ;
 656+ 9D5A              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9D5A
 658+ 9D5A 21 FF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9D5D 3A 11 8C     	ld a,(Vel_right)
 660+ 9D60 A7           	and a
 661+ 9D61 28 06        	jr z,1F
 662+ 9D63 47           	ld b,a
 663+ 9D64 34           3 inc (hl)
 664+ 9D65 10 FD        	djnz 3B
 665+ 9D67 18 01        	jr 2F
 666+ 9D69 34           1 inc (hl)
 667+ 9D6A C9           2 ret
 668+ 9D6B
 669+ 9D6B              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9D6B              ;
 671+ 9D6B              ;	5/2/23
 672+ 9D6B              ;
 673+ 9D6B              ;	Dec_CTRL_DESPLZ
 674+ 9D6B              ;
 675+ 9D6B              ;
 676+ 9D6B              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9D6B
 678+ 9D6B 21 FF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9D6E 3A 10 8C     	ld a,(Vel_left)
 680+ 9D71 A7           	and a
 681+ 9D72 28 06        	jr z,1F
 682+ 9D74 47           	ld b,a
 683+ 9D75 35           3 dec (hl)
 684+ 9D76 10 FD        	djnz 3B
 685+ 9D78 18 01        	jr 2F
 686+ 9D7A 35           1 dec (hl)
 687+ 9D7B C9           2 ret
 688+ 9D7C
 689+ 9D7C              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D7C
 691+ 9D7C 2A FB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D7F 01 1F 00     	ld bc,31
 693+ 9D82 A7           	and a
 694+ 9D83 ED 4A        	adc hl,bc
 695+ 9D85 22 FB 8B     	ld (Posicion_actual),hl
 696+ 9D88 21 F8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D8B CB C6        	set 0,(hl)
 698+ 9D8D C9           	ret
 699+ 9D8E
 700+ 9D8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D8E
 702+ 9D8E 2A FB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D91 01 1F 00     	ld bc,31
 704+ 9D94 A7           	and a
 705+ 9D95 ED 42        	sbc hl,bc
 706+ 9D97 22 FB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D9A 21 F8 8B     	ld hl,Ctrl_0
 708+ 9D9D CB CE        	set 1,(hl)
 709+ 9D9F C9           	ret
 710+ 9DA0
 711+ 9DA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9DA0
 713+ 9DA0 24           Reaparece_abajo inc h
 714+ 9DA1 01 E0 17     	ld bc,$17e0
 715+ 9DA4 A7           	and a
 716+ 9DA5 ED 4A        	adc hl,bc
 717+ 9DA7 22 FB 8B     	ld (Posicion_actual),hl
 718+ 9DAA 21 F8 8B     	ld hl,Ctrl_0
 719+ 9DAD CB D6        	set 2,(hl)
 720+ 9DAF C9           	ret
 721+ 9DB0
 722+ 9DB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9DB0
 724+ 9DB0 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9DB3 A7           	and a
 726+ 9DB4 ED 42        	sbc hl,bc
 727+ 9DB6 22 FB 8B     	ld (Posicion_actual),hl
 728+ 9DB9 21 F8 8B     	ld hl,Ctrl_0
 729+ 9DBC CB DE        	set 3,(hl)
 730+ 9DBE C9           	ret
 731+ 9DBF
 732+ 9DBF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9DBF              ;
 734+ 9DBF              ;	15/07/23
 735+ 9DBF
 736+ 9DBF              Reinicio
 737+ 9DBF
 738+ 9DBF              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9DBF
 740+ 9DBF AF           	xor a
 741+ 9DC0 21 20 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9DC3 CD E1 9D     	call Limpia_contenido_hl
 743+ 9DC6
 744+ 9DC6 21 FB 8B     	ld hl,Posicion_actual
 745+ 9DC9 CD E1 9D     	call Limpia_contenido_hl
 746+ 9DCC
 747+ 9DCC CD C2 93     	call Situa_Puntero_indice_mov
 748+ 9DCF CD E0 9E     	call Inicia_Puntero_mov
 749+ 9DD2
 750+ 9DD2 21 22 8C     	ld hl,Incrementa_puntero
 751+ 9DD5 06 05        	ld b,5
 752+ 9DD7 77           1 ld (hl),a
 753+ 9DD8 23           	inc hl
 754+ 9DD9 10 FC        	djnz 1B
 755+ 9DDB
 756+ 9DDB 21 F7 8B     	ld hl,Ctrl_2
 757+ 9DDE CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9DE0
 759+ 9DE0 C9           	ret
 760+ 9DE1
 761+ 9DE1 77           Limpia_contenido_hl	ld (hl),a
 762+ 9DE2 23           	inc hl
 763+ 9DE3 77           	ld (hl),a
 764+ 9DE4 C9           	ret
 765+ 9DE5
 766+ 9DE5              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9DE5              ;
 768+ 9DE5              ;	18/6/24
 769+ 9DE5              ;
 770+ 9DE5
 771+ 9DE5              Amadeus_a_izquierda
 772+ 9DE5
 773+ 9DE5              ;	Actualiza contador de movimientos.
 774+ 9DE5
 775+ 9DE5 21 B7 89     	ld hl,Comm_Amadeus
 776+ 9DE8 35           	dec (hl)
 777+ 9DE9 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9DEB
 779+ 9DEB 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9DEE 2B           	dec hl
 781+ 9DEF 2B           	dec hl
 782+ 9DF0 2B           	dec hl
 783+ 9DF1 2B           	dec hl
 784+ 9DF2 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9DF5
 786+ 9DF5 21 62 8C     	ld hl,Ctrl_3
 787+ 9DF8 CB EE        	set 5,(hl)
 788+ 9DFA
 789+ 9DFA C9           	ret
 790+ 9DFB
 791+ 9DFB 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9DFC C9           	ret
 793+ 9DFD
 794+ 9DFD
 795+ 9DFD              Amadeus_a_derecha
 796+ 9DFD
 797+ 9DFD              ;	Actualiza contador de movimientos.
 798+ 9DFD
 799+ 9DFD 21 B7 89     	ld hl,Comm_Amadeus
 800+ 9E00 34           	inc (hl)
 801+ 9E01 3E 7A        	ld a,$7a
 802+ 9E03 BE           	cp (hl)
 803+ 9E04 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9E06
 805+ 9E06 2A B5 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9E09 23           	inc hl
 807+ 9E0A 23           	inc hl
 808+ 9E0B 23           	inc hl
 809+ 9E0C 23           	inc hl
 810+ 9E0D 22 B5 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9E10
 812+ 9E10 21 62 8C     	ld hl,Ctrl_3
 813+ 9E13 CB EE        	set 5,(hl)
 814+ 9E15 C9           	ret
 815+ 9E16
 816+ 9E16 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9E17 C9           	ret
# file closed: Direcciones.asm
2222  9E18              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9E18              ; ----- ----- ----- ----- -----
   2+ 9E18              ;
   3+ 9E18              ;   28/12/23
   4+ 9E18
   5+ 9E18              Movimiento
   6+ 9E18
   7+ 9E18              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9E18
   9+ 9E18 3A F7 8B         ld a,(Ctrl_2)
  10+ 9E1B CB 57            bit 2,a
  11+ 9E1D 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9E1F
  13+ 9E1F 2A 1E 8C         ld hl,(Puntero_mov)
  14+ 9E22 7E               ld a,(hl)
  15+ 9E23
  16+ 9E23              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9E23
  18+ 9E23              Inicia_desplazamiento.
  19+ 9E23
  20+ 9E23              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9E23
  22+ 9E23 CD 16 9F         call Ajusta_velocidad_desplazamiento
  23+ 9E26
  24+ 9E26              ; Iniciamos (Repetimos_mov).
  25+ 9E26
  26+ 9E26 7E               ld a,(hl)
  27+ 9E27 E6 0F            and $0f
  28+ 9E29 32 24 8C         ld (Repetimos_desplazamiento),a
  29+ 9E2C 32 25 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9E2F
  31+ 9E2F              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9E2F
  33+ 9E2F 23               inc hl
  34+ 9E30 7E               ld a,(hl)
  35+ 9E31 32 27 8C         ld (Cola_de_desplazamiento),a
  36+ 9E34 2B               dec hl
  37+ 9E35
  38+ 9E35 21 F7 8B         ld hl,Ctrl_2
  39+ 9E38 CB D6            set 2,(hl)
  40+ 9E3A
  41+ 9E3A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9E3A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9E3A
  44+ 9E3A              Desplazamiento_iniciado
  45+ 9E3A
  46+ 9E3A CD EA 9E         call Aplica_desplazamiento
  47+ 9E3D
  48+ 9E3D              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9E3D
  50+ 9E3D 3A 62 8C         ld a,(Ctrl_3)
  51+ 9E40 CB 4F            bit 1,a
  52+ 9E42 C0               ret nz
  53+ 9E43
  54+ 9E43 21 24 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9E46 35               dec (hl)
  56+ 9E47 C0               ret nz
  57+ 9E48
  58+ 9E48              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9E48              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9E48              ; Analiza (Cola_de_desplazamiento).
  61+ 9E48
  62+ 9E48 3A 27 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9E4B A7               and a
  64+ 9E4C CC 3F 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9E4F 28 30            jr z,Reinicia_el_movimiento
  66+ 9E51
  67+ 9E51 FE FF            cp $ff
  68+ 9E53 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9E55
  70+ 9E55 FE FE            cp $fe
  71+ 9E57 CC C4 9E         call z,Fijamos_bucle
  72+ 9E5A 28 25            jr z,Reinicia_el_movimiento
  73+ 9E5C
  74+ 9E5C FE FD            cp $fd
  75+ 9E5E 20 11            jr nz,1F
  76+ 9E60
  77+ 9E60              ; ---
  78+ 9E60              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9E60
  80+ 9E60 3A F7 8B         ld a,(Ctrl_2)
  81+ 9E63 CB 5F            bit 3,a
  82+ 9E65 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9E67
  84+ 9E67              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9E67
  86+ 9E67 21 F7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9E6A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9E6C
  89+ 9E6C CD D5 9E         call Inicia_Repetimos_movimiento
  90+ 9E6F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E71              ; ---
  92+ 9E71
  93+ 9E71 FE 01        1 cp 1
  94+ 9E73 CA AE 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E76
  96+ 9E76 3D               dec a
  97+ 9E77 32 27 8C         ld (Cola_de_desplazamiento),a
  98+ 9E7A
  99+ 9E7A 3A 25 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E7D 32 24 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E80              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E80 C9               ret
 103+ 9E81
 104+ 9E81              Reinicia_el_movimiento
 105+ 9E81
 106+ 9E81 3A F7 8B         ld a,(Ctrl_2)
 107+ 9E84 CB 5F            bit 3,a
 108+ 9E86 28 1B            jr z,2F
 109+ 9E88
 110+ 9E88              ; (Cola_de_desplazamiento)="254".
 111+ 9E88
 112+ 9E88 21 26 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E8B 35               dec (hl)
 114+ 9E8C 20 15            jr nz,2F
 115+ 9E8E
 116+ 9E8E              ; Fin de las repeticiones del último movimiento.
 117+ 9E8E
 118+ 9E8E 21 F7 8B         ld hl,Ctrl_2
 119+ 9E91 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E93
 121+ 9E93 2A 1E 8C         ld hl,(Puntero_mov)
 122+ 9E96 23               inc hl
 123+ 9E97 23               inc hl
 124+ 9E98 23               inc hl
 125+ 9E99 22 1E 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E9C              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E9C 7E               ld a,(hl)
 128+ 9E9D 32 27 8C         ld (Cola_de_desplazamiento),a
 129+ 9EA0
 130+ 9EA0 C3 48 9E         jp Cola
 131+ 9EA3
 132+ 9EA3 CD E0 9E     2 call Inicia_Puntero_mov
 133+ 9EA6
 134+ 9EA6 21 F7 8B         ld hl,Ctrl_2
 135+ 9EA9 CB 96            res 2,(hl)
 136+ 9EAB
 137+ 9EAB C3 18 9E         jp Movimiento
 138+ 9EAE
 139+ 9EAE              Siguiente_desplazamiento
 140+ 9EAE
 141+ 9EAE              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9EAE              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9EAE
 144+ 9EAE 21 F7 8B         ld hl,Ctrl_2
 145+ 9EB1 CB 96            res 2,(hl)
 146+ 9EB3
 147+ 9EB3 2A 1E 8C         ld hl,(Puntero_mov)
 148+ 9EB6 23               inc hl
 149+ 9EB7 23               inc hl
 150+ 9EB8 22 1E 8C         ld (Puntero_mov),hl
 151+ 9EBB
 152+ 9EBB 7E               ld a,(hl)
 153+ 9EBC A7               and a
 154+ 9EBD CC 3F 9F         call z,Incrementa_Puntero_indice_mov
 155+ 9EC0 CA 81 9E         jp z,Reinicia_el_movimiento
 156+ 9EC3
 157+ 9EC3 C9               ret
 158+ 9EC4
 159+ 9EC4              ; Subrutinas -----------------------------------------
 160+ 9EC4              ; ---------- --------- --------- ---------- ----------
 161+ 9EC4              ;
 162+ 9EC4              ;   24/07/23
 163+ 9EC4              ;
 164+ 9EC4              ;   Fijamos_bucle
 165+ 9EC4              ;
 166+ 9EC4              ;
 167+ 9EC4
 168+ 9EC4              Fijamos_bucle
 169+ 9EC4
 170+ 9EC4 3A 22 8C         ld a,(Incrementa_puntero)
 171+ 9EC7 3C               inc a
 172+ 9EC8 32 23 8C         ld (Incrementa_puntero_backup),a
 173+ 9ECB
 174+ 9ECB CD 3F 9F         call Incrementa_Puntero_indice_mov
 175+ 9ECE 2A 1C 8C         ld hl,(Puntero_indice_mov)
 176+ 9ED1 22 20 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9ED4 C9               ret
 178+ 9ED5
 179+ 9ED5              ; ---------- --------- --------- ---------- ----------
 180+ 9ED5              ;
 181+ 9ED5              ;   07/7/23
 182+ 9ED5              ;
 183+ 9ED5              ;   Inicia_Repetimos_movimiento
 184+ 9ED5              ;
 185+ 9ED5              ;
 186+ 9ED5
 187+ 9ED5              Inicia_Repetimos_movimiento
 188+ 9ED5
 189+ 9ED5              ; Iniciamos (Repetimos_movimiento).
 190+ 9ED5
 191+ 9ED5 DD 2A 1E 8C      ld ix,(Puntero_mov)
 192+ 9ED9 DD 7E 02         ld a,(ix+2)
 193+ 9EDC 32 26 8C         ld (Repetimos_movimiento),a
 194+ 9EDF
 195+ 9EDF C9               ret
 196+ 9EE0
 197+ 9EE0              ; ---------- --------- --------- ---------- ----------
 198+ 9EE0              ;
 199+ 9EE0              ;   26/6/23
 200+ 9EE0              ;
 201+ 9EE0              ;   Inicia_Puntero_mov
 202+ 9EE0              ;
 203+ 9EE0              ;
 204+ 9EE0
 205+ 9EE0 2A 1C 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9EE3 CD 43 91         call Extrae_address
 207+ 9EE6 22 1E 8C         ld (Puntero_mov),hl
 208+ 9EE9 C9               ret
 209+ 9EEA
 210+ 9EEA              ; ---------- --------- --------- ---------- ----------
 211+ 9EEA              ;
 212+ 9EEA              ;   27/06/23
 213+ 9EEA              ;
 214+ 9EEA              ;   Aplica_movimiento.
 215+ 9EEA
 216+ 9EEA              Aplica_desplazamiento
 217+ 9EEA
 218+ 9EEA              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9EEA
 220+ 9EEA 2A 1E 8C         ld hl, (Puntero_mov)
 221+ 9EED
 222+ 9EED 7E               ld a,(hl)
 223+ 9EEE E6 F0            and $f0
 224+ 9EF0 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9EF1
 226+ 9EF1 CB 7E            bit 7,(hl)
 227+ 9EF3 28 03            jr z,1F
 228+ 9EF5 CD CC 9A         call Mov_up
 229+ 9EF8 2A 1E 8C     1 ld hl, (Puntero_mov)
 230+ 9EFB CB 76            bit 6,(hl)
 231+ 9EFD 28 03            jr z,2F
 232+ 9EFF CD 93 9A         call Mov_down
 233+ 9F02
 234+ 9F02              ; Se ha aplicado reinicio ???
 235+ 9F02              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9F02
 237+ 9F02              ;    ld a,(Ctrl_3)
 238+ 9F02              ;    bit 1,a
 239+ 9F02              ;    ret nz
 240+ 9F02
 241+ 9F02 2A 1E 8C     2 ld hl, (Puntero_mov)
 242+ 9F05 CB 6E            bit 5,(hl)
 243+ 9F07 28 03            jr z,3F
 244+ 9F09 CD 32 9C         call Mov_left
 245+ 9F0C 2A 1E 8C     3 ld hl, (Puntero_mov)
 246+ 9F0F CB 66            bit 4,(hl)
 247+ 9F11 C8               ret z
 248+ 9F12 CD 0F 9B         call Mov_right
 249+ 9F15 C9               ret
 250+ 9F16
 251+ 9F16              ; ---------- --------- --------- ---------- ----------
 252+ 9F16              ;
 253+ 9F16              ;   26/06/23
 254+ 9F16              ;
 255+ 9F16              ;   Ajusta_velocidad_desplazamiento.
 256+ 9F16
 257+ 9F16              Ajusta_velocidad_desplazamiento
 258+ 9F16
 259+ 9F16              ; 1er byte de la cadena de movimiento.
 260+ 9F16              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9F16
 262+ 9F16 CD 34 9F         call Extrae_nibble_alto
 263+ 9F19
 264+ 9F19 32 12 8C         ld (Vel_up),a
 265+ 9F1C 79               ld a,c
 266+ 9F1D E6 0F            and $0f
 267+ 9F1F 32 13 8C         ld (Vel_down),a
 268+ 9F22
 269+ 9F22              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9F22              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9F22
 272+ 9F22 23               inc hl
 273+ 9F23 CD 34 9F         call Extrae_nibble_alto
 274+ 9F26
 275+ 9F26 32 10 8C         ld (Vel_left),a
 276+ 9F29 79               ld a,c
 277+ 9F2A E6 0F            and $0f
 278+ 9F2C 32 11 8C         ld (Vel_right),a
 279+ 9F2F
 280+ 9F2F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9F2F
 282+ 9F2F 23               inc hl
 283+ 9F30 22 1E 8C         ld (Puntero_mov),hl
 284+ 9F33 C9               ret
 285+ 9F34
 286+ 9F34 06 04        Extrae_nibble_alto ld b,4
 287+ 9F36 7E               ld a,(hl)
 288+ 9F37 4F               ld c,a
 289+ 9F38 E6 F0            and $f0
 290+ 9F3A CB 3F        1 srl a
 291+ 9F3C 10 FC            djnz 1B
 292+ 9F3E C9               ret
 293+ 9F3F
 294+ 9F3F              ; ---------- --------- --------- ---------- ----------
 295+ 9F3F              ;
 296+ 9F3F              ;   5/7/23
 297+ 9F3F              ;
 298+ 9F3F              ;   Incrementa_Puntero_indice_mov
 299+ 9F3F
 300+ 9F3F              Incrementa_Puntero_indice_mov
 301+ 9F3F
 302+ 9F3F 21 22 8C         ld hl,Incrementa_puntero
 303+ 9F42 34               inc (hl)
 304+ 9F43
 305+ 9F43 2A 1C 8C         ld hl,(Puntero_indice_mov)
 306+ 9F46 01 02 00         ld bc,2
 307+ 9F49 A7               and a
 308+ 9F4A 09               add hl,bc
 309+ 9F4B 22 1C 8C         ld (Puntero_indice_mov),hl
 310+ 9F4E
 311+ 9F4E 7E               ld a,(hl)
 312+ 9F4F A7               and a
 313+ 9F50
 314+ 9F50              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9F50
 316+ 9F50              ;    jr z,$
 317+ 9F50
 318+ 9F50              ;! Reinicia el Patrón de movimiento.
 319+ 9F50
 320+ 9F50 CC 55 9F         call z,Inicializa_Puntero_indice_mov_2
 321+ 9F53
 322+ 9F53 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9F54
 324+ 9F54 C9               ret
 325+ 9F55
 326+ 9F55              ; ---------- --------- --------- ---------- ----------
 327+ 9F55              ;
 328+ 9F55              ;   15/01/24
 329+ 9F55              ;
 330+ 9F55              ;   Inicializa_Puntero_indice_mov
 331+ 9F55
 332+ 9F55              Inicializa_Puntero_indice_mov_2
 333+ 9F55
 334+ 9F55              ; Existe etiqueta de bucle principal???
 335+ 9F55
 336+ 9F55 2A 20 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9F58 24               inc h
 338+ 9F59 25               dec h
 339+ 9F5A 28 05            jr z,2F
 340+ 9F5C
 341+ 9F5C 22 1C 8C         ld (Puntero_indice_mov),hl
 342+ 9F5F 18 14            jr 3F
 343+ 9F61
 344+ 9F61              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9F61
 346+ 9F61 3A 22 8C     2 ld a,(Incrementa_puntero)
 347+ 9F64 47               ld b,a
 348+ 9F65
 349+ 9F65 2A 1C 8C         ld hl,(Puntero_indice_mov)
 350+ 9F68 2B           1 dec hl
 351+ 9F69 2B               dec hl
 352+ 9F6A 10 FC            djnz 1B
 353+ 9F6C 22 1C 8C         ld (Puntero_indice_mov),hl
 354+ 9F6F
 355+ 9F6F AF               xor a
 356+ 9F70 32 22 8C         ld (Incrementa_puntero),a
 357+ 9F73 18 06            jr 4F
 358+ 9F75
 359+ 9F75 3A 23 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F78 32 22 8C         ld (Incrementa_puntero),a
 361+ 9F7B C9           4 ret
 362+ 9F7C
 363+ 9F7C              ; ----------------------------------------------------------------------
 364+ 9F7C              ;
 365+ 9F7C              ;   24/11/24
 366+ 9F7C              ;
 367+ 9F7C              ;   Sitúa HL en el .defw (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 368+ 9F7C
 369+ 9F7C DD 7E 00     Situa_en_contador_general_de_mov_masticados ld a,(ix+0)             ; ld a,(Tipo)
 370+ 9F7F CD D1 94         call Calcula_salto_en_BC
 371+ 9F82 21 14 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F85 A7               and a
 373+ 9F86 ED 4A            adc hl,bc
 374+ 9F88 C9               ret
 375+ 9F89
 376+ 9F89              ; ----------------------------------------------------------------------
 377+ 9F89              ;
 378+ 9F89              ;   24/11/24
 379+ 9F89              ;
 380+ 9F89              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad al (Contador_de_mov_masticados) de la entidad correspondiente.
 381+ 9F89              ;
 382+ 9F89              ;   INPUT: HL apunta al (.defw) (Contador_general_de_mov_masticados) de este (Tipo) de entidad).
 383+ 9F89
 384+ 9F89 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F8A 23               inc hl
 386+ 9F8B 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de este (Tipo) de entidad.
 387+ 9F8C DD 71 09         ld (ix+9),c
 388+ 9F8F DD 70 0A         ld (ix+10),b                                                ; ld (Contador_de_mov_masticados),bc
 389+ 9F92 C9               ret
 390+ 9F93
# file closed: Movimiento.asm
2223  9F93              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F93              ; --------------------------------------------------------------------------------------
   2+ 9F93              ;
   3+ 9F93              ;   25/10/24
   4+ 9F93              ;
   5+ 9F93
   6+ 9F93              Pinta_disparos_Entidades
   7+ 9F93
   8+ 9F93 ED 73 3A 8C      ld (Stack),sp
   9+ 9F97 ED 7B 4C 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F9B
  11+ 9F9B 3E 02            ld a,2
  12+ 9F9D 08               ex af,af
  13+ 9F9E
  14+ 9F9E 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9FA0              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9FA0              ;                                     _ No encontraría "0".
  17+ 9FA0 FD E1        4 pop iy
  18+ 9FA2 D1               pop de                          ; 1er .db IYL
  19+ 9FA3              ;                                   ; 2º  .db IYH
  20+ 9FA3              ;                                   ; 3er .db E.
  21+ 9FA3              ;   Album vacío ???
  22+ 9FA3
  23+ 9FA3 FD 7D            ld a,iyl
  24+ 9FA5 FD 84            add iyh
  25+ 9FA7 83               add e
  26+ 9FA8 28 1F            jr z,1F
  27+ 9FAA
  28+ 9FAA              ;   Imprime album, (contiene datos).
  29+ 9FAA
  30+ 9FAA 3B               dec sp
  31+ 9FAB
  32+ 9FAB E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9FAC
  34+ 9FAC              ; Imprime el 1er scanline del disparo.
  35+ 9FAC
  36+ 9FAC FD 7D            ld a,iyl
  37+ 9FAE AE               xor (hl)
  38+ 9FAF 77               ld (hl),a
  39+ 9FB0
  40+ 9FB0 2C               inc l
  41+ 9FB1
  42+ 9FB1 FD 7C            ld a,iyh
  43+ 9FB3 AE               xor (hl)
  44+ 9FB4 77               ld (hl),a
  45+ 9FB5
  46+ 9FB5 2C               inc l
  47+ 9FB6
  48+ 9FB6 7B               ld a,e
  49+ 9FB7 AE               xor (hl)
  50+ 9FB8 77               ld (hl),a
  51+ 9FB9
  52+ 9FB9              ; Imprime el 2º scanline del disparo.
  53+ 9FB9
  54+ 9FB9 E1               pop hl
  55+ 9FBA
  56+ 9FBA FD 7D            ld a,iyl
  57+ 9FBC AE               xor (hl)
  58+ 9FBD 77               ld (hl),a
  59+ 9FBE
  60+ 9FBE 2C               inc l
  61+ 9FBF
  62+ 9FBF FD 7C            ld a,iyh
  63+ 9FC1 AE               xor (hl)
  64+ 9FC2 77               ld (hl),a
  65+ 9FC3
  66+ 9FC3 2C               inc l
  67+ 9FC4
  68+ 9FC4 7B               ld a,e
  69+ 9FC5 AE               xor (hl)
  70+ 9FC6 77               ld (hl),a
  71+ 9FC7
  72+ 9FC7 10 D7            djnz 4B
  73+ 9FC9
  74+ 9FC9 08           1 ex af,af
  75+ 9FCA 3D               dec a
  76+ 9FCB 20 05            jr nz,2F
  77+ 9FCD
  78+ 9FCD ED 7B 3A 8C      ld sp,(Stack)
  79+ 9FD1 C9               ret
  80+ 9FD2
  81+ 9FD2 ED 7B 4A 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9FD6 08               ex af,af
  83+ 9FD7 18 C5            jr 3B
  84+ 9FD9
  85+ 9FD9              ; --------------------------------------------------------------------------------------
  86+ 9FD9              ;
  87+ 9FD9              ;   2/12/24
  88+ 9FD9              ;
  89+ 9FD9
  90+ 9FD9              Motor_de_disparos_entidades
  91+ 9FD9
  92+ 9FD9 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9FDC FE 07            cp 7
  94+ 9FDE C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9FDF
  96+ 9FDF 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9FE1 21 20 89         ld hl,Indice_de_disparos_entidades
  98+ 9FE4
  99+ 9FE4 CD 43 91     1 call Extrae_address
 100+ 9FE7 1C               inc e
 101+ 9FE8 1C               inc e
 102+ 9FE9 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9FED
 104+ 9FED               ; Caja vacía ???
 105+ 9FED
 106+ 9FED 2D               dec l
 107+ 9FEE 7E               ld a,(hl)
 108+ 9FEF A7               and a
 109+ 9FF0 28 45            jr z,3F                                                              ; Caja vacía.
 110+ 9FF2
 111+ 9FF2              ; --- Trabajamos con caja:
 112+ 9FF2
 113+ 9FF2 2C               inc l
 114+ 9FF3
 115+ 9FF3              ; --- Existe posibilidad de impacto ???
 116+ 9FF3
 117+ 9FF3 3A 8B 8C         ld a,(Shield)
 118+ 9FF6 A7               and a
 119+ 9FF7 20 07            jr nz,6F                                                             ; No comprobamos impacto. El escudo está activado.
 120+ 9FF9
 121+ 9FF9 CB 46            bit 0,(hl)
 122+ 9FFB C4 3B A0         call nz, Comprueba_impacto_con_Amadeus
 123+ 9FFE 20 37            jr nz,3F
 124+ A000
 125+ A000 CD C2 A0     6 call Rota_disparo_si_procede
 126+ A003
 127+ A003              ; ------------------------------------------------------------
 128+ A003
 129+ A003 2D               dec l
 130+ A004 2D               dec l
 131+ A005
 132+ A005 CD 43 91         call Extrae_address
 133+ A008
 134+ A008              ;   (Puntero_de_impresion) del disparo en HL
 135+ A008              ;   Hay que modificar el puntero de impresión ??? ---------------------
 136+ A008
 137+ A008 3A 64 8C         ld a,(Ctrl_5)
 138+ A00B CB 57            bit 2,a
 139+ A00D 28 09            jr z,4F
 140+ A00F
 141+ A00F CB 97            res 2,a
 142+ A011 32 64 8C         ld (Ctrl_5),a
 143+ A014 2C               inc l
 144+ A015 2C               inc l
 145+ A016 18 0C            jr 5F
 146+ A018
 147+ A018 CB 5F        4 bit 3,a
 148+ A01A 28 08            jr z,5F
 149+ A01C
 150+ A01C CB 9F            res 3,a
 151+ A01E 32 64 8C         ld (Ctrl_5),a
 152+ A021 2D               dec l
 153+ A022 2D               dec l
 154+ A023 2D               dec l
 155+ A024
 156+ A024              ; ---------------------------------------------------------------------
 157+ A024
 158+ A024              ;! Velocidad del disparo de entidades.
 159+ A024
 160+ A024 CD 4D 9A     5 call NextScan
 161+ A027 CD 4D 9A         call NextScan
 162+ A02A
 163+ A02A              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 164+ A02A
 165+ A02A CD 9F A0         call Fin_de_disparo_de_entidad
 166+ A02D
 167+ A02D EB               ex de,hl
 168+ A02E
 169+ A02E 73               ld (hl),e
 170+ A02F 23               inc hl
 171+ A030 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 172+ A031
 173+ A031 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 174+ A034 18 02            jr 2F
 175+ A036
 176+ A036 C9               ret
 177+ A037
 178+ A037 EB           3 ex de,hl
 179+ A038 10 AA        2 djnz 1B
 180+ A03A
 181+ A03A C9               ret
 182+ A03B
 183+ A03B              ; ------------- ------------- ------------
 184+ A03B              ;
 185+ A03B              ;   1/11/24
 186+ A03B
 187+ A03B              Comprueba_impacto_con_Amadeus
 188+ A03B
 189+ A03B              ;   El disparo se encuentra en zona de Amadeus.
 190+ A03B              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 191+ A03B
 192+ A03B              ;   Modificamos registros, así que guardamos ...
 193+ A03B
 194+ A03B C5               push bc
 195+ A03C E5               push hl
 196+ A03D D5               push de
 197+ A03E
 198+ A03E 2D               dec l
 199+ A03F 2D               dec l
 200+ A040
 201+ A040 CD 43 91         call Extrae_address
 202+ A043
 203+ A043 3A AF 89         ld a,(CX_Amadeus)
 204+ A046 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 205+ A047
 206+ A047 7D               ld a,l
 207+ A048 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 208+ A04A
 209+ A04A 06 03            ld b,3
 210+ A04C
 211+ A04C B9           1 cp c
 212+ A04D 28 15            jr z,Coincidencia
 213+ A04F 0C               inc c
 214+ A050 10 FA            djnz 1B
 215+ A052
 216+ A052 0D               dec c
 217+ A053 0D               dec c
 218+ A054 0D               dec c
 219+ A055
 220+ A055 3C               inc a
 221+ A056 B9               cp c
 222+ A057 28 0B            jr z,Coincidencia
 223+ A059
 224+ A059 3C               inc a
 225+ A05A B9               cp c
 226+ A05B 28 07            jr z,Coincidencia
 227+ A05D
 228+ A05D D1           2 pop de
 229+ A05E E1               pop hl
 230+ A05F C1               pop bc
 231+ A060
 232+ A060              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 233+ A060
 234+ A060 CB 86            res 0,(hl)
 235+ A062 AF               xor a                       ; Z before RET.
 236+ A063 C9               ret
 237+ A064
 238+ A064              Coincidencia
 239+ A064
 240+ A064              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 241+ A064              ;   Existe posibilidad de impacto.
 242+ A064              ;   Vamos a averiguarlo ...
 243+ A064
 244+ A064 1D               dec e
 245+ A065 1D               dec e
 246+ A066 1D               dec e
 247+ A067
 248+ A067              ; DE en Puntero_objeto del disparo.
 249+ A067              ; HL en Puntero_de_impresión del disparo.
 250+ A067
 251+ A067              ; Comparador:
 252+ A067
 253+ A067 06 03            ld b,3
 254+ A069
 255+ A069 1A           3 ld a,(de)
 256+ A06A 4F               ld c,a
 257+ A06B A6               and (hl)
 258+ A06C B9               cp c
 259+ A06D 20 06            jr nz,Amadeus_impactado
 260+ A06F
 261+ A06F 2C               inc l
 262+ A070 1C               inc e
 263+ A071
 264+ A071 10 F6            djnz 3B
 265+ A073
 266+ A073 18 E8            jr 2B
 267+ A075
 268+ A075              Amadeus_impactado
 269+ A075
 270+ A075              ; Borramos disparo.
 271+ A075
 272+ A075              ;   Exclusion.
 273+ A075
 274+ A075 D1               pop de
 275+ A076 E1               pop hl
 276+ A077
 277+ A077 E5               push hl
 278+ A078 D5               push de
 279+ A079
 280+ A079 CD 2D A1         call Borra_6_bytes
 281+ A07C
 282+ A07C 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 283+ A07F 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 284+ A080
 285+ A080              ; Iniciamos el proceso de explosión de Amadeus.
 286+ A080
 287+ A080 21 B2 89         ld hl,Impacto_Amadeus
 288+ A083 36 01            ld (hl),1
 289+ A085
 290+ A085              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 291+ A085              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 292+ A085
 293+ A085 3A B3 89         ld a,(p.imp.amadeus)
 294+ A088 FE DE            cp $de
 295+ A08A 20 04            jr nz,1F
 296+ A08C
 297+ A08C 3D               dec a
 298+ A08D 32 B3 89         ld (p.imp.amadeus),a
 299+ A090
 300+ A090              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 301+ A090
 302+ A090 11 60 88     1 ld de,Indice_Explosion_Amadeus
 303+ A093 21 B5 89         ld hl,Pamm_Amadeus
 304+ A096
 305+ A096 73               ld (hl),e
 306+ A097 23               inc hl
 307+ A098 72               ld (hl),d
 308+ A099
 309+ A099 D1               pop de
 310+ A09A E1               pop hl
 311+ A09B C1               pop bc
 312+ A09C
 313+ A09C AF               xor a
 314+ A09D 3C               inc a               ; NZ before RET.
 315+ A09E C9               ret
 316+ A09F
 317+ A09F              ; ------------- ------------- ------------
 318+ A09F              ;
 319+ A09F              ;   31/10/24
 320+ A09F
 321+ A09F              Fin_de_disparo_de_entidad
 322+ A09F
 323+ A09F              ; Estamos en zona de Amadeus ??
 324+ A09F
 325+ A09F 7C               ld a,h
 326+ A0A0 FE 54            cp $54
 327+ A0A2 38 0D            jr c,1F
 328+ A0A4
 329+ A0A4 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 330+ A0A5
 331+ A0A5 5D               ld e,l
 332+ A0A6 54               ld d,h
 333+ A0A7
 334+ A0A7 21 E0 57         ld hl,$57e0
 335+ A0AA ED 52            sbc hl,de
 336+ A0AC
 337+ A0AC 38 6F            jr c,Elimina_disparo_entidad
 338+ A0AE
 339+ A0AE 6B               ld l,e
 340+ A0AF 62               ld h,d
 341+ A0B0
 342+ A0B0 D1               pop de
 343+ A0B1
 344+ A0B1 7C           1 ld a,h
 345+ A0B2 FE 50            cp $50
 346+ A0B4 D8               ret c
 347+ A0B5
 348+ A0B5 7D               ld a,l
 349+ A0B6 FE C0            cp $c0
 350+ A0B8 D8               ret c
 351+ A0B9
 352+ A0B9              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 353+ A0B9              ; Así podremos comprobar si hay colisión más adelante.
 354+ A0B9
 355+ A0B9 1C               inc e
 356+ A0BA 1C               inc e
 357+ A0BB
 358+ A0BB EB               ex de,hl
 359+ A0BC CB C6            set 0,(hl)
 360+ A0BE EB               ex de,hl
 361+ A0BF
 362+ A0BF 1D               dec e
 363+ A0C0 1D               dec e
 364+ A0C1
 365+ A0C1 C9               ret
 366+ A0C2
 367+ A0C2              ; ----------------------------------------------------------
 368+ A0C2              ;
 369+ A0C2              ;   08/10/24
 370+ A0C2
 371+ A0C2              ;   Estructura de un disparo de entidades.
 372+ A0C2
 373+ A0C2              ;   Disparo_1 defw 0								; Puntero objeto.
 374+ A0C2              ; 	defw 0											; Puntero de impresión.
 375+ A0C2              ;	defw 0											; Control.
 376+ A0C2
 377+ A0C2              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 378+ A0C2              ;   _de la entidad en el momento de disparar.
 379+ A0C2
 380+ A0C2              ;   El byte alto muestra la siguiente información:
 381+ A0C2              ;
 382+ A0C2              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 383+ A0C2              ;                        _antes de desplazarse a derecha/izquierda.
 384+ A0C2              ;
 385+ A0C2              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 386+ A0C2              ;
 387+ A0C2              ;                        10xx ..... Izquierda.
 388+ A0C2              ;                        01xx ..... Derecha.
 389+ A0C2              ;                        00xx ..... Recto.
 390+ A0C2
 391+ A0C2              Rota_disparo_si_procede
 392+ A0C2
 393+ A0C2              ;   Nos situamos en el byte alto de (Control).
 394+ A0C2
 395+ A0C2 CB 76            bit 6,(hl)
 396+ A0C4 20 2D            jr nz,Rota_a_derecha
 397+ A0C6 CB 7E            bit 7,(hl)
 398+ A0C8 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 399+ A0C9
 400+ A0C9              Rota_a_izq
 401+ A0C9
 402+ A0C9 E5               push hl
 403+ A0CA
 404+ A0CA 7D               ld a,l
 405+ A0CB D6 05            sub 5
 406+ A0CD 6F               ld l,a
 407+ A0CE
 408+ A0CE E5               push hl
 409+ A0CF FD E1            pop iy
 410+ A0D1
 411+ A0D1 A7               and a
 412+ A0D2
 413+ A0D2 FD CB 02 16      rl (iy+02)
 414+ A0D6 FD CB 01 16      rl (iy+01)
 415+ A0DA FD CB 00 16      rl (iy+00)
 416+ A0DE
 417+ A0DE 30 3B            jr nc,Exit
 418+ A0E0
 419+ A0E0              ; Desplazamiento completo hasta Carry.
 420+ A0E0              ; Modificamos datos y decremento (Puntero_de_impresión).
 421+ A0E0
 422+ A0E0 FD 36 02 03      ld (iy+02),$03
 423+ A0E4 FD 36 01 00      ld (iy+01),$00
 424+ A0E8 FD 36 00 00      ld (iy+00),$00
 425+ A0EC
 426+ A0EC 21 64 8C         ld hl,Ctrl_5
 427+ A0EF CB DE            set 3,(hl)
 428+ A0F1
 429+ A0F1 18 28            jr Exit
 430+ A0F3
 431+ A0F3              Rota_a_derecha
 432+ A0F3
 433+ A0F3 E5               push hl
 434+ A0F4
 435+ A0F4 7D               ld a,l
 436+ A0F5 D6 05            sub 5
 437+ A0F7 6F               ld l,a
 438+ A0F8
 439+ A0F8 E5               push hl
 440+ A0F9 FD E1            pop iy
 441+ A0FB
 442+ A0FB A7               and a
 443+ A0FC
 444+ A0FC FD CB 00 1E      rr (iy+00)
 445+ A100 FD CB 01 1E      rr (iy+01)
 446+ A104 FD CB 02 1E      rr (iy+02)
 447+ A108
 448+ A108 30 11            jr nc,Exit
 449+ A10A
 450+ A10A              ; Desplazamiento completo hasta Carry.
 451+ A10A              ; Modificamos datos e incremento (Puntero_de_impresión).
 452+ A10A
 453+ A10A FD 36 00 01      ld (iy+00),$01
 454+ A10E FD 36 01 80      ld (iy+01),$80
 455+ A112 FD 36 02 00      ld (iy+02),$00
 456+ A116
 457+ A116 21 64 8C         ld hl,Ctrl_5
 458+ A119 CB D6            set 2,(hl)
 459+ A11B
 460+ A11B E1           Exit pop hl
 461+ A11C C9               ret
 462+ A11D
 463+ A11D              ; ------------ ----------- ------------
 464+ A11D              ;
 465+ A11D              ;   25/9/24
 466+ A11D
 467+ A11D              Elimina_disparo_entidad
 468+ A11D
 469+ A11D 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 470+ A120 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 471+ A121
 472+ A121 E1               pop hl
 473+ A122 E5               push hl
 474+ A123
 475+ A123 2C               inc l
 476+ A124 2C               inc l
 477+ A125
 478+ A125 CD 2D A1         call Borra_6_bytes
 479+ A128
 480+ A128 D1               pop de
 481+ A129
 482+ A129 21 00 00         ld hl,0
 483+ A12C
 484+ A12C C9               ret
 485+ A12D
 486+ A12D              ; ----- ----- ----- ----- -----
 487+ A12D
 488+ A12D              Borra_6_bytes
 489+ A12D
 490+ A12D 16 06            ld d,6                                                    ; Contador
 491+ A12F AF               xor a                                                     ; Borrador
 492+ A130 77           1 ld (hl),a
 493+ A131 2D               dec l
 494+ A132 15               dec d
 495+ A133 20 FB            jr nz,1B
 496+ A135
 497+ A135 C9               ret
 498+ A136
 499+ A136              ; --------------------------------------------------------------------------------------
 500+ A136              ;
 501+ A136              ;   12/10/24
 502+ A136              ;
 503+ A136
 504+ A136              Genera_datos_de_impresion_disparos_Entidades
 505+ A136
 506+ A136 3E 07            ld a,7
 507+ A138 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 508+ A139
 509+ A139              ; ---------------
 510+ A139
 511+ A139              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 512+ A139
 513+ A139 21 20 89          ld hl,Indice_de_disparos_entidades
 514+ A13C
 515+ A13C CD 43 91     1 call Extrae_address
 516+ A13F
 517+ A13F 13               inc de
 518+ A140 13               inc de
 519+ A141
 520+ A141 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 521+ A145
 522+ A145 2D               dec l
 523+ A146 7E               ld a,(hl)
 524+ A147 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 525+ A148 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 526+ A14A
 527+ A14A              ; ----- ----- ----- -----
 528+ A14A
 529+ A14A 2D               dec l
 530+ A14B CD 43 91         call Extrae_address
 531+ A14E E5               push hl
 532+ A14F
 533+ A14F 1D               dec e
 534+ A150
 535+ A150 EB               ex de,hl
 536+ A151
 537+ A151 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 538+ A152 2D               dec l
 539+ A153 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 540+ A154 2D               dec l
 541+ A155 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 542+ A156
 543+ A156 E1               pop hl                                                    ;? Puntero de impresión en HL.
 544+ A157
 545+ A157              Genera_scanlines_de_los_disparos_de_entidades.
 546+ A157
 547+ A157 FD 2A 4E 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 548+ A15B FD 73 00         ld (iy+0),e
 549+ A15E FD 70 01         ld (iy+1),b
 550+ A161 FD 71 02         ld (iy+2),c
 551+ A164
 552+ A164 FD 75 03         ld (iy+3),l
 553+ A167 FD 74 04         ld (iy+4),h
 554+ A16A
 555+ A16A CD 4D 9A         call NextScan
 556+ A16D
 557+ A16D FD 75 05         ld (iy+5),l
 558+ A170 FD 74 06         ld (iy+6),h
 559+ A173
 560+ A173 FD E5            push iy
 561+ A175 E1               pop hl
 562+ A176
 563+ A176 3E 07            ld a,7
 564+ A178 85               add l
 565+ A179 6F               ld l,a
 566+ A17A
 567+ A17A 22 4E 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 568+ A17D
 569+ A17D              ; ----- ----- ----- -----
 570+ A17D
 571+ A17D              Situa_en_siguiente_caja
 572+ A17D
 573+ A17D 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 574+ A17E 3D               dec a
 575+ A17F C8               ret z
 576+ A180
 577+ A180 08               ex af,af
 578+ A181 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 579+ A184 18 B6            jr 1B
 580+ A186
 581+ A186              ; --------------------------------------------------------------------------------------
 582+ A186              ;
 583+ A186              ;   12/10/24
 584+ A186              ;
 585+ A186
 586+ A186              Genera_disparo_de_entidad_maldosa
 587+ A186
 588+ A186              ;   Estructura de un disparo de entidades.
 589+ A186
 590+ A186              ;   Disparo_1 defw 0								; Puntero objeto.
 591+ A186              ; 	defw 0											; Puntero de impresión.
 592+ A186              ;	defw 0											; Control.
 593+ A186
 594+ A186              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 595+ A186              ;   _de la entidad en el momento de disparar.
 596+ A186
 597+ A186              ;   El byte de control muestra la siguiente información:
 598+ A186
 599+ A186              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 600+ A186              ;
 601+ A186              ;                        10xx ..... Izquierda.
 602+ A186              ;                        01xx ..... Derecha.
 603+ A186              ;                        00xx ..... Recto.
 604+ A186
 605+ A186              ;*  Exclusiones.
 606+ A186
 607+ A186              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 608+ A186              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 609+ A186
 610+ A186 3A 52 8C         ld a,(Numero_de_disparos_de_entidades)
 611+ A189 A7               and a
 612+ A18A C8               ret z
 613+ A18B
 614+ A18B 3A ED 8B         ld a,(Coordenada_y)
 615+ A18E A7               and a
 616+ A18F C8               ret z
 617+ A190
 618+ A190 3D               dec a
 619+ A191 C8               ret z
 620+ A192
 621+ A192 FE 10            cp 16
 622+ A194 D0               ret nc
 623+ A195
 624+ A195              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 625+ A195              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 626+ A195              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 627+ A195
 628+ A195 21 54 8C         ld hl,Permiso_de_disparo_Entidades
 629+ A198 35               dec (hl)                                            ; No más disparos en este FRAME.
 630+ A199
 631+ A199              ;   Decrementa el numero de disparos de entidades.
 632+ A199
 633+ A199 21 52 8C         ld hl,Numero_de_disparos_de_entidades
 634+ A19C 35               dec (hl)
 635+ A19D
 636+ A19D 21 20 89         ld hl,Indice_de_disparos_entidades
 637+ A1A0
 638+ A1A0 CD 43 91     1 call Extrae_address
 639+ A1A3
 640+ A1A3 13               inc de
 641+ A1A4 13               inc de
 642+ A1A5
 643+ A1A5 ED 53 65 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 644+ A1A9
 645+ A1A9              ;   Comprobamos si la caja está vacía.
 646+ A1A9
 647+ A1A9 2D               dec l
 648+ A1AA 7E               ld a,(hl)
 649+ A1AB A7               and a
 650+ A1AC 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 651+ A1AE 2C               inc l
 652+ A1AF
 653+ A1AF              ;   Caja vacía, vamos a generar un disparo.
 654+ A1AF              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 655+ A1AF
 656+ A1AF CD D0 A1         call Genera_byte_inclinacion
 657+ A1B2
 658+ A1B2 7E               ld a,(hl)
 659+ A1B3 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 660+ A1B4
 661+ A1B4 2D               dec l
 662+ A1B5
 663+ A1B5 CD EC A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 664+ A1B8
 665+ A1B8 70               ld (hl),b
 666+ A1B9 2D               dec l
 667+ A1BA 71               ld (hl),c
 668+ A1BB
 669+ A1BB 2D               dec l
 670+ A1BC
 671+ A1BC              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 672+ A1BC
 673+ A1BC FD 7E 02         ld a,(iy+02)
 674+ A1BF 77               ld (hl),a
 675+ A1C0 2D               dec l
 676+ A1C1
 677+ A1C1 FD 7E 01         ld a,(iy+01)
 678+ A1C4 77               ld (hl),a
 679+ A1C5 2D               dec l
 680+ A1C6
 681+ A1C6 FD 7E 00         ld a,(iy+00)
 682+ A1C9 77               ld (hl),a
 683+ A1CA
 684+ A1CA C9               ret
 685+ A1CB
 686+ A1CB              ;   --- --- ---
 687+ A1CB
 688+ A1CB              Situa_en_siguiente_disparo
 689+ A1CB
 690+ A1CB 2A 65 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 691+ A1CE 18 D0            jr 1B
 692+ A1D0
 693+ A1D0              ; --------------------------------------------------------------------------------------
 694+ A1D0              ;
 695+ A1D0              ;   09/10/24
 696+ A1D0              ;
 697+ A1D0
 698+ A1D0              Genera_byte_inclinacion
 699+ A1D0
 700+ A1D0              ; Determina tendencia del disparo.
 701+ A1D0
 702+ A1D0 3A AF 89         ld a,(CX_Amadeus)
 703+ A1D3 47               ld b,a
 704+ A1D4 3A EC 8B         ld a,(Coordenada_X)
 705+ A1D7 90               sub b
 706+ A1D8 38 07            jr c,Disparo_a_derecha
 707+ A1DA
 708+ A1DA FE 06        Disparo_a_izquierda cp 6
 709+ A1DC
 710+ A1DC D8               ret c
 711+ A1DD C8               ret z
 712+ A1DE
 713+ A1DE CB FE            set 7,(hl)
 714+ A1E0 C9               ret
 715+ A1E1
 716+ A1E1 47           Disparo_a_derecha ld b,a
 717+ A1E2 3E FF            ld a,$ff
 718+ A1E4 90               sub b
 719+ A1E5
 720+ A1E5 FE 05            cp 5
 721+ A1E7
 722+ A1E7 D8               ret c
 723+ A1E8 C8               ret z
 724+ A1E9
 725+ A1E9 CB F6            set 6,(hl)
 726+ A1EB C9               ret
 727+ A1EC
 728+ A1EC              ; --------------------------------------------------------------------------------------
 729+ A1EC              ;
 730+ A1EC              ;   09/10/24
 731+ A1EC              ;
 732+ A1EC
 733+ A1EC              Modifica_puntero_de_impresion
 734+ A1EC
 735+ A1EC              ;   Puntero de impresión del disparo en BC.
 736+ A1EC
 737+ A1EC E5               push hl
 738+ A1ED
 739+ A1ED 2A 67 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 740+ A1F0 CD 4D 9A         call NextScan
 741+ A1F3
 742+ A1F3 4D               ld c,l
 743+ A1F4 44               ld b,h
 744+ A1F5
 745+ A1F5 E1               pop hl
 746+ A1F6
 747+ A1F6 08               ex af,af
 748+ A1F7 CB 77            bit 6,a
 749+ A1F9 28 06            jr z,1F
 750+ A1FB
 751+ A1FB FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 752+ A1FF 0C               inc c
 753+ A200 C9               ret
 754+ A201
 755+ A201 CB 7F        1 bit 7,a
 756+ A203 28 F6            jr z,2B
 757+ A205
 758+ A205 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 759+ A209 0D               dec c
 760+ A20A
 761+ A20A C9               ret
 762+ A20B
 763+ A20B              ; --------------------------------------------------------------------------------------
 764+ A20B              ;
 765+ A20B              ;   28/11/24
 766+ A20B              ;
 767+ A20B
 768+ A20B              Compara_con_coordenadas_de_disparo
 769+ A20B
 770+ A20B DD 7E 02         ld a,(ix+2)                                                 ; ld a,(coordenada_y)
 771+ A20E 47               ld b,a
 772+ A20F 3A 6C 8C         ld a,(Coordenadas_disparo_certero)
 773+ A212 90               sub b
 774+ A213
 775+ A213              ; A = "0" ok
 776+ A213              ; A = "1" ok
 777+ A213
 778+ A213 28 08            jr z,Comprueba_coordenada_X
 779+ A215 3D               dec a
 780+ A216 28 05            jr z,Comprueba_coordenada_X
 781+ A218
 782+ A218              ; A = "$ff" ok
 783+ A218
 784+ A218 FE FE            cp $fe
 785+ A21A 28 01            jr z,Comprueba_coordenada_X
 786+ A21C
 787+ A21C C9               ret
 788+ A21D
 789+ A21D              Comprueba_coordenada_X
 790+ A21D
 791+ A21D DD 7E 01         ld a,(ix+1)                                                  ; ld a,(Coordenada_X)
 792+ A220 47               ld b,a
 793+ A221 21 6D 8C         ld hl,Coordenadas_disparo_certero+1
 794+ A224 7E               ld a,(hl)
 795+ A225 90               sub b
 796+ A226
 797+ A226              ; A = "0" ok
 798+ A226              ; A = "1" ok
 799+ A226
 800+ A226 28 09            jr z,Activa_Impacto_en_entidad
 801+ A228 3D               dec a
 802+ A229 28 06            jr z,Activa_Impacto_en_entidad
 803+ A22B
 804+ A22B              ; A = "2" ok
 805+ A22B
 806+ A22B 3D               dec a
 807+ A22C 28 03            jr z,Activa_Impacto_en_entidad
 808+ A22E
 809+ A22E              ; A = "$ff"
 810+ A22E
 811+ A22E FE FD            cp $fd
 812+ A230 C0               ret nz
 813+ A231
 814+ A231              Activa_Impacto_en_entidad
 815+ A231
 816+ A231              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 817+ A231
 818+ A231 3E 02            ld a,2
 819+ A233 DD 77 04         ld (ix+4),a                                                  ; (ix+4) = (Impacto)
 820+ A236
 821+ A236              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 822+ A236
 823+ A236 11 C0 87         ld de,Indice_Explosion_entidades
 824+ A239
 825+ A239 DD 73 07         ld (ix+7),e
 826+ A23C DD 72 08         ld (ix+8),d                                                  ; (ix+7/8) = (Puntero_de_almacen_de_mov_masticados).
 827+ A23F
 828+ A23F              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 829+ A23F
 830+ A23F 21 69 8C         ld hl,Impacto2
 831+ A242 CB 9E            res 3,(hl)
 832+ A244
 833+ A244 C9               ret
 834+ A245
 835+ A245              ; --------------------------------------------------------------------------------------
 836+ A245              ;
 837+ A245              ;   13/10/24
 838+ A245              ;
 839+ A245
 840+ A245              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 841+ A245
 842+ A245              Limpia_album_de_pintado_disparos_Amadeus
 843+ A245
 844+ A245 2A 46 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 845+ A248 06 06            ld b,6
 846+ A24A AF               xor a
 847+ A24B 77           1 ld (hl),a
 848+ A24C 2C               inc l
 849+ A24D 10 FC            djnz 1B
 850+ A24F
 851+ A24F C9               ret
 852+ A250
 853+ A250              ; --------------------------------------------------------------------------------------
 854+ A250              ;
 855+ A250              ;   29/09/24
 856+ A250              ;
 857+ A250
 858+ A250              Calcula_bytes_pintado_disparos
 859+ A250
 860+ A250 2A 4A 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 861+ A253 45               ld b,l
 862+ A254 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 863+ A257 7D               ld a,l
 864+ A258
 865+ A258 90               sub b
 866+ A259 32 50 8C         ld (Num_de_bytes_album_de_disparos),a
 867+ A25C
 868+ A25C C9               ret
 869+ A25D
 870+ A25D              ; --------------------------------------------------------------------------------------
 871+ A25D              ;
 872+ A25D              ;   26/10/24
 873+ A25D              ;
 874+ A25D              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 875+ A25D              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 876+ A25D              ;   _disparos que el álbum del FRAME actual).
 877+ A25D
 878+ A25D              Limpia_album_de_pintado_disparos_entidades
 879+ A25D
 880+ A25D 21 51 8C         ld hl,Num_de_bytes_album_de_disparos+1
 881+ A260 7E               ld a,(hl)
 882+ A261 2D               dec l
 883+ A262 46               ld b,(hl)
 884+ A263 90               sub b
 885+ A264
 886+ A264 D8               ret c
 887+ A265 C8               ret z
 888+ A266
 889+ A266 F5               push af
 890+ A267 80               add b
 891+ A268 77               ld (hl),a
 892+ A269 F1               pop af
 893+ A26A
 894+ A26A              ; Clean.
 895+ A26A
 896+ A26A 47           2 ld b,a
 897+ A26B AF               xor a
 898+ A26C 2A 4E 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 899+ A26F 77           1 ld (hl),a
 900+ A270 23               inc hl
 901+ A271 10 FC            djnz 1B
 902+ A273
 903+ A273 C9               ret
 904+ A274
 905+ A274              ; --------------------------------------------------------------------------------------
 906+ A274              ;
 907+ A274              ;   29/09/24
 908+ A274              ;
 909+ A274
 910+ A274              Motor_Disparos_Amadeus
 911+ A274
 912+ A274 21 1D 89         ld hl,Disparo_Amad+1
 913+ A277
 914+ A277 34               inc (hl)
 915+ A278 35               dec (hl)
 916+ A279
 917+ A279 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 918+ A27A
 919+ A27A              ;   Esta caja contiene un disparo.
 920+ A27A
 921+ A27A CD 81 A2         call Consulta_Impacto
 922+ A27D CC 9A A2         call z,Mueve_disparo_Amadeus
 923+ A280
 924+ A280 C9               ret
 925+ A281
 926+ A281              ; ----------------------
 927+ A281              ;
 928+ A281              ;
 929+ A281              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 930+ A281              ;
 931+ A281              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 932+ A281
 933+ A281
 934+ A281              Consulta_Impacto
 935+ A281
 936+ A281              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 937+ A281              ;   _sea lo más coherente posible.
 938+ A281
 939+ A281 E5               push hl
 940+ A282 2B               dec hl
 941+ A283 CD 76 A3         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 942+ A286 E1               pop hl
 943+ A287 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 944+ A288
 945+ A288 C8               ret z
 946+ A289
 947+ A289 3A 69 8C         ld a,(Impacto2)
 948+ A28C CB DF            set 3,a
 949+ A28E 32 69 8C         ld (Impacto2),a
 950+ A291
 951+ A291 E5               push hl
 952+ A292 CD 63 A3         call Genera_coordenadas_de_disparo_Amadeus
 953+ A295 E1               pop hl
 954+ A296 CD B3 A2         call Elimina_disparo_Amadeus
 955+ A299
 956+ A299 C9               ret
 957+ A29A
 958+ A29A              ; ----------------------
 959+ A29A              ;
 960+ A29A              ;
 961+ A29A              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 962+ A29A
 963+ A29A              Mueve_disparo_Amadeus
 964+ A29A
 965+ A29A CD 43 91         call Extrae_address
 966+ A29D
 967+ A29D CD 5C 9A         call PreviousScan
 968+ A2A0 CD 5C 9A         call PreviousScan
 969+ A2A3 CD 5C 9A         call PreviousScan
 970+ A2A6 CD 5C 9A         call PreviousScan
 971+ A2A9
 972+ A2A9              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 973+ A2A9
 974+ A2A9 7C               ld a,h
 975+ A2AA D6 40            sub $40
 976+ A2AC EB               ex de,hl
 977+ A2AD 38 04            jr c,Elimina_disparo_Amadeus
 978+ A2AF
 979+ A2AF               ; Introduce nuevo puntero_de_impresión en la caja.
 980+ A2AF
 981+ A2AF 73               ld (hl),e
 982+ A2B0 23               inc hl
 983+ A2B1 72               ld (hl),d
 984+ A2B2
 985+ A2B2 C9               ret
 986+ A2B3
 987+ A2B3              ; ----------------------
 988+ A2B3              ;
 989+ A2B3              ;   29/9/24
 990+ A2B3
 991+ A2B3              Elimina_disparo_Amadeus
 992+ A2B3
 993+ A2B3              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 994+ A2B3              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 995+ A2B3
 996+ A2B3              ;   Disparo_1A defw 0									; Puntero objeto.
 997+ A2B3              ;   	defw 0											; Puntero de impresión.
 998+ A2B3
 999+ A2B3 2B               dec hl
1000+ A2B4 2B               dec hl
1001+ A2B5
1002+ A2B5 AF               xor a
1003+ A2B6 77               ld (hl),a
1004+ A2B7 23               inc hl
1005+ A2B8 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1006+ A2B9
1007+ A2B9 23               inc hl
1008+ A2BA 77               ld (hl),a
1009+ A2BB 23               inc hl
1010+ A2BC 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1011+ A2BD
1012+ A2BD 3E 01            ld a,1
1013+ A2BF 32 53 8C         ld (Permiso_de_disparo_Amadeus),a
1014+ A2C2
1015+ A2C2 CD 45 A2         call Limpia_album_de_pintado_disparos_Amadeus
1016+ A2C5
1017+ A2C5 AF               xor a
1018+ A2C6 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1019+ A2C7
1020+ A2C7 C9               ret
1021+ A2C8
1022+ A2C8              ; --------------------------------------------------------------------------------------
1023+ A2C8              ;
1024+ A2C8              ;   13/10/24
1025+ A2C8              ;
1026+ A2C8
1027+ A2C8              Pinta_disparos_Amadeus
1028+ A2C8
1029+ A2C8 06 02            ld b,2
1030+ A2CA ED 73 3A 8C      ld (Stack),sp
1031+ A2CE ED 7B 48 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1032+ A2D2 D1           3 pop de
1033+ A2D3 14               inc d
1034+ A2D4 15               dec d
1035+ A2D5 28 1C            jr z,1F
1036+ A2D7 E1               pop hl
1037+ A2D8
1038+ A2D8              Imprime_scanlines_en_pantalla
1039+ A2D8
1040+ A2D8              ; 1er scanline
1041+ A2D8
1042+ A2D8 1A               ld a,(de)
1043+ A2D9 AE               xor (hl)
1044+ A2DA 77               ld (hl),a
1045+ A2DB
1046+ A2DB 1C               inc e
1047+ A2DC 2C               inc l
1048+ A2DD
1049+ A2DD 1A               ld a,(de)
1050+ A2DE AE               xor (hl)
1051+ A2DF 77               ld (hl),a
1052+ A2E0
1053+ A2E0 1D               dec e
1054+ A2E1 E1               pop hl
1055+ A2E2
1056+ A2E2              ; 2º scanline
1057+ A2E2
1058+ A2E2 1A               ld a,(de)
1059+ A2E3 AE               xor (hl)
1060+ A2E4 77               ld (hl),a
1061+ A2E5
1062+ A2E5 1C               inc e
1063+ A2E6 2C               inc l
1064+ A2E7
1065+ A2E7 1A               ld a,(de)
1066+ A2E8 AE               xor (hl)
1067+ A2E9 77               ld (hl),a
1068+ A2EA
1069+ A2EA 1D               dec e
1070+ A2EB
1071+ A2EB 18 06            jr 1F
1072+ A2ED
1073+ A2ED ED 7B 46 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1074+ A2F1 18 DF            jr 3B
1075+ A2F3 10 F8        1 djnz 2B
1076+ A2F5 ED 7B 3A 8C      ld sp,(Stack)
1077+ A2F9 C9               ret
1078+ A2FA
1079+ A2FA              ; --------------------------------------------------------------------------------------
1080+ A2FA              ;
1081+ A2FA              ;   13/10/24
1082+ A2FA              ;
1083+ A2FA              ;   Modifica: HL,BC y DE.
1084+ A2FA
1085+ A2FA
1086+ A2FA              Genera_datos_de_impresion_disparos_Amadeus
1087+ A2FA
1088+ A2FA ED 73 3A 8C      ld (Stack),sp
1089+ A2FE 31 1C 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1090+ A301 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1091+ A302
1092+ A302 14               inc d                                                     ;? Salimos si no hay disparo.
1093+ A303 15               dec d
1094+ A304
1095+ A304 28 0E            jr z,Salida
1096+ A306
1097+ A306              Genera_scanlines_de_disparo_Amadeus
1098+ A306
1099+ A306 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1100+ A307              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1101+ A307 ED 7B 46 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1102+ A30B
1103+ A30B C1               pop bc
1104+ A30C C1               pop bc
1105+ A30D C1               pop bc
1106+ A30E
1107+ A30E E5               push hl                                                   ;? Sube 2º scanline al álbum.
1108+ A30F CD 5C 9A         call PreviousScan
1109+ A312 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1110+ A313 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1111+ A314
1112+ A314              Salida
1113+ A314
1114+ A314 ED 7B 3A 8C      ld sp,(Stack)
1115+ A318
1116+ A318 C9               ret
1117+ A319
1118+ A319              ; --------------------------------------------------------------------------------------
1119+ A319              ;
1120+ A319              ;   12/09/24
1121+ A319              ;
1122+ A319
1123+ A319              Genera_disparo_Amadeus
1124+ A319
1125+ A319              ;*  Exclusiones.
1126+ A319
1127+ A319 3A 53 8C         ld a,(Permiso_de_disparo_Amadeus)
1128+ A31C A7               and a
1129+ A31D C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1130+ A31E
1131+ A31E 3D               dec a
1132+ A31F 32 53 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1133+ A322
1134+ A322              Define_puntero_objeto_disparo
1135+ A322
1136+ A322              ;   Inicializamos contador.
1137+ A322
1138+ A322 06 00            ld b,0
1139+ A324
1140+ A324 2A B3 89         ld hl,(p.imp.amadeus)
1141+ A327 2C               inc l
1142+ A328
1143+ A328 3E 80            ld a,$80
1144+ A32A BE               cp (hl)
1145+ A32B 28 0D            jr z,1F
1146+ A32D
1147+ A32D 04               inc b
1148+ A32E
1149+ A32E 3E 60            ld a,$60
1150+ A330 BE               cp (hl)
1151+ A331 28 07            jr z,1F
1152+ A333
1153+ A333
1154+ A333 04               inc b
1155+ A334
1156+ A334 3E 18            ld a,$18
1157+ A336 BE               cp (hl)
1158+ A337 28 01            jr z,1F
1159+ A339
1160+ A339 04               inc b
1161+ A33A
1162+ A33A              ;   Calcula el Puntero_de_impresión del disparo.
1163+ A33A
1164+ A33A              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1165+ A33A
1166+ A33A CD 5C 9A     1 call PreviousScan
1167+ A33D
1168+ A33D 78               ld a,b
1169+ A33E CB 3F            srl a
1170+ A340 28 03            jr z,4F
1171+ A342
1172+ A342              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1173+ A342 E5               push hl
1174+ A343 18 02            jr 5F
1175+ A345 2D           4 dec l
1176+ A346 E5               push hl
1177+ A347              ; ---
1178+ A347
1179+ A347              ;   Calcula el Puntero_objeto del disparo.
1180+ A347
1181+ A347 21 76 83     5 ld hl,Indice_disparo_Amadeus
1182+ A34A 04               inc b
1183+ A34B 05               dec b
1184+ A34C 28 04            jr z,2F
1185+ A34E
1186+ A34E              ;   Nos desplazamos por el índice de disparos.
1187+ A34E
1188+ A34E 2C           3 inc l
1189+ A34F 2C               inc l
1190+ A350 10 FC            djnz 3B
1191+ A352
1192+ A352              ; --- Guarda el Puntero_objeto del disparo en la pila.
1193+ A352 CD 43 91     2 call Extrae_address
1194+ A355 E5               push hl
1195+ A356              ; ---
1196+ A356
1197+ A356              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1198+ A356              ; HL en el 1er .db de la caja.
1199+ A356
1200+ A356 21 1C 89         ld hl,Disparo_Amad
1201+ A359
1202+ A359 06 02            ld b,2
1203+ A35B
1204+ A35B D1           6 pop de
1205+ A35C 73               ld (hl),e
1206+ A35D 23               inc hl
1207+ A35E 72               ld (hl),d
1208+ A35F 23               inc hl
1209+ A360
1210+ A360 10 F9            djnz 6B
1211+ A362
1212+ A362 C9               ret
1213+ A363
1214+ A363              Genera_coordenadas_de_disparo_Amadeus
1215+ A363
1216+ A363              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1217+ A363              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1218+ A363              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1219+ A363
1220+ A363 CD 43 91         call Extrae_address
1221+ A366 CD 58 95         call Genera_coordenadas
1222+ A369
1223+ A369 3D               dec a
1224+ A36A
1225+ A36A 21 6C 8C         ld hl,Coordenadas_disparo_certero
1226+ A36D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1227+ A36E 23               inc hl
1228+ A36F 3A EC 8B         ld a,(Coordenada_X)
1229+ A372 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1230+ A373
1231+ A373 AF               xor a
1232+ A374 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1233+ A375
1234+ A375 C9               ret
1235+ A376
1236+ A376              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1237+ A376              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1238+ A376              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1239+ A376
1240+ A376              ; ----------------------------------------------
1241+ A376              ;
1242+ A376              ;   27/08/24
1243+ A376              ;
1244+ A376              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1245+ A376              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1246+ A376
1247+ A376              Detecta_impacto_en_disparo_de_Amadeus
1248+ A376
1249+ A376              Extraccion_de_datos
1250+ A376
1251+ A376 13               inc de
1252+ A377 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1253+ A378
1254+ A378 5E               ld e,(hl)
1255+ A379 23               inc hl
1256+ A37A 56               ld d,(hl)
1257+ A37B
1258+ A37B 23               inc hl
1259+ A37C
1260+ A37C 4E               ld c,(hl)
1261+ A37D 23               inc hl
1262+ A37E 46               ld b,(hl)
1263+ A37F
1264+ A37F C5               push bc
1265+ A380 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1266+ A381
1267+ A381              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1268+ A381
1269+ A381 CD 5C 9A         call PreviousScan
1270+ A384 CD 5C 9A         call PreviousScan
1271+ A387
1272+ A387              Detecta_impacto_
1273+ A387
1274+ A387 1A               ld a,(de)
1275+ A388 A6               and (hl)
1276+ A389 C0               ret nz
1277+ A38A
1278+ A38A 13               inc de
1279+ A38B 23               inc hl
1280+ A38C
1281+ A38C 1A               ld a,(de)
1282+ A38D A6               and (hl)
1283+ A38E C9               ret
1284+ A38F
1285+ A38F              ; -------------------------------------------------------------------------------------------------------------
1286+ A38F              ;
1287+ A38F              ;   25/11//24
1288+ A38F              ;
1289+ A38F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1290+ A38F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1291+ A38F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1292+ A38F              ;
1293+ A38F              ;   MODIFICA: HL,DE,BC y A.
1294+ A38F              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1295+ A38F              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1296+ A38F
1297+ A38F              Colision_Entidad_Amadeus
1298+ A38F
1299+ A38F              ; Posible contacto de entidad con Amadeus. ?????
1300+ A38F
1301+ A38F              ; Exclusiones:
1302+ A38F
1303+ A38F 3A 8B 8C         ld a,(Shield)
1304+ A392 A7               and a
1305+ A393 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1306+ A394
1307+ A394 21 62 8C         ld hl,Ctrl_3
1308+ A397 CB 76            bit 6,(hl)
1309+ A399 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1310+ A39A
1311+ A39A 21 69 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1312+ A39D CB 56            bit 2,(hl)
1313+ A39F C0               ret nz
1314+ A3A0
1315+ A3A0 DD 7E 02     	ld a,(ix+2)                                            ; ld a,(coordenada_y)
1316+ A3A3 FE 14        	cp $14
1317+ A3A5 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1318+ A3A6
1319+ A3A6 3A B2 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1320+ A3A9 A7               and a
1321+ A3AA C0               ret nz
1322+ A3AB
1323+ A3AB              Genera_coordenadas_X
1324+ A3AB
1325+ A3AB              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1326+ A3AB              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1327+ A3AB
1328+ A3AB              ;   Limpiamos almacenes.
1329+ A3AB
1330+ A3AB              ;    call Limpia_Coordenadas_X
1331+ A3AB
1332+ A3AB              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1333+ A3AB
1334+ A3AB 21 6E 8C         ld hl,Coordenadas_X_Entidad
1335+ A3AE DD 7E 01         ld a,(ix+1)                                             ; ld a,(Coordenada_X)
1336+ A3B1 CD D7 A3         call Guarda_coordenadas_X
1337+ A3B4
1338+ A3B4              ;   Almacenamos las coordenadas X de Amadeus.
1339+ A3B4
1340+ A3B4 3A AF 89         ld a,(CX_Amadeus)
1341+ A3B7 CD D7 A3         call Guarda_coordenadas_X
1342+ A3BA
1343+ A3BA DD E5            push ix
1344+ A3BC CD EB A3         call Compara_coordenadas_X
1345+ A3BF DD E1            pop ix
1346+ A3C1
1347+ A3C1 C0               ret nz
1348+ A3C2
1349+ A3C2 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1350+ A3C4 DD 77 04         ld (ix+4),a                                          ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1351+ A3C7
1352+ A3C7 DD 7D            ld a,ixl
1353+ A3C9 C6 04            add 4
1354+ A3CB DD 6F            ld ixl,a
1355+ A3CD
1356+ A3CD DD 22 6A 8C      ld (Entidad_sospechosa_de_colision),ix               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1357+ A3D1
1358+ A3D1 21 69 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1359+ A3D4 CB D6            set 2,(hl)
1360+ A3D6
1361+ A3D6 C9               ret
1362+ A3D7
1363+ A3D7               ; ----- ----- ----- ----- -----
1364+ A3D7
1365+ A3D7 77           Guarda_coordenadas_X ld (hl),a
1366+ A3D8 3C               inc a
1367+ A3D9 2C               inc l
1368+ A3DA 77               ld (hl),a
1369+ A3DB 3C               inc a
1370+ A3DC 2C               inc l
1371+ A3DD 77               ld (hl),a
1372+ A3DE 2C               inc l
1373+ A3DF C9               ret
1374+ A3E0
1375+ A3E0 AF           Limpia_Coordenadas_X xor a
1376+ A3E1 06 06            ld b,6
1377+ A3E3 21 71 8C         ld hl,Coordenadas_X_Amadeus
1378+ A3E6 77           1 ld (hl),a
1379+ A3E7 23               inc hl
1380+ A3E8 10 FC            djnz 1B
1381+ A3EA C9               ret
1382+ A3EB
1383+ A3EB              ; ----- ----- ----- ----- -----
1384+ A3EB
1385+ A3EB              Compara_coordenadas_X
1386+ A3EB
1387+ A3EB DD 21 6E 8C      ld ix,Coordenadas_X_Entidad
1388+ A3EF DD 7E 00         ld a,(ix+0)
1389+ A3F2 CD 00 A4         call Comparando
1390+ A3F5 C8               ret z
1391+ A3F6
1392+ A3F6 3C               inc a
1393+ A3F7 CD 0F A4         call Comparando_1
1394+ A3FA C8               ret z
1395+ A3FB
1396+ A3FB 3C               inc a
1397+ A3FC CD 0F A4         call Comparando_1
1398+ A3FF C9               ret
1399+ A400
1400+ A400              ; ----- ----- ----- ----- -----
1401+ A400              ;
1402+ A400              ;   4/12/23
1403+ A400              ;
1404+ A400              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1405+ A400
1406+ A400              Comparando
1407+ A400
1408+ A400 DD 2C            inc ixl
1409+ A402 DD 2C            inc ixl
1410+ A404 DD 2C            inc ixl
1411+ A406
1412+ A406 DD 46 00         ld b,(ix+0)
1413+ A409 DD 4E 01         ld c,(ix+1)
1414+ A40C DD 56 02         ld d,(ix+2)
1415+ A40F
1416+ A40F B8           Comparando_1 cp b
1417+ A410 C8               ret z
1418+ A411 B9               cp c
1419+ A412 C8               ret z
1420+ A413 BA               cp d
1421+ A414 C9               ret
1422+ A415
1423+ A415              ; -----------------------------------------------------------------------
1424+ A415              ;
1425+ A415              ;   04/7/24
1426+ A415              ;
1427+ A415
1428+ A415              Detecta_colision_nave_entidad
1429+ A415
1430+ A415              ; Exclusiones:
1431+ A415
1432+ A415              ; Salimos de la rutina si no hay advertencia de posible colisión.
1433+ A415
1434+ A415 21 69 8C     	ld hl,Impacto2
1435+ A418 CB 56        	bit 2,(hl)
1436+ A41A C8           	ret z
1437+ A41B
1438+ A41B              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1439+ A41B
1440+ A41B 2A B5 89         ld hl,(Pamm_Amadeus)
1441+ A41E CD 43 91         call Extrae_address
1442+ A421 54               ld d,h
1443+ A422 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1444+ A423
1445+ A423 2A B3 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1446+ A426 06 10            ld b,16                                        ; Contador de scanlines en B.
1447+ A428 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1448+ A42B
1449+ A42B C5           1 push bc
1450+ A42C 06 03            ld b,3
1451+ A42E E5               push hl
1452+ A42F
1453+ A42F              ; .db
1454+ A42F
1455+ A42F 1A           3 ld a,(de)
1456+ A430 A7               and a
1457+ A431 20 03            jr nz,4F
1458+ A433
1459+ A433 2C               inc l
1460+ A434 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1461+ A436
1462+ A436 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1463+ A438 28 04            jr z,2F
1464+ A43A
1465+ A43A              ; Impacto.
1466+ A43A FD 2D            dec iyl
1467+ A43C 28 22            jr z,5F
1468+ A43E
1469+ A43E 1C           2 inc e
1470+ A43F 10 EE            djnz 3B
1471+ A441
1472+ A441 E1               pop hl
1473+ A442
1474+ A442              ; Hay salto de línea en el puntero de impresión ???
1475+ A442
1476+ A442 7C               ld a,h
1477+ A443 D6 57            sub $57
1478+ A445 20 0A            jr nz,6F
1479+ A447
1480+ A447              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1481+ A447
1482+ A447 2A B3 89         ld hl,(p.imp.amadeus)
1483+ A44A 3E 20            ld a,$20
1484+ A44C A7               and a
1485+ A44D 85               add l
1486+ A44E 6F               ld l,a
1487+ A44F 18 01            jr 7F
1488+ A451
1489+ A451 24           6 inc h
1490+ A452
1491+ A452 C1           7 pop bc
1492+ A453 10 D6            djnz 1B
1493+ A455
1494+ A455              ;   Fin de la comparativa.
1495+ A455
1496+ A455              ;   NO HAY COLISIÓN !!!!!.
1497+ A455              ;
1498+ A455              ;   .db (Impacto) de Amadeus a "0".
1499+ A455              ;   RES el bit2 de (Impacto2).
1500+ A455              ;
1501+ A455              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1502+ A455              ;   Lo colocamos a "0".
1503+ A455
1504+ A455 21 69 8C         ld hl,Impacto2
1505+ A458 CB 96            res 2,(hl)
1506+ A45A 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)
1507+ A45D 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1508+ A45F C9               ret
1509+ A460
1510+ A460              ;   COLISIÓN !!!!!.
1511+ A460              ;
1512+ A460              ;   .db (Impacto) de Amadeus a "1".
1513+ A460              ;   SET el bit3 de (Impacto2).
1514+ A460              ;
1515+ A460              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1516+ A460
1517+ A460 E1           5 pop hl
1518+ A461 C1               pop bc
1519+ A462
1520+ A462 21 B2 89         ld hl,Impacto_Amadeus
1521+ A465 36 01            ld (hl),1
1522+ A467 21 69 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1523+ A46A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1524+ A46C
1525+ A46C 11 C0 87         ld de,Indice_Explosion_entidades
1526+ A46F 2A 6A 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1527+ A472
1528+ A472 23               inc hl
1529+ A473 23               inc hl
1530+ A474 23               inc hl
1531+ A475
1532+ A475 73               ld (hl),e
1533+ A476 23               inc hl
1534+ A477 72               ld (hl),d
1535+ A478
1536+ A478              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1537+ A478
1538+ A478 11 60 88         ld de,Indice_Explosion_Amadeus
1539+ A47B 21 B5 89         ld hl,Pamm_Amadeus
1540+ A47E
1541+ A47E 73               ld (hl),e
1542+ A47F 23               inc hl
1543+ A480 72               ld (hl),d
1544+ A481
1545+ A481 C9               ret
1546+ A482
1547+ A482
1548+ A482
# file closed: Disparo.asm
2224  A482
2225  A482              	SAVESNA "Pruebas.sna", START
2226  A482
2227  A482
2228  A482
2229  A482
# file closed: Banco_de_pruebas.asm
