# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1B 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD E6 8D     	call Pinta_entidades
  44  AA1C CD D8 8D     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD 08 8E     	call Guarda_parametros_DRAW
  49  AA26 CD 28 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 2B 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD 2B 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD DF 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD 3A 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD 14 8E     	call Recupera_parametros_DRAW
  66  AA3F CD F6 8D     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 25 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 1B 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	12/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 65 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 145+ 85AC
 146+ 85AC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 147+ 85AE
 148+ 85AE 00           	db 0											; (Autoriza_movimiento).
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 190+ 85EF
 191+ 85EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 192+ 85F1
 193+ 85F1 00           	db 0											; (Autoriza_movimiento).
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 235+ 8632
 236+ 8632 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 237+ 8634
 238+ 8634 00           	db 0											; (Autoriza_movimiento).
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 280+ 8675
 281+ 8675 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 282+ 8677
 283+ 8677 00           	db 0											; (Autoriza_movimiento).
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 325+ 86B8
 326+ 86B8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 327+ 86BA
 328+ 86BA 00           	db 0											; (Autoriza_movimiento).
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 370+ 86FB
 371+ 86FB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 372+ 86FD
 373+ 86FD 00           	db 0											; (Autoriza_movimiento).
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 415+ 873E
 416+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 417+ 8740
 418+ 8740 00           	db 0											; (Autoriza_movimiento).
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 460+ 8781
 461+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 462+ 8783
 463+ 8783 00           	db 0											; (Autoriza_movimiento).
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AA 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 D4 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA
 501+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 502+ 87AC 02           	db %00000010									; (Attr).
 503+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 504+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 505+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 506+ 87B3 01           	db 1											; (Cuad_objeto).
 507+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 508+ 87B8 D4 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 509+ 87BA
# file closed: Cajas_y_disparos.asm
  97  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 43 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD 78 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0F 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 45 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD 78 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 45 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 15 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 0D 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD 78 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 45 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 45 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD 78 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 09 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 0D 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 09 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 16 00     	ld bc,22
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0F 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0F 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 07        	cp 7
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 07        	ld a,7
 209+ 88BA 32 10 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 10 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  98  88C5
  99  88C5              ; ******************************************************************************************************************************************************************************************
 100  88C5              ; Constantes.
 101  88C5              ; ******************************************************************************************************************************************************************************************
 102  88C5              ;
 103  88C5              ; 10/11/23
 104  88C5
 105  88C5              ;
 106  88C5              ; Constantes generales.
 107  88C5              ;
 108  88C5
 109  88C5              Sprite_vacio equ $f000
 110  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88C5
 115  88C5              Almacen_de_movimientos_masticados equ $5cd0				; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88C5
 117  88C5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 118  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 119  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 120  88C5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 121  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 122  88C5
 123  88C5              ;														; 55 Bytes.
 124  88C5
 125  88C5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 126  88C5              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 127  88C5
 128  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 129  88C5
 130  88C5              ; ******************************************************************************************************************************************************************************************
 131  88C5              ; Variables.
 132  88C5              ; ******************************************************************************************************************************************************************************************
 133  88C5              ;
 134  88C5              ; 12/12//23
 135  88C5              ;
 136  88C5              ; Variables de DRAW. (Motor principal).
 137  88C5              ;
 138  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 139  88C5
 140  88C5 00           Filas db 0												; Filas. [DRAW]
 141  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 142  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 143  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 144  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 145  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 146  88CD
 147  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 148  88CD
 149  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 150  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 151  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 152  88CE 00           Attr db 0												; Atributos de la entidad:
 153  88CF
 154  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 155  88CF              ;
 156  88CF              ;	COLORES: 0 ..... NEGRO
 157  88CF              ;    		 1 ..... AZUL
 158  88CF              ; 			 2 ..... ROJO
 159  88CF              ;			 3 ..... MAGENTA
 160  88CF              ; 			 4 ..... VERDE
 161  88CF              ; 			 5 ..... CIAN
 162  88CF              ;			 6 ..... AMARILLO
 163  88CF              ; 			 7 ..... BLANCO
 164  88CF
 165  88CF 00 00        Indice_Sprite_der defw 0
 166  88D1 00 00        Indice_Sprite_izq defw 0
 167  88D3 00 00        Puntero_DESPLZ_der defw 0
 168  88D5 00 00        Puntero_DESPLZ_izq defw 0
 169  88D7
 170  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 171  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 172  88DA
 173  88DA              ; Variables de objeto. (Características).
 174  88DA
 175  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 176  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 177  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 178  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 179  88DE
 180  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 181  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 182  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 183  88DF 00 00 00...  Variables_de_borrado ds 6
 184  88E5
 185  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 186  88E7 00 00        	defw 0
 187  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 188  88EB 00 00 00 00  	db 0,0,0,0
 189  88EF
 190  88EF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 191  88F1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 192  88F1
 193  88F1 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados
 194  88F3
 195  88F3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 196  88F3              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 197  88F3
 198  88F3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 199  88F3
 200  88F3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 201  88F4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 202  88F4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 203  88F4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 204  88F4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 205  88F4              ;
 206  88F4              ; 														DESCRIPCIÖN:
 207  88F4              ;
 208  88F4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 209  88F4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 210  88F4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 211  88F4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 212  88F4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 213  88F4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 214  88F4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 215  88F4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 216  88F4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 217  88F4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 218  88F4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 219  88F4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 220  88F4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 221  88F4              ;
 222  88F4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 223  88F4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 224  88F4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 225  88F4
 226  88F4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 227  88F4
 228  88F4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 229  88F6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 230  88F8 00 00        Puntero_indice_mov_bucle defw 0							;
 231  88FA              ;
 232  88FA              ;
 233  88FA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 234  88FB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 235  88FB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 236  88FB 00           Incrementa_puntero_backup db 0
 237  88FC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 238  88FD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 239  88FD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 240  88FE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 241  88FF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 242  8900              ;
 243  8900              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 244  8900              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 245  8900              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 246  8900              ;
 247  8900              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 248  8900              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 249  8900              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 250  8900              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 251  8900              ;
 252  8900              ;														;	"$ff" ..... Bucle infinito de repetición.
 253  8900              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 254  8900              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 255  8900
 256  8900
 257  8900              ; Variables de funcionamiento. [DRAW].
 258  8900
 259  8900 00           Columnas db 0
 260  8901 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 261  8903              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 262  8903 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  8904
 264  8904              ; variables de control general.
 265  8904
 266  8904 00           Ctrl_2 db 0
 267  8905              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 268  8905              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 269  8905              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 270  8905              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 271  8905              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 272  8905              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 273  8905              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 274  8905              ;
 275  8905              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 276  8905              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 277  8905              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 278  8905              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 279  8905              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 280  8905              ;														BIT 4, ???
 281  8905              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 282  8905
 283  8905 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8906
 285  8906              ;! 65 Bytes por entidad.
 286  8906
 287  8906              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 288  8906              ;					         		---------;      ;---------
 289  8906
 290  8906
 291  8906              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 292  8906
 293  8906 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 294  8907
 295  8907              ;														DESCRIPCIÓN:
 296  8907              ;
 297  8907              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 298  8907              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 299  8907              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 300  8907              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 301  8907              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 302  8907              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 303  8907
 304  8907              ;														BIT 3, Recarga de nueva oleada.
 305  8907              ;														BIT 4, Recarga de nueva oleada.
 306  8907              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 307  8907              ;														BIT 6, **** Frame completo.
 308  8907              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 309  8907
 310  8907 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 311  8909              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 312  8909              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 313  8909              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 314  8909
 315  8909              ; Gestión de ENTIDADES y CAJAS.
 316  8909
 317  8909 00 00        Puntero_store_caja defw 0
 318  890B 00 00        Puntero_restore_caja defw 0
 319  890D 00 00        Indice_restore_caja defw 0
 320  890F 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 321  8910 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 322  8911 00           Entidades_en_curso db 0									; ..... ..... .....
 323  8912 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 324  8913              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 325  8913              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 326  8913              ;														; _ (Numero_de_malotes)="0".
 327  8913 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 328  8915 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 329  8917              ;														; _ puntero (Indice_entidades).
 330  8917
 331  8917
 332  8917              ;---------------------------------------------------------------------------------------------------------------
 333  8917              ;
 334  8917              ;	18/11/23
 335  8917              ;
 336  8917              ;	Álbumes.
 337  8917
 338  8917 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 339  8919              ;														; _variable para almacenar lo posición del puntero_
 340  8919              ; 														; _de pila, SP.
 341  8919 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 342  891B              ;														; La utiliza la rutina [Extrae_foto_registros].
 343  891B 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 344  891D 00 70        Stack_snapshot defw Album_de_fotos
 345  891F 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 346  8921
 347  8921              ;End_Snapshot defw Album_de_fotos
 348  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 349  8921 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 350  8923              ;														; _el snapshot de los registros del siguiente disparo.
 351  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 352  8923 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 353  8925
 354  8925 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 355  8926              ;
 356  8926              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 357  8926              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 358  8926
 359  8926              ; Gestión de Disparos.
 360  8926
 361  8926 00           Numero_de_disparotes db 0
 362  8927 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 363  8929 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 364  892B 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 365  892C              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 366  892C              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 367  892C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 368  892E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 369  892E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 370  892E              ;														; _produzca colisión.
 371  892E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 372  8930              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 373  8930 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 374  8933              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 375  8933 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 376  8936              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 377  8936 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 378  8937
 379  8937              ;---------------------------------------------------------------------------------------------------------------
 380  8937
 381  8937              ; Relojes y temporizaciones.
 382  8937
 383  8937 00           Contador_de_frames db 0
 384  8938 00           Contador_de_frames_2 db 0
 385  8939
 386  8939 04           Clock_explosion db 4
 387  893A 1E           Clock_Entidades_en_curso db 30
 388  893B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 389  893C              ;														; Repite la oleada de entidades.
 390  893C 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 391  893D 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 392  893E 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 393  893F
 394  893F 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 395  8940 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 396  8941 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 397  8942
 398  8942              ;---------------------------------------------------------------------------------------------------------------
 399  8942
 400  8942              ; Gestión de NIVELES.
 401  8942
 402  8942 00           Nivel db 0												; Nivel actual del juego.
 403  8943 00 00        Puntero_indice_NIVELES defw 0
 404  8945 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 405  8947              ; 														; _ que definen el NIVEL.
 406  8947              ; Y todo comienza aquí .....
 407  8947              ;
 408  8947              ; Rutina principal *************************************************************************************************************************************************************************
 409  8947              ;
 410  8947              ;	16/11/22
 411  8947
 412  8947              START
 413  8947
 414  8947 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 415  894A 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 416  894C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 417  894E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 418  8950 F3           	DI
 419  8951
 420  8951 3E 07        	ld a,%00000111
 421  8953 CD 01 99     	call Cls
 422  8956
 423  8956 CD 51 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 424  8959
 425  8959              ; INICIALIZACIÓN.
 426  8959
 427  8959 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 428  895C CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 429  895F CD E0 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 430  8962              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 431  8962 CD 01 8D     	call Restore_entidad
 432  8965
 433  8965 21 10 89     	ld hl,Numero_parcial_de_entidades
 434  8968 46           	ld b,(hl)
 435  8969 04           	inc b
 436  896A 05           	dec b
 437  896B 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 438  896D
 439  896D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 440  896D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 441  896D              ;	Pintamos el resto de entidades:
 442  896D
 443  896D              ;	INICIA ENTIDADES !!!!!
 444  896D
 445  896D C5           1 push bc  												; Guardo el contador de entidades.
 446  896E CD 77 8B     	call Inicia_entidad
 447  8971 C1           	pop bc
 448  8972 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 449  8974
 450  8974              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 451  8974              ; (Esto se dá cuando se inicia una nueva oleada).
 452  8974
 453  8974 3A 06 89     	ld a,(Ctrl_1)
 454  8977 CB 5F        	bit 3,a
 455  8979 20 1B        	jr nz,5F											; Loop
 456  897B
 457  897B              ; 	INICIA AMADEUS !!!!!
 458  897B
 459  897B CD 28 8D     3 call Restore_Amadeus
 460  897E CD 7E 8C     	call Inicia_Puntero_objeto
 461  8981 CD F4 92     	call Draw
 462  8984 CD A0 7F     	call Guarda_foto_registros
 463  8987 CD A5 8D     	call Guarda_datos_de_borrado_Amadeus
 464  898A
 465  898A 11 7E 85     	ld de,Amadeus_db
 466  898D CD 3A 8D     	call Store_Amadeus
 467  8990
 468  8990              ; 	INICIA DISPAROS !!!!!
 469  8990
 470  8990 CD F6 8B     	call Inicia_Puntero_Disparo_Entidades
 471  8993 CD FD 8B     	call Inicia_Puntero_Disparo_Amadeus
 472  8996
 473  8996              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 474  8996
 475  8996 CD E0 8B     5 call Inicia_punteros_de_cajas
 476  8999 CD 01 8D     	call Restore_entidad
 477  899C
 478  899C 3A 06 89     	ld a,(Ctrl_1)
 479  899F CB 5F        	bit 3,a
 480  89A1 28 07        	jr z,6F
 481  89A3
 482  89A3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 483  89A3
 484  89A3 21 06 89     	ld hl,Ctrl_1
 485  89A6 CB 9E        	res 3,(hl)
 486  89A8 18 07        	jr Main
 487  89AA
 488  89AA              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 489  89AA
 490  89AA 21 25 89     6 ld hl,Ctrl_3
 491  89AD CB C6        	set 0,(hl)											; Frame completo.
 492  89AF FB           	ei
 493  89B0 76           	halt
 494  89B1
 495  89B1              ; ------------------------------------
 496  89B1
 497  89B1              Main
 498  89B1              ;
 499  89B1              ;	11/12/23
 500  89B1
 501  89B1              ; Aparece nueva entidad ???
 502  89B1
 503  89B1              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 504  89B1              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 505  89B1              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 506  89B1              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 507  89B1              ;														; _un 2º bloque.
 508  89B1
 509  89B1 3A 3A 89     	ld a,(Clock_Entidades_en_curso)
 510  89B4 47           	ld b,a
 511  89B5 3A 37 89     	ld a,(Contador_de_frames)
 512  89B8 B8           	cp b
 513  89B9 20 18        	jr nz,13F
 514  89BB
 515  89BB              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 516  89BB              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 517  89BB              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 518  89BB              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 519  89BB
 520  89BB              ;	inc a
 521  89BB              ;	cp b
 522  89BB              ;	jr nz,13F
 523  89BB
 524  89BB
 525  89BB              ;23 ld (Contador_de_frames),a
 526  89BB
 527  89BB              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 528  89BB              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 529  89BB
 530  89BB 3A 10 89     21 ld a,(Numero_parcial_de_entidades)
 531  89BE 47           	ld b,a
 532  89BF 3A 11 89     	ld a,(Entidades_en_curso)
 533  89C2 B8           	cp b
 534  89C3 28 0E        	jr z,13F
 535  89C5 30 0C        	jr nc,13F
 536  89C7
 537  89C7              ; --- --- --- --- ---
 538  89C7
 539  89C7 3C           	inc a
 540  89C8 32 11 89     	ld (Entidades_en_curso),a
 541  89CB
 542  89CB              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 543  89CB
 544  89CB 3A 3A 89     	ld a,(Clock_Entidades_en_curso)
 545  89CE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 546  89CE              ;! _ IMPREDECIBLE !!!!
 547  89CE C6 32        	add 50
 548  89D0 32 3A 89     	ld (Clock_Entidades_en_curso),a
 549  89D3
 550  89D3              ; -------------------------------------------------------------------------------------------------------------
 551  89D3
 552  89D3              ; Habilita disparos.
 553  89D3
 554  89D3 21 3C 89     13 ld hl,Disparo_Amadeus
 555  89D6 11 3E 89     	ld de,CLOCK_repone_disparo_Amadeus
 556  89D9 CD C5 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 557  89DC
 558  89DC 21 3F 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 559  89DF 11 41 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 560  89E2 CD C5 9C     	call Habilita_disparos
 561  89E5
 562  89E5              ; COLISIONES.
 563  89E5
 564  89E5 CD F4 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 565  89E8
 566  89E8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 567  89E8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 568  89E8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 569  89E8
 570  89E8 AF           	xor a
 571  89E9 32 2B 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 572  89EC
 573  89EC CD E0 8B     	call Inicia_punteros_de_cajas
 574  89EF CD 01 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 575  89F2              ; 														; _ en DRAW.
 576  89F2 3A C5 88     	ld a,(Filas)
 577  89F5 A7           	and a
 578  89F6 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 579  89F8 CD 13 8D     	call Incrementa_punteros_de_cajas
 580  89FB 18 F2        	jr 12B
 581  89FD
 582  89FD              ; ---------------------------------------------------------------------------------------
 583  89FD
 584  89FD 3A 10 89     10 ld a,(Numero_parcial_de_entidades)
 585  8A00 47               ld b,a
 586  8A01 A7           	and a
 587  8A02 20 14        	jr nz,11F
 588  8A04
 589  8A04 21 06 89     	ld hl,Ctrl_1
 590  8A07 CB 66        	bit 4,(hl)
 591  8A09 C2 AA 8A     	jp nz,16F
 592  8A0C
 593  8A0C              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 594  8A0C
 595  8A0C 21 06 89     	ld hl,Ctrl_1
 596  8A0F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 597  8A11
 598  8A11 3A 37 89     	ld a,(Contador_de_frames)
 599  8A14 3C           	inc a
 600  8A15 32 3B 89     	ld (Activa_recarga_cajas),a
 601  8A18
 602  8A18              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 603  8A18
 604  8A18 3A 11 89     11 ld a,(Entidades_en_curso)
 605  8A1B A7           	and a
 606  8A1C CA AA 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 607  8A1F 47           	ld b,a												; No hay entidades que gestionar.
 608  8A20
 609  8A20              ; ( Código que ejecutamos con cada entidad: ).
 610  8A20
 611  8A20              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 612  8A20
 613  8A20 C5           15 push bc 												; Nº de entidades en curso.
 614  8A21
 615  8A21              ; Existe "Entidad_guía" ???.
 616  8A21              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 617  8A21
 618  8A21 3A 25 89     	ld a,(Ctrl_3)
 619  8A24 CB 4F        	bit 1,a
 620  8A26 20 0A        	jr nz,22F
 621  8A28
 622  8A28              ; Activa "Entidad_guía".
 623  8A28
 624  8A28 21 04 89     	ld hl,Ctrl_2
 625  8A2B CB EE        	set 5,(hl)
 626  8A2D 21 25 89     	ld hl,Ctrl_3
 627  8A30 CB CE        	set 1,(hl)
 628  8A32
 629  8A32              ; Impacto ???
 630  8A32
 631  8A32 3A DE 88     22 ld a,(Impacto)
 632  8A35 A7           	and a
 633  8A36 28 31        	jr z,8F
 634  8A38
 635  8A38              ; Hay Impacto en esta entidad.
 636  8A38
 637  8A38 21 39 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 638  8A3B 35           	dec (hl)
 639  8A3C C2 9D 8A     	jp nz,17F
 640  8A3F
 641  8A3F              ;! Velocidad de la animación de la explosión.
 642  8A3F
 643  8A3F 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 644  8A41              ;														; _,(velocidad de la explosión).
 645  8A41
 646  8A41              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 647  8A41
 648  8A41 CD C5 8D     	call Repone_datos_de_borrado
 649  8A44 CD 1E 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 650  8A47
 651  8A47              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 652  8A47
 653  8A47 3A 04 89     	ld a,(Ctrl_2)
 654  8A4A CB 4F        	bit 1,a
 655  8A4C 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 656  8A4E
 657  8A4E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 658  8A4E
 659  8A4E 3A CD 88     	ld a,(CTRL_DESPLZ)
 660  8A51 A7           	and a
 661  8A52 20 08        	jr nz,18F
 662  8A54
 663  8A54 21 84 84     	ld hl,Indice_Explosion_2x2-2
 664  8A57 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 665  8A5A 18 06        	jr 19F
 666  8A5C
 667  8A5C 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 668  8A5F 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 669  8A62
 670  8A62 21 04 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 671  8A65 CB CE        	set 1,(hl)
 672  8A67 18 22        	jr 7F
 673  8A69
 674  8A69              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 675  8A69              ; _con las coordenadas de la entidad almacenada en DRAW.
 676  8A69
 677  8A69 3A 06 89     8 ld a,(Ctrl_1)
 678  8A6C CB 57        	bit 2,a
 679  8A6E 28 1B        	jr z,7F
 680  8A70
 681  8A70 2A 2E 89     	ld hl,(Coordenadas_disparo_certero)
 682  8A73 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 683  8A74              ;														; E contiene la coordenada_X del disparo.
 684  8A74 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 685  8A77              ;														; H FILA, (Coordenada_y de la entidad).
 686  8A77 A7           	and a
 687  8A78 ED 52        	sbc hl,de
 688  8A7A
 689  8A7A CD 0D 92     	call Determina_resultado_comparativa
 690  8A7D
 691  8A7D 78           	ld a,b
 692  8A7E A7           	and a
 693  8A7F 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 694  8A81
 695  8A81              ; ----- ----- -----
 696  8A81
 697  8A81 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 698  8A83 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 699  8A86
 700  8A86 21 06 89     	ld hl,Ctrl_1
 701  8A89 CB 96        	res 2,(hl)
 702  8A8B
 703  8A8B CD FB 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 704  8A8E
 705  8A8E 3A F3 88     	ld a,(Ctrl_0)
 706  8A91 CB 67        	bit 4,a
 707  8A93 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 708  8A95
 709  8A95              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 710  8A95              ; [[[
 711  8A95              ;	call Detecta_disparo_entidad
 712  8A95              ; ]]]
 713  8A95 CD BE 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 714  8A98
 715  8A98 21 F3 88     	ld hl,Ctrl_0
 716  8A9B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 717  8A9D
 718  8A9D CD C6 8C     17 call Store_Restore_cajas
 719  8AA0
 720  8AA0 C1           	pop bc
 721  8AA1
 722  8AA1 05           	dec b
 723  8AA2 C2 20 8A     	jp nz,15B
 724  8AA5
 725  8AA5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 726  8AA5              ; Hemos gestionado todas las unidades.
 727  8AA5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 728  8AA5
 729  8AA5 21 06 89     	ld hl,Ctrl_1
 730  8AA8 CB 96        	res 2,(hl)
 731  8AAA
 732  8AAA 21 25 89     16 ld hl,Ctrl_3
 733  8AAD CB C6        	set 0,(hl)											; Frame completo.
 734  8AAF AF           	xor a
 735  8AB0 D3 FE        	out ($fe),a
 736  8AB2 FB           	ei
 737  8AB3 76           	halt
 738  8AB4
 739  8AB4              ; ----------------------------------------
 740  8AB4
 741  8AB4 3A 06 89     	ld a,(Ctrl_1) 										; Existe Loop?
 742  8AB7 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 743  8AB9 CA B1 89     	jp z,Main
 744  8ABC
 745  8ABC              ; RECARGA DE NUEVA OLEADA.
 746  8ABC
 747  8ABC 3A 37 89     	ld a,(Contador_de_frames)
 748  8ABF 47           	ld b,a
 749  8AC0 3A 3B 89     	ld a,(Activa_recarga_cajas)
 750  8AC3 B8           	cp b
 751  8AC4 28 08        	jr z,20F
 752  8AC6
 753  8AC6 21 06 89     	ld hl,Ctrl_1
 754  8AC9 CB E6        	set 4,(hl)
 755  8ACB C3 B1 89     	jp Main
 756  8ACE
 757  8ACE 21 06 89     20 ld hl,Ctrl_1
 758  8AD1 CB A6        	res 4,(hl)
 759  8AD3
 760  8AD3 3A 37 89     	ld a,(Contador_de_frames)
 761  8AD6
 762  8AD6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 763  8AD6              ;! _ IMPREDECIBLE !!!!
 764  8AD6
 765  8AD6 C6 0A        	add 10
 766  8AD8 32 3A 89     	ld (Clock_Entidades_en_curso),a
 767  8ADB
 768  8ADB C3 5C 89     	jp 4B
 769  8ADE
 770  8ADE C9           	ret
 771  8ADF
 772  8ADF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 773  8ADF              ;
 774  8ADF              ;	16/11/23
 775  8ADF
 776  8ADF              Gestiona_Amadeus
 777  8ADF
 778  8ADF              ;! Activa/desactiva impacto con Amadeus.
 779  8ADF
 780  8ADF              ;	ld a,(Impacto)
 781  8ADF              ;	and a
 782  8ADF              ;	jr nz,2F
 783  8ADF
 784  8ADF CD 64 8B     	call Mov_Amadeus
 785  8AE2
 786  8AE2 3A F3 88     2 ld a,(Ctrl_0)
 787  8AE5 CB 67        	bit 4,a
 788  8AE7 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 789  8AE9
 790  8AE9 CD BE 8B     	call Guarda_foto_entidad_a_pintar
 791  8AEC CD A5 8D     	call Guarda_datos_de_borrado_Amadeus
 792  8AEF
 793  8AEF 21 F3 88     1 ld hl,Ctrl_0
 794  8AF2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 795  8AF4
 796  8AF4 CD 98 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 797  8AF7
 798  8AF7              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 799  8AF7
 800  8AF7 CD 60 8C     	call Calcula_numero_de_disparotes
 801  8AFA
 802  8AFA C9           	ret
 803  8AFB
 804  8AFB              ; --------------------------------------------------------------------------------------------------------------
 805  8AFB              ;
 806  8AFB              ;	27/05/23
 807  8AFB
 808  8AFB              Mov_obj
 809  8AFB
 810  8AFB 3A 04 89     	ld a,(Ctrl_2)
 811  8AFE CB 4F        	bit 1,a
 812  8B00 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 813  8B02
 814  8B02              ; Explosión:
 815  8B02
 816  8B02 3A 05 89     	ld a,(Frames_explosion)
 817  8B05 A7           	and a
 818  8B06 20 1D        	jr nz,4F
 819  8B08
 820  8B08              ; Una alimaña menos!!!!!!!!!1
 821  8B08
 822  8B08              ; Se trataba de una Entidad_guía ???
 823  8B08
 824  8B08 3A 04 89     	ld a,(Ctrl_2)
 825  8B0B CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 826  8B0D 28 05        	jr z,5F
 827  8B0F
 828  8B0F 21 25 89     	ld hl,Ctrl_3
 829  8B12 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 830  8B14
 831  8B14 CD 43 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 832  8B17 21 10 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 833  8B1A 35           	dec (hl)
 834  8B1B 21 11 89     	ld hl,Entidades_en_curso
 835  8B1E 35           	dec (hl)
 836  8B1F 21 0F 89     	ld hl,Numero_de_entidades
 837  8B22 35           	dec (hl)
 838  8B23 18 3E        	jr 3F
 839  8B25
 840  8B25              ; -----
 841  8B25
 842  8B25              ;	`Movemos´ la explosión.
 843  8B25
 844  8B25 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 845  8B28 23           	inc hl
 846  8B29 23           	inc hl
 847  8B2A 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 848  8B2D CD 78 8C     	call Extrae_address
 849  8B30 22 C9 88     	ld (Puntero_objeto),hl
 850  8B33
 851  8B33 21 05 89     	ld hl,Frames_explosion
 852  8B36 35           	dec (hl)
 853  8B37
 854  8B37 21 F3 88     	ld hl,Ctrl_0
 855  8B3A CB E6        	set 4,(hl)
 856  8B3C
 857  8B3C 18 25        	jr 3F
 858  8B3E
 859  8B3E AF           2 xor a
 860  8B3F 32 F3 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 861  8B42
 862  8B42              ; Movemos Entidades malignas.
 863  8B42
 864  8B42 CD 70 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 865  8B45
 866  8B45 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 867  8B48 CB 67        	bit 4,a
 868  8B4A C8           	ret z
 869  8B4B
 870  8B4B              ; Ha habido desplazamiento de la entidad maligna.
 871  8B4B              ; Ha llegado a zona de AMADEUS ???
 872  8B4B
 873  8B4B 3A CC 88     	ld a,(Coordenada_y)
 874  8B4E FE 14        	cp $14
 875  8B50 38 08        	jr c,1F
 876  8B52
 877  8B52              ; ---------
 878  8B52
 879  8B52              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 880  8B52              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 881  8B52
 882  8B52 F3           	di
 883  8B53 CD BD 8F     	call Genera_coordenadas_X
 884  8B56 CD F9 8F     	call Compara_coordenadas_X
 885  8B59 FB           	ei
 886  8B5A
 887  8B5A              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 888  8B5A
 889  8B5A              ; ---------
 890  8B5A
 891  8B5A CD C8 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 892  8B5D CD C5 8D     	call Repone_datos_de_borrado
 893  8B60 CD 1E 8C     	call Limpia_Variables_de_borrado
 894  8B63
 895  8B63 C9           3 ret													; _de la misma.
 896  8B64
 897  8B64              ; --------------------------------------------------------------------------------------------------------------
 898  8B64              ;
 899  8B64              ;	29/1/23
 900  8B64
 901  8B64              Mov_Amadeus
 902  8B64
 903  8B64 CD 65 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 904  8B67
 905  8B67 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 906  8B6A CB 67        	bit 4,a
 907  8B6C C8           	ret z
 908  8B6D
 909  8B6D              ; ---------
 910  8B6D
 911  8B6D CD C8 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 912  8B70 CD B5 8D     	call Repone_datos_de_borrado_Amadeus
 913  8B73 CD 1E 8C     	call Limpia_Variables_de_borrado
 914  8B76
 915  8B76 C9           	ret
 916  8B77
 917  8B77              ; -----------------------------------------------------------------------------------
 918  8B77              ;
 919  8B77              ;	12/12/23
 920  8B77              ;
 921  8B77              ;	Inicia Entidades y fija "Entidad_guía".
 922  8B77
 923  8B77 CD 7E 8C     Inicia_entidad	call Inicia_Puntero_objeto
 924  8B7A CD 15 99     	call Recompone_posicion_inicio
 925  8B7D CD F4 92     	call Draw
 926  8B80
 927  8B80 E5           	push hl
 928  8B81 CD 90 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 929  8B84 E1           	pop hl
 930  8B85
 931  8B85 CD A0 7F     	call Guarda_foto_registros
 932  8B88 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 933  8B89              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 934  8B89              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 935  8B89 CD A7 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados
 936  8B8C
 937  8B8C CD C6 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 938  8B8F C9           	ret
 939  8B90
 940  8B90
 941  8B90              ; --------------------------------------------------------------------------------------------------------------
 942  8B90              ;
 943  8B90              ;	12/12/23
 944  8B90              ;
 945  8B90
 946  8B90              Inicia_entidad_guia
 947  8B90
 948  8B90              ; Existe "Entidad_guía" ???
 949  8B90
 950  8B90 3A 25 89     	ld a,(Ctrl_3)
 951  8B93 CB 4F        	bit 1,a
 952  8B95 C0           	ret nz
 953  8B96
 954  8B96              ; Inicia Entidad_guía:
 955  8B96
 956  8B96 21 04 89     	ld hl,Ctrl_2
 957  8B99 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
 958  8B9B 21 25 89     	ld hl,Ctrl_3
 959  8B9E CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
 960  8BA0
 961  8BA0 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados+6
 962  8BA3 22 F1 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
 963  8BA6
 964  8BA6 C9           	ret
 965  8BA7
 966  8BA7              ; --------------------------------------------------------------------------------------------------------------
 967  8BA7              ;
 968  8BA7              ;	13/12/23
 969  8BA7              ;
 970  8BA7
 971  8BA7              Actualiza_Puntero_de_almacen_de_mov_masticados
 972  8BA7
 973  8BA7              ;	Entidad_guía ???
 974  8BA7
 975  8BA7 3A 04 89     	ld a,(Ctrl_2)
 976  8BAA CB 6F        	bit 5,a
 977  8BAC C8           	ret z
 978  8BAD
 979  8BAD E5           	push hl
 980  8BAE C5           	push bc
 981  8BAF
 982  8BAF 2A F1 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 983  8BB2 01 06 00     	ld bc,6
 984  8BB5 A7           	and a
 985  8BB6 ED 4A        	adc hl,bc
 986  8BB8 22 F1 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
 987  8BBB
 988  8BBB C1           	pop bc
 989  8BBC E1           	pop hl
 990  8BBD
 991  8BBD C9           	ret
 992  8BBE
 993  8BBE              ; --------------------------------------------------------------------------------------------------------------
 994  8BBE              ;
 995  8BBE              ;	31/08/23
 996  8BBE              ;
 997  8BBE              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 998  8BBE              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 999  8BBE
1000  8BBE              Guarda_foto_entidad_a_pintar
1001  8BBE
1002  8BBE              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1003  8BBE
1004  8BBE CD F4 92     	call Draw
1005  8BC1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1006  8BC4 CD A7 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados
1007  8BC7 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
1008  8BC8
1009  8BC8              ; --------------------------------------------------------------------------------------------------------------
1010  8BC8              ;
1011  8BC8              ;	19/9/23
1012  8BC8
1013  8BC8 21 C5 88     Prepara_var_pintado ld hl,Filas
1014  8BCB 11 E5 88     	ld de,Variables_de_pintado
1015  8BCE 01 08 00     	ld bc,8
1016  8BD1 ED B0        	ldir
1017  8BD3 C9           	ret
1018  8BD4
1019  8BD4              ; --------------------------------------------------------------------------------------------------------------
1020  8BD4
1021  8BD4 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
1022  8BD7 11 C5 88     	ld de,Filas
1023  8BDA 01 08 00     	ld bc,8
1024  8BDD ED B0        	ldir
1025  8BDF C9           	ret
1026  8BE0
1027  8BE0              ; *************************************************************************************************************************************************************
1028  8BE0              ;
1029  8BE0              ; 8/1/23
1030  8BE0              ;
1031  8BE0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1032  8BE0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1033  8BE0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1034  8BE0
1035  8BE0              ; Destruye HL y DE !!!!!
1036  8BE0
1037  8BE0              Inicia_punteros_de_cajas
1038  8BE0
1039  8BE0 21 6C 85     	ld hl,Indice_de_cajas
1040  8BE3 CD 78 8C         call Extrae_address
1041  8BE6 22 09 89         ld (Puntero_store_caja),hl
1042  8BE9 21 6E 85     	ld hl,Indice_de_cajas+2
1043  8BEC 22 0D 89     	ld (Indice_restore_caja),hl
1044  8BEF CD 78 8C     	call Extrae_address
1045  8BF2 22 0B 89     	ld (Puntero_restore_caja),hl
1046  8BF5 C9               ret
1047  8BF6
1048  8BF6              ; *************************************************************************************************************************************************************
1049  8BF6              ;
1050  8BF6              ; 8/1/23
1051  8BF6              ;
1052  8BF6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1053  8BF6
1054  8BF6 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1055  8BF9 22 27 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1056  8BFC C9           	ret
1057  8BFD 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1058  8C00 22 29 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1059  8C03 C9           	ret
1060  8C04
1061  8C04              ; -------------------------------------------------------------------------------------------------------------
1062  8C04              ;
1063  8C04              ; 21/9/23
1064  8C04              ;
1065  8C04
1066  8C04              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1067  8C04
1068  8C04              Limpia_album_Amadeus
1069  8C04
1070  8C04 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1071  8C07 7E           	ld a,(hl)
1072  8C08 A7           	and a
1073  8C09 C8           	ret z
1074  8C0A
1075  8C0A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1076  8C0D 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1077  8C10 01 0B 00     	ld bc,11
1078  8C13 AF           	xor a
1079  8C14 77           	ld (hl),a
1080  8C15 ED B0        	ldir
1081  8C17
1082  8C17 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1083  8C1A 22 23 89     	ld (End_Snapshot_Amadeus),hl
1084  8C1D
1085  8C1D C9           	ret
1086  8C1E
1087  8C1E 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1088  8C21 11 E0 88     	ld de,Variables_de_borrado+1
1089  8C24 01 05 00     	ld bc,5
1090  8C27 AF           	xor a
1091  8C28 77           	ld (hl),a
1092  8C29 ED B0        	ldir
1093  8C2B C9           	ret
1094  8C2C
1095  8C2C              ; -------------------------------------------------------------------------------------------------------------
1096  8C2C              ;
1097  8C2C              ; 8/9/23
1098  8C2C              ;
1099  8C2C
1100  8C2C              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1101  8C2C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1102  8C2C
1103  8C2C              Calcula_numero_de_malotes
1104  8C2C
1105  8C2C 21 00 70     	ld hl,Album_de_fotos
1106  8C2F EB           	ex de,hl
1107  8C30 2A 1D 89     	ld hl,(Stack_snapshot)
1108  8C33
1109  8C33 06 00        	ld b,0
1110  8C35 7D           	ld a,l
1111  8C36 93           	sub e
1112  8C37 28 07        	jr z,1F
1113  8C39
1114  8C39              ; Nº de malotes no es "0".
1115  8C39
1116  8C39 D6 06        2 sub 6
1117  8C3B 04           	inc b
1118  8C3C A7           	and a
1119  8C3D 20 FA        	jr nz,2B
1120  8C3F 78           	ld a,b
1121  8C40
1122  8C40 32 12 89     1 ld (Numero_de_malotes),a
1123  8C43 C9           	ret
1124  8C44
1125  8C44              ; -------------------------------------------------------------------------------------------------------------
1126  8C44              ;
1127  8C44              ; 8/9/23
1128  8C44              ;
1129  8C44
1130  8C44              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1131  8C44              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1132  8C44
1133  8C44              Calcula_malotes_Amadeus
1134  8C44
1135  8C44 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1136  8C47 EB           	ex de,hl
1137  8C48 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1138  8C4B
1139  8C4B 7C           	ld a,h
1140  8C4C A7           	and a
1141  8C4D 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1142  8C4F
1143  8C4F 06 00        	ld b,0
1144  8C51 7D           	ld a,l
1145  8C52 93           	sub e
1146  8C53 28 07        	jr z,1F
1147  8C55
1148  8C55              ; Nº de malotes no es "0".
1149  8C55
1150  8C55 D6 06        2 sub 6
1151  8C57 04           	inc b
1152  8C58 A7           	and a
1153  8C59 20 FA        	jr nz,2B
1154  8C5B 78           	ld a,b
1155  8C5C
1156  8C5C 32 12 89     1 ld (Numero_de_malotes),a
1157  8C5F C9           	ret
1158  8C60
1159  8C60              ; -------------------------------------------------------------------------------------------------------------
1160  8C60              ;
1161  8C60              ; 28/2/23
1162  8C60              ;
1163  8C60
1164  8C60              Calcula_numero_de_disparotes
1165  8C60
1166  8C60 21 56 70     	ld hl,Album_de_fotos_disparos
1167  8C63 EB           	ex de,hl
1168  8C64 2A 21 89     	ld hl,(End_Snapshot_disparos)
1169  8C67
1170  8C67 06 00        	ld b,0
1171  8C69 7D           	ld a,l
1172  8C6A 93           	sub e
1173  8C6B 28 07        	jr z,1F
1174  8C6D
1175  8C6D              ; Nº de malotes no es "0".
1176  8C6D
1177  8C6D D6 06        2 sub 6
1178  8C6F 04           	inc b
1179  8C70 A7           	and a
1180  8C71 20 FA        	jr nz,2B
1181  8C73 78           	ld a,b
1182  8C74
1183  8C74 32 26 89     1 ld (Numero_de_disparotes),a
1184  8C77 C9           	ret
1185  8C78
1186  8C78              ; *************************************************************************************************************************************************************
1187  8C78              ;
1188  8C78              ; 20/10/22
1189  8C78              ;
1190  8C78              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1191  8C78              ;
1192  8C78              ; Destruye el puntero y DE !!!!!
1193  8C78
1194  8C78 5E           Extrae_address ld e,(hl)
1195  8C79 23           	inc hl
1196  8C7A 56           	ld d,(hl)
1197  8C7B 2B           	dec hl
1198  8C7C EB           	ex de,hl
1199  8C7D C9           	ret
1200  8C7E
1201  8C7E              ; *************************************************************************************************************************************************************
1202  8C7E              ;
1203  8C7E              ;	7/2/23
1204  8C7E              ;
1205  8C7E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1206  8C7E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1207  8C7E              ;
1208  8C7E              ;   Destruye HL y BC !!!!!,
1209  8C7E              ;
1210  8C7E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1211  8C7E              ;					"0" ..... Izquierda.
1212  8C7E
1213  8C7E              Inicia_Puntero_objeto
1214  8C7E
1215  8C7E 3A D9 88     	ld a,(Cuad_objeto)
1216  8C81 E6 01        	and 1
1217  8C83 F5           	push af
1218  8C84 CC A2 8C     	call z,Inicia_puntero_objeto_izq
1219  8C87 F1           	pop af
1220  8C88 28 2B        	jr z,1F
1221  8C8A CD 8F 8C     	call Inicia_puntero_objeto_der
1222  8C8D 18 26        	jr 1F
1223  8C8F
1224  8C8F              ; Arrancamos desde la parte izquierda de la pantalla.
1225  8C8F              ; Iniciamos (Indice_Sprite_der).
1226  8C8F
1227  8C8F 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1228  8C92 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1229  8C95 CD 78 8C     	call Extrae_address
1230  8C98 22 C9 88     	ld (Puntero_objeto),hl
1231  8C9B
1232  8C9B 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1233  8C9E 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1234  8CA1 C9           	ret
1235  8CA2
1236  8CA2              ; Arrancamos desde la parte derecha de la pantalla.
1237  8CA2              ; Iniciamos (Indice_Sprite_izq).
1238  8CA2
1239  8CA2 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1240  8CA5 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1241  8CA8 CD 78 8C     	call Extrae_address
1242  8CAB 22 C9 88     	ld (Puntero_objeto),hl
1243  8CAE
1244  8CAE 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1245  8CB1 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1246  8CB4 C9           	ret
1247  8CB5
1248  8CB5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1249  8CB5
1250  8CB5 21 40 83     1 ld hl,Amadeus
1251  8CB8 ED 4B C9 88  	ld bc,(Puntero_objeto)
1252  8CBC B7 ED 42     	sub hl,bc
1253  8CBF C0           	ret nz
1254  8CC0 21 F3 88     	ld hl,Ctrl_0
1255  8CC3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1256  8CC5 C9           	ret 												; _de nuestra nave en los extremos.
1257  8CC6
1258  8CC6              ; *************************************************************************************************************************************************************
1259  8CC6              ;
1260  8CC6              ;	14/5/23
1261  8CC6              ;
1262  8CC6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1263  8CC6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1264  8CC6
1265  8CC6              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1266  8CC6              ;	_de la 2ª y 3ª entidad respectivamente.
1267  8CC6
1268  8CC6              Store_Restore_cajas
1269  8CC6
1270  8CC6 E5           	push hl
1271  8CC7 D5           	push de
1272  8CC8 C5            	push bc
1273  8CC9
1274  8CC9              ;	STORE !!!!!
1275  8CC9              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1276  8CC9
1277  8CC9 21 C5 88     	ld hl,Filas
1278  8CCC ED 5B 09 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1279  8CD0 01 41 00     	ld bc,65
1280  8CD3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1281  8CD5
1282  8CD5              ; 	Entidad_sospechosa. 20/4/23
1283  8CD5
1284  8CD5 3A DE 88     	ld a,(Impacto)
1285  8CD8 A7           	and a
1286  8CD9 28 0C        	jr z,1F
1287  8CDB
1288  8CDB 2A 09 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1289  8CDE 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1290  8CE1 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1291  8CE2 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1292  8CE4 22 2C 89     	ld (Entidad_sospechosa_de_colision),hl
1293  8CE7
1294  8CE7              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1295  8CE7
1296  8CE7 2A 0B 89     1 ld hl,(Puntero_restore_caja)
1297  8CEA 7E           	ld a,(hl)
1298  8CEB A7           	and a
1299  8CEC F5           	push af
1300  8CED 28 08        	jr z,2F
1301  8CEF
1302  8CEF 11 C5 88     	ld de,Filas
1303  8CF2 01 41 00     	ld bc,65
1304  8CF5 ED B0        	ldir
1305  8CF7
1306  8CF7 CD 13 8D     2 call Incrementa_punteros_de_cajas
1307  8CFA
1308  8CFA F1           	pop af
1309  8CFB 28 EA        	jr z,1B
1310  8CFD
1311  8CFD C1           	pop bc
1312  8CFE D1           	pop de
1313  8CFF E1           	pop hl
1314  8D00
1315  8D00 C9           	ret
1316  8D01
1317  8D01              ; **************************************************************************************************
1318  8D01              ;
1319  8D01              ;	12/05/23
1320  8D01              ;
1321  8D01              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1322  8D01
1323  8D01 E5           Restore_entidad push hl
1324  8D02 D5           	push de
1325  8D03 C5            	push bc
1326  8D04
1327  8D04 2A 09 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1328  8D07 11 C5 88     	ld de,Filas
1329  8D0A 01 41 00     	ld bc,65
1330  8D0D ED B0        	ldir
1331  8D0F
1332  8D0F C1           	pop bc
1333  8D10 D1           	pop de
1334  8D11 E1           	pop hl
1335  8D12 C9           	ret
1336  8D13
1337  8D13              ; **************************************************************************************************
1338  8D13              ;
1339  8D13              ;	08/05/23
1340  8D13              ;
1341  8D13              ;	Incrementamos los dos punteros de entidades. (+1).
1342  8D13
1343  8D13              Incrementa_punteros_de_cajas
1344  8D13
1345  8D13 2A 0B 89     	ld hl,(Puntero_restore_caja)
1346  8D16 22 09 89     	ld (Puntero_store_caja),hl
1347  8D19 2A 0D 89     	ld hl,(Indice_restore_caja)
1348  8D1C 23           	inc hl
1349  8D1D 23           	inc hl
1350  8D1E 22 0D 89     	ld (Indice_restore_caja),hl
1351  8D21 CD 78 8C         call Extrae_address
1352  8D24 22 0B 89         ld (Puntero_restore_caja),hl
1353  8D27 C9               ret
1354  8D28
1355  8D28              ; **************************************************************************************************
1356  8D28              ;
1357  8D28              ;	25/01/23
1358  8D28              ;
1359  8D28              ;	Restore_Amadeus
1360  8D28              ;
1361  8D28              ;	Cargamos en DRAW los parámetros de Amadeus.
1362  8D28              ;
1363  8D28
1364  8D28 E5           Restore_Amadeus	push hl
1365  8D29 D5           	push de
1366  8D2A C5            	push bc
1367  8D2B 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1368  8D2E 11 C5 88     	ld de,Filas
1369  8D31 01 41 00     	ld bc,65
1370  8D34 ED B0        	ldir
1371  8D36 C1           	pop bc
1372  8D37 D1           	pop de
1373  8D38 E1           	pop hl
1374  8D39 C9           	ret
1375  8D3A
1376  8D3A              ; *************************************************************************************************************************************************************
1377  8D3A              ;
1378  8D3A              ;	29/04/23
1379  8D3A              ;
1380  8D3A              ;	Store_Amadeus
1381  8D3A              ;
1382  8D3A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1383  8D3A              ;
1384  8D3A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1385  8D3A              ;
1386  8D3A              ;	DESTRUYE: HL y BC y DE.
1387  8D3A
1388  8D3A 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1389  8D3D 01 41 00     	ld bc,65
1390  8D40 ED B0        	ldir
1391  8D42 C9           	ret
1392  8D43
1393  8D43              ; -----------------------------------------------------------
1394  8D43              ;
1395  8D43              ;	27/04/23
1396  8D43              ;
1397  8D43              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1398  8D43              ;
1399  8D43              ;	Destruye: HL,BC,DE,A
1400  8D43
1401  8D43 21 C5 88     Borra_datos_entidad ld hl,Filas
1402  8D46 01 40 00     	ld bc,64
1403  8D49 AF           	xor a
1404  8D4A 77           	ld (hl),a
1405  8D4B 11 C6 88     	ld de,Filas+1
1406  8D4E ED B0        	ldir
1407  8D50 C9           	ret
1408  8D51
1409  8D51              ; -----------------------------------------------------------
1410  8D51
1411  8D51              ; Teclado.
1412  8D51
1413  8D51 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1414  8D53 DB FE        	in a,($fe)
1415  8D55 E6 01        	and $01
1416  8D57 28 02        	jr z,1f
1417  8D59 18 F6        	jr Pulsa_ENTER
1418  8D5B C9           1 ret
1419  8D5C
1420  8D5C              ; **************************************************************************************************
1421  8D5C              ;
1422  8D5C              ; Temporización.
1423  8D5C
1424  8D5C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1425  8D5C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1426  8D5C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1427  8D5C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1428  8D5C
1429  8D5C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1430  8D5C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1431  8D5C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1432  8D5C
1433  8D5C              ; A partir de $4f61 no hace falta DELAY.
1434  8D5C
1435  8D5C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1436  8D5C
1437  8D5C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1438  8D5F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1439  8D60 78           	LD A,B
1440  8D61 A7           	AND A
1441  8D62 20 FB        	JR NZ,wait
1442  8D64 C9           	RET
1443  8D65
1444  8D65              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1445  8D65              ;
1446  8D65              ;	5/3/23
1447  8D65              ;
1448  8D65              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1449  8D65
1450  8D65              Movimiento_Amadeus
1451  8D65
1452  8D65              ; Disparo.
1453  8D65
1454  8D65 3A 3C 89     	ld a,(Disparo_Amadeus)
1455  8D68 A7           	and a
1456  8D69 20 02        	jr nz,1F
1457  8D6B 18 15        	jr 2F
1458  8D6D
1459  8D6D 3E F7        1 ld a,$f7													; "5" para disparar.
1460  8D6F DB FE        	in a,($fe)
1461  8D71 E6 10        	and $10
1462  8D73
1463  8D73 F5           	push af
1464  8D74 CC 20 8E     	call z,Genera_disparo
1465  8D77 F1           	pop af
1466  8D78 20 08        	jr nz,2F
1467  8D7A
1468  8D7A 3A 3C 89     	ld a,(Disparo_Amadeus)
1469  8D7D EE 01        	xor 1
1470  8D7F 32 3C 89     	ld (Disparo_Amadeus),a
1471  8D82 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1472  8D84 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1473  8D86 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1474  8D88 CC CF 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1475  8D8B
1476  8D8B 3E F7        	ld a,$f7
1477  8D8D DB FE        	in a,($fe)
1478  8D8F E6 01        	and $01
1479  8D91 C8           	ret z
1480  8D92
1481  8D92 3E F7        	ld a,$f7
1482  8D94 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1483  8D96 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1484  8D98 CC B1 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1485  8D9B C9           	ret
1486  8D9C
1487  8D9C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1488  8D9C              ;
1489  8D9C              ;	Rutina provisional para que los malotes cagen balas.
1490  8D9C
1491  8D9C              Detecta_disparo_entidad
1492  8D9C
1493  8D9C 3A 3F 89     	ld a,(Disparo_entidad)
1494  8D9F A7           	and a
1495  8DA0 C8           	ret z
1496  8DA1
1497  8DA1              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1498  8DA1
1499  8DA1              ;	ld a,$7f				; Detecta SPACE.
1500  8DA1              ;	in a,($fe)
1501  8DA1              ;	and 1
1502  8DA1              ;	ret nz
1503  8DA1
1504  8DA1 CD 20 8E     	call Genera_disparo
1505  8DA4 C9           	ret
1506  8DA5
1507  8DA5              ; ----------------------------------------------------------------------
1508  8DA5              ;
1509  8DA5              ;	8/9/23
1510  8DA5
1511  8DA5 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1512  8DA8 2B            	dec hl
1513  8DA9 7E           	ld a,(hl)
1514  8DAA A7           	and a
1515  8DAB C8           	ret z										; Salimos si es álbum está vacío.
1516  8DAC
1517  8DAC 11 E4 88     	ld de,Variables_de_borrado+5
1518  8DAF 01 06 00     	ld bc,6
1519  8DB2 ED B8        	lddr
1520  8DB4 C9           	ret
1521  8DB5
1522  8DB5              ; ----------------------------------------------------------------------
1523  8DB5              ;
1524  8DB5              ;	9/9/23
1525  8DB5
1526  8DB5              Repone_datos_de_borrado_Amadeus
1527  8DB5
1528  8DB5 21 DF 88     	ld hl,Variables_de_borrado
1529  8DB8 11 AC 70     	ld de,Album_de_fotos_Amadeus
1530  8DBB 01 06 00     	ld bc,6
1531  8DBE ED B0        	ldir
1532  8DC0
1533  8DC0 EB           	ex de,hl
1534  8DC1 22 23 89     	ld (End_Snapshot_Amadeus),hl
1535  8DC4
1536  8DC4 C9           	ret
1537  8DC5
1538  8DC5              ; ----------------------------------------------------------------------
1539  8DC5              ;
1540  8DC5              ;	27/10/23
1541  8DC5              ;
1542  8DC5
1543  8DC5              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1544  8DC5              ;	_ Album_de_fotos correspondiente.
1545  8DC5
1546  8DC5              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1547  8DC5              ;	_ durante el proceso de escritura.
1548  8DC5
1549  8DC5              Repone_datos_de_borrado
1550  8DC5
1551  8DC5 F3           	di
1552  8DC6
1553  8DC6 ED 5B 1D 89  	ld de,(Stack_snapshot)
1554  8DCA 21 DF 88     	ld hl,Variables_de_borrado
1555  8DCD 01 06 00     	ld bc,6
1556  8DD0 ED B0        	ldir
1557  8DD2 FB           	ei
1558  8DD3
1559  8DD3 EB           	ex de,hl
1560  8DD4 22 1D 89     	ld (Stack_snapshot),hl
1561  8DD7
1562  8DD7 C9           	ret
1563  8DD8
1564  8DD8              ; -----------------------------------------------------------------------------------
1565  8DD8
1566  8DD8              Pinta_Amadeus
1567  8DD8
1568  8DD8 3E 06        	ld a,6
1569  8DDA D3 FE            out ($fe),a										; Amarillo
1570  8DDC
1571  8DDC CD 44 8C        	call Calcula_malotes_Amadeus
1572  8DDF CD 84 96     	call Extrae_foto_Amadeus
1573  8DE2 CD 04 8C     	call Limpia_album_Amadeus
1574  8DE5
1575  8DE5 C9           	ret
1576  8DE6
1577  8DE6              Pinta_entidades
1578  8DE6
1579  8DE6              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1580  8DE6
1581  8DE6 3A 25 89     	ld a,(Ctrl_3)
1582  8DE9 CB 47        	bit 0,a
1583  8DEB C8           	ret z
1584  8DEC
1585  8DEC CD 2C 8C     	call Calcula_numero_de_malotes
1586  8DEF CD 02 96     	call Extrae_foto_entidades
1587  8DF2 CD 13 80     	call Limpia_y_reinicia_Stack_Snapshot
1588  8DF5
1589  8DF5 C9           	ret
1590  8DF6
1591  8DF6              ; -----------------------------------------------------------------------------------
1592  8DF6              ;
1593  8DF6              ;	10/12/23
1594  8DF6              ;
1595  8DF6              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1596  8DF6
1597  8DF6              Actualiza_relojes
1598  8DF6
1599  8DF6 3A 25 89     	ld a,(Ctrl_3)
1600  8DF9 CB 47        	bit 0,a
1601  8DFB C8           	ret z 						;	Salimos si no hemos pintado unidades.
1602  8DFC
1603  8DFC 21 37 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1604  8DFF 34           	inc (hl)
1605  8E00
1606  8E00 34           	inc (hl)
1607  8E01 35           	dec (hl)
1608  8E02 C0           	ret nz
1609  8E03
1610  8E03 21 38 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1611  8E06 34           	inc (hl)
1612  8E07 C9           	ret
1613  8E08
1614  8E08              ; ---------------------------------------------------------------
1615  8E08              ;
1616  8E08              ;	27/9/23
1617  8E08
1618  8E08              Guarda_parametros_DRAW
1619  8E08
1620  8E08 21 C5 88     	ld hl,Filas
1621  8E0B 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1622  8E0E 01 41 00     	ld bc,65
1623  8E11 ED B0        	ldir
1624  8E13 C9           	ret
1625  8E14
1626  8E14              Recupera_parametros_DRAW
1627  8E14
1628  8E14 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1629  8E17 11 C5 88     	ld de,Filas
1630  8E1A 01 41 00     	ld bc,65
1631  8E1D ED B0        	ldir
1632  8E1F C9           	ret
1633  8E20
1634  8E20              ; ---------------------------------------------------------------
1635  8E20
1636  8E20              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E20              ; ******************************************************************************************************************************************************************************************
   2+ 8E20              ;
   3+ 8E20              ;   21/07/23
   4+ 8E20              ;
   5+ 8E20              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E20              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E20              ;
   8+ 8E20              ;
   9+ 8E20              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E20              ;
  11+ 8E20              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E20              ;               _ hacen las entidades hacia abajo.
  13+ 8E20              ;
  14+ 8E20              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E20              ;
  16+ 8E20              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E20              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E20              ;
  19+ 8E20              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E20              ;           _ la bala.
  21+ 8E20              ;
  22+ 8E20              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E20              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E20              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E20              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E20              ;           _ en el momento de generarse la bala)).
  27+ 8E20
  28+ 8E20              Genera_disparo
  29+ 8E20
  30+ 8E20              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E20              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E20              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E20              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E20              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E20              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E20              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E20
  38+ 8E20              ; Exclusiones:
  39+ 8E20
  40+ 8E20 3A DD 88         ld a,(Vel_down)
  41+ 8E23 47               ld b,a
  42+ 8E24 3A 36 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E27 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E28 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E29 3A 00 89         ld a,(Columnas)
  46+ 8E2C 47               ld b,a
  47+ 8E2D 3A C6 88         ld a,(Columns)
  48+ 8E30 B8               cp b
  49+ 8E31 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E32
  51+ 8E32              ; ----- ----- -----
  52+ 8E32
  53+ 8E32 3A F3 88         ld a,(Ctrl_0)
  54+ 8E35 CB 77            bit 6,a
  55+ 8E37 20 06            jr nz,14F
  56+ 8E39
  57+ 8E39 3A CC 88         ld a,(Coordenada_y)
  58+ 8E3C FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E3E D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E3F
  61+ 8E3F 21 00 80     14 ld hl,Indice_disparo
  62+ 8E42 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8E45 4F               ld c,a
  64+ 8E46 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E48              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E48              ;                                            ""        ""       "f9", B="1"
  67+ 8E48              ;                                            ""        ""       "fb", B="2"
  68+ 8E48              ;                                            ""        ""       "fb", B="3"
  69+ 8E48 A7               and a
  70+ 8E49 28 10            jr z,1F
  71+ 8E4B E6 01            and 1
  72+ 8E4D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E4E
  74+ 8E4E 79               ld a,c
  75+ 8E4F 16 F9            ld d,$f9
  76+ 8E51 23           2 inc hl
  77+ 8E52 23               inc hl
  78+ 8E53 04               inc b
  79+ 8E54 BA               cp d
  80+ 8E55 28 04            jr z,1F
  81+ 8E57 14               inc d
  82+ 8E58 14               inc d
  83+ 8E59 18 F6            jr 2B
  84+ 8E5B
  85+ 8E5B CD 78 8C     1 call Extrae_address
  86+ 8E5E E5               push hl
  87+ 8E5F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E61 DD 21 CA 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E65
  90+ 8E65              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E65              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E65
  93+ 8E65 3A F3 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E68 CB 77            bit 6,a
  95+ 8E6A 20 04            jr nz,19F
  96+ 8E6C
  97+ 8E6C AF               xor a
  98+ 8E6D 32 3F 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E70
 100+ 8E70 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8E73 FE 02            cp 2
 102+ 8E75 38 66            jr c,3F
 103+ 8E77 28 64            jr z,3F
 104+ 8E79
 105+ 8E79              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E79
 107+ 8E79 E6 01            and 1
 108+ 8E7B 28 30            jr z,4F
 109+ 8E7D
 110+ 8E7D              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E7D              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E7D              ;
 113+ 8E7D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E7D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E7D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E7D
 117+ 8E7D 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8E80
 119+ 8E80              ;   Amadeus o entidad ???.
 120+ 8E80
 121+ 8E80 3A F3 88         ld a,(Ctrl_0)
 122+ 8E83 CB 77            bit 6,a
 123+ 8E85 28 0A            jr z,8F
 124+ 8E87
 125+ 8E87              ; 	Dispara Amadeus.
 126+ 8E87
 127+ 8E87 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E89 CD F3 95         call PreviousScan
 129+ 8E8C CD F3 95         call PreviousScan
 130+ 8E8F
 131+ 8E8F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E8F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E8F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E8F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E8F
 136+ 8E8F 18 11            jr 10F
 137+ 8E91
 138+ 8E91              ; 	Dispara Entidad.
 139+ 8E91
 140+ 8E91 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E94              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E94
 143+ 8E94              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E94              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E94
 146+ 8E94 C5               push bc
 147+ 8E95 06 10            ld b,16
 148+ 8E97 CD E4 95     9 call NextScan
 149+ 8E9A 10 FB            djnz 9B
 150+ 8E9C C1               pop bc
 151+ 8E9D CD 07 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EA0 18 06            jr 17F
 153+ 8EA2
 154+ 8EA2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EA2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EA2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EA2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EA2
 159+ 8EA2 CD 07 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EA5 CD 7C 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EA8              ;                                                      ; _al generar el disparo.
 162+ 8EA8
 163+ 8EA8              ; 	LLegados a este punto tendremos:
 164+ 8EA8              ;
 165+ 8EA8              ;       Puntero_objeto_disparo en IY.
 166+ 8EA8              ;       Rutinas_de_impresion en IX.
 167+ 8EA8              ;       Puntero_de_impresion en HL.
 168+ 8EA8              ;       Impacto/Dirección en BC.
 169+ 8EA8
 170+ 8EA8 CD 0F 8F     17 call Almacena_disparo
 171+ 8EAB 18 52            jr 6F                                             ; RET.
 172+ 8EAD
 173+ 8EAD              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EAD              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EAD              ;
 176+ 8EAD              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EAD              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EAD              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EAD
 180+ 8EAD 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8EB0
 182+ 8EB0              ;   Amadeus o entidad ???.
 183+ 8EB0
 184+ 8EB0 3A F3 88         ld a,(Ctrl_0)
 185+ 8EB3 CB 77            bit 6,a
 186+ 8EB5 28 0A            jr z,11F
 187+ 8EB7
 188+ 8EB7              ; 	Dispara Amadeus.
 189+ 8EB7
 190+ 8EB7 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EB9 CD F3 95         call PreviousScan
 192+ 8EBC CD F3 95         call PreviousScan
 193+ 8EBF
 194+ 8EBF              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EBF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EBF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EBF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EBF
 199+ 8EBF 18 11            jr 13F
 200+ 8EC1
 201+ 8EC1              ; 	Dispara Entidad.
 202+ 8EC1
 203+ 8EC1 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EC4              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EC4
 206+ 8EC4              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EC4              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EC4
 209+ 8EC4 C5               push bc
 210+ 8EC5 06 10            ld b,16
 211+ 8EC7 CD E4 95     12 call NextScan
 212+ 8ECA 10 FB            djnz 12B
 213+ 8ECC C1               pop bc
 214+ 8ECD
 215+ 8ECD CD 00 8F         call Ajusta_disparo_parte_derecha
 216+ 8ED0 18 06            jr 18F
 217+ 8ED2
 218+ 8ED2              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8ED2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8ED2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8ED2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8ED2
 223+ 8ED2 CD 00 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8ED5 CD 7C 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8ED8              ;                                                       ; _al generar el disparo.
 226+ 8ED8
 227+ 8ED8              ; LLegados a este punto tendremos:
 228+ 8ED8              ;
 229+ 8ED8              ;       Puntero_objeto_disparo en IY.
 230+ 8ED8              ;       Rutinas_de_impresion en IX.
 231+ 8ED8              ;       Puntero_de_impresion en HL.
 232+ 8ED8              ;       Impacto/Dirección en BC.
 233+ 8ED8
 234+ 8ED8 CD 0F 8F     18 call Almacena_disparo
 235+ 8EDB 18 22            jr 6F                                               ; RET.
 236+ 8EDD
 237+ 8EDD              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EDD
 239+ 8EDD 28 11        3 jr z,5F
 240+ 8EDF
 241+ 8EDF              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EDF              ;
 243+ 8EDF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EDF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EDF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EDF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EDF
 248+ 8EDF              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EDF              ;	   ""        ""       "f9", B="1"
 250+ 8EDF              ;	   ""        ""       "fb", B="2"
 251+ 8EDF              ; 	   ""        ""       "fb", B="3"
 252+ 8EDF
 253+ 8EDF 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8EE2 CD E4 95     	call NextScan
 255+ 8EE5
 256+ 8EE5              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EE5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EE5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EE5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EE5
 261+ 8EE5 CD 07 8F         call Ajusta_disparo_parte_izquierda
 262+ 8EE8
 263+ 8EE8              ; 	No se produce impacto. B="$80"
 264+ 8EE8              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EE8
 266+ 8EE8 01 80 80         ld bc,$8080
 267+ 8EEB
 268+ 8EEB              ; 	LLegados a este punto tendremos:
 269+ 8EEB              ;
 270+ 8EEB              ;       Puntero_objeto_disparo en IY.
 271+ 8EEB              ;       Rutinas_de_impresion en IX.
 272+ 8EEB              ;       Puntero_de_impresion en HL.
 273+ 8EEB              ;       Impacto/Dirección en BC.
 274+ 8EEB
 275+ 8EEB CD 0F 8F         call Almacena_disparo
 276+ 8EEE 18 0F            jr 6F                                           ; RET.
 277+ 8EF0
 278+ 8EF0              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8EF0              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8EF0              ;
 281+ 8EF0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8EF0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8EF0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8EF0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8EF0
 286+ 8EF0 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8EF3 CD E4 95     	call NextScan
 288+ 8EF6
 289+ 8EF6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8EF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8EF6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8EF6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8EF6
 294+ 8EF6 CD 00 8F         call Ajusta_disparo_parte_derecha
 295+ 8EF9
 296+ 8EF9              ; 	No se produce impacto. B="$80"
 297+ 8EF9              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8EF9
 299+ 8EF9 01 80 80     15 ld bc,$8080
 300+ 8EFC
 301+ 8EFC              ; 	LLegados a este punto tendremos:
 302+ 8EFC              ;
 303+ 8EFC              ;       Puntero_objeto_disparo en IY.
 304+ 8EFC              ;       Rutinas_de_impresion en IX.
 305+ 8EFC              ;       Puntero_de_impresion en HL.
 306+ 8EFC              ;       Impacto/Dirección en BC.
 307+ 8EFC
 308+ 8EFC CD 0F 8F         call Almacena_disparo
 309+ 8EFF
 310+ 8EFF C9           6 ret
 311+ 8F00
 312+ 8F00              ; ----------------------------------------------------------------
 313+ 8F00              ;
 314+ 8F00              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F00              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F00              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F00
 318+ 8F00 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F01 FE 02            cp 2
 320+ 8F03 38 01            jr c,1F
 321+ 8F05 23               inc hl
 322+ 8F06 C9           1 ret
 323+ 8F07
 324+ 8F07 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F08 FE 01        	cp 1
 326+ 8F0A 20 01        	jr nz,1F
 327+ 8F0C 2B           	dec hl
 328+ 8F0D 2B           1 dec hl
 329+ 8F0E C9               ret
 330+ 8F0F
 331+ 8F0F              ; ----------------------------------------------------------------
 332+ 8F0F              ;
 333+ 8F0F              ;   25/02/23
 334+ 8F0F              ;
 335+ 8F0F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F0F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F0F              ;
 338+ 8F0F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F0F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F0F
 341+ 8F0F              Almacena_disparo
 342+ 8F0F
 343+ 8F0F E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F10 F1               pop af
 345+ 8F11 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F12
 347+ 8F12 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F13 E6 01            and 1
 349+ 8F15 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F17              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F17              ; 	Dispara AMADEUS.
 352+ 8F17
 353+ 8F17              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F17              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F17              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F17              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F17
 358+ 8F17 C5               push bc
 359+ 8F18 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F1B 2A 29 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F1E A7               and a
 362+ 8F1F ED 42            sbc hl,bc
 363+ 8F21 CC FD 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F24 C1               pop bc
 365+ 8F25 28 54            jr z,4F
 366+ 8F27
 367+ 8F27 2A 29 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F2A 23               inc hl
 369+ 8F2B 23               inc hl
 370+ 8F2C 22 29 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F2F              ;                                                   ; _ Disparo_(+1).
 372+ 8F2F 18 18            jr 2F
 373+ 8F31
 374+ 8F31              ; Dispara una entidad.
 375+ 8F31
 376+ 8F31 C5           1 push bc
 377+ 8F32 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F35 2A 27 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F38 A7               and a
 380+ 8F39 ED 42            sbc hl,bc
 381+ 8F3B CC F6 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F3E C1               pop bc
 383+ 8F3F 28 3A            jr z,4F
 384+ 8F41
 385+ 8F41 2A 27 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F44 23               inc hl
 387+ 8F45 23               inc hl
 388+ 8F46 22 27 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F49              ;                                                   ; _ Disparo_(+1).
 390+ 8F49 CD 78 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F4C              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F4C              ;
 393+ 8F4C              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F4C              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F4C              ;                                                     Puntero_de_impresion en HL.
 396+ 8F4C              ;                                                     Impacto/Dirección en BC.
 397+ 8F4C
 398+ 8F4C 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F4D 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F4E 23               inc hl                                          ; _ al siguiente.
 401+ 8F4F A7               and a
 402+ 8F50 20 C0            jr nz,3B
 403+ 8F52
 404+ 8F52 08               ex af,af
 405+ 8F53 ED 73 17 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F57 F9               ld sp,hl
 407+ 8F58
 408+ 8F58 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F5A F5               push af                                         ; Puntero de impresión.
 410+ 8F5B FD E5            push iy                                         ; Puntero objeto.
 411+ 8F5D C5               push bc                                         ; Control.
 412+ 8F5E
 413+ 8F5E ED 7B 17 89      ld sp,(Stack)
 414+ 8F62
 415+ 8F62              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F62
 417+ 8F62 21 06 89     	ld hl,Ctrl_1
 418+ 8F65 CB C6        	set 0,(hl)
 419+ 8F67
 420+ 8F67 DD E5        	push ix
 421+ 8F69 E1               pop hl
 422+ 8F6A F5               push af
 423+ 8F6B DD E1            pop ix
 424+ 8F6D
 425+ 8F6D CD A0 7F     	call Guarda_foto_registros
 426+ 8F70
 427+ 8F70 21 06 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F73 CB 86        	res 0,(hl)
 429+ 8F75
 430+ 8F75              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F75              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F75
 433+ 8F75 CD FD 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F78 CD F6 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F7B
 436+ 8F7B C9           4 ret
 437+ 8F7C
 438+ 8F7C              ; ----------------------------------------------------------------
 439+ 8F7C              ;
 440+ 8F7C              ;   4/3/23
 441+ 8F7C              ;
 442+ 8F7C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F7C              ;   _ al generarse el disparo.
 444+ 8F7C              ;
 445+ 8F7C              ;       "$80" ..... No se produce colisión.
 446+ 8F7C              ;       "$81" ..... Se produce colisión.
 447+ 8F7C              ;
 448+ 8F7C              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F7C              ;         _ que forman el disparo.
 450+ 8F7C
 451+ 8F7C
 452+ 8F7C              Comprueba_Colision
 453+ 8F7C
 454+ 8F7C              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F7C
 456+ 8F7C FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F7E E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F7F
 459+ 8F7F CD B5 8F         call Modifica_H_Velocidad_disparo
 460+ 8F82
 461+ 8F82 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F83 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F85 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F87
 465+ 8F87 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F89 CD A5 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F8C
 468+ 8F8C 7B               ld a,e
 469+ 8F8D E6 01            and 1
 470+ 8F8F 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F91              ;                                                  ; _ para activar IMPACTO.
 472+ 8F91 E1               pop hl
 473+ 8F92 E5               push hl
 474+ 8F93 CD E4 95         call NextScan
 475+ 8F96
 476+ 8F96 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F97 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F99 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F9B              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F9B 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F9D CD A5 8F         call Bucle_2
 482+ 8FA0
 483+ 8FA0 43           1 ld b,e
 484+ 8FA1 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FA2 FD E1            pop iy
 486+ 8FA4 C9               ret
 487+ 8FA5
 488+ 8FA5              ; ---------- ----------
 489+ 8FA5
 490+ 8FA5 06 02        Bucle_2 ld b,2
 491+ 8FA7 FD 7E 00     2 ld a,(iy)
 492+ 8FAA A6               and (hl)
 493+ 8FAB 28 02            jr z,1F
 494+ 8FAD 1E 81            ld e,$81
 495+ 8FAF 23           1 inc hl
 496+ 8FB0 FD 23            inc iy
 497+ 8FB2 10 F3            djnz 2B
 498+ 8FB4 C9               ret
 499+ 8FB5
 500+ 8FB5              ; ---------- ----------
 501+ 8FB5              ;
 502+ 8FB5              ;   21/7/23
 503+ 8FB5
 504+ 8FB5              Modifica_H_Velocidad_disparo
 505+ 8FB5
 506+ 8FB5 3A 36 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FB8 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FBA D0               ret nc                                         ; _ incrementamos H.
 509+ 8FBB 24               inc h
 510+ 8FBC
 511+ 8FBC C9               ret
 512+ 8FBD
 513+ 8FBD              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FBD              ;
 515+ 8FBD              ;   04/12/23
 516+ 8FBD              ;
 517+ 8FBD              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FBD              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FBD              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FBD              ;
 521+ 8FBD              ;   MODIFICA: HL,DE,B y A.
 522+ 8FBD
 523+ 8FBD              Genera_coordenadas_X
 524+ 8FBD
 525+ 8FBD              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FBD              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FBD
 528+ 8FBD              ;   Limpiamos almacenes.
 529+ 8FBD
 530+ 8FBD CD EE 8F         call Limpia_Coordenadas_X
 531+ 8FC0
 532+ 8FC0              ;   Almacenamos coordenadas X.
 533+ 8FC0
 534+ 8FC0              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8FC0
 536+ 8FC0 2A EF 88         ld hl,(Puntero_de_impresion)
 537+ 8FC3 11 33 89         ld de,Coordenadas_X_Entidad
 538+ 8FC6 06 02            ld b,2
 539+ 8FC8
 540+ 8FC8 3A CD 88         ld a,(CTRL_DESPLZ)
 541+ 8FCB A7               and a
 542+ 8FCC 28 01            jr z,1F
 543+ 8FCE 04               inc b
 544+ 8FCF
 545+ 8FCF CD E5 8F     1 call Guarda_coordenadas_X
 546+ 8FD2
 547+ 8FD2              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8FD2
 549+ 8FD2 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 8FD5 11 30 89         ld de,Coordenadas_X_Amadeus
 551+ 8FD8 06 02            ld b,2
 552+ 8FDA
 553+ 8FDA 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 8FDD A7               and a
 555+ 8FDE 28 01            jr z,2F
 556+ 8FE0 04               inc b
 557+ 8FE1
 558+ 8FE1 CD E5 8F     2 call Guarda_coordenadas_X
 559+ 8FE4
 560+ 8FE4              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8FE4
 562+ 8FE4 C9               ret
 563+ 8FE5
 564+ 8FE5              ; ----- ----- ----- ----- -----
 565+ 8FE5
 566+ 8FE5 7D           Guarda_coordenadas_X  ld a,l
 567+ 8FE6 E6 1F            and $1f
 568+ 8FE8 12           1 ld (de),a
 569+ 8FE9 3C               inc a
 570+ 8FEA 13               inc de
 571+ 8FEB 10 FB            djnz 1B
 572+ 8FED C9               ret
 573+ 8FEE
 574+ 8FEE AF           Limpia_Coordenadas_X xor a
 575+ 8FEF 06 06            ld b,6
 576+ 8FF1 21 30 89         ld hl,Coordenadas_X_Amadeus
 577+ 8FF4 77           1 ld (hl),a
 578+ 8FF5 23               inc hl
 579+ 8FF6 10 FC            djnz 1B
 580+ 8FF8 C9               ret
 581+ 8FF9
 582+ 8FF9              ; ----- ----- ----- ----- -----
 583+ 8FF9
 584+ 8FF9              Compara_coordenadas_X
 585+ 8FF9
 586+ 8FF9 06 03            ld b,3
 587+ 8FFB 11 35 89         ld de,Coordenadas_X_Entidad+2
 588+ 8FFE
 589+ 8FFE 1A               ld a,(de)
 590+ 8FFF A7               and a
 591+ 9000 20 01            jr nz,2F
 592+ 9002 05               dec b
 593+ 9003
 594+ 9003 1B           2 dec de
 595+ 9004 1B               dec de
 596+ 9005 21 30 89         ld hl,Coordenadas_X_Amadeus
 597+ 9008
 598+ 9008 D5           1 push de
 599+ 9009 E5               push hl
 600+ 900A C5               push bc
 601+ 900B
 602+ 900B CD 15 90         call Comparando
 603+ 900E
 604+ 900E C1               pop bc
 605+ 900F E1               pop hl
 606+ 9010 D1               pop de
 607+ 9011
 608+ 9011 13               inc de
 609+ 9012 10 F4            djnz 1B
 610+ 9014
 611+ 9014 C9               ret
 612+ 9015
 613+ 9015              ; ----- ----- ----- ----- -----
 614+ 9015              ;
 615+ 9015              ;   4/12/23
 616+ 9015              ;
 617+ 9015              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9015
 619+ 9015 06 03        Comparando ld b,3
 620+ 9017 1A               ld a,(de)
 621+ 9018 4E           2 ld c,(hl)
 622+ 9019 B9               cp c
 623+ 901A 28 04            jr z,1F
 624+ 901C 23               inc hl
 625+ 901D 10 F9            djnz 2B
 626+ 901F C9               ret
 627+ 9020
 628+ 9020 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9022 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9025 21 2B 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9028 CB D6            set 2,(hl)
 632+ 902A C9               ret
 633+ 902B
 634+ 902B              ; -----------------------------------------------------------------------
 635+ 902B              ;
 636+ 902B              ;   7/12/23
 637+ 902B              ;
 638+ 902B
 639+ 902B              Detecta_colision_nave_entidad
 640+ 902B
 641+ 902B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 902B
 643+ 902B FD 2A C9 88      ld iy,(Puntero_objeto)
 644+ 902F 2A EF 88         ld hl,(Puntero_de_impresion)
 645+ 9032
 646+ 9032 E5               push hl
 647+ 9033
 648+ 9033              ; ----- ----- -----
 649+ 9033 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9035 06 0A            ld b,10
 651+ 9037 CD 67 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 903A 7B               ld a,e
 653+ 903B FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 903D 38 0E            jr c,3F
 655+ 903F
 656+ 903F              ; LLegados a este punto:
 657+ 903F              ;
 658+ 903F              ;   HAY COLISIÓN !!!!!.
 659+ 903F              ;
 660+ 903F              ;   .db (Impacto) de Amadeus a "1".
 661+ 903F              ;   SET el bit3 de (Impacto2).
 662+ 903F              ;
 663+ 903F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 903F
 665+ 903F 21 DE 88         ld hl,Impacto
 666+ 9042 36 01            ld (hl),1
 667+ 9044 21 2B 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9047 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9049 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 904B
 671+ 904B 18 18            jr 1F
 672+ 904D
 673+ 904D              ; -----
 674+ 904D
 675+ 904D E1           3 pop hl
 676+ 904E CD E4 95         call NextScan
 677+ 9051 E5               push hl
 678+ 9052 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9053 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9055 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9057 30 0C            jr nc,1F
 682+ 9059              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9059 10 DC            djnz 2B
 684+ 905B
 685+ 905B              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 905B
 687+ 905B              ; LLegados a este punto:
 688+ 905B              ;
 689+ 905B              ;   NO HAY COLISIÓN !!!!!.
 690+ 905B              ;
 691+ 905B              ;   .db (Impacto) de Amadeus a "0".
 692+ 905B              ;   RES el bit2 de (Impacto2).
 693+ 905B              ;
 694+ 905B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 905B              ;   Lo colocamos a "0".
 696+ 905B
 697+ 905B 21 2B 89         ld hl,Impacto2
 698+ 905E CB 96            res 2,(hl)
 699+ 9060 2A 2C 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9063 36 00            ld (hl),0
 701+ 9065
 702+ 9065 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9066 C9               ret
 704+ 9067
 705+ 9067               ; ---------- ----------
 706+ 9067
 707+ 9067 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9068 3A C6 88         ld a,(Columns)
 709+ 906B 47               ld b,a
 710+ 906C FD 7E 00     2 ld a,(iy)
 711+ 906F BE               cp (hl)
 712+ 9070 28 01            jr z,1F
 713+ 9072
 714+ 9072 1C               inc e
 715+ 9073
 716+ 9073 23           1 inc hl
 717+ 9074 FD 23            inc iy
 718+ 9076 10 F4            djnz 2B
 719+ 9078 C1               pop bc
 720+ 9079 C9               ret
 721+ 907A
 722+ 907A              ; -------------------------------------------------------------------------------------------------------------
 723+ 907A              ;
 724+ 907A              ;   13/03/23
 725+ 907A              ;
 726+ 907A              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 907A              ;
 728+ 907A              ;   DESTRUYE: HL,BC,DE y A.
 729+ 907A
 730+ 907A 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 907D 7E               ld a,(hl)
 732+ 907E A7               and a
 733+ 907F C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9080
 735+ 9080 44               ld b,h
 736+ 9081 4D               ld c,l
 737+ 9082 2A 1F 89         ld hl,(Stack_snapshot_disparos)
 738+ 9085 E5               push hl
 739+ 9086 A7               and a
 740+ 9087 ED 42            sbc hl,bc
 741+ 9089 E5               push hl
 742+ 908A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 908B
 744+ 908B E1               pop hl
 745+ 908C 54               ld d,h
 746+ 908D 5D               ld e,l
 747+ 908E 1B               dec de
 748+ 908F ED B8            lddr                                                ; Limpiamos.
 749+ 9091
 750+ 9091 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9094 22 1F 89         ld (Stack_snapshot_disparos),hl
 752+ 9097
 753+ 9097 C9               ret
 754+ 9098
 755+ 9098              ; -------------------------------------------------------------------------------------------------------------
 756+ 9098              ;
 757+ 9098              ;   18/07/23
 758+ 9098              ;
 759+ 9098
 760+ 9098              Motor_de_disparos
 761+ 9098
 762+ 9098              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9098
 764+ 9098 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 909B 2A 29 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 909E
 767+ 909E CD 78 8C     2 call Extrae_address
 768+ 90A1 7E               ld a,(hl)
 769+ 90A2 A7               and a
 770+ 90A3 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 90A5
 772+ 90A5              ; ----- ----- ----- ----- ----- -----
 773+ 90A5
 774+ 90A5 C5               push bc
 775+ 90A6 CD 6A 91         call foto_disparo_a_borrar
 776+ 90A9
 777+ 90A9              ; Existe colisión con este disparo???
 778+ 90A9
 779+ 90A9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 90AA 7E               ld a,(hl)
 781+ 90AB 2B               dec hl
 782+ 90AC E6 01            and 1
 783+ 90AE 28 1D            jr z,9F
 784+ 90B0
 785+ 90B0              ;   En este punto:
 786+ 90B0              ;
 787+ 90B0              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 90B0              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 90B0              ;   _con la entidad).
 790+ 90B0              ;
 791+ 90B0              ;   Disparo_2A defw 0                                ; Control.
 792+ 90B0              ;    defw 0                                          ; Puntero objeto.
 793+ 90B0              ;    defw 0                                          ; Puntero de impresión.
 794+ 90B0              ;    defw 0                                          ; Rutina de impresión.
 795+ 90B0
 796+ 90B0 E5               push hl
 797+ 90B1
 798+ 90B1 06 04            ld b,4
 799+ 90B3 23           19 inc hl
 800+ 90B4 10 FD            djnz 19B
 801+ 90B6
 802+ 90B6 CD 78 8C         call Extrae_address
 803+ 90B9 CD AD 9C         call Genera_coordenadas_disparo
 804+ 90BC
 805+ 90BC              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 90BC
 807+ 90BC 21 2E 89         ld hl,Coordenadas_disparo_certero
 808+ 90BF 72               ld (hl),d
 809+ 90C0 23               inc hl
 810+ 90C1 73               ld (hl),e
 811+ 90C2
 812+ 90C2              ; Elimino el disparo de la base de datos.
 813+ 90C2
 814+ 90C2 E1               pop hl
 815+ 90C3 CD E9 91         call Elimina_disparo_de_base_de_datos
 816+ 90C6 21 2B 89         ld hl,Impacto2
 817+ 90C9 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 90CB
 819+ 90CB 18 06            jr 11F
 820+ 90CD
 821+ 90CD CD 93 91     9 call Mueve_disparo
 822+ 90D0 CD 6A 91         call foto_disparo_a_borrar
 823+ 90D3
 824+ 90D3 C1           11 pop bc
 825+ 90D4 18 04            jr 7F
 826+ 90D6
 827+ 90D6              ; ----- ----- ----- ----- ----- -----
 828+ 90D6
 829+ 90D6 ED 42        1 sbc hl,bc
 830+ 90D8 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 90DA
 832+ 90DA 2A 29 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 90DD 23               inc hl
 834+ 90DE 23               inc hl
 835+ 90DF 22 29 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 90E2 18 BA            jr 2B
 837+ 90E4
 838+ 90E4 CD FD 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 90E7              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 90E7
 841+ 90E7              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 90E7
 843+ 90E7 01 6A 85         ld bc,Disparo_11
 844+ 90EA 2A 27 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 90ED
 846+ 90ED CD 78 8C     5 call Extrae_address
 847+ 90F0 7E               ld a,(hl)
 848+ 90F1 A7               and a
 849+ 90F2 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 90F4
 851+ 90F4              ; ----- ----- ----- ----- ----- -----
 852+ 90F4
 853+ 90F4 C5               push bc
 854+ 90F5 CD 6A 91         call foto_disparo_a_borrar
 855+ 90F8
 856+ 90F8              ; Existe colisión con este disparo???
 857+ 90F8
 858+ 90F8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 90F9 7E               ld a,(hl)
 860+ 90FA 2B               dec hl
 861+ 90FB E6 01            and 1
 862+ 90FD 28 4D            jr z,10F
 863+ 90FF
 864+ 90FF              ;! La colisión se produce con Amadeus???
 865+ 90FF              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 90FF
 867+ 90FF E5               push hl
 868+ 9100
 869+ 9100 06 04            ld b,4
 870+ 9102 23           16 inc hl
 871+ 9103 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9105
 873+ 9105 CD 78 8C         call Extrae_address
 874+ 9108 CD AD 9C         call Genera_coordenadas_disparo
 875+ 910B
 876+ 910B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 910C FE 16            cp $16
 878+ 910E 38 2A            jr c,15F
 879+ 9110
 880+ 9110
 881+ 9110              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9110
 883+ 9110 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9111
 885+ 9111              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9111
 887+ 9111 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 9114
 889+ 9114              ; Coordenada X de Amadeus en D.
 890+ 9114
 891+ 9114 7D               ld a,l
 892+ 9115 E6 1F            and $1F
 893+ 9117 57               ld d,a
 894+ 9118
 895+ 9118 21 86 85         ld hl,Amadeus_db+8
 896+ 911B 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 911C
 898+ 911C 21 30 89         ld hl,Coordenadas_X_Amadeus
 899+ 911F CD E5 8F         call Guarda_coordenadas_X
 900+ 9122
 901+ 9122 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9123
 903+ 9123              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9123
 905+ 9123 06 02            ld b,2
 906+ 9125 C5           20 push bc
 907+ 9126
 908+ 9126 06 03            ld b,3
 909+ 9128 21 30 89         ld hl,Coordenadas_X_Amadeus
 910+ 912B 7E           18 ld a,(hl)
 911+ 912C BA               cp d
 912+ 912D 20 04            jr nz,17F
 913+ 912F
 914+ 912F              ;! Colisión Amadeus !!!!!!!!!!
 915+ 912F
 916+ 912F C1               pop bc
 917+ 9130 E1               pop hl
 918+ 9131 18 0D            jr 14F
 919+ 9133
 920+ 9133 23           17 inc hl
 921+ 9134 10 F5            djnz 18B
 922+ 9136
 923+ 9136 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9137
 925+ 9137 C1               pop bc
 926+ 9138 10 EB            djnz 20B
 927+ 913A
 928+ 913A
 929+ 913A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 913A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 913A
 932+ 913A E1           15 pop hl
 933+ 913B 23               inc hl
 934+ 913C 35               dec (hl)
 935+ 913D 2B               dec hl
 936+ 913E 18 0C            jr 10F
 937+ 9140
 938+ 9140              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9140              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9140
 941+ 9140 E5           14 push hl
 942+ 9141 CD E9 91         call Elimina_disparo_de_base_de_datos
 943+ 9144 21 2B 89         ld hl,Impacto2
 944+ 9147 CB CE            set 1,(hl)
 945+ 9149 E1               pop hl
 946+ 914A 18 06            jr 12F
 947+ 914C
 948+ 914C              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 914C
 950+ 914C CD 93 91     10 call Mueve_disparo
 951+ 914F CD 6A 91         call foto_disparo_a_borrar
 952+ 9152 C1           12 pop bc
 953+ 9153
 954+ 9153 18 04            jr 8F
 955+ 9155
 956+ 9155              ; ----- ----- ----- ----- ----- -----
 957+ 9155
 958+ 9155 ED 42        4 sbc hl,bc
 959+ 9157 28 0A            jr z,6F
 960+ 9159
 961+ 9159 2A 27 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 915C 23               inc hl
 963+ 915D 23               inc hl
 964+ 915E 22 27 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9161 18 8A            jr 5B
 966+ 9163
 967+ 9163 CD F6 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9166 CD EE 8F         call Limpia_Coordenadas_X
 969+ 9169 C9               ret
 970+ 916A
 971+ 916A              ; ------------------------------------------------------------------
 972+ 916A
 973+ 916A              foto_disparo_a_borrar
 974+ 916A
 975+ 916A 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 916B A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 916C C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 916D
 979+ 916D E5               push hl
 980+ 916E 23               inc hl
 981+ 916F 23               inc hl
 982+ 9170 ED 73 17 89      ld (Stack),sp
 983+ 9174 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9175 FD E1            pop iy
 985+ 9177 DD E1            pop ix
 986+ 9179 E1               pop hl
 987+ 917A ED 7B 17 89      ld sp,(Stack)
 988+ 917E 3A 06 89         ld a,(Ctrl_1)
 989+ 9181 CB C7            set 0,a
 990+ 9183 32 06 89         ld (Ctrl_1),a
 991+ 9186 CD A0 7F         call Guarda_foto_registros
 992+ 9189 3A 06 89         ld a,(Ctrl_1)
 993+ 918C CB 87            res 0,a
 994+ 918E 32 06 89         ld (Ctrl_1),a
 995+ 9191 E1               pop hl
 996+ 9192 C9               ret
 997+ 9193
 998+ 9193              ;---------------------------------------------------
 999+ 9193              ;
1000+ 9193              ;   18/07/23
1001+ 9193              ;
1002+ 9193
1003+ 9193              Mueve_disparo
1004+ 9193
1005+ 9193              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9193              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9193              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9193
1009+ 9193 E5               push hl
1010+ 9194
1011+ 9194 7E               ld a,(hl)
1012+ 9195
1013+ 9195 06 04            ld b,4
1014+ 9197 23           1 inc hl
1015+ 9198 10 FD            djnz 1B
1016+ 919A
1017+ 919A              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 919A
1019+ 919A CD 78 8C         call Extrae_address
1020+ 919D
1021+ 919D E6 01            and 1
1022+ 919F 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 91A1
1024+ 91A1              ; Disparo hacia arriba, (Amadeus).
1025+ 91A1
1026+ 91A1              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 91A1              ; _ de la dificultad.
1028+ 91A1
1029+ 91A1 CD F3 95         call PreviousScan
1030+ 91A4 CD F3 95         call PreviousScan
1031+ 91A7 CD F3 95         call PreviousScan
1032+ 91AA CD F3 95         call PreviousScan
1033+ 91AD
1034+ 91AD              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 91AD
1036+ 91AD 7C               ld a,h
1037+ 91AE FE 40            cp $40
1038+ 91B0 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 91B2
1040+ 91B2              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 91B2
1042+ 91B2 EB               ex de,hl
1043+ 91B3 06 04            ld b,4
1044+ 91B5 2B           6 dec hl
1045+ 91B6 10 FD            djnz 6B
1046+ 91B8
1047+ 91B8 CD E9 91         call Elimina_disparo_de_base_de_datos
1048+ 91BB E1               pop hl
1049+ 91BC 18 10            jr 7F
1050+ 91BE
1051+ 91BE              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 91BE              ; HL contiene el puntero de impresión del disparo.
1053+ 91BE              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 91BE
1055+ 91BE D5           3 push de
1056+ 91BF C5               push bc
1057+ 91C0
1058+ 91C0 CD 7C 8F         call Comprueba_Colision
1059+ 91C3
1060+ 91C3              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 91C3
1062+ 91C3 78               ld a,b
1063+ 91C4
1064+ 91C4 C1               pop bc
1065+ 91C5 D1               pop de
1066+ 91C6
1067+ 91C6 EB               ex de,hl
1068+ 91C7
1069+ 91C7 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 91C8 23               inc hl                                      ; _ movimiento.
1071+ 91C9 72               ld (hl),d
1072+ 91CA
1073+ 91CA E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 91CB
1075+ 91CB 23               inc hl                                      ; _ en curso.
1076+ 91CC 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 91CD 2B               dec hl
1078+ 91CE
1079+ 91CE C9           7 ret
1080+ 91CF
1081+ 91CF              ; Disparo hacia abajo, (Entidad).
1082+ 91CF
1083+ 91CF 3A 36 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 91D2 47               ld b,a
1085+ 91D3
1086+ 91D3 CD E4 95     4 call NextScan
1087+ 91D6 10 FB            djnz 4B
1088+ 91D8
1089+ 91D8              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 91D8
1091+ 91D8 7C               ld a,h
1092+ 91D9 FE 58            cp $58
1093+ 91DB 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 91DD
1095+ 91DD EB               ex de,hl
1096+ 91DE 06 04            ld b,4
1097+ 91E0 2B           5 dec hl
1098+ 91E1 10 FD            djnz 5B
1099+ 91E3
1100+ 91E3 CD E9 91         call Elimina_disparo_de_base_de_datos
1101+ 91E6 E1               pop hl
1102+ 91E7 18 E5            jr 7B
1103+ 91E9
1104+ 91E9              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 91E9
1106+ 91E9 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 91EC AF               xor a
1108+ 91ED 77               ld (hl),a
1109+ 91EE 54               ld d,h
1110+ 91EF 5D               ld e,l
1111+ 91F0 13               inc de
1112+ 91F1 ED B0            ldir
1113+ 91F3 C9               ret
1114+ 91F4
1115+ 91F4              ; -----------------------------------------------------------------
1116+ 91F4              ;
1117+ 91F4              ;   7/12/23
1118+ 91F4              ;
1119+ 91F4
1120+ 91F4 3A 2B 89     Selector_de_impactos ld a,(Impacto2)
1121+ 91F7 A7               and a
1122+ 91F8 C8               ret z
1123+ 91F9
1124+ 91F9              ; Analizamos si hay impacto por disparos.
1125+ 91F9
1126+ 91F9              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 91F9
1128+ 91F9 CB 4F            bit 1,a
1129+ 91FB 28 07            jr z,1F
1130+ 91FD
1131+ 91FD 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9200 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9202 18 08            jr 2F
1134+ 9204
1135+ 9204 CB 47        1 bit 0,a
1136+ 9206 C8               ret z
1137+ 9207
1138+ 9207              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9207
1140+ 9207 21 06 89         ld hl,Ctrl_1
1141+ 920A CB D6            set 2,(hl)
1142+ 920C
1143+ 920C C9           2 ret
1144+ 920D
1145+ 920D              ; -----------------------------------------------------------------
1146+ 920D              ;
1147+ 920D              ;   25/04/23
1148+ 920D              ;
1149+ 920D
1150+ 920D              Determina_resultado_comparativa
1151+ 920D
1152+ 920D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 920D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 920D              ;
1155+ 920D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 920D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 920D              ;
1158+ 920D              ;   SBC HL,DE
1159+ 920D
1160+ 920D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 920D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 920D
1163+ 920D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 920D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 920D
1166+ 920D
1167+ 920D 3A D9 88         ld a,(Cuad_objeto)
1168+ 9210 FE 02            cp 2
1169+ 9212 28 26            jr z,2F
1170+ 9214 38 24            jr c,2F
1171+ 9216
1172+ 9216              ; Cuadrantes 3º y 4º
1173+ 9216
1174+ 9216 E6 01            and 1
1175+ 9218 28 10            jr z,4F
1176+ 921A
1177+ 921A              ; Cuadrante 3º
1178+ 921A
1179+ 921A 7C               ld a,h
1180+ 921B 06 00            ld b,0
1181+ 921D
1182+ 921D CD A8 92         call Compara_cositas_H3
1183+ 9220
1184+ 9220 04               inc b
1185+ 9221 05               dec b
1186+ 9222 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9223
1188+ 9223 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9224 06 00            ld b,0
1190+ 9226
1191+ 9226 CD BA 92         call Compara_cositas_L3
1192+ 9229 C9               ret
1193+ 922A
1194+ 922A              ; Cuadrante 4º
1195+ 922A
1196+ 922A 7C           4 ld a,h
1197+ 922B 06 00            ld b,0
1198+ 922D
1199+ 922D CD CC 92         call Compara_cositas_H4
1200+ 9230
1201+ 9230 04               inc b
1202+ 9231 05               dec b
1203+ 9232 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9233
1205+ 9233 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9234 06 00            ld b,0
1207+ 9236
1208+ 9236 CD E2 92         call Compara_cositas_L4
1209+ 9239 C9               ret
1210+ 923A
1211+ 923A              ; Cuadrantes 1º y 2º.
1212+ 923A
1213+ 923A 28 10        2 jr z,3F
1214+ 923C
1215+ 923C              ; 1er Cuadrante
1216+ 923C
1217+ 923C 7C               ld a,h
1218+ 923D 06 00            ld b,0
1219+ 923F
1220+ 923F CD 80 92         call Compara_cositas_H1
1221+ 9242
1222+ 9242 04               inc b
1223+ 9243 05               dec b
1224+ 9244 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9245
1226+ 9245 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9246 06 00            ld b,0
1228+ 9248
1229+ 9248 CD 96 92         call Compara_cositas_L1
1230+ 924B C9               ret
1231+ 924C
1232+ 924C
1233+ 924C              ; 2º Cuadrante
1234+ 924C
1235+ 924C 7C           3 ld a,h
1236+ 924D 06 00            ld b,0
1237+ 924F
1238+ 924F CD 5C 92         call Compara_cositas_H2
1239+ 9252
1240+ 9252 04               inc b
1241+ 9253 05               dec b
1242+ 9254 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9255
1244+ 9255 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9256 06 00            ld b,0
1246+ 9258
1247+ 9258 CD 6E 92         call Compara_cositas_L2
1248+ 925B C9               ret
1249+ 925C
1250+ 925C A7           Compara_cositas_H2 and a
1251+ 925D 28 0D            jr z,1F
1252+ 925F              ;    cp $fd
1253+ 925F              ;    jr z,1F
1254+ 925F              ;    cp $fe
1255+ 925F              ;    jr z,1F
1256+ 925F FE FF            cp $ff
1257+ 9261 28 09            jr z,1F
1258+ 9263 FE 01            cp $01
1259+ 9265 28 05            jr z,1F
1260+ 9267 FE 02            cp $02
1261+ 9269 28 01            jr z,1F
1262+ 926B C0               ret nz
1263+ 926C 04           1 inc b
1264+ 926D C9               ret
1265+ 926E
1266+ 926E A7           Compara_cositas_L2 and a
1267+ 926F 28 0D            jr z,1F
1268+ 9271              ;    cp $fd
1269+ 9271              ;    jr z,1F
1270+ 9271 FE FE            cp $fe
1271+ 9273 28 09            jr z,1F
1272+ 9275 FE FF            cp $ff
1273+ 9277 28 05            jr z,1F
1274+ 9279 FE 01            cp $01
1275+ 927B 28 01            jr z,1F
1276+ 927D              ;    cp $02
1277+ 927D              ;    jr z,1F
1278+ 927D C0               ret nz
1279+ 927E 04           1 inc b
1280+ 927F C9               ret
1281+ 9280
1282+ 9280 A7           Compara_cositas_H1 and a
1283+ 9281 28 11            jr z,1F
1284+ 9283              ;    cp $fd
1285+ 9283              ;    jr z,1F
1286+ 9283              ;    cp $fe
1287+ 9283              ;    jr z,1F
1288+ 9283 FE FF            cp $ff
1289+ 9285 28 0D            jr z,1F
1290+ 9287 FE 01            cp $01
1291+ 9289 28 09            jr z,1F
1292+ 928B FE 02            cp $02
1293+ 928D 28 05            jr z,1F
1294+ 928F FE 03            cp $03
1295+ 9291 28 01            jr z,1F
1296+ 9293 C0               ret nz
1297+ 9294 04           1 inc b
1298+ 9295 C9               ret
1299+ 9296
1300+ 9296 A7           Compara_cositas_L1 and a
1301+ 9297 28 0D            jr z,1F
1302+ 9299              ;    cp $fd
1303+ 9299              ;    jr z,1F
1304+ 9299              ;    cp $fe
1305+ 9299              ;    jr z,1F
1306+ 9299              ;    cp $ff
1307+ 9299              ;    jr z,1F
1308+ 9299 FE 01            cp $01
1309+ 929B 28 09            jr z,1F
1310+ 929D FE 02            cp $02
1311+ 929F 28 05            jr z,1F
1312+ 92A1 FE 03            cp $03
1313+ 92A3 28 01            jr z,1F
1314+ 92A5 C0               ret nz
1315+ 92A6 04           1 inc b
1316+ 92A7 C9               ret
1317+ 92A8
1318+ 92A8 A7           Compara_cositas_H3 and a
1319+ 92A9 28 0D            jr z,1F
1320+ 92AB              ;    cp $fd
1321+ 92AB              ;    jr z,1F
1322+ 92AB FE FE            cp $fe
1323+ 92AD 28 09            jr z,1F
1324+ 92AF FE FF            cp $ff
1325+ 92B1 28 05            jr z,1F
1326+ 92B3 FE 01            cp $01
1327+ 92B5 28 01            jr z,1F
1328+ 92B7              ;    cp $02
1329+ 92B7              ;    jr z,1F
1330+ 92B7              ;    cp $03
1331+ 92B7              ;    jr z,1F
1332+ 92B7 C0               ret nz
1333+ 92B8 04           1 inc b
1334+ 92B9 C9               ret
1335+ 92BA
1336+ 92BA A7           Compara_cositas_L3 and a
1337+ 92BB 28 0D            jr z,1F
1338+ 92BD              ;    cp $fd
1339+ 92BD              ;    jr z,1F
1340+ 92BD              ;    cp $fe
1341+ 92BD              ;    jr z,1F
1342+ 92BD              ;    cp $ff
1343+ 92BD              ;    jr z,1F
1344+ 92BD FE 01            cp $01
1345+ 92BF 28 09            jr z,1F
1346+ 92C1 FE 02            cp $02
1347+ 92C3 28 05            jr z,1F
1348+ 92C5 FE 03            cp $03
1349+ 92C7 28 01            jr z,1F
1350+ 92C9 C0               ret nz
1351+ 92CA 04           1 inc b
1352+ 92CB C9               ret
1353+ 92CC
1354+ 92CC A7           Compara_cositas_H4 and a
1355+ 92CD 28 11            jr z,1F
1356+ 92CF FE FD            cp $fd
1357+ 92D1 28 0D            jr z,1F
1358+ 92D3 FE FE            cp $fe
1359+ 92D5 28 09            jr z,1F
1360+ 92D7 FE FF            cp $ff
1361+ 92D9 28 05            jr z,1F
1362+ 92DB FE 01            cp $01
1363+ 92DD 28 01            jr z,1F
1364+ 92DF              ;    cp $02
1365+ 92DF              ;    jr z,1F
1366+ 92DF              ;    cp $03
1367+ 92DF              ;    jr z,1F
1368+ 92DF C0               ret nz
1369+ 92E0 04           1 inc b
1370+ 92E1 C9               ret
1371+ 92E2
1372+ 92E2 A7           Compara_cositas_L4 and a
1373+ 92E3 28 0D            jr z,1F
1374+ 92E5              ;    cp $fd
1375+ 92E5              ;    jr z,1F
1376+ 92E5 FE FE            cp $fe
1377+ 92E7 28 09            jr z,1F
1378+ 92E9 FE FF            cp $ff
1379+ 92EB 28 05            jr z,1F
1380+ 92ED FE 01            cp $01
1381+ 92EF 28 01            jr z,1F
1382+ 92F1              ;    cp $02
1383+ 92F1              ;    jr z,1F
1384+ 92F1              ;    cp $03
1385+ 92F1              ;    jr z,1F
1386+ 92F1 C0               ret nz
1387+ 92F2 04           1 inc b
1388+ 92F3 C9               ret
# file closed: Disparo.asm
1637  92F4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92F4              ; ******************************************************************************************************************************************************************************************
   2+ 92F4              ;
   3+ 92F4              ; 26/06/23
   4+ 92F4              ;
   5+ 92F4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92F4
   7+ 92F4 CD D8 95     Draw call Prepara_draw
   8+ 92F7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92F8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92F9 28 05        	jr z,2F
  11+ 92FB
  12+ 92FB 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92FE 18 0C        	jr 1F
  14+ 9300
  15+ 9300 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9303 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9306 CD 95 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9309              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9309 CD 38 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 930C
  21+ 930C 3A F3 88     1 ld a,(Ctrl_0)
  22+ 930F CB 6F        	bit 5,a
  23+ 9311 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9313
  25+ 9313 CD 2B 93     	call Comprueba_limite_horizontal
  26+ 9316 CD BB 93     	call Comprueba_limite_vertical
  27+ 9319
  28+ 9319              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9319              ; -----------------------
  30+ 9319              ; -----------------------
  31+ 9319              ; -----------------------
  32+ 9319
  33+ 9319 CD 08 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 931C CD 3F 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 931F CD 9E 95     	call Define_rutina_de_impresion
  36+ 9322
  37+ 9322 3A F3 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9325 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9327 32 F3 88     	ld (Ctrl_0),a
  40+ 932A
  41+ 932A C9           	ret
  42+ 932B
  43+ 932B              ; *******************************************************************************************************************************************************************************************
  44+ 932B              ;	21/01/23
  45+ 932B              ;
  46+ 932B              ; 	Comprueba_limite_horizontal.
  47+ 932B              ;
  48+ 932B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 932B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 932B              ;
  51+ 932B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 932B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 932B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 932B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 932B
  56+ 932B
  57+ 932B
  58+ 932B 3A F3 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 932E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9330 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9332 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9334 32 F3 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9337 18 09            jr 6F
  64+ 9339 CB 5F        1 bit 3,a
  65+ 933B 28 0A            jr z,2F
  66+ 933D E6 F7            and $f7
  67+ 933F 32 F3 88         ld (Ctrl_0),a
  68+ 9342 CD 95 94     6 call Inicializacion
  69+ 9345 18 5B            jr 5F
  70+ 9347 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9348
  72+ 9348              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9348              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9348
  75+ 9348 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9349 2A 01 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 934C CD F7 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 934F 67           	ld h,a
  79+ 9350 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9351 CD F7 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9354 67           	ld h,a
  82+ 9355 A7           	and a
  83+ 9356 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9358 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9359 3A D9 88     	ld a,(Cuad_objeto)
  86+ 935C FE 02        	cp 2
  87+ 935E 38 1E        	jr c,3F
  88+ 9360 28 1C        	jr z,3F
  89+ 9362 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9363 28 23            jr z,7F
  91+ 9365 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9367 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9369 E1           	pop hl
  94+ 936A
  95+ 936A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 936A              ; _para indicar con E="2" en caso necesario.
  97+ 936A
  98+ 936A E5               push hl
  99+ 936B C5               push bc
 100+ 936C CD F7 98     	call calcula_tercio
 101+ 936F FE 01        	cp 1
 102+ 9371 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9373 CD A3 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9376 28 26            jr z,9F
 105+ 9378 38 24            jr c,9F
 106+ 937A 1E 00        11 ld e,0
 107+ 937C 18 22            jr 8F
 108+ 937E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 937F 28 07        	jr z, 7F
 110+ 9381 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9383 1E 00         	ld e,0
 112+ 9385 E1           	pop hl
 113+ 9386 18 04        	jr 4F
 114+ 9388 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 938A 18 15            jr 10F
 116+ 938C
 117+ 938C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 938C              ; _para indicar con E="2" en caso necesario.
 119+ 938C
 120+ 938C E5           4 push hl
 121+ 938D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 938E CD F7 98     	call calcula_tercio
 123+ 9391 FE 01        	cp 1
 124+ 9393 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9395 CD A3 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9398 28 04            jr z,9F
 127+ 939A 30 02            jr nc,9F
 128+ 939C 18 02        	jr 8F
 129+ 939E 1E 02        9 ld e,2
 130+ 93A0 C1           8 pop bc
 131+ 93A1 E1           10 pop hl
 132+ 93A2 C9           5 ret
 133+ 93A3
 134+ 93A3              ; --------------------
 135+ 93A3              ;
 136+ 93A3              ; 25/08/22
 137+ 93A3
 138+ 93A3 CD F7 98     Comprueba_centro call calcula_tercio
 139+ 93A6 67               ld h,a
 140+ 93A7 08           	ex af,af
 141+ 93A8 FE 02        	cp 2
 142+ 93AA 38 07        	jr c,1F
 143+ 93AC 28 05        	jr z,1F
 144+ 93AE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93B1 18 03        	jr 2F
 146+ 93B3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93B6 08           2 ex af,af
 148+ 93B7 A7               and a
 149+ 93B8 ED 42            sbc hl,bc
 150+ 93BA C9               ret
 151+ 93BB
 152+ 93BB              ; *********************************************************************************************************************************************************************************************
 153+ 93BB              ;
 154+ 93BB              ;   16/8/22
 155+ 93BB              ;
 156+ 93BB              ;	Comprueba_limite_vertical
 157+ 93BB              ;
 158+ 93BB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93BB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93BB              ;
 161+ 93BB
 162+ 93BB 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93BE 7D           	ld a,l
 164+ 93BF E6 1F        	and $1F
 165+ 93C1 57           	ld d,a
 166+ 93C2 3A 03 89     	ld a,(Limite_vertical)
 167+ 93C5 BA           	cp d 											; Límite - Posición.
 168+ 93C6 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 93C7 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 93CA CB 47        	bit 0,a
 171+ 93CC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 93CE
 173+ 93CE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 93CE
 175+ 93CE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 93CF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 93D1
 178+ 93D1              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 93D1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 93D1
 181+ 93D1 3A CB 88         ld a,(Coordenada_X)
 182+ 93D4 16 0F            ld d,Centro_izquierda
 183+ 93D6 A7               and a
 184+ 93D7 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 93D8 28 1E            jr z,3F
 186+ 93DA 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 93DC              ;                                                    ; _salimos sin modificar nada.
 188+ 93DC 18 0E            jr 2F
 189+ 93DE 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 93DF 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 93E1
 192+ 93E1              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 93E1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 93E1
 195+ 93E1 3A CB 88         ld a,(Coordenada_X)
 196+ 93E4 16 10            ld d,Centro_derecha
 197+ 93E6 A7               and a
 198+ 93E7 92               sub d
 199+ 93E8 28 0E            jr z,3F
 200+ 93EA 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 93EC              ;                                                    ; _salimos sin modificar nada.
 202+ 93EC CB 43        2 bit 0,e
 203+ 93EE 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 93F0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 93F1 CD 85 94         call Modificaccionne
 206+ 93F4 C1           	pop bc
 207+ 93F5 CD 95 94         call Inicializacion
 208+ 93F8 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93F9
 210+ 93F9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93F9
 212+ 93F9 C5           4 push bc
 213+ 93FA 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93FD 0A           	ld a,(bc)
 215+ 93FE 3D           	dec a
 216+ 93FF 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9400 7D           	ld a,l
 218+ 9401 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9402 CB 47        	bit 0,a
 220+ 9404 28 03        	jr z,5F
 221+ 9406 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9407 18 2E        	jr 7F
 223+ 9409
 224+ 9409              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9409
 226+ 9409 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 940A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 940B 3A F3 88     	ld a,(Ctrl_0)
 229+ 940E CB 4F        	bit 1,a
 230+ 9410 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9412 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9413
 233+ 9413              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9413
 235+ 9413 1C               inc e
 236+ 9414 1D               dec e
 237+ 9415 20 07            jr nz,12F
 238+ 9417 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9418 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9419 22 C7 88     	ld (Posicion_actual),hl
 241+ 941C 18 44        13 jr 9F
 242+ 941E CB 43        12 bit 0,e
 243+ 9420 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9422              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9422 C1           	pop bc
 246+ 9423 18 D3        	jr 3B
 247+ 9425 80           14 add b
 248+ 9426 6F               ld l,a
 249+ 9427 22 C7 88     	ld (Posicion_actual),hl
 250+ 942A CD 85 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 942D 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 942F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9431 32 F3 88         ld (Ctrl_0),a
 254+ 9434 F1           	pop af
 255+ 9435 18 2B        	jr 9F
 256+ 9437
 257+ 9437              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9437
 259+ 9437 F5           7 push af
 260+ 9438 3A F3 88     	ld a,(Ctrl_0)
 261+ 943B CB 47        	bit 0,a
 262+ 943D 20 1D        	jr nz,8F
 263+ 943F F1           	pop af
 264+ 9440
 265+ 9440              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9440
 267+ 9440 1C           	inc e
 268+ 9441 1D               dec e
 269+ 9442 20 07            jr nz,10F
 270+ 9444 90           	sub b
 271+ 9445 6F               ld l,a
 272+ 9446 22 C7 88     	ld (Posicion_actual),hl
 273+ 9449 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 944B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 944B CB 43        10 bit 0,e
 276+ 944D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 944F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 944F C1           	pop bc
 279+ 9450 18 A6        	jr 3B
 280+ 9452 90           16 sub b
 281+ 9453 6F               ld l,a
 282+ 9454 22 C7 88     	ld (Posicion_actual),hl
 283+ 9457 CD 85 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 945A 18 06            jr 9F
 285+ 945C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 945E 32 F3 88         ld (Ctrl_0),a
 287+ 9461 F1           	pop af
 288+ 9462 C1           9 pop bc
 289+ 9463 1E 00        	ld e,0
 290+ 9465 CD 95 94         call Inicializacion
 291+ 9468 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9469 08           	ex af,af
 293+ 946A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 946B 18 8B            jr 3B
 295+ 946D
 296+ 946D              ; --------------------
 297+ 946D
 298+ 946D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 946F CD F3 95     1 call PreviousScan
 300+ 9472 10 FB            djnz 1B
 301+ 9474 22 C7 88     	ld (Posicion_actual),hl
 302+ 9477 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9478 C9           	ret
 304+ 9479
 305+ 9479              ; --------------------
 306+ 9479
 307+ 9479 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 947B CD E4 95     1 call NextScan
 309+ 947E 10 FB            djnz 1B
 310+ 9480 22 C7 88     	ld (Posicion_actual),hl
 311+ 9483 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9484 C9           	ret
 313+ 9485
 314+ 9485              ; --------------------
 315+ 9485              ;
 316+ 9485              ;	22/01/23
 317+ 9485              ;
 318+ 9485              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9485              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9485              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9485
 322+ 9485
 323+ 9485              Modificaccionne
 324+ 9485
 325+ 9485 3A D9 88     	ld a,(Cuad_objeto)
 326+ 9488 FE 02        	cp 2
 327+ 948A CC 6D 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 948D DC 6D 94         call c,Modifica_Pos_actual
 329+ 9490 C8           	ret z
 330+ 9491 CD 79 94         call Modifica_Pos_actual2
 331+ 9494 C9               ret
 332+ 9495
 333+ 9495              ; *************************************************************************************************************************************************************************************************
 334+ 9495              ;
 335+ 9495              ;	13/8/22
 336+ 9495              ;
 337+ 9495              ;	Inicializacion
 338+ 9495              ;
 339+ 9495              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9495              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9495              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9495              ;
 343+ 9495              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9495              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9495              ;	_ desaparece/aparece.
 346+ 9495
 347+ 9495              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9495              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9495              ;
 350+ 9495              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9495              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9495              ; 		   [E] ="0"
 353+ 9495
 354+ 9495              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9495
 356+ 9495 CD F7 98     Inicializacion call calcula_tercio
 357+ 9498 28 36        	jr z,primit
 358+ 949A E6 02        	and 2
 359+ 949C 20 07        	jr nz,segmit
 360+ 949E 7D           	ld a,l
 361+ 949F FE 7F        	cp $7f
 362+ 94A1 38 2D        	jr c,primit
 363+ 94A3 28 2B        	jr z,primit
 364+ 94A5 CD 02 95     segmit call column
 365+ 94A8 38 13        	jr c,tercuad
 366+ 94AA 3E 04        cuarcuad ld a,4
 367+ 94AC 32 D9 88     	ld (Cuad_objeto),a
 368+ 94AF 21 20 48     	ld hl,$4820
 369+ 94B2 22 01 89     	ld (Limite_horizontal),hl
 370+ 94B5 21 03 89     	ld hl,Limite_vertical
 371+ 94B8 36 0D        	ld (hl),$0d
 372+ 94BA 08           	ex af,af
 373+ 94BB 18 3C        	jr 1F
 374+ 94BD              tercuad
 375+ 94BD 3E 03        	ld a,3
 376+ 94BF 32 D9 88     	ld (Cuad_objeto),a
 377+ 94C2 21 20 48     	ld hl,$4820
 378+ 94C5 22 01 89     	ld (Limite_horizontal),hl
 379+ 94C8 21 03 89     	ld hl,Limite_vertical
 380+ 94CB 36 12        	ld (hl),$12
 381+ 94CD 08           	ex af,af
 382+ 94CE 18 29        	jr 1F
 383+ 94D0 CD 02 95     primit call column
 384+ 94D3 38 13        	jr c, primcuad
 385+ 94D5              segcuad
 386+ 94D5 3E 02        	ld a,2
 387+ 94D7 32 D9 88     	ld (Cuad_objeto),a
 388+ 94DA 21 C0 4F     	ld hl,$4fc0
 389+ 94DD 22 01 89     	ld (Limite_horizontal),hl
 390+ 94E0 21 03 89     	ld hl,Limite_vertical
 391+ 94E3 36 0D        	ld (hl),$0d
 392+ 94E5 08           	ex af,af
 393+ 94E6 18 11        	jr 1F
 394+ 94E8              primcuad
 395+ 94E8 3E 01        	ld a,1
 396+ 94EA 32 D9 88     	ld (Cuad_objeto),a
 397+ 94ED 21 C0 4F     	ld hl,$4fc0
 398+ 94F0 22 01 89     	ld (Limite_horizontal),hl
 399+ 94F3 21 03 89     	ld hl,Limite_vertical
 400+ 94F6 36 12        	ld (hl),$12
 401+ 94F8 08           	ex af,af
 402+ 94F9 CD 82 9C     1 call Genera_coordenadas
 403+ 94FC 21 F3 88     	ld hl,Ctrl_0
 404+ 94FF CB EE        	set 5,(hl)
 405+ 9501 C9           	ret
 406+ 9502
 407+ 9502              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9502
 409+ 9502              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9502              ;
 411+ 9502              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9502
 413+ 9502 7D           column ld a,l
 414+ 9503 E6 1F        	and $1f
 415+ 9505 FE 10         	cp $10
 416+ 9507 C9            	ret
 417+ 9508
 418+ 9508              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9508              ;
 420+ 9508              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9508              ;
 422+ 9508              ; 14/12/22
 423+ 9508              ;
 424+ 9508              ;	Modifica: A y BC.
 425+ 9508
 426+ 9508 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 950B E6 01        	and 1
 428+ 950D 28 17        	jr z,1F
 429+ 950F
 430+ 950F              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 950F
 432+ 950F 3A CB 88     	ld a,(Coordenada_X)
 433+ 9512 47           	ld b,a
 434+ 9513 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9514 79           	ld a,c
 436+ 9515 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9516 38 08        	jr c,2F
 438+ 9518 47           	ld b,a
 439+ 9519 79           	ld a,c
 440+ 951A 90           	sub b
 441+ 951B 32 00 89     	ld (Columnas),a
 442+ 951E 18 1B        	jr 4F
 443+ 9520 79           2 ld a,c
 444+ 9521 32 00 89     	ld (Columnas),a
 445+ 9524 18 15        	jr 4F
 446+ 9526
 447+ 9526              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9526
 449+ 9526 3A CB 88     1 ld a,(Coordenada_X)
 450+ 9529 81           	add c
 451+ 952A 3D           	dec a
 452+ 952B D6 1F        	sub $1f
 453+ 952D 38 08        	jr c,3F
 454+ 952F 47           	ld b,a
 455+ 9530 79           	ld a,c
 456+ 9531 90           	sub b
 457+ 9532 32 00 89     	ld (Columnas),a
 458+ 9535 18 04        	jr 4F
 459+ 9537 79           3 ld a,c
 460+ 9538 32 00 89     	ld (Columnas),a
 461+ 953B D9           4 exx
 462+ 953C 4F           	ld c,a
 463+ 953D D9           	exx
 464+ 953E C9            ret
 465+ 953F
 466+ 953F              ; --------------------------------------------------------------------------------------------------------------------
 467+ 953F              ;
 468+ 953F              ;   19/7/23
 469+ 953F              ;
 470+ 953F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 953F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 953F              ;
 473+ 953F              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 953F              ;			HL e IY Contienen (Puntero_objeto).
 475+ 953F              ;
 476+ 953F              ;	DESTRUYE: HL,B Y A.
 477+ 953F
 478+ 953F 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9542 FE 02        	cp 2
 480+ 9544 38 18        	jr c,1F
 481+ 9546 28 16        	jr z,1F
 482+ 9548 E6 01        	and 1
 483+ 954A 28 0D        	jr z,3F
 484+ 954C
 485+ 954C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 954C
 487+ 954C CD 92 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 954F
 489+ 954F 7D           9 ld a,l
 490+ 9550 E6 1F        	and $1f
 491+ 9552 28 2A        	jr z,7F
 492+ 9554 2B           	dec hl
 493+ 9555 10 F8        	djnz 9B
 494+ 9557 18 25        	jr 7F
 495+ 9559
 496+ 9559              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9559
 498+ 9559 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 955C 18 20        	jr 7F
 500+ 955E
 501+ 955E 28 14        1 jr z,2F
 502+ 9560
 503+ 9560              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9560
 505+ 9560 CD 92 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9563
 507+ 9563 7D           4 ld a,l
 508+ 9564 E6 1F        	and $1f
 509+ 9566 28 03        	jr z,6F
 510+ 9568 2B           	dec hl
 511+ 9569 10 F8        	djnz 4B
 512+ 956B 06 0F        6 ld b,15
 513+ 956D CD F3 95     5 call PreviousScan
 514+ 9570 10 FB        	djnz 5B
 515+ 9572 18 0A        	jr 7F
 516+ 9574
 517+ 9574              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9574
 519+ 9574 CD 92 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9577 06 0F        	ld b,15
 521+ 9579 CD F3 95     8 call PreviousScan
 522+ 957C 10 FB        	djnz 8B
 523+ 957E
 524+ 957E E5           7 push hl
 525+ 957F DD E1        	pop ix
 526+ 9581
 527+ 9581 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 9584 E5           	push hl
 529+ 9585 FD E1        	pop iy
 530+ 9587
 531+ 9587              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9587
 533+ 9587 3A F3 88     	ld a,(Ctrl_0)
 534+ 958A CB 77        	bit 6,a
 535+ 958C C8           	ret z
 536+ 958D
 537+ 958D              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 958D              ; _ entidad / Amadeus´.
 539+ 958D
 540+ 958D DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 9591
 542+ 9591 C9           	ret
 543+ 9592
 544+ 9592              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9592              ;
 546+ 9592              ;	2/1/23
 547+ 9592              ;
 548+ 9592              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9592              ;
 550+ 9592              ;	Tras esta rutina tenemos:
 551+ 9592              ;
 552+ 9592              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9592              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9592              ;
 555+ 9592              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9592
 557+ 9592 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 9595 3A 00 89     	ld a,(Columnas)
 559+ 9598 3D           	dec a
 560+ 9599 20 01        	jr nz,1F
 561+ 959B 3C           	inc a
 562+ 959C 47           1 ld b,a
 563+ 959D C9           	ret
 564+ 959E
 565+ 959E              ; --------------------------------------------------------------------------------------------------------------------
 566+ 959E              ;
 567+ 959E              ;	3/1/23
 568+ 959E              ;
 569+ 959E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 959E              ;
 571+ 959E              ;	Destruye: A,B,HL y DE.
 572+ 959E
 573+ 959E              Define_rutina_de_impresion
 574+ 959E
 575+ 959E 3A C6 88     	ld a,(Columns)
 576+ 95A1 47           	ld b,a
 577+ 95A2 3A 00 89     	ld a,(Columnas)
 578+ 95A5 B8           	cp b
 579+ 95A6 20 0D        	jr nz,2f
 580+ 95A8
 581+ 95A8              ;	La entidad se imprime entera.
 582+ 95A8
 583+ 95A8 21 C7 96     	ld hl, Indice_entidades_completas
 584+ 95AB E6 01        	and 1
 585+ 95AD 28 02        	jr z,1F
 586+ 95AF
 587+ 95AF 23           	inc hl
 588+ 95B0 23           	inc hl
 589+ 95B1
 590+ 95B1 CD 78 8C     1 call Extrae_address
 591+ 95B4 C9           	ret		;	ret
 592+ 95B5
 593+ 95B5              ;	La entidad no se imprime entera en pantalla.
 594+ 95B5
 595+ 95B5 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 95B8 E6 01        	and 1
 597+ 95BA 28 17        	jr z,3F
 598+ 95BC
 599+ 95BC              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95BC
 601+ 95BC 21 CB 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95BF 3A C6 88     4 ld a,(Columns)
 603+ 95C2 E6 01        	and 1
 604+ 95C4 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 95C6
 606+ 95C6 23           	inc hl
 607+ 95C7 23           	inc hl
 608+ 95C8
 609+ 95C8 3A 00 89     	ld a,(Columnas)
 610+ 95CB E6 01        	and 1
 611+ 95CD 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 95CF
 613+ 95CF 23           	inc hl
 614+ 95D0 23           	inc hl
 615+ 95D1
 616+ 95D1 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 95D3
 618+ 95D3 21 D1 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 95D6 18 E7        	jr 4B
 620+ 95D8
 621+ 95D8              ; --------------------------------------------------------------------------------------------------------------------
 622+ 95D8              ;
 623+ 95D8              ;	Prepara_draw
 624+ 95D8              ;
 625+ 95D8              ;	Es una rutina de carga.
 626+ 95D8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 95D8              ;
 628+ 95D8              ;	FUNCIONAMIENTO:
 629+ 95D8              ;
 630+ 95D8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 95D8              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 95D8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 95D8              ;
 634+ 95D8              ;	DESTRUYE:
 635+ 95D8              ;
 636+ 95D8              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 95D8
 638+ 95D8 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 95DB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 95DC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 95DD 4E           	ld c,(hl)
 642+ 95DE 2A C7 88     	ld hl,(Posicion_actual)
 643+ 95E1 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 95E3 C9           	ret
 645+ 95E4
 646+ 95E4              ;----------------------------------------------------------------------------------------------------------------
 647+ 95E4              ;
 648+ 95E4              ;	5/08/22
 649+ 95E4              ;
 650+ 95E4              ;   NextScan.
 651+ 95E4              ;
 652+ 95E4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 95E4              ;
 654+ 95E4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 95E4              ;
 656+ 95E4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 95E4              ;
 658+ 95E4              ;       DESTRUIDOS: AF y HL !!!
 659+ 95E4              ;
 660+ 95E4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 95E4              ;
 662+ 95E4
 663+ 95E4 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 95E5 7C               ld a,h
 665+ 95E6 E6 07            and 7
 666+ 95E8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 95E9
 668+ 95E9 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 95EA C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 95EC 6F               ld l,a
 671+ 95ED D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 95EE
 673+ 95EE 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 95EF D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 95F1 67               ld h,a
 676+ 95F2 C9               ret
 677+ 95F3
 678+ 95F3              ;----------------------------------------------------------------------------------------------------------------
 679+ 95F3              ;
 680+ 95F3              ;	5/08/22
 681+ 95F3              ;
 682+ 95F3              ;   PreviousScan.
 683+ 95F3              ;
 684+ 95F3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 95F3              ;
 686+ 95F3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 95F3              ;
 688+ 95F3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 95F3              ;
 690+ 95F3              ;       DESTRUIDOS: AF y HL !!!
 691+ 95F3              ;
 692+ 95F3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 95F3              ;
 694+ 95F3
 695+ 95F3 7C           PreviousScan ld a,h
 696+ 95F4 25               dec h               ; Dec H.
 697+ 95F5 E6 07            and 7
 698+ 95F7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95F8
 700+ 95F8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95F9 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95FB 6F               ld l,a
 703+ 95FC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95FD
 705+ 95FD 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95FE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9600 67               ld h,a
 708+ 9601 C9               ret
 709+ 9602
 710+ 9602              ; -----------------------------------------------------------------------------------
 711+ 9602              ;
 712+ 9602              ;	31/7/23
 713+ 9602              ;
 714+ 9602              ;	Rutina principal de pintado de entidades.
 715+ 9602              ;	Extrae la foto del frame, (entidades).
 716+ 9602
 717+ 9602              Extrae_foto_entidades
 718+ 9602
 719+ 9602 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9605 7E           	ld a,(hl)
 721+ 9606 A7           	and a
 722+ 9607 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9608
 724+ 9608              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9608
 726+ 9608 3A 12 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 960B A7           	and a
 728+ 960C C8           	ret z
 729+ 960D
 730+ 960D              ; -----------------------------------
 731+ 960D
 732+ 960D ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9611 31 00 70     	ld sp,Album_de_fotos
 734+ 9614
 735+ 9614 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9616 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9617 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9618
 739+ 9618 ED 73 19 89  	ld (Stack_2),sp
 740+ 961C ED 7B 17 89  	ld sp,(Stack)
 741+ 9620
 742+ 9620              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9620
 744+ 9620 3E CD        	ld a,$cd
 745+ 9622 32 2A 96     	ld (Imprime),a
 746+ 9625 EB           	ex de,hl
 747+ 9626 22 2B 96     	ld (Imprime+1),hl
 748+ 9629 EB           	ex de,hl
 749+ 962A
 750+ 962A              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 962A
 752+ 962A 00 00 00     Imprime db 0,0,0
 753+ 962D
 754+ 962D ED 73 17 89  	ld (Stack),sp
 755+ 9631
 756+ 9631 3A 12 89     	ld a,(Numero_de_malotes)
 757+ 9634 3D           	dec a
 758+ 9635 28 09        	jr z,1F
 759+ 9637 32 12 89      	ld (Numero_de_malotes),a
 760+ 963A
 761+ 963A ED 7B 19 89  	ld sp,(Stack_2)
 762+ 963E 18 D4        	jr 2B
 763+ 9640
 764+ 9640 AF           1 xor a
 765+ 9641 32 19 89     	ld (Stack_2),a
 766+ 9644
 767+ 9644 C9           	ret
 768+ 9645
 769+ 9645              ; -----------------------------------------------------------------------------------
 770+ 9645              ;
 771+ 9645              ;	28/2/23
 772+ 9645              ;
 773+ 9645              ;	Pinta los disparos generados.
 774+ 9645
 775+ 9645              Extrae_foto_disparos
 776+ 9645
 777+ 9645 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 9648 7E               ld a,(hl)
 779+ 9649 A7               and a
 780+ 964A C8               ret z
 781+ 964B
 782+ 964B 3A 26 89     	ld a,(Numero_de_disparotes)
 783+ 964E A7           	and a
 784+ 964F C8           	ret z
 785+ 9650 ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9654 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 9657
 788+ 9657 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9659 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 965A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 965B
 792+ 965B ED 73 19 89  	ld (Stack_2),sp
 793+ 965F ED 7B 17 89  	ld sp,(Stack)
 794+ 9663
 795+ 9663              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9663
 797+ 9663 3E CD        	ld a,$cd
 798+ 9665 32 6D 96     	ld (Imprime2),a
 799+ 9668 EB           	ex de,hl
 800+ 9669 22 6E 96     	ld (Imprime2+1),hl
 801+ 966C EB           	ex de,hl
 802+ 966D
 803+ 966D              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 966D
 805+ 966D 00 00 00     Imprime2 db 0,0,0
 806+ 9670
 807+ 9670 3A 26 89     	ld a,(Numero_de_disparotes)
 808+ 9673 3D           	dec a
 809+ 9674 28 09        	jr z,1F
 810+ 9676 32 26 89      	ld (Numero_de_disparotes),a
 811+ 9679
 812+ 9679 ED 7B 19 89  	ld sp,(Stack_2)
 813+ 967D 18 D8        	jr 2B
 814+ 967F
 815+ 967F AF           1 xor a
 816+ 9680 32 19 89     	ld (Stack_2),a
 817+ 9683 C9           	ret
 818+ 9684
 819+ 9684              ; -----------------------------------------------------------------------------------
 820+ 9684              ;
 821+ 9684              ;	4/9/23
 822+ 9684              ;
 823+ 9684              ;	Rutina principal de pintado de Amadeus.
 824+ 9684              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 9684
 826+ 9684 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9687 7E           	ld a,(hl)
 828+ 9688 A7           	and a
 829+ 9689 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 968A
 831+ 968A 3A 12 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 968D A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 968E C8           	ret z
 834+ 968F
 835+ 968F              ; -----------------------------------
 836+ 968F
 837+ 968F ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9693 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 9696
 840+ 9696 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9698 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9699 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 969A
 844+ 969A ED 73 19 89  	ld (Stack_2),sp
 845+ 969E ED 7B 17 89  	ld sp,(Stack)
 846+ 96A2
 847+ 96A2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96A2
 849+ 96A2 3E CD        	ld a,$cd
 850+ 96A4 32 AC 96     	ld (Imprime_Amadeus),a
 851+ 96A7 EB           	ex de,hl
 852+ 96A8 22 AD 96     	ld (Imprime_Amadeus+1),hl
 853+ 96AB EB           	ex de,hl
 854+ 96AC
 855+ 96AC              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96AC
 857+ 96AC 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96AF
 859+ 96AF ED 73 17 89  	ld (Stack),sp
 860+ 96B3
 861+ 96B3 3A 12 89     	ld a,(Numero_de_malotes)
 862+ 96B6 3D           	dec a
 863+ 96B7 28 09        	jr z,1F
 864+ 96B9 32 12 89      	ld (Numero_de_malotes),a
 865+ 96BC
 866+ 96BC ED 7B 19 89  	ld sp,(Stack_2)
 867+ 96C0 18 D4        	jr 2B
 868+ 96C2
 869+ 96C2 AF           1 xor a
 870+ 96C3 32 19 89     	ld (Stack_2),a
 871+ 96C6
 872+ 96C6 C9           	ret
# file closed: Draw_XOR.asm
1638  96C7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96C7              ;   índices de Rutinas de impresión.
   2+ 96C7
   3+ 96C7 D7 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96C9 04 97            defw Pinta_Amadeus_3x2
   5+ 96CB
   6+ 96CB 5A 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96CD FA 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96CF AE 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96D1
  10+ 96D1 84 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96D3 88 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96D5 3C 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96D7
  14+ 96D7
  15+ 96D7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96D7              ;
  17+ 96D7              ;   12/12/22
  18+ 96D7              ;
  19+ 96D7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96D7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96D7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96D7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96D7              ;
  24+ 96D7              ;   Modifica: DE y HL.
  25+ 96D7
  26+ 96D7 ED 73 17 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96DB FD F9        	ld sp,iy
  28+ 96DD 06 10            ld b,16
  29+ 96DF D1           1 pop de
  30+ 96E0 7B               ld a,e
  31+ 96E1 AE               xor (hl)
  32+ 96E2 77           	ld (hl),a
  33+ 96E3 23           	inc hl
  34+ 96E4 7A               ld a,d
  35+ 96E5 AE               xor (hl)
  36+ 96E6 77           	ld (hl),a
  37+ 96E7 2B           	dec hl
  38+ 96E8 24           	inc h
  39+ 96E9 7C               ld a,h
  40+ 96EA E6 07            and 7
  41+ 96EC 20 0A            jr nz,2F
  42+ 96EE 7D               ld a,l
  43+ 96EF C6 20            add a,$20
  44+ 96F1 6F               ld l,a
  45+ 96F2 38 04            jr c,2F
  46+ 96F4 7C               ld a,h
  47+ 96F5 D6 08            sub 8
  48+ 96F7 67               ld h,a
  49+ 96F8 7C           2 ld a,h
  50+ 96F9 FE 58            cp $58
  51+ 96FB 28 02            jr z,3F
  52+ 96FD 10 E0            djnz 1B
  53+ 96FF ED 7B 17 89  3 ld sp,(Stack)
  54+ 9703 C9           	ret
  55+ 9704
  56+ 9704 ED 73 17 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9708 FD F9        	ld sp,iy
  58+ 970A 06 08            ld b,8
  59+ 970C D1           1 pop de
  60+ 970D 7B               ld a,e
  61+ 970E AE               xor (hl)
  62+ 970F 77           	ld (hl),a
  63+ 9710 23           	inc hl
  64+ 9711 7A               ld a,d
  65+ 9712 AE               xor (hl)
  66+ 9713 77           	ld (hl),a
  67+ 9714 23           	inc hl
  68+ 9715 D1           	pop de
  69+ 9716 7B               ld a,e
  70+ 9717 AE               xor (hl)
  71+ 9718 77           	ld (hl),a
  72+ 9719 2B           	dec hl
  73+ 971A 2B           	dec hl
  74+ 971B 24           	inc h
  75+ 971C 7C               ld a,h
  76+ 971D E6 07            and 7
  77+ 971F 20 0A            jr nz,2F
  78+ 9721 7D               ld a,l
  79+ 9722 C6 20            add a,$20
  80+ 9724 6F               ld l,a
  81+ 9725 38 04            jr c,2F
  82+ 9727 7C               ld a,h
  83+ 9728 D6 08            sub 8
  84+ 972A 67               ld h,a
  85+ 972B 7C           2 ld a,h
  86+ 972C FE 58            cp $58
  87+ 972E 28 25            jr z,4F
  88+ 9730 7A               ld a,d
  89+ 9731 AE               xor (hl)
  90+ 9732 77               ld (hl),a
  91+ 9733 D1           	pop de
  92+ 9734 23           	inc hl
  93+ 9735 7B               ld a,e
  94+ 9736 AE               xor (hl)
  95+ 9737 77           	ld (hl),a
  96+ 9738 23           	inc hl
  97+ 9739 7A               ld a,d
  98+ 973A AE               xor (hl)
  99+ 973B 77           	ld (hl),a
 100+ 973C 2B           	dec hl
 101+ 973D 2B           	dec hl
 102+ 973E 24           	inc h
 103+ 973F 7C               ld a,h
 104+ 9740 E6 07            and 7
 105+ 9742 20 0A            jr nz,3F
 106+ 9744 7D               ld a,l
 107+ 9745 C6 20            add a,$20
 108+ 9747 6F               ld l,a
 109+ 9748 38 04            jr c,3F
 110+ 974A 7C               ld a,h
 111+ 974B D6 08            sub 8
 112+ 974D 67               ld h,a
 113+ 974E 7C           3 ld a,h
 114+ 974F FE 58            cp $58
 115+ 9751 28 02            jr z,4F
 116+ 9753 10 B7            djnz 1B
 117+ 9755 ED 7B 17 89  4 ld sp,(Stack)
 118+ 9759 C9           	ret
 119+ 975A
 120+ 975A              ; ---------------------------------------------------
 121+ 975A
 122+ 975A ED 73 17 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 975E FD F9        	ld sp,iy
 124+ 9760
 125+ 9760              ; >>>
 126+ 9760
 127+ 9760 06 10            ld b,16
 128+ 9762 D1           1 pop de
 129+ 9763 7A           	ld a,d
 130+ 9764 AE           	xor (hl)
 131+ 9765 77           	ld (hl),a
 132+ 9766 24           	inc h
 133+ 9767 7C               ld a,h
 134+ 9768 E6 07            and 7
 135+ 976A 20 0C            jr nz,2F
 136+ 976C 7D               ld a,l
 137+ 976D C6 20            add a,$20
 138+ 976F 6F               ld l,a
 139+ 9770 38 06            jr c,2F
 140+ 9772 7C               ld a,h
 141+ 9773 D6 08            sub 8
 142+ 9775 67               ld h,a
 143+ 9776 18 00            jr 2F
 144+ 9778 7C           2 ld a,h
 145+ 9779 FE 58            cp $58
 146+ 977B 28 02            jr z,3F
 147+ 977D 10 E3            djnz 1B
 148+ 977F ED 7B 17 89  3 ld sp,(Stack)
 149+ 9783 C9           	ret
 150+ 9784
 151+ 9784 ED 73 17 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9788 FD F9        	ld sp,iy
 153+ 978A
 154+ 978A              ; >>>
 155+ 978A
 156+ 978A 06 10            ld b,16
 157+ 978C D1           1 pop de
 158+ 978D 7B           	ld a,e
 159+ 978E AE           	xor (hl)
 160+ 978F 77           	ld (hl),a
 161+ 9790 24           	inc h
 162+ 9791 7C               ld a,h
 163+ 9792 E6 07            and 7
 164+ 9794 20 0C            jr nz,2F
 165+ 9796 7D               ld a,l
 166+ 9797 C6 20            add a,$20
 167+ 9799 6F               ld l,a
 168+ 979A 38 06            jr c,2F
 169+ 979C 7C               ld a,h
 170+ 979D D6 08            sub 8
 171+ 979F 67               ld h,a
 172+ 97A0 18 00            jr 2F
 173+ 97A2 7C           2 ld a,h
 174+ 97A3 FE 58            cp $58
 175+ 97A5 28 02            jr z,3F
 176+ 97A7 10 E3            djnz 1B
 177+ 97A9 ED 7B 17 89  3 ld sp,(Stack)
 178+ 97AD C9           	ret
 179+ 97AE
 180+ 97AE              ; ---------------------------------------------------
 181+ 97AE
 182+ 97AE ED 73 17 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97B2 FD F9        	ld sp,iy
 184+ 97B4 06 08            ld b,8
 185+ 97B6 D1           1 pop de
 186+ 97B7 7A           	ld a,d
 187+ 97B8 AE           	xor (hl)
 188+ 97B9 77           	ld (hl),a
 189+ 97BA 23           	inc hl
 190+ 97BB D1           	pop de
 191+ 97BC 7B           	ld a,e
 192+ 97BD AE           	xor (hl)
 193+ 97BE 77           	ld (hl),a
 194+ 97BF 2B           	dec hl
 195+ 97C0 24            	inc h
 196+ 97C1 7C               ld a,h
 197+ 97C2 E6 07            and 7
 198+ 97C4 20 0A            jr nz,2F
 199+ 97C6 7D               ld a,l
 200+ 97C7 C6 20            add a,$20
 201+ 97C9 6F               ld l,a
 202+ 97CA 38 04            jr c,2F
 203+ 97CC 7C               ld a,h
 204+ 97CD D6 08            sub 8
 205+ 97CF 67               ld h,a
 206+ 97D0 7C           2 ld a,h
 207+ 97D1 FE 58            cp $58
 208+ 97D3 28 20            jr z,4F
 209+ 97D5 D1               pop de
 210+ 97D6 7B           	ld a,e
 211+ 97D7 AE           	xor (hl)
 212+ 97D8 77           	ld (hl),a
 213+ 97D9 23           	inc hl
 214+ 97DA 7A           	ld a,d
 215+ 97DB AE           	xor (hl)
 216+ 97DC 77           	ld (hl),a
 217+ 97DD 2B           	dec hl
 218+ 97DE 24           	inc h
 219+ 97DF 7C               ld a,h
 220+ 97E0 E6 07            and 7
 221+ 97E2 20 0A            jr nz,3F
 222+ 97E4 7D               ld a,l
 223+ 97E5 C6 20            add a,$20
 224+ 97E7 6F               ld l,a
 225+ 97E8 38 04            jr c,3F
 226+ 97EA 7C               ld a,h
 227+ 97EB D6 08            sub 8
 228+ 97ED 67               ld h,a
 229+ 97EE 7C           3 ld a,h
 230+ 97EF FE 58            cp $58
 231+ 97F1 28 02            jr z,4F
 232+ 97F3 10 C1            djnz 1B
 233+ 97F5 ED 7B 17 89  4 ld sp,(Stack)
 234+ 97F9 C9           	ret
 235+ 97FA
 236+ 97FA ED 73 17 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97FE FD F9        	ld sp,iy
 238+ 9800 06 08            ld b,8
 239+ 9802 D1           1 pop de
 240+ 9803 D1           	pop de
 241+ 9804 7B           	ld a,e
 242+ 9805 AE           	xor (hl)
 243+ 9806 77           	ld (hl),a
 244+ 9807 24            	inc h
 245+ 9808 7C               ld a,h
 246+ 9809 E6 07            and 7
 247+ 980B 20 0A            jr nz,2F
 248+ 980D 7D               ld a,l
 249+ 980E C6 20            add a,$20
 250+ 9810 6F               ld l,a
 251+ 9811 38 04            jr c,2F
 252+ 9813 7C               ld a,h
 253+ 9814 D6 08            sub 8
 254+ 9816 67               ld h,a
 255+ 9817 7C           2 ld a,h
 256+ 9818 FE 58            cp $58
 257+ 981A 28 1B            jr z,4F
 258+ 981C D1               pop de
 259+ 981D 7A           	ld a,d
 260+ 981E AE           	xor (hl)
 261+ 981F 77           	ld (hl),a
 262+ 9820 24           	inc h
 263+ 9821 7C               ld a,h
 264+ 9822 E6 07            and 7
 265+ 9824 20 0A            jr nz,3F
 266+ 9826 7D               ld a,l
 267+ 9827 C6 20            add a,$20
 268+ 9829 6F               ld l,a
 269+ 982A 38 04            jr c,3F
 270+ 982C 7C               ld a,h
 271+ 982D D6 08            sub 8
 272+ 982F 67               ld h,a
 273+ 9830 7C           3 ld a,h
 274+ 9831 FE 58            cp $58
 275+ 9833 28 02            jr z,4F
 276+ 9835 10 CB            djnz 1B
 277+ 9837 ED 7B 17 89  4 ld sp,(Stack)
 278+ 983B C9           	ret
 279+ 983C
 280+ 983C ED 73 17 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9840 FD F9        	ld sp,iy
 282+ 9842 06 08            ld b,8
 283+ 9844 D1           1 pop de
 284+ 9845 7B           	ld a,e
 285+ 9846 AE           	xor (hl)
 286+ 9847 77           	ld (hl),a
 287+ 9848 23           	inc hl
 288+ 9849 7A           	ld a,d
 289+ 984A AE           	xor (hl)
 290+ 984B 77           	ld (hl),a
 291+ 984C 2B           	dec hl
 292+ 984D 24             	inc h
 293+ 984E 7C               ld a,h
 294+ 984F E6 07            and 7
 295+ 9851 20 0A            jr nz,2F
 296+ 9853 7D               ld a,l
 297+ 9854 C6 20            add a,$20
 298+ 9856 6F               ld l,a
 299+ 9857 38 04            jr c,2F
 300+ 9859 7C               ld a,h
 301+ 985A D6 08            sub 8
 302+ 985C 67               ld h,a
 303+ 985D 7C           2 ld a,h
 304+ 985E FE 58            cp $58
 305+ 9860 28 21            jr z,4F
 306+ 9862 D1               pop de
 307+ 9863 7A           	ld a,d
 308+ 9864 AE           	xor (hl)
 309+ 9865 77           	ld (hl),a
 310+ 9866 23           	inc hl
 311+ 9867 D1               pop de
 312+ 9868 7B           	ld a,e
 313+ 9869 AE           	xor (hl)
 314+ 986A 77           	ld (hl),a
 315+ 986B 2B           	dec hl
 316+ 986C 24           	inc h
 317+ 986D 7C               ld a,h
 318+ 986E E6 07            and 7
 319+ 9870 20 0A            jr nz,3F
 320+ 9872 7D               ld a,l
 321+ 9873 C6 20            add a,$20
 322+ 9875 6F               ld l,a
 323+ 9876 38 04            jr c,3F
 324+ 9878 7C               ld a,h
 325+ 9879 D6 08            sub 8
 326+ 987B 67               ld h,a
 327+ 987C 7C           3 ld a,h
 328+ 987D FE 58            cp $58
 329+ 987F 28 02            jr z,4F
 330+ 9881 10 C1            djnz 1B
 331+ 9883 ED 7B 17 89  4 ld sp,(Stack)
 332+ 9887 C9           	ret
 333+ 9888
 334+ 9888 ED 73 17 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 988C FD F9        	ld sp,iy
 336+ 988E 06 08            ld b,8
 337+ 9890 D1           1 pop de
 338+ 9891 7B           	ld a,e
 339+ 9892 AE           	xor (hl)
 340+ 9893 77           	ld (hl),a
 341+ 9894 24            	inc h
 342+ 9895 7C               ld a,h
 343+ 9896 E6 07            and 7
 344+ 9898 20 0A            jr nz,2F
 345+ 989A 7D               ld a,l
 346+ 989B C6 20            add a,$20
 347+ 989D 6F               ld l,a
 348+ 989E 38 04            jr c,2F
 349+ 98A0 7C               ld a,h
 350+ 98A1 D6 08            sub 8
 351+ 98A3 67               ld h,a
 352+ 98A4 7C           2 ld a,h
 353+ 98A5 FE 58            cp $58
 354+ 98A7 28 1C            jr z,4F
 355+ 98A9 D1               pop de
 356+ 98AA 7A           	ld a,d
 357+ 98AB AE           	xor (hl)
 358+ 98AC 77           	ld (hl),a
 359+ 98AD 24           	inc h
 360+ 98AE 7C               ld a,h
 361+ 98AF E6 07            and 7
 362+ 98B1 20 0A            jr nz,3F
 363+ 98B3 7D               ld a,l
 364+ 98B4 C6 20            add a,$20
 365+ 98B6 6F               ld l,a
 366+ 98B7 38 04            jr c,3F
 367+ 98B9 7C               ld a,h
 368+ 98BA D6 08            sub 8
 369+ 98BC 67               ld h,a
 370+ 98BD 7C           3 ld a,h
 371+ 98BE FE 58            cp $58
 372+ 98C0 28 03            jr z,4F
 373+ 98C2 D1               pop de
 374+ 98C3 10 CB            djnz 1B
 375+ 98C5 ED 7B 17 89  4 ld sp,(Stack)
 376+ 98C9 C9           	ret
 377+ 98CA
 378+ 98CA              ; ---------------------------------------------------
 379+ 98CA              ;
 380+ 98CA              ;   27/02/23
 381+ 98CA              ;
 382+ 98CA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98CA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98CA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98CA
 386+ 98CA ED 73 17 89  Pinta_Disparo ld (Stack),sp
 387+ 98CE FD F9            ld sp,iy
 388+ 98D0 06 03            ld b,3
 389+ 98D2 D1           1 pop de
 390+ 98D3 7B               ld a,e
 391+ 98D4 AE               xor (hl)
 392+ 98D5 77               ld (hl),a
 393+ 98D6 23               inc hl
 394+ 98D7 7A               ld a,d
 395+ 98D8 AE               xor (hl)
 396+ 98D9 77               ld (hl),a
 397+ 98DA 2B               dec hl
 398+ 98DB
 399+ 98DB 24               inc h
 400+ 98DC 7C               ld a,h
 401+ 98DD E6 07            and 7
 402+ 98DF 20 0A            jr nz,2F
 403+ 98E1 7D               ld a,l
 404+ 98E2 C6 20            add a,$20
 405+ 98E4 6F               ld l,a
 406+ 98E5 38 04            jr c,2F
 407+ 98E7 7C               ld a,h
 408+ 98E8 D6 08            sub 8
 409+ 98EA 67               ld h,a
 410+ 98EB 7C           2 ld a,h
 411+ 98EC FE 58            cp $58
 412+ 98EE 28 02            jr z,3F
 413+ 98F0
 414+ 98F0 10 E0            djnz 1B
 415+ 98F2 ED 7B 17 89  3 ld sp,(Stack)
 416+ 98F6 C9               ret
 417+ 98F7
# file closed: Rutinas_de_impresion_sprites.asm
1639  98F7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98F7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98F7              ;
   3+ 98F7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98F7              ;
   5+ 98F7              ; *****************************************************************************************************************************************************************************************
   6+ 98F7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98F7
   8+ 98F7 7C           calcula_tercio ld a,h
   9+ 98F8 E6 18        	and $18
  10+ 98FA CB 2F        	sra a
  11+ 98FC CB 2F        	sra a
  12+ 98FE CB 2F        	sra a
  13+ 9900 C9           	ret
  14+ 9901
# file closed: calcula_tercio.asm
1640  9901              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9901              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9901              ;
   3+ 9901              ;
   4+ 9901              ;	CLS.
   5+ 9901              ;
   6+ 9901              ;	Limpia la pantalla y define sus atributos.
   7+ 9901              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9901              ;
   9+ 9901              ;	COLORES: 0 ..... NEGRO
  10+ 9901              ;    		 1 ..... AZUL
  11+ 9901              ; 			 2 ..... ROJO
  12+ 9901              ;			 3 ..... MAGENTA
  13+ 9901              ; 			 4 ..... VERDE
  14+ 9901              ; 			 5 ..... CIAN
  15+ 9901              ;			 6 ..... AMARILLO
  16+ 9901              ; 			 7 ..... BLANCO
  17+ 9901              ;
  18+ 9901              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9901              ;
  20+ 9901              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9901
  22+ 9901
  23+ 9901 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9904 11 01 40     	LD DE,$4001
  25+ 9907 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 990A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 990C ED B0        	LDIR
  28+ 990E 01 FF 02     	LD BC,767
  29+ 9911 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9912 ED B0        	LDIR
  31+ 9914 C9           	ret
  32+ 9915
# file closed: Cls.asm
1641  9915              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9915              ; ******************************************************************************************************************************************************************************************
   2+ 9915              ;
   3+ 9915              ;   20/05/23
   4+ 9915              ;
   5+ 9915              ;	Recompone_posicion_inicio
   6+ 9915              ;
   7+ 9915              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9915              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9915              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9915              ;	_ a una u otra rutina.
  11+ 9915
  12+ 9915              Recompone_posicion_inicio
  13+ 9915
  14+ 9915 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 9918 7D           	ld a,l
  16+ 9919 E6 1F        	and $1f
  17+ 991B 28 16        	jr z,1F
  18+ 991D
  19+ 991D FE 1F        	cp $1f
  20+ 991F 28 0D        	jr z,3F
  21+ 9921
  22+ 9921 21 04 89     	ld hl,Ctrl_2
  23+ 9924 CB C6        	set 0,(hl)
  24+ 9926 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 9929 22 07 89     	ld (Repone_puntero_objeto),hl
  26+ 992C 18 08        	jr 2F
  27+ 992E
  28+ 992E CD CF 9A     3 call Mov_left
  29+ 9931 18 03        	jr 2F
  30+ 9933
  31+ 9933 CD B1 99     1 call Mov_right
  32+ 9936 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9939 22 C9 88     	ld (Puntero_objeto),hl
  34+ 993C C9           	ret
  35+ 993D
  36+ 993D              ; ******************************************************************************************************************************************************************************************
  37+ 993D              ;
  38+ 993D              ;   27/05/23
  39+ 993D              ;
  40+ 993D              ;	Mov_down
  41+ 993D              ;
  42+ 993D              ; 	Mueve el Sprite X px hacia abajo.
  43+ 993D              ;
  44+ 993D              ;
  45+ 993D              Mov_down
  46+ 993D
  47+ 993D CD 9F 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9940              ;																	; _ repone (Puntero_objeto).
  49+ 9940 21 F3 88     	ld hl,Ctrl_0
  50+ 9943 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9945              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9945              ; 																	; _ en el caso de que no lo haya.
  53+ 9945 3A DD 88     	ld a,(Vel_down)
  54+ 9948 47           	ld b,a
  55+ 9949 2A C7 88         ld hl,(Posicion_actual)
  56+ 994C CD F7 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 994F E6 02        	and 2
  58+ 9951 28 0F        	jr z,1F
  59+ 9953
  60+ 9953              ; Nos encontramos en el último tercio de pantalla.
  61+ 9953              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9953
  63+ 9953 7C           	ld a,h
  64+ 9954 FE 57        	cp $57
  65+ 9956 20 0A        	jr nz,1F
  66+ 9958
  67+ 9958 7D           	ld a,l
  68+ 9959 C6 20        	add $20
  69+ 995B 30 05        	jr nc,1F
  70+ 995D
  71+ 995D              ; ------------------------------
  72+ 995D              ;	call Reaparece_arriba
  73+ 995D CD 5C 9C     	call Reinicio
  74+ 9960              ; ------------------------------
  75+ 9960
  76+ 9960 18 08        	jr 3F
  77+ 9962 CD E4 95     1 call NextScan
  78+ 9965 22 C7 88     	ld (Posicion_actual),hl
  79+ 9968 10 E2            djnz 2B
  80+ 996A CD 82 9C     3 call Genera_coordenadas
  81+ 996D C9           	ret
  82+ 996E
  83+ 996E              ; ******************************************************************************************************************************************************************************************
  84+ 996E              ;
  85+ 996E              ;   27/05/23
  86+ 996E              ;
  87+ 996E              ;	Mov_up
  88+ 996E              ;
  89+ 996E              ; 	Mueve el Sprite hacia arriba.
  90+ 996E              ;
  91+ 996E              ;
  92+ 996E              Mov_up
  93+ 996E
  94+ 996E CD 9F 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9971              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9971 21 F3 88     	ld hl,Ctrl_0
  97+ 9974 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9976              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9976              ; 																		; _ en el caso de que no lo haya.
 100+ 9976 3A DC 88     	ld a,(Vel_up)
 101+ 9979 47           	ld b,a
 102+ 997A 2A C7 88     	ld hl,(Posicion_actual)
 103+ 997D CD F7 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9980 A7           	and a
 105+ 9981 20 10        	jr nz,1F
 106+ 9983
 107+ 9983              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9983              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9983
 110+ 9983 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9984 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9986 20 0B            jr nz,1F
 113+ 9988 7D               ld a,l
 114+ 9989 D6 20            sub $20
 115+ 998B 30 06            jr nc,1F
 116+ 998D 25               dec h
 117+ 998E
 118+ 998E              ; -----------------------------
 119+ 998E CD 3D 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9991              ;	call Reinicio
 121+ 9991              ; -----------------------------
 122+ 9991
 123+ 9991 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9993 CD F3 95     1 call PreviousScan
 125+ 9996 22 C7 88     	ld (Posicion_actual),hl
 126+ 9999 10 E2            djnz 3B
 127+ 999B CD 82 9C     2 call Genera_coordenadas
 128+ 999E C9           	ret
 129+ 999F
 130+ 999F              ; -----------------------------
 131+ 999F              ;
 132+ 999F              ;	27/5/23
 133+ 999F              ;
 134+ 999F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 999F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 999F              ;
 137+ 999F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 999F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 999F              ;
 140+ 999F              ;	Modifica: A y (Puntero_objeto).
 141+ 999F
 142+ 999F 3A 04 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99A2 CB 47        	bit 0,a
 144+ 99A4 C8           	ret z
 145+ 99A5 CB 87        	res 0,a
 146+ 99A7 32 04 89     	ld (Ctrl_2),a
 147+ 99AA 2A 07 89     	ld hl,(Repone_puntero_objeto)
 148+ 99AD 22 C9 88     	ld (Puntero_objeto),hl
 149+ 99B0 C9           	ret
 150+ 99B1
 151+ 99B1              ; ******************************************************************************************************************************************************************************************
 152+ 99B1              ;
 153+ 99B1              ;	19/10/22
 154+ 99B1              ;
 155+ 99B1              ;	Mov_right.
 156+ 99B1              ;
 157+ 99B1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99B1              ;
 159+ 99B1
 160+ 99B1 21 F3 88     Mov_right ld hl,Ctrl_0
 161+ 99B4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99B6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99B6              ; 																	; _ en el caso de que no lo haya.
 164+ 99B6 3A F3 88     	ld a,(Ctrl_0)
 165+ 99B9 CB 77        	bit 6,a
 166+ 99BB 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99BD
 168+ 99BD CD EB 9B     	call Stop_Amadeus_right
 169+ 99C0 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99C1 18 4D        	jr 8F
 171+ 99C3
 172+ 99C3 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99C6 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99C8 20 46        	jr nz,8F
 175+ 99CA
 176+ 99CA 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99CD A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99CE 28 40        	jr z,8F
 179+ 99D0
 180+ 99D0              ; ---------- ---------- ----------
 181+ 99D0              ;
 182+ 99D0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99D0
 184+ 99D0 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99D3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99D5 28 11        	jr z,1F
 187+ 99D7 38 06        	jr c,6F
 188+ 99D9 FE 04        	cp 4
 189+ 99DB 28 14        	jr z,7F
 190+ 99DD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 99DF
 192+ 99DF              ; ---------- ---------- ----------
 193+ 99DF              ;
 194+ 99DF              ; Perfiles de velocidad
 195+ 99DF              ;
 196+ 99DF
 197+ 99DF 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 99E2 FE FE        	cp $fe
 199+ 99E4 20 2A        	jr nz,8F
 200+ 99E6 18 10        	jr 3F
 201+ 99E8 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 99EB FE FD        	cp $fd
 203+ 99ED 20 21        	jr nz,8F
 204+ 99EF 18 07        	jr 3F
 205+ 99F1 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99F4 FE FB        	cp $fb
 207+ 99F6 20 18        	jr nz,8F
 208+ 99F8
 209+ 99F8              ; ---------- ---------- ----------
 210+ 99F8
 211+ 99F8              3
 212+ 99F8 CD 2B 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99FB              ;	call Reinicio
 214+ 99FB
 215+ 99FB              ; ---------- ---------- ----------
 216+ 99FB              ;
 217+ 99FB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99FB
 219+ 99FB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99FD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99FE CD 17 9A     	call DESPLZ_DER
 222+ 9A01 C1           	pop bc
 223+ 9A02 10 F9        	djnz 5B
 224+ 9A04 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A07 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A08 22 C7 88     	ld (Posicion_actual),hl
 227+ 9A0B CD 82 9C     	call Genera_coordenadas
 228+ 9A0E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A10
 230+ 9A10              ; ---------- ---------- ----------
 231+ 9A10
 232+ 9A10 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9A13 CD 17 9A     	call DESPLZ_DER
 234+ 9A16 C9           2 ret
 235+ 9A17
 236+ 9A17              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A17              ;
 238+ 9A17              ;	22/9/22
 239+ 9A17              ;
 240+ 9A17
 241+ 9A17 CD 26 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A1A CD 72 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A1D CD 9B 9A         call Ciclo_completo
 244+ 9A20 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A23 CB FE        	set 7,(hl)
 246+ 9A25 C9           	ret
 247+ 9A26
 248+ 9A26              ; ******************************************************************************************************************************************************************************************
 249+ 9A26              ;	15/02/23
 250+ 9A26              ;
 251+ 9A26
 252+ 9A26 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A29 47           	ld b,a
 254+ 9A2A 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A2D 23           1 inc hl
 256+ 9A2E 23           	inc hl
 257+ 9A2F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A31 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A34 CD 78 8C     	call Extrae_address
 260+ 9A37 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9A3A
 262+ 9A3A              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A3A
 264+ 9A3A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A3A              ; Cuántos movimientos hemos hecho ??
 266+ 9A3A              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A3A
 268+ 9A3A 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A3D EB           	ex de,hl
 270+ 9A3E A7           	and a
 271+ 9A3F ED 52        	sbc hl,de
 272+ 9A41 CB 3D        	srl l
 273+ 9A43 3E 08        6 ld a,8
 274+ 9A45 95           	sub l
 275+ 9A46 30 1E        	jr nc,3F
 276+ 9A48
 277+ 9A48              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A48              ; B="0".
 279+ 9A48
 280+ 9A48 04           4 inc b
 281+ 9A49 3C           	inc a
 282+ 9A4A 20 FC        	jr nz,4B
 283+ 9A4C 78           	ld a,b
 284+ 9A4D 08           	ex af,af
 285+ 9A4E 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9A51 23           5 inc hl
 287+ 9A52 23           	inc hl
 288+ 9A53 10 FC        	djnz 5B
 289+ 9A55 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A58 CD 78 8C     	call Extrae_address
 291+ 9A5B 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9A5E
 293+ 9A5E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A5E              ; _(Posicion_actual).
 295+ 9A5E
 296+ 9A5E 21 C7 88     	ld hl,Posicion_actual
 297+ 9A61 34           	inc (hl)
 298+ 9A62 08               ex af,af
 299+ 9A63 6F           	ld l,a
 300+ 9A64 18 DD        	jr 6B
 301+ 9A66
 302+ 9A66              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A66
 304+ 9A66 47           3 ld b,a
 305+ 9A67 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A6A 23           2 inc hl
 307+ 9A6B 23           	inc hl
 308+ 9A6C 10 FC        	djnz 2B
 309+ 9A6E 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A71 C9           8 ret
 311+ 9A72
 312+ 9A72              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A72              ;
 314+ 9A72              ;	24/7/22
 315+ 9A72              ;
 316+ 9A72              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A72              ;
 318+ 9A72              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A72              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A72              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A72
 322+ 9A72 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A75 A7           	and a
 324+ 9A76 20 1F        	jr nz,1F
 325+ 9A78 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A7A 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9A7D
 328+ 9A7D 21 C6 88     	ld hl,Columns
 329+ 9A80 34           	inc (hl)
 330+ 9A81 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9A84 E6 01        	and 1
 332+ 9A86 28 0F        	jr z,1F
 333+ 9A88 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A8B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A8C 22 C7 88     	ld (Posicion_actual),hl
 336+ 9A8F CD 82 9C     	call Genera_coordenadas
 337+ 9A92 CD F7 9B     	call Inc_CTRL_DESPLZ
 338+ 9A95 18 03        	jr 2F
 339+ 9A97 CD F7 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A9A C9           2 ret
 341+ 9A9B
 342+ 9A9B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A9B              ;
 344+ 9A9B              ;	24/7/22
 345+ 9A9B              ;
 346+ 9A9B              ;	Ciclo_completo.
 347+ 9A9B              ;
 348+ 9A9B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A9B              ;
 350+ 9A9B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A9B              ; 	Decrementamos (Columns).
 352+ 9A9B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A9B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A9B
 355+ 9A9B
 356+ 9A9B 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A9E FE FF        	cp $ff
 358+ 9AA0 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AA2 E6 F0        	and $f0
 360+ 9AA4 20 28        	jr nz,3F
 361+ 9AA6
 362+ 9AA6              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AA6
 364+ 9AA6 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9AA9 47           	ld b,a
 366+ 9AAA 3E F8        	ld a,$f8
 367+ 9AAC 80           	add b
 368+ 9AAD 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9AB0 18 1C        	jr 3F
 370+ 9AB2 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AB5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AB6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AB7 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9ABA 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9ABD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9ABF 20 0A        	jr nz,2F
 377+ 9AC1 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AC4 23           	inc hl
 379+ 9AC5 22 C7 88     	ld (Posicion_actual),hl
 380+ 9AC8 CD 82 9C     	call Genera_coordenadas
 381+ 9ACB
 382+ 9ACB              ; Inicia el puntero de Sprite.
 383+ 9ACB
 384+ 9ACB CD 8F 8C     2 call Inicia_puntero_objeto_der
 385+ 9ACE C9           3 ret
 386+ 9ACF
 387+ 9ACF              ; ******************************************************************************************************************************************************************************************
 388+ 9ACF              ;
 389+ 9ACF              ;	15/02/23
 390+ 9ACF              ;
 391+ 9ACF              ;	Mov_left.
 392+ 9ACF              ;
 393+ 9ACF              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9ACF              ;
 395+ 9ACF              Mov_left
 396+ 9ACF
 397+ 9ACF 21 F3 88     	ld hl,Ctrl_0
 398+ 9AD2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9AD4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9AD4              ; 																	; _ en el caso de que no lo haya.
 401+ 9AD4 3A F3 88     	ld a,(Ctrl_0)
 402+ 9AD7 CB 77        	bit 6,a
 403+ 9AD9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9ADB
 405+ 9ADB CD F1 9B     	call Stop_Amadeus_left
 406+ 9ADE C8           	ret z
 407+ 9ADF 20 4A        	jr nz,8F
 408+ 9AE1
 409+ 9AE1 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9AE4 A7           	and a
 411+ 9AE5 20 44        	jr nz,8F
 412+ 9AE7
 413+ 9AE7 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9AEA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9AEB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9AED
 417+ 9AED              ; ---------- ---------- ----------
 418+ 9AED
 419+ 9AED 3A DA 88     	ld a,(Vel_left)
 420+ 9AF0 FE 02        	cp 2
 421+ 9AF2 28 0F        	jr z,1F
 422+ 9AF4 38 04        	jr c,6F
 423+ 9AF6 FE 04        	cp 4
 424+ 9AF8 28 12        	jr z,7F
 425+ 9AFA
 426+ 9AFA              ; ---------- ---------- ----------
 427+ 9AFA
 428+ 9AFA 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9AFD FE F8        	cp $f8
 430+ 9AFF 20 2A        	jr nz,8F
 431+ 9B01 18 10        	jr 4F
 432+ 9B03 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B06 FE F9        	cp $f9
 434+ 9B08 20 21        	jr nz,8F
 435+ 9B0A 18 07        	jr 4F
 436+ 9B0C 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B0F FE FB        	cp $fb
 438+ 9B11 20 18        	jr nz,8F
 439+ 9B13
 440+ 9B13              ; ---------- ---------- ----------
 441+ 9B13
 442+ 9B13              4
 443+ 9B13 CD 19 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B16              ;	call Reinicio
 445+ 9B16
 446+ 9B16              ; ---------- ---------- ----------
 447+ 9B16
 448+ 9B16 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B18 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B19
 451+ 9B19              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B19              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B19
 454+ 9B19 CD 32 9B     	call DESPLZ_IZQ
 455+ 9B1C C1           	pop bc
 456+ 9B1D 10 F9        	djnz 5B
 457+ 9B1F 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B22 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B23 22 C7 88     	ld (Posicion_actual),hl
 460+ 9B26 CD 82 9C     	call Genera_coordenadas
 461+ 9B29 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B2B
 463+ 9B2B              ; ---------- ---------- ----------
 464+ 9B2B
 465+ 9B2B              ; Movemos, no hay recolocación.
 466+ 9B2B
 467+ 9B2B 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9B2E CD 32 9B     	call DESPLZ_IZQ
 469+ 9B31 C9           2 ret
 470+ 9B32
 471+ 9B32              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B32              ;
 473+ 9B32              ;	22/9/22
 474+ 9B32
 475+ 9B32              DESPLZ_IZQ
 476+ 9B32
 477+ 9B32 CD 41 9B     	call Desplaza_izquierda
 478+ 9B35 CD 8D 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B38 CD B5 9B     	call Ciclo_completo_2
 480+ 9B3B 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B3E CB BE        	res 7,(hl)
 482+ 9B40 C9           	ret
 483+ 9B41
 484+ 9B41              Desplaza_izquierda
 485+ 9B41
 486+ 9B41 3A DA 88     	ld a,(Vel_left)
 487+ 9B44 47           	ld b,a
 488+ 9B45 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B48 23           1 inc hl
 490+ 9B49 23           	inc hl
 491+ 9B4A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B4C 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B4F CD 78 8C     	call Extrae_address
 494+ 9B52 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9B55
 496+ 9B55              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B55
 498+ 9B55              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B55              ; Cuántos movimientos hemos hecho ??
 500+ 9B55              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B55
 502+ 9B55 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B58 EB           	ex de,hl
 504+ 9B59 A7           	and a
 505+ 9B5A ED 52        	sbc hl,de
 506+ 9B5C CB 3D        	srl l
 507+ 9B5E 3E 08        6 ld a,8
 508+ 9B60 95           	sub l
 509+ 9B61 30 1E        	jr nc,3F
 510+ 9B63
 511+ 9B63              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B63              ; B="0".
 513+ 9B63
 514+ 9B63 04           4 inc b
 515+ 9B64 3C           	inc a
 516+ 9B65 20 FC        	jr nz,4B
 517+ 9B67 78           	ld a,b
 518+ 9B68 08           	ex af,af
 519+ 9B69 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B6C 23           5 inc hl
 521+ 9B6D 23           	inc hl
 522+ 9B6E 10 FC        	djnz 5B
 523+ 9B70 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B73 CD 78 8C     	call Extrae_address
 525+ 9B76 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9B79
 527+ 9B79              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B79              ; _(Posicion_actual).
 529+ 9B79
 530+ 9B79 21 C7 88     	ld hl,Posicion_actual
 531+ 9B7C 35           	dec (hl)
 532+ 9B7D 08           	ex af,af
 533+ 9B7E 6F           	ld l,a
 534+ 9B7F 18 DD        	jr 6B
 535+ 9B81
 536+ 9B81              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B81
 538+ 9B81 47           3 ld b,a
 539+ 9B82 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9B85 23           2 inc hl
 541+ 9B86 23           	inc hl
 542+ 9B87 10 FC        	djnz 2B
 543+ 9B89 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B8C C9           8 ret
 545+ 9B8D
 546+ 9B8D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B8D              ;
 548+ 9B8D              ;	modifica_parametros_1er_DESPLZ
 549+ 9B8D              ;
 550+ 9B8D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B8D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B8D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B8D
 554+ 9B8D 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B90 A7           	and a
 556+ 9B91 20 1E        	jr nz,1F
 557+ 9B93 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B94 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9B97 21 C6 88     	ld hl,Columns
 560+ 9B9A 34           	inc (hl)
 561+ 9B9B 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9B9E E6 01        	and 1
 563+ 9BA0 20 0F        	jr nz,1F
 564+ 9BA2 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BA5 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BA6 22 C7 88     	ld (Posicion_actual),hl
 567+ 9BA9 CD 82 9C     	call Genera_coordenadas
 568+ 9BAC CD 08 9C     	call Dec_CTRL_DESPLZ
 569+ 9BAF 18 03        	jr 2F
 570+ 9BB1 CD 08 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BB4 C9           2 ret
 572+ 9BB5
 573+ 9BB5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BB5
 575+ 9BB5 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BB8 FE F7        	cp $f7
 577+ 9BBA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BBC 30 2C        	jr nc,3F
 579+ 9BBE
 580+ 9BBE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BBE
 582+ 9BBE 06 00        	ld b,0
 583+ 9BC0 04           4 inc b
 584+ 9BC1 3C           	inc a
 585+ 9BC2 FE F7        	cp $f7
 586+ 9BC4 20 FA        	jr nz,4B
 587+ 9BC6 3E FF        	ld a,$ff
 588+ 9BC8 90           	sub b
 589+ 9BC9 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9BCC 18 1C        	jr 3F
 591+ 9BCE
 592+ 9BCE              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9BCE
 594+ 9BCE 21 C6 88     1 ld hl,Columns
 595+ 9BD1 35           	dec (hl)
 596+ 9BD2 AF           	xor a
 597+ 9BD3 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9BD6 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9BD9 E6 01        	and 1
 600+ 9BDB 28 0A        	jr z,2F
 601+ 9BDD 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9BE0 2B           	dec hl
 603+ 9BE1 22 C7 88     	ld (Posicion_actual),hl
 604+ 9BE4 CD 82 9C     	call Genera_coordenadas
 605+ 9BE7
 606+ 9BE7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9BE7
 608+ 9BE7 CD A2 8C     2 call Inicia_puntero_objeto_izq
 609+ 9BEA C9           3 ret
 610+ 9BEB
 611+ 9BEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9BEB              ;
 613+ 9BEB              ;	19/10/22
 614+ 9BEB              ;
 615+ 9BEB              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9BEB              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9BEB
 618+ 9BEB 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9BEE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9BF0 C9           	ret
 621+ 9BF1
 622+ 9BF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9BF1              ;
 624+ 9BF1              ;	19/10/22
 625+ 9BF1              ;
 626+ 9BF1              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9BF1              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9BF1
 629+ 9BF1 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BF4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BF6 C9           	ret
 632+ 9BF7
 633+ 9BF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BF7              ;
 635+ 9BF7              ;	24/7/22
 636+ 9BF7              ;
 637+ 9BF7              ;	Inc_CTRL_DESPLZ
 638+ 9BF7              ;
 639+ 9BF7              ;
 640+ 9BF7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BF7
 642+ 9BF7 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BFA 3A DB 88     	ld a,(Vel_right)
 644+ 9BFD A7           	and a
 645+ 9BFE 28 06        	jr z,1F
 646+ 9C00 47           	ld b,a
 647+ 9C01 34           3 inc (hl)
 648+ 9C02 10 FD        	djnz 3B
 649+ 9C04 18 01        	jr 2F
 650+ 9C06 34           1 inc (hl)
 651+ 9C07 C9           2 ret
 652+ 9C08
 653+ 9C08              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C08              ;
 655+ 9C08              ;	5/2/23
 656+ 9C08              ;
 657+ 9C08              ;	Dec_CTRL_DESPLZ
 658+ 9C08              ;
 659+ 9C08              ;
 660+ 9C08              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C08
 662+ 9C08 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C0B 3A DA 88     	ld a,(Vel_left)
 664+ 9C0E A7           	and a
 665+ 9C0F 28 06        	jr z,1F
 666+ 9C11 47           	ld b,a
 667+ 9C12 35           3 dec (hl)
 668+ 9C13 10 FD        	djnz 3B
 669+ 9C15 18 01        	jr 2F
 670+ 9C17 35           1 dec (hl)
 671+ 9C18 C9           2 ret
 672+ 9C19
 673+ 9C19              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C19
 675+ 9C19 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C1C 01 1F 00     	ld bc,31
 677+ 9C1F A7           	and a
 678+ 9C20 ED 4A        	adc hl,bc
 679+ 9C22 22 C7 88     	ld (Posicion_actual),hl
 680+ 9C25 21 F3 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C28 CB C6        	set 0,(hl)
 682+ 9C2A C9           	ret
 683+ 9C2B
 684+ 9C2B              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C2B
 686+ 9C2B 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C2E 01 1F 00     	ld bc,31
 688+ 9C31 A7           	and a
 689+ 9C32 ED 42        	sbc hl,bc
 690+ 9C34 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C37 21 F3 88     	ld hl,Ctrl_0
 692+ 9C3A CB CE        	set 1,(hl)
 693+ 9C3C C9           	ret
 694+ 9C3D
 695+ 9C3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C3D
 697+ 9C3D 24           Reaparece_abajo inc h
 698+ 9C3E 01 E0 17     	ld bc,$17e0
 699+ 9C41 A7           	and a
 700+ 9C42 ED 4A        	adc hl,bc
 701+ 9C44 22 C7 88     	ld (Posicion_actual),hl
 702+ 9C47 21 F3 88     	ld hl,Ctrl_0
 703+ 9C4A CB D6        	set 2,(hl)
 704+ 9C4C C9           	ret
 705+ 9C4D
 706+ 9C4D              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C4D
 708+ 9C4D 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C50 A7           	and a
 710+ 9C51 ED 42        	sbc hl,bc
 711+ 9C53 22 C7 88     	ld (Posicion_actual),hl
 712+ 9C56 21 F3 88     	ld hl,Ctrl_0
 713+ 9C59 CB DE        	set 3,(hl)
 714+ 9C5B C9           	ret
 715+ 9C5C
 716+ 9C5C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C5C              ;
 718+ 9C5C              ;	15/07/23
 719+ 9C5C
 720+ 9C5C              Reinicio
 721+ 9C5C
 722+ 9C5C              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C5C
 724+ 9C5C AF           	xor a
 725+ 9C5D 21 F8 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C60 CD 7E 9C     	call Limpia_contenido_hl
 727+ 9C63
 728+ 9C63 21 C7 88     	ld hl,Posicion_actual
 729+ 9C66 CD 7E 9C     	call Limpia_contenido_hl
 730+ 9C69
 731+ 9C69 CD AE 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C6C CD 38 9F     	call Inicia_Puntero_mov
 733+ 9C6F
 734+ 9C6F 21 FA 88     	ld hl,Incrementa_puntero
 735+ 9C72 06 05        	ld b,5
 736+ 9C74 77           1 ld (hl),a
 737+ 9C75 23           	inc hl
 738+ 9C76 10 FC        	djnz 1B
 739+ 9C78
 740+ 9C78 21 04 89     	ld hl,Ctrl_2
 741+ 9C7B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C7D
 743+ 9C7D C9           	ret
 744+ 9C7E
 745+ 9C7E 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C7F 23           	inc hl
 747+ 9C80 77           	ld (hl),a
 748+ 9C81 C9           	ret
 749+ 9C82
 750+ 9C82
# file closed: Direcciones.asm
1642  9C82              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C82              ; ------------------------------------------------------------------------
   2+ 9C82              ;
   3+ 9C82              ;	02/04/23
   4+ 9C82              ;
   5+ 9C82              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C82              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C82              ;
   8+ 9C82              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C82              ;
  10+ 9C82              ;	Modifica: A,BC y DE.
  11+ 9C82
  12+ 9C82 C5           Genera_coordenadas push bc
  13+ 9C83 E5           	push hl
  14+ 9C84 D5           	push de
  15+ 9C85
  16+ 9C85 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9C88
  18+ 9C88 7D           	ld a,l
  19+ 9C89 E6 1F        	and $1f
  20+ 9C8B 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C8E
  22+ 9C8E CD F7 98     	call calcula_tercio
  23+ 9C91 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C92
  25+ 9C92 1E 00        	ld e,0
  26+ 9C94 7D           	ld a,l
  27+ 9C95 E6 E0        	and $e0
  28+ 9C97 28 01        	jr z,1F
  29+ 9C99 04           	inc b
  30+ 9C9A
  31+ 9C9A 04           1 inc b
  32+ 9C9B 05           	dec b
  33+ 9C9C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C9E              ;														; _ , salimos.
  35+ 9C9E 1C           3 inc e
  36+ 9C9F D6 20        	sub 32
  37+ 9CA1 20 FB        	jr nz,3B
  38+ 9CA3 10 F5        	djnz 1B
  39+ 9CA5
  40+ 9CA5 7B           2 ld a,e
  41+ 9CA6 32 CC 88     	ld (Coordenada_y),a
  42+ 9CA9
  43+ 9CA9 D1           	pop de
  44+ 9CAA E1           	pop hl
  45+ 9CAB C1           	pop bc
  46+ 9CAC
  47+ 9CAC C9           	ret
  48+ 9CAD
  49+ 9CAD              ; ------------------------------------------------------------------------
  50+ 9CAD              ;	28/05/23
  51+ 9CAD              ;
  52+ 9CAD              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CAD              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CAD              ;
  55+ 9CAD              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CAD              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CAD              ;
  58+ 9CAD              ;		DE="$120d"
  59+ 9CAD              ;
  60+ 9CAD              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CAD              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CAD              ;
  63+ 9CAD              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CAD
  65+ 9CAD              ;	Modifica: A,BC y DE.
  66+ 9CAD
  67+ 9CAD
  68+ 9CAD              Genera_coordenadas_disparo
  69+ 9CAD
  70+ 9CAD              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CAD
  72+ 9CAD 7D           	ld a,l
  73+ 9CAE E6 1F        	and $1f
  74+ 9CB0 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CB1 CD F7 98     	call calcula_tercio
  76+ 9CB4 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CB5 1E 00        	ld e,0
  78+ 9CB7 7D           	ld a,l
  79+ 9CB8 E6 E0        	and $e0
  80+ 9CBA 28 01        	jr z,1F
  81+ 9CBC 04           	inc b
  82+ 9CBD 1C           1 inc e
  83+ 9CBE D6 20        	sub 32
  84+ 9CC0 20 FB        	jr nz,1B
  85+ 9CC2 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CC4 C9           	ret
  87+ 9CC5
# file closed: Genera_coordenadas.asm
1643  9CC5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9CC5              ; Relojes y temporizaciones.
   2+ 9CC5
   3+ 9CC5              ; ------------------------------------------------------
   4+ 9CC5              ;
   5+ 9CC5              ;	16/7/23
   6+ 9CC5              ;
   7+ 9CC5              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9CC5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9CC5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9CC5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9CC5              ;
  12+ 9CC5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9CC5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9CC5
  15+ 9CC5              ; Disparo_entidad db 1
  16+ 9CC5              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9CC5              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9CC5
  19+ 9CC5              Habilita_disparos
  20+ 9CC5
  21+ 9CC5 7E           	ld a,(hl)
  22+ 9CC6 A7           	and a
  23+ 9CC7 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9CC8
  25+ 9CC8 EB           	ex de,hl
  26+ 9CC9
  27+ 9CC9 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CCA C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9CCB
  30+ 9CCB              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9CCB
  32+ 9CCB 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9CCC 7E           	ld a,(hl)
  34+ 9CCD 23           	inc hl
  35+ 9CCE 77           	ld (hl),a
  36+ 9CCF
  37+ 9CCF EB           	ex de,hl						; Habilitamos disparo.
  38+ 9CD0 3E 01        	ld a,1
  39+ 9CD2 77           	ld (hl),a
  40+ 9CD3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1644  9CD4              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CD4
   2+ 9CD4
   3+ 9CD4              ;   07/07/23
   4+ 9CD4              ;
   5+ 9CD4              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CD4              ;
   7+ 9CD4              ;   Codificación:
   8+ 9CD4              ;
   9+ 9CD4              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CD4              ;
  11+ 9CD4              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CD4              ;
  13+ 9CD4              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CD4              ;
  15+ 9CD4              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CD4              ;
  17+ 9CD4              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CD4              ;                               ..... %01000010 Vel_up 4
  19+ 9CD4              ;                                               Vel_down 2
  20+ 9CD4              ;                               ..... $42
  21+ 9CD4              ;
  22+ 9CD4              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CD4              ;
  24+ 9CD4              ;                               ..... %01000010 Vel_left 4
  25+ 9CD4              ;                                               Vel_right 2
  26+ 9CD4              ;                               ..... $42
  27+ 9CD4              ;
  28+ 9CD4              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CD4              ;
  30+ 9CD4              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CD4              ;
  32+ 9CD4              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CD4              ;
  34+ 9CD4              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CD4              ;                                     $53
  36+ 9CD4              ;
  37+ 9CD4              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CD4              ;
  39+ 9CD4              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CD4              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CD4              ;
  42+ 9CD4              ;                       Arriba ..... $81
  43+ 9CD4              ;                       Arriba - izquierda ..... $a1
  44+ 9CD4              ;                       Arriba - derecha ..... $91
  45+ 9CD4              ;
  46+ 9CD4              ;                       Abajo ..... $41
  47+ 9CD4              ;                       Abajo - izquierda ..... $61
  48+ 9CD4              ;                       Abajo - derecha ..... $51
  49+ 9CD4              ;
  50+ 9CD4              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CD4              ;
  52+ 9CD4              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CD4              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CD4              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CD4              ;
  56+ 9CD4              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CD4              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CD4              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CD4              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CD4              ;
  61+ 9CD4              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CD4              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CD4              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CD4              ;
  65+ 9CD4              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CD4              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CD4              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CD4              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CD4
  70+ 9CD4              ; ----- ----- ----- ----- -----
  71+ 9CD4
  72+ 9CD4 00 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CD6 08 9D            defw F_1
  74+ 9CD8 12 9D            defw F_2
  75+ 9CDA 1C 9D            defw Codo_abajo_derecha
  76+ 9CDC 50 9D            defw Derecha_y_subiendo
  77+ 9CDE 5A 9D            defw Derecha_y_subiendo_1
  78+ 9CE0 64 9D            defw F_3
  79+ 9CE2 6E 9D            defw F_4
  80+ 9CE4 78 9D            defw Derecha_y_bajando
  81+ 9CE6 82 9D            defw Derecha_y_bajando_1
  82+ 9CE8 8C 9D            defw Derecha_y_bajando_2
  83+ 9CEA 96 9D            defw Codo_derecha_abajo
  84+ 9CEC C6 9D            defw Codo_abajo_izq.
  85+ 9CEE FA 9D            defw Izquierda_y_subiendo
  86+ 9CF0 04 9E            defw Izquierda_y_subiendo_1
  87+ 9CF2 0E 9E            defw F_5
  88+ 9CF4 18 9E            defw F_6
  89+ 9CF6 22 9E            defw Izquierda_y_bajando
  90+ 9CF8 2C 9E            defw Izquierda_y_bajando_1
  91+ 9CFA 36 9E            defw Izquierda_y_bajando_2
  92+ 9CFC 40 9E            defw Codo_izquierda_abajo
  93+ 9CFE 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D00
  95+ 9D00 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D04 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D08
  98+ 9D08 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D0C 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D10 08 00
 100+ 9D12 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D16 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D1A 0F FE
 102+ 9D1C
 103+ 9D1C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D20 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D24 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D28 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D2C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D30 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D34 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D38 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D3C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D40 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D44 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D48 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D4C 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D50
 117+ 9D50 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D54 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D58 06 00
 119+ 9D5A
 120+ 9D5A 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D5E 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D62 02 00
 122+ 9D64
 123+ 9D64 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D68 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D6C 04 00
 125+ 9D6E 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D72 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D76 08 00
 127+ 9D78
 128+ 9D78 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D7C 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D80 02 00
 130+ 9D82
 131+ 9D82 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D86 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D8A 06 00
 133+ 9D8C
 134+ 9D8C 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D90 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D94 06 00
 136+ 9D96
 137+ 9D96              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D96
 139+ 9D96 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DA2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DA6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DAA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DAE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DB2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DB6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DBA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DBE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DC2 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DC6
 152+ 9DC6 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DCA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DCE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DD2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DD6 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DDA 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9DDE 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9DE2 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DE6 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9DEA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9DEE 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DF2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DF6 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DFA
 166+ 9DFA 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DFE 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E02 06 00
 168+ 9E04
 169+ 9E04 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E08 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E0C 02 00
 171+ 9E0E
 172+ 9E0E 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E12 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E16 04 00
 174+ 9E18 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E1C 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E20 08 00
 176+ 9E22
 177+ 9E22 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E26 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E2A 02 00
 179+ 9E2C
 180+ 9E2C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E30 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E34 06 00
 182+ 9E36
 183+ 9E36 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E3A 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E3E 06 00
 185+ 9E40
 186+ 9E40 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E44 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E48 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E4C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E50 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E54 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E58 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E5C 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E60 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E64 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E68 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E6C 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E70
 199+ 9E70              ; ----- ----- ----- ----- -----
 200+ 9E70              ;
 201+ 9E70              ;   27/06/23
 202+ 9E70
 203+ 9E70              Movimiento
 204+ 9E70
 205+ 9E70              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E70
 207+ 9E70              ;    ld hl,(Posicion_actual)
 208+ 9E70
 209+ 9E70 3A 04 89         ld a,(Ctrl_2)
 210+ 9E73 CB 57            bit 2,a
 211+ 9E75 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E77
 213+ 9E77 2A F6 88         ld hl,(Puntero_mov)
 214+ 9E7A 7E               ld a,(hl)
 215+ 9E7B
 216+ 9E7B              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E7B
 218+ 9E7B              Inicia_desplazamiento.
 219+ 9E7B
 220+ 9E7B              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E7B
 222+ 9E7B CD 6F 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E7E
 224+ 9E7E              ; Iniciamos (Repetimos_mov).
 225+ 9E7E
 226+ 9E7E 7E               ld a,(hl)
 227+ 9E7F E6 0F            and $0f
 228+ 9E81 32 FC 88         ld (Repetimos_desplazamiento),a
 229+ 9E84 32 FD 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E87
 231+ 9E87              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E87
 233+ 9E87 23               inc hl
 234+ 9E88 7E               ld a,(hl)
 235+ 9E89 32 FF 88         ld (Cola_de_desplazamiento),a
 236+ 9E8C 2B               dec hl
 237+ 9E8D
 238+ 9E8D 21 04 89         ld hl,Ctrl_2
 239+ 9E90 CB D6            set 2,(hl)
 240+ 9E92
 241+ 9E92              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E92              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E92
 244+ 9E92              Desplazamiento_iniciado
 245+ 9E92
 246+ 9E92 CD 43 9F         call Aplica_desplazamiento
 247+ 9E95
 248+ 9E95 3A 04 89         ld a,(Ctrl_2)
 249+ 9E98 CB 67            bit 4,a
 250+ 9E9A C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E9B
 252+ 9E9B 21 FC 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E9E 35               dec (hl)
 254+ 9E9F C0               ret nz
 255+ 9EA0
 256+ 9EA0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EA0              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EA0              ; Analiza (Cola_de_desplazamiento).
 259+ 9EA0
 260+ 9EA0 3A FF 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EA3 A7               and a
 262+ 9EA4 CC 98 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EA7 28 30            jr z,Reinicia_el_movimiento
 264+ 9EA9
 265+ 9EA9 FE FF            cp $ff
 266+ 9EAB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EAD
 268+ 9EAD FE FE            cp $fe
 269+ 9EAF CC 1C 9F         call z,Fijamos_bucle
 270+ 9EB2 28 25            jr z,Reinicia_el_movimiento
 271+ 9EB4
 272+ 9EB4 FE FD            cp $fd
 273+ 9EB6 20 11            jr nz,1F
 274+ 9EB8
 275+ 9EB8              ; ---
 276+ 9EB8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EB8
 278+ 9EB8 3A 04 89         ld a,(Ctrl_2)
 279+ 9EBB CB 5F            bit 3,a
 280+ 9EBD 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EBF
 282+ 9EBF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EBF
 284+ 9EBF 21 04 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EC2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9EC4
 287+ 9EC4 CD 2D 9F         call Inicia_Repetimos_movimiento
 288+ 9EC7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9EC9              ; ---
 290+ 9EC9
 291+ 9EC9 FE 01        1 cp 1
 292+ 9ECB CA 06 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9ECE
 294+ 9ECE 3D               dec a
 295+ 9ECF 32 FF 88         ld (Cola_de_desplazamiento),a
 296+ 9ED2
 297+ 9ED2 3A FD 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9ED5 32 FC 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9ED8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9ED8 C9               ret
 301+ 9ED9
 302+ 9ED9              Reinicia_el_movimiento
 303+ 9ED9
 304+ 9ED9 3A 04 89         ld a,(Ctrl_2)
 305+ 9EDC CB 5F            bit 3,a
 306+ 9EDE 28 1B            jr z,2F
 307+ 9EE0
 308+ 9EE0              ; (Cola_de_desplazamiento)="254".
 309+ 9EE0
 310+ 9EE0 21 FE 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9EE3 35               dec (hl)
 312+ 9EE4 20 15            jr nz,2F
 313+ 9EE6
 314+ 9EE6              ; Fin de las repeticiones del último movimiento.
 315+ 9EE6
 316+ 9EE6 21 04 89         ld hl,Ctrl_2
 317+ 9EE9 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9EEB
 319+ 9EEB 2A F6 88         ld hl,(Puntero_mov)
 320+ 9EEE 23               inc hl
 321+ 9EEF 23               inc hl
 322+ 9EF0 23               inc hl
 323+ 9EF1 22 F6 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EF4              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EF4 7E               ld a,(hl)
 326+ 9EF5 32 FF 88         ld (Cola_de_desplazamiento),a
 327+ 9EF8
 328+ 9EF8 C3 A0 9E         jp Cola
 329+ 9EFB
 330+ 9EFB CD 38 9F     2 call Inicia_Puntero_mov
 331+ 9EFE
 332+ 9EFE 21 04 89         ld hl,Ctrl_2
 333+ 9F01 CB 96            res 2,(hl)
 334+ 9F03
 335+ 9F03 C3 70 9E         jp Movimiento
 336+ 9F06
 337+ 9F06              Siguiente_desplazamiento
 338+ 9F06
 339+ 9F06              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F06              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F06
 342+ 9F06 21 04 89         ld hl,Ctrl_2
 343+ 9F09 CB 96            res 2,(hl)
 344+ 9F0B
 345+ 9F0B 2A F6 88         ld hl,(Puntero_mov)
 346+ 9F0E 23               inc hl
 347+ 9F0F 23               inc hl
 348+ 9F10 22 F6 88         ld (Puntero_mov),hl
 349+ 9F13
 350+ 9F13 7E               ld a,(hl)
 351+ 9F14 A7               and a
 352+ 9F15 CC 98 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F18 CA D9 9E         jp z,Reinicia_el_movimiento
 354+ 9F1B
 355+ 9F1B C9               ret
 356+ 9F1C
 357+ 9F1C              ; Subrutinas -----------------------------------------
 358+ 9F1C              ; ---------- --------- --------- ---------- ----------
 359+ 9F1C              ;
 360+ 9F1C              ;   24/07/23
 361+ 9F1C              ;
 362+ 9F1C              ;   Fijamos_bucle
 363+ 9F1C              ;
 364+ 9F1C              ;
 365+ 9F1C
 366+ 9F1C              Fijamos_bucle
 367+ 9F1C
 368+ 9F1C 3A FA 88         ld a,(Incrementa_puntero)
 369+ 9F1F 3C               inc a
 370+ 9F20 32 FB 88         ld (Incrementa_puntero_backup),a
 371+ 9F23
 372+ 9F23 CD 98 9F         call Incrementa_Puntero_indice_mov
 373+ 9F26 2A F4 88         ld hl,(Puntero_indice_mov)
 374+ 9F29 22 F8 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9F2C C9               ret
 376+ 9F2D
 377+ 9F2D              ; ---------- --------- --------- ---------- ----------
 378+ 9F2D              ;
 379+ 9F2D              ;   07/7/23
 380+ 9F2D              ;
 381+ 9F2D              ;   Inicia_Repetimos_movimiento
 382+ 9F2D              ;
 383+ 9F2D              ;
 384+ 9F2D
 385+ 9F2D              Inicia_Repetimos_movimiento
 386+ 9F2D
 387+ 9F2D              ; Iniciamos (Repetimos_movimiento).
 388+ 9F2D
 389+ 9F2D DD 2A F6 88      ld ix,(Puntero_mov)
 390+ 9F31 DD 7E 02         ld a,(ix+2)
 391+ 9F34 32 FE 88         ld (Repetimos_movimiento),a
 392+ 9F37
 393+ 9F37 C9               ret
 394+ 9F38
 395+ 9F38              ; ---------- --------- --------- ---------- ----------
 396+ 9F38              ;
 397+ 9F38              ;   26/6/23
 398+ 9F38              ;
 399+ 9F38              ;   Inicia_Puntero_mov
 400+ 9F38              ;
 401+ 9F38              ;
 402+ 9F38
 403+ 9F38 2A F4 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F3B 5E               ld e,(hl)
 405+ 9F3C 23               inc hl
 406+ 9F3D 56               ld d,(hl)
 407+ 9F3E EB               ex de,hl
 408+ 9F3F 22 F6 88         ld (Puntero_mov),hl
 409+ 9F42 C9               ret
 410+ 9F43
 411+ 9F43              ; ---------- --------- --------- ---------- ----------
 412+ 9F43              ;
 413+ 9F43              ;   27/06/23
 414+ 9F43              ;
 415+ 9F43              ;   Aplica_movimiento.
 416+ 9F43
 417+ 9F43              Aplica_desplazamiento
 418+ 9F43
 419+ 9F43              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F43
 421+ 9F43 2A F6 88         ld hl, (Puntero_mov)
 422+ 9F46
 423+ 9F46 7E               ld a,(hl)
 424+ 9F47 E6 F0            and $f0
 425+ 9F49 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F4A
 427+ 9F4A CB 7E            bit 7,(hl)
 428+ 9F4C 28 03            jr z,1F
 429+ 9F4E CD 6E 99         call Mov_up
 430+ 9F51 2A F6 88     1 ld hl, (Puntero_mov)
 431+ 9F54 CB 76            bit 6,(hl)
 432+ 9F56 28 03            jr z,2F
 433+ 9F58 CD 3D 99         call Mov_down
 434+ 9F5B 2A F6 88     2 ld hl, (Puntero_mov)
 435+ 9F5E CB 6E            bit 5,(hl)
 436+ 9F60 28 03            jr z,3F
 437+ 9F62 CD CF 9A         call Mov_left
 438+ 9F65 2A F6 88     3 ld hl, (Puntero_mov)
 439+ 9F68 CB 66            bit 4,(hl)
 440+ 9F6A C8               ret z
 441+ 9F6B CD B1 99         call Mov_right
 442+ 9F6E C9               ret
 443+ 9F6F
 444+ 9F6F              ; ---------- --------- --------- ---------- ----------
 445+ 9F6F              ;
 446+ 9F6F              ;   26/06/23
 447+ 9F6F              ;
 448+ 9F6F              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F6F
 450+ 9F6F              Ajusta_velocidad_desplazamiento
 451+ 9F6F
 452+ 9F6F              ; 1er byte de la cadena de movimiento.
 453+ 9F6F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F6F
 455+ 9F6F CD 8D 9F         call Extrae_nibble_alto
 456+ 9F72
 457+ 9F72 32 DC 88         ld (Vel_up),a
 458+ 9F75 79               ld a,c
 459+ 9F76 E6 0F            and $0f
 460+ 9F78 32 DD 88         ld (Vel_down),a
 461+ 9F7B
 462+ 9F7B              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F7B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F7B
 465+ 9F7B 23               inc hl
 466+ 9F7C CD 8D 9F         call Extrae_nibble_alto
 467+ 9F7F
 468+ 9F7F 32 DA 88         ld (Vel_left),a
 469+ 9F82 79               ld a,c
 470+ 9F83 E6 0F            and $0f
 471+ 9F85 32 DB 88         ld (Vel_right),a
 472+ 9F88
 473+ 9F88              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F88
 475+ 9F88 23               inc hl
 476+ 9F89 22 F6 88         ld (Puntero_mov),hl
 477+ 9F8C C9               ret
 478+ 9F8D
 479+ 9F8D 06 04        Extrae_nibble_alto ld b,4
 480+ 9F8F 7E               ld a,(hl)
 481+ 9F90 4F               ld c,a
 482+ 9F91 E6 F0            and $f0
 483+ 9F93 CB 3F        1 srl a
 484+ 9F95 10 FC            djnz 1B
 485+ 9F97 C9               ret
 486+ 9F98
 487+ 9F98              ; ---------- --------- --------- ---------- ----------
 488+ 9F98              ;
 489+ 9F98              ;   5/7/23
 490+ 9F98              ;
 491+ 9F98              ;   Incrementa_Puntero_indice_mov
 492+ 9F98
 493+ 9F98              Incrementa_Puntero_indice_mov
 494+ 9F98
 495+ 9F98 21 FA 88         ld hl,Incrementa_puntero
 496+ 9F9B 34               inc (hl)
 497+ 9F9C
 498+ 9F9C 2A F4 88         ld hl,(Puntero_indice_mov)
 499+ 9F9F 01 02 00         ld bc,2
 500+ 9FA2 A7               and a
 501+ 9FA3 09               add hl,bc
 502+ 9FA4 22 F4 88         ld (Puntero_indice_mov),hl
 503+ 9FA7
 504+ 9FA7 7E               ld a,(hl)
 505+ 9FA8 A7               and a
 506+ 9FA9
 507+ 9FA9              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FA9
 509+ 9FA9              ;    jr z,$
 510+ 9FA9
 511+ 9FA9              ;! Reinicia el Patrón de movimiento.
 512+ 9FA9
 513+ 9FA9 CC AE 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FAC
 515+ 9FAC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FAD
 517+ 9FAD C9               ret
 518+ 9FAE
 519+ 9FAE
 520+ 9FAE              ; ---------- --------- --------- ---------- ----------
 521+ 9FAE              ;
 522+ 9FAE              ;   24/07/23
 523+ 9FAE              ;
 524+ 9FAE              ;   Inicializa_Puntero_indice_mov
 525+ 9FAE
 526+ 9FAE              Inicializa_Puntero_indice_mov
 527+ 9FAE
 528+ 9FAE              ; Existe etiqueta de bucle principal???
 529+ 9FAE
 530+ 9FAE 2A F8 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FB1 24               inc h
 532+ 9FB2 25               dec h
 533+ 9FB3 28 05            jr z,2F
 534+ 9FB5
 535+ 9FB5 22 F4 88         ld (Puntero_indice_mov),hl
 536+ 9FB8 18 14            jr 3F
 537+ 9FBA
 538+ 9FBA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FBA
 540+ 9FBA 3A FA 88     2 ld a,(Incrementa_puntero)
 541+ 9FBD 47               ld b,a
 542+ 9FBE
 543+ 9FBE 2A F4 88         ld hl,(Puntero_indice_mov)
 544+ 9FC1 2B           1 dec hl
 545+ 9FC2 2B               dec hl
 546+ 9FC3 10 FC            djnz 1B
 547+ 9FC5 22 F4 88         ld (Puntero_indice_mov),hl
 548+ 9FC8
 549+ 9FC8 AF               xor a
 550+ 9FC9 32 FA 88         ld (Incrementa_puntero),a
 551+ 9FCC 18 06            jr 4F
 552+ 9FCE
 553+ 9FCE 3A FB 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9FD1 32 FA 88         ld (Incrementa_puntero),a
 555+ 9FD4 C9           4 ret
 556+ 9FD5
 557+ 9FD5
 558+ 9FD5
# file closed: Patrones_de_mov.asm
1645  9FD5              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FD5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FD5              ;
   3+ 9FD5              ;	12/12/23
   4+ 9FD5              ;
   5+ 9FD5              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FD5
   7+ 9FD5              ;	ADC HL,SP	LD (addr),SP
   8+ 9FD5              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FD5              ;	ADD IX,SP	LD SP,nn
  10+ 9FD5              ; 	ADD IY,SP	LD SP,HL
  11+ 9FD5              ;				LD SP,IX
  12+ 9FD5              ;	DEC SP		LD SP,IY
  13+ 9FD5
  14+ 9FD5              ;	EX (SP),HL
  15+ 9FD5              ;	EX (SP),IX
  16+ 9FD5              ;	EX (SP),IY
  17+ 9FD5
  18+ 9FD5              ;	INC SP
  19+ 9FD5
  20+ 9FD5                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 17 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ;   Se trata de una entidad guía ???
  39+ 7FA5
  40+ 7FA5
  41+ 7FA5
  42+ 7FA5
  43+ 7FA5 3A 04 89         ld a,(Ctrl_2)
  44+ 7FA8 CB 6F            bit 5,a
  45+ 7FAA 28 09            jr z,9F
  46+ 7FAC
  47+ 7FAC              ;   Entidad_guía.
  48+ 7FAC              ;   Guardamos las variables_de_borrado en el {Almacen_de_movimientos_masticados}. Compondrán el siguiente movimiento de_
  49+ 7FAC              ;   _las entidades fantasma.
  50+ 7FAC
  51+ 7FAC ED 7B F1 88      ld sp,(Puntero_de_almacen_de_mov_masticados)
  52+ 7FB0
  53+ 7FB0 E5               push hl
  54+ 7FB1 DD E5            push ix
  55+ 7FB3 FD E5            push iy
  56+ 7FB5
  57+ 7FB5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  58+ 7FB5
  59+ 7FB5 31 E5 88     9 ld sp,Variables_de_borrado+6
  60+ 7FB8
  61+ 7FB8 E5               push hl
  62+ 7FB9 DD E5            push ix
  63+ 7FBB FD E5            push iy
  64+ 7FBD
  65+ 7FBD 31 F1 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  66+ 7FC0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  67+ 7FC2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  68+ 7FC2
  69+ 7FC2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  70+ 7FC5
  71+ 7FC5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  72+ 7FC6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  73+ 7FC8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  74+ 7FCA
  75+ 7FCA              ; Disparo o entidad?
  76+ 7FCA
  77+ 7FCA 3A 06 89         ld a,(Ctrl_1)
  78+ 7FCD CB 47            bit 0,a
  79+ 7FCF 28 05            jr z,2F
  80+ 7FD1
  81+ 7FD1 2A 1F 89         ld hl,(Stack_snapshot_disparos)
  82+ 7FD4 18 0F            jr 4F
  83+ 7FD6
  84+ 7FD6              ; No es disparo. Entidad/Amadeus ????
  85+ 7FD6
  86+ 7FD6 3A F3 88     2 ld a,(Ctrl_0)
  87+ 7FD9 CB 77            bit 6,a
  88+ 7FDB 28 05            jr z,7F
  89+ 7FDD
  90+ 7FDD              ; Guardamos foto de Amadeus.
  91+ 7FDD
  92+ 7FDD 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  93+ 7FE0 18 03            jr 4F
  94+ 7FE2
  95+ 7FE2 2A 1D 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  96+ 7FE5
  97+ 7FE5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  98+ 7FE7
  99+ 7FE7 D1           1 pop de
 100+ 7FE8 73               ld (hl),e
 101+ 7FE9 23               inc hl
 102+ 7FEA 72               ld (hl),d
 103+ 7FEB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 104+ 7FEC 10 F9            djnz 1B
 105+ 7FEE
 106+ 7FEE              ; Disparo o entidad ?
 107+ 7FEE
 108+ 7FEE 3A 06 89         ld a,(Ctrl_1)
 109+ 7FF1 CB 47            bit 0,a
 110+ 7FF3 28 05            jr z,5F
 111+ 7FF5
 112+ 7FF5 22 1F 89         ld (Stack_snapshot_disparos),hl
 113+ 7FF8 18 13            jr 6F
 114+ 7FFA
 115+ 7FFA              ; Entidad o Amadeus ?
 116+ 7FFA
 117+ 7FFA 3A F3 88     5 ld a,(Ctrl_0)
 118+ 7FFD CB 77            bit 6,a
 119+ 7FFF 28 09            jr z,8F
 120+ 8001
 121+ 8001 22 23 89         ld (End_Snapshot_Amadeus),hl
 122+ 8004 ED 7B 17 89      ld sp,(Stack)
 123+ 8008 FB               ei
 124+ 8009 C9               ret
 125+ 800A
 126+ 800A 22 1D 89     8 ld (Stack_snapshot),hl
 127+ 800D ED 7B 17 89  6 ld sp,(Stack)
 128+ 8011
 129+ 8011 FB               ei
 130+ 8012 C9               ret
 131+ 8013
 132+ 8013              ; -----------------------------------------------------------------------------
 133+ 8013              ;
 134+ 8013              ;   21/11/23
 135+ 8013
 136+ 8013              Limpia_y_reinicia_Stack_Snapshot
 137+ 8013
 138+ 8013              ;   Limpia Album_de_fotos.
 139+ 8013
 140+ 8013 2A 1D 89         ld hl,(Stack_snapshot)
 141+ 8016 7D               ld a,l
 142+ 8017 A7               and a
 143+ 8018 C8               ret z   ;   Salimos si el álbum está vacío.
 144+ 8019
 145+ 8019 47               ld b,a
 146+ 801A 04               inc b
 147+ 801B
 148+ 801B 36 00        1 ld (hl),0
 149+ 801D 2D               dec l
 150+ 801E 10 FB            djnz 1B
 151+ 8020
 152+ 8020              ;   Reinicializa (Stack_snapshot).
 153+ 8020
 154+ 8020 AF               xor a
 155+ 8021 32 1D 89         ld (Stack_snapshot),a
 156+ 8024
 157+ 8024 C9               ret
# file closed: Guarda_foto_registros.asm
1646  8025
1647  8025              	SAVESNA "Pruebas.sna", START
1648  8025
1649  8025
1650  8025
1651  8025
# file closed: Banco_de_pruebas.asm
