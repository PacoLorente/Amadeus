# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 50 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD F9 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 61 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E 3A 51 89     	ld a,(Contador_de_frames_2)
  58  AA21 FE 03        	cp 3
  59  AA23 20 09        	jr nz,1F
  60  AA25 3A 50 89     	ld a,(Contador_de_frames)
  61  AA28 FE D0        	cp $d0	; $d3 Último frame que no falla.
  62  AA2A 28 FE        	jr z,$
  63  AA2C 30 FE        	jr nc,$
  64  AA2E              ;! Debuggg
  65  AA2E
  66  AA2E FD E1        1 pop iy
  67  AA30 DD E1        	pop ix
  68  AA32 F1           	pop af
  69  AA33 C1           	pop bc
  70  AA34 D1           	pop de
  71  AA35 E1           	pop hl
  72  AA36 D9           	exx
  73  AA37 C1           	pop bc
  74  AA38 D1           	pop de
  75  AA39 E1           	pop hl
  76  AA3A 08           	ex af,af'
  77  AA3B F1           	pop af
  78  AA3C 08           	ex af,af'
  79  AA3D D9           	exx
  80  AA3E
  81  AA3E ED 7B 19 89  	ld sp,(Stack_3)
  82  AA42
  83  AA42 FB           	ei
  84  AA43 ED 4D        	reti
  85  AA45
  86  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  87  AA45
  88  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  89  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 5D 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 5D 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  90  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 8A 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 8A 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 8A 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 8A 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  91  88C6
  92  88C6              ; ******************************************************************************************************************************************************************************************
  93  88C6              ; Constantes.
  94  88C6              ; ******************************************************************************************************************************************************************************************
  95  88C6              ;
  96  88C6              ; 4/9/23
  97  88C6              ;
  98  88C6              ; Constantes generales.
  99  88C6              ;
 100  88C6
 101  88C6              Sprite_vacio equ $f000
 102  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 103  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 104  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 105  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 106  88C6
 107  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 108  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 109  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 110  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 111  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 112  88C6              ;
 113  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 114  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 115  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 116  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 117  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 118  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 119  88C6
 120  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 121  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 122  88C6
 123  88C6
 124  88C6
 125  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 126  88C6
 127  88C6              ; ******************************************************************************************************************************************************************************************
 128  88C6              ; Variables.
 129  88C6              ; ******************************************************************************************************************************************************************************************
 130  88C6              ;
 131  88C6              ; 28/07/23
 132  88C6              ;
 133  88C6              ; Variables de DRAW. (Motor principal).
 134  88C6              ;
 135  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 136  88C6
 137  88C6 00           Filas db 0												; Filas. [DRAW]
 138  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 139  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 140  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 141  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 142  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 143  88CE
 144  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 145  88CE
 146  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 147  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 148  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 149  88CF 00           Attr db 0												; Atributos de la entidad:
 150  88D0
 151  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 152  88D0              ;
 153  88D0              ;	COLORES: 0 ..... NEGRO
 154  88D0              ;    		 1 ..... AZUL
 155  88D0              ; 			 2 ..... ROJO
 156  88D0              ;			 3 ..... MAGENTA
 157  88D0              ; 			 4 ..... VERDE
 158  88D0              ; 			 5 ..... CIAN
 159  88D0              ;			 6 ..... AMARILLO
 160  88D0              ; 			 7 ..... BLANCO
 161  88D0
 162  88D0 00 00        Indice_Sprite_der defw 0
 163  88D2 00 00        Indice_Sprite_izq defw 0
 164  88D4 00 00        Puntero_DESPLZ_der defw 0
 165  88D6 00 00        Puntero_DESPLZ_izq defw 0
 166  88D8
 167  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 168  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 169  88DB
 170  88DB              ; Variables de objeto. (Características).
 171  88DB
 172  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 173  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 174  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 175  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 176  88DF
 177  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  88E0 00 00 00...  Variables_de_borrado ds 6
 181  88E6
 182  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 183  88E8 00 00        	defw 0
 184  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 185  88EC 00 00 00 00  	db 0,0,0,0
 186  88F0
 187  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  88F0
 189  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 190  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 191  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 192  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 193  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 194  88F1              ;
 195  88F1              ; 														DESCRIPCIÖN:
 196  88F1              ;
 197  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 198  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 199  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 200  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 201  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 202  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 203  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 204  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 205  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 206  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 207  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 208  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 209  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 210  88F1              ;
 211  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 212  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 213  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 214  88F1
 215  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 216  88F1
 217  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 218  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 219  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 220  88F7              ;
 221  88F7              ;
 222  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 223  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 224  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 225  88F8 00           Incrementa_puntero_backup db 0
 226  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 227  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 228  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 229  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 230  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 231  88FD              ;
 232  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 233  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 234  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 235  88FD              ;
 236  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 237  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 238  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 239  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 240  88FD              ;
 241  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 242  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 243  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 244  88FD
 245  88FD
 246  88FD              ; Variables de funcionamiento. [DRAW].
 247  88FD
 248  88FD 00           Columnas db 0
 249  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 250  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 251  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8901
 253  8901              ; variables de control general.
 254  8901
 255  8901 00           Ctrl_2 db 0
 256  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 257  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 258  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 259  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 260  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 261  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 262  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 263  8902              ;
 264  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 265  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 266  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 267  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 268  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 269  8902
 270  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 271  8903
 272  8903              ;! 61 Bytes por entidad.
 273  8903
 274  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 275  8903              ;					         		---------;      ;---------
 276  8903
 277  8903
 278  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 279  8903
 280  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 281  8904
 282  8904              ;														DESCRIPCIÓN:
 283  8904              ;
 284  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 285  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 286  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 287  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 288  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 289  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 290  8904
 291  8904              ;														BIT 3, Recarga de nueva oleada.
 292  8904              ;														BIT 4, Recarga de nueva oleada.
 293  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 294  8904              ;														BIT 6, **** Frame completo.
 295  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 296  8904
 297  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 298  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 299  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 300  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 301  8906
 302  8906 00           Ctrl_3 db 0												; Byte de control de propósito general.
 303  8907
 304  8907              ;														DESCRIPCIÓN:
 305  8907              ;
 306  8907              ;														BIT 0,
 307  8907
 308  8907              ; Gestión de ENTIDADES y CAJAS.
 309  8907
 310  8907 00 00        Puntero_store_caja defw 0
 311  8909 00 00        Puntero_restore_caja defw 0
 312  890B 00 00        Indice_restore_caja defw 0
 313  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 314  890E 00           Numero_parcial_de_entidades db 0
 315  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 316  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 317  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 318  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 319  8911              ;														; _ (Numero_de_malotes)="0".
 320  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 321  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 322  8915              ;														; _ puntero (Indice_entidades).
 323  8915
 324  8915
 325  8915              ;---------------------------------------------------------------------------------------------------------------
 326  8915              ;
 327  8915              ;	2/9/23
 328  8915              ;
 329  8915              ;	Álbumes.
 330  8915
 331  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 332  8917              ;														; _variable para almacenar lo posición del puntero_
 333  8917              ; 														; _de pila, SP.
 334  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 335  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 336  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 337  891B 00 00        Stack_snapshot defw 0
 338  891D 00 00        Stack_snapshot_disparos defw 0
 339  891F
 340  891F 00 00        End_Snapshot defw 0
 341  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 342  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 343  8923              ;														; _el snapshot de los registros del siguiente disparo.
 344  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 345  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 346  8925 00 00        End_Snapshot_1 defw 0
 347  8927 00 00        End_Snapshot_disparos_1 defw 0
 348  8929 00 00        End_Snapshot_2 defw 0
 349  892B 00 00        End_Snapshot_disparos_2 defw 0
 350  892D 00 00        End_Snapshot_3 defw 0
 351  892F 00 00        End_Snapshot_disparos_3 defw 0
 352  8931
 353  8931 00 00        Puntero_indice_album_de_fotos defw 0
 354  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 355  8935
 356  8935 00 00        Puntero_indice_End_Snapshot defw 0
 357  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 358  8939 00 00        Puntero_de_End_Snapshot defw 0
 359  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 360  893D
 361  893D              ;---------------------------------------------------------------------------------------------------------------
 362  893D
 363  893D              ; Gestión de Disparos.
 364  893D
 365  893D 00           Numero_de_disparotes db 0
 366  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 367  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 368  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 369  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 370  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 371  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 372  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 373  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 374  8945              ;														; _produzca colisión.
 375  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 376  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 377  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 378  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 379  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 380  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 381  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 382  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 383  8950
 384  8950              ;---------------------------------------------------------------------------------------------------------------
 385  8950
 386  8950              ; Relojes y temporizaciones.
 387  8950
 388  8950 00           Contador_de_frames db 0
 389  8951 00           Contador_de_frames_2 db 0
 390  8952
 391  8952 04           Clock_explosion db 4
 392  8953 1E           Clock_Entidades_en_curso db 30
 393  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 394  8955              ;														; Repite la oleada de entidades.
 395  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 396  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 397  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 398  8958
 399  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 400  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 401  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 402  895B
 403  895B              ;---------------------------------------------------------------------------------------------------------------
 404  895B
 405  895B              ; Gestión de NIVELES.
 406  895B
 407  895B 00           Nivel db 0												; Nivel actual del juego.
 408  895C 00 00        Puntero_indice_NIVELES defw 0
 409  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 410  8960              ; 														; _ que definen el NIVEL.
 411  8960              ; Y todo comienza aquí .....
 412  8960              ;
 413  8960              ; Rutina principal *************************************************************************************************************************************************************************
 414  8960              ;
 415  8960              ;	14/11/22
 416  8960
 417  8960              START
 418  8960
 419  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 420  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 421  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 422  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 423  8969 F3           	DI
 424  896A
 425  896A 3E 07        	ld a,%00000111
 426  896C CD 8A 99     	call Cls
 427  896F
 428  896F CD 63 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 429  8972
 430  8972              ; INICIALIZACIÓN.
 431  8972
 432  8972 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 433  8975
 434  8975 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 435  8978
 436  8978 CD 8B 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 437  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 438  897B CD A1 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 439  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 440  897E              ; ----------
 441  897E
 442  897E CD 13 8D     	call Restore_entidad
 443  8981
 444  8981 21 0E 89     	ld hl,Numero_parcial_de_entidades
 445  8984 46           	ld b,(hl)
 446  8985 04           	inc b
 447  8986 05           	dec b
 448  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 449  8989
 450  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 451  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 452  8989              ;	Pintamos el resto de entidades:
 453  8989
 454  8989              ;	INICIA ENTIDADES !!!!!
 455  8989
 456  8989 C5           1 push bc  												; Guardo el contador de entidades.
 457  898A CD 58 8B     	call Inicia_entidad
 458  898D C1           	pop bc
 459  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 460  8990
 461  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 462  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 463  8990
 464  8990 3A 03 89     	ld a,(Ctrl_1)
 465  8993 CB 5F        	bit 3,a
 466  8995 20 00        	jr nz,5F											; Loop
 467  8997
 468  8997              ; 	INICIA AMADEUS !!!!!
 469  8997
 470  8997              3
 471  8997
 472  8997              ;	call Restore_Amadeus
 473  8997              ;	call Inicia_Puntero_objeto
 474  8997              ;	call Draw
 475  8997              ;	call Guarda_foto_registros
 476  8997              ;	call Guarda_datos_de_borrado_Amadeus
 477  8997
 478  8997              ;	ld de,Amadeus_db
 479  8997              ;	call Store_Amadeus
 480  8997
 481  8997              ; 	INICIA DISPAROS !!!!!
 482  8997
 483  8997              ;	call Inicia_Puntero_Disparo_Entidades
 484  8997              ;	call Inicia_Puntero_Disparo_Amadeus
 485  8997
 486  8997              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 487  8997
 488  8997 CD 8B 8B     5 call Inicia_punteros_de_cajas
 489  899A CD 13 8D     	call Restore_entidad
 490  899D
 491  899D 3A 03 89     	ld a,(Ctrl_1)
 492  89A0 CB 5F        	bit 3,a
 493  89A2 28 07        	jr z,6F
 494  89A4
 495  89A4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 496  89A4
 497  89A4 21 03 89     	ld hl,Ctrl_1
 498  89A7 CB 9E        	res 3,(hl)
 499  89A9 18 04        	jr Main
 500  89AB
 501  89AB
 502  89AB              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 503  89AB              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 504  89AB              ; _ para situarnos en el siguiente album.
 505  89AB
 506  89AB CD D2 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 507  89AE F3           	di
 508  89AF
 509  89AF              ; ------------------------------------
 510  89AF
 511  89AF              Main
 512  89AF              ;
 513  89AF              ;	3/8/23
 514  89AF
 515  89AF 3E 01            ld a,1
 516  89B1 D3 FE        	out ($fe),a											; Azul.
 517  89B3
 518  89B3 FB           	ei
 519  89B4
 520  89B4 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 521  89B7 47           	ld b,a
 522  89B8 3A 50 89     	ld a,(Contador_de_frames)
 523  89BB B8           	cp b
 524  89BC 20 18        	jr nz,13F
 525  89BE
 526  89BE 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 527  89C1 47           	ld b,a
 528  89C2 3A 0F 89     	ld a,(Entidades_en_curso)
 529  89C5 B8           	cp b
 530  89C6 28 0E        	jr z,13F
 531  89C8 30 0C        	jr nc,13F
 532  89CA
 533  89CA 3C           	inc a
 534  89CB 32 0F 89     	ld (Entidades_en_curso),a
 535  89CE
 536  89CE 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 537  89D1
 538  89D1              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 539  89D1              ;! _ IMPREDECIBLE !!!!
 540  89D1
 541  89D1 C6 64        	add 100
 542  89D3 32 53 89     	ld (Clock_Entidades_en_curso),a
 543  89D6
 544  89D6              ; Habilita disparos.
 545  89D6
 546  89D6 21 55 89     13 ld hl,Disparo_Amadeus
 547  89D9 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 548  89DC CD 4E 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 549  89DF
 550  89DF 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 551  89E2 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 552  89E5 CD 4E 9D     	call Habilita_disparos
 553  89E8
 554  89E8              ; COLISIONES.
 555  89E8
 556  89E8 CD 5F 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 557  89EB
 558  89EB              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 559  89EB              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 560  89EB              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 561  89EB
 562  89EB AF           	xor a
 563  89EC 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 564  89EF
 565  89EF CD 8B 8B     	call Inicia_punteros_de_cajas
 566  89F2 CD 13 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 567  89F5              ; 														; _ en DRAW.
 568  89F5 3A C6 88     	ld a,(Filas)
 569  89F8 A7           	and a
 570  89F9 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 571  89FB CD 25 8D     	call Incrementa_punteros_de_cajas
 572  89FE 18 F2        	jr 12B
 573  8A00
 574  8A00              ; ---------------------------------------------------------------------------------------
 575  8A00
 576  8A00 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 577  8A03 47               ld b,a
 578  8A04 A7           	and a
 579  8A05 20 14        	jr nz,11F
 580  8A07
 581  8A07 21 03 89     	ld hl,Ctrl_1
 582  8A0A CB 66        	bit 4,(hl)
 583  8A0C C2 9C 8A     	jp nz,16F
 584  8A0F
 585  8A0F 21 03 89     	ld hl,Ctrl_1
 586  8A12 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 587  8A14
 588  8A14 3A 50 89     	ld a,(Contador_de_frames)
 589  8A17 3C           	inc a
 590  8A18 32 54 89     	ld (Activa_recarga_cajas),a
 591  8A1B
 592  8A1B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 593  8A1B
 594  8A1B 3A 0F 89     11 ld a,(Entidades_en_curso)
 595  8A1E A7           	and a
 596  8A1F CA 9C 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 597  8A22 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 598  8A23
 599  8A23              ; Código que ejecutamos con cada entidad:
 600  8A23              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 601  8A23
 602  8A23 C5           15 push bc 												; Nº de entidades en curso.
 603  8A24
 604  8A24              ; Impacto ???
 605  8A24
 606  8A24 3A DF 88     	ld a,(Impacto)
 607  8A27 A7           	and a
 608  8A28 28 32        	jr z,8F
 609  8A2A
 610  8A2A              ; Hay Impacto en esta entidad.
 611  8A2A
 612  8A2A 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 613  8A2D 35           	dec (hl)
 614  8A2E 20 66        	jr nz,17F
 615  8A30
 616  8A30              ;! Velocidad de la animación de la explosión.
 617  8A30
 618  8A30 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 619  8A32              ;														; _,(velocidad de la explosión).
 620  8A32
 621  8A32              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 622  8A32 18 FE        	jr $
 623  8A34
 624  8A34 CD E6 8D     	call Repone_datos_de_borrado
 625  8A37 CD 2C 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 626  8A3A
 627  8A3A
 628  8A3A              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 629  8A3A
 630  8A3A 3A 01 89     	ld a,(Ctrl_2)
 631  8A3D CB 4F        	bit 1,a
 632  8A3F 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 633  8A41
 634  8A41              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 635  8A41
 636  8A41 3A CE 88     	ld a,(CTRL_DESPLZ)
 637  8A44 A7           	and a
 638  8A45 20 08        	jr nz,18F
 639  8A47
 640  8A47 21 84 84     	ld hl,Indice_Explosion_2x2-2
 641  8A4A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 642  8A4D 18 06        	jr 19F
 643  8A4F
 644  8A4F 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 645  8A52 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 646  8A55
 647  8A55 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 648  8A58 CB CE        	set 1,(hl)
 649  8A5A 18 22        	jr 7F
 650  8A5C
 651  8A5C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 652  8A5C              ; _con las coordenadas de la entidad almacenada en DRAW.
 653  8A5C
 654  8A5C 3A 03 89     8 ld a,(Ctrl_1)
 655  8A5F CB 57        	bit 2,a
 656  8A61 28 1B        	jr z,7F
 657  8A63
 658  8A63 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 659  8A66 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 660  8A67              ;														; E contiene la coordenada_X del disparo.
 661  8A67 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 662  8A6A              ;														; H FILA, (Coordenada_y de la entidad).
 663  8A6A A7           	and a
 664  8A6B ED 52        	sbc hl,de
 665  8A6D
 666  8A6D CD 96 92     	call Determina_resultado_comparativa
 667  8A70
 668  8A70 78           	ld a,b
 669  8A71 A7           	and a
 670  8A72 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 671  8A74
 672  8A74              ; ----- ----- -----
 673  8A74
 674  8A74 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 675  8A76 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 676  8A79
 677  8A79 21 03 89     	ld hl,Ctrl_1
 678  8A7C CB 96        	res 2,(hl)
 679  8A7E
 680  8A7E CD F4 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 681  8A81
 682  8A81 3A F0 88     	ld a,(Ctrl_0)
 683  8A84 CB 67        	bit 4,a
 684  8A86 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 685  8A88
 686  8A88              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 687  8A88              ; [[[
 688  8A88 CD AE 8D     	call Detecta_disparo_entidad
 689  8A8B              ; ]]]
 690  8A8B
 691  8A8B CD 6C 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 692  8A8E CD B4 8D     	call Guarda_datos_de_borrado
 693  8A91
 694  8A91 21 F0 88     	ld hl,Ctrl_0
 695  8A94 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 696  8A96
 697  8A96 CD D8 8C     17 call Store_Restore_cajas
 698  8A99
 699  8A99 C1           	pop bc
 700  8A9A 10 87        	djnz 15B
 701  8A9C
 702  8A9C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 703  8A9C              ; Hemos gestionado todas las unidades.
 704  8A9C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 705  8A9C
 706  8A9C              ;	ld hl,Ctrl_1
 707  8A9C              ;	res 2,(hl)
 708  8A9C
 709  8A9C CD D2 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 710  8A9F              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 711  8A9F              ;														; _ interrupción.
 712  8A9F              ; ----------------------------------------
 713  8A9F
 714  8A9F 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 715  8AA2 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 716  8AA4 CA AF 89     	jp z,Main
 717  8AA7
 718  8AA7 3A 50 89     	ld a,(Contador_de_frames)
 719  8AAA 47           	ld b,a
 720  8AAB 3A 54 89     	ld a,(Activa_recarga_cajas)
 721  8AAE B8           	cp b
 722  8AAF 28 08        	jr z,20F
 723  8AB1
 724  8AB1 21 03 89     	ld hl,Ctrl_1
 725  8AB4 CB E6        	set 4,(hl)
 726  8AB6 C3 AF 89     	jp Main
 727  8AB9
 728  8AB9 21 03 89     20 ld hl,Ctrl_1
 729  8ABC CB A6        	res 4,(hl)
 730  8ABE
 731  8ABE F3           	di
 732  8ABF
 733  8ABF 3A 50 89     	ld a,(Contador_de_frames)
 734  8AC2
 735  8AC2              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 736  8AC2              ;! _ IMPREDECIBLE !!!!
 737  8AC2
 738  8AC2 C6 0A        	add 10
 739  8AC4 32 53 89     	ld (Clock_Entidades_en_curso),a
 740  8AC7
 741  8AC7 C3 75 89     	jp 4B
 742  8ACA
 743  8ACA C9           	ret
 744  8ACB
 745  8ACB              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 746  8ACB
 747  8ACB              Gestiona_Amadeus
 748  8ACB
 749  8ACB 3E 04            ld a,4
 750  8ACD D3 FE        	out ($fe),a											; Azul.
 751  8ACF
 752  8ACF CD 3A 8D     	call Restore_Amadeus
 753  8AD2
 754  8AD2              ;! Activa/desactiva impacto con Amadeus.
 755  8AD2
 756  8AD2 3A DF 88     	ld a,(Impacto)
 757  8AD5 A7           	and a
 758  8AD6 20 FE        	jr nz,$
 759  8AD8
 760  8AD8 CD 45 8B     	call Mov_Amadeus
 761  8ADB
 762  8ADB 3A F0 88     	ld a,(Ctrl_0)
 763  8ADE CB 67        	bit 4,a
 764  8AE0 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 765  8AE2
 766  8AE2 CD 6C 8B     	call Guarda_foto_entidad_a_pintar
 767  8AE5 CD C6 8D     	call Guarda_datos_de_borrado_Amadeus
 768  8AE8
 769  8AE8 21 F0 88     14 ld hl,Ctrl_0
 770  8AEB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 771  8AED
 772  8AED 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 773  8AF0 CD 4C 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 774  8AF3
 775  8AF3              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 776  8AF3
 777  8AF3              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 778  8AF3
 779  8AF3              ;	call Calcula_numero_de_disparotes
 780  8AF3
 781  8AF3 C9           	ret
 782  8AF4
 783  8AF4              ; --------------------------------------------------------------------------------------------------------------
 784  8AF4              ;
 785  8AF4              ;	27/05/23
 786  8AF4
 787  8AF4              Mov_obj
 788  8AF4
 789  8AF4 3A 01 89     	ld a,(Ctrl_2)
 790  8AF7 CB 4F        	bit 1,a
 791  8AF9 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 792  8AFB
 793  8AFB              ; Explosión:
 794  8AFB
 795  8AFB 3A 02 89     	ld a,(Frames_explosion)
 796  8AFE A7           	and a
 797  8AFF 20 11        	jr nz,4F
 798  8B01
 799  8B01              ; Una alimaña menos!!!!!!!!!1
 800  8B01
 801  8B01 CD 55 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 802  8B04 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 803  8B07 35           	dec (hl)
 804  8B08 21 0F 89     	ld hl,Entidades_en_curso
 805  8B0B 35           	dec (hl)
 806  8B0C 21 0D 89     	ld hl,Numero_de_entidades
 807  8B0F 35           	dec (hl)
 808  8B10 18 32        	jr 3F
 809  8B12
 810  8B12              ; -----
 811  8B12
 812  8B12              ;	`Movemos´ la explosión.
 813  8B12
 814  8B12 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 815  8B15 23           	inc hl
 816  8B16 23           	inc hl
 817  8B17 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 818  8B1A CD 8A 8C     	call Extrae_address
 819  8B1D 22 CA 88     	ld (Puntero_objeto),hl
 820  8B20
 821  8B20 21 02 89     	ld hl,Frames_explosion
 822  8B23 35           	dec (hl)
 823  8B24
 824  8B24              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 825  8B24 18 1E        	jr 3F
 826  8B26
 827  8B26 AF           2 xor a
 828  8B27 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 829  8B2A
 830  8B2A              ; Movemos Entidades malignas.
 831  8B2A
 832  8B2A CD F9 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 833  8B2D
 834  8B2D 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 835  8B30 CB 67        	bit 4,a
 836  8B32 C8           	ret z
 837  8B33
 838  8B33              ; Ha habido desplazamiento de la entidad maligna.
 839  8B33              ; Ha llegado a zona de AMADEUS ???
 840  8B33
 841  8B33 3A CD 88     	ld a,(Coordenada_y)
 842  8B36 FE 14        	cp $14
 843  8B38 D4 24 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 844  8B3B              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 845  8B3B              ; ---------
 846  8B3B
 847  8B3B CD 73 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 848  8B3E CD E6 8D     	call Repone_datos_de_borrado
 849  8B41 CD 2C 8C     	call Limpia_Variables_de_borrado
 850  8B44
 851  8B44 C9           3 ret													; _de la misma.
 852  8B45
 853  8B45              ; --------------------------------------------------------------------------------------------------------------
 854  8B45              ;
 855  8B45              ;	29/1/23
 856  8B45
 857  8B45              Mov_Amadeus
 858  8B45
 859  8B45 CD 77 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 860  8B48
 861  8B48 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 862  8B4B CB 67        	bit 4,a
 863  8B4D C8           	ret z
 864  8B4E
 865  8B4E              ; ---------
 866  8B4E
 867  8B4E CD 73 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 868  8B51 CD D6 8D     	call Repone_datos_de_borrado_Amadeus
 869  8B54 CD 2C 8C     	call Limpia_Variables_de_borrado
 870  8B57
 871  8B57 C9           	ret
 872  8B58
 873  8B58              ; -----------------------------------------------------------------------------------
 874  8B58
 875  8B58 CD 90 8C     Inicia_entidad	call Inicia_Puntero_objeto
 876  8B5B CD 9E 99     	call Recompone_posicion_inicio
 877  8B5E CD 7D 93     	call Draw
 878  8B61 CD A0 7F     	call Guarda_foto_registros
 879  8B64 CD B4 8D     	call Guarda_datos_de_borrado
 880  8B67 F3           	di
 881  8B68 CD D8 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 882  8B6B C9           	ret
 883  8B6C
 884  8B6C              ; --------------------------------------------------------------------------------------------------------------
 885  8B6C              ;
 886  8B6C              ;	31/08/23
 887  8B6C              ;
 888  8B6C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 889  8B6C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 890  8B6C
 891  8B6C              Guarda_foto_entidad_a_pintar
 892  8B6C
 893  8B6C              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 894  8B6C
 895  8B6C CD 7D 93     	call Draw
 896  8B6F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 897  8B72 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 898  8B73
 899  8B73              ; --------------------------------------------------------------------------------------------------------------
 900  8B73              ;
 901  8B73              ;	19/9/23
 902  8B73
 903  8B73 21 C6 88     Prepara_var_pintado ld hl,Filas
 904  8B76 11 E6 88     	ld de,Variables_de_pintado
 905  8B79 01 08 00     	ld bc,8
 906  8B7C ED B0        	ldir
 907  8B7E C9           	ret
 908  8B7F
 909  8B7F              ; --------------------------------------------------------------------------------------------------------------
 910  8B7F
 911  8B7F 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 912  8B82 11 C6 88     	ld de,Filas
 913  8B85 01 08 00     	ld bc,8
 914  8B88 ED B0        	ldir
 915  8B8A C9           	ret
 916  8B8B
 917  8B8B              ; *************************************************************************************************************************************************************
 918  8B8B              ;
 919  8B8B              ; 8/1/23
 920  8B8B              ;
 921  8B8B              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 922  8B8B              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 923  8B8B              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 924  8B8B
 925  8B8B              ; Destruye HL y DE !!!!!
 926  8B8B
 927  8B8B              Inicia_punteros_de_cajas
 928  8B8B
 929  8B8B 21 8C 85     	ld hl,Indice_de_cajas
 930  8B8E CD 8A 8C         call Extrae_address
 931  8B91 22 07 89         ld (Puntero_store_caja),hl
 932  8B94 21 8E 85     	ld hl,Indice_de_cajas+2
 933  8B97 22 0B 89     	ld (Indice_restore_caja),hl
 934  8B9A CD 8A 8C     	call Extrae_address
 935  8B9D 22 09 89     	ld (Puntero_restore_caja),hl
 936  8BA0 C9               ret
 937  8BA1
 938  8BA1              ; ---------------------------------------------------------------
 939  8BA1              ;
 940  8BA1              ;	9/8/23
 941  8BA1              ;
 942  8BA1              ;	Inicialización y gestión de álbumes de fotos y cajas.
 943  8BA1
 944  8BA1              Inicia_punteros_de_albumes_y_malotes
 945  8BA1
 946  8BA1 21 EC 84     	ld hl,Indice_album_de_fotos
 947  8BA4 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 948  8BA7 CD 8A 8C     	call Extrae_address
 949  8BAA 22 1B 89     	ld (Stack_snapshot),hl
 950  8BAD
 951  8BAD 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 952  8BB0 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 953  8BB3 CD 8A 8C     	call Extrae_address
 954  8BB6 22 1D 89     	ld (Stack_snapshot_disparos),hl
 955  8BB9
 956  8BB9 21 FC 84     	ld hl,Indice_End_Snapshot
 957  8BBC 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 958  8BBF CD 8A 8C     	call Extrae_address
 959  8BC2 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 960  8BC5
 961  8BC5 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 962  8BC8 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 963  8BCB CD 8A 8C     	call Extrae_address
 964  8BCE 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 965  8BD1
 966  8BD1 C9           	ret
 967  8BD2
 968  8BD2              ;	23/9/23
 969  8BD2
 970  8BD2              Avanza_puntero_de_album_de_fotos_y_malotes
 971  8BD2
 972  8BD2              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 973  8BD2
 974  8BD2              ; Estamos en el último álbum del índice???.
 975  8BD2
 976  8BD2 F3           	di
 977  8BD3 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 978  8BD6 01 F2 84     	ld bc,Indice_album_de_fotos+6
 979  8BD9 A7           	and a
 980  8BDA ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 981  8BDC 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 982  8BDE FB           	ei
 983  8BDF
 984  8BDF 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 985  8BE2 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 986  8BE4 76           	halt
 987  8BE5 C9           	ret
 988  8BE6
 989  8BE6 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
 990  8BE9 23           	inc hl
 991  8BEA 23           	inc hl
 992  8BEB 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 993  8BEE CD 8A 8C     	call Extrae_address
 994  8BF1 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 995  8BF4
 996  8BF4 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
 997  8BF7 23           	inc hl
 998  8BF8 23           	inc hl
 999  8BF9 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1000  8BFC CD 8A 8C     	call Extrae_address
1001  8BFF 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1002  8C02
1003  8C02 FB           	ei
1004  8C03 C9           	ret
1005  8C04
1006  8C04              ; *************************************************************************************************************************************************************
1007  8C04              ;
1008  8C04              ; 8/1/23
1009  8C04              ;
1010  8C04              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1011  8C04
1012  8C04 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1013  8C07 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1014  8C0A C9           	ret
1015  8C0B 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1016  8C0E 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1017  8C11 C9           	ret
1018  8C12
1019  8C12              ; -------------------------------------------------------------------------------------------------------------
1020  8C12              ;
1021  8C12              ; 21/9/23
1022  8C12              ;
1023  8C12
1024  8C12              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1025  8C12
1026  8C12              Limpia_album_Amadeus
1027  8C12
1028  8C12 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1029  8C15 7E           	ld a,(hl)
1030  8C16 A7           	and a
1031  8C17 C8           	ret z
1032  8C18
1033  8C18 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1034  8C1B 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1035  8C1E 01 0B 00     	ld bc,11
1036  8C21 AF           	xor a
1037  8C22 77           	ld (hl),a
1038  8C23 ED B0        	ldir
1039  8C25
1040  8C25 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1041  8C28 22 23 89     	ld (End_Snapshot_Amadeus),hl
1042  8C2B
1043  8C2B C9           	ret
1044  8C2C
1045  8C2C 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1046  8C2F 11 E1 88     	ld de,Variables_de_borrado+1
1047  8C32 01 05 00     	ld bc,5
1048  8C35 AF           	xor a
1049  8C36 77           	ld (hl),a
1050  8C37 ED B0        	ldir
1051  8C39 C9           	ret
1052  8C3A
1053  8C3A              ; -------------------------------------------------------------------------------------------------------------
1054  8C3A              ;
1055  8C3A              ; 8/9/23
1056  8C3A              ;
1057  8C3A
1058  8C3A              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1059  8C3A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1060  8C3A
1061  8C3A              Calcula_numero_de_malotes
1062  8C3A
1063  8C3A 21 00 70     	ld hl,Album_de_fotos
1064  8C3D EB           	ex de,hl
1065  8C3E 2A 1F 89     	ld hl,(End_Snapshot)
1066  8C41
1067  8C41 7C           	ld a,h
1068  8C42 A7           	and a
1069  8C43 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1070  8C45
1071  8C45 06 00        4 ld b,0
1072  8C47 7D           	ld a,l
1073  8C48 93           	sub e
1074  8C49 28 07        	jr z,1F
1075  8C4B
1076  8C4B              ; Nº de malotes no es "0".
1077  8C4B
1078  8C4B D6 06        2 sub 6
1079  8C4D 04           	inc b
1080  8C4E A7           	and a
1081  8C4F 20 FA        	jr nz,2B
1082  8C51 78           	ld a,b
1083  8C52
1084  8C52 32 10 89     1 ld (Numero_de_malotes),a
1085  8C55 C9           	ret
1086  8C56
1087  8C56              ; -------------------------------------------------------------------------------------------------------------
1088  8C56              ;
1089  8C56              ; 8/9/23
1090  8C56              ;
1091  8C56
1092  8C56              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1093  8C56              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1094  8C56
1095  8C56              Calcula_malotes_Amadeus
1096  8C56
1097  8C56 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1098  8C59 EB           	ex de,hl
1099  8C5A 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1100  8C5D
1101  8C5D 7C           	ld a,h
1102  8C5E A7           	and a
1103  8C5F 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1104  8C61
1105  8C61 06 00        	ld b,0
1106  8C63 7D           	ld a,l
1107  8C64 93           	sub e
1108  8C65 28 07        	jr z,1F
1109  8C67
1110  8C67              ; Nº de malotes no es "0".
1111  8C67
1112  8C67 D6 06        2 sub 6
1113  8C69 04           	inc b
1114  8C6A A7           	and a
1115  8C6B 20 FA        	jr nz,2B
1116  8C6D 78           	ld a,b
1117  8C6E
1118  8C6E 32 10 89     1 ld (Numero_de_malotes),a
1119  8C71 C9           	ret
1120  8C72
1121  8C72              ; -------------------------------------------------------------------------------------------------------------
1122  8C72              ;
1123  8C72              ; 28/2/23
1124  8C72              ;
1125  8C72
1126  8C72              Calcula_numero_de_disparotes
1127  8C72
1128  8C72 21 50 71     	ld hl,Album_de_fotos_disparos
1129  8C75 EB           	ex de,hl
1130  8C76 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1131  8C79
1132  8C79 06 00        	ld b,0
1133  8C7B 7D           	ld a,l
1134  8C7C 93           	sub e
1135  8C7D 28 07        	jr z,1F
1136  8C7F
1137  8C7F              ; Nº de malotes no es "0".
1138  8C7F
1139  8C7F D6 06        2 sub 6
1140  8C81 04           	inc b
1141  8C82 A7           	and a
1142  8C83 20 FA        	jr nz,2B
1143  8C85 78           	ld a,b
1144  8C86
1145  8C86 32 3D 89     1 ld (Numero_de_disparotes),a
1146  8C89 C9           	ret
1147  8C8A
1148  8C8A              ; *************************************************************************************************************************************************************
1149  8C8A              ;
1150  8C8A              ; 20/10/22
1151  8C8A              ;
1152  8C8A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1153  8C8A              ;
1154  8C8A              ; Destruye el puntero y DE !!!!!
1155  8C8A
1156  8C8A 5E           Extrae_address ld e,(hl)
1157  8C8B 23           	inc hl
1158  8C8C 56           	ld d,(hl)
1159  8C8D 2B           	dec hl
1160  8C8E EB           	ex de,hl
1161  8C8F C9           	ret
1162  8C90
1163  8C90              ; *************************************************************************************************************************************************************
1164  8C90              ;
1165  8C90              ;	7/2/23
1166  8C90              ;
1167  8C90              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1168  8C90              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1169  8C90              ;
1170  8C90              ;   Destruye HL y BC !!!!!,
1171  8C90              ;
1172  8C90              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1173  8C90              ;					"0" ..... Izquierda.
1174  8C90
1175  8C90              Inicia_Puntero_objeto
1176  8C90
1177  8C90 3A DA 88     	ld a,(Cuad_objeto)
1178  8C93 E6 01        	and 1
1179  8C95 F5           	push af
1180  8C96 CC B4 8C     	call z,Inicia_puntero_objeto_izq
1181  8C99 F1           	pop af
1182  8C9A 28 2B        	jr z,1F
1183  8C9C CD A1 8C     	call Inicia_puntero_objeto_der
1184  8C9F 18 26        	jr 1F
1185  8CA1
1186  8CA1              ; Arrancamos desde la parte izquierda de la pantalla.
1187  8CA1              ; Iniciamos (Indice_Sprite_der).
1188  8CA1
1189  8CA1 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1190  8CA4 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1191  8CA7 CD 8A 8C     	call Extrae_address
1192  8CAA 22 CA 88     	ld (Puntero_objeto),hl
1193  8CAD
1194  8CAD 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1195  8CB0 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1196  8CB3 C9           	ret
1197  8CB4
1198  8CB4              ; Arrancamos desde la parte derecha de la pantalla.
1199  8CB4              ; Iniciamos (Indice_Sprite_izq).
1200  8CB4
1201  8CB4 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1202  8CB7 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1203  8CBA CD 8A 8C     	call Extrae_address
1204  8CBD 22 CA 88     	ld (Puntero_objeto),hl
1205  8CC0
1206  8CC0 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1207  8CC3 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1208  8CC6 C9           	ret
1209  8CC7
1210  8CC7              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1211  8CC7
1212  8CC7 21 40 83     1 ld hl,Amadeus
1213  8CCA ED 4B CA 88  	ld bc,(Puntero_objeto)
1214  8CCE B7 ED 42     	sub hl,bc
1215  8CD1 C0           	ret nz
1216  8CD2 21 F0 88     	ld hl,Ctrl_0
1217  8CD5 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1218  8CD7 C9           	ret 												; _de nuestra nave en los extremos.
1219  8CD8
1220  8CD8              ; *************************************************************************************************************************************************************
1221  8CD8              ;
1222  8CD8              ;	14/5/23
1223  8CD8              ;
1224  8CD8              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1225  8CD8              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1226  8CD8
1227  8CD8              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1228  8CD8              ;	_de la 2ª y 3ª entidad respectivamente.
1229  8CD8
1230  8CD8              Store_Restore_cajas
1231  8CD8
1232  8CD8 E5           	push hl
1233  8CD9 D5           	push de
1234  8CDA C5            	push bc
1235  8CDB
1236  8CDB              ;	STORE !!!!!
1237  8CDB              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1238  8CDB
1239  8CDB 21 C6 88     	ld hl,Filas
1240  8CDE ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1241  8CE2 01 3D 00     	ld bc,61
1242  8CE5 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1243  8CE7
1244  8CE7              ; 	Entidad_sospechosa. 20/4/23
1245  8CE7
1246  8CE7 3A DF 88     	ld a,(Impacto)
1247  8CEA A7           	and a
1248  8CEB 28 0C        	jr z,1F
1249  8CED
1250  8CED 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1251  8CF0 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1252  8CF3 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1253  8CF4 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1254  8CF6 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1255  8CF9
1256  8CF9              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1257  8CF9
1258  8CF9 2A 09 89     1 ld hl,(Puntero_restore_caja)
1259  8CFC 7E           	ld a,(hl)
1260  8CFD A7           	and a
1261  8CFE F5           	push af
1262  8CFF 28 08        	jr z,2F
1263  8D01
1264  8D01 11 C6 88     	ld de,Filas
1265  8D04 01 3D 00     	ld bc,61
1266  8D07 ED B0        	ldir
1267  8D09
1268  8D09 CD 25 8D     2 call Incrementa_punteros_de_cajas
1269  8D0C
1270  8D0C F1           	pop af
1271  8D0D 28 EA        	jr z,1B
1272  8D0F
1273  8D0F C1           	pop bc
1274  8D10 D1           	pop de
1275  8D11 E1           	pop hl
1276  8D12
1277  8D12 C9           	ret
1278  8D13
1279  8D13              ; **************************************************************************************************
1280  8D13              ;
1281  8D13              ;	12/05/23
1282  8D13              ;
1283  8D13              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1284  8D13
1285  8D13 E5           Restore_entidad push hl
1286  8D14 D5           	push de
1287  8D15 C5            	push bc
1288  8D16
1289  8D16 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1290  8D19 11 C6 88     	ld de,Filas
1291  8D1C 01 3D 00     	ld bc,61
1292  8D1F ED B0        	ldir
1293  8D21
1294  8D21 C1           	pop bc
1295  8D22 D1           	pop de
1296  8D23 E1           	pop hl
1297  8D24 C9           	ret
1298  8D25
1299  8D25              ; **************************************************************************************************
1300  8D25              ;
1301  8D25              ;	08/05/23
1302  8D25              ;
1303  8D25              ;	Incrementamos los dos punteros de entidades. (+1).
1304  8D25
1305  8D25              Incrementa_punteros_de_cajas
1306  8D25
1307  8D25 2A 09 89     	ld hl,(Puntero_restore_caja)
1308  8D28 22 07 89     	ld (Puntero_store_caja),hl
1309  8D2B 2A 0B 89     	ld hl,(Indice_restore_caja)
1310  8D2E 23           	inc hl
1311  8D2F 23           	inc hl
1312  8D30 22 0B 89     	ld (Indice_restore_caja),hl
1313  8D33 CD 8A 8C         call Extrae_address
1314  8D36 22 09 89         ld (Puntero_restore_caja),hl
1315  8D39 C9               ret
1316  8D3A
1317  8D3A              ; **************************************************************************************************
1318  8D3A              ;
1319  8D3A              ;	25/01/23
1320  8D3A              ;
1321  8D3A              ;	Restore_Amadeus
1322  8D3A              ;
1323  8D3A              ;	Cargamos en DRAW los parámetros de Amadeus.
1324  8D3A              ;
1325  8D3A
1326  8D3A E5           Restore_Amadeus	push hl
1327  8D3B D5           	push de
1328  8D3C C5            	push bc
1329  8D3D 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1330  8D40 11 C6 88     	ld de,Filas
1331  8D43 01 3D 00     	ld bc,61
1332  8D46 ED B0        	ldir
1333  8D48 C1           	pop bc
1334  8D49 D1           	pop de
1335  8D4A E1           	pop hl
1336  8D4B C9           	ret
1337  8D4C
1338  8D4C              ; *************************************************************************************************************************************************************
1339  8D4C              ;
1340  8D4C              ;	29/04/23
1341  8D4C              ;
1342  8D4C              ;	Store_Amadeus
1343  8D4C              ;
1344  8D4C              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1345  8D4C              ;
1346  8D4C              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1347  8D4C              ;
1348  8D4C              ;	DESTRUYE: HL y BC y DE.
1349  8D4C
1350  8D4C 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1351  8D4F 01 3D 00     	ld bc,61
1352  8D52 ED B0        	ldir
1353  8D54 C9           	ret
1354  8D55
1355  8D55              ; -----------------------------------------------------------
1356  8D55              ;
1357  8D55              ;	27/04/23
1358  8D55              ;
1359  8D55              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1360  8D55              ;
1361  8D55              ;	Destruye: HL,BC,DE,A
1362  8D55
1363  8D55 21 C6 88     Borra_datos_entidad ld hl,Filas
1364  8D58 01 3C 00     	ld bc,60
1365  8D5B AF           	xor a
1366  8D5C 77           	ld (hl),a
1367  8D5D 11 C7 88     	ld de,Filas+1
1368  8D60 ED B0        	ldir
1369  8D62 C9           	ret
1370  8D63
1371  8D63              ; -----------------------------------------------------------
1372  8D63
1373  8D63              ; Teclado.
1374  8D63
1375  8D63 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1376  8D65 DB FE        	in a,($fe)
1377  8D67 E6 01        	and $01
1378  8D69 28 02        	jr z,1f
1379  8D6B 18 F6        	jr Pulsa_ENTER
1380  8D6D C9           1 ret
1381  8D6E
1382  8D6E              ; **************************************************************************************************
1383  8D6E              ;
1384  8D6E              ; Temporización.
1385  8D6E
1386  8D6E              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1387  8D6E              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1388  8D6E              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1389  8D6E              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1390  8D6E
1391  8D6E              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1392  8D6E              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1393  8D6E              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1394  8D6E
1395  8D6E              ; A partir de $4f61 no hace falta DELAY.
1396  8D6E
1397  8D6E              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1398  8D6E
1399  8D6E 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1400  8D71 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1401  8D72 78           	LD A,B
1402  8D73 A7           	AND A
1403  8D74 20 FB        	JR NZ,wait
1404  8D76 C9           	RET
1405  8D77
1406  8D77              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1407  8D77              ;
1408  8D77              ;	5/3/23
1409  8D77              ;
1410  8D77              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1411  8D77
1412  8D77              Movimiento_Amadeus
1413  8D77
1414  8D77              ; Disparo.
1415  8D77
1416  8D77 3A 55 89     	ld a,(Disparo_Amadeus)
1417  8D7A A7           	and a
1418  8D7B 20 02        	jr nz,1F
1419  8D7D 18 15        	jr 2F
1420  8D7F
1421  8D7F 3E F7        1 ld a,$f7													; "5" para disparar.
1422  8D81 DB FE        	in a,($fe)
1423  8D83 E6 10        	and $10
1424  8D85
1425  8D85 F5           	push af
1426  8D86 CC 87 8E     	call z,Genera_disparo
1427  8D89 F1           	pop af
1428  8D8A 20 08        	jr nz,2F
1429  8D8C
1430  8D8C 3A 55 89     	ld a,(Disparo_Amadeus)
1431  8D8F EE 01        	xor 1
1432  8D91 32 55 89     	ld (Disparo_Amadeus),a
1433  8D94
1434  8D94 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1435  8D96 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1436  8D98 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1437  8D9A CC 58 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1438  8D9D
1439  8D9D 3E F7        	ld a,$f7
1440  8D9F DB FE        	in a,($fe)
1441  8DA1 E6 01        	and $01
1442  8DA3 C8           	ret z
1443  8DA4
1444  8DA4 3E F7        	ld a,$f7
1445  8DA6 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1446  8DA8 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1447  8DAA CC 3A 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1448  8DAD C9           	ret
1449  8DAE
1450  8DAE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1451  8DAE              ;
1452  8DAE              ;	Rutina provisional para que los malotes cagen balas.
1453  8DAE
1454  8DAE              Detecta_disparo_entidad
1455  8DAE
1456  8DAE 3A 58 89     	ld a,(Disparo_entidad)
1457  8DB1 A7           	and a
1458  8DB2 C8           	ret z
1459  8DB3
1460  8DB3              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1461  8DB3
1462  8DB3              ;	ld a,$7f				; Detecta SPACE.
1463  8DB3              ;	in a,($fe)
1464  8DB3              ;	and 1
1465  8DB3              ;	ret nz
1466  8DB3
1467  8DB3              ;	call Genera_disparo
1468  8DB3 C9           	ret
1469  8DB4
1470  8DB4              ; ----------------------------------------------------------------------
1471  8DB4              ;
1472  8DB4              ;	8/9/23
1473  8DB4
1474  8DB4              Guarda_datos_de_borrado
1475  8DB4
1476  8DB4 F3           	di
1477  8DB5
1478  8DB5 2A 1B 89     	ld hl,(Stack_snapshot)
1479  8DB8
1480  8DB8 2B           	dec hl
1481  8DB9 7E           	ld a,(hl)
1482  8DBA A7           	and a
1483  8DBB C8           	ret z										; Salimos si es álbum está vacío.
1484  8DBC
1485  8DBC 11 E5 88     	ld de,Variables_de_borrado+5
1486  8DBF 01 06 00     	ld bc,6
1487  8DC2 ED B8        	lddr
1488  8DC4
1489  8DC4 FB           	ei
1490  8DC5
1491  8DC5 C9           	ret
1492  8DC6
1493  8DC6              ; ----------------------------------------------------------------------
1494  8DC6              ;
1495  8DC6              ;	8/9/23
1496  8DC6
1497  8DC6 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1498  8DC9 2B            	dec hl
1499  8DCA 7E           	ld a,(hl)
1500  8DCB A7           	and a
1501  8DCC C8           	ret z										; Salimos si es álbum está vacío.
1502  8DCD
1503  8DCD 11 E5 88     	ld de,Variables_de_borrado+5
1504  8DD0 01 06 00     	ld bc,6
1505  8DD3 ED B8        	lddr
1506  8DD5 C9           	ret
1507  8DD6
1508  8DD6              ; ----------------------------------------------------------------------
1509  8DD6              ;
1510  8DD6              ;	9/9/23
1511  8DD6
1512  8DD6              Repone_datos_de_borrado_Amadeus
1513  8DD6
1514  8DD6 21 E0 88     	ld hl,Variables_de_borrado
1515  8DD9 11 A0 72     	ld de,Album_de_fotos_Amadeus
1516  8DDC 01 06 00     	ld bc,6
1517  8DDF ED B0        	ldir
1518  8DE1
1519  8DE1 EB           	ex de,hl
1520  8DE2 22 23 89     	ld (End_Snapshot_Amadeus),hl
1521  8DE5
1522  8DE5 C9           	ret
1523  8DE6
1524  8DE6              ; ----------------------------------------------------------------------
1525  8DE6              ;
1526  8DE6              ;	18/9/23
1527  8DE6              ;
1528  8DE6
1529  8DE6              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1530  8DE6              ;	_ Album_de_fotos correspondiente.
1531  8DE6
1532  8DE6              ;	DI.
1533  8DE6
1534  8DE6              Repone_datos_de_borrado
1535  8DE6
1536  8DE6 F3           	di
1537  8DE7
1538  8DE7 ED 5B 1B 89  	ld de,(Stack_snapshot)
1539  8DEB 21 E0 88     	ld hl,Variables_de_borrado
1540  8DEE 01 06 00     	ld bc,6
1541  8DF1 ED B0        	ldir
1542  8DF3
1543  8DF3 EB           	ex de,hl
1544  8DF4 22 1B 89     	ld (Stack_snapshot),hl
1545  8DF7
1546  8DF7 FB           	ei
1547  8DF8
1548  8DF8 C9           	ret
1549  8DF9
1550  8DF9              ; ----------------------------------------------------------------------
1551  8DF9              ;
1552  8DF9              ;	11/8/23
1553  8DF9
1554  8DF9              Gestiona_entidades
1555  8DF9
1556  8DF9 3E 02        	ld a,2
1557  8DFB D3 FE            out ($fe),a											; Rojo.
1558  8DFD
1559  8DFD              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1560  8DFD              ; _ , no gestionamos los álbumes de fotos.
1561  8DFD
1562  8DFD 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1563  8E00 01 EC 84     	ld bc,Indice_album_de_fotos
1564  8E03 A7           	and a
1565  8E04 ED 42        	sbc hl,bc
1566  8E06
1567  8E06              ;	jr z,$
1568  8E06 C8           	ret z
1569  8E07
1570  8E07              ;	call Extrae_foto_disparos
1571  8E07              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1572  8E07
1573  8E07 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1574  8E0A
1575  8E0A              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1576  8E0A
1577  8E0A 3A 03 89     	ld a,(Ctrl_1)
1578  8E0D CB 6F        	bit 5,a
1579  8E0F 20 22        	jr nz,1F
1580  8E11
1581  8E11              ; No hemos terminado de guardar el último FRAME.
1582  8E11
1583  8E11 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1584  8E14 2B           	dec hl
1585  8E15 2B           	dec hl
1586  8E16 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1587  8E19
1588  8E19 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1589  8E1C 2B           	dec hl
1590  8E1D 2B           	dec hl
1591  8E1E 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1592  8E21 CD 8A 8C     	call Extrae_address
1593  8E24 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1594  8E27
1595  8E27 CD 8A 8C     	call Extrae_address
1596  8E2A
1597  8E2A              ; Esta vacío este album???
1598  8E2A
1599  8E2A 24           	inc h
1600  8E2B 25           	dec h
1601  8E2C 28 05        	jr z,1F
1602  8E2E
1603  8E2E              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1604  8E2E
1605  8E2E 22 1B 89     	ld (Stack_snapshot),hl
1606  8E31 18 09        	jr 2F
1607  8E33
1608  8E33              ; FRAME completo.
1609  8E33
1610  8E33 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1611  8E36 CD 8A 8C     	call Extrae_address
1612  8E39 22 1B 89     	ld (Stack_snapshot),hl
1613  8E3C
1614  8E3C              ;	En este punto:
1615  8E3C
1616  8E3C              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1617  8E3C              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1618  8E3C
1619  8E3C 21 03 89     2 ld hl,Ctrl_1
1620  8E3F CB AE        	res 5,(hl)
1621  8E41
1622  8E41 C9           	ret
1623  8E42
1624  8E42              ; -----------------------------------------------------------------------------------
1625  8E42
1626  8E42              Pinta_Amadeus
1627  8E42
1628  8E42 3E 06        	ld a,6
1629  8E44 D3 FE            out ($fe),a										; Amarillo
1630  8E46
1631  8E46 CD 56 8C        	call Calcula_malotes_Amadeus
1632  8E49 CD 0D 97     	call Extrae_foto_Amadeus
1633  8E4C CD 12 8C     	call Limpia_album_Amadeus
1634  8E4F
1635  8E4F C9           	ret
1636  8E50
1637  8E50              Pinta_entidades
1638  8E50
1639  8E50 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1640  8E53 01 EC 84     	ld bc,Indice_album_de_fotos
1641  8E56 A7           	and a
1642  8E57 ED 42        	sbc hl,bc
1643  8E59
1644  8E59              ;	jr z,$
1645  8E59 C8           	ret z
1646  8E5A
1647  8E5A              ; Pintamos siempre que esté completo Album_de_fotos.
1648  8E5A
1649  8E5A CD 3A 8C     	call Calcula_numero_de_malotes
1650  8E5D CD 8B 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1651  8E60
1652  8E60 C9           	ret
1653  8E61
1654  8E61              ; -----------------------------------------------------------------------------------
1655  8E61
1656  8E61              Actualiza_relojes
1657  8E61
1658  8E61 21 50 89     	ld hl,Contador_de_frames
1659  8E64 7E           	ld a,(hl)
1660  8E65 FE FF        	cp $ff
1661  8E67 20 04        	jr nz,1F
1662  8E69 34           	inc (hl)
1663  8E6A 21 51 89     	ld hl,Contador_de_frames_2
1664  8E6D 34           1 inc (hl)											; 0 - 255
1665  8E6E C9           	ret
1666  8E6F
1667  8E6F              ; ---------------------------------------------------------------
1668  8E6F              ;
1669  8E6F              ;	27/9/23
1670  8E6F
1671  8E6F              Guarda_parametros_DRAW
1672  8E6F
1673  8E6F 21 C6 88     	ld hl,Filas
1674  8E72 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1675  8E75 01 3D 00     	ld bc,61
1676  8E78 ED B0        	ldir
1677  8E7A C9           	ret
1678  8E7B
1679  8E7B              Recupera_parametros_DRAW
1680  8E7B
1681  8E7B 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1682  8E7E 11 C6 88     	ld de,Filas
1683  8E81 01 3D 00     	ld bc,61
1684  8E84 ED B0        	ldir
1685  8E86 C9           	ret
1686  8E87
1687  8E87              ; ---------------------------------------------------------------
1688  8E87
1689  8E87
1690  8E87              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E87              ; ******************************************************************************************************************************************************************************************
   2+ 8E87              ;
   3+ 8E87              ;   21/07/23
   4+ 8E87              ;
   5+ 8E87              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E87              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E87              ;
   8+ 8E87              ;
   9+ 8E87              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E87              ;
  11+ 8E87              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E87              ;               _ hacen las entidades hacia abajo.
  13+ 8E87              ;
  14+ 8E87              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E87              ;
  16+ 8E87              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E87              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E87              ;
  19+ 8E87              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E87              ;           _ la bala.
  21+ 8E87              ;
  22+ 8E87              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E87              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E87              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E87              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E87              ;           _ en el momento de generarse la bala)).
  27+ 8E87
  28+ 8E87              Genera_disparo
  29+ 8E87
  30+ 8E87              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E87              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E87              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E87              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E87              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E87              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E87              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E87
  38+ 8E87              ; Exclusiones:
  39+ 8E87
  40+ 8E87 3A DE 88         ld a,(Vel_down)
  41+ 8E8A 47               ld b,a
  42+ 8E8B 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E8E B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E8F D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E90 3A FD 88         ld a,(Columnas)
  46+ 8E93 47               ld b,a
  47+ 8E94 3A C7 88         ld a,(Columns)
  48+ 8E97 B8               cp b
  49+ 8E98 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E99
  51+ 8E99              ; ----- ----- -----
  52+ 8E99
  53+ 8E99 3A F0 88         ld a,(Ctrl_0)
  54+ 8E9C CB 77            bit 6,a
  55+ 8E9E 20 06            jr nz,14F
  56+ 8EA0
  57+ 8EA0 3A CD 88         ld a,(Coordenada_y)
  58+ 8EA3 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EA5 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EA6
  61+ 8EA6 21 00 80     14 ld hl,Indice_disparo
  62+ 8EA9 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8EAC 4F               ld c,a
  64+ 8EAD 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EAF              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EAF              ;                                            ""        ""       "f9", B="1"
  67+ 8EAF              ;                                            ""        ""       "fb", B="2"
  68+ 8EAF              ;                                            ""        ""       "fb", B="3"
  69+ 8EAF A7               and a
  70+ 8EB0 28 10            jr z,1F
  71+ 8EB2 E6 01            and 1
  72+ 8EB4 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EB5
  74+ 8EB5 79               ld a,c
  75+ 8EB6 16 F9            ld d,$f9
  76+ 8EB8 23           2 inc hl
  77+ 8EB9 23               inc hl
  78+ 8EBA 04               inc b
  79+ 8EBB BA               cp d
  80+ 8EBC 28 04            jr z,1F
  81+ 8EBE 14               inc d
  82+ 8EBF 14               inc d
  83+ 8EC0 18 F6            jr 2B
  84+ 8EC2
  85+ 8EC2 CD 8A 8C     1 call Extrae_address
  86+ 8EC5 E5               push hl
  87+ 8EC6 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EC8 DD 21 53 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8ECC
  90+ 8ECC              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8ECC              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8ECC
  93+ 8ECC 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8ECF CB 77            bit 6,a
  95+ 8ED1 20 04            jr nz,19F
  96+ 8ED3
  97+ 8ED3 AF               xor a
  98+ 8ED4 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8ED7
 100+ 8ED7 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EDA FE 02            cp 2
 102+ 8EDC 38 66            jr c,3F
 103+ 8EDE 28 64            jr z,3F
 104+ 8EE0
 105+ 8EE0              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EE0
 107+ 8EE0 E6 01            and 1
 108+ 8EE2 28 30            jr z,4F
 109+ 8EE4
 110+ 8EE4              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EE4              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EE4              ;
 113+ 8EE4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EE4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EE4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EE4
 117+ 8EE4 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8EE7
 119+ 8EE7              ;   Amadeus o entidad ???.
 120+ 8EE7
 121+ 8EE7 3A F0 88         ld a,(Ctrl_0)
 122+ 8EEA CB 77            bit 6,a
 123+ 8EEC 28 0A            jr z,8F
 124+ 8EEE
 125+ 8EEE              ; 	Dispara Amadeus.
 126+ 8EEE
 127+ 8EEE 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EF0 CD 7C 96         call PreviousScan
 129+ 8EF3 CD 7C 96         call PreviousScan
 130+ 8EF6
 131+ 8EF6              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EF6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EF6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EF6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EF6
 136+ 8EF6 18 11            jr 10F
 137+ 8EF8
 138+ 8EF8              ; 	Dispara Entidad.
 139+ 8EF8
 140+ 8EF8 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EFB              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EFB
 143+ 8EFB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EFB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EFB
 146+ 8EFB C5               push bc
 147+ 8EFC 06 10            ld b,16
 148+ 8EFE CD 6D 96     9 call NextScan
 149+ 8F01 10 FB            djnz 9B
 150+ 8F03 C1               pop bc
 151+ 8F04 CD 6E 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F07 18 06            jr 17F
 153+ 8F09
 154+ 8F09              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F09              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F09              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F09              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F09
 159+ 8F09 CD 6E 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F0C CD E3 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F0F              ;                                                      ; _al generar el disparo.
 162+ 8F0F
 163+ 8F0F              ; 	LLegados a este punto tendremos:
 164+ 8F0F              ;
 165+ 8F0F              ;       Puntero_objeto_disparo en IY.
 166+ 8F0F              ;       Rutinas_de_impresion en IX.
 167+ 8F0F              ;       Puntero_de_impresion en HL.
 168+ 8F0F              ;       Impacto/Dirección en BC.
 169+ 8F0F
 170+ 8F0F CD 76 8F     17 call Almacena_disparo
 171+ 8F12 18 52            jr 6F                                             ; RET.
 172+ 8F14
 173+ 8F14              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F14              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F14              ;
 176+ 8F14              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F14              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F14              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F14
 180+ 8F14 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8F17
 182+ 8F17              ;   Amadeus o entidad ???.
 183+ 8F17
 184+ 8F17 3A F0 88         ld a,(Ctrl_0)
 185+ 8F1A CB 77            bit 6,a
 186+ 8F1C 28 0A            jr z,11F
 187+ 8F1E
 188+ 8F1E              ; 	Dispara Amadeus.
 189+ 8F1E
 190+ 8F1E 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F20 CD 7C 96         call PreviousScan
 192+ 8F23 CD 7C 96         call PreviousScan
 193+ 8F26
 194+ 8F26              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F26              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F26              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F26              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F26
 199+ 8F26 18 11            jr 13F
 200+ 8F28
 201+ 8F28              ; 	Dispara Entidad.
 202+ 8F28
 203+ 8F28 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F2B              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F2B
 206+ 8F2B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F2B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F2B
 209+ 8F2B C5               push bc
 210+ 8F2C 06 10            ld b,16
 211+ 8F2E CD 6D 96     12 call NextScan
 212+ 8F31 10 FB            djnz 12B
 213+ 8F33 C1               pop bc
 214+ 8F34
 215+ 8F34 CD 67 8F         call Ajusta_disparo_parte_derecha
 216+ 8F37 18 06            jr 18F
 217+ 8F39
 218+ 8F39              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F39              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F39              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F39              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F39
 223+ 8F39 CD 67 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F3C CD E3 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F3F              ;                                                       ; _al generar el disparo.
 226+ 8F3F
 227+ 8F3F              ; LLegados a este punto tendremos:
 228+ 8F3F              ;
 229+ 8F3F              ;       Puntero_objeto_disparo en IY.
 230+ 8F3F              ;       Rutinas_de_impresion en IX.
 231+ 8F3F              ;       Puntero_de_impresion en HL.
 232+ 8F3F              ;       Impacto/Dirección en BC.
 233+ 8F3F
 234+ 8F3F CD 76 8F     18 call Almacena_disparo
 235+ 8F42 18 22            jr 6F                                               ; RET.
 236+ 8F44
 237+ 8F44              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F44
 239+ 8F44 28 11        3 jr z,5F
 240+ 8F46
 241+ 8F46              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F46              ;
 243+ 8F46              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F46              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F46              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F46              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F46
 248+ 8F46              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F46              ;	   ""        ""       "f9", B="1"
 250+ 8F46              ;	   ""        ""       "fb", B="2"
 251+ 8F46              ; 	   ""        ""       "fb", B="3"
 252+ 8F46
 253+ 8F46 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F49 CD 6D 96     	call NextScan
 255+ 8F4C
 256+ 8F4C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F4C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F4C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F4C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F4C
 261+ 8F4C CD 6E 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F4F
 263+ 8F4F              ; 	No se produce impacto. B="$80"
 264+ 8F4F              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F4F
 266+ 8F4F 01 80 80         ld bc,$8080
 267+ 8F52
 268+ 8F52              ; 	LLegados a este punto tendremos:
 269+ 8F52              ;
 270+ 8F52              ;       Puntero_objeto_disparo en IY.
 271+ 8F52              ;       Rutinas_de_impresion en IX.
 272+ 8F52              ;       Puntero_de_impresion en HL.
 273+ 8F52              ;       Impacto/Dirección en BC.
 274+ 8F52
 275+ 8F52 CD 76 8F         call Almacena_disparo
 276+ 8F55 18 0F            jr 6F                                           ; RET.
 277+ 8F57
 278+ 8F57              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F57              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F57              ;
 281+ 8F57              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F57              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F57              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F57              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F57
 286+ 8F57 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F5A CD 6D 96     	call NextScan
 288+ 8F5D
 289+ 8F5D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F5D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F5D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F5D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F5D
 294+ 8F5D CD 67 8F         call Ajusta_disparo_parte_derecha
 295+ 8F60
 296+ 8F60              ; 	No se produce impacto. B="$80"
 297+ 8F60              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F60
 299+ 8F60 01 80 80     15 ld bc,$8080
 300+ 8F63
 301+ 8F63              ; 	LLegados a este punto tendremos:
 302+ 8F63              ;
 303+ 8F63              ;       Puntero_objeto_disparo en IY.
 304+ 8F63              ;       Rutinas_de_impresion en IX.
 305+ 8F63              ;       Puntero_de_impresion en HL.
 306+ 8F63              ;       Impacto/Dirección en BC.
 307+ 8F63
 308+ 8F63 CD 76 8F         call Almacena_disparo
 309+ 8F66
 310+ 8F66 C9           6 ret
 311+ 8F67
 312+ 8F67              ; ----------------------------------------------------------------
 313+ 8F67              ;
 314+ 8F67              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F67              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F67              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F67
 318+ 8F67 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F68 FE 02            cp 2
 320+ 8F6A 38 01            jr c,1F
 321+ 8F6C 23               inc hl
 322+ 8F6D C9           1 ret
 323+ 8F6E
 324+ 8F6E 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F6F FE 01        	cp 1
 326+ 8F71 20 01        	jr nz,1F
 327+ 8F73 2B           	dec hl
 328+ 8F74 2B           1 dec hl
 329+ 8F75 C9               ret
 330+ 8F76
 331+ 8F76              ; ----------------------------------------------------------------
 332+ 8F76              ;
 333+ 8F76              ;   25/02/23
 334+ 8F76              ;
 335+ 8F76              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F76              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F76              ;
 338+ 8F76              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F76              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F76
 341+ 8F76              Almacena_disparo
 342+ 8F76
 343+ 8F76 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F77 F1               pop af
 345+ 8F78 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F79
 347+ 8F79 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F7A E6 01            and 1
 349+ 8F7C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F7E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F7E              ; 	Dispara AMADEUS.
 352+ 8F7E
 353+ 8F7E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F7E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F7E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F7E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F7E
 358+ 8F7E C5               push bc
 359+ 8F7F 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F82 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F85 A7               and a
 362+ 8F86 ED 42            sbc hl,bc
 363+ 8F88 CC 0B 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F8B C1               pop bc
 365+ 8F8C 28 54            jr z,4F
 366+ 8F8E
 367+ 8F8E 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F91 23               inc hl
 369+ 8F92 23               inc hl
 370+ 8F93 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F96              ;                                                   ; _ Disparo_(+1).
 372+ 8F96 18 18            jr 2F
 373+ 8F98
 374+ 8F98              ; Dispara una entidad.
 375+ 8F98
 376+ 8F98 C5           1 push bc
 377+ 8F99 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F9C 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F9F A7               and a
 380+ 8FA0 ED 42            sbc hl,bc
 381+ 8FA2 CC 04 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FA5 C1               pop bc
 383+ 8FA6 28 3A            jr z,4F
 384+ 8FA8
 385+ 8FA8 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FAB 23               inc hl
 387+ 8FAC 23               inc hl
 388+ 8FAD 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FB0              ;                                                   ; _ Disparo_(+1).
 390+ 8FB0 CD 8A 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FB3              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FB3              ;
 393+ 8FB3              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FB3              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FB3              ;                                                     Puntero_de_impresion en HL.
 396+ 8FB3              ;                                                     Impacto/Dirección en BC.
 397+ 8FB3
 398+ 8FB3 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FB4 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FB5 23               inc hl                                          ; _ al siguiente.
 401+ 8FB6 A7               and a
 402+ 8FB7 20 C0            jr nz,3B
 403+ 8FB9
 404+ 8FB9 08               ex af,af
 405+ 8FBA ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FBE F9               ld sp,hl
 407+ 8FBF
 408+ 8FBF DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FC1 F5               push af                                         ; Puntero de impresión.
 410+ 8FC2 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FC4 C5               push bc                                         ; Control.
 412+ 8FC5
 413+ 8FC5 ED 7B 15 89      ld sp,(Stack)
 414+ 8FC9
 415+ 8FC9              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FC9
 417+ 8FC9 21 03 89     	ld hl,Ctrl_1
 418+ 8FCC CB C6        	set 0,(hl)
 419+ 8FCE
 420+ 8FCE DD E5        	push ix
 421+ 8FD0 E1               pop hl
 422+ 8FD1 F5               push af
 423+ 8FD2 DD E1            pop ix
 424+ 8FD4
 425+ 8FD4 CD A0 7F     	call Guarda_foto_registros
 426+ 8FD7
 427+ 8FD7 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FDA CB 86        	res 0,(hl)
 429+ 8FDC
 430+ 8FDC              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FDC              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FDC
 433+ 8FDC CD 0B 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FDF CD 04 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FE2
 436+ 8FE2 C9           4 ret
 437+ 8FE3
 438+ 8FE3              ; ----------------------------------------------------------------
 439+ 8FE3              ;
 440+ 8FE3              ;   4/3/23
 441+ 8FE3              ;
 442+ 8FE3              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FE3              ;   _ al generarse el disparo.
 444+ 8FE3              ;
 445+ 8FE3              ;       "$80" ..... No se produce colisión.
 446+ 8FE3              ;       "$81" ..... Se produce colisión.
 447+ 8FE3              ;
 448+ 8FE3              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FE3              ;         _ que forman el disparo.
 450+ 8FE3
 451+ 8FE3
 452+ 8FE3              Comprueba_Colision
 453+ 8FE3
 454+ 8FE3              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FE3
 456+ 8FE3 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FE5 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FE6
 459+ 8FE6 CD 1C 90         call Modifica_H_Velocidad_disparo
 460+ 8FE9
 461+ 8FE9 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FEA FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FEC 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FEE
 465+ 8FEE 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FF0 CD 0C 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FF3
 468+ 8FF3 7B               ld a,e
 469+ 8FF4 E6 01            and 1
 470+ 8FF6 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FF8              ;                                                  ; _ para activar IMPACTO.
 472+ 8FF8 E1               pop hl
 473+ 8FF9 E5               push hl
 474+ 8FFA CD 6D 96         call NextScan
 475+ 8FFD
 476+ 8FFD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FFE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9000 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9002              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9002 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9004 CD 0C 90         call Bucle_2
 482+ 9007
 483+ 9007 43           1 ld b,e
 484+ 9008 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9009 FD E1            pop iy
 486+ 900B C9               ret
 487+ 900C
 488+ 900C              ; ---------- ----------
 489+ 900C
 490+ 900C 06 02        Bucle_2 ld b,2
 491+ 900E FD 7E 00     2 ld a,(iy)
 492+ 9011 A6               and (hl)
 493+ 9012 28 02            jr z,1F
 494+ 9014 1E 81            ld e,$81
 495+ 9016 23           1 inc hl
 496+ 9017 FD 23            inc iy
 497+ 9019 10 F3            djnz 2B
 498+ 901B C9               ret
 499+ 901C
 500+ 901C              ; ---------- ----------
 501+ 901C              ;
 502+ 901C              ;   21/7/23
 503+ 901C
 504+ 901C              Modifica_H_Velocidad_disparo
 505+ 901C
 506+ 901C 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 901F FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9021 D0               ret nc                                         ; _ incrementamos H.
 509+ 9022 24               inc h
 510+ 9023
 511+ 9023 C9               ret
 512+ 9024
 513+ 9024              ; -------------------------------------------------------------------------------------------------------------
 514+ 9024              ;
 515+ 9024              ;   11/04/23
 516+ 9024              ;
 517+ 9024              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9024              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9024              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9024              ;
 521+ 9024              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9024
 523+ 9024              Compara_coordenadas_X
 524+ 9024
 525+ 9024              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9024              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9024
 528+ 9024              ; Preparamos registros:
 529+ 9024
 530+ 9024 21 CC 88         ld hl,Filas+6
 531+ 9027 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9028 23               inc hl
 533+ 9029 23               inc hl
 534+ 902A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 902B 43               ld b,e
 536+ 902C
 537+ 902C 21 DA 88         ld hl,Filas+20
 538+ 902F 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9030 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 9033 CD 4F 92         call Guarda_coordenadas_X
 541+ 9036
 542+ 9036              ; Preparamos registros:
 543+ 9036
 544+ 9036 21 A4 85         ld hl,Amadeus_db+6
 545+ 9039 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 903A 23               inc hl
 547+ 903B 23               inc hl
 548+ 903C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 903D 7B               ld a,e
 550+ 903E 08               ex af,af'
 551+ 903F 21 B2 85         ld hl,Amadeus_db+20
 552+ 9042 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9043 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 9046 CD 4F 92         call Guarda_coordenadas_X
 555+ 9049
 556+ 9049              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9049              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9049
 559+ 9049 04               inc b
 560+ 904A 05               dec b
 561+ 904B 28 04            jr z,1F
 562+ 904D 06 03            ld b,3
 563+ 904F 18 02            jr 2F
 564+ 9051 06 02        1 ld b,2
 565+ 9053 08           2 ex af,af'
 566+ 9054 3C               inc a
 567+ 9055 3D               dec a
 568+ 9056 28 04            jr z,5F
 569+ 9058 0E 03            ld c,3
 570+ 905A 18 02            jr 6F
 571+ 905C 0E 02        5 ld c,2
 572+ 905E 79           6 ld a,c
 573+ 905F 08               ex af,af'
 574+ 9060 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 9063 1A           4 ld a,(de)
 576+ 9064 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 9067 BE           3 cp (hl)
 578+ 9068 28 0E            jr z,7F
 579+ 906A 23               inc hl
 580+ 906B 0D               dec c
 581+ 906C 20 F9            jr nz,3B
 582+ 906E 13               inc de
 583+ 906F 08               ex af,af'
 584+ 9070 4F               ld c,a
 585+ 9071 08               ex af,af'
 586+ 9072 10 EF            djnz 4B
 587+ 9074
 588+ 9074              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9074
 590+ 9074 CD 8B 92     8 call Limpia_Coordenadas_X
 591+ 9077 C9               ret
 592+ 9078
 593+ 9078 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 907A 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 907D 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9080 CB D6            set 2,(hl)
 597+ 9082 18 F0            jr 8B
 598+ 9084
 599+ 9084              ; -----------------------------------------------------------------------
 600+ 9084              ;
 601+ 9084              ;   17/04/23
 602+ 9084              ;
 603+ 9084
 604+ 9084              Detecta_colision_nave_entidad
 605+ 9084
 606+ 9084              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9084
 608+ 9084 2A C8 88         ld hl,(Posicion_actual)
 609+ 9087 CD C8 95         call Calcula_puntero_de_impresion
 610+ 908A
 611+ 908A              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 908A              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 908A
 614+ 908A DD E5            push ix
 615+ 908C E1               pop hl
 616+ 908D E5               push hl
 617+ 908E
 618+ 908E              ; ----- ----- -----
 619+ 908E 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9090 06 0A            ld b,10
 621+ 9092 CD C2 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9095 7B               ld a,e
 623+ 9096 FE 05            cp 5
 624+ 9098 38 0E            jr c,3F
 625+ 909A
 626+ 909A              ; LLegados a este punto:
 627+ 909A              ;
 628+ 909A              ;   HAY COLISIÓN !!!!!.
 629+ 909A              ;
 630+ 909A              ;   .db (Impacto) de Amadeus a "1".
 631+ 909A              ;   SET el bit3 de (Impacto2).
 632+ 909A              ;
 633+ 909A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 909A
 635+ 909A 21 B7 85         ld hl,Amadeus_db+25
 636+ 909D 36 01            ld (hl),1
 637+ 909F 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90A2 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90A4 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90A6 18 18            jr 1F
 641+ 90A8
 642+ 90A8              ; -----
 643+ 90A8
 644+ 90A8 E1           3 pop hl
 645+ 90A9 CD 6D 96         call NextScan
 646+ 90AC E5               push hl
 647+ 90AD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90AE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90B0 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90B2 30 0C            jr nc,1F
 651+ 90B4              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90B4 10 DC            djnz 2B
 653+ 90B6
 654+ 90B6              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90B6
 656+ 90B6              ; LLegados a este punto:
 657+ 90B6              ;
 658+ 90B6              ;   NO HAY COLISIÓN !!!!!.
 659+ 90B6              ;
 660+ 90B6              ;   .db (Impacto) de Amadeus a "0".
 661+ 90B6              ;   RES el bit2 de (Impacto2).
 662+ 90B6              ;
 663+ 90B6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90B6              ;   Lo colocamos a "0".
 665+ 90B6
 666+ 90B6 21 42 89         ld hl,Impacto2
 667+ 90B9 CB 96            res 2,(hl)
 668+ 90BB 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90BE 36 00            ld (hl),0
 670+ 90C0
 671+ 90C0 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90C1 C9               ret
 673+ 90C2
 674+ 90C2               ; ---------- ----------
 675+ 90C2
 676+ 90C2 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90C3 3A C7 88         ld a,(Columns)
 678+ 90C6 47               ld b,a
 679+ 90C7 FD 7E 00     2 ld a,(iy)
 680+ 90CA BE               cp (hl)
 681+ 90CB 28 01            jr z,1F
 682+ 90CD
 683+ 90CD 1C               inc e
 684+ 90CE
 685+ 90CE 23           1 inc hl
 686+ 90CF FD 23            inc iy
 687+ 90D1 10 F4            djnz 2B
 688+ 90D3 C1               pop bc
 689+ 90D4 C9               ret
 690+ 90D5
 691+ 90D5              ; -------------------------------------------------------------------------------------------------------------
 692+ 90D5              ;
 693+ 90D5              ;   13/03/23
 694+ 90D5              ;
 695+ 90D5              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90D5              ;
 697+ 90D5              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90D5
 699+ 90D5 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90D8 7E               ld a,(hl)
 701+ 90D9 A7               and a
 702+ 90DA C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90DB
 704+ 90DB 44               ld b,h
 705+ 90DC 4D               ld c,l
 706+ 90DD 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 90E0 E5               push hl
 708+ 90E1 A7               and a
 709+ 90E2 ED 42            sbc hl,bc
 710+ 90E4 E5               push hl
 711+ 90E5 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90E6
 713+ 90E6 E1               pop hl
 714+ 90E7 54               ld d,h
 715+ 90E8 5D               ld e,l
 716+ 90E9 1B               dec de
 717+ 90EA ED B8            lddr                                                ; Limpiamos.
 718+ 90EC
 719+ 90EC 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90EF 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 90F2
 722+ 90F2 C9               ret
 723+ 90F3
 724+ 90F3              ; -------------------------------------------------------------------------------------------------------------
 725+ 90F3              ;
 726+ 90F3              ;   18/07/23
 727+ 90F3              ;
 728+ 90F3
 729+ 90F3              Motor_de_disparos
 730+ 90F3
 731+ 90F3              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90F3
 733+ 90F3 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90F6 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90F9
 736+ 90F9 CD 8A 8C     2 call Extrae_address
 737+ 90FC 7E               ld a,(hl)
 738+ 90FD A7               and a
 739+ 90FE 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9100
 741+ 9100              ; ----- ----- ----- ----- ----- -----
 742+ 9100
 743+ 9100 C5               push bc
 744+ 9101 CD C5 91         call foto_disparo_a_borrar
 745+ 9104
 746+ 9104              ; Existe colisión con este disparo???
 747+ 9104
 748+ 9104 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 9105 7E               ld a,(hl)
 750+ 9106 2B               dec hl
 751+ 9107 E6 01            and 1
 752+ 9109 28 1D            jr z,9F
 753+ 910B
 754+ 910B              ;   En este punto:
 755+ 910B              ;
 756+ 910B              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 910B              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 910B              ;   _con la entidad).
 759+ 910B              ;
 760+ 910B              ;   Disparo_2A defw 0                                ; Control.
 761+ 910B              ;    defw 0                                          ; Puntero objeto.
 762+ 910B              ;    defw 0                                          ; Puntero de impresión.
 763+ 910B              ;    defw 0                                          ; Rutina de impresión.
 764+ 910B
 765+ 910B E5               push hl
 766+ 910C
 767+ 910C 06 04            ld b,4
 768+ 910E 23           19 inc hl
 769+ 910F 10 FD            djnz 19B
 770+ 9111
 771+ 9111 CD 8A 8C         call Extrae_address
 772+ 9114 CD 36 9D         call Genera_coordenadas_disparo
 773+ 9117
 774+ 9117              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9117
 776+ 9117 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 911A 72               ld (hl),d
 778+ 911B 23               inc hl
 779+ 911C 73               ld (hl),e
 780+ 911D
 781+ 911D              ; Elimino el disparo de la base de datos.
 782+ 911D
 783+ 911D E1               pop hl
 784+ 911E CD 44 92         call Elimina_disparo_de_base_de_datos
 785+ 9121 21 42 89         ld hl,Impacto2
 786+ 9124 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9126
 788+ 9126 18 06            jr 11F
 789+ 9128
 790+ 9128 CD EE 91     9 call Mueve_disparo
 791+ 912B CD C5 91         call foto_disparo_a_borrar
 792+ 912E
 793+ 912E C1           11 pop bc
 794+ 912F 18 04            jr 7F
 795+ 9131
 796+ 9131              ; ----- ----- ----- ----- ----- -----
 797+ 9131
 798+ 9131 ED 42        1 sbc hl,bc
 799+ 9133 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9135
 801+ 9135 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9138 23               inc hl
 803+ 9139 23               inc hl
 804+ 913A 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 913D 18 BA            jr 2B
 806+ 913F
 807+ 913F CD 0B 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9142              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9142
 810+ 9142              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9142
 812+ 9142 01 8A 85         ld bc,Disparo_11
 813+ 9145 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9148
 815+ 9148 CD 8A 8C     5 call Extrae_address
 816+ 914B 7E               ld a,(hl)
 817+ 914C A7               and a
 818+ 914D 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 914F
 820+ 914F              ; ----- ----- ----- ----- ----- -----
 821+ 914F
 822+ 914F C5               push bc
 823+ 9150 CD C5 91         call foto_disparo_a_borrar
 824+ 9153
 825+ 9153              ; Existe colisión con este disparo???
 826+ 9153
 827+ 9153 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9154 7E               ld a,(hl)
 829+ 9155 2B               dec hl
 830+ 9156 E6 01            and 1
 831+ 9158 28 4D            jr z,10F
 832+ 915A
 833+ 915A              ;! La colisión se produce con Amadeus???
 834+ 915A              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 915A
 836+ 915A E5               push hl
 837+ 915B
 838+ 915B 06 04            ld b,4
 839+ 915D 23           16 inc hl
 840+ 915E 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9160
 842+ 9160 CD 8A 8C         call Extrae_address
 843+ 9163 CD 36 9D         call Genera_coordenadas_disparo
 844+ 9166
 845+ 9166 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9167 FE 16            cp $16
 847+ 9169 38 2A            jr c,15F
 848+ 916B
 849+ 916B
 850+ 916B              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 916B
 852+ 916B D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 916C
 854+ 916C              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 916C
 856+ 916C
 857+ 916C 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 916F
 859+ 916F              ; Coordenada X de Amadeus en D.
 860+ 916F
 861+ 916F 7D               ld a,l
 862+ 9170 E6 1F            and $1F
 863+ 9172 57               ld d,a
 864+ 9173
 865+ 9173 21 A6 85         ld hl,Amadeus_db+8
 866+ 9176 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9177
 868+ 9177 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 917A CD 4F 92         call Guarda_coordenadas_X
 870+ 917D
 871+ 917D D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 917E
 873+ 917E              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 917E
 875+ 917E 06 02            ld b,2
 876+ 9180 C5           20 push bc
 877+ 9181
 878+ 9181 06 03            ld b,3
 879+ 9183 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 9186 7E           18 ld a,(hl)
 881+ 9187 BA               cp d
 882+ 9188 20 04            jr nz,17F
 883+ 918A
 884+ 918A              ;! Colisión Amadeus !!!!!!!!!!
 885+ 918A
 886+ 918A C1               pop bc
 887+ 918B E1               pop hl
 888+ 918C 18 0D            jr 14F
 889+ 918E
 890+ 918E 23           17 inc hl
 891+ 918F 10 F5            djnz 18B
 892+ 9191
 893+ 9191 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9192
 895+ 9192 C1               pop bc
 896+ 9193 10 EB            djnz 20B
 897+ 9195
 898+ 9195
 899+ 9195              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9195              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9195
 902+ 9195 E1           15 pop hl
 903+ 9196 23               inc hl
 904+ 9197 35               dec (hl)
 905+ 9198 2B               dec hl
 906+ 9199 18 0C            jr 10F
 907+ 919B
 908+ 919B              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 919B              ; _ almacén de coordenadas_X de Amadeus.
 910+ 919B
 911+ 919B E5           14 push hl
 912+ 919C CD 44 92         call Elimina_disparo_de_base_de_datos
 913+ 919F 21 42 89         ld hl,Impacto2
 914+ 91A2 CB CE            set 1,(hl)
 915+ 91A4 E1               pop hl
 916+ 91A5 18 06            jr 12F
 917+ 91A7
 918+ 91A7              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91A7
 920+ 91A7 CD EE 91     10 call Mueve_disparo
 921+ 91AA CD C5 91         call foto_disparo_a_borrar
 922+ 91AD C1           12 pop bc
 923+ 91AE
 924+ 91AE 18 04            jr 8F
 925+ 91B0
 926+ 91B0              ; ----- ----- ----- ----- ----- -----
 927+ 91B0
 928+ 91B0 ED 42        4 sbc hl,bc
 929+ 91B2 28 0A            jr z,6F
 930+ 91B4
 931+ 91B4 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91B7 23               inc hl
 933+ 91B8 23               inc hl
 934+ 91B9 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91BC 18 8A            jr 5B
 936+ 91BE
 937+ 91BE CD 04 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91C1 CD 8B 92         call Limpia_Coordenadas_X
 939+ 91C4 C9               ret
 940+ 91C5
 941+ 91C5              ; ------------------------------------------------------------------
 942+ 91C5
 943+ 91C5              foto_disparo_a_borrar
 944+ 91C5
 945+ 91C5 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91C6 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91C7 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91C8
 949+ 91C8 E5               push hl
 950+ 91C9 23               inc hl
 951+ 91CA 23               inc hl
 952+ 91CB ED 73 15 89      ld (Stack),sp
 953+ 91CF F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91D0 FD E1            pop iy
 955+ 91D2 DD E1            pop ix
 956+ 91D4 E1               pop hl
 957+ 91D5 ED 7B 15 89      ld sp,(Stack)
 958+ 91D9 3A 03 89         ld a,(Ctrl_1)
 959+ 91DC CB C7            set 0,a
 960+ 91DE 32 03 89         ld (Ctrl_1),a
 961+ 91E1 CD A0 7F         call Guarda_foto_registros
 962+ 91E4 3A 03 89         ld a,(Ctrl_1)
 963+ 91E7 CB 87            res 0,a
 964+ 91E9 32 03 89         ld (Ctrl_1),a
 965+ 91EC E1               pop hl
 966+ 91ED C9               ret
 967+ 91EE
 968+ 91EE              ;---------------------------------------------------
 969+ 91EE              ;
 970+ 91EE              ;   18/07/23
 971+ 91EE              ;
 972+ 91EE
 973+ 91EE              Mueve_disparo
 974+ 91EE
 975+ 91EE              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91EE              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91EE              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91EE
 979+ 91EE E5               push hl
 980+ 91EF
 981+ 91EF 7E               ld a,(hl)
 982+ 91F0
 983+ 91F0 06 04            ld b,4
 984+ 91F2 23           1 inc hl
 985+ 91F3 10 FD            djnz 1B
 986+ 91F5
 987+ 91F5              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91F5
 989+ 91F5 CD 8A 8C         call Extrae_address
 990+ 91F8
 991+ 91F8 E6 01            and 1
 992+ 91FA 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91FC
 994+ 91FC              ; Disparo hacia arriba, (Amadeus).
 995+ 91FC
 996+ 91FC              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91FC              ; _ de la dificultad.
 998+ 91FC
 999+ 91FC CD 7C 96         call PreviousScan
1000+ 91FF CD 7C 96         call PreviousScan
1001+ 9202 CD 7C 96         call PreviousScan
1002+ 9205 CD 7C 96         call PreviousScan
1003+ 9208
1004+ 9208              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9208
1006+ 9208 7C               ld a,h
1007+ 9209 FE 40            cp $40
1008+ 920B 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 920D
1010+ 920D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 920D
1012+ 920D EB               ex de,hl
1013+ 920E 06 04            ld b,4
1014+ 9210 2B           6 dec hl
1015+ 9211 10 FD            djnz 6B
1016+ 9213
1017+ 9213 CD 44 92         call Elimina_disparo_de_base_de_datos
1018+ 9216 E1               pop hl
1019+ 9217 18 10            jr 7F
1020+ 9219
1021+ 9219              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9219              ; HL contiene el puntero de impresión del disparo.
1023+ 9219              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9219
1025+ 9219 D5           3 push de
1026+ 921A C5               push bc
1027+ 921B
1028+ 921B CD E3 8F         call Comprueba_Colision
1029+ 921E
1030+ 921E              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 921E
1032+ 921E 78               ld a,b
1033+ 921F
1034+ 921F C1               pop bc
1035+ 9220 D1               pop de
1036+ 9221
1037+ 9221 EB               ex de,hl
1038+ 9222
1039+ 9222 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9223 23               inc hl                                      ; _ movimiento.
1041+ 9224 72               ld (hl),d
1042+ 9225
1043+ 9225 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9226
1045+ 9226 23               inc hl                                      ; _ en curso.
1046+ 9227 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9228 2B               dec hl
1048+ 9229
1049+ 9229 C9           7 ret
1050+ 922A
1051+ 922A              ; Disparo hacia abajo, (Entidad).
1052+ 922A
1053+ 922A 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 922D 47               ld b,a
1055+ 922E
1056+ 922E CD 6D 96     4 call NextScan
1057+ 9231 10 FB            djnz 4B
1058+ 9233
1059+ 9233              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9233
1061+ 9233 7C               ld a,h
1062+ 9234 FE 58            cp $58
1063+ 9236 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9238
1065+ 9238 EB               ex de,hl
1066+ 9239 06 04            ld b,4
1067+ 923B 2B           5 dec hl
1068+ 923C 10 FD            djnz 5B
1069+ 923E
1070+ 923E CD 44 92         call Elimina_disparo_de_base_de_datos
1071+ 9241 E1               pop hl
1072+ 9242 18 E5            jr 7B
1073+ 9244
1074+ 9244              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9244
1076+ 9244 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9247 AF               xor a
1078+ 9248 77               ld (hl),a
1079+ 9249 54               ld d,h
1080+ 924A 5D               ld e,l
1081+ 924B 13               inc de
1082+ 924C ED B0            ldir
1083+ 924E C9               ret
1084+ 924F
1085+ 924F              ; -----------------------------------------------------------------
1086+ 924F              ;
1087+ 924F              ;   19/7/23
1088+ 924F              ;
1089+ 924F              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 924F              ;
1091+ 924F              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 924F              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 924F              ;
1094+ 924F              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 924F              ;
1096+ 924F              ;   INPUTS:
1097+ 924F              ;
1098+ 924F              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 924F              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 924F
1101+ 924F              ;   MODIFICA: A, HL, BC y DE.
1102+ 924F
1103+ 924F              Guarda_coordenadas_X
1104+ 924F
1105+ 924F 7B               ld a,e
1106+ 9250 A7               and a
1107+ 9251 20 04            jr nz,1F
1108+ 9253
1109+ 9253 06 02            ld b,2
1110+ 9255 18 02            jr 2F
1111+ 9257
1112+ 9257 06 03        1 ld b,3
1113+ 9259 72           2 ld (hl),d
1114+ 925A 23               inc hl
1115+ 925B 14               inc d
1116+ 925C 10 FB            djnz 2B
1117+ 925E
1118+ 925E C9               ret
1119+ 925F
1120+ 925F              ; -----------------------------------------------------------------
1121+ 925F              ;
1122+ 925F              ;   12/04/23
1123+ 925F              ;
1124+ 925F
1125+ 925F 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9262 A7               and a
1127+ 9263 C8               ret z
1128+ 9264
1129+ 9264 FE 04            cp 4
1130+ 9266 20 09            jr nz,1F
1131+ 9268
1132+ 9268
1133+ 9268              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9268
1135+ 9268 CD 84 90         call Detecta_colision_nave_entidad
1136+ 926B
1137+ 926B 21 42 89         ld hl,Impacto2
1138+ 926E CB 5E            bit 3,(hl)
1139+ 9270 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9271
1141+ 9271              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9271              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9271
1144+ 9271 21 42 89     1 ld hl,Impacto2
1145+ 9274 CB 4E            bit 1,(hl)
1146+ 9276 28 07            jr z,2F
1147+ 9278
1148+ 9278 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 927B 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 927D 18 0B            jr 3F
1151+ 927F
1152+ 927F 21 42 89     2 ld hl,Impacto2
1153+ 9282 CB 46            bit 0,(hl)
1154+ 9284 C8               ret z
1155+ 9285
1156+ 9285              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9285
1158+ 9285 21 03 89         ld hl,Ctrl_1
1159+ 9288 CB D6            set 2,(hl)
1160+ 928A
1161+ 928A C9           3 ret
1162+ 928B
1163+ 928B              ; -----------------------------------------------------------------
1164+ 928B              ;
1165+ 928B              ;   19/7/23
1166+ 928B              ;
1167+ 928B              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 928B
1169+ 928B AF           Limpia_Coordenadas_X xor a
1170+ 928C 06 06            ld b,6
1171+ 928E 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 9291 77           1 ld (hl),a
1173+ 9292 23               inc hl
1174+ 9293 10 FC            djnz 1B
1175+ 9295 C9               ret
1176+ 9296
1177+ 9296              ; -----------------------------------------------------------------
1178+ 9296              ;
1179+ 9296              ;   25/04/23
1180+ 9296              ;
1181+ 9296
1182+ 9296              Determina_resultado_comparativa
1183+ 9296
1184+ 9296              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9296              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9296              ;
1187+ 9296              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9296              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9296              ;
1190+ 9296              ;   SBC HL,DE
1191+ 9296
1192+ 9296              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9296              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9296
1195+ 9296              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9296              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9296
1198+ 9296
1199+ 9296 3A DA 88         ld a,(Cuad_objeto)
1200+ 9299 FE 02            cp 2
1201+ 929B 28 26            jr z,2F
1202+ 929D 38 24            jr c,2F
1203+ 929F
1204+ 929F              ; Cuadrantes 3º y 4º
1205+ 929F
1206+ 929F E6 01            and 1
1207+ 92A1 28 10            jr z,4F
1208+ 92A3
1209+ 92A3              ; Cuadrante 3º
1210+ 92A3
1211+ 92A3 7C               ld a,h
1212+ 92A4 06 00            ld b,0
1213+ 92A6
1214+ 92A6 CD 31 93         call Compara_cositas_H3
1215+ 92A9
1216+ 92A9 04               inc b
1217+ 92AA 05               dec b
1218+ 92AB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92AC
1220+ 92AC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92AD 06 00            ld b,0
1222+ 92AF
1223+ 92AF CD 43 93         call Compara_cositas_L3
1224+ 92B2 C9               ret
1225+ 92B3
1226+ 92B3              ; Cuadrante 4º
1227+ 92B3
1228+ 92B3 7C           4 ld a,h
1229+ 92B4 06 00            ld b,0
1230+ 92B6
1231+ 92B6 CD 55 93         call Compara_cositas_H4
1232+ 92B9
1233+ 92B9 04               inc b
1234+ 92BA 05               dec b
1235+ 92BB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92BC
1237+ 92BC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92BD 06 00            ld b,0
1239+ 92BF
1240+ 92BF CD 6B 93         call Compara_cositas_L4
1241+ 92C2 C9               ret
1242+ 92C3
1243+ 92C3              ; Cuadrantes 1º y 2º.
1244+ 92C3
1245+ 92C3 28 10        2 jr z,3F
1246+ 92C5
1247+ 92C5              ; 1er Cuadrante
1248+ 92C5
1249+ 92C5 7C               ld a,h
1250+ 92C6 06 00            ld b,0
1251+ 92C8
1252+ 92C8 CD 09 93         call Compara_cositas_H1
1253+ 92CB
1254+ 92CB 04               inc b
1255+ 92CC 05               dec b
1256+ 92CD C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92CE
1258+ 92CE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92CF 06 00            ld b,0
1260+ 92D1
1261+ 92D1 CD 1F 93         call Compara_cositas_L1
1262+ 92D4 C9               ret
1263+ 92D5
1264+ 92D5
1265+ 92D5              ; 2º Cuadrante
1266+ 92D5
1267+ 92D5 7C           3 ld a,h
1268+ 92D6 06 00            ld b,0
1269+ 92D8
1270+ 92D8 CD E5 92         call Compara_cositas_H2
1271+ 92DB
1272+ 92DB 04               inc b
1273+ 92DC 05               dec b
1274+ 92DD C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92DE
1276+ 92DE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92DF 06 00            ld b,0
1278+ 92E1
1279+ 92E1 CD F7 92         call Compara_cositas_L2
1280+ 92E4 C9               ret
1281+ 92E5
1282+ 92E5 A7           Compara_cositas_H2 and a
1283+ 92E6 28 0D            jr z,1F
1284+ 92E8              ;    cp $fd
1285+ 92E8              ;    jr z,1F
1286+ 92E8              ;    cp $fe
1287+ 92E8              ;    jr z,1F
1288+ 92E8 FE FF            cp $ff
1289+ 92EA 28 09            jr z,1F
1290+ 92EC FE 01            cp $01
1291+ 92EE 28 05            jr z,1F
1292+ 92F0 FE 02            cp $02
1293+ 92F2 28 01            jr z,1F
1294+ 92F4 C0               ret nz
1295+ 92F5 04           1 inc b
1296+ 92F6 C9               ret
1297+ 92F7
1298+ 92F7 A7           Compara_cositas_L2 and a
1299+ 92F8 28 0D            jr z,1F
1300+ 92FA              ;    cp $fd
1301+ 92FA              ;    jr z,1F
1302+ 92FA FE FE            cp $fe
1303+ 92FC 28 09            jr z,1F
1304+ 92FE FE FF            cp $ff
1305+ 9300 28 05            jr z,1F
1306+ 9302 FE 01            cp $01
1307+ 9304 28 01            jr z,1F
1308+ 9306              ;    cp $02
1309+ 9306              ;    jr z,1F
1310+ 9306 C0               ret nz
1311+ 9307 04           1 inc b
1312+ 9308 C9               ret
1313+ 9309
1314+ 9309 A7           Compara_cositas_H1 and a
1315+ 930A 28 11            jr z,1F
1316+ 930C              ;    cp $fd
1317+ 930C              ;    jr z,1F
1318+ 930C              ;    cp $fe
1319+ 930C              ;    jr z,1F
1320+ 930C FE FF            cp $ff
1321+ 930E 28 0D            jr z,1F
1322+ 9310 FE 01            cp $01
1323+ 9312 28 09            jr z,1F
1324+ 9314 FE 02            cp $02
1325+ 9316 28 05            jr z,1F
1326+ 9318 FE 03            cp $03
1327+ 931A 28 01            jr z,1F
1328+ 931C C0               ret nz
1329+ 931D 04           1 inc b
1330+ 931E C9               ret
1331+ 931F
1332+ 931F A7           Compara_cositas_L1 and a
1333+ 9320 28 0D            jr z,1F
1334+ 9322              ;    cp $fd
1335+ 9322              ;    jr z,1F
1336+ 9322              ;    cp $fe
1337+ 9322              ;    jr z,1F
1338+ 9322              ;    cp $ff
1339+ 9322              ;    jr z,1F
1340+ 9322 FE 01            cp $01
1341+ 9324 28 09            jr z,1F
1342+ 9326 FE 02            cp $02
1343+ 9328 28 05            jr z,1F
1344+ 932A FE 03            cp $03
1345+ 932C 28 01            jr z,1F
1346+ 932E C0               ret nz
1347+ 932F 04           1 inc b
1348+ 9330 C9               ret
1349+ 9331
1350+ 9331 A7           Compara_cositas_H3 and a
1351+ 9332 28 0D            jr z,1F
1352+ 9334              ;    cp $fd
1353+ 9334              ;    jr z,1F
1354+ 9334 FE FE            cp $fe
1355+ 9336 28 09            jr z,1F
1356+ 9338 FE FF            cp $ff
1357+ 933A 28 05            jr z,1F
1358+ 933C FE 01            cp $01
1359+ 933E 28 01            jr z,1F
1360+ 9340              ;    cp $02
1361+ 9340              ;    jr z,1F
1362+ 9340              ;    cp $03
1363+ 9340              ;    jr z,1F
1364+ 9340 C0               ret nz
1365+ 9341 04           1 inc b
1366+ 9342 C9               ret
1367+ 9343
1368+ 9343 A7           Compara_cositas_L3 and a
1369+ 9344 28 0D            jr z,1F
1370+ 9346              ;    cp $fd
1371+ 9346              ;    jr z,1F
1372+ 9346              ;    cp $fe
1373+ 9346              ;    jr z,1F
1374+ 9346              ;    cp $ff
1375+ 9346              ;    jr z,1F
1376+ 9346 FE 01            cp $01
1377+ 9348 28 09            jr z,1F
1378+ 934A FE 02            cp $02
1379+ 934C 28 05            jr z,1F
1380+ 934E FE 03            cp $03
1381+ 9350 28 01            jr z,1F
1382+ 9352 C0               ret nz
1383+ 9353 04           1 inc b
1384+ 9354 C9               ret
1385+ 9355
1386+ 9355 A7           Compara_cositas_H4 and a
1387+ 9356 28 11            jr z,1F
1388+ 9358 FE FD            cp $fd
1389+ 935A 28 0D            jr z,1F
1390+ 935C FE FE            cp $fe
1391+ 935E 28 09            jr z,1F
1392+ 9360 FE FF            cp $ff
1393+ 9362 28 05            jr z,1F
1394+ 9364 FE 01            cp $01
1395+ 9366 28 01            jr z,1F
1396+ 9368              ;    cp $02
1397+ 9368              ;    jr z,1F
1398+ 9368              ;    cp $03
1399+ 9368              ;    jr z,1F
1400+ 9368 C0               ret nz
1401+ 9369 04           1 inc b
1402+ 936A C9               ret
1403+ 936B
1404+ 936B A7           Compara_cositas_L4 and a
1405+ 936C 28 0D            jr z,1F
1406+ 936E              ;    cp $fd
1407+ 936E              ;    jr z,1F
1408+ 936E FE FE            cp $fe
1409+ 9370 28 09            jr z,1F
1410+ 9372 FE FF            cp $ff
1411+ 9374 28 05            jr z,1F
1412+ 9376 FE 01            cp $01
1413+ 9378 28 01            jr z,1F
1414+ 937A              ;    cp $02
1415+ 937A              ;    jr z,1F
1416+ 937A              ;    cp $03
1417+ 937A              ;    jr z,1F
1418+ 937A C0               ret nz
1419+ 937B 04           1 inc b
1420+ 937C C9               ret
# file closed: Disparo.asm
1691  937D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 937D              ; ******************************************************************************************************************************************************************************************
   2+ 937D              ;
   3+ 937D              ; 26/06/23
   4+ 937D              ;
   5+ 937D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 937D
   7+ 937D CD 61 96     Draw call Prepara_draw
   8+ 9380 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9381 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9382 28 05        	jr z,2F
  11+ 9384
  12+ 9384 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9387 18 0C        	jr 1F
  14+ 9389
  15+ 9389 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 938C 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 938F CD 1E 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9392              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9392 CD C3 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9395
  21+ 9395 3A F0 88     1 ld a,(Ctrl_0)
  22+ 9398 CB 6F        	bit 5,a
  23+ 939A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 939C
  25+ 939C CD B4 93     	call Comprueba_limite_horizontal
  26+ 939F CD 44 94     	call Comprueba_limite_vertical
  27+ 93A2
  28+ 93A2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93A2              ; -----------------------
  30+ 93A2              ; -----------------------
  31+ 93A2              ; -----------------------
  32+ 93A2
  33+ 93A2 CD 91 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93A5 CD C8 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93A8 CD 27 96     	call Define_rutina_de_impresion
  36+ 93AB
  37+ 93AB 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93AE CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93B0 32 F0 88     	ld (Ctrl_0),a
  40+ 93B3
  41+ 93B3 C9           	ret
  42+ 93B4
  43+ 93B4              ; *******************************************************************************************************************************************************************************************
  44+ 93B4              ;	21/01/23
  45+ 93B4              ;
  46+ 93B4              ; 	Comprueba_limite_horizontal.
  47+ 93B4              ;
  48+ 93B4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93B4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93B4              ;
  51+ 93B4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93B4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93B4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93B4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93B4
  56+ 93B4
  57+ 93B4
  58+ 93B4 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93B7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93B9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93BB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93BD 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93C0 18 09            jr 6F
  64+ 93C2 CB 5F        1 bit 3,a
  65+ 93C4 28 0A            jr z,2F
  66+ 93C6 E6 F7            and $f7
  67+ 93C8 32 F0 88         ld (Ctrl_0),a
  68+ 93CB CD 1E 95     6 call Inicializacion
  69+ 93CE 18 5B            jr 5F
  70+ 93D0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93D1
  72+ 93D1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93D1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93D1
  75+ 93D1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93D2 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93D5 CD 80 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93D8 67           	ld h,a
  79+ 93D9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93DA CD 80 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93DD 67           	ld h,a
  82+ 93DE A7           	and a
  83+ 93DF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93E1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93E2 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93E5 FE 02        	cp 2
  87+ 93E7 38 1E        	jr c,3F
  88+ 93E9 28 1C        	jr z,3F
  89+ 93EB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93EC 28 23            jr z,7F
  91+ 93EE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93F0 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93F2 E1           	pop hl
  94+ 93F3
  95+ 93F3              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93F3              ; _para indicar con E="2" en caso necesario.
  97+ 93F3
  98+ 93F3 E5               push hl
  99+ 93F4 C5               push bc
 100+ 93F5 CD 80 99     	call calcula_tercio
 101+ 93F8 FE 01        	cp 1
 102+ 93FA 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93FC CD 2C 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93FF 28 26            jr z,9F
 105+ 9401 38 24            jr c,9F
 106+ 9403 1E 00        11 ld e,0
 107+ 9405 18 22            jr 8F
 108+ 9407 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9408 28 07        	jr z, 7F
 110+ 940A 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 940C 1E 00         	ld e,0
 112+ 940E E1           	pop hl
 113+ 940F 18 04        	jr 4F
 114+ 9411 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9413 18 15            jr 10F
 116+ 9415
 117+ 9415              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9415              ; _para indicar con E="2" en caso necesario.
 119+ 9415
 120+ 9415 E5           4 push hl
 121+ 9416 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9417 CD 80 99     	call calcula_tercio
 123+ 941A FE 01        	cp 1
 124+ 941C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 941E CD 2C 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9421 28 04            jr z,9F
 127+ 9423 30 02            jr nc,9F
 128+ 9425 18 02        	jr 8F
 129+ 9427 1E 02        9 ld e,2
 130+ 9429 C1           8 pop bc
 131+ 942A E1           10 pop hl
 132+ 942B C9           5 ret
 133+ 942C
 134+ 942C              ; --------------------
 135+ 942C              ;
 136+ 942C              ; 25/08/22
 137+ 942C
 138+ 942C CD 80 99     Comprueba_centro call calcula_tercio
 139+ 942F 67               ld h,a
 140+ 9430 08           	ex af,af
 141+ 9431 FE 02        	cp 2
 142+ 9433 38 07        	jr c,1F
 143+ 9435 28 05        	jr z,1F
 144+ 9437 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 943A 18 03        	jr 2F
 146+ 943C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 943F 08           2 ex af,af
 148+ 9440 A7               and a
 149+ 9441 ED 42            sbc hl,bc
 150+ 9443 C9               ret
 151+ 9444
 152+ 9444              ; *********************************************************************************************************************************************************************************************
 153+ 9444              ;
 154+ 9444              ;   16/8/22
 155+ 9444              ;
 156+ 9444              ;	Comprueba_limite_vertical
 157+ 9444              ;
 158+ 9444              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9444              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9444              ;
 161+ 9444
 162+ 9444 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9447 7D           	ld a,l
 164+ 9448 E6 1F        	and $1F
 165+ 944A 57           	ld d,a
 166+ 944B 3A 00 89     	ld a,(Limite_vertical)
 167+ 944E BA           	cp d 											; Límite - Posición.
 168+ 944F 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9450 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9453 CB 47        	bit 0,a
 171+ 9455 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9457
 173+ 9457              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9457
 175+ 9457 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9458 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 945A
 178+ 945A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 945A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 945A
 181+ 945A 3A CC 88         ld a,(Coordenada_X)
 182+ 945D 16 0F            ld d,Centro_izquierda
 183+ 945F A7               and a
 184+ 9460 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9461 28 1E            jr z,3F
 186+ 9463 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9465              ;                                                    ; _salimos sin modificar nada.
 188+ 9465 18 0E            jr 2F
 189+ 9467 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9468 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 946A
 192+ 946A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 946A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 946A
 195+ 946A 3A CC 88         ld a,(Coordenada_X)
 196+ 946D 16 10            ld d,Centro_derecha
 197+ 946F A7               and a
 198+ 9470 92               sub d
 199+ 9471 28 0E            jr z,3F
 200+ 9473 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9475              ;                                                    ; _salimos sin modificar nada.
 202+ 9475 CB 43        2 bit 0,e
 203+ 9477 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9479 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 947A CD 0E 95         call Modificaccionne
 206+ 947D C1           	pop bc
 207+ 947E CD 1E 95         call Inicializacion
 208+ 9481 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9482
 210+ 9482              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9482
 212+ 9482 C5           4 push bc
 213+ 9483 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9486 0A           	ld a,(bc)
 215+ 9487 3D           	dec a
 216+ 9488 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9489 7D           	ld a,l
 218+ 948A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 948B CB 47        	bit 0,a
 220+ 948D 28 03        	jr z,5F
 221+ 948F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9490 18 2E        	jr 7F
 223+ 9492
 224+ 9492              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9492
 226+ 9492 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9493 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9494 3A F0 88     	ld a,(Ctrl_0)
 229+ 9497 CB 4F        	bit 1,a
 230+ 9499 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 949B F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 949C
 233+ 949C              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 949C
 235+ 949C 1C               inc e
 236+ 949D 1D               dec e
 237+ 949E 20 07            jr nz,12F
 238+ 94A0 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94A1 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94A2 22 C8 88     	ld (Posicion_actual),hl
 241+ 94A5 18 44        13 jr 9F
 242+ 94A7 CB 43        12 bit 0,e
 243+ 94A9 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94AB              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94AB C1           	pop bc
 246+ 94AC 18 D3        	jr 3B
 247+ 94AE 80           14 add b
 248+ 94AF 6F               ld l,a
 249+ 94B0 22 C8 88     	ld (Posicion_actual),hl
 250+ 94B3 CD 0E 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94B6 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94B8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94BA 32 F0 88         ld (Ctrl_0),a
 254+ 94BD F1           	pop af
 255+ 94BE 18 2B        	jr 9F
 256+ 94C0
 257+ 94C0              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94C0
 259+ 94C0 F5           7 push af
 260+ 94C1 3A F0 88     	ld a,(Ctrl_0)
 261+ 94C4 CB 47        	bit 0,a
 262+ 94C6 20 1D        	jr nz,8F
 263+ 94C8 F1           	pop af
 264+ 94C9
 265+ 94C9              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94C9
 267+ 94C9 1C           	inc e
 268+ 94CA 1D               dec e
 269+ 94CB 20 07            jr nz,10F
 270+ 94CD 90           	sub b
 271+ 94CE 6F               ld l,a
 272+ 94CF 22 C8 88     	ld (Posicion_actual),hl
 273+ 94D2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94D4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94D4 CB 43        10 bit 0,e
 276+ 94D6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94D8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94D8 C1           	pop bc
 279+ 94D9 18 A6        	jr 3B
 280+ 94DB 90           16 sub b
 281+ 94DC 6F               ld l,a
 282+ 94DD 22 C8 88     	ld (Posicion_actual),hl
 283+ 94E0 CD 0E 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94E3 18 06            jr 9F
 285+ 94E5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94E7 32 F0 88         ld (Ctrl_0),a
 287+ 94EA F1           	pop af
 288+ 94EB C1           9 pop bc
 289+ 94EC 1E 00        	ld e,0
 290+ 94EE CD 1E 95         call Inicializacion
 291+ 94F1 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94F2 08           	ex af,af
 293+ 94F3 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94F4 18 8B            jr 3B
 295+ 94F6
 296+ 94F6              ; --------------------
 297+ 94F6
 298+ 94F6 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94F8 CD 7C 96     1 call PreviousScan
 300+ 94FB 10 FB            djnz 1B
 301+ 94FD 22 C8 88     	ld (Posicion_actual),hl
 302+ 9500 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9501 C9           	ret
 304+ 9502
 305+ 9502              ; --------------------
 306+ 9502
 307+ 9502 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9504 CD 6D 96     1 call NextScan
 309+ 9507 10 FB            djnz 1B
 310+ 9509 22 C8 88     	ld (Posicion_actual),hl
 311+ 950C AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 950D C9           	ret
 313+ 950E
 314+ 950E              ; --------------------
 315+ 950E              ;
 316+ 950E              ;	22/01/23
 317+ 950E              ;
 318+ 950E              ;	E="1". Hemos cambiado de cuadrante.
 319+ 950E              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 950E              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 950E
 322+ 950E
 323+ 950E              Modificaccionne
 324+ 950E
 325+ 950E 3A DA 88     	ld a,(Cuad_objeto)
 326+ 9511 FE 02        	cp 2
 327+ 9513 CC F6 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9516 DC F6 94         call c,Modifica_Pos_actual
 329+ 9519 C8           	ret z
 330+ 951A CD 02 95         call Modifica_Pos_actual2
 331+ 951D C9               ret
 332+ 951E
 333+ 951E              ; *************************************************************************************************************************************************************************************************
 334+ 951E              ;
 335+ 951E              ;	13/8/22
 336+ 951E              ;
 337+ 951E              ;	Inicializacion
 338+ 951E              ;
 339+ 951E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 951E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 951E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 951E              ;
 343+ 951E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 951E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 951E              ;	_ desaparece/aparece.
 346+ 951E
 347+ 951E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 951E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 951E              ;
 350+ 951E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 951E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 951E              ; 		   [E] ="0"
 353+ 951E
 354+ 951E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 951E
 356+ 951E CD 80 99     Inicializacion call calcula_tercio
 357+ 9521 28 36        	jr z,primit
 358+ 9523 E6 02        	and 2
 359+ 9525 20 07        	jr nz,segmit
 360+ 9527 7D           	ld a,l
 361+ 9528 FE 7F        	cp $7f
 362+ 952A 38 2D        	jr c,primit
 363+ 952C 28 2B        	jr z,primit
 364+ 952E CD 8B 95     segmit call column
 365+ 9531 38 13        	jr c,tercuad
 366+ 9533 3E 04        cuarcuad ld a,4
 367+ 9535 32 DA 88     	ld (Cuad_objeto),a
 368+ 9538 21 20 48     	ld hl,$4820
 369+ 953B 22 FE 88     	ld (Limite_horizontal),hl
 370+ 953E 21 00 89     	ld hl,Limite_vertical
 371+ 9541 36 0D        	ld (hl),$0d
 372+ 9543 08           	ex af,af
 373+ 9544 18 3C        	jr 1F
 374+ 9546              tercuad
 375+ 9546 3E 03        	ld a,3
 376+ 9548 32 DA 88     	ld (Cuad_objeto),a
 377+ 954B 21 20 48     	ld hl,$4820
 378+ 954E 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9551 21 00 89     	ld hl,Limite_vertical
 380+ 9554 36 12        	ld (hl),$12
 381+ 9556 08           	ex af,af
 382+ 9557 18 29        	jr 1F
 383+ 9559 CD 8B 95     primit call column
 384+ 955C 38 13        	jr c, primcuad
 385+ 955E              segcuad
 386+ 955E 3E 02        	ld a,2
 387+ 9560 32 DA 88     	ld (Cuad_objeto),a
 388+ 9563 21 C0 4F     	ld hl,$4fc0
 389+ 9566 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9569 21 00 89     	ld hl,Limite_vertical
 391+ 956C 36 0D        	ld (hl),$0d
 392+ 956E 08           	ex af,af
 393+ 956F 18 11        	jr 1F
 394+ 9571              primcuad
 395+ 9571 3E 01        	ld a,1
 396+ 9573 32 DA 88     	ld (Cuad_objeto),a
 397+ 9576 21 C0 4F     	ld hl,$4fc0
 398+ 9579 22 FE 88     	ld (Limite_horizontal),hl
 399+ 957C 21 00 89     	ld hl,Limite_vertical
 400+ 957F 36 12        	ld (hl),$12
 401+ 9581 08           	ex af,af
 402+ 9582 CD 0B 9D     1 call Genera_coordenadas
 403+ 9585 21 F0 88     	ld hl,Ctrl_0
 404+ 9588 CB EE        	set 5,(hl)
 405+ 958A C9           	ret
 406+ 958B
 407+ 958B              ; ------------------------------------------------------------------------------------------------------------------
 408+ 958B
 409+ 958B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 958B              ;
 411+ 958B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 958B
 413+ 958B 7D           column ld a,l
 414+ 958C E6 1F        	and $1f
 415+ 958E FE 10         	cp $10
 416+ 9590 C9            	ret
 417+ 9591
 418+ 9591              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9591              ;
 420+ 9591              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9591              ;
 422+ 9591              ; 14/12/22
 423+ 9591              ;
 424+ 9591              ;	Modifica: A y BC.
 425+ 9591
 426+ 9591 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9594 E6 01        	and 1
 428+ 9596 28 17        	jr z,1F
 429+ 9598
 430+ 9598              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9598
 432+ 9598 3A CC 88     	ld a,(Coordenada_X)
 433+ 959B 47           	ld b,a
 434+ 959C 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 959D 79           	ld a,c
 436+ 959E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 959F 38 08        	jr c,2F
 438+ 95A1 47           	ld b,a
 439+ 95A2 79           	ld a,c
 440+ 95A3 90           	sub b
 441+ 95A4 32 FD 88     	ld (Columnas),a
 442+ 95A7 18 1B        	jr 4F
 443+ 95A9 79           2 ld a,c
 444+ 95AA 32 FD 88     	ld (Columnas),a
 445+ 95AD 18 15        	jr 4F
 446+ 95AF
 447+ 95AF              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95AF
 449+ 95AF 3A CC 88     1 ld a,(Coordenada_X)
 450+ 95B2 81           	add c
 451+ 95B3 3D           	dec a
 452+ 95B4 D6 1F        	sub $1f
 453+ 95B6 38 08        	jr c,3F
 454+ 95B8 47           	ld b,a
 455+ 95B9 79           	ld a,c
 456+ 95BA 90           	sub b
 457+ 95BB 32 FD 88     	ld (Columnas),a
 458+ 95BE 18 04        	jr 4F
 459+ 95C0 79           3 ld a,c
 460+ 95C1 32 FD 88     	ld (Columnas),a
 461+ 95C4 D9           4 exx
 462+ 95C5 4F           	ld c,a
 463+ 95C6 D9           	exx
 464+ 95C7 C9            ret
 465+ 95C8
 466+ 95C8              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95C8              ;
 468+ 95C8              ;   19/7/23
 469+ 95C8              ;
 470+ 95C8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95C8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95C8              ;
 473+ 95C8              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95C8              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95C8              ;
 476+ 95C8              ;	DESTRUYE: HL,B Y A.
 477+ 95C8
 478+ 95C8 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95CB FE 02        	cp 2
 480+ 95CD 38 18        	jr c,1F
 481+ 95CF 28 16        	jr z,1F
 482+ 95D1 E6 01        	and 1
 483+ 95D3 28 0D        	jr z,3F
 484+ 95D5
 485+ 95D5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95D5
 487+ 95D5 CD 1B 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95D8
 489+ 95D8 7D           9 ld a,l
 490+ 95D9 E6 1F        	and $1f
 491+ 95DB 28 2A        	jr z,7F
 492+ 95DD 2B           	dec hl
 493+ 95DE 10 F8        	djnz 9B
 494+ 95E0 18 25        	jr 7F
 495+ 95E2
 496+ 95E2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95E2
 498+ 95E2 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95E5 18 20        	jr 7F
 500+ 95E7
 501+ 95E7 28 14        1 jr z,2F
 502+ 95E9
 503+ 95E9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95E9
 505+ 95E9 CD 1B 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95EC
 507+ 95EC 7D           4 ld a,l
 508+ 95ED E6 1F        	and $1f
 509+ 95EF 28 03        	jr z,6F
 510+ 95F1 2B           	dec hl
 511+ 95F2 10 F8        	djnz 4B
 512+ 95F4 06 0F        6 ld b,15
 513+ 95F6 CD 7C 96     5 call PreviousScan
 514+ 95F9 10 FB        	djnz 5B
 515+ 95FB 18 0A        	jr 7F
 516+ 95FD
 517+ 95FD              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95FD
 519+ 95FD CD 1B 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9600 06 0F        	ld b,15
 521+ 9602 CD 7C 96     8 call PreviousScan
 522+ 9605 10 FB        	djnz 8B
 523+ 9607
 524+ 9607 E5           7 push hl
 525+ 9608 DD E1        	pop ix
 526+ 960A
 527+ 960A 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 960D E5           	push hl
 529+ 960E FD E1        	pop iy
 530+ 9610
 531+ 9610              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9610
 533+ 9610 3A F0 88     	ld a,(Ctrl_0)
 534+ 9613 CB 77        	bit 6,a
 535+ 9615 C8           	ret z
 536+ 9616
 537+ 9616              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9616              ; _ entidad / Amadeus´.
 539+ 9616
 540+ 9616 DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 961A
 542+ 961A C9           	ret
 543+ 961B
 544+ 961B              ; --------------------------------------------------------------------------------------------------------------------
 545+ 961B              ;
 546+ 961B              ;	2/1/23
 547+ 961B              ;
 548+ 961B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 961B              ;
 550+ 961B              ;	Tras esta rutina tenemos:
 551+ 961B              ;
 552+ 961B              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 961B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 961B              ;
 555+ 961B              ;	DESTRUYE!!!!! HL,B y A.
 556+ 961B
 557+ 961B 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 961E 3A FD 88     	ld a,(Columnas)
 559+ 9621 3D           	dec a
 560+ 9622 20 01        	jr nz,1F
 561+ 9624 3C           	inc a
 562+ 9625 47           1 ld b,a
 563+ 9626 C9           	ret
 564+ 9627
 565+ 9627              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9627              ;
 567+ 9627              ;	3/1/23
 568+ 9627              ;
 569+ 9627              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9627              ;
 571+ 9627              ;	Destruye: A,B,HL y DE.
 572+ 9627
 573+ 9627              Define_rutina_de_impresion
 574+ 9627
 575+ 9627 3A C7 88     	ld a,(Columns)
 576+ 962A 47           	ld b,a
 577+ 962B 3A FD 88     	ld a,(Columnas)
 578+ 962E B8           	cp b
 579+ 962F 20 0D        	jr nz,2f
 580+ 9631
 581+ 9631              ;	La entidad se imprime entera.
 582+ 9631
 583+ 9631 21 50 97     	ld hl, Indice_entidades_completas
 584+ 9634 E6 01        	and 1
 585+ 9636 28 02        	jr z,1F
 586+ 9638
 587+ 9638 23           	inc hl
 588+ 9639 23           	inc hl
 589+ 963A
 590+ 963A CD 8A 8C     1 call Extrae_address
 591+ 963D C9           	ret		;	ret
 592+ 963E
 593+ 963E              ;	La entidad no se imprime entera en pantalla.
 594+ 963E
 595+ 963E 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 9641 E6 01        	and 1
 597+ 9643 28 17        	jr z,3F
 598+ 9645
 599+ 9645              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9645
 601+ 9645 21 54 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9648 3A C7 88     4 ld a,(Columns)
 603+ 964B E6 01        	and 1
 604+ 964D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 964F
 606+ 964F 23           	inc hl
 607+ 9650 23           	inc hl
 608+ 9651
 609+ 9651 3A FD 88     	ld a,(Columnas)
 610+ 9654 E6 01        	and 1
 611+ 9656 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9658
 613+ 9658 23           	inc hl
 614+ 9659 23           	inc hl
 615+ 965A
 616+ 965A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 965C
 618+ 965C 21 5A 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 965F 18 E7        	jr 4B
 620+ 9661
 621+ 9661              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9661              ;
 623+ 9661              ;	Prepara_draw
 624+ 9661              ;
 625+ 9661              ;	Es una rutina de carga.
 626+ 9661              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9661              ;
 628+ 9661              ;	FUNCIONAMIENTO:
 629+ 9661              ;
 630+ 9661              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9661              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9661              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9661              ;
 634+ 9661              ;	DESTRUYE:
 635+ 9661              ;
 636+ 9661              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9661
 638+ 9661 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9664 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9665 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9666 4E           	ld c,(hl)
 642+ 9667 2A C8 88     	ld hl,(Posicion_actual)
 643+ 966A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 966C C9           	ret
 645+ 966D
 646+ 966D              ;----------------------------------------------------------------------------------------------------------------
 647+ 966D              ;
 648+ 966D              ;	5/08/22
 649+ 966D              ;
 650+ 966D              ;   NextScan.
 651+ 966D              ;
 652+ 966D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 966D              ;
 654+ 966D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 966D              ;
 656+ 966D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 966D              ;
 658+ 966D              ;       DESTRUIDOS: AF y HL !!!
 659+ 966D              ;
 660+ 966D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 966D              ;
 662+ 966D
 663+ 966D 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 966E 7C               ld a,h
 665+ 966F E6 07            and 7
 666+ 9671 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9672
 668+ 9672 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9673 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9675 6F               ld l,a
 671+ 9676 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9677
 673+ 9677 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9678 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 967A 67               ld h,a
 676+ 967B C9               ret
 677+ 967C
 678+ 967C              ;----------------------------------------------------------------------------------------------------------------
 679+ 967C              ;
 680+ 967C              ;	5/08/22
 681+ 967C              ;
 682+ 967C              ;   PreviousScan.
 683+ 967C              ;
 684+ 967C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 967C              ;
 686+ 967C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 967C              ;
 688+ 967C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 967C              ;
 690+ 967C              ;       DESTRUIDOS: AF y HL !!!
 691+ 967C              ;
 692+ 967C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 967C              ;
 694+ 967C
 695+ 967C 7C           PreviousScan ld a,h
 696+ 967D 25               dec h               ; Dec H.
 697+ 967E E6 07            and 7
 698+ 9680 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9681
 700+ 9681 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9682 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9684 6F               ld l,a
 703+ 9685 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9686
 705+ 9686 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9687 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9689 67               ld h,a
 708+ 968A C9               ret
 709+ 968B
 710+ 968B              ; -----------------------------------------------------------------------------------
 711+ 968B              ;
 712+ 968B              ;	31/7/23
 713+ 968B              ;
 714+ 968B              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 968B              ;	Extrae fotos de Album_de_fotos.
 716+ 968B
 717+ 968B              Extrae_foto_entidades
 718+ 968B
 719+ 968B 21 01 70     	ld hl,Album_de_fotos+1
 720+ 968E 7E           	ld a,(hl)
 721+ 968F A7           	and a
 722+ 9690 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9691
 724+ 9691 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9694 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9695 C8           	ret z
 727+ 9696
 728+ 9696              ; -----------------------------------
 729+ 9696
 730+ 9696 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 969A 31 00 70     	ld sp,Album_de_fotos
 732+ 969D
 733+ 969D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 969F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96A0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96A1
 737+ 96A1 ED 73 17 89  	ld (Stack_2),sp
 738+ 96A5 ED 7B 15 89  	ld sp,(Stack)
 739+ 96A9
 740+ 96A9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96A9
 742+ 96A9 3E CD        	ld a,$cd
 743+ 96AB 32 B3 96     	ld (Imprime),a
 744+ 96AE EB           	ex de,hl
 745+ 96AF 22 B4 96     	ld (Imprime+1),hl
 746+ 96B2 EB           	ex de,hl
 747+ 96B3
 748+ 96B3              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96B3
 750+ 96B3 00 00 00     Imprime db 0,0,0
 751+ 96B6
 752+ 96B6 ED 73 15 89  	ld (Stack),sp
 753+ 96BA
 754+ 96BA 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 96BD 3D           	dec a
 756+ 96BE 28 09        	jr z,1F
 757+ 96C0 32 10 89      	ld (Numero_de_malotes),a
 758+ 96C3
 759+ 96C3 ED 7B 17 89  	ld sp,(Stack_2)
 760+ 96C7 18 D4        	jr 2B
 761+ 96C9
 762+ 96C9 AF           1 xor a
 763+ 96CA 32 17 89     	ld (Stack_2),a
 764+ 96CD
 765+ 96CD C9           	ret
 766+ 96CE
 767+ 96CE              ; -----------------------------------------------------------------------------------
 768+ 96CE              ;
 769+ 96CE              ;	28/2/23
 770+ 96CE              ;
 771+ 96CE              ;	Pinta los disparos generados.
 772+ 96CE
 773+ 96CE              Extrae_foto_disparos
 774+ 96CE
 775+ 96CE 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96D1 7E               ld a,(hl)
 777+ 96D2 A7               and a
 778+ 96D3 C8               ret z
 779+ 96D4
 780+ 96D4 3A 3D 89     	ld a,(Numero_de_disparotes)
 781+ 96D7 A7           	and a
 782+ 96D8 C8           	ret z
 783+ 96D9 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96DD 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96E0
 786+ 96E0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96E2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96E3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96E4
 790+ 96E4 ED 73 17 89  	ld (Stack_2),sp
 791+ 96E8 ED 7B 15 89  	ld sp,(Stack)
 792+ 96EC
 793+ 96EC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96EC
 795+ 96EC 3E CD        	ld a,$cd
 796+ 96EE 32 F6 96     	ld (Imprime2),a
 797+ 96F1 EB           	ex de,hl
 798+ 96F2 22 F7 96     	ld (Imprime2+1),hl
 799+ 96F5 EB           	ex de,hl
 800+ 96F6
 801+ 96F6              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96F6
 803+ 96F6 00 00 00     Imprime2 db 0,0,0
 804+ 96F9
 805+ 96F9 3A 3D 89     	ld a,(Numero_de_disparotes)
 806+ 96FC 3D           	dec a
 807+ 96FD 28 09        	jr z,1F
 808+ 96FF 32 3D 89      	ld (Numero_de_disparotes),a
 809+ 9702
 810+ 9702 ED 7B 17 89  	ld sp,(Stack_2)
 811+ 9706 18 D8        	jr 2B
 812+ 9708
 813+ 9708 AF           1 xor a
 814+ 9709 32 17 89     	ld (Stack_2),a
 815+ 970C C9           	ret
 816+ 970D
 817+ 970D              ; -----------------------------------------------------------------------------------
 818+ 970D              ;
 819+ 970D              ;	4/9/23
 820+ 970D              ;
 821+ 970D              ;	Rutina principal de pintado de Amadeus.
 822+ 970D              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 970D
 824+ 970D 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9710 7E           	ld a,(hl)
 826+ 9711 A7           	and a
 827+ 9712 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9713
 829+ 9713 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 9716 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 9717 C8           	ret z
 832+ 9718
 833+ 9718              ; -----------------------------------
 834+ 9718
 835+ 9718 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 971C 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 971F
 838+ 971F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9721 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9722 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9723
 842+ 9723 ED 73 17 89  	ld (Stack_2),sp
 843+ 9727 ED 7B 15 89  	ld sp,(Stack)
 844+ 972B
 845+ 972B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 972B
 847+ 972B 3E CD        	ld a,$cd
 848+ 972D 32 35 97     	ld (Imprime_Amadeus),a
 849+ 9730 EB           	ex de,hl
 850+ 9731 22 36 97     	ld (Imprime_Amadeus+1),hl
 851+ 9734 EB           	ex de,hl
 852+ 9735
 853+ 9735              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9735
 855+ 9735 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9738
 857+ 9738 ED 73 15 89  	ld (Stack),sp
 858+ 973C
 859+ 973C 3A 10 89     	ld a,(Numero_de_malotes)
 860+ 973F 3D           	dec a
 861+ 9740 28 09        	jr z,1F
 862+ 9742 32 10 89      	ld (Numero_de_malotes),a
 863+ 9745
 864+ 9745 ED 7B 17 89  	ld sp,(Stack_2)
 865+ 9749 18 D4        	jr 2B
 866+ 974B
 867+ 974B AF           1 xor a
 868+ 974C 32 17 89     	ld (Stack_2),a
 869+ 974F
 870+ 974F C9           	ret
# file closed: Draw_XOR.asm
1692  9750              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9750              ;   índices de Rutinas de impresión.
   2+ 9750
   3+ 9750 60 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9752 8D 97            defw Pinta_Amadeus_3x2
   5+ 9754
   6+ 9754 E3 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9756 83 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9758 37 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 975A
  10+ 975A 0D 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 975C 11 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 975E C5 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9760
  14+ 9760
  15+ 9760              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9760              ;
  17+ 9760              ;   12/12/22
  18+ 9760              ;
  19+ 9760              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9760              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9760              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9760              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9760              ;
  24+ 9760              ;   Modifica: DE y HL.
  25+ 9760
  26+ 9760 ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9764 FD F9        	ld sp,iy
  28+ 9766 06 10            ld b,16
  29+ 9768 D1           1 pop de
  30+ 9769 7B               ld a,e
  31+ 976A AE               xor (hl)
  32+ 976B 77           	ld (hl),a
  33+ 976C 23           	inc hl
  34+ 976D 7A               ld a,d
  35+ 976E AE               xor (hl)
  36+ 976F 77           	ld (hl),a
  37+ 9770 2B           	dec hl
  38+ 9771 24           	inc h
  39+ 9772 7C               ld a,h
  40+ 9773 E6 07            and 7
  41+ 9775 20 0A            jr nz,2F
  42+ 9777 7D               ld a,l
  43+ 9778 C6 20            add a,$20
  44+ 977A 6F               ld l,a
  45+ 977B 38 04            jr c,2F
  46+ 977D 7C               ld a,h
  47+ 977E D6 08            sub 8
  48+ 9780 67               ld h,a
  49+ 9781 7C           2 ld a,h
  50+ 9782 FE 58            cp $58
  51+ 9784 28 02            jr z,3F
  52+ 9786 10 E0            djnz 1B
  53+ 9788 ED 7B 15 89  3 ld sp,(Stack)
  54+ 978C C9           	ret
  55+ 978D
  56+ 978D ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9791 FD F9        	ld sp,iy
  58+ 9793 06 08            ld b,8
  59+ 9795 D1           1 pop de
  60+ 9796 7B               ld a,e
  61+ 9797 AE               xor (hl)
  62+ 9798 77           	ld (hl),a
  63+ 9799 23           	inc hl
  64+ 979A 7A               ld a,d
  65+ 979B AE               xor (hl)
  66+ 979C 77           	ld (hl),a
  67+ 979D 23           	inc hl
  68+ 979E D1           	pop de
  69+ 979F 7B               ld a,e
  70+ 97A0 AE               xor (hl)
  71+ 97A1 77           	ld (hl),a
  72+ 97A2 2B           	dec hl
  73+ 97A3 2B           	dec hl
  74+ 97A4 24           	inc h
  75+ 97A5 7C               ld a,h
  76+ 97A6 E6 07            and 7
  77+ 97A8 20 0A            jr nz,2F
  78+ 97AA 7D               ld a,l
  79+ 97AB C6 20            add a,$20
  80+ 97AD 6F               ld l,a
  81+ 97AE 38 04            jr c,2F
  82+ 97B0 7C               ld a,h
  83+ 97B1 D6 08            sub 8
  84+ 97B3 67               ld h,a
  85+ 97B4 7C           2 ld a,h
  86+ 97B5 FE 58            cp $58
  87+ 97B7 28 25            jr z,4F
  88+ 97B9 7A               ld a,d
  89+ 97BA AE               xor (hl)
  90+ 97BB 77               ld (hl),a
  91+ 97BC D1           	pop de
  92+ 97BD 23           	inc hl
  93+ 97BE 7B               ld a,e
  94+ 97BF AE               xor (hl)
  95+ 97C0 77           	ld (hl),a
  96+ 97C1 23           	inc hl
  97+ 97C2 7A               ld a,d
  98+ 97C3 AE               xor (hl)
  99+ 97C4 77           	ld (hl),a
 100+ 97C5 2B           	dec hl
 101+ 97C6 2B           	dec hl
 102+ 97C7 24           	inc h
 103+ 97C8 7C               ld a,h
 104+ 97C9 E6 07            and 7
 105+ 97CB 20 0A            jr nz,3F
 106+ 97CD 7D               ld a,l
 107+ 97CE C6 20            add a,$20
 108+ 97D0 6F               ld l,a
 109+ 97D1 38 04            jr c,3F
 110+ 97D3 7C               ld a,h
 111+ 97D4 D6 08            sub 8
 112+ 97D6 67               ld h,a
 113+ 97D7 7C           3 ld a,h
 114+ 97D8 FE 58            cp $58
 115+ 97DA 28 02            jr z,4F
 116+ 97DC 10 B7            djnz 1B
 117+ 97DE ED 7B 15 89  4 ld sp,(Stack)
 118+ 97E2 C9           	ret
 119+ 97E3
 120+ 97E3              ; ---------------------------------------------------
 121+ 97E3
 122+ 97E3 ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97E7 FD F9        	ld sp,iy
 124+ 97E9
 125+ 97E9              ; >>>
 126+ 97E9
 127+ 97E9 06 10            ld b,16
 128+ 97EB D1           1 pop de
 129+ 97EC 7A           	ld a,d
 130+ 97ED AE           	xor (hl)
 131+ 97EE 77           	ld (hl),a
 132+ 97EF 24           	inc h
 133+ 97F0 7C               ld a,h
 134+ 97F1 E6 07            and 7
 135+ 97F3 20 0C            jr nz,2F
 136+ 97F5 7D               ld a,l
 137+ 97F6 C6 20            add a,$20
 138+ 97F8 6F               ld l,a
 139+ 97F9 38 06            jr c,2F
 140+ 97FB 7C               ld a,h
 141+ 97FC D6 08            sub 8
 142+ 97FE 67               ld h,a
 143+ 97FF 18 00            jr 2F
 144+ 9801 7C           2 ld a,h
 145+ 9802 FE 58            cp $58
 146+ 9804 28 02            jr z,3F
 147+ 9806 10 E3            djnz 1B
 148+ 9808 ED 7B 15 89  3 ld sp,(Stack)
 149+ 980C C9           	ret
 150+ 980D
 151+ 980D ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9811 FD F9        	ld sp,iy
 153+ 9813
 154+ 9813              ; >>>
 155+ 9813
 156+ 9813 06 10            ld b,16
 157+ 9815 D1           1 pop de
 158+ 9816 7B           	ld a,e
 159+ 9817 AE           	xor (hl)
 160+ 9818 77           	ld (hl),a
 161+ 9819 24           	inc h
 162+ 981A 7C               ld a,h
 163+ 981B E6 07            and 7
 164+ 981D 20 0C            jr nz,2F
 165+ 981F 7D               ld a,l
 166+ 9820 C6 20            add a,$20
 167+ 9822 6F               ld l,a
 168+ 9823 38 06            jr c,2F
 169+ 9825 7C               ld a,h
 170+ 9826 D6 08            sub 8
 171+ 9828 67               ld h,a
 172+ 9829 18 00            jr 2F
 173+ 982B 7C           2 ld a,h
 174+ 982C FE 58            cp $58
 175+ 982E 28 02            jr z,3F
 176+ 9830 10 E3            djnz 1B
 177+ 9832 ED 7B 15 89  3 ld sp,(Stack)
 178+ 9836 C9           	ret
 179+ 9837
 180+ 9837              ; ---------------------------------------------------
 181+ 9837
 182+ 9837 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 983B FD F9        	ld sp,iy
 184+ 983D 06 08            ld b,8
 185+ 983F D1           1 pop de
 186+ 9840 7A           	ld a,d
 187+ 9841 AE           	xor (hl)
 188+ 9842 77           	ld (hl),a
 189+ 9843 23           	inc hl
 190+ 9844 D1           	pop de
 191+ 9845 7B           	ld a,e
 192+ 9846 AE           	xor (hl)
 193+ 9847 77           	ld (hl),a
 194+ 9848 2B           	dec hl
 195+ 9849 24            	inc h
 196+ 984A 7C               ld a,h
 197+ 984B E6 07            and 7
 198+ 984D 20 0A            jr nz,2F
 199+ 984F 7D               ld a,l
 200+ 9850 C6 20            add a,$20
 201+ 9852 6F               ld l,a
 202+ 9853 38 04            jr c,2F
 203+ 9855 7C               ld a,h
 204+ 9856 D6 08            sub 8
 205+ 9858 67               ld h,a
 206+ 9859 7C           2 ld a,h
 207+ 985A FE 58            cp $58
 208+ 985C 28 20            jr z,4F
 209+ 985E D1               pop de
 210+ 985F 7B           	ld a,e
 211+ 9860 AE           	xor (hl)
 212+ 9861 77           	ld (hl),a
 213+ 9862 23           	inc hl
 214+ 9863 7A           	ld a,d
 215+ 9864 AE           	xor (hl)
 216+ 9865 77           	ld (hl),a
 217+ 9866 2B           	dec hl
 218+ 9867 24           	inc h
 219+ 9868 7C               ld a,h
 220+ 9869 E6 07            and 7
 221+ 986B 20 0A            jr nz,3F
 222+ 986D 7D               ld a,l
 223+ 986E C6 20            add a,$20
 224+ 9870 6F               ld l,a
 225+ 9871 38 04            jr c,3F
 226+ 9873 7C               ld a,h
 227+ 9874 D6 08            sub 8
 228+ 9876 67               ld h,a
 229+ 9877 7C           3 ld a,h
 230+ 9878 FE 58            cp $58
 231+ 987A 28 02            jr z,4F
 232+ 987C 10 C1            djnz 1B
 233+ 987E ED 7B 15 89  4 ld sp,(Stack)
 234+ 9882 C9           	ret
 235+ 9883
 236+ 9883 ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9887 FD F9        	ld sp,iy
 238+ 9889 06 08            ld b,8
 239+ 988B D1           1 pop de
 240+ 988C D1           	pop de
 241+ 988D 7B           	ld a,e
 242+ 988E AE           	xor (hl)
 243+ 988F 77           	ld (hl),a
 244+ 9890 24            	inc h
 245+ 9891 7C               ld a,h
 246+ 9892 E6 07            and 7
 247+ 9894 20 0A            jr nz,2F
 248+ 9896 7D               ld a,l
 249+ 9897 C6 20            add a,$20
 250+ 9899 6F               ld l,a
 251+ 989A 38 04            jr c,2F
 252+ 989C 7C               ld a,h
 253+ 989D D6 08            sub 8
 254+ 989F 67               ld h,a
 255+ 98A0 7C           2 ld a,h
 256+ 98A1 FE 58            cp $58
 257+ 98A3 28 1B            jr z,4F
 258+ 98A5 D1               pop de
 259+ 98A6 7A           	ld a,d
 260+ 98A7 AE           	xor (hl)
 261+ 98A8 77           	ld (hl),a
 262+ 98A9 24           	inc h
 263+ 98AA 7C               ld a,h
 264+ 98AB E6 07            and 7
 265+ 98AD 20 0A            jr nz,3F
 266+ 98AF 7D               ld a,l
 267+ 98B0 C6 20            add a,$20
 268+ 98B2 6F               ld l,a
 269+ 98B3 38 04            jr c,3F
 270+ 98B5 7C               ld a,h
 271+ 98B6 D6 08            sub 8
 272+ 98B8 67               ld h,a
 273+ 98B9 7C           3 ld a,h
 274+ 98BA FE 58            cp $58
 275+ 98BC 28 02            jr z,4F
 276+ 98BE 10 CB            djnz 1B
 277+ 98C0 ED 7B 15 89  4 ld sp,(Stack)
 278+ 98C4 C9           	ret
 279+ 98C5
 280+ 98C5 ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98C9 FD F9        	ld sp,iy
 282+ 98CB 06 08            ld b,8
 283+ 98CD D1           1 pop de
 284+ 98CE 7B           	ld a,e
 285+ 98CF AE           	xor (hl)
 286+ 98D0 77           	ld (hl),a
 287+ 98D1 23           	inc hl
 288+ 98D2 7A           	ld a,d
 289+ 98D3 AE           	xor (hl)
 290+ 98D4 77           	ld (hl),a
 291+ 98D5 2B           	dec hl
 292+ 98D6 24             	inc h
 293+ 98D7 7C               ld a,h
 294+ 98D8 E6 07            and 7
 295+ 98DA 20 0A            jr nz,2F
 296+ 98DC 7D               ld a,l
 297+ 98DD C6 20            add a,$20
 298+ 98DF 6F               ld l,a
 299+ 98E0 38 04            jr c,2F
 300+ 98E2 7C               ld a,h
 301+ 98E3 D6 08            sub 8
 302+ 98E5 67               ld h,a
 303+ 98E6 7C           2 ld a,h
 304+ 98E7 FE 58            cp $58
 305+ 98E9 28 21            jr z,4F
 306+ 98EB D1               pop de
 307+ 98EC 7A           	ld a,d
 308+ 98ED AE           	xor (hl)
 309+ 98EE 77           	ld (hl),a
 310+ 98EF 23           	inc hl
 311+ 98F0 D1               pop de
 312+ 98F1 7B           	ld a,e
 313+ 98F2 AE           	xor (hl)
 314+ 98F3 77           	ld (hl),a
 315+ 98F4 2B           	dec hl
 316+ 98F5 24           	inc h
 317+ 98F6 7C               ld a,h
 318+ 98F7 E6 07            and 7
 319+ 98F9 20 0A            jr nz,3F
 320+ 98FB 7D               ld a,l
 321+ 98FC C6 20            add a,$20
 322+ 98FE 6F               ld l,a
 323+ 98FF 38 04            jr c,3F
 324+ 9901 7C               ld a,h
 325+ 9902 D6 08            sub 8
 326+ 9904 67               ld h,a
 327+ 9905 7C           3 ld a,h
 328+ 9906 FE 58            cp $58
 329+ 9908 28 02            jr z,4F
 330+ 990A 10 C1            djnz 1B
 331+ 990C ED 7B 15 89  4 ld sp,(Stack)
 332+ 9910 C9           	ret
 333+ 9911
 334+ 9911 ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9915 FD F9        	ld sp,iy
 336+ 9917 06 08            ld b,8
 337+ 9919 D1           1 pop de
 338+ 991A 7B           	ld a,e
 339+ 991B AE           	xor (hl)
 340+ 991C 77           	ld (hl),a
 341+ 991D 24            	inc h
 342+ 991E 7C               ld a,h
 343+ 991F E6 07            and 7
 344+ 9921 20 0A            jr nz,2F
 345+ 9923 7D               ld a,l
 346+ 9924 C6 20            add a,$20
 347+ 9926 6F               ld l,a
 348+ 9927 38 04            jr c,2F
 349+ 9929 7C               ld a,h
 350+ 992A D6 08            sub 8
 351+ 992C 67               ld h,a
 352+ 992D 7C           2 ld a,h
 353+ 992E FE 58            cp $58
 354+ 9930 28 1C            jr z,4F
 355+ 9932 D1               pop de
 356+ 9933 7A           	ld a,d
 357+ 9934 AE           	xor (hl)
 358+ 9935 77           	ld (hl),a
 359+ 9936 24           	inc h
 360+ 9937 7C               ld a,h
 361+ 9938 E6 07            and 7
 362+ 993A 20 0A            jr nz,3F
 363+ 993C 7D               ld a,l
 364+ 993D C6 20            add a,$20
 365+ 993F 6F               ld l,a
 366+ 9940 38 04            jr c,3F
 367+ 9942 7C               ld a,h
 368+ 9943 D6 08            sub 8
 369+ 9945 67               ld h,a
 370+ 9946 7C           3 ld a,h
 371+ 9947 FE 58            cp $58
 372+ 9949 28 03            jr z,4F
 373+ 994B D1               pop de
 374+ 994C 10 CB            djnz 1B
 375+ 994E ED 7B 15 89  4 ld sp,(Stack)
 376+ 9952 C9           	ret
 377+ 9953
 378+ 9953              ; ---------------------------------------------------
 379+ 9953              ;
 380+ 9953              ;   27/02/23
 381+ 9953              ;
 382+ 9953              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9953              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9953              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9953
 386+ 9953 ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9957 FD F9            ld sp,iy
 388+ 9959 06 03            ld b,3
 389+ 995B D1           1 pop de
 390+ 995C 7B               ld a,e
 391+ 995D AE               xor (hl)
 392+ 995E 77               ld (hl),a
 393+ 995F 23               inc hl
 394+ 9960 7A               ld a,d
 395+ 9961 AE               xor (hl)
 396+ 9962 77               ld (hl),a
 397+ 9963 2B               dec hl
 398+ 9964
 399+ 9964 24               inc h
 400+ 9965 7C               ld a,h
 401+ 9966 E6 07            and 7
 402+ 9968 20 0A            jr nz,2F
 403+ 996A 7D               ld a,l
 404+ 996B C6 20            add a,$20
 405+ 996D 6F               ld l,a
 406+ 996E 38 04            jr c,2F
 407+ 9970 7C               ld a,h
 408+ 9971 D6 08            sub 8
 409+ 9973 67               ld h,a
 410+ 9974 7C           2 ld a,h
 411+ 9975 FE 58            cp $58
 412+ 9977 28 02            jr z,3F
 413+ 9979
 414+ 9979 10 E0            djnz 1B
 415+ 997B ED 7B 15 89  3 ld sp,(Stack)
 416+ 997F C9               ret
 417+ 9980
# file closed: Rutinas_de_impresion_sprites.asm
1693  9980              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9980              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9980              ;
   3+ 9980              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9980              ;
   5+ 9980              ; *****************************************************************************************************************************************************************************************
   6+ 9980              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9980
   8+ 9980 7C           calcula_tercio ld a,h
   9+ 9981 E6 18        	and $18
  10+ 9983 CB 2F        	sra a
  11+ 9985 CB 2F        	sra a
  12+ 9987 CB 2F        	sra a
  13+ 9989 C9           	ret
  14+ 998A
# file closed: calcula_tercio.asm
1694  998A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 998A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 998A              ;
   3+ 998A              ;
   4+ 998A              ;	CLS.
   5+ 998A              ;
   6+ 998A              ;	Limpia la pantalla y define sus atributos.
   7+ 998A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 998A              ;
   9+ 998A              ;	COLORES: 0 ..... NEGRO
  10+ 998A              ;    		 1 ..... AZUL
  11+ 998A              ; 			 2 ..... ROJO
  12+ 998A              ;			 3 ..... MAGENTA
  13+ 998A              ; 			 4 ..... VERDE
  14+ 998A              ; 			 5 ..... CIAN
  15+ 998A              ;			 6 ..... AMARILLO
  16+ 998A              ; 			 7 ..... BLANCO
  17+ 998A              ;
  18+ 998A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 998A              ;
  20+ 998A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 998A
  22+ 998A
  23+ 998A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 998D 11 01 40     	LD DE,$4001
  25+ 9990 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9993 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9995 ED B0        	LDIR
  28+ 9997 01 FF 02     	LD BC,767
  29+ 999A 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 999B ED B0        	LDIR
  31+ 999D C9           	ret
  32+ 999E
# file closed: Cls.asm
1695  999E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 999E              ; ******************************************************************************************************************************************************************************************
   2+ 999E              ;
   3+ 999E              ;   20/05/23
   4+ 999E              ;
   5+ 999E              ;	Recompone_posicion_inicio
   6+ 999E              ;
   7+ 999E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 999E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 999E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 999E              ;	_ a una u otra rutina.
  11+ 999E
  12+ 999E              Recompone_posicion_inicio
  13+ 999E
  14+ 999E 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 99A1 7D           	ld a,l
  16+ 99A2 E6 1F        	and $1f
  17+ 99A4 28 16        	jr z,1F
  18+ 99A6
  19+ 99A6 FE 1F        	cp $1f
  20+ 99A8 28 0D        	jr z,3F
  21+ 99AA
  22+ 99AA 21 01 89     	ld hl,Ctrl_2
  23+ 99AD CB C6        	set 0,(hl)
  24+ 99AF 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 99B2 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99B5 18 08        	jr 2F
  27+ 99B7
  28+ 99B7 CD 58 9B     3 call Mov_left
  29+ 99BA 18 03        	jr 2F
  30+ 99BC
  31+ 99BC CD 3A 9A     1 call Mov_right
  32+ 99BF 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99C2 22 CA 88     	ld (Puntero_objeto),hl
  34+ 99C5 C9           	ret
  35+ 99C6
  36+ 99C6              ; ******************************************************************************************************************************************************************************************
  37+ 99C6              ;
  38+ 99C6              ;   27/05/23
  39+ 99C6              ;
  40+ 99C6              ;	Mov_down
  41+ 99C6              ;
  42+ 99C6              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99C6              ;
  44+ 99C6              ;
  45+ 99C6              Mov_down
  46+ 99C6
  47+ 99C6 CD 28 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99C9              ;																	; _ repone (Puntero_objeto).
  49+ 99C9 21 F0 88     	ld hl,Ctrl_0
  50+ 99CC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99CE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99CE              ; 																	; _ en el caso de que no lo haya.
  53+ 99CE 3A DE 88     	ld a,(Vel_down)
  54+ 99D1 47           	ld b,a
  55+ 99D2 2A C8 88         ld hl,(Posicion_actual)
  56+ 99D5 CD 80 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99D8 E6 02        	and 2
  58+ 99DA 28 0F        	jr z,1F
  59+ 99DC
  60+ 99DC              ; Nos encontramos en el último tercio de pantalla.
  61+ 99DC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99DC
  63+ 99DC 7C           	ld a,h
  64+ 99DD FE 57        	cp $57
  65+ 99DF 20 0A        	jr nz,1F
  66+ 99E1
  67+ 99E1 7D           	ld a,l
  68+ 99E2 C6 20        	add $20
  69+ 99E4 30 05        	jr nc,1F
  70+ 99E6
  71+ 99E6              ; ------------------------------
  72+ 99E6              ;	call Reaparece_arriba
  73+ 99E6 CD E5 9C     	call Reinicio
  74+ 99E9              ; ------------------------------
  75+ 99E9
  76+ 99E9 18 08        	jr 3F
  77+ 99EB CD 6D 96     1 call NextScan
  78+ 99EE 22 C8 88     	ld (Posicion_actual),hl
  79+ 99F1 10 E2            djnz 2B
  80+ 99F3 CD 0B 9D     3 call Genera_coordenadas
  81+ 99F6 C9           	ret
  82+ 99F7
  83+ 99F7              ; ******************************************************************************************************************************************************************************************
  84+ 99F7              ;
  85+ 99F7              ;   27/05/23
  86+ 99F7              ;
  87+ 99F7              ;	Mov_up
  88+ 99F7              ;
  89+ 99F7              ; 	Mueve el Sprite hacia arriba.
  90+ 99F7              ;
  91+ 99F7              ;
  92+ 99F7              Mov_up
  93+ 99F7
  94+ 99F7 CD 28 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99FA              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99FA 21 F0 88     	ld hl,Ctrl_0
  97+ 99FD CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99FF              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99FF              ; 																		; _ en el caso de que no lo haya.
 100+ 99FF 3A DD 88     	ld a,(Vel_up)
 101+ 9A02 47           	ld b,a
 102+ 9A03 2A C8 88     	ld hl,(Posicion_actual)
 103+ 9A06 CD 80 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A09 A7           	and a
 105+ 9A0A 20 10        	jr nz,1F
 106+ 9A0C
 107+ 9A0C              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A0C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A0C
 110+ 9A0C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A0D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A0F 20 0B            jr nz,1F
 113+ 9A11 7D               ld a,l
 114+ 9A12 D6 20            sub $20
 115+ 9A14 30 06            jr nc,1F
 116+ 9A16 25               dec h
 117+ 9A17
 118+ 9A17              ; -----------------------------
 119+ 9A17 CD C6 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A1A              ;	call Reinicio
 121+ 9A1A              ; -----------------------------
 122+ 9A1A
 123+ 9A1A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A1C CD 7C 96     1 call PreviousScan
 125+ 9A1F 22 C8 88     	ld (Posicion_actual),hl
 126+ 9A22 10 E2            djnz 3B
 127+ 9A24 CD 0B 9D     2 call Genera_coordenadas
 128+ 9A27 C9           	ret
 129+ 9A28
 130+ 9A28              ; -----------------------------
 131+ 9A28              ;
 132+ 9A28              ;	27/5/23
 133+ 9A28              ;
 134+ 9A28              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A28              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A28              ;
 137+ 9A28              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A28              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A28              ;
 140+ 9A28              ;	Modifica: A y (Puntero_objeto).
 141+ 9A28
 142+ 9A28 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A2B CB 47        	bit 0,a
 144+ 9A2D C8           	ret z
 145+ 9A2E CB 87        	res 0,a
 146+ 9A30 32 01 89     	ld (Ctrl_2),a
 147+ 9A33 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A36 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A39 C9           	ret
 150+ 9A3A
 151+ 9A3A              ; ******************************************************************************************************************************************************************************************
 152+ 9A3A              ;
 153+ 9A3A              ;	19/10/22
 154+ 9A3A              ;
 155+ 9A3A              ;	Mov_right.
 156+ 9A3A              ;
 157+ 9A3A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A3A              ;
 159+ 9A3A
 160+ 9A3A 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A3D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A3F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A3F              ; 																	; _ en el caso de que no lo haya.
 164+ 9A3F 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A42 CB 77        	bit 6,a
 166+ 9A44 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A46
 168+ 9A46 CD 74 9C     	call Stop_Amadeus_right
 169+ 9A49 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A4A 18 4D        	jr 8F
 171+ 9A4C
 172+ 9A4C 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A4F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A51 20 46        	jr nz,8F
 175+ 9A53
 176+ 9A53 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A56 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A57 28 40        	jr z,8F
 179+ 9A59
 180+ 9A59              ; ---------- ---------- ----------
 181+ 9A59              ;
 182+ 9A59              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A59
 184+ 9A59 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A5C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A5E 28 11        	jr z,1F
 187+ 9A60 38 06        	jr c,6F
 188+ 9A62 FE 04        	cp 4
 189+ 9A64 28 14        	jr z,7F
 190+ 9A66 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A68
 192+ 9A68              ; ---------- ---------- ----------
 193+ 9A68              ;
 194+ 9A68              ; Perfiles de velocidad
 195+ 9A68              ;
 196+ 9A68
 197+ 9A68 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A6B FE FE        	cp $fe
 199+ 9A6D 20 2A        	jr nz,8F
 200+ 9A6F 18 10        	jr 3F
 201+ 9A71 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A74 FE FD        	cp $fd
 203+ 9A76 20 21        	jr nz,8F
 204+ 9A78 18 07        	jr 3F
 205+ 9A7A 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A7D FE FB        	cp $fb
 207+ 9A7F 20 18        	jr nz,8F
 208+ 9A81
 209+ 9A81              ; ---------- ---------- ----------
 210+ 9A81
 211+ 9A81              3
 212+ 9A81 CD B4 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A84              ;	call Reinicio
 214+ 9A84
 215+ 9A84              ; ---------- ---------- ----------
 216+ 9A84              ;
 217+ 9A84              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A84
 219+ 9A84 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A86 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A87 CD A0 9A     	call DESPLZ_DER
 222+ 9A8A C1           	pop bc
 223+ 9A8B 10 F9        	djnz 5B
 224+ 9A8D 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A90 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A91 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A94 CD 0B 9D     	call Genera_coordenadas
 228+ 9A97 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A99
 230+ 9A99              ; ---------- ---------- ----------
 231+ 9A99
 232+ 9A99 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A9C CD A0 9A     	call DESPLZ_DER
 234+ 9A9F C9           2 ret
 235+ 9AA0
 236+ 9AA0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AA0              ;
 238+ 9AA0              ;	22/9/22
 239+ 9AA0              ;
 240+ 9AA0
 241+ 9AA0 CD AF 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AA3 CD FB 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9AA6 CD 24 9B         call Ciclo_completo
 244+ 9AA9 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AAC CB FE        	set 7,(hl)
 246+ 9AAE C9           	ret
 247+ 9AAF
 248+ 9AAF              ; ******************************************************************************************************************************************************************************************
 249+ 9AAF              ;	15/02/23
 250+ 9AAF              ;
 251+ 9AAF
 252+ 9AAF 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AB2 47           	ld b,a
 254+ 9AB3 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AB6 23           1 inc hl
 256+ 9AB7 23           	inc hl
 257+ 9AB8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9ABA 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9ABD CD 8A 8C     	call Extrae_address
 260+ 9AC0 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9AC3
 262+ 9AC3              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AC3
 264+ 9AC3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AC3              ; Cuántos movimientos hemos hecho ??
 266+ 9AC3              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AC3
 268+ 9AC3 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AC6 EB           	ex de,hl
 270+ 9AC7 A7           	and a
 271+ 9AC8 ED 52        	sbc hl,de
 272+ 9ACA CB 3D        	srl l
 273+ 9ACC 3E 08        6 ld a,8
 274+ 9ACE 95           	sub l
 275+ 9ACF 30 1E        	jr nc,3F
 276+ 9AD1
 277+ 9AD1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AD1              ; B="0".
 279+ 9AD1
 280+ 9AD1 04           4 inc b
 281+ 9AD2 3C           	inc a
 282+ 9AD3 20 FC        	jr nz,4B
 283+ 9AD5 78           	ld a,b
 284+ 9AD6 08           	ex af,af
 285+ 9AD7 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9ADA 23           5 inc hl
 287+ 9ADB 23           	inc hl
 288+ 9ADC 10 FC        	djnz 5B
 289+ 9ADE 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AE1 CD 8A 8C     	call Extrae_address
 291+ 9AE4 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9AE7
 293+ 9AE7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AE7              ; _(Posicion_actual).
 295+ 9AE7
 296+ 9AE7 21 C8 88     	ld hl,Posicion_actual
 297+ 9AEA 34           	inc (hl)
 298+ 9AEB 08               ex af,af
 299+ 9AEC 6F           	ld l,a
 300+ 9AED 18 DD        	jr 6B
 301+ 9AEF
 302+ 9AEF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AEF
 304+ 9AEF 47           3 ld b,a
 305+ 9AF0 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AF3 23           2 inc hl
 307+ 9AF4 23           	inc hl
 308+ 9AF5 10 FC        	djnz 2B
 309+ 9AF7 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AFA C9           8 ret
 311+ 9AFB
 312+ 9AFB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AFB              ;
 314+ 9AFB              ;	24/7/22
 315+ 9AFB              ;
 316+ 9AFB              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AFB              ;
 318+ 9AFB              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AFB              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AFB              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AFB
 322+ 9AFB 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AFE A7           	and a
 324+ 9AFF 20 1F        	jr nz,1F
 325+ 9B01 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B03 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9B06
 328+ 9B06 21 C7 88     	ld hl,Columns
 329+ 9B09 34           	inc (hl)
 330+ 9B0A 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9B0D E6 01        	and 1
 332+ 9B0F 28 0F        	jr z,1F
 333+ 9B11 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B14 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B15 22 C8 88     	ld (Posicion_actual),hl
 336+ 9B18 CD 0B 9D     	call Genera_coordenadas
 337+ 9B1B CD 80 9C     	call Inc_CTRL_DESPLZ
 338+ 9B1E 18 03        	jr 2F
 339+ 9B20 CD 80 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B23 C9           2 ret
 341+ 9B24
 342+ 9B24              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B24              ;
 344+ 9B24              ;	24/7/22
 345+ 9B24              ;
 346+ 9B24              ;	Ciclo_completo.
 347+ 9B24              ;
 348+ 9B24              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B24              ;
 350+ 9B24              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B24              ; 	Decrementamos (Columns).
 352+ 9B24              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B24              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B24
 355+ 9B24
 356+ 9B24 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B27 FE FF        	cp $ff
 358+ 9B29 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B2B E6 F0        	and $f0
 360+ 9B2D 20 28        	jr nz,3F
 361+ 9B2F
 362+ 9B2F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B2F
 364+ 9B2F 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B32 47           	ld b,a
 366+ 9B33 3E F8        	ld a,$f8
 367+ 9B35 80           	add b
 368+ 9B36 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B39 18 1C        	jr 3F
 370+ 9B3B 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B3E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B3F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B40 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B43 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B46 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B48 20 0A        	jr nz,2F
 377+ 9B4A 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B4D 23           	inc hl
 379+ 9B4E 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B51 CD 0B 9D     	call Genera_coordenadas
 381+ 9B54
 382+ 9B54              ; Inicia el puntero de Sprite.
 383+ 9B54
 384+ 9B54 CD A1 8C     2 call Inicia_puntero_objeto_der
 385+ 9B57 C9           3 ret
 386+ 9B58
 387+ 9B58              ; ******************************************************************************************************************************************************************************************
 388+ 9B58              ;
 389+ 9B58              ;	15/02/23
 390+ 9B58              ;
 391+ 9B58              ;	Mov_left.
 392+ 9B58              ;
 393+ 9B58              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B58              ;
 395+ 9B58              Mov_left
 396+ 9B58
 397+ 9B58 21 F0 88     	ld hl,Ctrl_0
 398+ 9B5B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B5D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B5D              ; 																	; _ en el caso de que no lo haya.
 401+ 9B5D 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B60 CB 77        	bit 6,a
 403+ 9B62 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B64
 405+ 9B64 CD 7A 9C     	call Stop_Amadeus_left
 406+ 9B67 C8           	ret z
 407+ 9B68 20 4A        	jr nz,8F
 408+ 9B6A
 409+ 9B6A 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B6D A7           	and a
 411+ 9B6E 20 44        	jr nz,8F
 412+ 9B70
 413+ 9B70 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B73 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B74 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B76
 417+ 9B76              ; ---------- ---------- ----------
 418+ 9B76
 419+ 9B76 3A DB 88     	ld a,(Vel_left)
 420+ 9B79 FE 02        	cp 2
 421+ 9B7B 28 0F        	jr z,1F
 422+ 9B7D 38 04        	jr c,6F
 423+ 9B7F FE 04        	cp 4
 424+ 9B81 28 12        	jr z,7F
 425+ 9B83
 426+ 9B83              ; ---------- ---------- ----------
 427+ 9B83
 428+ 9B83 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B86 FE F8        	cp $f8
 430+ 9B88 20 2A        	jr nz,8F
 431+ 9B8A 18 10        	jr 4F
 432+ 9B8C 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B8F FE F9        	cp $f9
 434+ 9B91 20 21        	jr nz,8F
 435+ 9B93 18 07        	jr 4F
 436+ 9B95 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B98 FE FB        	cp $fb
 438+ 9B9A 20 18        	jr nz,8F
 439+ 9B9C
 440+ 9B9C              ; ---------- ---------- ----------
 441+ 9B9C
 442+ 9B9C              4
 443+ 9B9C CD A2 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B9F              ;	call Reinicio
 445+ 9B9F
 446+ 9B9F              ; ---------- ---------- ----------
 447+ 9B9F
 448+ 9B9F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BA1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BA2
 451+ 9BA2              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BA2              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BA2
 454+ 9BA2 CD BB 9B     	call DESPLZ_IZQ
 455+ 9BA5 C1           	pop bc
 456+ 9BA6 10 F9        	djnz 5B
 457+ 9BA8 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BAB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BAC 22 C8 88     	ld (Posicion_actual),hl
 460+ 9BAF CD 0B 9D     	call Genera_coordenadas
 461+ 9BB2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BB4
 463+ 9BB4              ; ---------- ---------- ----------
 464+ 9BB4
 465+ 9BB4              ; Movemos, no hay recolocación.
 466+ 9BB4
 467+ 9BB4 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9BB7 CD BB 9B     	call DESPLZ_IZQ
 469+ 9BBA C9           2 ret
 470+ 9BBB
 471+ 9BBB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BBB              ;
 473+ 9BBB              ;	22/9/22
 474+ 9BBB
 475+ 9BBB              DESPLZ_IZQ
 476+ 9BBB
 477+ 9BBB CD CA 9B     	call Desplaza_izquierda
 478+ 9BBE CD 16 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BC1 CD 3E 9C     	call Ciclo_completo_2
 480+ 9BC4 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BC7 CB BE        	res 7,(hl)
 482+ 9BC9 C9           	ret
 483+ 9BCA
 484+ 9BCA              Desplaza_izquierda
 485+ 9BCA
 486+ 9BCA 3A DB 88     	ld a,(Vel_left)
 487+ 9BCD 47           	ld b,a
 488+ 9BCE 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BD1 23           1 inc hl
 490+ 9BD2 23           	inc hl
 491+ 9BD3 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BD5 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BD8 CD 8A 8C     	call Extrae_address
 494+ 9BDB 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BDE
 496+ 9BDE              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BDE
 498+ 9BDE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BDE              ; Cuántos movimientos hemos hecho ??
 500+ 9BDE              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BDE
 502+ 9BDE 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BE1 EB           	ex de,hl
 504+ 9BE2 A7           	and a
 505+ 9BE3 ED 52        	sbc hl,de
 506+ 9BE5 CB 3D        	srl l
 507+ 9BE7 3E 08        6 ld a,8
 508+ 9BE9 95           	sub l
 509+ 9BEA 30 1E        	jr nc,3F
 510+ 9BEC
 511+ 9BEC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BEC              ; B="0".
 513+ 9BEC
 514+ 9BEC 04           4 inc b
 515+ 9BED 3C           	inc a
 516+ 9BEE 20 FC        	jr nz,4B
 517+ 9BF0 78           	ld a,b
 518+ 9BF1 08           	ex af,af
 519+ 9BF2 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BF5 23           5 inc hl
 521+ 9BF6 23           	inc hl
 522+ 9BF7 10 FC        	djnz 5B
 523+ 9BF9 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BFC CD 8A 8C     	call Extrae_address
 525+ 9BFF 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9C02
 527+ 9C02              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C02              ; _(Posicion_actual).
 529+ 9C02
 530+ 9C02 21 C8 88     	ld hl,Posicion_actual
 531+ 9C05 35           	dec (hl)
 532+ 9C06 08           	ex af,af
 533+ 9C07 6F           	ld l,a
 534+ 9C08 18 DD        	jr 6B
 535+ 9C0A
 536+ 9C0A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C0A
 538+ 9C0A 47           3 ld b,a
 539+ 9C0B 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9C0E 23           2 inc hl
 541+ 9C0F 23           	inc hl
 542+ 9C10 10 FC        	djnz 2B
 543+ 9C12 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C15 C9           8 ret
 545+ 9C16
 546+ 9C16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C16              ;
 548+ 9C16              ;	modifica_parametros_1er_DESPLZ
 549+ 9C16              ;
 550+ 9C16              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C16              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C16              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C16
 554+ 9C16 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C19 A7           	and a
 556+ 9C1A 20 1E        	jr nz,1F
 557+ 9C1C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C1D 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9C20 21 C7 88     	ld hl,Columns
 560+ 9C23 34           	inc (hl)
 561+ 9C24 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9C27 E6 01        	and 1
 563+ 9C29 20 0F        	jr nz,1F
 564+ 9C2B 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C2E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C2F 22 C8 88     	ld (Posicion_actual),hl
 567+ 9C32 CD 0B 9D     	call Genera_coordenadas
 568+ 9C35 CD 91 9C     	call Dec_CTRL_DESPLZ
 569+ 9C38 18 03        	jr 2F
 570+ 9C3A CD 91 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C3D C9           2 ret
 572+ 9C3E
 573+ 9C3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C3E
 575+ 9C3E 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C41 FE F7        	cp $f7
 577+ 9C43 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C45 30 2C        	jr nc,3F
 579+ 9C47
 580+ 9C47              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C47
 582+ 9C47 06 00        	ld b,0
 583+ 9C49 04           4 inc b
 584+ 9C4A 3C           	inc a
 585+ 9C4B FE F7        	cp $f7
 586+ 9C4D 20 FA        	jr nz,4B
 587+ 9C4F 3E FF        	ld a,$ff
 588+ 9C51 90           	sub b
 589+ 9C52 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C55 18 1C        	jr 3F
 591+ 9C57
 592+ 9C57              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C57
 594+ 9C57 21 C7 88     1 ld hl,Columns
 595+ 9C5A 35           	dec (hl)
 596+ 9C5B AF           	xor a
 597+ 9C5C 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C5F 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C62 E6 01        	and 1
 600+ 9C64 28 0A        	jr z,2F
 601+ 9C66 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C69 2B           	dec hl
 603+ 9C6A 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C6D CD 0B 9D     	call Genera_coordenadas
 605+ 9C70
 606+ 9C70              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C70
 608+ 9C70 CD B4 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C73 C9           3 ret
 610+ 9C74
 611+ 9C74              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C74              ;
 613+ 9C74              ;	19/10/22
 614+ 9C74              ;
 615+ 9C74              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C74              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C74
 618+ 9C74 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C77 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C79 C9           	ret
 621+ 9C7A
 622+ 9C7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C7A              ;
 624+ 9C7A              ;	19/10/22
 625+ 9C7A              ;
 626+ 9C7A              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C7A              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C7A
 629+ 9C7A 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C7D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C7F C9           	ret
 632+ 9C80
 633+ 9C80              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C80              ;
 635+ 9C80              ;	24/7/22
 636+ 9C80              ;
 637+ 9C80              ;	Inc_CTRL_DESPLZ
 638+ 9C80              ;
 639+ 9C80              ;
 640+ 9C80              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C80
 642+ 9C80 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C83 3A DC 88     	ld a,(Vel_right)
 644+ 9C86 A7           	and a
 645+ 9C87 28 06        	jr z,1F
 646+ 9C89 47           	ld b,a
 647+ 9C8A 34           3 inc (hl)
 648+ 9C8B 10 FD        	djnz 3B
 649+ 9C8D 18 01        	jr 2F
 650+ 9C8F 34           1 inc (hl)
 651+ 9C90 C9           2 ret
 652+ 9C91
 653+ 9C91              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C91              ;
 655+ 9C91              ;	5/2/23
 656+ 9C91              ;
 657+ 9C91              ;	Dec_CTRL_DESPLZ
 658+ 9C91              ;
 659+ 9C91              ;
 660+ 9C91              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C91
 662+ 9C91 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C94 3A DB 88     	ld a,(Vel_left)
 664+ 9C97 A7           	and a
 665+ 9C98 28 06        	jr z,1F
 666+ 9C9A 47           	ld b,a
 667+ 9C9B 35           3 dec (hl)
 668+ 9C9C 10 FD        	djnz 3B
 669+ 9C9E 18 01        	jr 2F
 670+ 9CA0 35           1 dec (hl)
 671+ 9CA1 C9           2 ret
 672+ 9CA2
 673+ 9CA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CA2
 675+ 9CA2 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CA5 01 1F 00     	ld bc,31
 677+ 9CA8 A7           	and a
 678+ 9CA9 ED 4A        	adc hl,bc
 679+ 9CAB 22 C8 88     	ld (Posicion_actual),hl
 680+ 9CAE 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CB1 CB C6        	set 0,(hl)
 682+ 9CB3 C9           	ret
 683+ 9CB4
 684+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CB4
 686+ 9CB4 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CB7 01 1F 00     	ld bc,31
 688+ 9CBA A7           	and a
 689+ 9CBB ED 42        	sbc hl,bc
 690+ 9CBD 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CC0 21 F0 88     	ld hl,Ctrl_0
 692+ 9CC3 CB CE        	set 1,(hl)
 693+ 9CC5 C9           	ret
 694+ 9CC6
 695+ 9CC6              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CC6
 697+ 9CC6 24           Reaparece_abajo inc h
 698+ 9CC7 01 E0 17     	ld bc,$17e0
 699+ 9CCA A7           	and a
 700+ 9CCB ED 4A        	adc hl,bc
 701+ 9CCD 22 C8 88     	ld (Posicion_actual),hl
 702+ 9CD0 21 F0 88     	ld hl,Ctrl_0
 703+ 9CD3 CB D6        	set 2,(hl)
 704+ 9CD5 C9           	ret
 705+ 9CD6
 706+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CD6
 708+ 9CD6 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CD9 A7           	and a
 710+ 9CDA ED 42        	sbc hl,bc
 711+ 9CDC 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CDF 21 F0 88     	ld hl,Ctrl_0
 713+ 9CE2 CB DE        	set 3,(hl)
 714+ 9CE4 C9           	ret
 715+ 9CE5
 716+ 9CE5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CE5              ;
 718+ 9CE5              ;	15/07/23
 719+ 9CE5
 720+ 9CE5              Reinicio
 721+ 9CE5
 722+ 9CE5              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CE5
 724+ 9CE5 AF           	xor a
 725+ 9CE6 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CE9 CD 07 9D     	call Limpia_contenido_hl
 727+ 9CEC
 728+ 9CEC 21 C8 88     	ld hl,Posicion_actual
 729+ 9CEF CD 07 9D     	call Limpia_contenido_hl
 730+ 9CF2
 731+ 9CF2 CD 39 A0     	call Inicializa_Puntero_indice_mov
 732+ 9CF5 CD C3 9F     	call Inicia_Puntero_mov
 733+ 9CF8
 734+ 9CF8 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CFB 06 05        	ld b,5
 736+ 9CFD 77           1 ld (hl),a
 737+ 9CFE 23           	inc hl
 738+ 9CFF 10 FC        	djnz 1B
 739+ 9D01
 740+ 9D01 21 01 89     	ld hl,Ctrl_2
 741+ 9D04 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D06
 743+ 9D06 C9           	ret
 744+ 9D07
 745+ 9D07 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D08 23           	inc hl
 747+ 9D09 77           	ld (hl),a
 748+ 9D0A C9           	ret
 749+ 9D0B
 750+ 9D0B
# file closed: Direcciones.asm
1696  9D0B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D0B              ; ------------------------------------------------------------------------
   2+ 9D0B              ;
   3+ 9D0B              ;	02/04/23
   4+ 9D0B              ;
   5+ 9D0B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D0B              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D0B              ;
   8+ 9D0B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D0B              ;
  10+ 9D0B              ;	Modifica: A,BC y DE.
  11+ 9D0B
  12+ 9D0B C5           Genera_coordenadas push bc
  13+ 9D0C E5           	push hl
  14+ 9D0D D5           	push de
  15+ 9D0E
  16+ 9D0E 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9D11
  18+ 9D11 7D           	ld a,l
  19+ 9D12 E6 1F        	and $1f
  20+ 9D14 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D17
  22+ 9D17 CD 80 99     	call calcula_tercio
  23+ 9D1A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D1B
  25+ 9D1B 1E 00        	ld e,0
  26+ 9D1D 7D           	ld a,l
  27+ 9D1E E6 E0        	and $e0
  28+ 9D20 28 01        	jr z,1F
  29+ 9D22 04           	inc b
  30+ 9D23
  31+ 9D23 04           1 inc b
  32+ 9D24 05           	dec b
  33+ 9D25 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D27              ;														; _ , salimos.
  35+ 9D27 1C           3 inc e
  36+ 9D28 D6 20        	sub 32
  37+ 9D2A 20 FB        	jr nz,3B
  38+ 9D2C 10 F5        	djnz 1B
  39+ 9D2E
  40+ 9D2E 7B           2 ld a,e
  41+ 9D2F 32 CD 88     	ld (Coordenada_y),a
  42+ 9D32
  43+ 9D32 D1           	pop de
  44+ 9D33 E1           	pop hl
  45+ 9D34 C1           	pop bc
  46+ 9D35
  47+ 9D35 C9           	ret
  48+ 9D36
  49+ 9D36              ; ------------------------------------------------------------------------
  50+ 9D36              ;	28/05/23
  51+ 9D36              ;
  52+ 9D36              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D36              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D36              ;
  55+ 9D36              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D36              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D36              ;
  58+ 9D36              ;		DE="$120d"
  59+ 9D36              ;
  60+ 9D36              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D36              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D36              ;
  63+ 9D36              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D36
  65+ 9D36              ;	Modifica: A,BC y DE.
  66+ 9D36
  67+ 9D36
  68+ 9D36              Genera_coordenadas_disparo
  69+ 9D36
  70+ 9D36              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D36
  72+ 9D36 7D           	ld a,l
  73+ 9D37 E6 1F        	and $1f
  74+ 9D39 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D3A CD 80 99     	call calcula_tercio
  76+ 9D3D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D3E 1E 00        	ld e,0
  78+ 9D40 7D           	ld a,l
  79+ 9D41 E6 E0        	and $e0
  80+ 9D43 28 01        	jr z,1F
  81+ 9D45 04           	inc b
  82+ 9D46 1C           1 inc e
  83+ 9D47 D6 20        	sub 32
  84+ 9D49 20 FB        	jr nz,1B
  85+ 9D4B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D4D C9           	ret
  87+ 9D4E
# file closed: Genera_coordenadas.asm
1697  9D4E              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D4E              ; Relojes y temporizaciones.
   2+ 9D4E
   3+ 9D4E              ; ------------------------------------------------------
   4+ 9D4E              ;
   5+ 9D4E              ;	16/7/23
   6+ 9D4E              ;
   7+ 9D4E              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D4E              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D4E              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D4E              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D4E              ;
  12+ 9D4E              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D4E              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D4E
  15+ 9D4E              ; Disparo_entidad db 1
  16+ 9D4E              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D4E              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D4E
  19+ 9D4E              Habilita_disparos
  20+ 9D4E
  21+ 9D4E 7E           	ld a,(hl)
  22+ 9D4F A7           	and a
  23+ 9D50 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D51
  25+ 9D51 EB           	ex de,hl
  26+ 9D52
  27+ 9D52 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D53 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D54
  30+ 9D54              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D54
  32+ 9D54 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D55 7E           	ld a,(hl)
  34+ 9D56 23           	inc hl
  35+ 9D57 77           	ld (hl),a
  36+ 9D58
  37+ 9D58 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D59 3E 01        	ld a,1
  39+ 9D5B 77           	ld (hl),a
  40+ 9D5C C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1698  9D5D              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D5D
   2+ 9D5D
   3+ 9D5D              ;   07/07/23
   4+ 9D5D              ;
   5+ 9D5D              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D5D              ;
   7+ 9D5D              ;   Codificación:
   8+ 9D5D              ;
   9+ 9D5D              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D5D              ;
  11+ 9D5D              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D5D              ;
  13+ 9D5D              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D5D              ;
  15+ 9D5D              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D5D              ;
  17+ 9D5D              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D5D              ;                               ..... %01000010 Vel_up 4
  19+ 9D5D              ;                                               Vel_down 2
  20+ 9D5D              ;                               ..... $42
  21+ 9D5D              ;
  22+ 9D5D              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D5D              ;
  24+ 9D5D              ;                               ..... %01000010 Vel_left 4
  25+ 9D5D              ;                                               Vel_right 2
  26+ 9D5D              ;                               ..... $42
  27+ 9D5D              ;
  28+ 9D5D              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D5D              ;
  30+ 9D5D              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D5D              ;
  32+ 9D5D              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D5D              ;
  34+ 9D5D              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D5D              ;                                     $53
  36+ 9D5D              ;
  37+ 9D5D              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D5D              ;
  39+ 9D5D              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D5D              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D5D              ;
  42+ 9D5D              ;                       Arriba ..... $81
  43+ 9D5D              ;                       Arriba - izquierda ..... $a1
  44+ 9D5D              ;                       Arriba - derecha ..... $91
  45+ 9D5D              ;
  46+ 9D5D              ;                       Abajo ..... $41
  47+ 9D5D              ;                       Abajo - izquierda ..... $61
  48+ 9D5D              ;                       Abajo - derecha ..... $51
  49+ 9D5D              ;
  50+ 9D5D              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D5D              ;
  52+ 9D5D              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D5D              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D5D              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D5D              ;
  56+ 9D5D              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D5D              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D5D              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D5D              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D5D              ;
  61+ 9D5D              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D5D              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D5D              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D5D              ;
  65+ 9D5D              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D5D              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D5D              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D5D              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D5D
  70+ 9D5D              ; ----- ----- ----- ----- -----
  71+ 9D5D
  72+ 9D5D 89 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D5F 91 9D            defw F_1
  74+ 9D61 9B 9D            defw F_2
  75+ 9D63 A5 9D            defw Codo_abajo_derecha
  76+ 9D65 D9 9D            defw Derecha_y_subiendo
  77+ 9D67 E3 9D            defw Derecha_y_subiendo_1
  78+ 9D69 ED 9D            defw F_3
  79+ 9D6B F7 9D            defw F_4
  80+ 9D6D 01 9E            defw Derecha_y_bajando
  81+ 9D6F 0B 9E            defw Derecha_y_bajando_1
  82+ 9D71 15 9E            defw Derecha_y_bajando_2
  83+ 9D73 1F 9E            defw Codo_derecha_abajo
  84+ 9D75 4F 9E            defw Codo_abajo_izq.
  85+ 9D77 83 9E            defw Izquierda_y_subiendo
  86+ 9D79 8D 9E            defw Izquierda_y_subiendo_1
  87+ 9D7B 97 9E            defw F_5
  88+ 9D7D A1 9E            defw F_6
  89+ 9D7F AB 9E            defw Izquierda_y_bajando
  90+ 9D81 B5 9E            defw Izquierda_y_bajando_1
  91+ 9D83 BF 9E            defw Izquierda_y_bajando_2
  92+ 9D85 C9 9E            defw Codo_izquierda_abajo
  93+ 9D87 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D89
  95+ 9D89 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D8D 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D91
  98+ 9D91 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D95 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D99 08 00
 100+ 9D9B 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D9F 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DA3 0F FE
 102+ 9DA5
 103+ 9DA5 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DA9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DAD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DB1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DB5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DB9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DBD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DC9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DCD 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DD1 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DD5 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DD9
 117+ 9DD9 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DDD 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DE1 06 00
 119+ 9DE3
 120+ 9DE3 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DE7 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DEB 02 00
 122+ 9DED
 123+ 9DED 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DF1 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DF5 04 00
 125+ 9DF7 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DFB 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DFF 08 00
 127+ 9E01
 128+ 9E01 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E05 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E09 02 00
 130+ 9E0B
 131+ 9E0B 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E0F 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E13 06 00
 133+ 9E15
 134+ 9E15 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E19 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E1D 06 00
 136+ 9E1F
 137+ 9E1F              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E1F
 139+ 9E1F 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E23 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E27 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E2B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E2F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E33 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E37 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E3B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E3F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E43 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E47 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E4B 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E4F
 152+ 9E4F 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E53 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E57 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E5B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E5F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E63 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E67 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E6B 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E6F 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E73 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E77 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E7B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E7F 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E83
 166+ 9E83 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E87 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E8B 06 00
 168+ 9E8D
 169+ 9E8D 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E91 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E95 02 00
 171+ 9E97
 172+ 9E97 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E9B 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E9F 04 00
 174+ 9EA1 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EA5 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EA9 08 00
 176+ 9EAB
 177+ 9EAB 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EAF 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EB3 02 00
 179+ 9EB5
 180+ 9EB5 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EB9 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EBD 06 00
 182+ 9EBF
 183+ 9EBF 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EC3 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EC7 06 00
 185+ 9EC9
 186+ 9EC9 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9ECD 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9ED1 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9ED5 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9ED9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EDD 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EE1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EE5 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EE9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EED 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EF1 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EF5 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EF9
 199+ 9EF9              ; ----- ----- ----- ----- -----
 200+ 9EF9              ;
 201+ 9EF9              ;   27/06/23
 202+ 9EF9
 203+ 9EF9              Movimiento
 204+ 9EF9
 205+ 9EF9              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EF9
 207+ 9EF9              ;    ld hl,(Posicion_actual)
 208+ 9EF9
 209+ 9EF9 FB               ei
 210+ 9EFA
 211+ 9EFA 3A 01 89         ld a,(Ctrl_2)
 212+ 9EFD CB 57            bit 2,a
 213+ 9EFF 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F01
 215+ 9F01 2A F3 88         ld hl,(Puntero_mov)
 216+ 9F04 7E               ld a,(hl)
 217+ 9F05
 218+ 9F05              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F05
 220+ 9F05              Inicia_desplazamiento.
 221+ 9F05
 222+ 9F05              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F05
 224+ 9F05 CD FA 9F         call Ajusta_velocidad_desplazamiento
 225+ 9F08
 226+ 9F08              ; Iniciamos (Repetimos_mov).
 227+ 9F08
 228+ 9F08 7E               ld a,(hl)
 229+ 9F09 E6 0F            and $0f
 230+ 9F0B 32 F9 88         ld (Repetimos_desplazamiento),a
 231+ 9F0E 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F11
 233+ 9F11              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F11
 235+ 9F11 23               inc hl
 236+ 9F12 7E               ld a,(hl)
 237+ 9F13 32 FC 88         ld (Cola_de_desplazamiento),a
 238+ 9F16 2B               dec hl
 239+ 9F17
 240+ 9F17 21 01 89         ld hl,Ctrl_2
 241+ 9F1A CB D6            set 2,(hl)
 242+ 9F1C
 243+ 9F1C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F1C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F1C
 246+ 9F1C              Desplazamiento_iniciado
 247+ 9F1C
 248+ 9F1C CD CE 9F         call Aplica_desplazamiento
 249+ 9F1F
 250+ 9F1F 3A 01 89         ld a,(Ctrl_2)
 251+ 9F22 CB 67            bit 4,a
 252+ 9F24 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F25
 254+ 9F25 21 F9 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F28 35               dec (hl)
 256+ 9F29 C0               ret nz
 257+ 9F2A
 258+ 9F2A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F2A              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F2A              ; Analiza (Cola_de_desplazamiento).
 261+ 9F2A
 262+ 9F2A 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F2D A7               and a
 264+ 9F2E CC 23 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F31 28 30            jr z,Reinicia_el_movimiento
 266+ 9F33
 267+ 9F33 FE FF            cp $ff
 268+ 9F35 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F37
 270+ 9F37 FE FE            cp $fe
 271+ 9F39 CC A7 9F         call z,Fijamos_bucle
 272+ 9F3C 28 25            jr z,Reinicia_el_movimiento
 273+ 9F3E
 274+ 9F3E FE FD            cp $fd
 275+ 9F40 20 11            jr nz,1F
 276+ 9F42
 277+ 9F42              ; ---
 278+ 9F42              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F42
 280+ 9F42 3A 01 89         ld a,(Ctrl_2)
 281+ 9F45 CB 5F            bit 3,a
 282+ 9F47 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F49
 284+ 9F49              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F49
 286+ 9F49 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F4C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F4E
 289+ 9F4E CD B8 9F         call Inicia_Repetimos_movimiento
 290+ 9F51 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F53              ; ---
 292+ 9F53
 293+ 9F53 FE 01        1 cp 1
 294+ 9F55 CA 91 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F58
 296+ 9F58 3D               dec a
 297+ 9F59 32 FC 88         ld (Cola_de_desplazamiento),a
 298+ 9F5C
 299+ 9F5C 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F5F 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F62              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F62 C9               ret
 303+ 9F63
 304+ 9F63              Reinicia_el_movimiento
 305+ 9F63
 306+ 9F63 F3               di
 307+ 9F64
 308+ 9F64 3A 01 89         ld a,(Ctrl_2)
 309+ 9F67 CB 5F            bit 3,a
 310+ 9F69 28 1B            jr z,2F
 311+ 9F6B
 312+ 9F6B              ; (Cola_de_desplazamiento)="254".
 313+ 9F6B
 314+ 9F6B 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F6E 35               dec (hl)
 316+ 9F6F 20 15            jr nz,2F
 317+ 9F71
 318+ 9F71              ; Fin de las repeticiones del último movimiento.
 319+ 9F71
 320+ 9F71 21 01 89         ld hl,Ctrl_2
 321+ 9F74 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F76
 323+ 9F76 2A F3 88         ld hl,(Puntero_mov)
 324+ 9F79 23               inc hl
 325+ 9F7A 23               inc hl
 326+ 9F7B 23               inc hl
 327+ 9F7C 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F7F              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F7F 7E               ld a,(hl)
 330+ 9F80 32 FC 88         ld (Cola_de_desplazamiento),a
 331+ 9F83
 332+ 9F83 C3 2A 9F         jp Cola
 333+ 9F86
 334+ 9F86 CD C3 9F     2 call Inicia_Puntero_mov
 335+ 9F89
 336+ 9F89 21 01 89         ld hl,Ctrl_2
 337+ 9F8C CB 96            res 2,(hl)
 338+ 9F8E
 339+ 9F8E C3 F9 9E         jp Movimiento
 340+ 9F91
 341+ 9F91              Siguiente_desplazamiento
 342+ 9F91
 343+ 9F91              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F91              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F91
 346+ 9F91 21 01 89         ld hl,Ctrl_2
 347+ 9F94 CB 96            res 2,(hl)
 348+ 9F96
 349+ 9F96 2A F3 88         ld hl,(Puntero_mov)
 350+ 9F99 23               inc hl
 351+ 9F9A 23               inc hl
 352+ 9F9B 22 F3 88         ld (Puntero_mov),hl
 353+ 9F9E
 354+ 9F9E 7E               ld a,(hl)
 355+ 9F9F A7               and a
 356+ 9FA0 CC 23 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FA3 CA 63 9F         jp z,Reinicia_el_movimiento
 358+ 9FA6
 359+ 9FA6 C9               ret
 360+ 9FA7              ; Subrutinas -----------------------------------------
 361+ 9FA7              ; ---------- --------- --------- ---------- ----------
 362+ 9FA7              ;
 363+ 9FA7              ;   24/07/23
 364+ 9FA7              ;
 365+ 9FA7              ;   Fijamos_bucle
 366+ 9FA7              ;
 367+ 9FA7              ;
 368+ 9FA7
 369+ 9FA7              Fijamos_bucle
 370+ 9FA7
 371+ 9FA7 3A F7 88         ld a,(Incrementa_puntero)
 372+ 9FAA 3C               inc a
 373+ 9FAB 32 F8 88         ld (Incrementa_puntero_backup),a
 374+ 9FAE
 375+ 9FAE CD 23 A0         call Incrementa_Puntero_indice_mov
 376+ 9FB1 2A F1 88         ld hl,(Puntero_indice_mov)
 377+ 9FB4 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FB7 C9               ret
 379+ 9FB8
 380+ 9FB8              ; ---------- --------- --------- ---------- ----------
 381+ 9FB8              ;
 382+ 9FB8              ;   07/7/23
 383+ 9FB8              ;
 384+ 9FB8              ;   Inicia_Repetimos_movimiento
 385+ 9FB8              ;
 386+ 9FB8              ;
 387+ 9FB8
 388+ 9FB8              Inicia_Repetimos_movimiento
 389+ 9FB8
 390+ 9FB8              ; Iniciamos (Repetimos_movimiento).
 391+ 9FB8
 392+ 9FB8 DD 2A F3 88      ld ix,(Puntero_mov)
 393+ 9FBC DD 7E 02         ld a,(ix+2)
 394+ 9FBF 32 FB 88         ld (Repetimos_movimiento),a
 395+ 9FC2
 396+ 9FC2 C9               ret
 397+ 9FC3
 398+ 9FC3              ; ---------- --------- --------- ---------- ----------
 399+ 9FC3              ;
 400+ 9FC3              ;   26/6/23
 401+ 9FC3              ;
 402+ 9FC3              ;   Inicia_Puntero_mov
 403+ 9FC3              ;
 404+ 9FC3              ;
 405+ 9FC3
 406+ 9FC3 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FC6 5E               ld e,(hl)
 408+ 9FC7 23               inc hl
 409+ 9FC8 56               ld d,(hl)
 410+ 9FC9 EB               ex de,hl
 411+ 9FCA 22 F3 88         ld (Puntero_mov),hl
 412+ 9FCD C9               ret
 413+ 9FCE
 414+ 9FCE              ; ---------- --------- --------- ---------- ----------
 415+ 9FCE              ;
 416+ 9FCE              ;   27/06/23
 417+ 9FCE              ;
 418+ 9FCE              ;   Aplica_movimiento.
 419+ 9FCE
 420+ 9FCE              Aplica_desplazamiento
 421+ 9FCE
 422+ 9FCE              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FCE
 424+ 9FCE 2A F3 88         ld hl, (Puntero_mov)
 425+ 9FD1
 426+ 9FD1 7E               ld a,(hl)
 427+ 9FD2 E6 F0            and $f0
 428+ 9FD4 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FD5
 430+ 9FD5 CB 7E            bit 7,(hl)
 431+ 9FD7 28 03            jr z,1F
 432+ 9FD9 CD F7 99         call Mov_up
 433+ 9FDC 2A F3 88     1 ld hl, (Puntero_mov)
 434+ 9FDF CB 76            bit 6,(hl)
 435+ 9FE1 28 03            jr z,2F
 436+ 9FE3 CD C6 99         call Mov_down
 437+ 9FE6 2A F3 88     2 ld hl, (Puntero_mov)
 438+ 9FE9 CB 6E            bit 5,(hl)
 439+ 9FEB 28 03            jr z,3F
 440+ 9FED CD 58 9B         call Mov_left
 441+ 9FF0 2A F3 88     3 ld hl, (Puntero_mov)
 442+ 9FF3 CB 66            bit 4,(hl)
 443+ 9FF5 C8               ret z
 444+ 9FF6 CD 3A 9A         call Mov_right
 445+ 9FF9 C9               ret
 446+ 9FFA
 447+ 9FFA              ; ---------- --------- --------- ---------- ----------
 448+ 9FFA              ;
 449+ 9FFA              ;   26/06/23
 450+ 9FFA              ;
 451+ 9FFA              ;   Ajusta_velocidad_desplazamiento.
 452+ 9FFA
 453+ 9FFA              Ajusta_velocidad_desplazamiento
 454+ 9FFA
 455+ 9FFA              ; 1er byte de la cadena de movimiento.
 456+ 9FFA              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ 9FFA
 458+ 9FFA CD 18 A0         call Extrae_nibble_alto
 459+ 9FFD
 460+ 9FFD 32 DD 88         ld (Vel_up),a
 461+ A000 79               ld a,c
 462+ A001 E6 0F            and $0f
 463+ A003 32 DE 88         ld (Vel_down),a
 464+ A006
 465+ A006              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A006              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A006
 468+ A006 23               inc hl
 469+ A007 CD 18 A0         call Extrae_nibble_alto
 470+ A00A
 471+ A00A 32 DB 88         ld (Vel_left),a
 472+ A00D 79               ld a,c
 473+ A00E E6 0F            and $0f
 474+ A010 32 DC 88         ld (Vel_right),a
 475+ A013
 476+ A013              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A013
 478+ A013 23               inc hl
 479+ A014 22 F3 88         ld (Puntero_mov),hl
 480+ A017 C9               ret
 481+ A018
 482+ A018 06 04        Extrae_nibble_alto ld b,4
 483+ A01A 7E               ld a,(hl)
 484+ A01B 4F               ld c,a
 485+ A01C E6 F0            and $f0
 486+ A01E CB 3F        1 srl a
 487+ A020 10 FC            djnz 1B
 488+ A022 C9               ret
 489+ A023
 490+ A023              ; ---------- --------- --------- ---------- ----------
 491+ A023              ;
 492+ A023              ;   5/7/23
 493+ A023              ;
 494+ A023              ;   Incrementa_Puntero_indice_mov
 495+ A023
 496+ A023              Incrementa_Puntero_indice_mov
 497+ A023
 498+ A023 21 F7 88         ld hl,Incrementa_puntero
 499+ A026 34               inc (hl)
 500+ A027
 501+ A027 2A F1 88         ld hl,(Puntero_indice_mov)
 502+ A02A 01 02 00         ld bc,2
 503+ A02D A7               and a
 504+ A02E 09               add hl,bc
 505+ A02F 22 F1 88         ld (Puntero_indice_mov),hl
 506+ A032
 507+ A032 7E               ld a,(hl)
 508+ A033 A7               and a
 509+ A034
 510+ A034              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A034
 512+ A034              ;    jr z,$
 513+ A034
 514+ A034              ;! Reinicia el Patrón de movimiento.
 515+ A034
 516+ A034 CC 39 A0         call z,Inicializa_Puntero_indice_mov
 517+ A037
 518+ A037 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A038
 520+ A038 C9               ret
 521+ A039
 522+ A039
 523+ A039              ; ---------- --------- --------- ---------- ----------
 524+ A039              ;
 525+ A039              ;   24/07/23
 526+ A039              ;
 527+ A039              ;   Inicializa_Puntero_indice_mov
 528+ A039
 529+ A039              Inicializa_Puntero_indice_mov
 530+ A039
 531+ A039              ; Existe etiqueta de bucle principal???
 532+ A039
 533+ A039 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A03C 24               inc h
 535+ A03D 25               dec h
 536+ A03E 28 05            jr z,2F
 537+ A040
 538+ A040 22 F1 88         ld (Puntero_indice_mov),hl
 539+ A043 18 14            jr 3F
 540+ A045
 541+ A045              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A045
 543+ A045 3A F7 88     2 ld a,(Incrementa_puntero)
 544+ A048 47               ld b,a
 545+ A049
 546+ A049 2A F1 88         ld hl,(Puntero_indice_mov)
 547+ A04C 2B           1 dec hl
 548+ A04D 2B               dec hl
 549+ A04E 10 FC            djnz 1B
 550+ A050 22 F1 88         ld (Puntero_indice_mov),hl
 551+ A053
 552+ A053 AF               xor a
 553+ A054 32 F7 88         ld (Incrementa_puntero),a
 554+ A057 18 06            jr 4F
 555+ A059
 556+ A059 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 557+ A05C 32 F7 88         ld (Incrementa_puntero),a
 558+ A05F C9           4 ret
 559+ A060
 560+ A060
 561+ A060
# file closed: Patrones_de_mov.asm
1699  A060              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A060              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A060              ;
   3+ A060              ;	4/9/23
   4+ A060              ;
   5+ A060              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A060
   7+ A060              ;	ADC HL,SP	LD (addr),SP
   8+ A060              ;	ADD HL,SP	LD SP,(addr)
   9+ A060              ;	ADD IX,SP	LD SP,nn
  10+ A060              ; 	ADD IY,SP	LD SP,HL
  11+ A060              ;				LD SP,IX
  12+ A060              ;	DEC SP		LD SP,IY
  13+ A060
  14+ A060              ;	EX (SP),HL
  15+ A060              ;	EX (SP),IX
  16+ A060              ;	EX (SP),IY
  17+ A060
  18+ A060              ;	INC SP
  19+ A060
  20+ A060                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 03 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A F0 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 03 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1D 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A F0 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 23 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 15 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 1B 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 15 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 113+ 7FFE
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ec
 118+ 72EC
 119+ 72EC              Gestiona_albumes_de_fotos
 120+ 72EC
 121+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72EC              ;   Vaciamos Album_de_fotos.
 123+ 72EC
 124+ 72EC              ;   Album_de_fotos. Contiene datos ???
 125+ 72EC
 126+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72EF 7E               ld a,(hl)
 128+ 72F0 A7               and a
 129+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72F3
 131+ 72F3 2A 1F 89         ld hl,(End_Snapshot)
 132+ 72F6 01 00 70         ld bc,Album_de_fotos
 133+ 72F9 11 01 70         ld de,Album_de_fotos+1
 134+ 72FC AF               xor a
 135+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72FE
 137+ 72FE CD 8E 73         call Limpia_album
 138+ 7301
 139+ 7301 21 00 00         ld hl,0
 140+ 7304 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 7307
 142+ 7307              ; ----- ----- ----- -----
 143+ 7307
 144+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 145+ 7307
 146+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 730A 7E               ld a,(hl)
 148+ 730B A7               and a
 149+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 730E              ;                               ; _ información del album2 al album1.
 151+ 730E
 152+ 730E              ; ----- ----- ----- -----
 153+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 730E
 155+ 730E 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 7317
 159+ 7317 CD 8E 73         call Limpia_album
 160+ 731A
 161+ 731A              ;   Calculamos (End_Snapshot)
 162+ 731A
 163+ 731A A7               and a
 164+ 731B ED 4A            adc hl,bc
 165+ 731D 22 1F 89         ld (End_Snapshot),hl
 166+ 7320
 167+ 7320              ;   Limpiamos Album_de_fotos_1.
 168+ 7320
 169+ 7320 2A 25 89         ld hl,(End_Snapshot_1)
 170+ 7323 01 54 70         ld bc,Album_de_fotos_1
 171+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 172+ 7329 AF               xor a
 173+ 732A 02               ld (bc),a
 174+ 732B
 175+ 732B CD 8E 73         call Limpia_album
 176+ 732E
 177+ 732E 21 00 00         ld hl,0
 178+ 7331 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 7334
 180+ 7334              ; ----- ----- ----- -----
 181+ 7334
 182+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 183+ 7334
 184+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 7337 7E               ld a,(hl)
 186+ 7338 A7               and a
 187+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 733B              ;                               ; _ información del album3 al album2.
 189+ 733B              ; ----- ----- ----- -----
 190+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 733B
 192+ 733B 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7344
 196+ 7344 CD 8E 73         call Limpia_album
 197+ 7347
 198+ 7347              ;   Calculamos (End_Snapshot_1):
 199+ 7347
 200+ 7347 A7               and a
 201+ 7348 ED 4A            adc hl,bc
 202+ 734A 22 25 89         ld (End_Snapshot_1),hl
 203+ 734D
 204+ 734D              ;   Limpiamos Album_de_fotos_2.
 205+ 734D
 206+ 734D 2A 29 89         ld hl,(End_Snapshot_2)
 207+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7356 AF               xor a
 210+ 7357 02               ld (bc),a
 211+ 7358
 212+ 7358 CD 8E 73         call Limpia_album
 213+ 735B
 214+ 735B 21 00 00         ld hl,0
 215+ 735E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7361
 217+ 7361              ; ----- ----- ----- -----
 218+ 7361
 219+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7361
 221+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7364 7E               ld a,(hl)
 223+ 7365 A7               and a
 224+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7367
 226+ 7367              ; ----- ----- ----- -----
 227+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7367
 229+ 7367 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7370
 233+ 7370 CD 8E 73         call Limpia_album
 234+ 7373
 235+ 7373              ;   Calculamos (End_Snapshot_2):
 236+ 7373
 237+ 7373 A7               and a
 238+ 7374 ED 4A            adc hl,bc
 239+ 7376 22 29 89         ld (End_Snapshot_2),hl
 240+ 7379
 241+ 7379              ;   Limpiamos Album_de_fotos_3.
 242+ 7379
 243+ 7379 2A 2D 89         ld hl,(End_Snapshot_3)
 244+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7382 AF               xor a
 247+ 7383 02               ld (bc),a
 248+ 7384
 249+ 7384 CD 8E 73         call Limpia_album
 250+ 7387
 251+ 7387 21 00 00         ld hl,0
 252+ 738A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 738D C9               ret
 254+ 738E
 255+ 738E              ; ----------------------------------------------------
 256+ 738E              ;
 257+ 738E              ;   10/8/23
 258+ 738E              ;
 259+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 738E              ;
 261+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 738E              ;           BC ..... Dirección de inicio del álbum.
 263+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 738E
 265+ 738E              ;    ld hl,(End_Snapshot)
 266+ 738E              ;    ld bc,Album_de_fotos
 267+ 738E              ;    ld de,Album_de_fotos+1
 268+ 738E
 269+ 738E              ;   MODIFICA: A,HL,BC y DE.
 270+ 738E
 271+ 738E              Limpia_album
 272+ 738E D5               push de                     ; Guardo DESTINO.
 273+ 738F C5               push bc                     ; Guardo ORIGEN.
 274+ 7390 ED 42            sbc hl,bc
 275+ 7392 4D               ld c,l
 276+ 7393 44               ld b,h
 277+ 7394 E1               pop hl
 278+ 7395 C5               push bc
 279+ 7396 ED B0            ldir
 280+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 739A C9               ret                         ; _ a otro).
 283+ 739B              ;
 284+ 739B
 285+ 739B              ; -----------------------------------------------
 286+ 739B
 287+ 739B
 288+ 739B
 289+ 739B
 290+ 739B
# file closed: Guarda_foto_registros.asm
1700  739B
1701  739B              	SAVESNA "Pruebas.sna", START
1702  739B
1703  739B
1704  739B
1705  739B
# file closed: Banco_de_pruebas.asm
