# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82bd) 				; Inicialmente 65 bytes, $41.
  39  FE01              Disparos_scanlines_album_2 equ $82c1	;	($82c0 - $8301)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $8304
  56  8304
  57  8304 F5           	push af
  58  8305 E5           	push hl
  59  8306
  60  8306              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  8306 21 2A 8C     	ld hl,Ctrl_3
  62  8309 CB 46        	bit 0,(hl)
  63  830B 28 FE        	jr z,$
  64  830D              ;! -------------------
  65  830D
  66  830D              ; Disparos.
  67  830D
  68  830D CD 2A A1     	call Pinta_disparos
  69  8310
  70  8310              ; Shield -----------------------
  71  8310
  72  8310              Temporizacion_shield
  73  8310
  74  8310 21 54 8C     	ld hl,Shield
  75  8313 7E           	ld a,(hl)
  76  8314 A7           	and a
  77  8315 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8317
  79  8317 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8318
  81  8318 23           	inc hl
  82  8319 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  831A
  84  831A 20 17        	jr nz,Incrementa_FRAMES
  85  831C
  86  831C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  831C
  88  831C              Cambio_de_estado
  89  831C
  90  831C              ;	Indica cambio de estado.
  91  831C
  92  831C 23           	inc hl						;	Sitúa en (Shield_3).
  93  831D
  94  831D CB 5E        	bit 3,(hl)
  95  831F 28 05        	jr z,2F
  96  8321
  97  8321 CD 02 91     	call Inicia_Shield
  98  8324
  99  8324 18 0D        	jr Incrementa_FRAMES
 100  8326
 101  8326 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8328
 103  8328              ;	Carga en (Shield_2) la siguiente temporización.
 104  8328
 105  8328 2A 52 8C     	ld hl,(Puntero_datos_shield)
 106  832B 23           	inc hl
 107  832C 22 52 8C     	ld (Puntero_datos_shield),hl
 108  832F 7E           	ld a,(hl)
 109  8330 32 55 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8333
 111  8333              Incrementa_FRAMES
 112  8333
 113  8333 2A 78 5C     	ld hl,(FRAMES)
 114  8336 23           	inc hl
 115  8337 22 78 5C     	ld (FRAMES),hl
 116  833A
 117  833A 7C           	ld a,h
 118  833B B5           	or l
 119  833C 20 04        	jr nz,1F
 120  833E
 121  833E 21 7A 5C     	ld hl,FRAMES_3
 122  8341 34           	inc (hl)
 123  8342
 124  8342 D5           1 push de
 125  8343 C5           	push bc
 126  8344
 127  8344 CD 12 91     	call Actualiza_pantalla
 128  8347
 129  8347 C1           	pop bc
 130  8348 D1           	pop de
 131  8349 E1           	pop hl
 132  834A F1           	pop af
 133  834B
 134  834B FB           	ei
 135  834C
 136  834C C9           	ret
 137  834D
 138  834D              ; --------------------------------------------------------------------------------
 139  834D
 140  834D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 834D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 834D              ;
   3+ 834D              ;	17/02/23
   4+ 834D              ;
   5+ 834D              ;	Sprites e índices.
   6+ 834D
   7+ 834D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FF 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 60 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 59 89        	defw Disparo_2
  40+ 8927 52 89        	defw Disparo_3
  41+ 8929 4B 89        	defw Disparo_4
  42+ 892B 44 89        	defw Disparo_5
  43+ 892D 3D 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00 00        Disparo_7 defw 0							; Control.
  49+ 8938
  50+ 8938 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893B 00 00        	defw 0									; Puntero de impresión.
  52+ 893D 00 00        Disparo_6 defw 0							; Control.
  53+ 893F
  54+ 893F 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8942 00 00        	defw 0									; Puntero de impresión.
  56+ 8944 00 00        Disparo_5 defw 0							; Control.
  57+ 8946
  58+ 8946 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8949 00 00        	defw 0									; Puntero de impresión.
  60+ 894B 00 00        Disparo_4 defw 0							; Control.
  61+ 894D
  62+ 894D 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 8950 00 00        	defw 0									; Puntero de impresión.
  64+ 8952 00 00        Disparo_3 defw 0							; Control.
  65+ 8954
  66+ 8954 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8957 00 00        	defw 0									; Puntero de impresión.
  68+ 8959 00 00        Disparo_2 defw 0							; Control.
  69+ 895B
  70+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 895E 00 00        	defw 0									; Puntero de impresión.
  72+ 8960 00 00        Disparo_1 defw 0							; Control.
  73+ 8962
  74+ 8962              ; -------------------------------------------------------------------------------------
  75+ 8962              ;
  76+ 8962              ;	Índice de cajas de entidades.
  77+ 8962              ;
  78+ 8962              ;	18/1/24
  79+ 8962              ;
  80+ 8962
  81+ 8962              Indice_de_cajas_de_entidades
  82+ 8962
  83+ 8962 80 89        	defw Caja_1
  84+ 8964 8C 89        	defw Caja_2
  85+ 8966 98 89        	defw Caja_3
  86+ 8968 A4 89        	defw Caja_4
  87+ 896A B0 89        	defw Caja_5
  88+ 896C BC 89        	defw Caja_6
  89+ 896E C8 89        	defw Caja_7
  90+ 8970
  91+ 8970 00 00        	defw 0
  92+ 8972 00 00        	defw 0
  93+ 8974
  94+ 8974              ; -------------------------
  95+ 8974
  96+ 8974              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 8974
  98+ 8974              ;	db 0
  99+ 8974
 100+ 8974              ; ---------- ---------- ---------- ---------- ----------
 101+ 8974              ;
 102+ 8974              ;	28/05/24
 103+ 8974              ;
 104+ 8974              ; 	Cada caja tiene 14 bytes !!!
 105+ 8974              ;
 106+ 8974              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 8974
 108+ 8974 00           Amadeus_BOX db 0										; (Tipo).
 109+ 8975 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8977 00           	db 0												; (Contador_de_vueltas).
 111+ 8978 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8979 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 897B 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 897D 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 897F 00           	db 0												; (Velocidad).
 116+ 8980
 117+ 8980              ; ---------- ---------- ---------- ---------- ----------
 118+ 8980              ;
 119+ 8980              ;	22/01/24
 120+ 8980              ;
 121+ 8980              ; 	Cada caja tiene 12 bytes !!!
 122+ 8980
 123+ 8980 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 8983 00           	db 0												; (Contador_de_vueltas).
 125+ 8984 00           	db 0												; (Impacto).
 126+ 8985 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8987 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8989 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 898B 00           	db 0												; (Velocidad).
 130+ 898C
 131+ 898C              ; ---------- ---------- ---------- ---------- ----------
 132+ 898C
 133+ 898C 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 898F 00           	db 0 												; (Contador_de_vueltas).
 135+ 8990 00           	db 0												; (Impacto).
 136+ 8991 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 8993 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 8995 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8997 00           	db 0												; (Velocidad).
 140+ 8998
 141+ 8998              ; ---------- ---------- ---------- ---------- ----------
 142+ 8998
 143+ 8998 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 899B 00           	db 0 												; (Contador_de_vueltas).
 145+ 899C 00           	db 0												; (Impacto).
 146+ 899D 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 899F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 89A1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 89A3 00           	db 0												; (Velocidad).
 150+ 89A4
 151+ 89A4              ; ---------- ---------- ---------- ---------- ----------
 152+ 89A4
 153+ 89A4 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A7 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A8 00           	db 0												; (Impacto).
 156+ 89A9 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89AF 00           	db 0												; (Velocidad).
 160+ 89B0
 161+ 89B0              ; ---------- ---------- ---------- ---------- ----------
 162+ 89B0
 163+ 89B0 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89B3 00           	db 0 												; (Contador_de_vueltas).
 165+ 89B4 00           	db 0												; (Impacto).
 166+ 89B5 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89BB 00           	db 0												; (Velocidad).
 170+ 89BC
 171+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 172+ 89BC
 173+ 89BC 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89BF 00           	db 0 												; (Contador_de_vueltas).
 175+ 89C0 00           	db 0												; (Impacto).
 176+ 89C1 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89C3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89C5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C7 00           	db 0												; (Velocidad).
 180+ 89C8
 181+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C8
 183+ 89C8 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89CB 00           	db 0 												; (Contador_de_vueltas).
 185+ 89CC 00           	db 0												; (Impacto).
 186+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89D3 00           	db 0												; (Velocidad).
 190+ 89D4
 191+ 89D4              ; -------------------------------------------------------------------------------------
 192+ 89D4              ;
 193+ 89D4              ;	11/1/24
 194+ 89D4              ;
 195+ 89D4              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89D4              ;
 197+ 89D4              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89D4              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89D4              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89D4              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89D4
 202+ 89D4              Indice_de_definiciones_de_entidades
 203+ 89D4
 204+ 89D4 D8 89        	defw Entidad_1
 205+ 89D6 E5 89        	defw Entidad_2
 206+ 89D8
 207+ 89D8              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D8
 209+ 89D8              ;	BADSAT, (Satélite malvado).
 210+ 89D8
 211+ 89D8 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89DB 01           	db 1												; (Contador_de_vueltas).
 213+ 89DC 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89DE 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89E0 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89E2 01           	db 1												; (Cuad_objeto).
 217+ 89E3 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89E5
 219+ 89E5 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E8 01           	db 1												; (Contador_de_vueltas).
 221+ 89E9 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89EB 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89ED 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89EF 01           	db 1												; (Cuad_objeto).
 225+ 89F0 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89F2
 227+ 89F2              ; -------------------------------------------------------------------------------------
 228+ 89F2              ;
 229+ 89F2              ;	28/05/24
 230+ 89F2              ;
 231+ 89F2              ;	Definición de Amadeus.
 232+ 89F2              ;
 233+ 89F2              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89F2              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89F2
 236+ 89F2 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89F5 00           	db 0												; (Contador_de_vueltas).
 238+ 89F6 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F8 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89FA C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89FC 03           	db 3												; (Cuad_objeto).
 242+ 89FD 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FF
   2+ 89FF
   3+ 89FF              ;   07/07/23
   4+ 89FF              ;
   5+ 89FF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FF              ;
   7+ 89FF              ;   Codificación:
   8+ 89FF              ;
   9+ 89FF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FF              ;
  11+ 89FF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FF              ;
  13+ 89FF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FF              ;
  15+ 89FF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FF              ;
  17+ 89FF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FF              ;                               ..... %01000010 Vel_up 4
  19+ 89FF              ;                                               Vel_down 2
  20+ 89FF              ;                               ..... $42
  21+ 89FF              ;
  22+ 89FF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FF              ;
  24+ 89FF              ;                               ..... %01000010 Vel_left 4
  25+ 89FF              ;                                               Vel_right 2
  26+ 89FF              ;                               ..... $42
  27+ 89FF              ;
  28+ 89FF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FF              ;
  30+ 89FF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FF              ;
  32+ 89FF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FF              ;
  34+ 89FF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FF              ;                                     $53
  36+ 89FF              ;
  37+ 89FF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FF              ;
  39+ 89FF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FF              ;
  42+ 89FF              ;                       Arriba ..... $81
  43+ 89FF              ;                       Arriba - izquierda ..... $a1
  44+ 89FF              ;                       Arriba - derecha ..... $91
  45+ 89FF              ;
  46+ 89FF              ;                       Abajo ..... $41
  47+ 89FF              ;                       Abajo - izquierda ..... $61
  48+ 89FF              ;                       Abajo - derecha ..... $51
  49+ 89FF              ;
  50+ 89FF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FF              ;
  52+ 89FF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FF              ;
  56+ 89FF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FF              ;
  61+ 89FF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FF              ;
  65+ 89FF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FF
  70+ 89FF              ; ----- ----- ----- ----- -----
  71+ 89FF
  72+ 89FF 2B 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A01 33 8A            defw F_1
  74+ 8A03 3D 8A            defw F_2
  75+ 8A05 47 8A            defw Codo_abajo_derecha
  76+ 8A07 7B 8A            defw Derecha_y_subiendo
  77+ 8A09 85 8A            defw Derecha_y_subiendo_1
  78+ 8A0B 8F 8A            defw F_3
  79+ 8A0D 99 8A            defw F_4
  80+ 8A0F A3 8A            defw Derecha_y_bajando
  81+ 8A11 AD 8A            defw Derecha_y_bajando_1
  82+ 8A13 B7 8A            defw Derecha_y_bajando_2
  83+ 8A15 C1 8A            defw Codo_derecha_abajo
  84+ 8A17 F1 8A            defw Codo_abajo_izq.
  85+ 8A19 25 8B            defw Izquierda_y_subiendo
  86+ 8A1B 2F 8B            defw Izquierda_y_subiendo_1
  87+ 8A1D 39 8B            defw F_5
  88+ 8A1F 43 8B            defw F_6
  89+ 8A21 4D 8B            defw Izquierda_y_bajando
  90+ 8A23 57 8B            defw Izquierda_y_bajando_1
  91+ 8A25 61 8B            defw Izquierda_y_bajando_2
  92+ 8A27 6B 8B            defw Codo_izquierda_abajo
  93+ 8A29 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A2B
  95+ 8A2B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A33
  98+ 8A33 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A37 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A3B 08 00
 100+ 8A3D
 101+ 8A3D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A41 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A45 0F FE
 103+ 8A47
 104+ 8A47 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A4B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A53 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A57 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A5B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A67 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A6B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A73 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A77 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A7B
 118+ 8A7B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A83 06 00
 120+ 8A85
 121+ 8A85 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A89 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A8D 02 00
 123+ 8A8F
 124+ 8A8F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A93 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A97 04 00
 126+ 8A99
 127+ 8A99 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A9D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AA1 08 00
 129+ 8AA3
 130+ 8AA3 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA7 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AAB 02 00
 132+ 8AAD
 133+ 8AAD 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AB1 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB5 06 00
 135+ 8AB7
 136+ 8AB7 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8ABB 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABF 06 00
 138+ 8AC1
 139+ 8AC1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AC1
 141+ 8AC1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8ACD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8AD1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8ADD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8AE1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AED 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AF1
 154+ 8AF1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AFD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B01 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B05 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B09 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B0D 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B11 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B15 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B19 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B1D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B21 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B25
 168+ 8B25 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B29 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B2D 06 00
 170+ 8B2F
 171+ 8B2F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B33 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B37 02 00
 173+ 8B39
 174+ 8B39 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B3D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B41 04 00
 176+ 8B43
 177+ 8B43 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B47 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B4B 08 00
 179+ 8B4D
 180+ 8B4D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B51 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B55 02 00
 182+ 8B57
 183+ 8B57 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B5B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5F 06 00
 185+ 8B61
 186+ 8B61 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B65 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B69 06 00
 188+ 8B6B
 189+ 8B6B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B77 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B7B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B83 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B87 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B8B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B93 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B97 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B9B
 202+ 8B9B
 203+ 8B9B
 204+ 8B9B
 205+ 8B9B
 206+ 8B9B
 207+ 8B9B
 208+ 8B9B
 209+ 8B9B
 210+ 8B9B
# file closed: Patrones_de_mov.asm
 143  8B9B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B9B              ; 19/1/24
   2+ 8B9B
   3+ 8B9B              Indice_de_niveles
   4+ 8B9B
   5+ 8B9B A3 8B        	defw Nivel_1
   6+ 8B9D A9 8B        	defw Nivel_2
   7+ 8B9F
   8+ 8B9F              ;	...
   9+ 8B9F              ;	...
  10+ 8B9F              ;	+ Niveles ...
  11+ 8B9F
  12+ 8B9F 00 00        	defw 0
  13+ 8BA1 00 00        	defw 0
  14+ 8BA3
  15+ 8BA3 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8BA4 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA8 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA9
  19+ 8BA9 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAA 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB2 01 02
  22+ 8BB4 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB8 01 02
  23+ 8BBA
# file closed: Niveles.asm
 144  8BBA
 145  8BBA              ; --------------------------------------------------------------------------------
 146  8BBA              ;
 147  8BBA              ; 12/05/24
 148  8BBA              ;
 149  8BBA              ; Parámetros DRAW.
 150  8BBA              ;
 151  8BBA
 152  8BBA              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBA
 154  8BBA 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBB              ;															- Patrón de movimiento.
 156  8BBB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBD
 159  8BBD 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBE              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBE
 162  8BBE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBE              ; Ejemplos.
 165  8BBE
 166  8BBE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBE
 172  8BBE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BBF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BBF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BBF
 176  8BBF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC1
 179  8BC1 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC3
 181  8BC3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC3
 183  8BC3 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 184  8BC5              ;														; _palabras que componen el "movimiento_masticado".
 185  8BC5
 186  8BC5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 187  8BC5
 188  8BC5 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 189  8BC6              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 190  8BC6              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 191  8BC6              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 192  8BC6              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 193  8BC6
 194  8BC6 00           Ctrl_2 db 0
 195  8BC7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 196  8BC7              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 197  8BC7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 198  8BC7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 199  8BC7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 200  8BC7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 201  8BC7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 202  8BC7              ;
 203  8BC7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 204  8BC7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 205  8BC7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 206  8BC7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 207  8BC7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 208  8BC7              ;														BIT 4, ???
 209  8BC7              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 210  8BC7
 211  8BC7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 212  8BC8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 213  8BC8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 214  8BC8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 215  8BC8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 216  8BC8              ;
 217  8BC8              ; 														DESCRIPCIÖN:
 218  8BC8              ;
 219  8BC8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 220  8BC8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 221  8BC8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 222  8BC8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 223  8BC8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 224  8BC8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 225  8BC8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 226  8BC8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 227  8BC8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 228  8BC8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 229  8BC8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 230  8BC8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 231  8BC8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 232  8BC8              ;
 233  8BC8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 234  8BC8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 235  8BC8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 236  8BC8
 237  8BC8              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 238  8BC8
 239  8BC8 00           Filas db 0												; Filas. [DRAW]
 240  8BC9 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 241  8BCA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 242  8BCC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 243  8BCE
 244  8BCE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 245  8BCE
 246  8BCE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 247  8BCF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 248  8BCF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 249  8BCF
 250  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8BCF
 252  8BCF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 253  8BCF              ;
 254  8BCF              ;	COLORES: 0 ..... NEGRO
 255  8BCF              ;    		 1 ..... AZUL
 256  8BCF              ; 			 2 ..... ROJO
 257  8BCF              ;			 3 ..... MAGENTA
 258  8BCF              ; 			 4 ..... VERDE
 259  8BCF              ; 			 5 ..... CIAN
 260  8BCF              ;			 6 ..... AMARILLO
 261  8BCF              ; 			 7 ..... BLANCO
 262  8BCF
 263  8BCF 00 00        Indice_Sprite_der defw 0
 264  8BD1 00 00        Indice_Sprite_izq defw 0
 265  8BD3 00 00        Puntero_DESPLZ_der defw 0
 266  8BD5 00 00        Puntero_DESPLZ_izq defw 0
 267  8BD7
 268  8BD7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 269  8BD9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 270  8BDA 00           Columnas db 0
 271  8BDB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 272  8BDD              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 273  8BDD 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE
 275  8BDE              ; variables de control general.
 276  8BDE
 277  8BDE 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 278  8BDF
 279  8BDF              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8BDF
 281  8BDF              Perfiles_de_velocidad
 282  8BDF
 283  8BDF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 284  8BE0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 286  8BE2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 287  8BE3
 288  8BE3              ; Contadores de 16 bits.
 289  8BE3
 290  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 291  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 292  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 293  8BE9 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 294  8BEB
 295  8BEB              ; Movimiento. ------------------------------------------------------------------------------------------------------
 296  8BEB
 297  8BEB 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 298  8BED 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 299  8BEF 00 00        Puntero_indice_mov_bucle defw 0							;
 300  8BF1              ;
 301  8BF1              ;
 302  8BF1 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 303  8BF2              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 304  8BF2              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 305  8BF2 00           Incrementa_puntero_backup db 0
 306  8BF3 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 307  8BF4              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 308  8BF4 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 309  8BF5 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 310  8BF6 00           Cola_de_desplazamiento db 0								; Este byte indica:
 311  8BF7              ;
 312  8BF7              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 313  8BF7              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 314  8BF7              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 315  8BF7              ;
 316  8BF7              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 317  8BF7              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 318  8BF7              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 319  8BF7              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 320  8BF7              ;
 321  8BF7              ;														;	"$ff" ..... Bucle infinito de repetición.
 322  8BF7              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 323  8BF7              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 324  8BF7
 325  8BF7 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 326  8BF8
 327  8BF8              ;														DESCRIPCIÓN:
 328  8BF8              ;
 329  8BF8              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 330  8BF8              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 331  8BF8              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 332  8BF8              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 333  8BF8              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 334  8BF8              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 335  8BF8
 336  8BF8              ;														BIT 3, Recarga de nueva oleada.
 337  8BF8              ;														BIT 4, Recarga de nueva oleada.
 338  8BF8              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 339  8BF8              ;														BIT 6, **** Frame completo.
 340  8BF8              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 341  8BF8
 342  8BF8 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 343  8BFA              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 344  8BFA              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 345  8BFA              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 346  8BFA
 347  8BFA              ; Gestión de ENTIDADES y CAJAS.
 348  8BFA
 349  8BFA 00 00        Puntero_store_caja defw 0
 350  8BFC 00 00        Puntero_restore_caja defw 0
 351  8BFE 00 00        Indice_restore_caja defw 0
 352  8C00 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 353  8C01 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 354  8C02 00           Entidades_en_curso db 0									; ..... ..... .....
 355  8C03
 356  8C03 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C05 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C07              ;														; _ puntero (Indice_entidades).
 359  8C07
 360  8C07              ;---------------------------------------------------------------------------------------------------------------
 361  8C07              ;
 362  8C07              ;	11/09/24
 363  8C07              ;
 364  8C07              ;	Álbumes.
 365  8C07
 366  8C07 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C09              ;														; _variable para almacenar lo posición del puntero_
 368  8C09              ; 														; _de pila, SP.
 369  8C09 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C0B              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C0B
 372  8C0B              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C0B
 374  8C0B 00 00        Album_de_pintado defw 0
 375  8C0D 00 00        Album_de_borrado defw 0
 376  8C0F 00 00        Album_de_pintado_Amadeus defw 0
 377  8C11 00 00        Album_de_borrado_Amadeus defw 0
 378  8C13 00 00        Album_de_pintado_disparos defw 0
 379  8C15 00 00        Album_de_borrado_disparos defw 0
 380  8C17
 381  8C17 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 382  8C19 00           Num_de_bytes_album_de_disparos db 0
 383  8C1A
 384  8C1A 07           Numero_de_disparos_de_entidades db 7
 385  8C1B
 386  8C1B 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 387  8C1C 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 388  8C1D
 389  8C1D 00 00        Techo_Scanlines_album defw 0
 390  8C1F 00 00        Techo_Scanlines_album_2 defw 0
 391  8C21 00           Switch db 0
 392  8C22 00 00        Techo defw 0
 393  8C24 00 00        Scanlines_album_SP defw 0
 394  8C26 00 89        India_SP defw Tabla_de_pintado
 395  8C28 03 89        India_2_SP defw Tabla_de_pintado+3
 396  8C2A
 397  8C2A 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 398  8C2B              ;
 399  8C2B              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 400  8C2B              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 401  8C2B              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 402  8C2B              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 403  8C2B              ;																Habilita el borrado/pintado de sprites.
 404  8C2B              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 405  8C2B              ;																_ a la baja.
 406  8C2B              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 407  8C2B              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 408  8C2B              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 409  8C2B              ; 																_ el último frame de la explosión de nuestra nave.
 410  8C2B              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 411  8C2B              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 412  8C2B
 413  8C2B 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 414  8C2C              ;
 415  8C2C              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 416  8C2C              ;
 417  8C2C              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 418  8C2C              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 419  8C2C              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 420  8C2C              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 421  8C2C              ;
 422  8C2C              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 423  8C2C              ;															_ masticados ya generados.
 424  8C2C              ;
 425  8C2C              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 426  8C2C              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 427  8C2C              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 428  8C2C              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 429  8C2C
 430  8C2C 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 431  8C2D              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 432  8C2D              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 433  8C2D
 434  8C2D
 435  8C2D
 436  8C2D
 437  8C2D
 438  8C2D              ; Gestión de Disparos.
 439  8C2D
 440  8C2D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 441  8C2F 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 442  8C31 00           Impacto2 db 0											; Byte de control de impactos.
 443  8C32
 444  8C32              ;
 445  8C32              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 446  8C32              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 447  8C32              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 448  8C32              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 449  8C32
 450  8C32
 451  8C32
 452  8C32
 453  8C32
 454  8C32
 455  8C32
 456  8C32 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  8C34              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  8C34              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 459  8C34
 460  8C34 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 461  8C36              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  8C36 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C39              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8C39 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C3C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 466  8C3C
 467  8C3C              ;---------------------------------------------------------------------------------------------------------------
 468  8C3C
 469  8C3C              ; Relojes y temporizaciones.
 470  8C3C
 471  8C3C 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 472  8C3D 05           Clock_explosion_Amadeus db 5
 473  8C3E 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 474  8C3F
 475  8C3F F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 476  8C41 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 477  8C43 00           Numero_rnd_disparos db 0
 478  8C44
 479  8C44 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 480  8C46 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 481  8C47              ;														; Repite la oleada de entidades.
 482  8C47 A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 483  8C48 A0           CLOCK_disparos_de_entidades db $a0
 484  8C49
 485  8C49              ;---------------------------------------------------------------------------------------------------------------
 486  8C49
 487  8C49              ; Gestión de NIVELES.
 488  8C49
 489  8C49 00           Nivel db 0												; Nivel actual del juego.
 490  8C4A 00 00        Puntero_indice_NIVELES defw 0
 491  8C4C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 492  8C4E              ; 														; _ que definen el NIVEL.
 493  8C4E
 494  8C4E              ; ---------------------------------------------------------------------------------------------------------------
 495  8C4E
 496  8C4E              ; Temporizaciones Shield.
 497  8C4E
 498  8C4E 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 499  8C52 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 500  8C54 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 501  8C55 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 502  8C56 00           Shield_3 db 0
 503  8C57
 504  8C57 06           Lives db 6
 505  8C58
 506  8C58              ; 	INICIO  *************************************************************************************************************************************************************************
 507  8C58              ;
 508  8C58              ;	5/1/24
 509  8C58
 510  8C58              START
 511  8C58
 512  8C58 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 513  8C5B 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 514  8C5D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 515  8C5F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 516  8C61 F3           	DI
 517  8C62
 518  8C62              ; Limpiamos pantalla.
 519  8C62
 520  8C62              ;	ld a,%00000111
 521  8C62              ;	call Cls
 522  8C62              ;	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 523  8C62
 524  8C62              ; INICIALIZACIÓN.
 525  8C62
 526  8C62 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 527  8C64 CD 44 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 528  8C67
 529  8C67 3E 07        	ld a,%00000111
 530  8C69              ;	call Cls
 531  8C69 CD F7 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 532  8C6C
 533  8C6C CD 95 8E     	call Extrae_numero_aleatorio_y_avanza
 534  8C6F
 535  8C6F 6F           	ld l,a
 536  8C70 26 00        	ld h,0
 537  8C72 22 44 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 538  8C75
 539  8C75              ;	Inicializa 1er Nivel.
 540  8C75
 541  8C75 21 9B 8B     	ld hl,Indice_de_niveles
 542  8C78 22 4A 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 543  8C7B CD 74 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 544  8C7E              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 545  8C7E              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 546  8C7E              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 547  8C7E
 548  8C7E              ;	Inicia los álbumes de líneas.
 549  8C7E
 550  8C7E CD 4E 90     	call Inicia_albumes_de_lineas
 551  8C81              ;
 552  8C81 CD 5E 90     	call Inicia_albumes_de_lineas_Amadeus
 553  8C84 CD 6B 90     	call Inicia_albumes_de_disparos
 554  8C87
 555  8C87 CD B9 92     4 call Inicia_Entidades
 556  8C8A CD 1C 93     	call Inicia_Amadeus
 557  8C8D
 558  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 559  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 560  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 561  8C8D
 562  8C8D 11 74 89     	ld de,Amadeus_BOX
 563  8C90 CD 6F 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 564  8C93 CD 5F 93     	call Limpiamos_bandeja_DRAW
 565  8C96
 566  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 567  8C96
 568  8C96 06 3C        	ld b,60
 569  8C98 CD 45 9D     2 call Amadeus_a_izquierda
 570  8C9B 10 FB        	djnz 2B
 571  8C9D
 572  8C9D CD 2C 90     	call Genera_datos_de_impresion_Amadeus
 573  8CA0
 574  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 575  8CA0
 576  8CA0 CD 7E 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 577  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 578  8CA3
 579  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 580  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 581  8CA3
 582  8CA3              ;	ld a,(Ctrl_1)
 583  8CA3              ;	bit 3,a
 584  8CA3              ;	jr nz,5F											 ; Loop
 585  8CA3
 586  8CA3              ;	ld de,Amadeus_db
 587  8CA3              ;	call Store_Amadeus
 588  8CA3
 589  8CA3              ; 	INICIA DISPAROS !!!!!
 590  8CA3
 591  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA3
 593  8CA3              ;5 call Inicia_punteros_de_cajas
 594  8CA3              ;	call Restore_entidad
 595  8CA3
 596  8CA3              ;	ld a,(Ctrl_1)
 597  8CA3              ;	bit 3,a
 598  8CA3              ;	jr z,6F
 599  8CA3
 600  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA3
 602  8CA3              ;	ld hl,Ctrl_1
 603  8CA3              ;	res 3,(hl)
 604  8CA3              ;	jr Main
 605  8CA3
 606  8CA3              ; Damos por concluida la construcción del FRAME.
 607  8CA3              ;
 608  8CA3
 609  8CA3 CD 02 91     	call Inicia_Shield
 610  8CA6
 611  8CA6
 612  8CA6 2A 24 8C     6 ld hl,(Scanlines_album_SP)
 613  8CA9 22 1D 8C     	ld (Techo_Scanlines_album),hl
 614  8CAC
 615  8CAC 2A 0D 8C     	ld hl,(Album_de_borrado)
 616  8CAF 22 24 8C     	ld (Scanlines_album_SP),hl
 617  8CB2
 618  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 619  8CB5 22 26 8C     	ld (India_SP),hl
 620  8CB8
 621  8CB8 21 2A 8C     	ld hl,Ctrl_3
 622  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CBD CB D6        	set 2,(hl)
 624  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC1
 626  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC2
 628  8CC2 76           	halt
 629  8CC3
 630  8CC3              ; ------------------------------------
 631  8CC3
 632  8CC3              Main
 633  8CC3              ;
 634  8CC3              ; 20/09/24
 635  8CC3
 636  8CC3              ; Gestión de disparos.
 637  8CC3
 638  8CC3 CD F2 9E     	call Motor_de_disparos_entidades
 639  8CC6 CD D4 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 640  8CC9 CD 82 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 641  8CCC
 642  8CCC              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CCC              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CCC              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CCC
 646  8CCC CD 9E A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CCF
 648  8CCF              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 649  8CCF
 650  8CCF 21 48 8C     	ld hl,CLOCK_disparos_de_entidades
 651  8CD2 35           	dec (hl)
 652  8CD3 CC CB 8D     	call z,Autoriza_disparo_de_entidades
 653  8CD6
 654  8CD6 2A 44 8C     	ld hl,(Clock_next_entity)
 655  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 656  8CDD A7           	and a
 657  8CDE ED 42        	sbc hl,bc
 658  8CE0 20 16        	jr nz,1F
 659  8CE2
 660  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 661  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 662  8CE2
 663  8CE2 3A 01 8C     	ld a,(Numero_parcial_de_entidades)
 664  8CE5 47           	ld b,a
 665  8CE6 3A 02 8C     	ld a,(Entidades_en_curso)
 666  8CE9 B8           	cp b
 667  8CEA 28 0C        	jr z,1F
 668  8CEC 30 0A        	jr nc,1F
 669  8CEE
 670  8CEE 3C           	inc a
 671  8CEF 32 02 8C     	ld (Entidades_en_curso),a
 672  8CF2
 673  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 674  8CF2
 675  8CF2 CD 95 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 676  8CF5 CD B1 8E     	call Define_Clock_next_entity
 677  8CF8
 678  8CF8 3A 02 8C     1 ld a,(Entidades_en_curso)
 679  8CFB A7           	and a
 680  8CFC CA 76 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 681  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 682  8D00
 683  8D00              ; ( Código que ejecutamos con cada entidad: ).
 684  8D00
 685  8D00              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 686  8D00              ;
 687  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 688  8D00
 689  8D00 21 00 89     	ld hl,Tabla_de_pintado
 690  8D03 22 26 8C     	ld (India_SP),hl
 691  8D06
 692  8D06 21 2A 8C     	ld hl,Ctrl_3
 693  8D09 CB D6        	set 2,(hl)
 694  8D0B CD 57 8E     	call Change
 695  8D0E
 696  8D0E C5           2 push bc 												; Nº de entidades en curso.
 697  8D0F
 698  8D0F CD CF 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 699  8D12 ED 5B 24 8C  	ld de,(Scanlines_album_SP)
 700  8D16
 701  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 702  8D16
 703  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 704  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 705  8D16
 706  8D16 3A 31 8C     	ld a,(Impacto2)
 707  8D19 CB 5F        	bit 3,a
 708  8D1B C4 61 A0     	call nz,Compara_con_coordenadas_de_disparo
 709  8D1E
 710  8D1E 3A BE 8B     	ld a,(Impacto)
 711  8D21 CB 4F        	bit 1,a
 712  8D23 C4 DF 91     	call nz,Genera_explosion
 713  8D26 20 31        	jr nz,Gestiona_siguiente_entidad
 714  8D28
 715  8D28 3A BE 8B     	ld a,(Impacto)
 716  8D2B A7           	and a
 717  8D2C 28 0C        	jr z,3F
 718  8D2E
 719  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 720  8D2E
 721  8D2E              ; 5/7/24
 722  8D2E              ; Nota importante:
 723  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 724  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 725  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 726  8D2E
 727  8D2E 3A 78 89     	ld a,(Impacto_Amadeus)
 728  8D31 A7           	and a
 729  8D32 C4 DF 91     	call nz,Genera_explosion
 730  8D35 20 22        	jr nz,Gestiona_siguiente_entidad
 731  8D37
 732  8D37              ; Falsa colisión !!!
 733  8D37
 734  8D37 32 BE 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 735  8D3A
 736  8D3A              ; -------------------------------------------
 737  8D3A
 738  8D3A CD F5 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 739  8D3D CD 37 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 740  8D40 CD E5 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 741  8D43 CD DF 94     	call Genera_datos_de_impresion
 742  8D46 CD 82 93     	call Decrementa_Contador_de_mov_masticados
 743  8D49
 744  8D49              ; -------------------------------------------
 745  8D49
 746  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 747  8D49
 748  8D49 2A BF 8B     	ld hl,(Puntero_de_impresion)
 749  8D4C CD B3 94     	call Genera_coordenadas
 750  8D4F
 751  8D4F              ; TODO: Generamos disparo ???
 752  8D4F
 753  8D4F 3A 1C 8C     	ld a,(Permiso_de_disparo_Entidades)
 754  8D52 A7           	and a
 755  8D53 C4 E0 8D     	call nz,Entidad_genera_disparo_si_procede
 756  8D56
 757  8D56 CD 1C A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 758  8D59
 759  8D59              Gestiona_siguiente_entidad
 760  8D59
 761  8D59 CD 54 93      	call Store_Restore_cajas
 762  8D5C C1           	pop bc
 763  8D5D 10 AF        	djnz 2B
 764  8D5F
 765  8D5F              ; Hemos gestionado todas las entidades.
 766  8D5F              ; ----- ----- -----
 767  8D5F
 768  8D5F CD 09 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 769  8D62 CD 20 8F     	call Ordena_tabla_de_impresion
 770  8D65 CD 7E 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 771  8D68
 772  8D68 CD C6 8E     	call Borra_diferencia
 773  8D6B
 774  8D6B 3A 2A 8C     	ld a,(Ctrl_3)
 775  8D6E CB 5F        	bit 3,a
 776  8D70 20 04        	jr nz,Gestion_de_Amadeus
 777  8D72
 778  8D72 EB           	ex de,hl
 779  8D73 71           	ld (hl),c
 780  8D74 2C           	inc l
 781  8D75 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 782  8D76
 783  8D76              ;! GESTIONA AMADEUS !!!!!!!!!!
 784  8D76
 785  8D76              Gestion_de_Amadeus
 786  8D76
 787  8D76 21 2A 8C     	ld hl,Ctrl_3
 788  8D79 CB 76        	bit 6,(hl)
 789  8D7B 28 13        	jr z,Amadeus_vivo
 790  8D7D
 791  8D7D              ; Amadeus ha sido destruido.
 792  8D7D              ; Decrementa (Temp_new_live).
 793  8D7D
 794  8D7D 21 3E 8C     	ld hl,Temp_new_live
 795  8D80 35           	dec (hl)
 796  8D81 20 26        	jr nz,End_frame
 797  8D83
 798  8D83              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 799  8D83
 800  8D83 21 57 8C     	ld hl,Lives
 801  8D86 35           	dec (hl)
 802  8D87
 803  8D87              ;! Fin del juego
 804  8D87
 805  8D87 F3           	di
 806  8D88 28 FE        	jr z,$
 807  8D8A FB           	ei
 808  8D8B
 809  8D8B              ; Nueva nave.
 810  8D8B
 811  8D8B CD FD 8D     	call Reinicia_Amadeus
 812  8D8E 18 19        	jr End_frame
 813  8D90
 814  8D90              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 815  8D90
 816  8D90              Amadeus_vivo
 817  8D90
 818  8D90 3A 78 89     	ld a,(Impacto_Amadeus)
 819  8D93 A7           	and a
 820  8D94 C4 0F 92     	call nz, Genera_explosion_Amadeus
 821  8D97 20 10        	jr nz, End_frame
 822  8D99
 823  8D99 CD BC 91     	call Teclado
 824  8D9C
 825  8D9C 21 2A 8C     	ld hl,Ctrl_3
 826  8D9F CB 6E        	bit 5,(hl)
 827  8DA1 28 06        	jr z,End_frame
 828  8DA3
 829  8DA3              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 830  8DA3
 831  8DA3 CD 72 8E     	call Change_Amadeus
 832  8DA6 CD 2C 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 833  8DA9
 834  8DA9              End_frame
 835  8DA9
 836  8DA9              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 837  8DA9              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 838  8DA9
 839  8DA9              ;	call Genera_datos_de_impresion_disparos_Entidades
 840  8DA9 CD 83 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 841  8DAC CD AF A0     	call Calcula_bytes_pintado_disparos
 842  8DAF CD BC A0     	call Limpia_album_de_pintado_disparos
 843  8DB2
 844  8DB2              ; ------------ ------------- --------------
 845  8DB2
 846  8DB2              ;	xor a
 847  8DB2              ;	ld (Permiso_de_disparo_Entidades),a
 848  8DB2
 849  8DB2 CD E9 8D     	call Actuaiza_sp_de_disparos_de_entidades
 850  8DB5
 851  8DB5 2A 0D 8C     	ld hl,(Album_de_borrado)
 852  8DB8 22 24 8C     	ld (Scanlines_album_SP),hl
 853  8DBB
 854  8DBB 21 2A 8C     	ld hl,Ctrl_3
 855  8DBE CB C6        	set 0,(hl) 											; Indica Frame completo.
 856  8DC0 CB 9E        	res 3,(hl)
 857  8DC2 CB A6        	res 4,(hl)
 858  8DC4
 859  8DC4 AF           	xor a
 860  8DC5 D3 FE        	out ($fe),a
 861  8DC7
 862  8DC7 76           	halt
 863  8DC8
 864  8DC8              ; ----------------------------------------
 865  8DC8
 866  8DC8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 867  8DC8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 868  8DC8 CA C3 8C     	jp z,Main
 869  8DCB
 870  8DCB              ;------------------------------------------
 871  8DCB              ;
 872  8DCB              ;	2/10/24
 873  8DCB
 874  8DCB              Autoriza_disparo_de_entidades
 875  8DCB
 876  8DCB 3E 01        	ld a,1
 877  8DCD 32 1C 8C     	ld (Permiso_de_disparo_Entidades),a
 878  8DD0
 879  8DD0 3A 47 8C     	ld a,(Repone_CLOCK_disparos)
 880  8DD3 FE 19        	cp 25
 881  8DD5 38 02        	jr c,1F
 882  8DD7
 883  8DD7 D6 05        	sub 5
 884  8DD9
 885  8DD9 32 47 8C     1 ld (Repone_CLOCK_disparos),a
 886  8DDC 32 48 8C     	ld (CLOCK_disparos_de_entidades),a
 887  8DDF
 888  8DDF C9           	ret
 889  8DE0
 890  8DE0              ;------------------------------------------
 891  8DE0              ;
 892  8DE0              ;	14/09/24
 893  8DE0              ;
 894  8DE0              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 895  8DE0
 896  8DE0              Entidad_genera_disparo_si_procede
 897  8DE0
 898  8DE0 2A 41 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 899  8DE3 CB 06        	rlc (hl)
 900  8DE5
 901  8DE5 DC DC 9F     	call c,Genera_disparo_de_entidad_maldosa
 902  8DE8
 903  8DE8 C9           	ret
 904  8DE9
 905  8DE9              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 906  8DE9              ;
 907  8DE9              ;	30/09/24
 908  8DE9
 909  8DE9              Actuaiza_sp_de_disparos_de_entidades
 910  8DE9
 911  8DE9 2A 41 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 912  8DEC 23           	inc hl
 913  8DED 22 41 8C     	ld (Puntero_num_aleatorios_disparos),hl
 914  8DF0
 915  8DF0 11 FD 88     	ld de,Numeros_aleatorios+7
 916  8DF3 7B           	ld a,e
 917  8DF4 95           	sub l
 918  8DF5 C0           	ret nz
 919  8DF6
 920  8DF6 21 F6 88     1 ld hl,Numeros_aleatorios
 921  8DF9 22 41 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 922  8DFC C9           	ret
 923  8DFD
 924  8DFD              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 925  8DFD              ;
 926  8DFD              ;	24/07/24
 927  8DFD
 928  8DFD              Reinicia_Amadeus
 929  8DFD
 930  8DFD              ;	Reinicia posición y estado.
 931  8DFD
 932  8DFD 21 CF 50     	ld hl,$50cf
 933  8E00 22 79 89     	ld (p.imp.amadeus),hl
 934  8E03 21 F0 E0     	ld hl,$e0f0
 935  8E06 22 7B 89     	ld (Pamm_Amadeus),hl
 936  8E09 21 3D 00     	ld hl,$003d
 937  8E0C 22 7D 89     	ld (Comm_Amadeus),hl
 938  8E0F
 939  8E0F              ;	limpiamos el álbum de borrado.
 940  8E0F
 941  8E0F 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
 942  8E12
 943  8E12 AF           	xor a
 944  8E13 77           	ld (hl),a
 945  8E14
 946  8E14 E5           	push hl
 947  8E15 D1           	pop de
 948  8E16 13           	inc de
 949  8E17
 950  8E17 01 23 00     	ld bc,35
 951  8E1A ED B0        	ldir
 952  8E1C
 953  8E1C CD 2C 90     	call Genera_datos_de_impresion_Amadeus
 954  8E1F
 955  8E1F              ;	Reinicia temporizaciones.
 956  8E1F
 957  8E1F CD 02 91     	call Inicia_Shield
 958  8E22
 959  8E22 3E 5A        	ld a,90
 960  8E24 32 54 8C     	ld (Shield),a
 961  8E27
 962  8E27 3E 64        	ld a,100
 963  8E29 32 3E 8C     	ld (Temp_new_live),a
 964  8E2C
 965  8E2C              ; 	Restauramos el FLAG: Amadeus vivo.
 966  8E2C
 967  8E2C 21 2A 8C     	ld hl,Ctrl_3
 968  8E2F CB B6        	res 6,(hl)
 969  8E31
 970  8E31              ;	Fuerza la impresión de la nave en el siguiente frame.
 971  8E31
 972  8E31 21 2A 8C      	ld hl,Ctrl_3
 973  8E34 CB EE        	set 5,(hl)
 974  8E36
 975  8E36 C9           	ret
 976  8E37
 977  8E37              ; --------------------------------------------------------------------------------------------------------------
 978  8E37              ;
 979  8E37              ;	12/05/24
 980  8E37
 981  8E37 3A C5 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 982  8E3A CB 27        	sla a
 983  8E3C 32 C5 8B     	ld (Velocidad),a
 984  8E3F E6 10        	and $10
 985  8E41 C8           	ret z
 986  8E42
 987  8E42              ; Restaura (Velocidad) a razón del nº de vueltas.
 988  8E42
 989  8E42 3A BD 8B     	ld a,(Contador_de_vueltas)
 990  8E45 CB 2F        	sra a
 991  8E47 CB 2F        	sra a
 992  8E49 32 C5 8B     	ld (Velocidad),a
 993  8E4C
 994  8E4C 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 995  8E4F 23           	inc hl
 996  8E50 23           	inc hl
 997  8E51 23           	inc hl
 998  8E52 23           	inc hl
 999  8E53 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1000  8E56
1001  8E56 C9           	ret
1002  8E57
1003  8E57              ; --------------------------------------------------------------------------------------------------------------
1004  8E57              ;
1005  8E57              ;	25/08/24
1006  8E57
1007  8E57              Change
1008  8E57
1009  8E57 3A 21 8C     	ld a,(Switch)
1010  8E5A EE 01        	xor 1
1011  8E5C 32 21 8C     	ld (Switch),a
1012  8E5F 2A 0B 8C     	ld hl,(Album_de_pintado)
1013  8E62 ED 5B 0D 8C  	ld de,(Album_de_borrado)
1014  8E66 EB           	ex de,hl
1015  8E67 22 0B 8C     	ld (Album_de_pintado),hl
1016  8E6A 22 24 8C     	ld (Scanlines_album_SP),hl
1017  8E6D ED 53 0D 8C  	ld (Album_de_borrado),de
1018  8E71 C9           	ret
1019  8E72
1020  8E72              Change_Amadeus
1021  8E72
1022  8E72 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1023  8E75 ED 5B 11 8C  	ld de,(Album_de_borrado_Amadeus)
1024  8E79 EB           	ex de,hl
1025  8E7A 22 0F 8C     	ld (Album_de_pintado_Amadeus),hl
1026  8E7D ED 53 11 8C  	ld (Album_de_borrado_Amadeus),de
1027  8E81 C9           	ret
1028  8E82
1029  8E82              Change_Disparos
1030  8E82
1031  8E82 2A 13 8C     	ld hl,(Album_de_pintado_disparos)
1032  8E85 ED 5B 15 8C  	ld de,(Album_de_borrado_disparos)
1033  8E89 EB           	ex de,hl
1034  8E8A 22 13 8C     	ld (Album_de_pintado_disparos),hl
1035  8E8D ED 53 15 8C  	ld (Album_de_borrado_disparos),de
1036  8E91 22 17 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1037  8E94
1038  8E94 C9           	ret
1039  8E95
1040  8E95              ; ------------------------------------
1041  8E95              ;
1042  8E95              ; 1/05/24
1043  8E95
1044  8E95              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1045  8E95              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1046  8E95
1047  8E95              ;	DESTRUYE: HL,DE,A
1048  8E95              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1049  8E95
1050  8E95              ;	Variables implicadas: (RND_SP).
1051  8E95
1052  8E95              Extrae_numero_aleatorio_y_avanza
1053  8E95
1054  8E95 21 00 89     	ld hl,Tabla_de_pintado
1055  8E98 EB           	ex de,hl
1056  8E99 2A 3F 8C     	ld hl,(RND_SP)
1057  8E9C EB           	ex de,hl
1058  8E9D A7           	and a
1059  8E9E ED 52        	sbc hl,de
1060  8EA0
1061  8EA0 2A 3F 8C     	ld hl,(RND_SP)
1062  8EA3 20 06        	jr nz,1F
1063  8EA5
1064  8EA5              ; Sitúa HL al principio de la tabla de nº aleatorios.
1065  8EA5
1066  8EA5 21 F6 88     	ld hl,Numeros_aleatorios
1067  8EA8 22 3F 8C     	ld (RND_SP),HL
1068  8EAB
1069  8EAB              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1070  8EAB
1071  8EAB 7E           1 ld a,(hl)
1072  8EAC 23           	inc hl
1073  8EAD 22 3F 8C     	ld (RND_SP),hl
1074  8EB0 C9           	ret
1075  8EB1
1076  8EB1              ; ------------------------------------
1077  8EB1              ;
1078  8EB1              ; 1/05/24
1079  8EB1
1080  8EB1              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1081  8EB1              ; (1 a 4 segundos).
1082  8EB1              ; Actualizamos (Clock_next_entity) con A.
1083  8EB1
1084  8EB1              ;	DESTRUYE: A y B.
1085  8EB1              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1086  8EB1              ;			 Actualiza (Clock_next_entity) con A.
1087  8EB1
1088  8EB1              ;	Variables implicadas: (Clock_next_entity).
1089  8EB1
1090  8EB1              ; Notas:
1091  8EB1
1092  8EB1              ; 	$32 1 seg.
1093  8EB1              ; 	$64 2 seg.
1094  8EB1              ; 	$96 3 seg.
1095  8EB1              ; 	$c8 4 seg.
1096  8EB1              ; 	$fa 5 seg.
1097  8EB1
1098  8EB1              ; $ffff 1310,7 seg, 22 minutos.
1099  8EB1
1100  8EB1              ;	$0100  5 seg. aproximadamente.
1101  8EB1              ;	$0200 10 seg. aproximadamente.
1102  8EB1              ;	$0300 15 seg. aproximadamente.
1103  8EB1              ;	$0400 20 seg. aproximadamente.
1104  8EB1              ;	$0500 25 seg. aproximadamente.
1105  8EB1              ;	$0600 30 seg. aproximadamente.
1106  8EB1
1107  8EB1              Define_Clock_next_entity
1108  8EB1
1109  8EB1 FE 34        	cp $34
1110  8EB3 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1111  8EB5
1112  8EB5              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1113  8EB5
1114  8EB5 4F           3 ld c,a
1115  8EB6 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1116  8EB8 2A 78 5C     	ld hl,(FRAMES)
1117  8EBB A7           	and a
1118  8EBC ED 4A        	adc hl,bc
1119  8EBE 22 44 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1120  8EC1 C9           	ret
1121  8EC2
1122  8EC2 3E 34        1 ld a,$34
1123  8EC4 18 EF        	jr 3B
1124  8EC6
1125  8EC6              ; ------------------------------------
1126  8EC6              ;
1127  8EC6              ; 18/03/24
1128  8EC6
1129  8EC6              Borra_diferencia
1130  8EC6
1131  8EC6 ED 4B 24 8C  	ld bc,(Scanlines_album_SP)
1132  8ECA
1133  8ECA 3A 21 8C     	ld a,(Switch)
1134  8ECD A7           	and a
1135  8ECE 28 08        	jr z,2F
1136  8ED0
1137  8ED0 2A 1F 8C     	ld hl,(Techo_Scanlines_album_2)
1138  8ED3 11 1F 8C     	ld de,Techo_Scanlines_album_2
1139  8ED6 18 06        	jr 3F
1140  8ED8
1141  8ED8 2A 1D 8C     2 ld hl,(Techo_Scanlines_album)
1142  8EDB 11 1D 8C     	ld de,Techo_Scanlines_album
1143  8EDE
1144  8EDE              ; Diferencia.
1145  8EDE
1146  8EDE ED 42        3 sbc hl,bc
1147  8EE0
1148  8EE0 C8           	ret z
1149  8EE1 D8           	ret c
1150  8EE2
1151  8EE2              ; Nuevo techo, (más bajo que el anterior).
1152  8EE2              ; Fijamos nuevo techo y borramos bytes sobrantes.
1153  8EE2
1154  8EE2 EB           	ex de,hl
1155  8EE3
1156  8EE3 71           	ld (hl),c
1157  8EE4 2C           	inc l
1158  8EE5 70           	ld (hl),b
1159  8EE6
1160  8EE6 AF           	xor a
1161  8EE7 43           	ld b,e
1162  8EE8
1163  8EE8 2A 24 8C     	ld hl,(Scanlines_album_SP)
1164  8EEB
1165  8EEB 77           1 ld (hl),a
1166  8EEC 23           	inc hl
1167  8EED 10 FC        	djnz 1B
1168  8EEF
1169  8EEF              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1170  8EEF
1171  8EEF 21 2A 8C     	ld hl,Ctrl_3
1172  8EF2 CB DE        	set 3,(hl)
1173  8EF4
1174  8EF4 C9           	ret
1175  8EF5
1176  8EF5              ; --------------------------------------------------------------------------------------------------------------
1177  8EF5              ;
1178  8EF5              ;	26/3/24
1179  8EF5
1180  8EF5              Recauda_informacion_de_entidad_en_curso
1181  8EF5
1182  8EF5              ; Almacena la Coordenada Y de la entidad en curso.
1183  8EF5
1184  8EF5              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1185  8EF5
1186  8EF5 3A BC 8B     	ld a,(Coordenada_y)
1187  8EF8 2A 26 8C     	ld hl,(India_SP)
1188  8EFB 77           	ld (hl),a
1189  8EFC 2C           	inc l
1190  8EFD
1191  8EFD              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1192  8EFD
1193  8EFD ED 5B 24 8C  	ld de,(Scanlines_album_SP)
1194  8F01
1195  8F01 73           	ld (hl),e
1196  8F02 2C           	inc l
1197  8F03 72           	ld (hl),d
1198  8F04 2C           	inc l
1199  8F05
1200  8F05 22 26 8C     	ld (India_SP),hl
1201  8F08
1202  8F08 C9           	ret
1203  8F09
1204  8F09              ; --------------------------------------------------------------------------------------------------------------
1205  8F09              ;
1206  8F09              ;	27/03/24
1207  8F09              ;
1208  8F09
1209  8F09              Inicializa_India_y_limpia_Tabla_de_impresion
1210  8F09
1211  8F09 2A 26 8C     	ld hl,(India_SP)
1212  8F0C 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1213  8F0F
1214  8F0F 79           	ld a,c
1215  8F10 95           	sub l
1216  8F11 28 06        	jr z,2F
1217  8F13 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1218  8F14              ;														; _ y pasamos a inicializar (India_SP).
1219  8F14 AF           	xor a
1220  8F15
1221  8F15 77           1 ld (hl),a
1222  8F16 2C           	inc l
1223  8F17 10 FC        	djnz 1B												; Limpia Tabla.
1224  8F19
1225  8F19 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1226  8F1C 22 26 8C     	ld (India_SP),hl
1227  8F1F
1228  8F1F C9           	ret
1229  8F20
1230  8F20              ; --------------------------------------------------------------------------------------------------------------
1231  8F20              ;
1232  8F20              ;	31/3/24
1233  8F20
1234  8F20              Ordena_tabla_de_impresion
1235  8F20
1236  8F20              ; 5794 T/states.
1237  8F20              ; 6278 T/states.
1238  8F20              ; 5310 T/states.
1239  8F20
1240  8F20              ; Inicializamos punteros (India_SP) e (India_2_SP).
1241  8F20              ; Inicializamos contador de comparaciones, [C].
1242  8F20              ; Cargamos los registros A y B para efectuar comparación.
1243  8F20
1244  8F20 FD 2E 00     	ld iyl,0
1245  8F23
1246  8F23 3A 02 8C     	ld a,(Entidades_en_curso)
1247  8F26 FE 04        	cp 4 	;	4
1248  8F28 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1249  8F29
1250  8F29 3D           	dec a
1251  8F2A 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1252  8F2B 51           	ld d,c 										; Copia de respaldo.
1253  8F2C
1254  8F2C 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1255  8F2D
1256  8F2D 21 03 89     	ld hl,Tabla_de_pintado+3
1257  8F30 46           	ld b,(hl)
1258  8F31 22 28 8C     	ld (India_2_SP),hl
1259  8F34
1260  8F34 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1261  8F35 DC 5D 8F     	call c, Avanza_India_2_SP
1262  8F38 CC 5D 8F     	call z, Avanza_India_2_SP
1263  8F3B
1264  8F3B FD 2D        	dec iyl
1265  8F3D 28 18        	jr z,2F
1266  8F3F
1267  8F3F
1268  8F3F              ; --------------------------------------------------------------------------------------------------------------
1269  8F3F              ;
1270  8F3F              ;	7/4/24
1271  8F3F
1272  8F3F              Trueque
1273  8F3F
1274  8F3F              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1275  8F3F              ;  			A contiene en nº de fila de (India_SP).
1276  8F3F              ;			HL contiene (India_2_SP).
1277  8F3F
1278  8F3F D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1279  8F40 E5           	push hl										; Preservo (India_2_SP).
1280  8F41
1281  8F41 ED 5B 26 8C  	ld de,(India_SP)
1282  8F45 EB           	ex de,hl
1283  8F46 70           	ld (hl),b
1284  8F47 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1285  8F48
1286  8F48 CD 89 8F     	call Intercambia_1_byte
1287  8F4B CD 89 8F     	call Intercambia_1_byte
1288  8F4E
1289  8F4E
1290  8F4E              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1291  8F4E              ; Recuperamos (India_2_SP) en HL.
1292  8F4E
1293  8F4E 2A 26 8C     	ld hl,(India_SP)
1294  8F51 7E           	ld a,(hl)
1295  8F52
1296  8F52 E1           	pop hl
1297  8F53 D1           	pop de
1298  8F54
1299  8F54              ; --------------------------------------------------------------------------------------------------------------
1300  8F54
1301  8F54 CD 5D 8F     	call Avanza_India_2_SP
1302  8F57
1303  8F57 14           2 inc d
1304  8F58 15           	dec d
1305  8F59 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1306  8F5A 18 D8        	jr 1B
1307  8F5C
1308  8F5C C9           	ret
1309  8F5D
1310  8F5D              ; ----- ----- ----- ----- -----
1311  8F5D
1312  8F5D              Avanza_India_2_SP
1313  8F5D
1314  8F5D 0D           	dec c
1315  8F5E 28 0A        	jr z,Avanza_punteros_indios
1316  8F60
1317  8F60 FD 2C        	inc iyl
1318  8F62
1319  8F62 2C           	inc l
1320  8F63 2C           	inc l
1321  8F64 2C           	inc l
1322  8F65
1323  8F65 46           	ld b,(hl)
1324  8F66 22 28 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1325  8F69
1326  8F69 C9           	ret
1327  8F6A
1328  8F6A              ; ----- ----- ----- ----- -----
1329  8F6A
1330  8F6A              Avanza_punteros_indios
1331  8F6A
1332  8F6A 15           	dec d
1333  8F6B 28 15        	jr z,Prepara_salida
1334  8F6D
1335  8F6D 4A           	ld c,d
1336  8F6E
1337  8F6E 2A 26 8C     	ld hl,(India_SP)
1338  8F71 2C           	inc l
1339  8F72 2C           	inc l
1340  8F73 2C           	inc l
1341  8F74 7E           	ld a,(hl)
1342  8F75 22 26 8C     	ld (India_SP),hl
1343  8F78
1344  8F78 2C           	inc l
1345  8F79 2C           	inc l
1346  8F7A 2C           	inc l
1347  8F7B 46           	ld b,(hl)
1348  8F7C 22 28 8C     	ld (India_2_SP),hl
1349  8F7F
1350  8F7F FD 2C        	inc iyl
1351  8F81
1352  8F81 C9           	ret
1353  8F82
1354  8F82              Prepara_salida
1355  8F82
1356  8F82 21 00 89     	ld hl,Tabla_de_pintado
1357  8F85 22 26 8C     	ld (India_SP),hl
1358  8F88 C9           	ret
1359  8F89
1360  8F89
1361  8F89 2C           Intercambia_1_byte inc l
1362  8F8A 1C           	inc e
1363  8F8B 46           	ld b,(hl)
1364  8F8C 1A           	ld a,(de)
1365  8F8D EB           	ex de,hl
1366  8F8E 70           	ld (hl),b
1367  8F8F 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1368  8F90 C9           	ret
1369  8F91
1370  8F91              ; -----------------------------------------------------------------------------------
1371  8F91              ;
1372  8F91              ;	20/01/24
1373  8F91              ;
1374  8F91              ;
1375  8F91
1376  8F91              Construye_movimientos_masticados_entidad
1377  8F91
1378  8F91 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1379  8F94 E5           	push hl
1380  8F95 CD D8 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1381  8F98              ;															; _ el (Contador_de_mov_masticados).
1382  8F98 CD 9A 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1383  8F9B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1384  8F9B CD CB 99     	call Recompone_posicion_inicio
1385  8F9E
1386  8F9E CD FB 96     1 call Draw
1387  8FA1 CD BD 8F     	call Guarda_movimiento_masticado
1388  8FA4
1389  8FA4 CD 78 9D     	call Movimiento
1390  8FA7
1391  8FA7 3A 2A 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1392  8FAA CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1393  8FAC 28 F0        	jr z,1B
1394  8FAE
1395  8FAE              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1396  8FAE              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1397  8FAE
1398  8FAE E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1399  8FAF 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1400  8FB2
1401  8FB2              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1402  8FB2
1403  8FB2 CD DC 9E     	call Situa_en_contador_general_de_mov_masticados
1404  8FB5
1405  8FB5              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1406  8FB5              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1407  8FB5
1408  8FB5 ED 4B C3 8B  	ld bc,(Contador_de_mov_masticados)
1409  8FB9
1410  8FB9 71           	ld (hl),c
1411  8FBA 23           	inc hl
1412  8FBB 70           	ld (hl),b
1413  8FBC
1414  8FBC C9           	ret
1415  8FBD
1416  8FBD              ; -----------------------------------------------------------------------------------
1417  8FBD              ;
1418  8FBD              ;	28/12/23
1419  8FBD              ;
1420  8FBD              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1421  8FBD              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1422  8FBD
1423  8FBD              Guarda_movimiento_masticado
1424  8FBD
1425  8FBD ED 73 07 8C  	ld (Stack),sp
1426  8FC1 ED 7B C1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1427  8FC5
1428  8FC5 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1429  8FC7 FD E5            push iy 												; Pushea Puntero_objeto.
1430  8FC9
1431  8FC9 ED 7B 07 8C      ld sp,(Stack)
1432  8FCD
1433  8FCD 2A C3 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1434  8FD0 23           	inc hl
1435  8FD1 22 C3 8B     	ld (Contador_de_mov_masticados),hl
1436  8FD4
1437  8FD4 CD D8 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1438  8FD7              ;															; _ el (Contador_de_mov_masticados).
1439  8FD7 C9               ret
1440  8FD8
1441  8FD8              ; --------------------------------------------------------------------------------------------------------------
1442  8FD8              ;
1443  8FD8              ;	12/1/24
1444  8FD8              ;
1445  8FD8              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1446  8FD8
1447  8FD8              Actualiza_Puntero_de_almacen_de_mov_masticados
1448  8FD8
1449  8FD8 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1450  8FDB 01 04 00     	ld bc,4
1451  8FDE A7           	and a
1452  8FDF ED 4A        	adc hl,bc
1453  8FE1 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1454  8FE4 C9           	ret
1455  8FE5
1456  8FE5              ; --------------------------------------------------------------------------------------------------------------
1457  8FE5              ;
1458  8FE5              ;	24/03/24
1459  8FE5              ;
1460  8FE5              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1461  8FE5              ;
1462  8FE5              ;	IX contiene el puntero de impresión.
1463  8FE5              ;	DE contiene (Puntero_objeto).
1464  8FE5
1465  8FE5
1466  8FE5              Cargamos_registros_con_mov_masticado
1467  8FE5
1468  8FE5 ED 73 07 8C  	ld (Stack),sp
1469  8FE9 ED 7B C1 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1470  8FED
1471  8FED D1           	pop de 															; DE contiene Puntero_objeto
1472  8FEE DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1473  8FF0
1474  8FF0 ED 73 C1 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1475  8FF4 ED 7B 07 8C  	ld sp,(Stack)
1476  8FF8
1477  8FF8 7B           	ld a,e
1478  8FF9 82           	add d															; Comprueba si ya no hay datos en el almacén.
1479  8FFA
1480  8FFA CC 8A 93     	call z,Reinicia_entidad_maliciosa
1481  8FFD
1482  8FFD C9           	ret
1483  8FFE
1484  8FFE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1485  8FFE              ;
1486  8FFE              ;	22/7/24
1487  8FFE
1488  8FFE              Cargamos_registros_con_explosion
1489  8FFE
1490  8FFE
1491  8FFE 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1492  9001 CD 94 90     	call Extrae_address
1493  9004
1494  9004 5D           	ld e,l
1495  9005 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1496  9006
1497  9006 DD 2A BF 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1498  900A
1499  900A C9           	ret
1500  900B
1501  900B
1502  900B              Cargamos_registros_con_explosion_Amadeus
1503  900B
1504  900B 2A 7B 89     	ld hl,(Pamm_Amadeus)
1505  900E CD 94 90     	call Extrae_address
1506  9011
1507  9011 5D           	ld e,l
1508  9012 54           	ld d,h
1509  9013
1510  9013 DD 2A 79 89  	ld ix,(p.imp.amadeus)
1511  9017
1512  9017 C9           	ret
1513  9018
1514  9018              ; --------------------------------------------------------------------------------------------------------------
1515  9018              ;
1516  9018              ;	17/06/24
1517  9018              ;
1518  9018              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1519  9018              ;
1520  9018              ;	IX contiene el puntero de impresión.
1521  9018              ;	DE contiene (Puntero_objeto).
1522  9018
1523  9018
1524  9018              Cargamos_registros_con_mov_masticado_Amadeus
1525  9018
1526  9018 ED 73 07 8C  	ld (Stack),sp
1527  901C ED 7B 7B 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1528  9020 D1           	pop de 															; DE contiene Puntero_objeto
1529  9021 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1530  9023 DD 22 79 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1531  9027 ED 7B 07 8C  	ld sp,(Stack)
1532  902B C9           	ret
1533  902C
1534  902C              ; ---------------------------------------------------------------------------------------------------------------------
1535  902C              ;
1536  902C              ;	18/6/24
1537  902C              ;
1538  902C              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1539  902C
1540  902C              Genera_datos_de_impresion_Amadeus
1541  902C
1542  902C 3A 78 89     	ld a,(Impacto_Amadeus)
1543  902F A7           	and a
1544  9030 20 03        	jr nz,1F
1545  9032
1546  9032              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1547  9032              ; _apuntando a la correspondiente explosión.
1548  9032
1549  9032 CD 18 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1550  9035
1551  9035 DD 7D        1 ld a,ixl
1552  9037 E6 1F        	and $1f
1553  9039 32 75 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1554  903C
1555  903C 2A 24 8C     	ld hl,(Scanlines_album_SP)
1556  903F E5           	push hl
1557  9040
1558  9040 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1559  9043 22 24 8C     	ld (Scanlines_album_SP),hl
1560  9046
1561  9046 CD DF 94     	call Genera_datos_de_impresion
1562  9049
1563  9049 E1           	pop hl
1564  904A 22 24 8C     	ld (Scanlines_album_SP),hl
1565  904D
1566  904D C9           	ret
1567  904E
1568  904E              ; ---------------------------------------------------------------------------------------------------------------------
1569  904E              ;
1570  904E              ;	13/03/24
1571  904E              ;
1572  904E              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1573  904E
1574  904E              Inicia_albumes_de_lineas
1575  904E
1576  904E 21 00 80     	ld hl,Scanlines_album
1577  9051 22 0B 8C     	ld (Album_de_pintado),hl
1578  9054 22 24 8C     	ld (Scanlines_album_SP),hl
1579  9057
1580  9057 21 1A 81     	ld hl,Scanlines_album_2
1581  905A 22 0D 8C     	ld (Album_de_borrado),hl
1582  905D
1583  905D C9           	ret
1584  905E
1585  905E              Inicia_albumes_de_lineas_Amadeus
1586  905E
1587  905E 21 34 82     	ld hl,Amadeus_scanlines_album
1588  9061 22 0F 8C     	ld (Album_de_pintado_Amadeus),hl
1589  9064 21 58 82     	ld hl,Amadeus_scanlines_album_2
1590  9067 22 11 8C     	ld (Album_de_borrado_Amadeus),hl
1591  906A
1592  906A C9           	ret
1593  906B
1594  906B              Inicia_albumes_de_disparos
1595  906B
1596  906B 21 7C 82     	ld hl,Disparos_scanlines_album
1597  906E 22 13 8C     	ld (Album_de_pintado_disparos),hl
1598  9071 21 C1 82     	ld hl,Disparos_scanlines_album_2
1599  9074 22 15 8C     	ld (Album_de_borrado_disparos),hl
1600  9077
1601  9077 21 7C 82     	ld hl,Disparos_scanlines_album
1602  907A 22 17 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1603  907D
1604  907D C9           	ret
1605  907E
1606  907E              ; ---------------------------------------------------------------------------------------------------------------------
1607  907E              ;
1608  907E              ; 8/1/23
1609  907E              ;
1610  907E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1611  907E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1612  907E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1613  907E
1614  907E              ; Destruye HL y DE !!!!!
1615  907E
1616  907E              Inicia_punteros_de_cajas
1617  907E
1618  907E 21 62 89     	ld hl,Indice_de_cajas_de_entidades
1619  9081 CD 94 90         call Extrae_address
1620  9084 22 FA 8B         ld (Puntero_store_caja),hl
1621  9087 21 64 89     	ld hl,Indice_de_cajas_de_entidades+2
1622  908A 22 FE 8B     	ld (Indice_restore_caja),hl
1623  908D CD 94 90     	call Extrae_address
1624  9090 22 FC 8B     	ld (Puntero_restore_caja),hl
1625  9093 C9               ret
1626  9094
1627  9094              ; *************************************************************************************************************************************************************
1628  9094
1629  9094              ;
1630  9094              ; 20/10/22
1631  9094              ;
1632  9094              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1633  9094              ;
1634  9094              ; Destruye el puntero y DE !!!!!
1635  9094
1636  9094 5E           Extrae_address ld e,(hl)
1637  9095 23           	inc hl
1638  9096 56           	ld d,(hl)
1639  9097 2B           	dec hl
1640  9098 EB           	ex de,hl
1641  9099 C9           	ret
1642  909A
1643  909A              ; *************************************************************************************************************************************************************
1644  909A              ;
1645  909A              ;	20/1/24
1646  909A              ;
1647  909A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1648  909A              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1649  909A              ;
1650  909A              ;   Destruye HL y BC !!!!!,
1651  909A              ;
1652  909A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1653  909A              ;					"0" ..... Izquierda.
1654  909A
1655  909A              Inicia_Puntero_objeto
1656  909A
1657  909A 3A D9 8B     	ld a,(Cuad_objeto)
1658  909D E6 01        	and 1
1659  909F F5           	push af
1660  90A0 CC BC 90     	call z,Inicia_puntero_objeto_izq
1661  90A3 F1           	pop af
1662  90A4 C8           	ret z
1663  90A5 CD A9 90     	call Inicia_puntero_objeto_der
1664  90A8 C9           	ret
1665  90A9
1666  90A9              ; Arrancamos desde la parte izquierda de la pantalla.
1667  90A9              ; Iniciamos (Indice_Sprite_der).
1668  90A9
1669  90A9 2A CF 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1670  90AC 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
1671  90AF CD 94 90     	call Extrae_address
1672  90B2 22 CC 8B     	ld (Puntero_objeto),hl
1673  90B5
1674  90B5 2A D1 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1675  90B8 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
1676  90BB C9           	ret
1677  90BC
1678  90BC              ; Arrancamos desde la parte derecha de la pantalla.
1679  90BC              ; Iniciamos (Indice_Sprite_izq).
1680  90BC
1681  90BC 2A D1 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1682  90BF 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
1683  90C2 CD 94 90     	call Extrae_address
1684  90C5 22 CC 8B     	ld (Puntero_objeto),hl
1685  90C8
1686  90C8 2A CF 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1687  90CB 22 D3 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1688  90CE C9           	ret
1689  90CF
1690  90CF              ; **************************************************************************************************
1691  90CF              ;
1692  90CF              ;	06/07/24
1693  90CF              ;
1694  90CF              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1695  90CF
1696  90CF              Restore_entidad
1697  90CF
1698  90CF 2A FA 8B     	ld hl,(Puntero_store_caja)
1699  90D2 7E           	ld a,(hl)
1700  90D3 A7           	and a
1701  90D4 CC E2 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1702  90D7 28 F6        	jr z,Restore_entidad
1703  90D9
1704  90D9 11 BA 8B     	ld de,Bandeja_DRAW
1705  90DC 01 0C 00     	ld bc,12
1706  90DF ED B0        	ldir
1707  90E1 C9           	ret
1708  90E2
1709  90E2              ; **************************************************************************************************
1710  90E2              ;
1711  90E2              ;	08/05/23
1712  90E2              ;
1713  90E2              ;	Incrementamos los dos punteros de entidades. (+1).
1714  90E2
1715  90E2              Incrementa_punteros_de_cajas
1716  90E2
1717  90E2 2A FC 8B     	ld hl,(Puntero_restore_caja)
1718  90E5 22 FA 8B     	ld (Puntero_store_caja),hl
1719  90E8 2A FE 8B     	ld hl,(Indice_restore_caja)
1720  90EB 23           	inc hl
1721  90EC 23           	inc hl
1722  90ED 22 FE 8B     	ld (Indice_restore_caja),hl
1723  90F0 CD 94 90         call Extrae_address
1724  90F3 22 FC 8B         ld (Puntero_restore_caja),hl
1725  90F6 C9               ret
1726  90F7
1727  90F7              ; -----------------------------------------------------------
1728  90F7
1729  90F7              ; Teclado.
1730  90F7
1731  90F7 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1732  90F9 DB FE        	in a,($fe)
1733  90FB E6 01        	and $01
1734  90FD 28 02        	jr z,1f
1735  90FF 18 F6        	jr Pulsa_ENTER
1736  9101 C9           1 ret
1737  9102
1738  9102              ; **************************************************************************************************
1739  9102              ;
1740  9102              ; Temporización.
1741  9102
1742  9102              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1743  9102              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1744  9102              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1745  9102              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1746  9102
1747  9102              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1748  9102              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1749  9102              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1750  9102
1751  9102              ; A partir de $4f61 no hace falta DELAY.
1752  9102
1753  9102              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1754  9102
1755  9102              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1756  9102              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1757  9102              ;	LD A,B
1758  9102              ;	AND A
1759  9102              ;	JR NZ,wait
1760  9102              ;	RET
1761  9102
1762  9102              ; ---------------------------------------------------------------------------------------------------------------
1763  9102              ;
1764  9102              ;	13/07/24
1765  9102              ;
1766  9102
1767  9102              Inicia_Shield
1768  9102
1769  9102 21 4E 8C     	ld hl,Datos_Shield
1770  9105 22 52 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1771  9108
1772  9108 7E           	ld a,(hl)
1773  9109 32 55 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1774  910C
1775  910C 3E 01        	ld a,1
1776  910E 32 56 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1777  9111
1778  9111 C9           	ret
1779  9112
1780  9112              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1781  9112              ;
1782  9112              ;	4/6/24
1783  9112              ;
1784  9112              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1785  9112              ;
1786  9112              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1787  9112              ;
1788  9112
1789  9112              Actualiza_pantalla
1790  9112
1791  9112 3E 02        	ld a,2
1792  9114 D3 FE        	out ($fe),a
1793  9116
1794  9116 3A 2A 8C     	ld a,(Ctrl_3)
1795  9119 CB 57        	bit 2,a
1796  911B 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1797  911D
1798  911D              Borrando_entidades
1799  911D
1800  911D 2A 24 8C     	ld hl,(Scanlines_album_SP)
1801  9120 CD 94 90     	call Extrae_address
1802  9123 24           	inc h
1803  9124 25           	dec h
1804  9125 28 05        	jr z,Pintando_entidades
1805  9127 CD D8 95     	call Pinta_Sprites
1806  912A 18 F1        	jr Borrando_entidades
1807  912C
1808  912C              Pintando_entidades
1809  912C
1810  912C 2A 26 8C     	ld hl,(India_SP)
1811  912F 2C           	inc l
1812  9130 CD 94 90     	call Extrae_address
1813  9133 24           	inc h
1814  9134 25           	dec h
1815  9135 28 0E        	jr z,Ejecuta_escudo
1816  9137 1C           	inc e
1817  9138 1C           	inc e
1818  9139 ED 53 26 8C  	ld (India_SP),de
1819  913D CD 94 90     	call Extrae_address
1820  9140 CD D8 95     	call Pinta_Sprites
1821  9143 18 E7        	jr Pintando_entidades
1822  9145
1823  9145              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1824  9145
1825  9145              Ejecuta_escudo
1826  9145
1827  9145 3A 54 8C     	ld a,(Shield)
1828  9148 A7           	and a
1829  9149 20 2F        	jr nz,Aplica_Shield
1830  914B
1831  914B              Borrando_Amadeus
1832  914B
1833  914B 21 2A 8C     	ld hl,Ctrl_3
1834  914E CB 6E        	bit 5,(hl)
1835  9150 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1836  9152
1837  9152 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
1838  9155 CD 94 90     	call Extrae_address
1839  9158 24           	inc h
1840  9159 25           	dec h
1841  915A 28 03        	jr z,Pintando_Amadeus
1842  915C CD D8 95     	call Pinta_Sprites
1843  915F
1844  915F              Pintando_Amadeus
1845  915F
1846  915F 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1847  9162 CD 94 90     	call Extrae_address
1848  9165 24           	inc h
1849  9166 25           	dec h
1850  9167 28 03        	jr z,1F
1851  9169 CD D8 95     	call Pinta_Sprites
1852  916C
1853  916C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1854  916C
1855  916C 21 2A 8C     1 ld hl,Ctrl_3
1856  916F CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1857  9171 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1858  9173 CB AE        	res 5,(hl)
1859  9175
1860  9175 3E 01        	ld a,1												; Borde azul.
1861  9177 D3 FE        	out ($fe),a
1862  9179
1863  9179 C9           	ret
1864  917A
1865  917A              Aplica_Shield
1866  917A
1867  917A              ;	Bit 1 "1" (Shield_3) Sólo borra.
1868  917A              ;		  "0"     ""     Borra/Pinta.
1869  917A              ;	Bit 2    ""  RET.	 No borra, no pinta.
1870  917A
1871  917A 21 56 8C     	ld hl,Shield_3
1872  917D
1873  917D CB 5E        	bit 3,(hl)
1874  917F 20 DE        	jr nz,Pintando_Amadeus
1875  9181
1876  9181 CB 56        	bit 2,(hl)
1877  9183 20 E7        	jr nz,1B
1878  9185
1879  9185 CB 4E        	bit 1,(hl)
1880  9187 C4 8E 91     	call nz,Borra_Amadeus_shield
1881  918A
1882  918A 28 BF        	jr z,Borrando_Amadeus
1883  918C 18 DE        	jr 1B
1884  918E
1885  918E              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1886  918E
1887  918E              Borra_Amadeus_shield
1888  918E
1889  918E 3A 2A 8C     	ld a,(Ctrl_3)
1890  9191 CB 6F        	bit 5,a
1891  9193 28 08        	jr z,1F
1892  9195
1893  9195 2A 11 8C     	ld hl,(Album_de_borrado_Amadeus)
1894  9198 CD 94 90     	call Extrae_address
1895  919B 18 06        	jr 2F
1896  919D
1897  919D 2A 0F 8C     1 ld hl,(Album_de_pintado_Amadeus)
1898  91A0 CD 94 90     	call Extrae_address
1899  91A3
1900  91A3 CD D8 95     2 call Pinta_Sprites
1901  91A6
1902  91A6 AF           	xor a
1903  91A7 3C           	inc a											; Asegura NZ en la salida de la rutina.
1904  91A8
1905  91A8 C9           	ret
1906  91A9
1907  91A9              Pinta_Amadeus_shield
1908  91A9
1909  91A9 2A 0F 8C     	ld hl,(Album_de_pintado_Amadeus)
1910  91AC CD 94 90     	call Extrae_address
1911  91AF CD D8 95     	call Pinta_Sprites
1912  91B2
1913  91B2 AF           	xor a
1914  91B3 3C           	inc a											; Asegura NZ en la salida de la rutina.
1915  91B4
1916  91B4 C9           	ret
1917  91B5
1918  91B5              Borra_Pinta_Amadeus_shield
1919  91B5
1920  91B5 CD 8E 91     	call Borra_Amadeus_shield
1921  91B8 CD A9 91     	call Pinta_Amadeus_shield
1922  91BB C9           	ret
1923  91BC
1924  91BC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1925  91BC              ;
1926  91BC              ;	19/6/24
1927  91BC              ;
1928  91BC
1929  91BC              Teclado
1930  91BC
1931  91BC              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1932  91BC
1933  91BC 3E F7        	ld a,$f7												; "5" para disparar.
1934  91BE DB FE        	in a,($fe)
1935  91C0 E6 10        	and $10
1936  91C2
1937  91C2 CC A6 A1     	call z,Genera_disparo_Amadeus
1938  91C5
1939  91C5 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1940  91C7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1941  91C9 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1942  91CB CC 45 9D         call z,Amadeus_a_izquierda
1943  91CE
1944  91CE 3E F7        	ld a,$f7
1945  91D0 DB FE        	in a,($fe)
1946  91D2 E6 01        	and $01
1947  91D4 C8           	ret z
1948  91D5
1949  91D5 3E F7        	ld a,$f7
1950  91D7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1951  91D9 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1952  91DB CC 5D 9D     	call z,Amadeus_a_derecha
1953  91DE
1954  91DE C9           	ret
1955  91DF
1956  91DF              ; ------------------------------------------------------------------------------------------------------------------------
1957  91DF              ;
1958  91DF              ;	06/07/24
1959  91DF              ;
1960  91DF
1961  91DF              Genera_explosion
1962  91DF
1963  91DF 21 3C 8C     	ld hl,Clock_explosion
1964  91E2 35           	dec (hl)
1965  91E3 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1966  91E5
1967  91E5              Borra_entidad_colisionada
1968  91E5
1969  91E5 CD F5 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1970  91E8 CD FE 8F     	call Cargamos_registros_con_explosion
1971  91EB CD DF 94     	call Genera_datos_de_impresion
1972  91EE
1973  91EE AF           	xor a
1974  91EF 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1975  91F0
1976  91F0 C9           	ret
1977  91F1
1978  91F1              Siguiente_frame_explosion
1979  91F1
1980  91F1 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1981  91F3
1982  91F3              ; Avanza Frame de explosión.
1983  91F3
1984  91F3 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1985  91F6 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1986  91F9
1987  91F9 79           	ld a,c
1988  91FA 95           	sub l
1989  91FB 20 0B        	jr nz,1F
1990  91FD
1991  91FD              ; Fín de la entidad !!!!!!!!!!!!!
1992  91FD
1993  91FD 21 01 8C     	ld hl,Numero_parcial_de_entidades
1994  9200 35           	dec (hl)
1995  9201 23           	inc hl
1996  9202 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1997  9203
1998  9203 CD 5F 93     	call Limpiamos_bandeja_DRAW
1999  9206 18 DD        	jr Borra_entidad_colisionada
2000  9208
2001  9208 23           1 inc hl
2002  9209 23           	inc hl
2003  920A 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2004  920D 18 D6        	jr Borra_entidad_colisionada
2005  920F
2006  920F              ; ----- ----- ----- ----- -----
2007  920F
2008  920F              Genera_explosion_Amadeus
2009  920F
2010  920F 21 3D 8C     	ld hl,Clock_explosion_Amadeus
2011  9212 35           	dec (hl)
2012  9213 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2013  9215
2014  9215              Borra_Amadeus_impactado
2015  9215
2016  9215 CD 72 8E     	call Change_Amadeus
2017  9218 CD 0B 90     	call Cargamos_registros_con_explosion_Amadeus
2018  921B CD 2C 90     	call Genera_datos_de_impresion_Amadeus
2019  921E
2020  921E 21 2A 8C     	ld hl,Ctrl_3
2021  9221 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2022  9223
2023  9223 AF           	xor a
2024  9224 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2025  9225
2026  9225 C9           	ret
2027  9226
2028  9226              Siguiente_frame_explosion_Amadeus
2029  9226
2030  9226 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2031  9228
2032  9228              ; Avanza Frame de explosión.
2033  9228
2034  9228 2A 7B 89     	ld hl,(Pamm_Amadeus)
2035  922B 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2036  922E
2037  922E 79           	ld a,c
2038  922F 95           	sub l
2039  9230 20 0B        	jr nz,1F
2040  9232
2041  9232              ; Fín de Amadeus !!!!!!!!!!!!!
2042  9232              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2043  9232
2044  9232 AF           	xor a
2045  9233 32 78 89     	ld (Impacto_Amadeus),a
2046  9236 21 2A 8C     	ld hl,Ctrl_3
2047  9239 CB F6        	set 6,(hl)
2048  923B
2049  923B 18 D8        	jr Borra_Amadeus_impactado
2050  923D
2051  923D 23           1 inc hl
2052  923E 23           	inc hl
2053  923F 22 7B 89     	ld (Pamm_Amadeus),hl
2054  9242 18 D1        	jr Borra_Amadeus_impactado
2055  9244
2056  9244              ; ---------------------------------------------------------------
2057  9244
2058  9244              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9244              ; ******************************************************************************************************************************************************************************************
   2+ 9244              ;
   3+ 9244              ;   21/04/24
   4+ 9244              ;
   5+ 9244              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9244              ;   (XOR) bit a bit.
   7+ 9244              ;
   8+ 9244              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9244
  10+ 9244              Derivando_RND
  11+ 9244
  12+ 9244 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9247
  14+ 9247 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9249 C5               push bc
  16+ 924A              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 924A 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 924D              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 924D
  20+ 924D A7           6 and a                                 ; Carry a "0".
  21+ 924E CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9250 30 02            jr nc,1F
  23+ 9252
  24+ 9252 CB C1            set 0,c
  25+ 9254
  26+ 9254 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9255 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9257 5F               ld e,a
  29+ 9258
  30+ 9258 7A               ld a,d
  31+ 9259 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 925B 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 925D
  34+ 925D CB 3F            srl a
  35+ 925F
  36+ 925F AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9260
  38+ 9260 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9261 28 04            jr z,4F
  40+ 9263
  41+ 9263 CB FF            set 7,a
  42+ 9265 18 02            jr 5F
  43+ 9267
  44+ 9267 CB BF        4 res 7,a
  45+ 9269
  46+ 9269 CB 21        5 sla c
  47+ 926B 10 E0            djnz 6B
  48+ 926D
  49+ 926D 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 926E
  51+ 926E 77               ld (hl),a
  52+ 926F 23               inc hl
  53+ 9270 C1               pop bc
  54+ 9271 10 D4            djnz 3B
  55+ 9273
  56+ 9273 C9               ret
  57+ 9274
  58+ 9274
  59+ 9274
# file closed: RND_Derivando.asm
2059  9274              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9274              ;---------------------------------------------------------------------------------------------------------------
   2+ 9274              ;
   3+ 9274              ;   8/3/24
   4+ 9274              ;
   5+ 9274              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9274              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9274              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9274              ;	_ de la 1ª entidad del Nivel.
   9+ 9274              ;
  10+ 9274              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9274
  12+ 9274              ;	MODIFICA: HL,DE y A.
  13+ 9274              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9274
  15+ 9274              Inicializa_Nivel
  16+ 9274
  17+ 9274 2A 4A 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9277 CD 94 90     	call Extrae_address
  19+ 927A 7E           	ld a,(hl)
  20+ 927B 32 00 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 927E 23           	inc hl
  22+ 927F CD 8C 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9282 22 4C 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9285 CD 95 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9288
  26+ 9288 CD A6 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 928B C9           	ret
  28+ 928C
  29+ 928C              ; ----------------------
  30+ 928C
  31+ 928C 11 DF 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 928F 01 04 00     	ld bc,4
  33+ 9292 ED B0        	ldir
  34+ 9294 C9           	ret
  35+ 9295
  36+ 9295 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9296 CD 30 94         call Calcula_salto_en_BC
  38+ 9299 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 929C A7               and a
  40+ 929D ED 4A            adc hl,bc
  41+ 929F CD 94 90         call Extrae_address
  42+ 92A2 22 EB 8B         ld (Puntero_indice_mov),hl
  43+ 92A5 C9               ret
  44+ 92A6
  45+ 92A6 3A BA 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92A9 CD 30 94     	call Calcula_salto_en_BC
  47+ 92AC 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92AF A7               and a
  49+ 92B0 ED 4A            adc hl,bc
  50+ 92B2 CD 94 90         call Extrae_address
  51+ 92B5 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92B8 C9           	ret
  53+ 92B9
  54+ 92B9              ;---------------------------------------------------------------------------------------------------------------
  55+ 92B9              ;
  56+ 92B9              ;   5/1/24
  57+ 92B9              ;
  58+ 92B9              ;	Destruye A,BC,HL,DE
  59+ 92B9
  60+ 92B9              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92B9              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92B9
  63+ 92B9              Inicia_Entidades
  64+ 92B9
  65+ 92B9              ; Preparamos los punteros de las cajas de entidades:
  66+ 92B9
  67+ 92B9 CD 7E 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92BC              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92BC CD 78 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92BF
  71+ 92BF 2A 4C 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92C2
  73+ 92C2 22 4C 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92C5
  75+ 92C5 CD DE 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92C8
  77+ 92C8 2A 4C 8C     	ld hl,(Datos_de_nivel)
  78+ 92CB
  79+ 92CB              ; En este punto:
  80+ 92CB              ;
  81+ 92CB              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92CB              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92CB
  84+ 92CB C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92CC
  86+ 92CC 7E           	ld a,(hl)
  87+ 92CD CD 4A 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92D0
  89+ 92D0 CD 42 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92D3
  91+ 92D3              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92D3
  93+ 92D3 CD 00 94     	call Busca_mov_masticados_segun_tipo
  94+ 92D6
  95+ 92D6 A7           	and a
  96+ 92D7 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92D9
  98+ 92D9              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92D9
 100+ 92D9              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92D9              ;	_ de este tipo de entidad.
 102+ 92D9
 103+ 92D9 CD DC 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92DC CD E9 9E     	call Transfiere_datos_de_contadores
 105+ 92DF
 106+ 92DF 18 06        	jr 4F
 107+ 92E1
 108+ 92E1 CD 91 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92E4
 110+ 92E4              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92E4              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92E4              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92E4              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92E4              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92E4
 116+ 92E4 CD BE 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92E7              ;																; _ Mov_masticados ya generados.
 118+ 92E7
 119+ 92E7 CD E5 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92EA
 121+ 92EA DD E5        	push ix
 122+ 92EC E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92ED
 124+ 92ED D5           	push de
 125+ 92EE CD B3 94     	call Genera_coordenadas
 126+ 92F1
 127+ 92F1 ED 5B 24 8C  	ld de,(Scanlines_album_SP)
 128+ 92F5 CD F5 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92F8 D1           	pop de
 130+ 92F9
 131+ 92F9 CD DF 94     	call Genera_datos_de_impresion
 132+ 92FC              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92FC              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92FC              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92FC              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92FC
 137+ 92FC CD 82 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92FF
 139+ 92FF              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92FF
 141+ 92FF ED 5B FA 8B  	ld de,(Puntero_store_caja)
 142+ 9303 CD 6F 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9306
 144+ 9306 CD 5F 93     	call Limpiamos_bandeja_DRAW
 145+ 9309 CD E2 90     	call Incrementa_punteros_de_cajas
 146+ 930C
 147+ 930C              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 930C              ; _ entidad del Nivel.
 149+ 930C
 150+ 930C 3A 2B 8C     	ld a,(Ctrl_4)
 151+ 930F E6 F0        	and $f0
 152+ 9311 32 2B 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9314
 154+ 9314              ; Siguiente entidad del Nivel.
 155+ 9314
 156+ 9314 2A 4C 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9317 23           	inc hl 														; _ entidad del Nivel.
 158+ 9318
 159+ 9318 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9319
 161+ 9319 10 A7        	djnz 2B
 162+ 931B
 163+ 931B C9           	ret
 164+ 931C
 165+ 931C              ; -------------------------------------------------------------------------------------------------------------------
 166+ 931C              ;
 167+ 931C              ;	27/5/24
 168+ 931C              ;
 169+ 931C              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 931C              ;
 171+ 931C
 172+ 931C              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 931C              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 931C
 175+ 931C 21 F2 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 931F CD 42 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9322
 178+ 9322
 179+ 9322              Construye_movimientos_masticados_Amadeus
 180+ 9322
 181+ 9322 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9325 CD D8 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9328              ;															; _ el (Contador_de_mov_masticados).
 184+ 9328 CD 9A 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 932B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 932B
 187+ 932B              ; Generamos movimientos masticados de Amadeus.
 188+ 932B
 189+ 932B 06 79        	ld b,121												; $0079, 121d.
 190+ 932D
 191+ 932D C5           1 push bc
 192+ 932E CD FB 96     	call Draw
 193+ 9331 CD BD 8F     	call Guarda_movimiento_masticado
 194+ 9334
 195+ 9334 CD 6F 9A     	call Mov_right
 196+ 9337 CD 6F 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 933A
 198+ 933A C1           	pop bc
 199+ 933B 10 F0        	djnz 1B
 200+ 933D
 201+ 933D              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 933D
 203+ 933D              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 933D              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 933D
 206+ 933D 2A C1 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9340 01 08 00     	ld bc,8
 208+ 9343 A7           	and a
 209+ 9344 ED 42        	sbc hl,bc
 210+ 9346 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9349
 212+ 9349 C9           	ret
 213+ 934A
 214+ 934A              ; ---------------------------------------------------------------------
 215+ 934A              ;
 216+ 934A              ;	10/02/24
 217+ 934A              ;
 218+ 934A              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 934A              ;
 220+ 934A              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 934A
 222+ 934A              Definicion_segun_tipo
 223+ 934A
 224+ 934A CD 30 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 934D 21 D4 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9350 CD 38 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9353 C9           	ret
 228+ 9354
 229+ 9354              ; ---------------------------------------------------------------------
 230+ 9354              ;
 231+ 9354              ;	6/7/24
 232+ 9354
 233+ 9354
 234+ 9354              Store_Restore_cajas
 235+ 9354
 236+ 9354 ED 5B FA 8B  	ld de,(Puntero_store_caja)
 237+ 9358 CD 6F 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 935B CD E2 90     	call Incrementa_punteros_de_cajas
 239+ 935E C9           	ret
 240+ 935F
 241+ 935F              ; ---------------------------------------------------------------------
 242+ 935F              ;
 243+ 935F              ;	23/6/24
 244+ 935F              ;
 245+ 935F              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 935F              ;
 247+ 935F              ;	MODIFY: HL
 248+ 935F
 249+ 935F              Limpiamos_bandeja_DRAW
 250+ 935F
 251+ 935F ED 73 07 8C  	ld (Stack),sp
 252+ 9363 31 DF 8B     	ld sp,Vel_left
 253+ 9366
 254+ 9366 AF           	xor a
 255+ 9367 67           	ld h,a
 256+ 9368 6F           	ld l,a
 257+ 9369
 258+ 9369 E5           	push hl
 259+ 936A E5           	push hl
 260+ 936B E5           	push hl
 261+ 936C E5           	push hl
 262+ 936D E5           	push hl
 263+ 936E E5           	push hl
 264+ 936F E5           	push hl
 265+ 9370 E5           	push hl
 266+ 9371 E5           	push hl
 267+ 9372 E5           	push hl
 268+ 9373 E5           	push hl
 269+ 9374 E5           	push hl
 270+ 9375 E5           	push hl
 271+ 9376 E5           	push hl
 272+ 9377 E5           	push hl
 273+ 9378 E5           	push hl
 274+ 9379 E5           	push hl
 275+ 937A E5           	push hl
 276+ 937B
 277+ 937B 33           	inc sp
 278+ 937C
 279+ 937C E5           	push hl
 280+ 937D ED 7B 07 8C  	ld sp,(Stack)
 281+ 9381
 282+ 9381 C9           	ret
 283+ 9382
 284+ 9382              ; ---------------------------------------------------------------------
 285+ 9382              ;
 286+ 9382              ;	24/03/24
 287+ 9382
 288+ 9382 2A C3 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9385 2B           	dec hl
 290+ 9386 22 C3 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9389 C9           	ret
 292+ 938A
 293+ 938A              ; ---------------------------------------------------------------------
 294+ 938A              ;
 295+ 938A              ;	8/5/24
 296+ 938A
 297+ 938A              Reinicia_entidad_maliciosa
 298+ 938A
 299+ 938A              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 938A
 301+ 938A CD DC 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 938D CD E9 9E     	call Transfiere_datos_de_contadores
 303+ 9390
 304+ 9390              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9390
 306+ 9390 3A BA 8B     	ld a,(Tipo)
 307+ 9393 CD 4A 93     	call Definicion_segun_tipo
 308+ 9396
 309+ 9396 E5           	push hl
 310+ 9397 DD E1        	pop ix
 311+ 9399
 312+ 9399 DD 6E 0B     	ld l,(ix+11)
 313+ 939C DD 66 0C     	ld h,(ix+12)
 314+ 939F
 315+ 939F 22 C1 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93A2
 317+ 93A2 CD E5 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93A5
 319+ 93A5              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93A5              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93A5              ; Ejemplos.
 322+ 93A5
 323+ 93A5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93A5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93A5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93A5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93A5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93A5
 329+ 93A5 21 BD 8B     	ld hl,Contador_de_vueltas
 330+ 93A8 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93AA
 332+ 93AA 7E           	ld a,(hl)
 333+ 93AB CB 2F        	sra a
 334+ 93AD CB 2F        	sra a
 335+ 93AF
 336+ 93AF 32 C5 8B     	ld (Velocidad),a
 337+ 93B2
 338+ 93B2 3E 40        	ld a,$40
 339+ 93B4 BE           	cp (hl)
 340+ 93B5 C0           	ret nz
 341+ 93B6
 342+ 93B6              ; Límitador.
 343+ 93B6
 344+ 93B6              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93B6
 346+ 93B6 CB 2E        	sra (hl)
 347+ 93B8 21 C5 8B     	ld hl,Velocidad
 348+ 93BB CB 2E        	sra (hl)
 349+ 93BD
 350+ 93BD C9           	ret
 351+ 93BE
 352+ 93BE              ; ---------------------------------------------------------------------
 353+ 93BE              ;
 354+ 93BE              ;	22/01/24
 355+ 93BE
 356+ 93BE 21 2B 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93C1 CB 46        	bit 0,(hl)
 358+ 93C3 20 0D        	jr nz,1F
 359+ 93C5 CB 4E        	bit 1,(hl)
 360+ 93C7 20 0C        	jr nz,2F
 361+ 93C9 CB 56        	bit 2,(hl)
 362+ 93CB 20 0B        	jr nz,3F
 363+ 93CD CB 5E        	bit 3,(hl)
 364+ 93CF 20 0A        	jr nz,4F
 365+ 93D1 C9           	ret
 366+ 93D2
 367+ 93D2 CB E6        1 set 4,(hl)
 368+ 93D4 C9           	ret
 369+ 93D5 CB EE        2 set 5,(hl)
 370+ 93D7 C9           	ret
 371+ 93D8 CB F6        3 set 6,(hl)
 372+ 93DA C9           	ret
 373+ 93DB CB FE        4 set 7,(hl)
 374+ 93DD C9           	ret
 375+ 93DE
 376+ 93DE              ; ---------------------------------------------------------------------
 377+ 93DE              ;
 378+ 93DE              ;	23/01/24
 379+ 93DE              ;
 380+ 93DE              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93DE              ;
 382+ 93DE              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93DE              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93DE              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93DE              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93DE
 387+ 93DE              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93DE
 389+ 93DE 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93DF 3D           	dec a
 391+ 93E0 20 06        	jr nz,1F
 392+ 93E2
 393+ 93E2              ; --- Tipo_1
 394+ 93E2
 395+ 93E2 21 2B 8C     	ld hl,Ctrl_4
 396+ 93E5 CB C6        	set 0,(hl)
 397+ 93E7 C9           	ret
 398+ 93E8
 399+ 93E8 3D           1 dec a
 400+ 93E9 20 06        	jr nz,2F
 401+ 93EB
 402+ 93EB              ; --- Tipo_2
 403+ 93EB
 404+ 93EB 21 2B 8C     	ld hl,Ctrl_4
 405+ 93EE CB CE        	set 1,(hl)
 406+ 93F0 C9           	ret
 407+ 93F1
 408+ 93F1 3D           2 dec a
 409+ 93F2 20 06        	jr nz,3F
 410+ 93F4
 411+ 93F4              ; --- Tipo_3
 412+ 93F4
 413+ 93F4 21 2B 8C     	ld hl,Ctrl_4
 414+ 93F7 CB D6        	set 2,(hl)
 415+ 93F9 C9           	ret
 416+ 93FA
 417+ 93FA              ; --- Tipo_3
 418+ 93FA
 419+ 93FA 21 2B 8C     3 ld hl,Ctrl_4
 420+ 93FD CB D6        	set 2,(hl)
 421+ 93FF C9           	ret
 422+ 9400
 423+ 9400              ; ---------------------------------------------------------------------
 424+ 9400              ;
 425+ 9400              ;	22/01/24
 426+ 9400
 427+ 9400 21 2B 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9403 CB 46        	bit 0,(hl)
 429+ 9405 20 0E        	jr nz,1F
 430+ 9407
 431+ 9407 CB 4E        	bit 1,(hl)
 432+ 9409 20 10        	jr nz,2F
 433+ 940B
 434+ 940B CB 56        	bit 2,(hl)
 435+ 940D 20 12        	jr nz,3F
 436+ 940F
 437+ 940F CB 5E        	bit 3,(hl)
 438+ 9411 20 14        	jr nz,4F
 439+ 9413 18 19        	jr 6F
 440+ 9415
 441+ 9415              ; Entidad_de_Tipo_1.
 442+ 9415
 443+ 9415 CB 66        1 bit 4,(hl)
 444+ 9417 28 15        	jr z,6F
 445+ 9419 18 10        	jr 5F
 446+ 941B
 447+ 941B              ; Entidad_de_Tipo_2.
 448+ 941B
 449+ 941B CB 6E        2 bit 5,(hl)
 450+ 941D 28 0F        	jr z,6F
 451+ 941F 18 0A        	jr 5F
 452+ 9421
 453+ 9421              ; Entidad_de_Tipo_3.
 454+ 9421
 455+ 9421 CB 76        3 bit 6,(hl)
 456+ 9423 28 09        	jr z,6F
 457+ 9425 18 04        	jr 5F
 458+ 9427
 459+ 9427              ; Entidad_de_Tipo_4.
 460+ 9427
 461+ 9427 CB 7E        4 bit 7,(hl)
 462+ 9429 28 03        	jr z,6F
 463+ 942B
 464+ 942B              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 942B
 466+ 942B AF           5 xor a
 467+ 942C 3C           	inc a
 468+ 942D C9           	ret
 469+ 942E
 470+ 942E              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 942E
 472+ 942E AF           6 xor a
 473+ 942F C9           	ret
 474+ 9430
 475+ 9430              ;	------------------------------------------------------------------------------------
 476+ 9430              ;
 477+ 9430              ;	12/01/24
 478+ 9430              ;
 479+ 9430              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9430              ;
 481+ 9430              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9430              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9430
 484+ 9430 CB 27        Calcula_salto_en_BC sla a
 485+ 9432 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9434 4F           	ld c,a
 487+ 9435 06 00        	ld b,0
 488+ 9437 C9           	ret
 489+ 9438
 490+ 9438              ; ------------------------------------------------------------------
 491+ 9438              ;
 492+ 9438              ;	19/1/24
 493+ 9438              ;
 494+ 9438              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9438              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9438
 497+ 9438 A7           Situa_en_datos_de_definicion and a
 498+ 9439 ED 4A        	adc hl,bc
 499+ 943B CD 94 90     	call Extrae_address
 500+ 943E 22 05 8C         ld (Datos_de_entidad),hl
 501+ 9441 C9           	ret
 502+ 9442
 503+ 9442              ; ------------------------------------------------------------------
 504+ 9442
 505+ 9442              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9442              ; 	inc de
 507+ 9442              ; 	inc de
 508+ 9442              ; 	ex de,hl
 509+ 9442              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9442              ; 	ret
 511+ 9442
 512+ 9442              ; ----------------------------------------------------------------------------------------------------------
 513+ 9442              ;
 514+ 9442              ;	24/6/24
 515+ 9442              ;
 516+ 9442              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9442              ;	_ de entidad.
 518+ 9442              ;
 519+ 9442              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9442              ;
 521+ 9442              ;
 522+ 9442              ;	MODIFICA: HL,DE y BC
 523+ 9442
 524+ 9442
 525+ 9442              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9442
 527+ 9442 11 BA 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9445 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9446 12           	ld (de),a
 530+ 9447 23           	inc hl
 531+ 9448              ;
 532+ 9448 11 C8 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 944B 01 02 00     	ld bc,2
 534+ 944E ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9450              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9450 11 BD 8B     	ld de,Contador_de_vueltas
 537+ 9453 7E           	ld a,(hl)
 538+ 9454 12           	ld (de),a
 539+ 9455 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9456
 541+ 9456 11 CF 8B     	ld de,Indice_Sprite_der
 542+ 9459 01 04 00     	ld bc,4
 543+ 945C ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 945E
 545+ 945E 11 D7 8B     	ld de,Posicion_inicio
 546+ 9461 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9464 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9466
 549+ 9466 11 C1 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9469 01 02 00     	ld bc,2
 551+ 946C ED B0        	ldir
 552+ 946E
 553+ 946E C9           	ret
 554+ 946F
 555+ 946F              ; ----------------------------------------------------------------------------------------------------------
 556+ 946F              ;
 557+ 946F              ;	1/8/24
 558+ 946F              ;
 559+ 946F
 560+ 946F              Parametros_de_bandeja_DRAW_a_caja
 561+ 946F
 562+ 946F 21 BA 8B     	ld hl,Bandeja_DRAW
 563+ 9472 01 0C 00     	ld bc,12
 564+ 9475 ED B0        	ldir
 565+ 9477 C9           	ret
 566+ 9478
 567+ 9478              ;---------------------------------------------------------------------------------------------------------------
 568+ 9478              ;
 569+ 9478              ;	5/1/24
 570+ 9478              ;
 571+ 9478              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9478              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9478              ;
 574+ 9478              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9478              ;
 576+ 9478              ;	(Numero_parcial_de_entidades)="7".
 577+ 9478              ;
 578+ 9478              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9478              ;
 580+ 9478              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9478              ;
 582+ 9478              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9478              ;	MODIFICA: A y B.
 584+ 9478              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9478
 586+ 9478              Inicializa_Numero_parcial_de_entidades
 587+ 9478
 588+ 9478              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9478
 590+ 9478 3A 00 8C     	ld a,(Numero_de_entidades)
 591+ 947B A7           	and a
 592+ 947C
 593+ 947C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 947C              ;	jr z,$
 595+ 947C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 947C
 597+ 947C 20 03        	jr nz,3F
 598+ 947E
 599+ 947E              ; ---------- ---------- ----------
 600+ 947E
 601+ 947E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 947E              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 947E
 604+ 947E CD 74 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9481
 606+ 9481              ; ---------- ---------- ----------
 607+ 9481
 608+ 9481 3A 00 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9484 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9486 38 08        	jr c,1F
 611+ 9488
 612+ 9488              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9488              ; Actualizamos variables.
 614+ 9488
 615+ 9488 3E 07        	ld a,7
 616+ 948A 32 01 8C     	ld (Numero_parcial_de_entidades),a
 617+ 948D 47           	ld b,a
 618+ 948E 18 04        	jr 2F
 619+ 9490
 620+ 9490              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9490              ; (Numero_de_entidades)="0".
 622+ 9490
 623+ 9490 32 01 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9493 47           	ld b,a
 625+ 9494 C9           2 ret
 626+ 9495
# file closed: Rutinas_de_inicio_y_niveles.asm
2060  9495              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9495              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9495              ;
   3+ 9495              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9495              ;
   5+ 9495              ; *****************************************************************************************************************************************************************************************
   6+ 9495              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9495
   8+ 9495 7C           calcula_tercio ld a,h
   9+ 9496 E6 18        	and $18
  10+ 9498 CB 2F        	sra a
  11+ 949A CB 2F        	sra a
  12+ 949C CB 2F        	sra a
  13+ 949E C9           	ret
  14+ 949F
# file closed: calcula_tercio.asm
2061  949F              	include "Cls.asm"
# file opened: Cls.asm
   1+ 949F              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 949F              ;
   3+ 949F              ;
   4+ 949F              ;	CLS.
   5+ 949F              ;
   6+ 949F              ;	Limpia la pantalla y define sus atributos.
   7+ 949F              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 949F              ;
   9+ 949F              ;	COLORES: 0 ..... NEGRO
  10+ 949F              ;    		 1 ..... AZUL
  11+ 949F              ; 			 2 ..... ROJO
  12+ 949F              ;			 3 ..... MAGENTA
  13+ 949F              ; 			 4 ..... VERDE
  14+ 949F              ; 			 5 ..... CIAN
  15+ 949F              ;			 6 ..... AMARILLO
  16+ 949F              ; 			 7 ..... BLANCO
  17+ 949F              ;
  18+ 949F              ;	INPUT: A contiene los atributos de pantalla.
  19+ 949F              ;
  20+ 949F              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 949F
  22+ 949F
  23+ 949F 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94A2 11 01 40     	LD DE,$4001
  25+ 94A5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94A8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94AA ED B0        	LDIR
  28+ 94AC 01 FF 02     	LD BC,767
  29+ 94AF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94B0 ED B0        	LDIR
  31+ 94B2 C9           	ret
  32+ 94B3
# file closed: Cls.asm
2062  94B3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94B3              ; ------------------------------------------------------------------------
   2+ 94B3              ;
   3+ 94B3              ;	30/1/24
   4+ 94B3              ;
   5+ 94B3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94B3              ;	Fila superior "0", Columna izquierda "0".
   7+ 94B3              ;
   8+ 94B3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94B3              ;
  10+ 94B3              ;	Modifica: A,BC y DE.
  11+ 94B3
  12+ 94B3 7D           Genera_coordenadas ld a,l
  13+ 94B4 E6 1F        	and $1f
  14+ 94B6 32 BB 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94B9
  16+ 94B9 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94BA FE 40        	cp $40
  18+ 94BC 38 1C        	jr c,4F
  19+ 94BE
  20+ 94BE CD 95 94     	call calcula_tercio
  21+ 94C1 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94C2
  23+ 94C2 1E 00        	ld e,0
  24+ 94C4 7D           	ld a,l
  25+ 94C5 E6 E0        	and $e0
  26+ 94C7 28 01        	jr z,1F
  27+ 94C9 04           	inc b
  28+ 94CA
  29+ 94CA 04           1 inc b
  30+ 94CB 05           	dec b
  31+ 94CC 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94CE              ;														; _ , salimos.
  33+ 94CE 1C           3 inc e
  34+ 94CF D6 20        	sub 32
  35+ 94D1 20 FB        	jr nz,3B
  36+ 94D3 10 F5        	djnz 1B
  37+ 94D5
  38+ 94D5 7B           2 ld a,e
  39+ 94D6 32 BC 8B     	ld (Coordenada_y),a
  40+ 94D9 C9           	ret
  41+ 94DA
  42+ 94DA AF           4 xor a
  43+ 94DB 32 BC 8B     	ld (Coordenada_y),a
  44+ 94DE C9           	ret
  45+ 94DF
# file closed: Genera_coordenadas.asm
2063  94DF              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94DF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94DF              ;
   3+ 94DF              ;	20/09/24
   4+ 94DF              ;
   5+ 94DF              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94DF              ;   DE contiene Puntero_objeto.
   7+ 94DF              ;   IX contiene el Puntero de impresión.
   8+ 94DF
   9+ 94DF              Genera_datos_de_impresion
  10+ 94DF
  11+ 94DF ED 73 07 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94E3
  13+ 94E3 31 C1 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94E6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94E8
  16+ 94E8 2A 24 8C         ld hl,(Scanlines_album_SP)
  17+ 94EB
  18+ 94EB 3E 05            ld a,5
  19+ 94ED 85               add l
  20+ 94EE 6F               ld l,a
  21+ 94EF
  22+ 94EF F9               ld sp,hl
  23+ 94F0 22 24 8C         ld (Scanlines_album_SP),hl
  24+ 94F3
  25+ 94F3 21 00 00         ld hl,0
  26+ 94F6
  27+ 94F6 DD E5            push ix
  28+ 94F8 3B               dec sp
  29+ 94F9 ED 7A            adc hl,sp
  30+ 94FB D5               push de
  31+ 94FC
  32+ 94FC              ; Recuperamos SP.
  33+ 94FC
  34+ 94FC ED 7B 07 8C      ld sp,(Stack)
  35+ 9500
  36+ 9500 E5               push hl
  37+ 9501 F1               pop af
  38+ 9502 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9503
  40+ 9503              ; Tenemos el encabezado listo.
  41+ 9503              ; Preparamos registros para generar los scanlines.
  42+ 9503
  43+ 9503 DD E5            push ix
  44+ 9505 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9506
  46+ 9506 ED 5B 24 8C      ld de,(Scanlines_album_SP)
  47+ 950A
  48+ 950A              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 950A              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 950A
  51+ 950A 7C               ld a,h
  52+ 950B FE 50            cp $50
  53+ 950D 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 950F
  55+ 950F 20 05            jr nz,2F
  56+ 9511
  57+ 9511 7D               ld a,l
  58+ 9512 FE E0            cp $e0
  59+ 9514 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9516
  61+ 9516 7D           2 ld a,l
  62+ 9517 FE C0            cp $c0
  63+ 9519 D2 AF 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 951C
  65+ 951C              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 951C
  67+ 951C CD AD 99         call NextScan
  68+ 951F EB               ex de,hl
  69+ 9520
  70+ 9520 73               ld (hl),e
  71+ 9521 23               inc hl
  72+ 9522 72               ld (hl),d
  73+ 9523 23               inc hl
  74+ 9524
  75+ 9524 EB               ex de,hl
  76+ 9525
  77+ 9525 CD AD 99         call NextScan
  78+ 9528 EB               ex de,hl
  79+ 9529
  80+ 9529 73               ld (hl),e
  81+ 952A 23               inc hl
  82+ 952B 72               ld (hl),d
  83+ 952C 23               inc hl
  84+ 952D
  85+ 952D EB               ex de,hl
  86+ 952E
  87+ 952E CD AD 99         call NextScan
  88+ 9531 EB               ex de,hl
  89+ 9532
  90+ 9532 73               ld (hl),e
  91+ 9533 23               inc hl
  92+ 9534 72               ld (hl),d
  93+ 9535 23               inc hl
  94+ 9536
  95+ 9536 EB               ex de,hl
  96+ 9537
  97+ 9537 CD AD 99         call NextScan
  98+ 953A EB               ex de,hl
  99+ 953B
 100+ 953B 73               ld (hl),e
 101+ 953C 23               inc hl
 102+ 953D 72               ld (hl),d
 103+ 953E 23               inc hl
 104+ 953F
 105+ 953F EB               ex de,hl
 106+ 9540
 107+ 9540 CD AD 99         call NextScan
 108+ 9543 EB               ex de,hl
 109+ 9544
 110+ 9544 73               ld (hl),e
 111+ 9545 23               inc hl
 112+ 9546 72               ld (hl),d
 113+ 9547 23               inc hl
 114+ 9548
 115+ 9548 EB               ex de,hl
 116+ 9549
 117+ 9549 CD AD 99         call NextScan
 118+ 954C EB               ex de,hl
 119+ 954D
 120+ 954D 73               ld (hl),e
 121+ 954E 23               inc hl
 122+ 954F 72               ld (hl),d
 123+ 9550 23               inc hl
 124+ 9551
 125+ 9551 EB               ex de,hl
 126+ 9552
 127+ 9552 CD AD 99         call NextScan
 128+ 9555 EB               ex de,hl
 129+ 9556
 130+ 9556 73               ld (hl),e
 131+ 9557 23               inc hl
 132+ 9558 72               ld (hl),d
 133+ 9559 23               inc hl
 134+ 955A
 135+ 955A EB               ex de,hl
 136+ 955B
 137+ 955B CD AD 99         call NextScan
 138+ 955E EB               ex de,hl
 139+ 955F
 140+ 955F 73               ld (hl),e
 141+ 9560 23               inc hl
 142+ 9561 72               ld (hl),d
 143+ 9562 23               inc hl
 144+ 9563
 145+ 9563 EB               ex de,hl
 146+ 9564
 147+ 9564 CD AD 99         call NextScan
 148+ 9567 EB               ex de,hl
 149+ 9568
 150+ 9568 73               ld (hl),e
 151+ 9569 23               inc hl
 152+ 956A 72               ld (hl),d
 153+ 956B 23               inc hl
 154+ 956C
 155+ 956C EB               ex de,hl
 156+ 956D
 157+ 956D CD AD 99         call NextScan
 158+ 9570 EB               ex de,hl
 159+ 9571
 160+ 9571 73               ld (hl),e
 161+ 9572 23               inc hl
 162+ 9573 72               ld (hl),d
 163+ 9574 23               inc hl
 164+ 9575
 165+ 9575 EB               ex de,hl
 166+ 9576
 167+ 9576 CD AD 99         call NextScan
 168+ 9579 EB               ex de,hl
 169+ 957A
 170+ 957A 73               ld (hl),e
 171+ 957B 23               inc hl
 172+ 957C 72               ld (hl),d
 173+ 957D 23               inc hl
 174+ 957E
 175+ 957E EB               ex de,hl
 176+ 957F
 177+ 957F CD AD 99         call NextScan
 178+ 9582 EB               ex de,hl
 179+ 9583
 180+ 9583 73               ld (hl),e
 181+ 9584 23               inc hl
 182+ 9585 72               ld (hl),d
 183+ 9586 23               inc hl
 184+ 9587
 185+ 9587 EB               ex de,hl
 186+ 9588
 187+ 9588 CD AD 99         call NextScan
 188+ 958B EB               ex de,hl
 189+ 958C
 190+ 958C 73               ld (hl),e
 191+ 958D 23               inc hl
 192+ 958E 72               ld (hl),d
 193+ 958F 23               inc hl
 194+ 9590
 195+ 9590 EB               ex de,hl
 196+ 9591
 197+ 9591 CD AD 99         call NextScan
 198+ 9594 EB               ex de,hl
 199+ 9595
 200+ 9595 73               ld (hl),e
 201+ 9596 23               inc hl
 202+ 9597 72               ld (hl),d
 203+ 9598 23               inc hl
 204+ 9599
 205+ 9599 EB               ex de,hl
 206+ 959A
 207+ 959A CD AD 99         call NextScan
 208+ 959D EB               ex de,hl
 209+ 959E
 210+ 959E              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 959E              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 959E              ;   _ generar sus scanlines.
 213+ 959E
 214+ 959E              ;    ld (Puntero_de_impresion_disparo),de
 215+ 959E
 216+ 959E 73               ld (hl),e
 217+ 959F 23               inc hl
 218+ 95A0 72               ld (hl),d
 219+ 95A1 23               inc hl
 220+ 95A2
 221+ 95A2              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95A2
 223+ 95A2 22 24 8C         ld (Scanlines_album_SP),hl
 224+ 95A5
 225+ 95A5 EB               ex de,hl
 226+ 95A6
 227+ 95A6              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95A6
 229+ 95A6              ;    call NextScan
 230+ 95A6              ;    call NextScan
 231+ 95A6
 232+ 95A6 22 2F 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95A9
 234+ 95A9              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95A9
 236+ 95A9 08               ex af,af
 237+ 95AA
 238+ 95AA F5               push af
 239+ 95AB E1               pop hl
 240+ 95AC
 241+ 95AC 36 10            ld (hl),16
 242+ 95AE
 243+ 95AE C9               ret
 244+ 95AF
 245+ 95AF              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95AF
 247+ 95AF              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95AF
 249+ 95AF 3E 57            ld a,$57
 250+ 95B1 94               sub h
 251+ 95B2 47               ld b,a
 252+ 95B3
 253+ 95B3 3E DF            ld a,$df
 254+ 95B5 BD               cp l
 255+ 95B6 38 04            jr c,1F
 256+ 95B8
 257+ 95B8 3E 08            ld a,8
 258+ 95BA 80               add b
 259+ 95BB 47               ld b,a
 260+ 95BC
 261+ 95BC              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95BC              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95BC
 264+ 95BC 48           1 ld c,b
 265+ 95BD 0C               inc c
 266+ 95BE
 267+ 95BE 04               inc b
 268+ 95BF 05               dec b
 269+ 95C0 20 02            jr nz,3F
 270+ 95C2
 271+ 95C2 18 0B            jr 6F
 272+ 95C4
 273+ 95C4 CD AD 99     3 call NextScan
 274+ 95C7 EB               ex de,hl
 275+ 95C8
 276+ 95C8 73               ld (hl),e
 277+ 95C9 23               inc hl
 278+ 95CA 72               ld (hl),d
 279+ 95CB 23               inc hl
 280+ 95CC
 281+ 95CC EB               ex de,hl
 282+ 95CD 10 F5            djnz 3B
 283+ 95CF
 284+ 95CF ED 53 24 8C  6 ld (Scanlines_album_SP),de
 285+ 95D3
 286+ 95D3 08           5 ex af,af
 287+ 95D4 F5               push af
 288+ 95D5 E1               pop hl
 289+ 95D6
 290+ 95D6 71               ld (hl),c
 291+ 95D7
 292+ 95D7 C9               ret
 293+ 95D8
# file closed: Genera_datos_de_impresion.asm
2064  95D8              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95D8              ; -----------------------------------------------------------------------------
   2+ 95D8              ;
   3+ 95D8              ;   11/03/24
   4+ 95D8              ;
   5+ 95D8
   6+ 95D8              Pinta_Sprites
   7+ 95D8
   8+ 95D8              ;    ld hl,(Scanlines_album_SP)
   9+ 95D8              ;    call Extrae_address
  10+ 95D8
  11+ 95D8              ;    inc h
  12+ 95D8              ;    dec h
  13+ 95D8              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95D8
  15+ 95D8 ED 73 07 8C      ld (Stack),sp
  16+ 95DC
  17+ 95DC EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95DD              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95DD 2C               inc l
  20+ 95DE 2C               inc l
  21+ 95DF
  22+ 95DF 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95E0
  24+ 95E0 2C               inc l
  25+ 95E1 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95E2
  27+ 95E2              ;   Seleccionamos rutina de impresión:
  28+ 95E2
  29+ 95E2 3E 10            ld a,16
  30+ 95E4 B8               cp b
  31+ 95E5 C2 E1 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95E8
  33+ 95E8              ;   Rutinas:
  34+ 95E8
  35+ 95E8              Pinta_rapido    ;   1520 t/states.
  36+ 95E8
  37+ 95E8 E1               pop hl
  38+ 95E9
  39+ 95E9 1A               ld a,(de)
  40+ 95EA AE               xor (hl)
  41+ 95EB 77               ld (hl),a
  42+ 95EC 2C               inc l
  43+ 95ED 1C               inc e
  44+ 95EE 1A               ld a,(de)
  45+ 95EF AE               xor (hl)
  46+ 95F0 77               ld (hl),a
  47+ 95F1 2C               inc l
  48+ 95F2 1C               inc e
  49+ 95F3 1A               ld a,(de)
  50+ 95F4 AE               xor (hl)
  51+ 95F5 77               ld (hl),a
  52+ 95F6 13               inc de
  53+ 95F7
  54+ 95F7 E1               pop hl
  55+ 95F8
  56+ 95F8 1A               ld a,(de)
  57+ 95F9 AE               xor (hl)
  58+ 95FA 77               ld (hl),a
  59+ 95FB 2C               inc l
  60+ 95FC 1C               inc e
  61+ 95FD 1A               ld a,(de)
  62+ 95FE AE               xor (hl)
  63+ 95FF 77               ld (hl),a
  64+ 9600 2C               inc l
  65+ 9601 1C               inc e
  66+ 9602 1A               ld a,(de)
  67+ 9603 AE               xor (hl)
  68+ 9604 77               ld (hl),a
  69+ 9605 13               inc de
  70+ 9606
  71+ 9606 E1               pop hl
  72+ 9607
  73+ 9607 1A               ld a,(de)
  74+ 9608 AE               xor (hl)
  75+ 9609 77               ld (hl),a
  76+ 960A 2C               inc l
  77+ 960B 1C               inc e
  78+ 960C 1A               ld a,(de)
  79+ 960D AE               xor (hl)
  80+ 960E 77               ld (hl),a
  81+ 960F 2C               inc l
  82+ 9610 1C               inc e
  83+ 9611 1A               ld a,(de)
  84+ 9612 AE               xor (hl)
  85+ 9613 77               ld (hl),a
  86+ 9614 13               inc de
  87+ 9615
  88+ 9615 E1               pop hl
  89+ 9616
  90+ 9616 1A               ld a,(de)
  91+ 9617 AE               xor (hl)
  92+ 9618 77               ld (hl),a
  93+ 9619 2C               inc l
  94+ 961A 1C               inc e
  95+ 961B 1A               ld a,(de)
  96+ 961C AE               xor (hl)
  97+ 961D 77               ld (hl),a
  98+ 961E 2C               inc l
  99+ 961F 1C               inc e
 100+ 9620 1A               ld a,(de)
 101+ 9621 AE               xor (hl)
 102+ 9622 77               ld (hl),a
 103+ 9623 13               inc de
 104+ 9624
 105+ 9624 E1               pop hl
 106+ 9625
 107+ 9625 1A               ld a,(de)
 108+ 9626 AE               xor (hl)
 109+ 9627 77               ld (hl),a
 110+ 9628 2C               inc l
 111+ 9629 1C               inc e
 112+ 962A 1A               ld a,(de)
 113+ 962B AE               xor (hl)
 114+ 962C 77               ld (hl),a
 115+ 962D 2C               inc l
 116+ 962E 1C               inc e
 117+ 962F 1A               ld a,(de)
 118+ 9630 AE               xor (hl)
 119+ 9631 77               ld (hl),a
 120+ 9632 13               inc de
 121+ 9633
 122+ 9633 E1               pop hl
 123+ 9634
 124+ 9634 1A               ld a,(de)
 125+ 9635 AE               xor (hl)
 126+ 9636 77               ld (hl),a
 127+ 9637 2C               inc l
 128+ 9638 1C               inc e
 129+ 9639 1A               ld a,(de)
 130+ 963A AE               xor (hl)
 131+ 963B 77               ld (hl),a
 132+ 963C 2C               inc l
 133+ 963D 1C               inc e
 134+ 963E 1A               ld a,(de)
 135+ 963F AE               xor (hl)
 136+ 9640 77               ld (hl),a
 137+ 9641 13               inc de
 138+ 9642
 139+ 9642 E1               pop hl
 140+ 9643
 141+ 9643 1A               ld a,(de)
 142+ 9644 AE               xor (hl)
 143+ 9645 77               ld (hl),a
 144+ 9646 2C               inc l
 145+ 9647 1C               inc e
 146+ 9648 1A               ld a,(de)
 147+ 9649 AE               xor (hl)
 148+ 964A 77               ld (hl),a
 149+ 964B 2C               inc l
 150+ 964C 1C               inc e
 151+ 964D 1A               ld a,(de)
 152+ 964E AE               xor (hl)
 153+ 964F 77               ld (hl),a
 154+ 9650 13               inc de
 155+ 9651
 156+ 9651 E1               pop hl
 157+ 9652
 158+ 9652 1A               ld a,(de)
 159+ 9653 AE               xor (hl)
 160+ 9654 77               ld (hl),a
 161+ 9655 2C               inc l
 162+ 9656 1C               inc e
 163+ 9657 1A               ld a,(de)
 164+ 9658 AE               xor (hl)
 165+ 9659 77               ld (hl),a
 166+ 965A 2C               inc l
 167+ 965B 1C               inc e
 168+ 965C 1A               ld a,(de)
 169+ 965D AE               xor (hl)
 170+ 965E 77               ld (hl),a
 171+ 965F 13               inc de
 172+ 9660
 173+ 9660 E1               pop hl
 174+ 9661
 175+ 9661 1A               ld a,(de)
 176+ 9662 AE               xor (hl)
 177+ 9663 77               ld (hl),a
 178+ 9664 2C               inc l
 179+ 9665 1C               inc e
 180+ 9666 1A               ld a,(de)
 181+ 9667 AE               xor (hl)
 182+ 9668 77               ld (hl),a
 183+ 9669 2C               inc l
 184+ 966A 1C               inc e
 185+ 966B 1A               ld a,(de)
 186+ 966C AE               xor (hl)
 187+ 966D 77               ld (hl),a
 188+ 966E 13               inc de
 189+ 966F
 190+ 966F E1               pop hl
 191+ 9670
 192+ 9670 1A               ld a,(de)
 193+ 9671 AE               xor (hl)
 194+ 9672 77               ld (hl),a
 195+ 9673 2C               inc l
 196+ 9674 1C               inc e
 197+ 9675 1A               ld a,(de)
 198+ 9676 AE               xor (hl)
 199+ 9677 77               ld (hl),a
 200+ 9678 2C               inc l
 201+ 9679 1C               inc e
 202+ 967A 1A               ld a,(de)
 203+ 967B AE               xor (hl)
 204+ 967C 77               ld (hl),a
 205+ 967D 13               inc de
 206+ 967E
 207+ 967E E1               pop hl
 208+ 967F
 209+ 967F 1A               ld a,(de)
 210+ 9680 AE               xor (hl)
 211+ 9681 77               ld (hl),a
 212+ 9682 2C               inc l
 213+ 9683 1C               inc e
 214+ 9684 1A               ld a,(de)
 215+ 9685 AE               xor (hl)
 216+ 9686 77               ld (hl),a
 217+ 9687 2C               inc l
 218+ 9688 1C               inc e
 219+ 9689 1A               ld a,(de)
 220+ 968A AE               xor (hl)
 221+ 968B 77               ld (hl),a
 222+ 968C 13               inc de
 223+ 968D
 224+ 968D E1               pop hl
 225+ 968E
 226+ 968E 1A               ld a,(de)
 227+ 968F AE               xor (hl)
 228+ 9690 77               ld (hl),a
 229+ 9691 2C               inc l
 230+ 9692 1C               inc e
 231+ 9693 1A               ld a,(de)
 232+ 9694 AE               xor (hl)
 233+ 9695 77               ld (hl),a
 234+ 9696 2C               inc l
 235+ 9697 1C               inc e
 236+ 9698 1A               ld a,(de)
 237+ 9699 AE               xor (hl)
 238+ 969A 77               ld (hl),a
 239+ 969B 13               inc de
 240+ 969C
 241+ 969C E1               pop hl
 242+ 969D
 243+ 969D 1A               ld a,(de)
 244+ 969E AE               xor (hl)
 245+ 969F 77               ld (hl),a
 246+ 96A0 2C               inc l
 247+ 96A1 1C               inc e
 248+ 96A2 1A               ld a,(de)
 249+ 96A3 AE               xor (hl)
 250+ 96A4 77               ld (hl),a
 251+ 96A5 2C               inc l
 252+ 96A6 1C               inc e
 253+ 96A7 1A               ld a,(de)
 254+ 96A8 AE               xor (hl)
 255+ 96A9 77               ld (hl),a
 256+ 96AA 13               inc de
 257+ 96AB
 258+ 96AB E1               pop hl
 259+ 96AC
 260+ 96AC 1A               ld a,(de)
 261+ 96AD AE               xor (hl)
 262+ 96AE 77               ld (hl),a
 263+ 96AF 2C               inc l
 264+ 96B0 1C               inc e
 265+ 96B1 1A               ld a,(de)
 266+ 96B2 AE               xor (hl)
 267+ 96B3 77               ld (hl),a
 268+ 96B4 2C               inc l
 269+ 96B5 1C               inc e
 270+ 96B6 1A               ld a,(de)
 271+ 96B7 AE               xor (hl)
 272+ 96B8 77               ld (hl),a
 273+ 96B9 13               inc de
 274+ 96BA
 275+ 96BA E1               pop hl
 276+ 96BB
 277+ 96BB 1A               ld a,(de)
 278+ 96BC AE               xor (hl)
 279+ 96BD 77               ld (hl),a
 280+ 96BE 2C               inc l
 281+ 96BF 1C               inc e
 282+ 96C0 1A               ld a,(de)
 283+ 96C1 AE               xor (hl)
 284+ 96C2 77               ld (hl),a
 285+ 96C3 2C               inc l
 286+ 96C4 1C               inc e
 287+ 96C5 1A               ld a,(de)
 288+ 96C6 AE               xor (hl)
 289+ 96C7 77               ld (hl),a
 290+ 96C8 13               inc de
 291+ 96C9
 292+ 96C9 E1               pop hl
 293+ 96CA
 294+ 96CA 1A               ld a,(de)
 295+ 96CB AE               xor (hl)
 296+ 96CC 77               ld (hl),a
 297+ 96CD 2C               inc l
 298+ 96CE 1C               inc e
 299+ 96CF 1A               ld a,(de)
 300+ 96D0 AE               xor (hl)
 301+ 96D1 77               ld (hl),a
 302+ 96D2 2C               inc l
 303+ 96D3 1C               inc e
 304+ 96D4 1A               ld a,(de)
 305+ 96D5 AE               xor (hl)
 306+ 96D6 77               ld (hl),a
 307+ 96D7 13               inc de
 308+ 96D8
 309+ 96D8 ED 73 24 8C      ld (Scanlines_album_SP),sp
 310+ 96DC ED 7B 07 8C      ld sp,(Stack)
 311+ 96E0 C9               ret
 312+ 96E1
 313+ 96E1              Pinta_lento
 314+ 96E1
 315+ 96E1 E1           1 pop hl
 316+ 96E2
 317+ 96E2 1A               ld a,(de)
 318+ 96E3 AE               xor (hl)
 319+ 96E4 77               ld (hl),a
 320+ 96E5 2C               inc l
 321+ 96E6 1C               inc e
 322+ 96E7 1A               ld a,(de)
 323+ 96E8 AE               xor (hl)
 324+ 96E9 77               ld (hl),a
 325+ 96EA 2C               inc l
 326+ 96EB 1C               inc e
 327+ 96EC 1A               ld a,(de)
 328+ 96ED AE               xor (hl)
 329+ 96EE 77               ld (hl),a
 330+ 96EF 13               inc de
 331+ 96F0
 332+ 96F0 10 EF            djnz 1B
 333+ 96F2
 334+ 96F2 ED 73 24 8C      ld (Scanlines_album_SP),sp
 335+ 96F6 ED 7B 07 8C      ld sp,(Stack)
 336+ 96FA C9               ret
# file closed: Pinta_Sprites.asm
2065  96FB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96FB              ; ******************************************************************************************************************************************************************************************
   2+ 96FB              ;
   3+ 96FB              ; 26/06/23
   4+ 96FB              ;
   5+ 96FB              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96FB
   7+ 96FB              Draw
   8+ 96FB
   9+ 96FB CD A1 99     	call Prepara_draw
  10+ 96FE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96FF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9700 28 05        	jr z,2F
  13+ 9702
  14+ 9702 3A D9 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9705 18 0C        	jr 1F
  16+ 9707
  17+ 9707 2A D7 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 970A 22 CA 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 970D CD 99 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9710              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9710
  22+ 9710 CD 40 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9713
  24+ 9713 3A C7 8B     1 ld a,(Ctrl_0)
  25+ 9716 CB 6F        	bit 5,a
  26+ 9718 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 971A
  28+ 971A CD 2F 97     	call Comprueba_limite_horizontal
  29+ 971D CD BF 97     	call Comprueba_limite_vertical
  30+ 9720
  31+ 9720              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9720              ; -----------------------
  33+ 9720              ; -----------------------
  34+ 9720              ; -----------------------
  35+ 9720
  36+ 9720 CD 15 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9723 CD 4C 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9726
  39+ 9726 3A C7 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9729 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 972B 32 C7 8B     	ld (Ctrl_0),a
  42+ 972E
  43+ 972E C9           	ret
  44+ 972F
  45+ 972F              ; *******************************************************************************************************************************************************************************************
  46+ 972F              ;	21/01/23
  47+ 972F              ;
  48+ 972F              ; 	Comprueba_limite_horizontal.
  49+ 972F              ;
  50+ 972F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 972F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 972F              ;
  53+ 972F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 972F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 972F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 972F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 972F
  58+ 972F
  59+ 972F
  60+ 972F 3A C7 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9732 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9734 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9736 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9738 32 C7 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 973B 18 09            jr 6F
  66+ 973D CB 5F        1 bit 3,a
  67+ 973F 28 0A            jr z,2F
  68+ 9741 E6 F7            and $f7
  69+ 9743 32 C7 8B         ld (Ctrl_0),a
  70+ 9746 CD 99 98     6 call Inicializacion
  71+ 9749 18 5B            jr 5F
  72+ 974B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 974C
  74+ 974C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 974C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 974C
  77+ 974C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 974D 2A DB 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9750 CD 95 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9753 67           	ld h,a
  81+ 9754 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9755 CD 95 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9758 67           	ld h,a
  84+ 9759 A7           	and a
  85+ 975A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 975C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 975D 3A D9 8B     	ld a,(Cuad_objeto)
  88+ 9760 FE 02        	cp 2
  89+ 9762 38 1E        	jr c,3F
  90+ 9764 28 1C        	jr z,3F
  91+ 9766 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9767 28 23            jr z,7F
  93+ 9769 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 976B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 976D E1           	pop hl
  96+ 976E
  97+ 976E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 976E              ; _para indicar con E="2" en caso necesario.
  99+ 976E
 100+ 976E E5               push hl
 101+ 976F C5               push bc
 102+ 9770 CD 95 94     	call calcula_tercio
 103+ 9773 FE 01        	cp 1
 104+ 9775 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9777 CD A7 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 977A 28 26            jr z,9F
 107+ 977C 38 24            jr c,9F
 108+ 977E 1E 00        11 ld e,0
 109+ 9780 18 22            jr 8F
 110+ 9782 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9783 28 07        	jr z, 7F
 112+ 9785 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9787 1E 00         	ld e,0
 114+ 9789 E1           	pop hl
 115+ 978A 18 04        	jr 4F
 116+ 978C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 978E 18 15            jr 10F
 118+ 9790
 119+ 9790              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9790              ; _para indicar con E="2" en caso necesario.
 121+ 9790
 122+ 9790 E5           4 push hl
 123+ 9791 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9792 CD 95 94     	call calcula_tercio
 125+ 9795 FE 01        	cp 1
 126+ 9797 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9799 CD A7 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 979C 28 04            jr z,9F
 129+ 979E 30 02            jr nc,9F
 130+ 97A0 18 02        	jr 8F
 131+ 97A2 1E 02        9 ld e,2
 132+ 97A4 C1           8 pop bc
 133+ 97A5 E1           10 pop hl
 134+ 97A6 C9           5 ret
 135+ 97A7
 136+ 97A7              ; --------------------
 137+ 97A7              ;
 138+ 97A7              ; 25/08/22
 139+ 97A7
 140+ 97A7 CD 95 94     Comprueba_centro call calcula_tercio
 141+ 97AA 67               ld h,a
 142+ 97AB 08           	ex af,af
 143+ 97AC FE 02        	cp 2
 144+ 97AE 38 07        	jr c,1F
 145+ 97B0 28 05        	jr z,1F
 146+ 97B2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97B5 18 03        	jr 2F
 148+ 97B7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97BA 08           2 ex af,af
 150+ 97BB A7               and a
 151+ 97BC ED 42            sbc hl,bc
 152+ 97BE C9               ret
 153+ 97BF
 154+ 97BF              ; *********************************************************************************************************************************************************************************************
 155+ 97BF              ;
 156+ 97BF              ;   16/8/22
 157+ 97BF              ;
 158+ 97BF              ;	Comprueba_limite_vertical
 159+ 97BF              ;
 160+ 97BF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97BF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97BF              ;
 163+ 97BF
 164+ 97BF 2A CA 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97C2 7D           	ld a,l
 166+ 97C3 E6 1F        	and $1F
 167+ 97C5 57           	ld d,a
 168+ 97C6 3A DD 8B     	ld a,(Limite_vertical)
 169+ 97C9 BA           	cp d 											; Límite - Posición.
 170+ 97CA 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97CB 3A D9 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97CE CB 47        	bit 0,a
 173+ 97D0 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97D2
 175+ 97D2              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97D2
 177+ 97D2 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97D3 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97D5
 180+ 97D5              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97D5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97D5
 183+ 97D5 3A BB 8B         ld a,(Coordenada_X)
 184+ 97D8 16 0F            ld d,Centro_izquierda
 185+ 97DA A7               and a
 186+ 97DB 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97DC 28 1E            jr z,3F
 188+ 97DE 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97E0              ;                                                    ; _salimos sin modificar nada.
 190+ 97E0 18 0E            jr 2F
 191+ 97E2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97E3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97E5
 194+ 97E5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97E5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97E5
 197+ 97E5 3A BB 8B         ld a,(Coordenada_X)
 198+ 97E8 16 10            ld d,Centro_derecha
 199+ 97EA A7               and a
 200+ 97EB 92               sub d
 201+ 97EC 28 0E            jr z,3F
 202+ 97EE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97F0              ;                                                    ; _salimos sin modificar nada.
 204+ 97F0 CB 43        2 bit 0,e
 205+ 97F2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97F4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97F5 CD 89 98         call Modificaccionne
 208+ 97F8 C1           	pop bc
 209+ 97F9 CD 99 98         call Inicializacion
 210+ 97FC C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97FD
 212+ 97FD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97FD
 214+ 97FD C5           4 push bc
 215+ 97FE 01 C9 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9801 0A           	ld a,(bc)
 217+ 9802 3D           	dec a
 218+ 9803 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9804 7D           	ld a,l
 220+ 9805 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9806 CB 47        	bit 0,a
 222+ 9808 28 03        	jr z,5F
 223+ 980A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 980B 18 2E        	jr 7F
 225+ 980D
 226+ 980D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 980D
 228+ 980D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 980E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 980F 3A C7 8B     	ld a,(Ctrl_0)
 231+ 9812 CB 4F        	bit 1,a
 232+ 9814 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9816 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9817
 235+ 9817              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9817
 237+ 9817 1C               inc e
 238+ 9818 1D               dec e
 239+ 9819 20 07            jr nz,12F
 240+ 981B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 981C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 981D 22 CA 8B     	ld (Posicion_actual),hl
 243+ 9820 18 44        13 jr 9F
 244+ 9822 CB 43        12 bit 0,e
 245+ 9824 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9826              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9826 C1           	pop bc
 248+ 9827 18 D3        	jr 3B
 249+ 9829 80           14 add b
 250+ 982A 6F               ld l,a
 251+ 982B 22 CA 8B     	ld (Posicion_actual),hl
 252+ 982E CD 89 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9831 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9833 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9835 32 C7 8B         ld (Ctrl_0),a
 256+ 9838 F1           	pop af
 257+ 9839 18 2B        	jr 9F
 258+ 983B
 259+ 983B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 983B
 261+ 983B F5           7 push af
 262+ 983C 3A C7 8B     	ld a,(Ctrl_0)
 263+ 983F CB 47        	bit 0,a
 264+ 9841 20 1D        	jr nz,8F
 265+ 9843 F1           	pop af
 266+ 9844
 267+ 9844              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9844
 269+ 9844 1C           	inc e
 270+ 9845 1D               dec e
 271+ 9846 20 07            jr nz,10F
 272+ 9848 90           	sub b
 273+ 9849 6F               ld l,a
 274+ 984A 22 CA 8B     	ld (Posicion_actual),hl
 275+ 984D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 984F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 984F CB 43        10 bit 0,e
 278+ 9851 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9853              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9853 C1           	pop bc
 281+ 9854 18 A6        	jr 3B
 282+ 9856 90           16 sub b
 283+ 9857 6F               ld l,a
 284+ 9858 22 CA 8B     	ld (Posicion_actual),hl
 285+ 985B CD 89 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 985E 18 06            jr 9F
 287+ 9860 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9862 32 C7 8B         ld (Ctrl_0),a
 289+ 9865 F1           	pop af
 290+ 9866 C1           9 pop bc
 291+ 9867 1E 00        	ld e,0
 292+ 9869 CD 99 98         call Inicializacion
 293+ 986C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 986D 08           	ex af,af
 295+ 986E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 986F 18 8B            jr 3B
 297+ 9871
 298+ 9871              ; --------------------
 299+ 9871
 300+ 9871 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9873 CD BC 99     1 call PreviousScan
 302+ 9876 10 FB            djnz 1B
 303+ 9878 22 CA 8B     	ld (Posicion_actual),hl
 304+ 987B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 987C C9           	ret
 306+ 987D
 307+ 987D              ; --------------------
 308+ 987D
 309+ 987D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 987F CD AD 99     1 call NextScan
 311+ 9882 10 FB            djnz 1B
 312+ 9884 22 CA 8B     	ld (Posicion_actual),hl
 313+ 9887 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9888 C9           	ret
 315+ 9889
 316+ 9889              ; --------------------
 317+ 9889              ;
 318+ 9889              ;	22/01/23
 319+ 9889              ;
 320+ 9889              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9889              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9889              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9889
 324+ 9889
 325+ 9889              Modificaccionne
 326+ 9889
 327+ 9889 3A D9 8B     	ld a,(Cuad_objeto)
 328+ 988C FE 02        	cp 2
 329+ 988E CC 71 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9891 DC 71 98         call c,Modifica_Pos_actual
 331+ 9894 C8           	ret z
 332+ 9895 CD 7D 98         call Modifica_Pos_actual2
 333+ 9898 C9               ret
 334+ 9899
 335+ 9899              ; *************************************************************************************************************************************************************************************************
 336+ 9899              ;
 337+ 9899              ;	13/8/22
 338+ 9899              ;
 339+ 9899              ;	Inicializacion
 340+ 9899              ;
 341+ 9899              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9899              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9899              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9899              ;
 345+ 9899              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9899              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9899              ;	_ desaparece/aparece.
 348+ 9899
 349+ 9899              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9899              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9899              ;
 352+ 9899              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9899              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9899              ; 		   [E] ="0"
 355+ 9899
 356+ 9899              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9899
 358+ 9899 CD 95 94     Inicializacion call calcula_tercio
 359+ 989C 28 36        	jr z,primit
 360+ 989E E6 02        	and 2
 361+ 98A0 20 07        	jr nz,segmit
 362+ 98A2 7D           	ld a,l
 363+ 98A3 FE 7F        	cp $7f
 364+ 98A5 38 2D        	jr c,primit
 365+ 98A7 28 2B        	jr z,primit
 366+ 98A9 CD 0F 99     segmit call column
 367+ 98AC 38 13        	jr c,tercuad
 368+ 98AE 3E 04        cuarcuad ld a,4
 369+ 98B0 32 D9 8B     	ld (Cuad_objeto),a
 370+ 98B3 21 20 48     	ld hl,$4820
 371+ 98B6 22 DB 8B     	ld (Limite_horizontal),hl
 372+ 98B9 21 DD 8B     	ld hl,Limite_vertical
 373+ 98BC 36 0D        	ld (hl),$0d
 374+ 98BE 08           	ex af,af
 375+ 98BF 18 3C        	jr 1F
 376+ 98C1              tercuad
 377+ 98C1 3E 03        	ld a,3
 378+ 98C3 32 D9 8B     	ld (Cuad_objeto),a
 379+ 98C6 21 20 48     	ld hl,$4820
 380+ 98C9 22 DB 8B     	ld (Limite_horizontal),hl
 381+ 98CC 21 DD 8B     	ld hl,Limite_vertical
 382+ 98CF 36 12        	ld (hl),$12
 383+ 98D1 08           	ex af,af
 384+ 98D2 18 29        	jr 1F
 385+ 98D4 CD 0F 99     primit call column
 386+ 98D7 38 13        	jr c, primcuad
 387+ 98D9              segcuad
 388+ 98D9 3E 02        	ld a,2
 389+ 98DB 32 D9 8B     	ld (Cuad_objeto),a
 390+ 98DE 21 C0 4F     	ld hl,$4fc0
 391+ 98E1 22 DB 8B     	ld (Limite_horizontal),hl
 392+ 98E4 21 DD 8B     	ld hl,Limite_vertical
 393+ 98E7 36 0D        	ld (hl),$0d
 394+ 98E9 08           	ex af,af
 395+ 98EA 18 11        	jr 1F
 396+ 98EC              primcuad
 397+ 98EC 3E 01        	ld a,1
 398+ 98EE 32 D9 8B     	ld (Cuad_objeto),a
 399+ 98F1 21 C0 4F     	ld hl,$4fc0
 400+ 98F4 22 DB 8B     	ld (Limite_horizontal),hl
 401+ 98F7 21 DD 8B     	ld hl,Limite_vertical
 402+ 98FA 36 12        	ld (hl),$12
 403+ 98FC 08           	ex af,af
 404+ 98FD
 405+ 98FD C5           1 push bc
 406+ 98FE E5           	push hl
 407+ 98FF D5           	push de
 408+ 9900
 409+ 9900 2A CA 8B     	ld hl,(Posicion_actual)
 410+ 9903 CD B3 94     	call Genera_coordenadas
 411+ 9906
 412+ 9906 D1           	pop de
 413+ 9907 E1           	pop hl
 414+ 9908 C1           	pop bc
 415+ 9909
 416+ 9909 21 C7 8B     	ld hl,Ctrl_0
 417+ 990C CB EE        	set 5,(hl)
 418+ 990E C9           	ret
 419+ 990F
 420+ 990F              ; ------------------------------------------------------------------------------------------------------------------
 421+ 990F
 422+ 990F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 990F              ;
 424+ 990F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 990F
 426+ 990F 7D           column ld a,l
 427+ 9910 E6 1F        	and $1f
 428+ 9912 FE 10         	cp $10
 429+ 9914 C9            	ret
 430+ 9915
 431+ 9915              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9915              ;
 433+ 9915              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9915              ;
 435+ 9915              ; 14/12/22
 436+ 9915              ;
 437+ 9915              ;	Modifica: A y BC.
 438+ 9915
 439+ 9915 3A D9 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9918 E6 01        	and 1
 441+ 991A 28 17        	jr z,1F
 442+ 991C
 443+ 991C              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 991C
 445+ 991C 3A BB 8B     	ld a,(Coordenada_X)
 446+ 991F 47           	ld b,a
 447+ 9920 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9921 79           	ld a,c
 449+ 9922 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9923 38 08        	jr c,2F
 451+ 9925 47           	ld b,a
 452+ 9926 79           	ld a,c
 453+ 9927 90           	sub b
 454+ 9928 32 DA 8B     	ld (Columnas),a
 455+ 992B 18 1B        	jr 4F
 456+ 992D 79           2 ld a,c
 457+ 992E 32 DA 8B     	ld (Columnas),a
 458+ 9931 18 15        	jr 4F
 459+ 9933
 460+ 9933              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9933
 462+ 9933 3A BB 8B     1 ld a,(Coordenada_X)
 463+ 9936 81           	add c
 464+ 9937 3D           	dec a
 465+ 9938 D6 1F        	sub $1f
 466+ 993A 38 08        	jr c,3F
 467+ 993C 47           	ld b,a
 468+ 993D 79           	ld a,c
 469+ 993E 90           	sub b
 470+ 993F 32 DA 8B     	ld (Columnas),a
 471+ 9942 18 04        	jr 4F
 472+ 9944 79           3 ld a,c
 473+ 9945 32 DA 8B     	ld (Columnas),a
 474+ 9948 D9           4 exx
 475+ 9949 4F           	ld c,a
 476+ 994A D9           	exx
 477+ 994B C9            ret
 478+ 994C
 479+ 994C              ; --------------------------------------------------------------------------------------------------------------------
 480+ 994C              ;
 481+ 994C              ;   19/7/23
 482+ 994C              ;
 483+ 994C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 994C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 994C              ;
 486+ 994C              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 994C              ;			HL e IY Contienen (Puntero_objeto).
 488+ 994C              ;
 489+ 994C              ;	DESTRUYE: HL,B Y A.
 490+ 994C
 491+ 994C 3A D9 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 994F FE 02        	cp 2
 493+ 9951 38 18        	jr c,1F
 494+ 9953 28 16        	jr z,1F
 495+ 9955 E6 01        	and 1
 496+ 9957 28 0D        	jr z,3F
 497+ 9959
 498+ 9959              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9959
 500+ 9959 CD 95 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 995C
 502+ 995C 7D           9 ld a,l
 503+ 995D E6 1F        	and $1f
 504+ 995F 28 2A        	jr z,7F
 505+ 9961 2B           	dec hl
 506+ 9962 10 F8        	djnz 9B
 507+ 9964 18 25        	jr 7F
 508+ 9966
 509+ 9966              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9966
 511+ 9966 2A CA 8B     3 ld hl,(Posicion_actual)
 512+ 9969 18 20        	jr 7F
 513+ 996B
 514+ 996B 28 14        1 jr z,2F
 515+ 996D
 516+ 996D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 996D
 518+ 996D CD 95 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9970
 520+ 9970 7D           4 ld a,l
 521+ 9971 E6 1F        	and $1f
 522+ 9973 28 03        	jr z,6F
 523+ 9975 2B           	dec hl
 524+ 9976 10 F8        	djnz 4B
 525+ 9978 06 0F        6 ld b,15
 526+ 997A CD BC 99     5 call PreviousScan
 527+ 997D 10 FB        	djnz 5B
 528+ 997F 18 0A        	jr 7F
 529+ 9981
 530+ 9981              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9981
 532+ 9981 CD 95 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9984 06 0F        	ld b,15
 534+ 9986 CD BC 99     8 call PreviousScan
 535+ 9989 10 FB        	djnz 8B
 536+ 998B
 537+ 998B E5           7 push hl
 538+ 998C DD E1        	pop ix
 539+ 998E
 540+ 998E 2A CC 8B     	ld hl,(Puntero_objeto)
 541+ 9991 E5           	push hl
 542+ 9992 FD E1        	pop iy
 543+ 9994
 544+ 9994 C9           	ret
 545+ 9995
 546+ 9995              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9995              ;
 548+ 9995              ;	2/1/23
 549+ 9995              ;
 550+ 9995              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9995              ;
 552+ 9995              ;	Tras esta rutina tenemos:
 553+ 9995              ;
 554+ 9995              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9995              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9995              ;
 557+ 9995              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9995
 559+ 9995 2A CA 8B     Operandos ld hl,(Posicion_actual)
 560+ 9998 3A DA 8B     	ld a,(Columnas)
 561+ 999B 3D           	dec a
 562+ 999C 20 01        	jr nz,1F
 563+ 999E 3C           	inc a
 564+ 999F 47           1 ld b,a
 565+ 99A0 C9           	ret
 566+ 99A1
 567+ 99A1              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99A1              ;
 569+ 99A1              ;	Prepara_draw
 570+ 99A1              ;
 571+ 99A1              ;	Es una rutina de carga.
 572+ 99A1              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99A1              ;
 574+ 99A1              ;	FUNCIONAMIENTO:
 575+ 99A1              ;
 576+ 99A1              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99A1              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99A1              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99A1              ;
 580+ 99A1              ;	DESTRUYE:
 581+ 99A1              ;
 582+ 99A1              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99A1
 584+ 99A1 21 C8 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99A4 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99A5 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99A6 4E           	ld c,(hl)
 588+ 99A7 2A CA 8B     	ld hl,(Posicion_actual)
 589+ 99AA 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99AC C9           	ret
 591+ 99AD
 592+ 99AD              ;----------------------------------------------------------------------------------------------------------------
 593+ 99AD              ;
 594+ 99AD              ;	5/08/22
 595+ 99AD              ;
 596+ 99AD              ;   NextScan.
 597+ 99AD              ;
 598+ 99AD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99AD              ;
 600+ 99AD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99AD              ;
 602+ 99AD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99AD              ;
 604+ 99AD              ;       DESTRUIDOS: AF y HL !!!
 605+ 99AD              ;
 606+ 99AD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99AD              ;
 608+ 99AD
 609+ 99AD 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99AE 7C               ld a,h
 611+ 99AF E6 07            and 7
 612+ 99B1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99B2
 614+ 99B2 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99B3 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99B5 6F               ld l,a
 617+ 99B6 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99B7
 619+ 99B7 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99B8 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99BA 67               ld h,a
 622+ 99BB C9               ret
 623+ 99BC
 624+ 99BC              ;----------------------------------------------------------------------------------------------------------------
 625+ 99BC              ;
 626+ 99BC              ;	5/08/22
 627+ 99BC              ;
 628+ 99BC              ;   PreviousScan.
 629+ 99BC              ;
 630+ 99BC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99BC              ;
 632+ 99BC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99BC              ;
 634+ 99BC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99BC              ;
 636+ 99BC              ;       DESTRUIDOS: AF y HL !!!
 637+ 99BC              ;
 638+ 99BC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99BC              ;
 640+ 99BC
 641+ 99BC 7C           PreviousScan ld a,h
 642+ 99BD 25               dec h               ; Dec H.
 643+ 99BE E6 07            and 7
 644+ 99C0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99C1
 646+ 99C1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99C2 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99C4 6F               ld l,a
 649+ 99C5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99C6
 651+ 99C6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99C7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99C9 67               ld h,a
 654+ 99CA C9               ret
 655+ 99CB
 656+ 99CB
 657+ 99CB
 658+ 99CB
 659+ 99CB
 660+ 99CB
 661+ 99CB
 662+ 99CB
 663+ 99CB
 664+ 99CB
 665+ 99CB
 666+ 99CB
# file closed: Draw_XOR.asm
2066  99CB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99CB
   2+ 99CB              ; ******************************************************************************************************************************************************************************************
   3+ 99CB              ;
   4+ 99CB              ;   20/05/23
   5+ 99CB              ;
   6+ 99CB              ;	Recompone_posicion_inicio
   7+ 99CB              ;
   8+ 99CB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99CB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99CB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99CB              ;	_ a una u otra rutina.
  12+ 99CB
  13+ 99CB              Recompone_posicion_inicio
  14+ 99CB
  15+ 99CB 2A D7 8B     	ld hl,(Posicion_inicio)
  16+ 99CE 7D           	ld a,l
  17+ 99CF E6 1F        	and $1f
  18+ 99D1 28 16        	jr z,1F
  19+ 99D3
  20+ 99D3 FE 1F        	cp $1f
  21+ 99D5 28 0D        	jr z,3F
  22+ 99D7
  23+ 99D7 21 C6 8B     	ld hl,Ctrl_2
  24+ 99DA CB C6        	set 0,(hl)
  25+ 99DC 2A CC 8B     	ld hl,(Puntero_objeto)
  26+ 99DF 22 F8 8B     	ld (Repone_puntero_objeto),hl
  27+ 99E2 18 08        	jr 2F
  28+ 99E4
  29+ 99E4 CD 92 9B     3 call Mov_left
  30+ 99E7 18 03        	jr 2F
  31+ 99E9
  32+ 99E9 CD 6F 9A     1 call Mov_right
  33+ 99EC 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99EF 22 CC 8B     	ld (Puntero_objeto),hl
  35+ 99F2 C9           	ret
  36+ 99F3
  37+ 99F3              ; ******************************************************************************************************************************************************************************************
  38+ 99F3              ;
  39+ 99F3              ;   27/05/23
  40+ 99F3              ;
  41+ 99F3              ;	Mov_down
  42+ 99F3              ;
  43+ 99F3              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99F3              ;
  45+ 99F3              ;
  46+ 99F3              Mov_down
  47+ 99F3
  48+ 99F3 CD 5D 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99F6              ;																	; _ repone (Puntero_objeto).
  50+ 99F6 21 C7 8B     	ld hl,Ctrl_0
  51+ 99F9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99FB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99FB              ; 																	; _ en el caso de que no lo haya.
  54+ 99FB 3A E2 8B     	ld a,(Vel_down)
  55+ 99FE 47           	ld b,a
  56+ 99FF 2A CA 8B         ld hl,(Posicion_actual)
  57+ 9A02 CD 95 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A05 E6 02        	and 2
  59+ 9A07 28 17        	jr z,1F
  60+ 9A09
  61+ 9A09              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A09              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A09
  64+ 9A09 7C           	ld a,h
  65+ 9A0A FE 57        	cp $57
  66+ 9A0C 20 12        	jr nz,1F
  67+ 9A0E
  68+ 9A0E 7D           	ld a,l
  69+ 9A0F C6 20        	add $20
  70+ 9A11 30 0D        	jr nc,1F
  71+ 9A13
  72+ 9A13              ; ------------------------------
  73+ 9A13              ;
  74+ 9A13              ;	12/01/24
  75+ 9A13
  76+ 9A13              ;	call Reaparece_arriba
  77+ 9A13 CD 1F 9D     	call Reinicio
  78+ 9A16
  79+ 9A16              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A16
  81+ 9A16 3A 2A 8C     	ld a,(Ctrl_3)
  82+ 9A19 CB CF        	set 1,a
  83+ 9A1B 32 2A 8C     	ld (Ctrl_3),a
  84+ 9A1E
  85+ 9A1E 18 08        	jr 3F
  86+ 9A20              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A20              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A20              ; ------------------------------
  89+ 9A20
  90+ 9A20 CD AD 99     1 call NextScan
  91+ 9A23 22 CA 8B     	ld (Posicion_actual),hl
  92+ 9A26 10 DA            djnz 2B
  93+ 9A28 CD B3 94     3 call Genera_coordenadas
  94+ 9A2B C9           	ret
  95+ 9A2C
  96+ 9A2C              ; ******************************************************************************************************************************************************************************************
  97+ 9A2C              ;
  98+ 9A2C              ;   27/05/23
  99+ 9A2C              ;
 100+ 9A2C              ;	Mov_up
 101+ 9A2C              ;
 102+ 9A2C              ; 	Mueve el Sprite hacia arriba.
 103+ 9A2C              ;
 104+ 9A2C              ;
 105+ 9A2C              Mov_up
 106+ 9A2C
 107+ 9A2C CD 5D 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A2F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A2F 21 C7 8B     	ld hl,Ctrl_0
 110+ 9A32 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A34              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A34              ; 																		; _ en el caso de que no lo haya.
 113+ 9A34 3A E1 8B     	ld a,(Vel_up)
 114+ 9A37 47           	ld b,a
 115+ 9A38 2A CA 8B     	ld hl,(Posicion_actual)
 116+ 9A3B CD 95 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A3E A7           	and a
 118+ 9A3F 20 10        	jr nz,1F
 119+ 9A41
 120+ 9A41              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A41              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A41
 123+ 9A41 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A42 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A44 20 0B            jr nz,1F
 126+ 9A46 7D               ld a,l
 127+ 9A47 D6 20            sub $20
 128+ 9A49 30 06            jr nc,1F
 129+ 9A4B 25               dec h
 130+ 9A4C
 131+ 9A4C              ; -----------------------------
 132+ 9A4C CD 00 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A4F              ;	call Reinicio
 134+ 9A4F              ; -----------------------------
 135+ 9A4F
 136+ 9A4F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A51 CD BC 99     1 call PreviousScan
 138+ 9A54 22 CA 8B     	ld (Posicion_actual),hl
 139+ 9A57 10 E2            djnz 3B
 140+ 9A59 CD B3 94     2 call Genera_coordenadas
 141+ 9A5C C9           	ret
 142+ 9A5D
 143+ 9A5D              ; -----------------------------
 144+ 9A5D              ;
 145+ 9A5D              ;	27/5/23
 146+ 9A5D              ;
 147+ 9A5D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A5D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A5D              ;
 150+ 9A5D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A5D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A5D              ;
 153+ 9A5D              ;	Modifica: A y (Puntero_objeto).
 154+ 9A5D
 155+ 9A5D 3A C6 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A60 CB 47        	bit 0,a
 157+ 9A62 C8           	ret z
 158+ 9A63 CB 87        	res 0,a
 159+ 9A65 32 C6 8B     	ld (Ctrl_2),a
 160+ 9A68 2A F8 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A6B 22 CC 8B     	ld (Puntero_objeto),hl
 162+ 9A6E C9           	ret
 163+ 9A6F
 164+ 9A6F              ; ******************************************************************************************************************************************************************************************
 165+ 9A6F              ;
 166+ 9A6F              ;	19/10/22
 167+ 9A6F              ;
 168+ 9A6F              ;	Mov_right.
 169+ 9A6F              ;
 170+ 9A6F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A6F              ;
 172+ 9A6F
 173+ 9A6F 3A C7 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A72 CB 77        	bit 6,a
 175+ 9A74 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A76
 177+ 9A76 CD AE 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A79 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A7A
 180+ 9A7A 21 C7 8B     	ld hl,Ctrl_0
 181+ 9A7D CB E6        	set 4,(hl)
 182+ 9A7F 18 52        	jr 8F
 183+ 9A81
 184+ 9A81 21 C7 8B     10 ld hl,Ctrl_0
 185+ 9A84 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A86              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A86              ; 																	; _ en el caso de que no lo haya.
 188+ 9A86 3A BB 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A89 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A8B 20 46        	jr nz,8F
 191+ 9A8D
 192+ 9A8D 3A CE 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A90 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A91 28 40        	jr z,8F
 195+ 9A93
 196+ 9A93              ; ---------- ---------- ----------
 197+ 9A93              ;
 198+ 9A93              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A93
 200+ 9A93 3A E0 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A96 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A98 28 11        	jr z,1F
 203+ 9A9A 38 06        	jr c,6F
 204+ 9A9C FE 04        	cp 4
 205+ 9A9E 28 14        	jr z,7F
 206+ 9AA0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AA2
 208+ 9AA2              ; ---------- ---------- ----------
 209+ 9AA2              ;
 210+ 9AA2              ; Perfiles de velocidad
 211+ 9AA2              ;
 212+ 9AA2
 213+ 9AA2 3A CE 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AA5 FE FE        	cp $fe
 215+ 9AA7 20 2A        	jr nz,8F
 216+ 9AA9 18 10        	jr 3F
 217+ 9AAB 3A CE 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AAE FE FD        	cp $fd
 219+ 9AB0 20 21        	jr nz,8F
 220+ 9AB2 18 07        	jr 3F
 221+ 9AB4 3A CE 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AB7 FE FB        	cp $fb
 223+ 9AB9 20 18        	jr nz,8F
 224+ 9ABB
 225+ 9ABB              ; ---------- ---------- ----------
 226+ 9ABB
 227+ 9ABB              3
 228+ 9ABB CD EE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ABE              ;	call Reinicio
 230+ 9ABE
 231+ 9ABE              ; ---------- ---------- ----------
 232+ 9ABE              ;
 233+ 9ABE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ABE
 235+ 9ABE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AC0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AC1 CD DA 9A     	call DESPLZ_DER
 238+ 9AC4 C1           	pop bc
 239+ 9AC5 10 F9        	djnz 5B
 240+ 9AC7 2A CA 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ACA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ACB 22 CA 8B     	ld (Posicion_actual),hl
 243+ 9ACE CD B3 94     	call Genera_coordenadas
 244+ 9AD1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AD3
 246+ 9AD3              ; ---------- ---------- ----------
 247+ 9AD3
 248+ 9AD3 2A CA 8B     8 ld hl,(Posicion_actual)
 249+ 9AD6 CD DA 9A     	call DESPLZ_DER
 250+ 9AD9 C9           2 ret
 251+ 9ADA
 252+ 9ADA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ADA              ;
 254+ 9ADA              ;	22/9/22
 255+ 9ADA              ;
 256+ 9ADA
 257+ 9ADA CD E9 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9ADD CD 35 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AE0 CD 5E 9B         call Ciclo_completo
 260+ 9AE3 21 C7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AE6 CB FE        	set 7,(hl)
 262+ 9AE8 C9           	ret
 263+ 9AE9
 264+ 9AE9              ; ******************************************************************************************************************************************************************************************
 265+ 9AE9              ;	15/02/23
 266+ 9AE9              ;
 267+ 9AE9
 268+ 9AE9 3A E0 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AEC 47           	ld b,a
 270+ 9AED 2A D3 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AF0 23           1 inc hl
 272+ 9AF1 23           	inc hl
 273+ 9AF2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AF4 22 D3 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AF7 CD 94 90     	call Extrae_address
 276+ 9AFA 22 CC 8B     	ld (Puntero_objeto),hl
 277+ 9AFD
 278+ 9AFD              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AFD
 280+ 9AFD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AFD              ; Cuántos movimientos hemos hecho ??
 282+ 9AFD              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AFD
 284+ 9AFD 2A CF 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B00 EB           	ex de,hl
 286+ 9B01 A7           	and a
 287+ 9B02 ED 52        	sbc hl,de
 288+ 9B04 CB 3D        	srl l
 289+ 9B06 3E 08        6 ld a,8
 290+ 9B08 95           	sub l
 291+ 9B09 30 1E        	jr nc,3F
 292+ 9B0B
 293+ 9B0B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B0B              ; B="0".
 295+ 9B0B
 296+ 9B0B 04           4 inc b
 297+ 9B0C 3C           	inc a
 298+ 9B0D 20 FC        	jr nz,4B
 299+ 9B0F 78           	ld a,b
 300+ 9B10 08           	ex af,af
 301+ 9B11 2A CF 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B14 23           5 inc hl
 303+ 9B15 23           	inc hl
 304+ 9B16 10 FC        	djnz 5B
 305+ 9B18 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B1B CD 94 90     	call Extrae_address
 307+ 9B1E 22 CC 8B     	ld (Puntero_objeto),hl
 308+ 9B21
 309+ 9B21              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B21              ; _(Posicion_actual).
 311+ 9B21
 312+ 9B21 21 CA 8B     	ld hl,Posicion_actual
 313+ 9B24 34           	inc (hl)
 314+ 9B25 08               ex af,af
 315+ 9B26 6F           	ld l,a
 316+ 9B27 18 DD        	jr 6B
 317+ 9B29
 318+ 9B29              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B29
 320+ 9B29 47           3 ld b,a
 321+ 9B2A 2A D1 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B2D 23           2 inc hl
 323+ 9B2E 23           	inc hl
 324+ 9B2F 10 FC        	djnz 2B
 325+ 9B31 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B34 C9           8 ret
 327+ 9B35
 328+ 9B35              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B35              ;
 330+ 9B35              ;	24/7/22
 331+ 9B35              ;
 332+ 9B35              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B35              ;
 334+ 9B35              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B35              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B35              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B35
 338+ 9B35 3A CE 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B38 A7           	and a
 340+ 9B39 20 1F        	jr nz,1F
 341+ 9B3B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B3D 32 CE 8B         ld (CTRL_DESPLZ),a
 343+ 9B40
 344+ 9B40 21 C9 8B     	ld hl,Columns
 345+ 9B43 34           	inc (hl)
 346+ 9B44 3A D9 8B     	ld a,(Cuad_objeto)
 347+ 9B47 E6 01        	and 1
 348+ 9B49 28 0F        	jr z,1F
 349+ 9B4B 2A CA 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B4E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B4F 22 CA 8B     	ld (Posicion_actual),hl
 352+ 9B52 CD B3 94     	call Genera_coordenadas
 353+ 9B55 CD BA 9C     	call Inc_CTRL_DESPLZ
 354+ 9B58 18 03        	jr 2F
 355+ 9B5A CD BA 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B5D C9           2 ret
 357+ 9B5E
 358+ 9B5E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B5E              ;
 360+ 9B5E              ;	24/7/22
 361+ 9B5E              ;
 362+ 9B5E              ;	Ciclo_completo.
 363+ 9B5E              ;
 364+ 9B5E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B5E              ;
 366+ 9B5E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B5E              ; 	Decrementamos (Columns).
 368+ 9B5E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B5E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B5E
 371+ 9B5E
 372+ 9B5E 3A CE 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B61 FE FF        	cp $ff
 374+ 9B63 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B65 E6 F0        	and $f0
 376+ 9B67 20 28        	jr nz,3F
 377+ 9B69
 378+ 9B69              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B69
 380+ 9B69 3A CE 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B6C 47           	ld b,a
 382+ 9B6D 3E F8        	ld a,$f8
 383+ 9B6F 80           	add b
 384+ 9B70 32 CE 8B     	ld (CTRL_DESPLZ),a
 385+ 9B73 18 1C        	jr 3F
 386+ 9B75 21 C9 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B78 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B79 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B7A 32 CE 8B     	ld (CTRL_DESPLZ),a
 390+ 9B7D 3A D9 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B80 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B82 20 0A        	jr nz,2F
 393+ 9B84 2A CA 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B87 23           	inc hl
 395+ 9B88 22 CA 8B     	ld (Posicion_actual),hl
 396+ 9B8B CD B3 94     	call Genera_coordenadas
 397+ 9B8E
 398+ 9B8E              ; Inicia el puntero de Sprite.
 399+ 9B8E
 400+ 9B8E CD A9 90     2 call Inicia_puntero_objeto_der
 401+ 9B91 C9           3 ret
 402+ 9B92
 403+ 9B92              ; ******************************************************************************************************************************************************************************************
 404+ 9B92              ;
 405+ 9B92              ;	15/02/23
 406+ 9B92              ;
 407+ 9B92              ;	Mov_left.
 408+ 9B92              ;
 409+ 9B92              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B92              ;
 411+ 9B92              Mov_left
 412+ 9B92
 413+ 9B92 21 C7 8B     	ld hl,Ctrl_0
 414+ 9B95 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B97              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B97              ; 																	; _ en el caso de que no lo haya.
 417+ 9B97 3A C7 8B     	ld a,(Ctrl_0)
 418+ 9B9A CB 77        	bit 6,a
 419+ 9B9C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B9E
 421+ 9B9E CD B4 9C     	call Stop_Amadeus_left
 422+ 9BA1 C8           	ret z
 423+ 9BA2 20 4A        	jr nz,8F
 424+ 9BA4
 425+ 9BA4 3A BB 8B     11 ld a,(Coordenada_X)
 426+ 9BA7 A7           	and a
 427+ 9BA8 20 44        	jr nz,8F
 428+ 9BAA
 429+ 9BAA 3A CE 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BAD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BAE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BB0
 433+ 9BB0              ; ---------- ---------- ----------
 434+ 9BB0
 435+ 9BB0 3A DF 8B     	ld a,(Vel_left)
 436+ 9BB3 FE 02        	cp 2
 437+ 9BB5 28 0F        	jr z,1F
 438+ 9BB7 38 04        	jr c,6F
 439+ 9BB9 FE 04        	cp 4
 440+ 9BBB 28 12        	jr z,7F
 441+ 9BBD
 442+ 9BBD              ; ---------- ---------- ----------
 443+ 9BBD
 444+ 9BBD 3A CE 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BC0 FE F8        	cp $f8
 446+ 9BC2 20 2A        	jr nz,8F
 447+ 9BC4 18 10        	jr 4F
 448+ 9BC6 3A CE 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BC9 FE F9        	cp $f9
 450+ 9BCB 20 21        	jr nz,8F
 451+ 9BCD 18 07        	jr 4F
 452+ 9BCF 3A CE 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BD2 FE FB        	cp $fb
 454+ 9BD4 20 18        	jr nz,8F
 455+ 9BD6
 456+ 9BD6              ; ---------- ---------- ----------
 457+ 9BD6
 458+ 9BD6              4
 459+ 9BD6 CD DC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BD9              ;	call Reinicio
 461+ 9BD9
 462+ 9BD9              ; ---------- ---------- ----------
 463+ 9BD9
 464+ 9BD9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BDB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BDC
 467+ 9BDC              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BDC              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BDC
 470+ 9BDC CD F5 9B     	call DESPLZ_IZQ
 471+ 9BDF C1           	pop bc
 472+ 9BE0 10 F9        	djnz 5B
 473+ 9BE2 2A CA 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BE5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BE6 22 CA 8B     	ld (Posicion_actual),hl
 476+ 9BE9 CD B3 94     	call Genera_coordenadas
 477+ 9BEC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BEE
 479+ 9BEE              ; ---------- ---------- ----------
 480+ 9BEE
 481+ 9BEE              ; Movemos, no hay recolocación.
 482+ 9BEE
 483+ 9BEE 2A CA 8B     8 ld hl,(Posicion_actual)
 484+ 9BF1 CD F5 9B     	call DESPLZ_IZQ
 485+ 9BF4 C9           2 ret
 486+ 9BF5
 487+ 9BF5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BF5              ;
 489+ 9BF5              ;	22/9/22
 490+ 9BF5
 491+ 9BF5              DESPLZ_IZQ
 492+ 9BF5
 493+ 9BF5 CD 04 9C     	call Desplaza_izquierda
 494+ 9BF8 CD 50 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BFB CD 78 9C     	call Ciclo_completo_2
 496+ 9BFE 21 C7 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C01 CB BE        	res 7,(hl)
 498+ 9C03 C9           	ret
 499+ 9C04
 500+ 9C04              Desplaza_izquierda
 501+ 9C04
 502+ 9C04 3A DF 8B     	ld a,(Vel_left)
 503+ 9C07 47           	ld b,a
 504+ 9C08 2A D5 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C0B 23           1 inc hl
 506+ 9C0C 23           	inc hl
 507+ 9C0D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C0F 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C12 CD 94 90     	call Extrae_address
 510+ 9C15 22 CC 8B     	ld (Puntero_objeto),hl
 511+ 9C18
 512+ 9C18              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C18
 514+ 9C18              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C18              ; Cuántos movimientos hemos hecho ??
 516+ 9C18              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C18
 518+ 9C18 2A D1 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C1B EB           	ex de,hl
 520+ 9C1C A7           	and a
 521+ 9C1D ED 52        	sbc hl,de
 522+ 9C1F CB 3D        	srl l
 523+ 9C21 3E 08        6 ld a,8
 524+ 9C23 95           	sub l
 525+ 9C24 30 1E        	jr nc,3F
 526+ 9C26
 527+ 9C26              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C26              ; B="0".
 529+ 9C26
 530+ 9C26 04           4 inc b
 531+ 9C27 3C           	inc a
 532+ 9C28 20 FC        	jr nz,4B
 533+ 9C2A 78           	ld a,b
 534+ 9C2B 08           	ex af,af
 535+ 9C2C 2A D1 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C2F 23           5 inc hl
 537+ 9C30 23           	inc hl
 538+ 9C31 10 FC        	djnz 5B
 539+ 9C33 22 D5 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C36 CD 94 90     	call Extrae_address
 541+ 9C39 22 CC 8B     	ld (Puntero_objeto),hl
 542+ 9C3C
 543+ 9C3C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C3C              ; _(Posicion_actual).
 545+ 9C3C
 546+ 9C3C 21 CA 8B     	ld hl,Posicion_actual
 547+ 9C3F 35           	dec (hl)
 548+ 9C40 08           	ex af,af
 549+ 9C41 6F           	ld l,a
 550+ 9C42 18 DD        	jr 6B
 551+ 9C44
 552+ 9C44              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C44
 554+ 9C44 47           3 ld b,a
 555+ 9C45 2A CF 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C48 23           2 inc hl
 557+ 9C49 23           	inc hl
 558+ 9C4A 10 FC        	djnz 2B
 559+ 9C4C 22 D3 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C4F C9           8 ret
 561+ 9C50
 562+ 9C50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C50              ;
 564+ 9C50              ;	modifica_parametros_1er_DESPLZ
 565+ 9C50              ;
 566+ 9C50              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C50              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C50              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C50
 570+ 9C50 3A CE 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C53 A7           	and a
 572+ 9C54 20 1E        	jr nz,1F
 573+ 9C56 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C57 32 CE 8B         ld (CTRL_DESPLZ),a
 575+ 9C5A 21 C9 8B     	ld hl,Columns
 576+ 9C5D 34           	inc (hl)
 577+ 9C5E 3A D9 8B     	ld a,(Cuad_objeto)
 578+ 9C61 E6 01        	and 1
 579+ 9C63 20 0F        	jr nz,1F
 580+ 9C65 2A CA 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C68 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C69 22 CA 8B     	ld (Posicion_actual),hl
 583+ 9C6C CD B3 94     	call Genera_coordenadas
 584+ 9C6F CD CB 9C     	call Dec_CTRL_DESPLZ
 585+ 9C72 18 03        	jr 2F
 586+ 9C74 CD CB 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C77 C9           2 ret
 588+ 9C78
 589+ 9C78              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C78
 591+ 9C78 3A CE 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C7B FE F7        	cp $f7
 593+ 9C7D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C7F 30 2C        	jr nc,3F
 595+ 9C81
 596+ 9C81              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C81
 598+ 9C81 06 00        	ld b,0
 599+ 9C83 04           4 inc b
 600+ 9C84 3C           	inc a
 601+ 9C85 FE F7        	cp $f7
 602+ 9C87 20 FA        	jr nz,4B
 603+ 9C89 3E FF        	ld a,$ff
 604+ 9C8B 90           	sub b
 605+ 9C8C 32 CE 8B     	ld (CTRL_DESPLZ),a
 606+ 9C8F 18 1C        	jr 3F
 607+ 9C91
 608+ 9C91              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C91
 610+ 9C91 21 C9 8B     1 ld hl,Columns
 611+ 9C94 35           	dec (hl)
 612+ 9C95 AF           	xor a
 613+ 9C96 32 CE 8B     	ld (CTRL_DESPLZ),a
 614+ 9C99 3A D9 8B     	ld a,(Cuad_objeto)
 615+ 9C9C E6 01        	and 1
 616+ 9C9E 28 0A        	jr z,2F
 617+ 9CA0 2A CA 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CA3 2B           	dec hl
 619+ 9CA4 22 CA 8B     	ld (Posicion_actual),hl
 620+ 9CA7 CD B3 94     	call Genera_coordenadas
 621+ 9CAA
 622+ 9CAA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CAA
 624+ 9CAA CD BC 90     2 call Inicia_puntero_objeto_izq
 625+ 9CAD C9           3 ret
 626+ 9CAE
 627+ 9CAE              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CAE              ;
 629+ 9CAE              ;	19/10/22
 630+ 9CAE              ;
 631+ 9CAE              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CAE              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CAE
 634+ 9CAE 3A BB 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CB1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CB3 C9           	ret
 637+ 9CB4
 638+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CB4              ;
 640+ 9CB4              ;	19/10/22
 641+ 9CB4              ;
 642+ 9CB4              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CB4              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CB4
 645+ 9CB4 3A BB 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CB7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CB9 C9           	ret
 648+ 9CBA
 649+ 9CBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CBA              ;
 651+ 9CBA              ;	24/7/22
 652+ 9CBA              ;
 653+ 9CBA              ;	Inc_CTRL_DESPLZ
 654+ 9CBA              ;
 655+ 9CBA              ;
 656+ 9CBA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CBA
 658+ 9CBA 21 CE 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CBD 3A E0 8B     	ld a,(Vel_right)
 660+ 9CC0 A7           	and a
 661+ 9CC1 28 06        	jr z,1F
 662+ 9CC3 47           	ld b,a
 663+ 9CC4 34           3 inc (hl)
 664+ 9CC5 10 FD        	djnz 3B
 665+ 9CC7 18 01        	jr 2F
 666+ 9CC9 34           1 inc (hl)
 667+ 9CCA C9           2 ret
 668+ 9CCB
 669+ 9CCB              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CCB              ;
 671+ 9CCB              ;	5/2/23
 672+ 9CCB              ;
 673+ 9CCB              ;	Dec_CTRL_DESPLZ
 674+ 9CCB              ;
 675+ 9CCB              ;
 676+ 9CCB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CCB
 678+ 9CCB 21 CE 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CCE 3A DF 8B     	ld a,(Vel_left)
 680+ 9CD1 A7           	and a
 681+ 9CD2 28 06        	jr z,1F
 682+ 9CD4 47           	ld b,a
 683+ 9CD5 35           3 dec (hl)
 684+ 9CD6 10 FD        	djnz 3B
 685+ 9CD8 18 01        	jr 2F
 686+ 9CDA 35           1 dec (hl)
 687+ 9CDB C9           2 ret
 688+ 9CDC
 689+ 9CDC              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CDC
 691+ 9CDC 2A CA 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CDF 01 1F 00     	ld bc,31
 693+ 9CE2 A7           	and a
 694+ 9CE3 ED 4A        	adc hl,bc
 695+ 9CE5 22 CA 8B     	ld (Posicion_actual),hl
 696+ 9CE8 21 C7 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CEB CB C6        	set 0,(hl)
 698+ 9CED C9           	ret
 699+ 9CEE
 700+ 9CEE              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CEE
 702+ 9CEE 2A CA 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CF1 01 1F 00     	ld bc,31
 704+ 9CF4 A7           	and a
 705+ 9CF5 ED 42        	sbc hl,bc
 706+ 9CF7 22 CA 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CFA 21 C7 8B     	ld hl,Ctrl_0
 708+ 9CFD CB CE        	set 1,(hl)
 709+ 9CFF C9           	ret
 710+ 9D00
 711+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D00
 713+ 9D00 24           Reaparece_abajo inc h
 714+ 9D01 01 E0 17     	ld bc,$17e0
 715+ 9D04 A7           	and a
 716+ 9D05 ED 4A        	adc hl,bc
 717+ 9D07 22 CA 8B     	ld (Posicion_actual),hl
 718+ 9D0A 21 C7 8B     	ld hl,Ctrl_0
 719+ 9D0D CB D6        	set 2,(hl)
 720+ 9D0F C9           	ret
 721+ 9D10
 722+ 9D10              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D10
 724+ 9D10 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D13 A7           	and a
 726+ 9D14 ED 42        	sbc hl,bc
 727+ 9D16 22 CA 8B     	ld (Posicion_actual),hl
 728+ 9D19 21 C7 8B     	ld hl,Ctrl_0
 729+ 9D1C CB DE        	set 3,(hl)
 730+ 9D1E C9           	ret
 731+ 9D1F
 732+ 9D1F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D1F              ;
 734+ 9D1F              ;	15/07/23
 735+ 9D1F
 736+ 9D1F              Reinicio
 737+ 9D1F
 738+ 9D1F              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D1F
 740+ 9D1F AF           	xor a
 741+ 9D20 21 EF 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D23 CD 41 9D     	call Limpia_contenido_hl
 743+ 9D26
 744+ 9D26 21 CA 8B     	ld hl,Posicion_actual
 745+ 9D29 CD 41 9D     	call Limpia_contenido_hl
 746+ 9D2C
 747+ 9D2C CD 95 92     	call Inicializa_Puntero_indice_mov
 748+ 9D2F CD 40 9E     	call Inicia_Puntero_mov
 749+ 9D32
 750+ 9D32 21 F1 8B     	ld hl,Incrementa_puntero
 751+ 9D35 06 05        	ld b,5
 752+ 9D37 77           1 ld (hl),a
 753+ 9D38 23           	inc hl
 754+ 9D39 10 FC        	djnz 1B
 755+ 9D3B
 756+ 9D3B 21 C6 8B     	ld hl,Ctrl_2
 757+ 9D3E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D40
 759+ 9D40 C9           	ret
 760+ 9D41
 761+ 9D41 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D42 23           	inc hl
 763+ 9D43 77           	ld (hl),a
 764+ 9D44 C9           	ret
 765+ 9D45
 766+ 9D45              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D45              ;
 768+ 9D45              ;	18/6/24
 769+ 9D45              ;
 770+ 9D45
 771+ 9D45              Amadeus_a_izquierda
 772+ 9D45
 773+ 9D45              ;	Actualiza contador de movimientos.
 774+ 9D45
 775+ 9D45 21 7D 89     	ld hl,Comm_Amadeus
 776+ 9D48 35           	dec (hl)
 777+ 9D49 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D4B
 779+ 9D4B 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D4E 2B           	dec hl
 781+ 9D4F 2B           	dec hl
 782+ 9D50 2B           	dec hl
 783+ 9D51 2B           	dec hl
 784+ 9D52 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D55
 786+ 9D55 21 2A 8C     	ld hl,Ctrl_3
 787+ 9D58 CB EE        	set 5,(hl)
 788+ 9D5A
 789+ 9D5A C9           	ret
 790+ 9D5B
 791+ 9D5B 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D5C C9           	ret
 793+ 9D5D
 794+ 9D5D
 795+ 9D5D              Amadeus_a_derecha
 796+ 9D5D
 797+ 9D5D              ;	Actualiza contador de movimientos.
 798+ 9D5D
 799+ 9D5D 21 7D 89     	ld hl,Comm_Amadeus
 800+ 9D60 34           	inc (hl)
 801+ 9D61 3E 7A        	ld a,$7a
 802+ 9D63 BE           	cp (hl)
 803+ 9D64 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D66
 805+ 9D66 2A 7B 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D69 23           	inc hl
 807+ 9D6A 23           	inc hl
 808+ 9D6B 23           	inc hl
 809+ 9D6C 23           	inc hl
 810+ 9D6D 22 7B 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D70
 812+ 9D70 21 2A 8C     	ld hl,Ctrl_3
 813+ 9D73 CB EE        	set 5,(hl)
 814+ 9D75 C9           	ret
 815+ 9D76
 816+ 9D76 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D77 C9           	ret
# file closed: Direcciones.asm
2067  9D78              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D78              ; ----- ----- ----- ----- -----
   2+ 9D78              ;
   3+ 9D78              ;   28/12/23
   4+ 9D78
   5+ 9D78              Movimiento
   6+ 9D78
   7+ 9D78              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D78
   9+ 9D78 3A C6 8B         ld a,(Ctrl_2)
  10+ 9D7B CB 57            bit 2,a
  11+ 9D7D 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D7F
  13+ 9D7F 2A ED 8B         ld hl,(Puntero_mov)
  14+ 9D82 7E               ld a,(hl)
  15+ 9D83
  16+ 9D83              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D83
  18+ 9D83              Inicia_desplazamiento.
  19+ 9D83
  20+ 9D83              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D83
  22+ 9D83 CD 76 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D86
  24+ 9D86              ; Iniciamos (Repetimos_mov).
  25+ 9D86
  26+ 9D86 7E               ld a,(hl)
  27+ 9D87 E6 0F            and $0f
  28+ 9D89 32 F3 8B         ld (Repetimos_desplazamiento),a
  29+ 9D8C 32 F4 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D8F
  31+ 9D8F              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D8F
  33+ 9D8F 23               inc hl
  34+ 9D90 7E               ld a,(hl)
  35+ 9D91 32 F6 8B         ld (Cola_de_desplazamiento),a
  36+ 9D94 2B               dec hl
  37+ 9D95
  38+ 9D95 21 C6 8B         ld hl,Ctrl_2
  39+ 9D98 CB D6            set 2,(hl)
  40+ 9D9A
  41+ 9D9A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D9A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D9A
  44+ 9D9A              Desplazamiento_iniciado
  45+ 9D9A
  46+ 9D9A CD 4A 9E         call Aplica_desplazamiento
  47+ 9D9D
  48+ 9D9D              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D9D
  50+ 9D9D 3A 2A 8C         ld a,(Ctrl_3)
  51+ 9DA0 CB 4F            bit 1,a
  52+ 9DA2 C0               ret nz
  53+ 9DA3
  54+ 9DA3 21 F3 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DA6 35               dec (hl)
  56+ 9DA7 C0               ret nz
  57+ 9DA8
  58+ 9DA8              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DA8              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DA8              ; Analiza (Cola_de_desplazamiento).
  61+ 9DA8
  62+ 9DA8 3A F6 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DAB A7               and a
  64+ 9DAC CC 9F 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DAF 28 30            jr z,Reinicia_el_movimiento
  66+ 9DB1
  67+ 9DB1 FE FF            cp $ff
  68+ 9DB3 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DB5
  70+ 9DB5 FE FE            cp $fe
  71+ 9DB7 CC 24 9E         call z,Fijamos_bucle
  72+ 9DBA 28 25            jr z,Reinicia_el_movimiento
  73+ 9DBC
  74+ 9DBC FE FD            cp $fd
  75+ 9DBE 20 11            jr nz,1F
  76+ 9DC0
  77+ 9DC0              ; ---
  78+ 9DC0              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DC0
  80+ 9DC0 3A C6 8B         ld a,(Ctrl_2)
  81+ 9DC3 CB 5F            bit 3,a
  82+ 9DC5 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DC7
  84+ 9DC7              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DC7
  86+ 9DC7 21 C6 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DCA CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DCC
  89+ 9DCC CD 35 9E         call Inicia_Repetimos_movimiento
  90+ 9DCF 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DD1              ; ---
  92+ 9DD1
  93+ 9DD1 FE 01        1 cp 1
  94+ 9DD3 CA 0E 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DD6
  96+ 9DD6 3D               dec a
  97+ 9DD7 32 F6 8B         ld (Cola_de_desplazamiento),a
  98+ 9DDA
  99+ 9DDA 3A F4 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DDD 32 F3 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DE0              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DE0 C9               ret
 103+ 9DE1
 104+ 9DE1              Reinicia_el_movimiento
 105+ 9DE1
 106+ 9DE1 3A C6 8B         ld a,(Ctrl_2)
 107+ 9DE4 CB 5F            bit 3,a
 108+ 9DE6 28 1B            jr z,2F
 109+ 9DE8
 110+ 9DE8              ; (Cola_de_desplazamiento)="254".
 111+ 9DE8
 112+ 9DE8 21 F5 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DEB 35               dec (hl)
 114+ 9DEC 20 15            jr nz,2F
 115+ 9DEE
 116+ 9DEE              ; Fin de las repeticiones del último movimiento.
 117+ 9DEE
 118+ 9DEE 21 C6 8B         ld hl,Ctrl_2
 119+ 9DF1 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DF3
 121+ 9DF3 2A ED 8B         ld hl,(Puntero_mov)
 122+ 9DF6 23               inc hl
 123+ 9DF7 23               inc hl
 124+ 9DF8 23               inc hl
 125+ 9DF9 22 ED 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DFC              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DFC 7E               ld a,(hl)
 128+ 9DFD 32 F6 8B         ld (Cola_de_desplazamiento),a
 129+ 9E00
 130+ 9E00 C3 A8 9D         jp Cola
 131+ 9E03
 132+ 9E03 CD 40 9E     2 call Inicia_Puntero_mov
 133+ 9E06
 134+ 9E06 21 C6 8B         ld hl,Ctrl_2
 135+ 9E09 CB 96            res 2,(hl)
 136+ 9E0B
 137+ 9E0B C3 78 9D         jp Movimiento
 138+ 9E0E
 139+ 9E0E              Siguiente_desplazamiento
 140+ 9E0E
 141+ 9E0E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E0E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E0E
 144+ 9E0E 21 C6 8B         ld hl,Ctrl_2
 145+ 9E11 CB 96            res 2,(hl)
 146+ 9E13
 147+ 9E13 2A ED 8B         ld hl,(Puntero_mov)
 148+ 9E16 23               inc hl
 149+ 9E17 23               inc hl
 150+ 9E18 22 ED 8B         ld (Puntero_mov),hl
 151+ 9E1B
 152+ 9E1B 7E               ld a,(hl)
 153+ 9E1C A7               and a
 154+ 9E1D CC 9F 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E20 CA E1 9D         jp z,Reinicia_el_movimiento
 156+ 9E23
 157+ 9E23 C9               ret
 158+ 9E24
 159+ 9E24              ; Subrutinas -----------------------------------------
 160+ 9E24              ; ---------- --------- --------- ---------- ----------
 161+ 9E24              ;
 162+ 9E24              ;   24/07/23
 163+ 9E24              ;
 164+ 9E24              ;   Fijamos_bucle
 165+ 9E24              ;
 166+ 9E24              ;
 167+ 9E24
 168+ 9E24              Fijamos_bucle
 169+ 9E24
 170+ 9E24 3A F1 8B         ld a,(Incrementa_puntero)
 171+ 9E27 3C               inc a
 172+ 9E28 32 F2 8B         ld (Incrementa_puntero_backup),a
 173+ 9E2B
 174+ 9E2B CD 9F 9E         call Incrementa_Puntero_indice_mov
 175+ 9E2E 2A EB 8B         ld hl,(Puntero_indice_mov)
 176+ 9E31 22 EF 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E34 C9               ret
 178+ 9E35
 179+ 9E35              ; ---------- --------- --------- ---------- ----------
 180+ 9E35              ;
 181+ 9E35              ;   07/7/23
 182+ 9E35              ;
 183+ 9E35              ;   Inicia_Repetimos_movimiento
 184+ 9E35              ;
 185+ 9E35              ;
 186+ 9E35
 187+ 9E35              Inicia_Repetimos_movimiento
 188+ 9E35
 189+ 9E35              ; Iniciamos (Repetimos_movimiento).
 190+ 9E35
 191+ 9E35 DD 2A ED 8B      ld ix,(Puntero_mov)
 192+ 9E39 DD 7E 02         ld a,(ix+2)
 193+ 9E3C 32 F5 8B         ld (Repetimos_movimiento),a
 194+ 9E3F
 195+ 9E3F C9               ret
 196+ 9E40
 197+ 9E40              ; ---------- --------- --------- ---------- ----------
 198+ 9E40              ;
 199+ 9E40              ;   26/6/23
 200+ 9E40              ;
 201+ 9E40              ;   Inicia_Puntero_mov
 202+ 9E40              ;
 203+ 9E40              ;
 204+ 9E40
 205+ 9E40 2A EB 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E43 CD 94 90         call Extrae_address
 207+ 9E46 22 ED 8B         ld (Puntero_mov),hl
 208+ 9E49 C9               ret
 209+ 9E4A
 210+ 9E4A              ; ---------- --------- --------- ---------- ----------
 211+ 9E4A              ;
 212+ 9E4A              ;   27/06/23
 213+ 9E4A              ;
 214+ 9E4A              ;   Aplica_movimiento.
 215+ 9E4A
 216+ 9E4A              Aplica_desplazamiento
 217+ 9E4A
 218+ 9E4A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E4A
 220+ 9E4A 2A ED 8B         ld hl, (Puntero_mov)
 221+ 9E4D
 222+ 9E4D 7E               ld a,(hl)
 223+ 9E4E E6 F0            and $f0
 224+ 9E50 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E51
 226+ 9E51 CB 7E            bit 7,(hl)
 227+ 9E53 28 03            jr z,1F
 228+ 9E55 CD 2C 9A         call Mov_up
 229+ 9E58 2A ED 8B     1 ld hl, (Puntero_mov)
 230+ 9E5B CB 76            bit 6,(hl)
 231+ 9E5D 28 03            jr z,2F
 232+ 9E5F CD F3 99         call Mov_down
 233+ 9E62
 234+ 9E62              ; Se ha aplicado reinicio ???
 235+ 9E62              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E62
 237+ 9E62              ;    ld a,(Ctrl_3)
 238+ 9E62              ;    bit 1,a
 239+ 9E62              ;    ret nz
 240+ 9E62
 241+ 9E62 2A ED 8B     2 ld hl, (Puntero_mov)
 242+ 9E65 CB 6E            bit 5,(hl)
 243+ 9E67 28 03            jr z,3F
 244+ 9E69 CD 92 9B         call Mov_left
 245+ 9E6C 2A ED 8B     3 ld hl, (Puntero_mov)
 246+ 9E6F CB 66            bit 4,(hl)
 247+ 9E71 C8               ret z
 248+ 9E72 CD 6F 9A         call Mov_right
 249+ 9E75 C9               ret
 250+ 9E76
 251+ 9E76              ; ---------- --------- --------- ---------- ----------
 252+ 9E76              ;
 253+ 9E76              ;   26/06/23
 254+ 9E76              ;
 255+ 9E76              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E76
 257+ 9E76              Ajusta_velocidad_desplazamiento
 258+ 9E76
 259+ 9E76              ; 1er byte de la cadena de movimiento.
 260+ 9E76              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E76
 262+ 9E76 CD 94 9E         call Extrae_nibble_alto
 263+ 9E79
 264+ 9E79 32 E1 8B         ld (Vel_up),a
 265+ 9E7C 79               ld a,c
 266+ 9E7D E6 0F            and $0f
 267+ 9E7F 32 E2 8B         ld (Vel_down),a
 268+ 9E82
 269+ 9E82              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E82              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E82
 272+ 9E82 23               inc hl
 273+ 9E83 CD 94 9E         call Extrae_nibble_alto
 274+ 9E86
 275+ 9E86 32 DF 8B         ld (Vel_left),a
 276+ 9E89 79               ld a,c
 277+ 9E8A E6 0F            and $0f
 278+ 9E8C 32 E0 8B         ld (Vel_right),a
 279+ 9E8F
 280+ 9E8F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E8F
 282+ 9E8F 23               inc hl
 283+ 9E90 22 ED 8B         ld (Puntero_mov),hl
 284+ 9E93 C9               ret
 285+ 9E94
 286+ 9E94 06 04        Extrae_nibble_alto ld b,4
 287+ 9E96 7E               ld a,(hl)
 288+ 9E97 4F               ld c,a
 289+ 9E98 E6 F0            and $f0
 290+ 9E9A CB 3F        1 srl a
 291+ 9E9C 10 FC            djnz 1B
 292+ 9E9E C9               ret
 293+ 9E9F
 294+ 9E9F              ; ---------- --------- --------- ---------- ----------
 295+ 9E9F              ;
 296+ 9E9F              ;   5/7/23
 297+ 9E9F              ;
 298+ 9E9F              ;   Incrementa_Puntero_indice_mov
 299+ 9E9F
 300+ 9E9F              Incrementa_Puntero_indice_mov
 301+ 9E9F
 302+ 9E9F 21 F1 8B         ld hl,Incrementa_puntero
 303+ 9EA2 34               inc (hl)
 304+ 9EA3
 305+ 9EA3 2A EB 8B         ld hl,(Puntero_indice_mov)
 306+ 9EA6 01 02 00         ld bc,2
 307+ 9EA9 A7               and a
 308+ 9EAA 09               add hl,bc
 309+ 9EAB 22 EB 8B         ld (Puntero_indice_mov),hl
 310+ 9EAE
 311+ 9EAE 7E               ld a,(hl)
 312+ 9EAF A7               and a
 313+ 9EB0
 314+ 9EB0              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EB0
 316+ 9EB0              ;    jr z,$
 317+ 9EB0
 318+ 9EB0              ;! Reinicia el Patrón de movimiento.
 319+ 9EB0
 320+ 9EB0 CC B5 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EB3
 322+ 9EB3 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EB4
 324+ 9EB4 C9               ret
 325+ 9EB5
 326+ 9EB5              ; ---------- --------- --------- ---------- ----------
 327+ 9EB5              ;
 328+ 9EB5              ;   15/01/24
 329+ 9EB5              ;
 330+ 9EB5              ;   Inicializa_Puntero_indice_mov
 331+ 9EB5
 332+ 9EB5              Inicializa_Puntero_indice_mov_2
 333+ 9EB5
 334+ 9EB5              ; Existe etiqueta de bucle principal???
 335+ 9EB5
 336+ 9EB5 2A EF 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EB8 24               inc h
 338+ 9EB9 25               dec h
 339+ 9EBA 28 05            jr z,2F
 340+ 9EBC
 341+ 9EBC 22 EB 8B         ld (Puntero_indice_mov),hl
 342+ 9EBF 18 14            jr 3F
 343+ 9EC1
 344+ 9EC1              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EC1
 346+ 9EC1 3A F1 8B     2 ld a,(Incrementa_puntero)
 347+ 9EC4 47               ld b,a
 348+ 9EC5
 349+ 9EC5 2A EB 8B         ld hl,(Puntero_indice_mov)
 350+ 9EC8 2B           1 dec hl
 351+ 9EC9 2B               dec hl
 352+ 9ECA 10 FC            djnz 1B
 353+ 9ECC 22 EB 8B         ld (Puntero_indice_mov),hl
 354+ 9ECF
 355+ 9ECF AF               xor a
 356+ 9ED0 32 F1 8B         ld (Incrementa_puntero),a
 357+ 9ED3 18 06            jr 4F
 358+ 9ED5
 359+ 9ED5 3A F2 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9ED8 32 F1 8B         ld (Incrementa_puntero),a
 361+ 9EDB C9           4 ret
 362+ 9EDC
 363+ 9EDC              ; ----------------------------------------------------------------------
 364+ 9EDC              ;
 365+ 9EDC              ;   30/01/24
 366+ 9EDC              ;
 367+ 9EDC              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EDC
 369+ 9EDC 3A BA 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EDF CD 30 94         call Calcula_salto_en_BC
 371+ 9EE2 21 E3 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EE5 A7               and a
 373+ 9EE6 ED 4A            adc hl,bc
 374+ 9EE8 C9               ret
 375+ 9EE9
 376+ 9EE9              ; ----------------------------------------------------------------------
 377+ 9EE9              ;
 378+ 9EE9              ;   30/01/24
 379+ 9EE9              ;
 380+ 9EE9              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EE9              ;
 382+ 9EE9              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EE9
 384+ 9EE9 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EEA 23               inc hl
 386+ 9EEB 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EEC 69               ld l,c
 388+ 9EED 60               ld h,b
 389+ 9EEE 22 C3 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EF1 C9               ret
 391+ 9EF2
# file closed: Movimiento.asm
2068  9EF2              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EF2              Motor_de_disparos_entidades
   2+ 9EF2
   3+ 9EF2 3A 1A 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9EF5 FE 07            cp 7
   5+ 9EF7 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9EF8
   7+ 9EF8 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9EFA 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9EFD
  10+ 9EFD CD 94 90     1 call Extrae_address
  11+ 9F00 1C               inc e
  12+ 9F01 1C               inc e
  13+ 9F02 ED 53 2D 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F06
  15+ 9F06               ; Caja vacía ???
  16+ 9F06
  17+ 9F06 2C               inc l
  18+ 9F07
  19+ 9F07 7E               ld a,(hl)
  20+ 9F08 A7               and a
  21+ 9F09 28 19            jr z,3F                                                              ; Caja vacía.
  22+ 9F0B
  23+ 9F0B              ; --- Trabajamos con caja:
  24+ 9F0B
  25+ 9F0B              ; En 1er lugar almacenaremos (Puntero_objeto) en IY para desplazarlo más adelante si es necesario.
  26+ 9F0B
  27+ 9F0B CD 3A 9F         call Rota_disparo_si_procede
  28+ 9F0E
  29+ 9F0E              ; ------------------------------------------------------------
  30+ 9F0E
  31+ 9F0E 2D               dec l
  32+ 9F0F 2D               dec l
  33+ 9F10 2D               dec l
  34+ 9F11
  35+ 9F11 CD 94 90         call Extrae_address
  36+ 9F14              ;   (Puntero_de_impresion) del disparo en HL.
  37+ 9F14
  38+ 9F14              ;! Velocidad del disparo de entidades.
  39+ 9F14
  40+ 9F14 CD AD 99         call NextScan
  41+ 9F17
  42+ 9F17              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  43+ 9F17
  44+ 9F17 CD 28 9F         call Fin_de_disparo_de_entidad
  45+ 9F1A
  46+ 9F1A EB               ex de,hl
  47+ 9F1B
  48+ 9F1B 73               ld (hl),e
  49+ 9F1C 23               inc hl
  50+ 9F1D 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  51+ 9F1E
  52+ 9F1E 2A 2D 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  53+ 9F21 18 02            jr 2F
  54+ 9F23
  55+ 9F23 C9               ret
  56+ 9F24
  57+ 9F24 EB           3 ex de,hl
  58+ 9F25 10 D6        2 djnz 1B
  59+ 9F27
  60+ 9F27 C9               ret
  61+ 9F28
  62+ 9F28              ; ------------- ------------- ------------
  63+ 9F28              ;
  64+ 9F28              ;   25/9/24
  65+ 9F28
  66+ 9F28              Fin_de_disparo_de_entidad
  67+ 9F28
  68+ 9F28 7C               ld a,h
  69+ 9F29 FE 54            cp $54
  70+ 9F2B D8               ret c
  71+ 9F2C
  72+ 9F2C D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  73+ 9F2D
  74+ 9F2D 5D               ld e,l
  75+ 9F2E 54               ld d,h
  76+ 9F2F
  77+ 9F2F 21 E0 57         ld hl,$57e0
  78+ 9F32 ED 52            sbc hl,de
  79+ 9F34
  80+ 9F34 38 39            jr c,Elimina_disparo_entidad
  81+ 9F36
  82+ 9F36 6B               ld l,e
  83+ 9F37 62               ld h,d
  84+ 9F38
  85+ 9F38 D1               pop de
  86+ 9F39
  87+ 9F39 C9               ret
  88+ 9F3A
  89+ 9F3A              ; ----------------------------------------------------------
  90+ 9F3A              ;
  91+ 9F3A              ;   08/10/24
  92+ 9F3A
  93+ 9F3A              Rota_disparo_si_procede
  94+ 9F3A
  95+ 9F3A              ;   Nos situamos en el byte alto de (Control).
  96+ 9F3A
  97+ 9F3A CB 76            bit 6,(hl)
  98+ 9F3C 20 03            jr nz,Decrementa_contador_de_control_de_disparo
  99+ 9F3E CB 7E            bit 7,(hl)
 100+ 9F40 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 101+ 9F41
 102+ 9F41              Decrementa_contador_de_control_de_disparo
 103+ 9F41
 104+ 9F41 35               dec (hl)
 105+ 9F42 7E               ld a,(hl)
 106+ 9F43 E6 07            and 7
 107+ 9F45 C0               ret nz
 108+ 9F46
 109+ 9F46              Rotamos_disparo_segun_proceda
 110+ 9F46
 111+ 9F46              ; Vamos a rotar el disparo pero antes reiniciamos el contador.
 112+ 9F46
 113+ 9F46 3E 07            ld a,7
 114+ 9F48 86               add (hl)
 115+ 9F49 77               ld (hl),a                                                           ; Contador reinicializado.
 116+ 9F4A
 117+ 9F4A CD 63 9F         call Puntero_objeto_en_IY                                           ; Rescatamos el Puntero_objeto en IY para poder desplazar el disparo.
 118+ 9F4D
 119+ 9F4D CB 76            bit 6,(hl)
 120+ 9F4F 20 05            jr nz,Rota_a_derecha
 121+ 9F51
 122+ 9F51
 123+ 9F51              Rota_a_izq
 124+ 9F51
 125+ 9F51 F3               di
 126+ 9F52 18 FE            jr $
 127+ 9F54 FB               ei
 128+ 9F55
 129+ 9F55 C9               ret
 130+ 9F56
 131+ 9F56              Rota_a_derecha
 132+ 9F56
 133+ 9F56 FD CB 00 3E      srl (iy+0)
 134+ 9F5A FD CB 01 3E      srl (iy+1)
 135+ 9F5E FD CB 02 3E      srl (iy+2)
 136+ 9F62
 137+ 9F62              ; Se inicializa el disparo y se desplaza (Puntero_objeto) a la derecha.
 138+ 9F62
 139+ 9F62 C9               ret
 140+ 9F63
 141+ 9F63              ; ------------ ----------- ------------
 142+ 9F63              ;
 143+ 9F63              ;   11/10/24
 144+ 9F63
 145+ 9F63              Puntero_objeto_en_IY
 146+ 9F63
 147+ 9F63 E5               push hl
 148+ 9F64
 149+ 9F64 2D               dec l
 150+ 9F65 2D               dec l
 151+ 9F66 2D               dec l
 152+ 9F67 2D               dec l
 153+ 9F68 2D               dec l
 154+ 9F69 2D               dec l
 155+ 9F6A
 156+ 9F6A E5               push hl
 157+ 9F6B FD E1            pop iy
 158+ 9F6D
 159+ 9F6D E1               pop hl
 160+ 9F6E
 161+ 9F6E C9               ret
 162+ 9F6F
 163+ 9F6F              ; ------------ ----------- ------------
 164+ 9F6F              ;
 165+ 9F6F              ;   25/9/24
 166+ 9F6F
 167+ 9F6F              Elimina_disparo_entidad
 168+ 9F6F
 169+ 9F6F 21 1A 8C         ld hl,Numero_de_disparos_de_entidades
 170+ 9F72 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 171+ 9F73
 172+ 9F73 E1               pop hl
 173+ 9F74 E5               push hl
 174+ 9F75
 175+ 9F75 2B               dec hl
 176+ 9F76 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
 177+ 9F77
 178+ 9F77 16 06            ld d,6                                                              ; Contador
 179+ 9F79 AF               xor a                                                               ; Borrador
 180+ 9F7A
 181+ 9F7A 77           1 ld (hl),a
 182+ 9F7B 15               dec d
 183+ 9F7C 23               inc hl
 184+ 9F7D 20 FB            jr nz,1B
 185+ 9F7F
 186+ 9F7F D1               pop de
 187+ 9F80
 188+ 9F80 21 00 00         ld hl,0
 189+ 9F83
 190+ 9F83 C9               ret
 191+ 9F84              ; --------------------------------------------------------------------------------------
 192+ 9F84              ;
 193+ 9F84              ;   12/10/24
 194+ 9F84              ;
 195+ 9F84
 196+ 9F84              Genera_datos_de_impresion_disparos_Entidades
 197+ 9F84
 198+ 9F84 3A 1A 8C         ld a,(Numero_de_disparos_de_entidades)
 199+ 9F87 47               ld b,a
 200+ 9F88 3E 07            ld a,7
 201+ 9F8A 90               sub b
 202+ 9F8B C8               ret z                                                      ;? Salimos. No hay disparos de entidades generados.
 203+ 9F8C
 204+ 9F8C 08               ex af,af
 205+ 9F8D
 206+ 9F8D              ; ---------------
 207+ 9F8D
 208+ 9F8D              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 209+ 9F8D
 210+ 9F8D 21 23 89         ld hl,Indice_de_disparos_entidades
 211+ 9F90
 212+ 9F90 CD 94 90     1 call Extrae_address
 213+ 9F93
 214+ 9F93 13               inc de
 215+ 9F94 13               inc de
 216+ 9F95
 217+ 9F95 ED 53 2D 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 218+ 9F99
 219+ 9F99 2C               inc l
 220+ 9F9A
 221+ 9F9A 7E               ld a,(hl)
 222+ 9F9B A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 223+ 9F9C 28 39            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 224+ 9F9E
 225+ 9F9E              ; ----- ----- ----- -----
 226+ 9F9E
 227+ 9F9E 2D               dec l
 228+ 9F9F 2D               dec l
 229+ 9FA0 2D               dec l
 230+ 9FA1
 231+ 9FA1 CD 94 90         call Extrae_address
 232+ 9FA4 E5               push hl
 233+ 9FA5
 234+ 9FA5 1D               dec e
 235+ 9FA6
 236+ 9FA6 EB               ex de,hl
 237+ 9FA7
 238+ 9FA7 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 239+ 9FA8 2D               dec l
 240+ 9FA9 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 241+ 9FAA 2D               dec l
 242+ 9FAB 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 243+ 9FAC
 244+ 9FAC E1               pop hl                                                    ;? Puntero de impresión en HL.
 245+ 9FAD
 246+ 9FAD              Genera_scanlines_de_los_disparos_de_entidades.
 247+ 9FAD
 248+ 9FAD FD 2A 17 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 249+ 9FB1 FD 73 00         ld (iy+0),e
 250+ 9FB4 FD 70 01         ld (iy+1),b
 251+ 9FB7 FD 71 02         ld (iy+2),c
 252+ 9FBA
 253+ 9FBA FD 75 03         ld (iy+3),l
 254+ 9FBD FD 74 04         ld (iy+4),h
 255+ 9FC0
 256+ 9FC0 CD AD 99         call NextScan
 257+ 9FC3
 258+ 9FC3 FD 75 05         ld (iy+5),l
 259+ 9FC6 FD 74 06         ld (iy+6),h
 260+ 9FC9
 261+ 9FC9 FD E5            push iy
 262+ 9FCB E1               pop hl
 263+ 9FCC
 264+ 9FCC 3E 07            ld a,7
 265+ 9FCE 85               add l
 266+ 9FCF 6F               ld l,a
 267+ 9FD0
 268+ 9FD0 22 17 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 269+ 9FD3
 270+ 9FD3              ; ----- ----- ----- -----
 271+ 9FD3
 272+ 9FD3 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 273+ 9FD4 3D               dec a
 274+ 9FD5 C8               ret z
 275+ 9FD6 08               ex af,af
 276+ 9FD7
 277+ 9FD7              Situa_en_siguiente_caja
 278+ 9FD7
 279+ 9FD7 2A 2D 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 280+ 9FDA 18 B4            jr 1B
 281+ 9FDC
 282+ 9FDC              ; --------------------------------------------------------------------------------------
 283+ 9FDC              ;
 284+ 9FDC              ;   12/10/24
 285+ 9FDC              ;
 286+ 9FDC
 287+ 9FDC              Genera_disparo_de_entidad_maldosa
 288+ 9FDC
 289+ 9FDC              ;   Estructura de un disparo de entidades.
 290+ 9FDC
 291+ 9FDC              ;   Disparo_1 defw 0								; Puntero objeto.
 292+ 9FDC              ; 	defw 0											; Puntero de impresión.
 293+ 9FDC              ;	defw 0											; Control.
 294+ 9FDC
 295+ 9FDC              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 296+ 9FDC              ;   _de la entidad en el momento de disparar.
 297+ 9FDC
 298+ 9FDC              ;   El byte alto muestra la siguiente información:
 299+ 9FDC              ;
 300+ 9FDC              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 301+ 9FDC              ;                        _antes de desplazarse a derecha/izquierda.
 302+ 9FDC              ;
 303+ 9FDC              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 304+ 9FDC              ;
 305+ 9FDC              ;                        10xx ..... Izquierda.
 306+ 9FDC              ;                        01xx ..... Derecha.
 307+ 9FDC              ;                        00xx ..... Recto.
 308+ 9FDC
 309+ 9FDC              ;*  Exclusiones.
 310+ 9FDC
 311+ 9FDC              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 312+ 9FDC              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 313+ 9FDC
 314+ 9FDC              ;    set 0,(hl)          ; Añadimos "1" para no perder el bit de carry.
 315+ 9FDC
 316+ 9FDC 3A 1A 8C         ld a,(Numero_de_disparos_de_entidades)
 317+ 9FDF A7               and a
 318+ 9FE0 C8               ret z
 319+ 9FE1
 320+ 9FE1 3A BC 8B         ld a,(Coordenada_y)
 321+ 9FE4 A7               and a
 322+ 9FE5 C8               ret z
 323+ 9FE6
 324+ 9FE6 3D               dec a
 325+ 9FE7 C8               ret z
 326+ 9FE8
 327+ 9FE8 FE 10            cp 16
 328+ 9FEA D0               ret nc
 329+ 9FEB
 330+ 9FEB              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 331+ 9FEB              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 332+ 9FEB              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 333+ 9FEB
 334+ 9FEB 21 1C 8C         ld hl,Permiso_de_disparo_Entidades
 335+ 9FEE 35               dec (hl)                                            ; No más disparos en este FRAME.
 336+ 9FEF
 337+ 9FEF              ;   Decrementa el numero de disparos de entidades.
 338+ 9FEF
 339+ 9FEF 21 1A 8C         ld hl,Numero_de_disparos_de_entidades
 340+ 9FF2 35               dec (hl)
 341+ 9FF3
 342+ 9FF3 21 23 89         ld hl,Indice_de_disparos_entidades
 343+ 9FF6
 344+ 9FF6 CD 94 90     1 call Extrae_address
 345+ 9FF9
 346+ 9FF9 13               inc de
 347+ 9FFA 13               inc de
 348+ 9FFB
 349+ 9FFB ED 53 2D 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 350+ 9FFF
 351+ 9FFF              ;   Comprobamos si la caja está vacía.
 352+ 9FFF
 353+ 9FFF 2C               inc l
 354+ A000
 355+ A000 7E               ld a,(hl)
 356+ A001 A7               and a
 357+ A002 20 21            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 358+ A004
 359+ A004              ;   Caja vacía, vamos a generar un disparo.
 360+ A004              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 361+ A004
 362+ A004 CD 2A A0         call Genera_byte_inclinacion
 363+ A007
 364+ A007 7E               ld a,(hl)
 365+ A008 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 366+ A009
 367+ A009 2D               dec l
 368+ A00A
 369+ A00A              ;   La velocidad inicial del disparo corresponde con la velocidad de la entidad que lo genera.
 370+ A00A
 371+ A00A 3A C5 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 372+ A00D 77               ld (hl),a
 373+ A00E
 374+ A00E 2D               dec l
 375+ A00F
 376+ A00F CD 48 A0         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 377+ A012
 378+ A012 70               ld (hl),b
 379+ A013 2D               dec l
 380+ A014 71               ld (hl),c
 381+ A015
 382+ A015 2D               dec l
 383+ A016
 384+ A016              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 385+ A016
 386+ A016 FD 7E 02         ld a,(iy+02)
 387+ A019 77               ld (hl),a
 388+ A01A 2D               dec l
 389+ A01B
 390+ A01B FD 7E 01         ld a,(iy+01)
 391+ A01E 77               ld (hl),a
 392+ A01F 2D               dec l
 393+ A020
 394+ A020 FD 7E 00         ld a,(iy+00)
 395+ A023 77               ld (hl),a
 396+ A024
 397+ A024 C9               ret
 398+ A025
 399+ A025              ;   --- --- ---
 400+ A025
 401+ A025              Situa_en_siguiente_disparo
 402+ A025
 403+ A025 2A 2D 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 404+ A028 18 CC            jr 1B
 405+ A02A
 406+ A02A              ; --------------------------------------------------------------------------------------
 407+ A02A              ;
 408+ A02A              ;   09/10/24
 409+ A02A              ;
 410+ A02A
 411+ A02A              Genera_byte_inclinacion
 412+ A02A
 413+ A02A 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 414+ A02C
 415+ A02C              ; Determina tendencia del disparo.
 416+ A02C
 417+ A02C 3A 75 89         ld a,(CX_Amadeus)
 418+ A02F 47               ld b,a
 419+ A030 3A BB 8B         ld a,(Coordenada_X)
 420+ A033 90               sub b
 421+ A034 38 07            jr c,Disparo_a_derecha
 422+ A036
 423+ A036 FE 04        Disparo_a_izquierda cp 4
 424+ A038
 425+ A038 D8               ret c
 426+ A039 C8               ret z
 427+ A03A
 428+ A03A CB FE            set 7,(hl)
 429+ A03C C9               ret
 430+ A03D
 431+ A03D 47           Disparo_a_derecha ld b,a
 432+ A03E 3E FF            ld a,$ff
 433+ A040 90               sub b
 434+ A041
 435+ A041 FE 04            cp 4
 436+ A043
 437+ A043 D8               ret c
 438+ A044 C8               ret z
 439+ A045
 440+ A045 CB F6            set 6,(hl)
 441+ A047 C9               ret
 442+ A048
 443+ A048              ; --------------------------------------------------------------------------------------
 444+ A048              ;
 445+ A048              ;   09/10/24
 446+ A048              ;
 447+ A048
 448+ A048              Modifica_puntero_de_impresion
 449+ A048
 450+ A048              ;   Puntero de impresión del disparo en BC.
 451+ A048
 452+ A048 ED 4B 2F 8C      ld bc,(Puntero_de_impresion_disparo_de_entidad)
 453+ A04C
 454+ A04C 08               ex af,af
 455+ A04D CB 77            bit 6,a
 456+ A04F 28 06            jr z,1F
 457+ A051
 458+ A051 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 459+ A055 0C               inc c
 460+ A056 C9               ret
 461+ A057
 462+ A057 CB 7F        1 bit 7,a
 463+ A059 28 F6            jr z,2B
 464+ A05B
 465+ A05B FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 466+ A05F 0D               dec c
 467+ A060
 468+ A060 C9               ret
 469+ A061
 470+ A061              ; --------------------------------------------------------------------------------------
 471+ A061              ;
 472+ A061              ;   31/08/24
 473+ A061              ;
 474+ A061
 475+ A061              Compara_con_coordenadas_de_disparo
 476+ A061
 477+ A061 3A BC 8B         ld a,(Coordenada_y)
 478+ A064 47               ld b,a
 479+ A065 3A 34 8C         ld a,(Coordenadas_disparo_certero)
 480+ A068 90               sub b
 481+ A069
 482+ A069              ; A = "0" ok
 483+ A069              ; A = "1" ok
 484+ A069
 485+ A069 28 08            jr z,Comprueba_coordenada_X
 486+ A06B 3D               dec a
 487+ A06C 28 05            jr z,Comprueba_coordenada_X
 488+ A06E
 489+ A06E              ; A = "$ff" ok
 490+ A06E
 491+ A06E FE FE            cp $fe
 492+ A070 28 01            jr z,Comprueba_coordenada_X
 493+ A072
 494+ A072 C9               ret
 495+ A073
 496+ A073              Comprueba_coordenada_X
 497+ A073
 498+ A073 3A BB 8B         ld a,(Coordenada_X)
 499+ A076 47               ld b,a
 500+ A077 21 35 8C         ld hl,Coordenadas_disparo_certero+1
 501+ A07A 7E               ld a,(hl)
 502+ A07B 90               sub b
 503+ A07C
 504+ A07C              ; A = "0" ok
 505+ A07C              ; A = "1" ok
 506+ A07C
 507+ A07C 28 09            jr z,Activa_Impacto_en_entidad
 508+ A07E 3D               dec a
 509+ A07F 28 06            jr z,Activa_Impacto_en_entidad
 510+ A081
 511+ A081              ; A = "2" ok
 512+ A081
 513+ A081 3D               dec a
 514+ A082 28 03            jr z,Activa_Impacto_en_entidad
 515+ A084
 516+ A084              ; A = "$ff"
 517+ A084
 518+ A084 FE FD            cp $fd
 519+ A086 C0               ret nz
 520+ A087
 521+ A087              Activa_Impacto_en_entidad
 522+ A087
 523+ A087              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 524+ A087
 525+ A087 3E 02            ld a,2
 526+ A089 32 BE 8B         ld (Impacto),a
 527+ A08C
 528+ A08C              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 529+ A08C
 530+ A08C 11 C0 87         ld de,Indice_Explosion_entidades
 531+ A08F 21 C1 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 532+ A092
 533+ A092 73               ld (hl),e
 534+ A093 23               inc hl
 535+ A094 72               ld (hl),d
 536+ A095
 537+ A095              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 538+ A095
 539+ A095 21 31 8C         ld hl,Impacto2
 540+ A098 CB 9E            res 3,(hl)
 541+ A09A
 542+ A09A C9               ret
 543+ A09B
 544+ A09B              ; --------------------------------------------------------------------------------------
 545+ A09B              ;
 546+ A09B              ;   11/09/24
 547+ A09B              ;
 548+ A09B
 549+ A09B              Limpia_album_de_borrado_disparos
 550+ A09B
 551+ A09B 21 2C 8C         ld hl,Ctrl_5
 552+ A09E CB 56            bit 2,(hl)
 553+ A0A0 C8               ret z
 554+ A0A1
 555+ A0A1              ;    jr z,1F
 556+ A0A1
 557+ A0A1              ;    res 2,(hl)
 558+ A0A1
 559+ A0A1              ;    jr Limpiando
 560+ A0A1
 561+ A0A1              ;1 bit 0,(hl)
 562+ A0A1              ;    ret z
 563+ A0A1              ;    res 0,(hl)
 564+ A0A1
 565+ A0A1              Limpiando
 566+ A0A1
 567+ A0A1 AF               xor a
 568+ A0A2 2A 13 8C         ld hl,(Album_de_pintado_disparos)
 569+ A0A5 77               ld (hl),a
 570+ A0A6 5D               ld e,l
 571+ A0A7 54               ld d,h
 572+ A0A8 1C               inc e                                           ; DE = HL+1
 573+ A0A9 01 3A 00         ld bc,$003a
 574+ A0AC ED B0            ldir
 575+ A0AE
 576+ A0AE C9               ret
 577+ A0AF
 578+ A0AF
 579+ A0AF              ; --------------------------------------------------------------------------------------
 580+ A0AF              ;
 581+ A0AF              ;   29/09/24
 582+ A0AF              ;
 583+ A0AF
 584+ A0AF              Calcula_bytes_pintado_disparos
 585+ A0AF
 586+ A0AF 2A 13 8C         ld hl,(Album_de_pintado_disparos)
 587+ A0B2 45               ld b,l
 588+ A0B3 2A 17 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 589+ A0B6 7D               ld a,l
 590+ A0B7
 591+ A0B7 90               sub b
 592+ A0B8 32 19 8C         ld (Num_de_bytes_album_de_disparos),a
 593+ A0BB
 594+ A0BB C9               ret
 595+ A0BC
 596+ A0BC              ; --------------------------------------------------------------------------------------
 597+ A0BC              ;
 598+ A0BC              ;   29/09/24
 599+ A0BC              ;
 600+ A0BC              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 601+ A0BC              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 602+ A0BC              ;   _disparos que el álbum del FRAME actual).
 603+ A0BC
 604+ A0BC              Limpia_album_de_pintado_disparos
 605+ A0BC
 606+ A0BC 3A 19 8C         ld a,(Num_de_bytes_album_de_disparos)
 607+ A0BF A7               and a
 608+ A0C0 28 0E            jr z,Clean_only_one
 609+ A0C2
 610+ A0C2 47               ld b,a
 611+ A0C3 3E 3B            ld a,$3b
 612+ A0C5 90               sub b
 613+ A0C6 47               ld b,a
 614+ A0C7 AF           2 xor a
 615+ A0C8
 616+ A0C8 2A 17 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)                        ; Siempre tendremos limpio el sobrante de álbum de pintado de disparos.
 617+ A0CB 77           1 ld (hl),a
 618+ A0CC 23               inc hl
 619+ A0CD 10 FC            djnz 1B
 620+ A0CF C9               ret
 621+ A0D0
 622+ A0D0              Clean_only_one
 623+ A0D0
 624+ A0D0 06 06            ld b,6
 625+ A0D2 18 F3            jr 2B
 626+ A0D4
 627+ A0D4              ; --------------------------------------------------------------------------------------
 628+ A0D4              ;
 629+ A0D4              ;   29/09/24
 630+ A0D4              ;
 631+ A0D4
 632+ A0D4              Motor_Disparos_Amadeus
 633+ A0D4
 634+ A0D4              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 635+ A0D4
 636+ A0D4 21 20 89         ld hl,Disparo_Amad+1
 637+ A0D7
 638+ A0D7 34               inc (hl)
 639+ A0D8 35               dec (hl)
 640+ A0D9
 641+ A0D9 C8               ret z
 642+ A0DA
 643+ A0DA              ;   Esta caja contiene un disparo.
 644+ A0DA
 645+ A0DA CD E1 A0         call Consulta_Impacto
 646+ A0DD CC FA A0         call z,Mueve_disparo_Amadeus
 647+ A0E0
 648+ A0E0 C9               ret
 649+ A0E1
 650+ A0E1              ; ----------------------
 651+ A0E1              ;
 652+ A0E1              ;
 653+ A0E1              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 654+ A0E1              ;
 655+ A0E1              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 656+ A0E1
 657+ A0E1
 658+ A0E1              Consulta_Impacto
 659+ A0E1
 660+ A0E1              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 661+ A0E1              ;   _sea lo más coherente posible.
 662+ A0E1
 663+ A0E1 E5               push hl
 664+ A0E2 2B               dec hl
 665+ A0E3 CD 03 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 666+ A0E6 E1               pop hl
 667+ A0E7 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 668+ A0E8
 669+ A0E8 C8               ret z
 670+ A0E9
 671+ A0E9 3A 31 8C         ld a,(Impacto2)
 672+ A0EC CB DF            set 3,a
 673+ A0EE 32 31 8C         ld (Impacto2),a
 674+ A0F1
 675+ A0F1 E5               push hl
 676+ A0F2 CD F0 A1         call Genera_coordenadas_de_disparo_Amadeus
 677+ A0F5 E1               pop hl
 678+ A0F6 CD 13 A1         call Elimina_disparo_Amadeus
 679+ A0F9
 680+ A0F9 C9               ret
 681+ A0FA
 682+ A0FA              ; ----------------------
 683+ A0FA              ;
 684+ A0FA              ;
 685+ A0FA              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 686+ A0FA
 687+ A0FA              Mueve_disparo_Amadeus
 688+ A0FA
 689+ A0FA CD 94 90         call Extrae_address
 690+ A0FD
 691+ A0FD CD BC 99         call PreviousScan
 692+ A100 CD BC 99         call PreviousScan
 693+ A103 CD BC 99         call PreviousScan
 694+ A106 CD BC 99         call PreviousScan
 695+ A109
 696+ A109              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 697+ A109
 698+ A109 7C               ld a,h
 699+ A10A D6 40            sub $40
 700+ A10C EB               ex de,hl
 701+ A10D 38 04            jr c,Elimina_disparo_Amadeus
 702+ A10F
 703+ A10F               ; Introduce nuevo puntero_de_impresión en la caja.
 704+ A10F
 705+ A10F 73               ld (hl),e
 706+ A110 23               inc hl
 707+ A111 72               ld (hl),d
 708+ A112
 709+ A112 C9               ret
 710+ A113
 711+ A113              ; ----------------------
 712+ A113              ;
 713+ A113              ;   29/9/24
 714+ A113
 715+ A113              Elimina_disparo_Amadeus
 716+ A113
 717+ A113              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 718+ A113              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 719+ A113
 720+ A113              ;   Disparo_1A defw 0									; Puntero objeto.
 721+ A113              ;   	defw 0											; Puntero de impresión.
 722+ A113
 723+ A113 2B               dec hl
 724+ A114 2B               dec hl
 725+ A115
 726+ A115 AF               xor a
 727+ A116 77               ld (hl),a
 728+ A117 23               inc hl
 729+ A118 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 730+ A119
 731+ A119 23               inc hl
 732+ A11A 77               ld (hl),a
 733+ A11B 23               inc hl
 734+ A11C 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 735+ A11D
 736+ A11D 3E 01            ld a,1
 737+ A11F 32 1B 8C         ld (Permiso_de_disparo_Amadeus),a
 738+ A122
 739+ A122 21 2C 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 740+ A125 CB C6            set 0,(hl)
 741+ A127
 742+ A127 AF               xor a
 743+ A128 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 744+ A129
 745+ A129 C9               ret
 746+ A12A
 747+ A12A              ; --------------------------------------------------------------------------------------
 748+ A12A              ;
 749+ A12A              ;   12/10/24
 750+ A12A              ;
 751+ A12A
 752+ A12A              Pinta_disparos
 753+ A12A
 754+ A12A ED 73 07 8C      ld (Stack),sp
 755+ A12E 06 02            ld b,2
 756+ A130
 757+ A130 ED 7B 15 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 758+ A134
 759+ A134 D1           2 pop de
 760+ A135
 761+ A135 7A               ld a,d
 762+ A136 83               add e
 763+ A137 28 24            jr z,1F
 764+ A139
 765+ A139              Imprime_scanlines_de_disparo
 766+ A139
 767+ A139 E1               pop hl
 768+ A13A
 769+ A13A              ; Puntero objeto en DE.
 770+ A13A              ; Puntero_de_impresión en HL.
 771+ A13A
 772+ A13A              ; Necesitamos saber que tipo de disparo es el que vamos a Imprimir.
 773+ A13A
 774+ A13A FD 21 76 83      ld iy,Indice_disparo_Amadeus
 775+ A13E
 776+ A13E FD 7C            ld a,iyh
 777+ A140 BA               cp d
 778+ A141 38 21            jr c,4F
 779+ A143
 780+ A143              ; Disparos de Amadeus.
 781+ A143
 782+ A143              ; 1er scanline.
 783+ A143
 784+ A143 1A               ld a,(de)
 785+ A144 AE               xor (hl)
 786+ A145 77               ld (hl),a
 787+ A146
 788+ A146 13               inc de
 789+ A147 2C               inc l
 790+ A148
 791+ A148 1A               ld a,(de)
 792+ A149 AE               xor (hl)
 793+ A14A 77               ld (hl),a
 794+ A14B
 795+ A14B              ; 2º scanline.
 796+ A14B
 797+ A14B E1               pop hl
 798+ A14C 1B               dec de
 799+ A14D
 800+ A14D 1A               ld a,(de)
 801+ A14E AE               xor (hl)
 802+ A14F 77               ld (hl),a
 803+ A150
 804+ A150 13               inc de
 805+ A151 2C               inc l
 806+ A152
 807+ A152 1A               ld a,(de)
 808+ A153 AE               xor (hl)
 809+ A154 77               ld (hl),a
 810+ A155
 811+ A155              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 812+ A155
 813+ A155 18 DD            jr 2B
 814+ A157
 815+ A157 ED 7B 13 8C  3 ld sp,(Album_de_pintado_disparos)
 816+ A15B 18 D7            jr 2B
 817+ A15D
 818+ A15D 10 F8        1 djnz 3B
 819+ A15F ED 7B 07 8C      ld sp,(Stack)
 820+ A163 C9               ret
 821+ A164
 822+ A164              ; Disparos de entidades
 823+ A164
 824+ A164              ; 1er scanline.
 825+ A164
 826+ A164 1A           4 ld a,(de)
 827+ A165 AE               xor (hl)
 828+ A166 77               ld (hl),a
 829+ A167
 830+ A167 2C               inc l
 831+ A168 1C               inc e
 832+ A169
 833+ A169 1A               ld a,(de)
 834+ A16A AE               xor (hl)
 835+ A16B 77               ld (hl),a
 836+ A16C
 837+ A16C 2C               inc l
 838+ A16D 1C               inc e
 839+ A16E
 840+ A16E 1A               ld a,(de)
 841+ A16F AE               xor (hl)
 842+ A170 77               ld (hl),a
 843+ A171
 844+ A171 1D               dec e
 845+ A172 1D               dec e
 846+ A173
 847+ A173              ; 2º scanline.
 848+ A173
 849+ A173 E1               pop hl
 850+ A174
 851+ A174 1A               ld a,(de)
 852+ A175 AE               xor (hl)
 853+ A176 77               ld (hl),a
 854+ A177
 855+ A177 2C               inc l
 856+ A178 1C               inc e
 857+ A179
 858+ A179 1A               ld a,(de)
 859+ A17A AE               xor (hl)
 860+ A17B 77               ld (hl),a
 861+ A17C
 862+ A17C 2C               inc l
 863+ A17D 1C               inc e
 864+ A17E
 865+ A17E 1A               ld a,(de)
 866+ A17F AE               xor (hl)
 867+ A180 77               ld (hl),a
 868+ A181
 869+ A181              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 870+ A181
 871+ A181 18 B1            jr 2B
 872+ A183
 873+ A183              ; --------------------------------------------------------------------------------------
 874+ A183              ;
 875+ A183              ;   14/09/24
 876+ A183              ;
 877+ A183              ;   Modifica: HL y DE.
 878+ A183
 879+ A183
 880+ A183              Genera_datos_de_impresion_disparos_Amadeus
 881+ A183
 882+ A183 ED 73 07 8C      ld (Stack),sp
 883+ A187 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 884+ A18A D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 885+ A18B
 886+ A18B 14               inc d                                                     ;? Salimos si no hay disparo.
 887+ A18C 15               dec d
 888+ A18D
 889+ A18D 28 12            jr z,Salida
 890+ A18F
 891+ A18F              Genera_scanlines_de_disparo_Amadeus
 892+ A18F
 893+ A18F E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 894+ A190              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 895+ A190 ED 7B 17 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 896+ A194
 897+ A194 C1               pop bc
 898+ A195 C1               pop bc
 899+ A196 C1               pop bc
 900+ A197
 901+ A197 ED 73 17 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 902+ A19B
 903+ A19B E5               push hl                                                   ;? Sube 2º scanline al álbum.
 904+ A19C CD BC 99         call PreviousScan
 905+ A19F E5               push hl                                                   ;? Sube 1er scanline al álbum.
 906+ A1A0 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 907+ A1A1
 908+ A1A1              Salida
 909+ A1A1
 910+ A1A1 ED 7B 07 8C      ld sp,(Stack)
 911+ A1A5
 912+ A1A5 C9               ret
 913+ A1A6
 914+ A1A6              ; --------------------------------------------------------------------------------------
 915+ A1A6              ;
 916+ A1A6              ;   12/09/24
 917+ A1A6              ;
 918+ A1A6
 919+ A1A6              Genera_disparo_Amadeus
 920+ A1A6
 921+ A1A6              ;*  Exclusiones.
 922+ A1A6
 923+ A1A6 3A 1B 8C         ld a,(Permiso_de_disparo_Amadeus)
 924+ A1A9 A7               and a
 925+ A1AA C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 926+ A1AB
 927+ A1AB 3D               dec a
 928+ A1AC 32 1B 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 929+ A1AF
 930+ A1AF              Define_puntero_objeto_disparo
 931+ A1AF
 932+ A1AF              ;   Inicializamos contador.
 933+ A1AF
 934+ A1AF 06 00            ld b,0
 935+ A1B1
 936+ A1B1 2A 79 89         ld hl,(p.imp.amadeus)
 937+ A1B4 2C               inc l
 938+ A1B5
 939+ A1B5 3E 80            ld a,$80
 940+ A1B7 BE               cp (hl)
 941+ A1B8 28 0D            jr z,1F
 942+ A1BA
 943+ A1BA 04               inc b
 944+ A1BB
 945+ A1BB 3E 60            ld a,$60
 946+ A1BD BE               cp (hl)
 947+ A1BE 28 07            jr z,1F
 948+ A1C0
 949+ A1C0
 950+ A1C0 04               inc b
 951+ A1C1
 952+ A1C1 3E 18            ld a,$18
 953+ A1C3 BE               cp (hl)
 954+ A1C4 28 01            jr z,1F
 955+ A1C6
 956+ A1C6 04               inc b
 957+ A1C7
 958+ A1C7              ;   Calcula el Puntero_de_impresión del disparo.
 959+ A1C7
 960+ A1C7              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 961+ A1C7
 962+ A1C7 CD BC 99     1 call PreviousScan
 963+ A1CA
 964+ A1CA 78               ld a,b
 965+ A1CB CB 3F            srl a
 966+ A1CD 28 03            jr z,4F
 967+ A1CF
 968+ A1CF              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 969+ A1CF E5               push hl
 970+ A1D0 18 02            jr 5F
 971+ A1D2 2D           4 dec l
 972+ A1D3 E5               push hl
 973+ A1D4              ; ---
 974+ A1D4
 975+ A1D4              ;   Calcula el Puntero_objeto del disparo.
 976+ A1D4
 977+ A1D4 21 76 83     5 ld hl,Indice_disparo_Amadeus
 978+ A1D7 04               inc b
 979+ A1D8 05               dec b
 980+ A1D9 28 04            jr z,2F
 981+ A1DB
 982+ A1DB              ;   Nos desplazamos por el índice de disparos.
 983+ A1DB
 984+ A1DB 2C           3 inc l
 985+ A1DC 2C               inc l
 986+ A1DD 10 FC            djnz 3B
 987+ A1DF
 988+ A1DF              ; --- Guarda el Puntero_objeto del disparo en la pila.
 989+ A1DF CD 94 90     2 call Extrae_address
 990+ A1E2 E5               push hl
 991+ A1E3              ; ---
 992+ A1E3
 993+ A1E3              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 994+ A1E3              ; HL en el 1er .db de la caja.
 995+ A1E3
 996+ A1E3 21 1F 89         ld hl,Disparo_Amad
 997+ A1E6
 998+ A1E6 06 02            ld b,2
 999+ A1E8
1000+ A1E8 D1           6 pop de
1001+ A1E9 73               ld (hl),e
1002+ A1EA 23               inc hl
1003+ A1EB 72               ld (hl),d
1004+ A1EC 23               inc hl
1005+ A1ED
1006+ A1ED 10 F9            djnz 6B
1007+ A1EF
1008+ A1EF C9               ret
1009+ A1F0
1010+ A1F0              Genera_coordenadas_de_disparo_Amadeus
1011+ A1F0
1012+ A1F0              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1013+ A1F0              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1014+ A1F0              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1015+ A1F0
1016+ A1F0 CD 94 90         call Extrae_address
1017+ A1F3 CD B3 94         call Genera_coordenadas
1018+ A1F6
1019+ A1F6 3D               dec a
1020+ A1F7
1021+ A1F7 21 34 8C         ld hl,Coordenadas_disparo_certero
1022+ A1FA 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1023+ A1FB 23               inc hl
1024+ A1FC 3A BB 8B         ld a,(Coordenada_X)
1025+ A1FF 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1026+ A200
1027+ A200 AF               xor a
1028+ A201 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1029+ A202
1030+ A202 C9               ret
1031+ A203
1032+ A203              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1033+ A203              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1034+ A203              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1035+ A203
1036+ A203              ; ----------------------------------------------
1037+ A203              ;
1038+ A203              ;   27/08/24
1039+ A203              ;
1040+ A203              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1041+ A203              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1042+ A203
1043+ A203              Detecta_impacto_en_disparo_de_Amadeus
1044+ A203
1045+ A203              Extraccion_de_datos
1046+ A203
1047+ A203 13               inc de
1048+ A204 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
1049+ A205
1050+ A205 5E               ld e,(hl)
1051+ A206 23               inc hl
1052+ A207 56               ld d,(hl)
1053+ A208
1054+ A208 23               inc hl
1055+ A209
1056+ A209 4E               ld c,(hl)
1057+ A20A 23               inc hl
1058+ A20B 46               ld b,(hl)
1059+ A20C
1060+ A20C C5               push bc
1061+ A20D E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1062+ A20E
1063+ A20E              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1064+ A20E
1065+ A20E CD BC 99         call PreviousScan
1066+ A211 CD BC 99         call PreviousScan
1067+ A214
1068+ A214              Detecta_impacto_
1069+ A214
1070+ A214 1A               ld a,(de)
1071+ A215 A6               and (hl)
1072+ A216 C0               ret nz
1073+ A217
1074+ A217 13               inc de
1075+ A218 23               inc hl
1076+ A219
1077+ A219 1A               ld a,(de)
1078+ A21A A6               and (hl)
1079+ A21B C9               ret
1080+ A21C
1081+ A21C              ; -------------------------------------------------------------------------------------------------------------
1082+ A21C              ;
1083+ A21C              ;   8/8/24
1084+ A21C              ;
1085+ A21C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1086+ A21C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1087+ A21C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1088+ A21C              ;
1089+ A21C              ;   MODIFICA: HL,DE,BC y A.
1090+ A21C              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1091+ A21C              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1092+ A21C
1093+ A21C              Colision_Entidad_Amadeus
1094+ A21C
1095+ A21C              ; Posible contacto de entidad con Amadeus. ?????
1096+ A21C
1097+ A21C              ; Exclusiones:
1098+ A21C
1099+ A21C 3A 54 8C         ld a,(Shield)
1100+ A21F A7               and a
1101+ A220 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1102+ A221
1103+ A221 21 2A 8C         ld hl,Ctrl_3
1104+ A224 CB 76            bit 6,(hl)
1105+ A226 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1106+ A227
1107+ A227 21 31 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1108+ A22A CB 56            bit 2,(hl)
1109+ A22C C0               ret nz
1110+ A22D
1111+ A22D 3A BC 8B     	ld a,(Coordenada_y)
1112+ A230 FE 14        	cp $14
1113+ A232 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1114+ A233
1115+ A233 3A 78 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1116+ A236 A7               and a
1117+ A237 C0               ret nz
1118+ A238
1119+ A238              Genera_coordenadas_X
1120+ A238
1121+ A238              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1122+ A238              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1123+ A238
1124+ A238              ;   Limpiamos almacenes.
1125+ A238
1126+ A238              ;    call Limpia_Coordenadas_X
1127+ A238
1128+ A238              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1129+ A238
1130+ A238 21 36 8C         ld hl,Coordenadas_X_Entidad
1131+ A23B 3A BB 8B         ld a,(Coordenada_X)
1132+ A23E CD 60 A2         call Guarda_coordenadas_X
1133+ A241
1134+ A241              ;   Almacenamos las coordenadas X de Amadeus.
1135+ A241
1136+ A241 3A 75 89         ld a,(CX_Amadeus)
1137+ A244 CD 60 A2         call Guarda_coordenadas_X
1138+ A247 CD 74 A2         call Compara_coordenadas_X
1139+ A24A C0               ret nz
1140+ A24B
1141+ A24B 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1142+ A24D 32 BE 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1143+ A250
1144+ A250 2A FA 8B         ld hl,(Puntero_store_caja)
1145+ A253 2C               inc l
1146+ A254 2C               inc l
1147+ A255 2C               inc l
1148+ A256 2C               inc l
1149+ A257 22 32 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1150+ A25A
1151+ A25A 21 31 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1152+ A25D CB D6            set 2,(hl)
1153+ A25F
1154+ A25F C9               ret
1155+ A260
1156+ A260               ; ----- ----- ----- ----- -----
1157+ A260
1158+ A260 77           Guarda_coordenadas_X ld (hl),a
1159+ A261 3C               inc a
1160+ A262 2C               inc l
1161+ A263 77               ld (hl),a
1162+ A264 3C               inc a
1163+ A265 2C               inc l
1164+ A266 77               ld (hl),a
1165+ A267 2C               inc l
1166+ A268 C9               ret
1167+ A269
1168+ A269 AF           Limpia_Coordenadas_X xor a
1169+ A26A 06 06            ld b,6
1170+ A26C 21 39 8C         ld hl,Coordenadas_X_Amadeus
1171+ A26F 77           1 ld (hl),a
1172+ A270 23               inc hl
1173+ A271 10 FC            djnz 1B
1174+ A273 C9               ret
1175+ A274
1176+ A274              ; ----- ----- ----- ----- -----
1177+ A274
1178+ A274              Compara_coordenadas_X
1179+ A274
1180+ A274 DD 21 36 8C      ld ix,Coordenadas_X_Entidad
1181+ A278 DD 7E 00         ld a,(ix+0)
1182+ A27B CD 89 A2         call Comparando
1183+ A27E C8               ret z
1184+ A27F
1185+ A27F 3C               inc a
1186+ A280 CD 98 A2         call Comparando_1
1187+ A283 C8               ret z
1188+ A284
1189+ A284 3C               inc a
1190+ A285 CD 98 A2         call Comparando_1
1191+ A288 C9               ret
1192+ A289
1193+ A289              ; ----- ----- ----- ----- -----
1194+ A289              ;
1195+ A289              ;   4/12/23
1196+ A289              ;
1197+ A289              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1198+ A289
1199+ A289              Comparando
1200+ A289
1201+ A289 DD 2C            inc ixl
1202+ A28B DD 2C            inc ixl
1203+ A28D DD 2C            inc ixl
1204+ A28F
1205+ A28F DD 46 00         ld b,(ix+0)
1206+ A292 DD 4E 01         ld c,(ix+1)
1207+ A295 DD 56 02         ld d,(ix+2)
1208+ A298
1209+ A298 B8           Comparando_1 cp b
1210+ A299 C8               ret z
1211+ A29A B9               cp c
1212+ A29B C8               ret z
1213+ A29C BA               cp d
1214+ A29D C9               ret
1215+ A29E
1216+ A29E              ; -----------------------------------------------------------------------
1217+ A29E              ;
1218+ A29E              ;   04/7/24
1219+ A29E              ;
1220+ A29E
1221+ A29E              Detecta_colision_nave_entidad
1222+ A29E
1223+ A29E              ; Exclusiones:
1224+ A29E
1225+ A29E              ; Salimos de la rutina si no hay advertencia de posible colisión.
1226+ A29E
1227+ A29E 21 31 8C     	ld hl,Impacto2
1228+ A2A1 CB 56        	bit 2,(hl)
1229+ A2A3 C8           	ret z
1230+ A2A4
1231+ A2A4              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1232+ A2A4
1233+ A2A4 2A 7B 89         ld hl,(Pamm_Amadeus)
1234+ A2A7 CD 94 90         call Extrae_address
1235+ A2AA 54               ld d,h
1236+ A2AB 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1237+ A2AC
1238+ A2AC 2A 79 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1239+ A2AF 06 10            ld b,16                                        ; Contador de scanlines en B.
1240+ A2B1 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1241+ A2B4
1242+ A2B4 C5           1 push bc
1243+ A2B5 06 03            ld b,3
1244+ A2B7 E5               push hl
1245+ A2B8
1246+ A2B8              ; .db
1247+ A2B8
1248+ A2B8 1A           3 ld a,(de)
1249+ A2B9 A7               and a
1250+ A2BA 20 03            jr nz,4F
1251+ A2BC
1252+ A2BC 2C               inc l
1253+ A2BD 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1254+ A2BF
1255+ A2BF ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1256+ A2C1 28 04            jr z,2F
1257+ A2C3
1258+ A2C3              ; Impacto.
1259+ A2C3 FD 2D            dec iyl
1260+ A2C5 28 22            jr z,5F
1261+ A2C7
1262+ A2C7 1C           2 inc e
1263+ A2C8 10 EE            djnz 3B
1264+ A2CA
1265+ A2CA E1               pop hl
1266+ A2CB
1267+ A2CB              ; Hay salto de línea en el puntero de impresión ???
1268+ A2CB
1269+ A2CB 7C               ld a,h
1270+ A2CC D6 57            sub $57
1271+ A2CE 20 0A            jr nz,6F
1272+ A2D0
1273+ A2D0              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1274+ A2D0
1275+ A2D0 2A 79 89         ld hl,(p.imp.amadeus)
1276+ A2D3 3E 20            ld a,$20
1277+ A2D5 A7               and a
1278+ A2D6 85               add l
1279+ A2D7 6F               ld l,a
1280+ A2D8 18 01            jr 7F
1281+ A2DA
1282+ A2DA 24           6 inc h
1283+ A2DB
1284+ A2DB C1           7 pop bc
1285+ A2DC 10 D6            djnz 1B
1286+ A2DE
1287+ A2DE              ;   Fin de la comparativa.
1288+ A2DE
1289+ A2DE              ;   NO HAY COLISIÓN !!!!!.
1290+ A2DE              ;
1291+ A2DE              ;   .db (Impacto) de Amadeus a "0".
1292+ A2DE              ;   RES el bit2 de (Impacto2).
1293+ A2DE              ;
1294+ A2DE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1295+ A2DE              ;   Lo colocamos a "0".
1296+ A2DE
1297+ A2DE 21 31 8C         ld hl,Impacto2
1298+ A2E1 CB 96            res 2,(hl)
1299+ A2E3 2A 32 8C         ld hl,(Entidad_sospechosa_de_colision)
1300+ A2E6 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1301+ A2E8 C9               ret
1302+ A2E9
1303+ A2E9              ;   COLISIÓN !!!!!.
1304+ A2E9              ;
1305+ A2E9              ;   .db (Impacto) de Amadeus a "1".
1306+ A2E9              ;   SET el bit3 de (Impacto2).
1307+ A2E9              ;
1308+ A2E9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1309+ A2E9
1310+ A2E9 E1           5 pop hl
1311+ A2EA C1               pop bc
1312+ A2EB
1313+ A2EB 21 78 89         ld hl,Impacto_Amadeus
1314+ A2EE 36 01            ld (hl),1
1315+ A2F0 21 31 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1316+ A2F3 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1317+ A2F5
1318+ A2F5 11 C0 87         ld de,Indice_Explosion_entidades
1319+ A2F8 2A 32 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1320+ A2FB
1321+ A2FB 23               inc hl
1322+ A2FC 23               inc hl
1323+ A2FD 23               inc hl
1324+ A2FE
1325+ A2FE 73               ld (hl),e
1326+ A2FF 23               inc hl
1327+ A300 72               ld (hl),d
1328+ A301
1329+ A301              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1330+ A301
1331+ A301 11 60 88         ld de,Indice_Explosion_Amadeus
1332+ A304 21 7B 89         ld hl,Pamm_Amadeus
1333+ A307
1334+ A307 73               ld (hl),e
1335+ A308 23               inc hl
1336+ A309 72               ld (hl),d
1337+ A30A
1338+ A30A C9               ret
1339+ A30B
1340+ A30B
1341+ A30B
# file closed: Disparo.asm
2069  A30B
2070  A30B              	SAVESNA "Pruebas.sna", START
2071  A30B
2072  A30B
2073  A30B
2074  A30B
# file closed: Banco_de_pruebas.asm
