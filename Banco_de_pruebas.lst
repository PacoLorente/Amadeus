# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 18 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 08 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DB 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 15 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 18 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 11 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 11 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 80 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 80 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 80 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 80 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8906
 305  8906              ;														DESCRIPCIÓN:
 306  8906              ;
 307  8906              ;														BIT 0,
 308  8906
 309  8906              ; Gestión de ENTIDADES y CAJAS.
 310  8906
 311  8906 00 00        Puntero_store_caja defw 0
 312  8908 00 00        Puntero_restore_caja defw 0
 313  890A 00 00        Indice_restore_caja defw 0
 314  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890D 00           Numero_parcial_de_entidades db 0
 316  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 317  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8910              ;														; _ (Numero_de_malotes)="0".
 321  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8914              ;														; _ puntero (Indice_entidades).
 324  8914
 325  8914
 326  8914              ;---------------------------------------------------------------------------------------------------------------
 327  8914              ;
 328  8914              ;	2/9/23
 329  8914              ;
 330  8914              ;	Álbumes.
 331  8914
 332  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8916              ;														; _variable para almacenar lo posición del puntero_
 334  8916              ; 														; _de pila, SP.
 335  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891A 00 00        Stack_snapshot defw 0
 339  891C 00 00        Stack_snapshot_disparos defw 0
 340  891E
 341  891E 00 00        End_Snapshot defw 0
 342  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8922              ;														; _el snapshot de los registros del siguiente disparo.
 345  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8924 00 00        End_Snapshot_1 defw 0
 348  8926 00 00        End_Snapshot_disparos_1 defw 0
 349  8928 00 00        End_Snapshot_2 defw 0
 350  892A 00 00        End_Snapshot_disparos_2 defw 0
 351  892C 00 00        End_Snapshot_3 defw 0
 352  892E 00 00        End_Snapshot_disparos_3 defw 0
 353  8930
 354  8930 00 00        Puntero_indice_album_de_fotos defw 0
 355  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8934
 357  8934 00 00        Puntero_indice_End_Snapshot defw 0
 358  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8938 00 00        Puntero_de_End_Snapshot defw 0
 360  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893C
 362  893C F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893D              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893D 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 365  893E              ;
 366  893E              ;														DESCRIPCIÓN:
 367  893E              ;
 368  893E              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 369  893E              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 370  893E              ;																_ álbum.
 371  893E              ;
 372  893E
 373  893E              ;---------------------------------------------------------------------------------------------------------------
 374  893E
 375  893E              ; Gestión de Disparos.
 376  893E
 377  893E 00           Numero_de_disparotes db 0
 378  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 379  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 380  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 381  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 382  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 383  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 384  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 385  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 386  8946              ;														; _produzca colisión.
 387  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 388  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 389  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 390  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 391  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 393  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 394  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 395  8951
 396  8951              ;---------------------------------------------------------------------------------------------------------------
 397  8951
 398  8951              ; Relojes y temporizaciones.
 399  8951
 400  8951 00           Contador_de_frames db 0
 401  8952 00           Contador_de_frames_2 db 0
 402  8953
 403  8953 04           Clock_explosion db 4
 404  8954 1E           Clock_Entidades_en_curso db 30
 405  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 406  8956              ;														; Repite la oleada de entidades.
 407  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 408  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 409  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 410  8959
 411  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 412  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 413  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 414  895C
 415  895C              ;---------------------------------------------------------------------------------------------------------------
 416  895C
 417  895C              ; Gestión de NIVELES.
 418  895C
 419  895C 00           Nivel db 0												; Nivel actual del juego.
 420  895D 00 00        Puntero_indice_NIVELES defw 0
 421  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 422  8961              ; 														; _ que definen el NIVEL.
 423  8961              ; Y todo comienza aquí .....
 424  8961              ;
 425  8961              ; Rutina principal *************************************************************************************************************************************************************************
 426  8961              ;
 427  8961              ;	14/11/22
 428  8961
 429  8961              START
 430  8961
 431  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 432  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 433  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 434  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 435  896A F3           	DI
 436  896B
 437  896B 3E 07        	ld a,%00000111
 438  896D CD 3E 99     	call Cls
 439  8970
 440  8970 CD 59 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 441  8973
 442  8973              ; INICIALIZACIÓN.
 443  8973
 444  8973 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 445  8976
 446  8976 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 447  8979
 448  8979 CD 7E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 449  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 450  897C CD 94 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 451  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 452  897F              ; ----------
 453  897F
 454  897F CD 09 8D     	call Restore_entidad
 455  8982
 456  8982 21 0D 89     	ld hl,Numero_parcial_de_entidades
 457  8985 46           	ld b,(hl)
 458  8986 04           	inc b
 459  8987 05           	dec b
 460  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 461  898A
 462  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 463  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 464  898A              ;	Pintamos el resto de entidades:
 465  898A
 466  898A              ;	INICIA ENTIDADES !!!!!
 467  898A
 468  898A C5           1 push bc  												; Guardo el contador de entidades.
 469  898B CD 4F 8B     	call Inicia_entidad
 470  898E C1           	pop bc
 471  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 472  8991
 473  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 474  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 475  8991
 476  8991 3A 03 89     	ld a,(Ctrl_1)
 477  8994 CB 5F        	bit 3,a
 478  8996 20 00        	jr nz,5F											; Loop
 479  8998
 480  8998              ; 	INICIA AMADEUS !!!!!
 481  8998
 482  8998              3
 483  8998
 484  8998              ;	call Restore_Amadeus
 485  8998              ;	call Inicia_Puntero_objeto
 486  8998              ;	call Draw
 487  8998              ;	call Guarda_foto_registros
 488  8998              ;	call Guarda_datos_de_borrado_Amadeus
 489  8998
 490  8998              ;	ld de,Amadeus_db
 491  8998              ;	call Store_Amadeus
 492  8998
 493  8998              ; 	INICIA DISPAROS !!!!!
 494  8998
 495  8998              ;	call Inicia_Puntero_Disparo_Entidades
 496  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 497  8998
 498  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 499  8998
 500  8998 CD 7E 8B     5 call Inicia_punteros_de_cajas
 501  899B CD 09 8D     	call Restore_entidad
 502  899E
 503  899E 3A 03 89     	ld a,(Ctrl_1)
 504  89A1 CB 5F        	bit 3,a
 505  89A3 28 07        	jr z,6F
 506  89A5
 507  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 508  89A5
 509  89A5 21 03 89     	ld hl,Ctrl_1
 510  89A8 CB 9E        	res 3,(hl)
 511  89AA 18 03        	jr Main
 512  89AC
 513  89AC
 514  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 515  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 516  89AC              ; _ para situarnos en el siguiente album.
 517  89AC
 518  89AC CD C5 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 519  89AF
 520  89AF
 521  89AF              ; ------------------------------------
 522  89AF
 523  89AF              Main
 524  89AF              ;
 525  89AF              ;	3/8/23
 526  89AF
 527  89AF              ; 	ei
 528  89AF
 529  89AF 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 530  89B2 47           	ld b,a
 531  89B3 3A 51 89     	ld a,(Contador_de_frames)
 532  89B6 B8           	cp b
 533  89B7 20 18        	jr nz,13F
 534  89B9
 535  89B9 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 536  89BC 47           	ld b,a
 537  89BD 3A 0E 89     	ld a,(Entidades_en_curso)
 538  89C0 B8           	cp b
 539  89C1 28 0E        	jr z,13F
 540  89C3 30 0C        	jr nc,13F
 541  89C5
 542  89C5 3C           	inc a
 543  89C6 32 0E 89     	ld (Entidades_en_curso),a
 544  89C9
 545  89C9 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 546  89CC
 547  89CC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 548  89CC              ;! _ IMPREDECIBLE !!!!
 549  89CC
 550  89CC C6 64        	add 100
 551  89CE 32 54 89     	ld (Clock_Entidades_en_curso),a
 552  89D1
 553  89D1              ; Habilita disparos.
 554  89D1
 555  89D1 21 56 89     13 ld hl,Disparo_Amadeus
 556  89D4 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 557  89D7 CD 02 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 558  89DA
 559  89DA 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 560  89DD 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 561  89E0 CD 02 9D     	call Habilita_disparos
 562  89E3
 563  89E3              ; COLISIONES.
 564  89E3
 565  89E3 CD 13 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 566  89E6
 567  89E6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 568  89E6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 569  89E6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 570  89E6
 571  89E6 AF           	xor a
 572  89E7 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 573  89EA
 574  89EA CD 7E 8B     	call Inicia_punteros_de_cajas
 575  89ED CD 09 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 576  89F0              ; 														; _ en DRAW.
 577  89F0 3A C6 88     	ld a,(Filas)
 578  89F3 A7           	and a
 579  89F4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 580  89F6 CD 1B 8D     	call Incrementa_punteros_de_cajas
 581  89F9 18 F2        	jr 12B
 582  89FB
 583  89FB              ; ---------------------------------------------------------------------------------------
 584  89FB
 585  89FB 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 586  89FE 47               ld b,a
 587  89FF A7           	and a
 588  8A00 20 14        	jr nz,11F
 589  8A02
 590  8A02 21 03 89     	ld hl,Ctrl_1
 591  8A05 CB 66        	bit 4,(hl)
 592  8A07 C2 94 8A     	jp nz,16F
 593  8A0A
 594  8A0A 21 03 89     	ld hl,Ctrl_1
 595  8A0D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 596  8A0F
 597  8A0F 3A 51 89     	ld a,(Contador_de_frames)
 598  8A12 3C           	inc a
 599  8A13 32 55 89     	ld (Activa_recarga_cajas),a
 600  8A16
 601  8A16              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 602  8A16
 603  8A16 3A 0E 89     11 ld a,(Entidades_en_curso)
 604  8A19 A7           	and a
 605  8A1A CA 94 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 606  8A1D 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 607  8A1E
 608  8A1E              ; Código que ejecutamos con cada entidad:
 609  8A1E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 610  8A1E
 611  8A1E C5           15 push bc 												; Nº de entidades en curso.
 612  8A1F
 613  8A1F              ; Impacto ???
 614  8A1F
 615  8A1F 3A DF 88     	ld a,(Impacto)
 616  8A22 A7           	and a
 617  8A23 28 32        	jr z,8F
 618  8A25
 619  8A25              ; Hay Impacto en esta entidad.
 620  8A25
 621  8A25 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 622  8A28 35           	dec (hl)
 623  8A29 20 63        	jr nz,17F
 624  8A2B
 625  8A2B              ;! Velocidad de la animación de la explosión.
 626  8A2B
 627  8A2B 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 628  8A2D              ;														; _,(velocidad de la explosión).
 629  8A2D
 630  8A2D              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 631  8A2D 18 FE        	jr $
 632  8A2F
 633  8A2F CD CA 8D     	call Repone_datos_de_borrado
 634  8A32 CD 22 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 635  8A35
 636  8A35
 637  8A35              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 638  8A35
 639  8A35 3A 01 89     	ld a,(Ctrl_2)
 640  8A38 CB 4F        	bit 1,a
 641  8A3A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 642  8A3C
 643  8A3C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 644  8A3C
 645  8A3C 3A CE 88     	ld a,(CTRL_DESPLZ)
 646  8A3F A7           	and a
 647  8A40 20 08        	jr nz,18F
 648  8A42
 649  8A42 21 84 84     	ld hl,Indice_Explosion_2x2-2
 650  8A45 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 651  8A48 18 06        	jr 19F
 652  8A4A
 653  8A4A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 654  8A4D 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 655  8A50
 656  8A50 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 657  8A53 CB CE        	set 1,(hl)
 658  8A55 18 22        	jr 7F
 659  8A57
 660  8A57              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 661  8A57              ; _con las coordenadas de la entidad almacenada en DRAW.
 662  8A57
 663  8A57 3A 03 89     8 ld a,(Ctrl_1)
 664  8A5A CB 57        	bit 2,a
 665  8A5C 28 1B        	jr z,7F
 666  8A5E
 667  8A5E 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 668  8A61 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 669  8A62              ;														; E contiene la coordenada_X del disparo.
 670  8A62 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 671  8A65              ;														; H FILA, (Coordenada_y de la entidad).
 672  8A65 A7           	and a
 673  8A66 ED 52        	sbc hl,de
 674  8A68
 675  8A68 CD 4A 92     	call Determina_resultado_comparativa
 676  8A6B
 677  8A6B 78           	ld a,b
 678  8A6C A7           	and a
 679  8A6D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 680  8A6F
 681  8A6F              ; ----- ----- -----
 682  8A6F
 683  8A6F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 684  8A71 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 685  8A74
 686  8A74 21 03 89     	ld hl,Ctrl_1
 687  8A77 CB 96        	res 2,(hl)
 688  8A79
 689  8A79 CD EB 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 690  8A7C
 691  8A7C 3A F0 88     	ld a,(Ctrl_0)
 692  8A7F CB 67        	bit 4,a
 693  8A81 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 694  8A83
 695  8A83              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 696  8A83              ; [[[
 697  8A83 CD A4 8D     	call Detecta_disparo_entidad
 698  8A86              ; ]]]
 699  8A86
 700  8A86 CD 5F 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 701  8A89              ;	call Guarda_datos_de_borrado
 702  8A89
 703  8A89 21 F0 88     	ld hl,Ctrl_0
 704  8A8C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 705  8A8E
 706  8A8E CD CE 8C     17 call Store_Restore_cajas
 707  8A91
 708  8A91 C1           	pop bc
 709  8A92 10 8A        	djnz 15B
 710  8A94
 711  8A94              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 712  8A94              ; Hemos gestionado todas las unidades.
 713  8A94              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 714  8A94
 715  8A94              ;	ld hl,Ctrl_1
 716  8A94              ;	res 2,(hl)
 717  8A94
 718  8A94 CD C5 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 719  8A97              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 720  8A97
 721  8A97              ; ----------------------------------------
 722  8A97
 723  8A97 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 724  8A9A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 725  8A9C CA AF 89     	jp z,Main
 726  8A9F
 727  8A9F 3A 51 89     	ld a,(Contador_de_frames)
 728  8AA2 47           	ld b,a
 729  8AA3 3A 55 89     	ld a,(Activa_recarga_cajas)
 730  8AA6 B8           	cp b
 731  8AA7 28 08        	jr z,20F
 732  8AA9
 733  8AA9 21 03 89     	ld hl,Ctrl_1
 734  8AAC CB E6        	set 4,(hl)
 735  8AAE C3 AF 89     	jp Main
 736  8AB1
 737  8AB1 21 03 89     20 ld hl,Ctrl_1
 738  8AB4 CB A6        	res 4,(hl)
 739  8AB6
 740  8AB6 3A 51 89     	ld a,(Contador_de_frames)
 741  8AB9
 742  8AB9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 743  8AB9              ;! _ IMPREDECIBLE !!!!
 744  8AB9
 745  8AB9 C6 0A        	add 10
 746  8ABB 32 54 89     	ld (Clock_Entidades_en_curso),a
 747  8ABE
 748  8ABE C3 76 89     	jp 4B
 749  8AC1
 750  8AC1 C9           	ret
 751  8AC2
 752  8AC2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 753  8AC2
 754  8AC2              Gestiona_Amadeus
 755  8AC2
 756  8AC2 3E 04            ld a,4
 757  8AC4 D3 FE        	out ($fe),a											; Azul.
 758  8AC6
 759  8AC6 CD 30 8D     	call Restore_Amadeus
 760  8AC9
 761  8AC9              ;! Activa/desactiva impacto con Amadeus.
 762  8AC9
 763  8AC9 3A DF 88     	ld a,(Impacto)
 764  8ACC A7           	and a
 765  8ACD 20 FE        	jr nz,$
 766  8ACF
 767  8ACF CD 3C 8B     	call Mov_Amadeus
 768  8AD2
 769  8AD2 3A F0 88     	ld a,(Ctrl_0)
 770  8AD5 CB 67        	bit 4,a
 771  8AD7 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 772  8AD9
 773  8AD9 CD 5F 8B     	call Guarda_foto_entidad_a_pintar
 774  8ADC CD AA 8D     	call Guarda_datos_de_borrado_Amadeus
 775  8ADF
 776  8ADF 21 F0 88     14 ld hl,Ctrl_0
 777  8AE2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 778  8AE4
 779  8AE4 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 780  8AE7 CD 42 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 781  8AEA
 782  8AEA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 783  8AEA
 784  8AEA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 785  8AEA
 786  8AEA              ;	call Calcula_numero_de_disparotes
 787  8AEA
 788  8AEA C9           	ret
 789  8AEB
 790  8AEB              ; --------------------------------------------------------------------------------------------------------------
 791  8AEB              ;
 792  8AEB              ;	27/05/23
 793  8AEB
 794  8AEB              Mov_obj
 795  8AEB
 796  8AEB 3A 01 89     	ld a,(Ctrl_2)
 797  8AEE CB 4F        	bit 1,a
 798  8AF0 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 799  8AF2
 800  8AF2              ; Explosión:
 801  8AF2
 802  8AF2 3A 02 89     	ld a,(Frames_explosion)
 803  8AF5 A7           	and a
 804  8AF6 20 11        	jr nz,4F
 805  8AF8
 806  8AF8              ; Una alimaña menos!!!!!!!!!1
 807  8AF8
 808  8AF8 CD 4B 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 809  8AFB 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 810  8AFE 35           	dec (hl)
 811  8AFF 21 0E 89     	ld hl,Entidades_en_curso
 812  8B02 35           	dec (hl)
 813  8B03 21 0C 89     	ld hl,Numero_de_entidades
 814  8B06 35           	dec (hl)
 815  8B07 18 32        	jr 3F
 816  8B09
 817  8B09              ; -----
 818  8B09
 819  8B09              ;	`Movemos´ la explosión.
 820  8B09
 821  8B09 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 822  8B0C 23           	inc hl
 823  8B0D 23           	inc hl
 824  8B0E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 825  8B11 CD 80 8C     	call Extrae_address
 826  8B14 22 CA 88     	ld (Puntero_objeto),hl
 827  8B17
 828  8B17 21 02 89     	ld hl,Frames_explosion
 829  8B1A 35           	dec (hl)
 830  8B1B
 831  8B1B              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 832  8B1B 18 1E        	jr 3F
 833  8B1D
 834  8B1D AF           2 xor a
 835  8B1E 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 836  8B21
 837  8B21              ; Movemos Entidades malignas.
 838  8B21
 839  8B21 CD AD 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 840  8B24
 841  8B24 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 842  8B27 CB 67        	bit 4,a
 843  8B29 C8           	ret z
 844  8B2A
 845  8B2A              ; Ha habido desplazamiento de la entidad maligna.
 846  8B2A              ; Ha llegado a zona de AMADEUS ???
 847  8B2A
 848  8B2A 3A CD 88     	ld a,(Coordenada_y)
 849  8B2D FE 14        	cp $14
 850  8B2F D4 D8 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 851  8B32              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 852  8B32              ; ---------
 853  8B32
 854  8B32 CD 66 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 855  8B35 CD CA 8D     	call Repone_datos_de_borrado
 856  8B38 CD 22 8C     	call Limpia_Variables_de_borrado
 857  8B3B
 858  8B3B C9           3 ret													; _de la misma.
 859  8B3C
 860  8B3C              ; --------------------------------------------------------------------------------------------------------------
 861  8B3C              ;
 862  8B3C              ;	29/1/23
 863  8B3C
 864  8B3C              Mov_Amadeus
 865  8B3C
 866  8B3C CD 6D 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 867  8B3F
 868  8B3F 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 869  8B42 CB 67        	bit 4,a
 870  8B44 C8           	ret z
 871  8B45
 872  8B45              ; ---------
 873  8B45
 874  8B45 CD 66 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 875  8B48 CD BA 8D     	call Repone_datos_de_borrado_Amadeus
 876  8B4B CD 22 8C     	call Limpia_Variables_de_borrado
 877  8B4E
 878  8B4E C9           	ret
 879  8B4F
 880  8B4F              ; -----------------------------------------------------------------------------------
 881  8B4F
 882  8B4F CD 86 8C     Inicia_entidad	call Inicia_Puntero_objeto
 883  8B52 CD 52 99     	call Recompone_posicion_inicio
 884  8B55 CD 31 93     	call Draw
 885  8B58 CD A0 7F     	call Guarda_foto_registros
 886  8B5B              ;	call Guarda_datos_de_borrado
 887  8B5B CD CE 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 888  8B5E C9           	ret
 889  8B5F
 890  8B5F              ; --------------------------------------------------------------------------------------------------------------
 891  8B5F              ;
 892  8B5F              ;	31/08/23
 893  8B5F              ;
 894  8B5F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 895  8B5F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 896  8B5F
 897  8B5F              Guarda_foto_entidad_a_pintar
 898  8B5F
 899  8B5F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 900  8B5F
 901  8B5F CD 31 93     	call Draw
 902  8B62 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 903  8B65 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 904  8B66
 905  8B66              ; --------------------------------------------------------------------------------------------------------------
 906  8B66              ;
 907  8B66              ;	19/9/23
 908  8B66
 909  8B66 21 C6 88     Prepara_var_pintado ld hl,Filas
 910  8B69 11 E6 88     	ld de,Variables_de_pintado
 911  8B6C 01 08 00     	ld bc,8
 912  8B6F ED B0        	ldir
 913  8B71 C9           	ret
 914  8B72
 915  8B72              ; --------------------------------------------------------------------------------------------------------------
 916  8B72
 917  8B72 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 918  8B75 11 C6 88     	ld de,Filas
 919  8B78 01 08 00     	ld bc,8
 920  8B7B ED B0        	ldir
 921  8B7D C9           	ret
 922  8B7E
 923  8B7E              ; *************************************************************************************************************************************************************
 924  8B7E              ;
 925  8B7E              ; 8/1/23
 926  8B7E              ;
 927  8B7E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 928  8B7E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 929  8B7E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 930  8B7E
 931  8B7E              ; Destruye HL y DE !!!!!
 932  8B7E
 933  8B7E              Inicia_punteros_de_cajas
 934  8B7E
 935  8B7E 21 8C 85     	ld hl,Indice_de_cajas
 936  8B81 CD 80 8C         call Extrae_address
 937  8B84 22 06 89         ld (Puntero_store_caja),hl
 938  8B87 21 8E 85     	ld hl,Indice_de_cajas+2
 939  8B8A 22 0A 89     	ld (Indice_restore_caja),hl
 940  8B8D CD 80 8C     	call Extrae_address
 941  8B90 22 08 89     	ld (Puntero_restore_caja),hl
 942  8B93 C9               ret
 943  8B94
 944  8B94              ; ---------------------------------------------------------------
 945  8B94              ;
 946  8B94              ;	9/8/23
 947  8B94              ;
 948  8B94              ;	Inicialización y gestión de álbumes de fotos y cajas.
 949  8B94
 950  8B94              Inicia_punteros_de_albumes_y_malotes
 951  8B94
 952  8B94 21 EC 84     	ld hl,Indice_album_de_fotos
 953  8B97 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 954  8B9A CD 80 8C     	call Extrae_address
 955  8B9D 22 1A 89     	ld (Stack_snapshot),hl
 956  8BA0
 957  8BA0 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 958  8BA3 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 959  8BA6 CD 80 8C     	call Extrae_address
 960  8BA9 22 1C 89     	ld (Stack_snapshot_disparos),hl
 961  8BAC
 962  8BAC 21 FC 84     	ld hl,Indice_End_Snapshot
 963  8BAF 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 964  8BB2 CD 80 8C     	call Extrae_address
 965  8BB5 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 966  8BB8
 967  8BB8 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 968  8BBB 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 969  8BBE CD 80 8C     	call Extrae_address
 970  8BC1 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 971  8BC4
 972  8BC4 C9           	ret
 973  8BC5
 974  8BC5              ;	23/10/23
 975  8BC5
 976  8BC5              Avanza_puntero_de_album_de_fotos_de_entidades
 977  8BC5
 978  8BC5              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 979  8BC5
 980  8BC5              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 981  8BC5              ; Estamos en el último álbum del índice???.
 982  8BC5              ;
 983  8BC5
 984  8BC5 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 985  8BC8 01 F2 84     	ld bc,Indice_album_de_fotos+6
 986  8BCB A7           	and a
 987  8BCC ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 988  8BCE 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 989  8BD0
 990  8BD0              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
 991  8BD0              ; Actualizamos (Semaforo).
 992  8BD0
 993  8BD0 21 3C 89     	ld hl,Semaforo
 994  8BD3 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
 995  8BD5
 996  8BD5              ; Inicia con el buffer de video completo !!!
 997  8BD5
 998  8BD5 FB           	ei
 999  8BD6 76           	halt
1000  8BD7 C9           	ret
1001  8BD8
1002  8BD8 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1003  8BDB 23           	inc hl
1004  8BDC 23           	inc hl
1005  8BDD 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1006  8BE0 CD 80 8C     	call Extrae_address
1007  8BE3 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1008  8BE6
1009  8BE6 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1010  8BE9 23           	inc hl
1011  8BEA 23           	inc hl
1012  8BEB 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1013  8BEE CD 80 8C     	call Extrae_address
1014  8BF1 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1015  8BF4
1016  8BF4 21 3C 89     	ld hl,Semaforo
1017  8BF7 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1018  8BF9
1019  8BF9 C9           	ret
1020  8BFA
1021  8BFA              ; *************************************************************************************************************************************************************
1022  8BFA              ;
1023  8BFA              ; 8/1/23
1024  8BFA              ;
1025  8BFA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1026  8BFA
1027  8BFA 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1028  8BFD 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1029  8C00 C9           	ret
1030  8C01 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1031  8C04 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1032  8C07 C9           	ret
1033  8C08
1034  8C08              ; -------------------------------------------------------------------------------------------------------------
1035  8C08              ;
1036  8C08              ; 21/9/23
1037  8C08              ;
1038  8C08
1039  8C08              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1040  8C08
1041  8C08              Limpia_album_Amadeus
1042  8C08
1043  8C08 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1044  8C0B 7E           	ld a,(hl)
1045  8C0C A7           	and a
1046  8C0D C8           	ret z
1047  8C0E
1048  8C0E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C11 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1050  8C14 01 0B 00     	ld bc,11
1051  8C17 AF           	xor a
1052  8C18 77           	ld (hl),a
1053  8C19 ED B0        	ldir
1054  8C1B
1055  8C1B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1056  8C1E 22 22 89     	ld (End_Snapshot_Amadeus),hl
1057  8C21
1058  8C21 C9           	ret
1059  8C22
1060  8C22 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1061  8C25 11 E1 88     	ld de,Variables_de_borrado+1
1062  8C28 01 05 00     	ld bc,5
1063  8C2B AF           	xor a
1064  8C2C 77           	ld (hl),a
1065  8C2D ED B0        	ldir
1066  8C2F C9           	ret
1067  8C30
1068  8C30              ; -------------------------------------------------------------------------------------------------------------
1069  8C30              ;
1070  8C30              ; 8/9/23
1071  8C30              ;
1072  8C30
1073  8C30              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1074  8C30              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1075  8C30
1076  8C30              Calcula_numero_de_malotes
1077  8C30
1078  8C30 21 00 70     	ld hl,Album_de_fotos
1079  8C33 EB           	ex de,hl
1080  8C34 2A 1E 89     	ld hl,(End_Snapshot)
1081  8C37
1082  8C37 7C           	ld a,h
1083  8C38 A7           	and a
1084  8C39 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1085  8C3B
1086  8C3B 06 00        4 ld b,0
1087  8C3D 7D           	ld a,l
1088  8C3E 93           	sub e
1089  8C3F 28 07        	jr z,1F
1090  8C41
1091  8C41              ; Nº de malotes no es "0".
1092  8C41
1093  8C41 D6 06        2 sub 6
1094  8C43 04           	inc b
1095  8C44 A7           	and a
1096  8C45 20 FA        	jr nz,2B
1097  8C47 78           	ld a,b
1098  8C48
1099  8C48 32 0F 89     1 ld (Numero_de_malotes),a
1100  8C4B C9           	ret
1101  8C4C
1102  8C4C              ; -------------------------------------------------------------------------------------------------------------
1103  8C4C              ;
1104  8C4C              ; 8/9/23
1105  8C4C              ;
1106  8C4C
1107  8C4C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1108  8C4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1109  8C4C
1110  8C4C              Calcula_malotes_Amadeus
1111  8C4C
1112  8C4C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1113  8C4F EB           	ex de,hl
1114  8C50 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1115  8C53
1116  8C53 7C           	ld a,h
1117  8C54 A7           	and a
1118  8C55 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1119  8C57
1120  8C57 06 00        	ld b,0
1121  8C59 7D           	ld a,l
1122  8C5A 93           	sub e
1123  8C5B 28 07        	jr z,1F
1124  8C5D
1125  8C5D              ; Nº de malotes no es "0".
1126  8C5D
1127  8C5D D6 06        2 sub 6
1128  8C5F 04           	inc b
1129  8C60 A7           	and a
1130  8C61 20 FA        	jr nz,2B
1131  8C63 78           	ld a,b
1132  8C64
1133  8C64 32 0F 89     1 ld (Numero_de_malotes),a
1134  8C67 C9           	ret
1135  8C68
1136  8C68              ; -------------------------------------------------------------------------------------------------------------
1137  8C68              ;
1138  8C68              ; 28/2/23
1139  8C68              ;
1140  8C68
1141  8C68              Calcula_numero_de_disparotes
1142  8C68
1143  8C68 21 50 71     	ld hl,Album_de_fotos_disparos
1144  8C6B EB           	ex de,hl
1145  8C6C 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1146  8C6F
1147  8C6F 06 00        	ld b,0
1148  8C71 7D           	ld a,l
1149  8C72 93           	sub e
1150  8C73 28 07        	jr z,1F
1151  8C75
1152  8C75              ; Nº de malotes no es "0".
1153  8C75
1154  8C75 D6 06        2 sub 6
1155  8C77 04           	inc b
1156  8C78 A7           	and a
1157  8C79 20 FA        	jr nz,2B
1158  8C7B 78           	ld a,b
1159  8C7C
1160  8C7C 32 3E 89     1 ld (Numero_de_disparotes),a
1161  8C7F C9           	ret
1162  8C80
1163  8C80              ; *************************************************************************************************************************************************************
1164  8C80              ;
1165  8C80              ; 20/10/22
1166  8C80              ;
1167  8C80              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1168  8C80              ;
1169  8C80              ; Destruye el puntero y DE !!!!!
1170  8C80
1171  8C80 5E           Extrae_address ld e,(hl)
1172  8C81 23           	inc hl
1173  8C82 56           	ld d,(hl)
1174  8C83 2B           	dec hl
1175  8C84 EB           	ex de,hl
1176  8C85 C9           	ret
1177  8C86
1178  8C86              ; *************************************************************************************************************************************************************
1179  8C86              ;
1180  8C86              ;	7/2/23
1181  8C86              ;
1182  8C86              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1183  8C86              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1184  8C86              ;
1185  8C86              ;   Destruye HL y BC !!!!!,
1186  8C86              ;
1187  8C86              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1188  8C86              ;					"0" ..... Izquierda.
1189  8C86
1190  8C86              Inicia_Puntero_objeto
1191  8C86
1192  8C86 3A DA 88     	ld a,(Cuad_objeto)
1193  8C89 E6 01        	and 1
1194  8C8B F5           	push af
1195  8C8C CC AA 8C     	call z,Inicia_puntero_objeto_izq
1196  8C8F F1           	pop af
1197  8C90 28 2B        	jr z,1F
1198  8C92 CD 97 8C     	call Inicia_puntero_objeto_der
1199  8C95 18 26        	jr 1F
1200  8C97
1201  8C97              ; Arrancamos desde la parte izquierda de la pantalla.
1202  8C97              ; Iniciamos (Indice_Sprite_der).
1203  8C97
1204  8C97 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1205  8C9A 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1206  8C9D CD 80 8C     	call Extrae_address
1207  8CA0 22 CA 88     	ld (Puntero_objeto),hl
1208  8CA3
1209  8CA3 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1210  8CA6 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CA9 C9           	ret
1212  8CAA
1213  8CAA              ; Arrancamos desde la parte derecha de la pantalla.
1214  8CAA              ; Iniciamos (Indice_Sprite_izq).
1215  8CAA
1216  8CAA 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1217  8CAD 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1218  8CB0 CD 80 8C     	call Extrae_address
1219  8CB3 22 CA 88     	ld (Puntero_objeto),hl
1220  8CB6
1221  8CB6 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1222  8CB9 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1223  8CBC C9           	ret
1224  8CBD
1225  8CBD              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1226  8CBD
1227  8CBD 21 40 83     1 ld hl,Amadeus
1228  8CC0 ED 4B CA 88  	ld bc,(Puntero_objeto)
1229  8CC4 B7 ED 42     	sub hl,bc
1230  8CC7 C0           	ret nz
1231  8CC8 21 F0 88     	ld hl,Ctrl_0
1232  8CCB CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1233  8CCD C9           	ret 												; _de nuestra nave en los extremos.
1234  8CCE
1235  8CCE              ; *************************************************************************************************************************************************************
1236  8CCE              ;
1237  8CCE              ;	14/5/23
1238  8CCE              ;
1239  8CCE              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1240  8CCE              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1241  8CCE
1242  8CCE              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1243  8CCE              ;	_de la 2ª y 3ª entidad respectivamente.
1244  8CCE
1245  8CCE              Store_Restore_cajas
1246  8CCE
1247  8CCE E5           	push hl
1248  8CCF D5           	push de
1249  8CD0 C5            	push bc
1250  8CD1
1251  8CD1              ;	STORE !!!!!
1252  8CD1              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1253  8CD1
1254  8CD1 21 C6 88     	ld hl,Filas
1255  8CD4 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1256  8CD8 01 3D 00     	ld bc,61
1257  8CDB ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1258  8CDD
1259  8CDD              ; 	Entidad_sospechosa. 20/4/23
1260  8CDD
1261  8CDD 3A DF 88     	ld a,(Impacto)
1262  8CE0 A7           	and a
1263  8CE1 28 0C        	jr z,1F
1264  8CE3
1265  8CE3 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1266  8CE6 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1267  8CE9 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1268  8CEA ED 4A        	adc hl,bc 											; _ "0" más adelante.
1269  8CEC 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1270  8CEF
1271  8CEF              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1272  8CEF
1273  8CEF 2A 08 89     1 ld hl,(Puntero_restore_caja)
1274  8CF2 7E           	ld a,(hl)
1275  8CF3 A7           	and a
1276  8CF4 F5           	push af
1277  8CF5 28 08        	jr z,2F
1278  8CF7
1279  8CF7 11 C6 88     	ld de,Filas
1280  8CFA 01 3D 00     	ld bc,61
1281  8CFD ED B0        	ldir
1282  8CFF
1283  8CFF CD 1B 8D     2 call Incrementa_punteros_de_cajas
1284  8D02
1285  8D02 F1           	pop af
1286  8D03 28 EA        	jr z,1B
1287  8D05
1288  8D05 C1           	pop bc
1289  8D06 D1           	pop de
1290  8D07 E1           	pop hl
1291  8D08
1292  8D08 C9           	ret
1293  8D09
1294  8D09              ; **************************************************************************************************
1295  8D09              ;
1296  8D09              ;	12/05/23
1297  8D09              ;
1298  8D09              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1299  8D09
1300  8D09 E5           Restore_entidad push hl
1301  8D0A D5           	push de
1302  8D0B C5            	push bc
1303  8D0C
1304  8D0C 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1305  8D0F 11 C6 88     	ld de,Filas
1306  8D12 01 3D 00     	ld bc,61
1307  8D15 ED B0        	ldir
1308  8D17
1309  8D17 C1           	pop bc
1310  8D18 D1           	pop de
1311  8D19 E1           	pop hl
1312  8D1A C9           	ret
1313  8D1B
1314  8D1B              ; **************************************************************************************************
1315  8D1B              ;
1316  8D1B              ;	08/05/23
1317  8D1B              ;
1318  8D1B              ;	Incrementamos los dos punteros de entidades. (+1).
1319  8D1B
1320  8D1B              Incrementa_punteros_de_cajas
1321  8D1B
1322  8D1B 2A 08 89     	ld hl,(Puntero_restore_caja)
1323  8D1E 22 06 89     	ld (Puntero_store_caja),hl
1324  8D21 2A 0A 89     	ld hl,(Indice_restore_caja)
1325  8D24 23           	inc hl
1326  8D25 23           	inc hl
1327  8D26 22 0A 89     	ld (Indice_restore_caja),hl
1328  8D29 CD 80 8C         call Extrae_address
1329  8D2C 22 08 89         ld (Puntero_restore_caja),hl
1330  8D2F C9               ret
1331  8D30
1332  8D30              ; **************************************************************************************************
1333  8D30              ;
1334  8D30              ;	25/01/23
1335  8D30              ;
1336  8D30              ;	Restore_Amadeus
1337  8D30              ;
1338  8D30              ;	Cargamos en DRAW los parámetros de Amadeus.
1339  8D30              ;
1340  8D30
1341  8D30 E5           Restore_Amadeus	push hl
1342  8D31 D5           	push de
1343  8D32 C5            	push bc
1344  8D33 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1345  8D36 11 C6 88     	ld de,Filas
1346  8D39 01 3D 00     	ld bc,61
1347  8D3C ED B0        	ldir
1348  8D3E C1           	pop bc
1349  8D3F D1           	pop de
1350  8D40 E1           	pop hl
1351  8D41 C9           	ret
1352  8D42
1353  8D42              ; *************************************************************************************************************************************************************
1354  8D42              ;
1355  8D42              ;	29/04/23
1356  8D42              ;
1357  8D42              ;	Store_Amadeus
1358  8D42              ;
1359  8D42              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1360  8D42              ;
1361  8D42              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1362  8D42              ;
1363  8D42              ;	DESTRUYE: HL y BC y DE.
1364  8D42
1365  8D42 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1366  8D45 01 3D 00     	ld bc,61
1367  8D48 ED B0        	ldir
1368  8D4A C9           	ret
1369  8D4B
1370  8D4B              ; -----------------------------------------------------------
1371  8D4B              ;
1372  8D4B              ;	27/04/23
1373  8D4B              ;
1374  8D4B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1375  8D4B              ;
1376  8D4B              ;	Destruye: HL,BC,DE,A
1377  8D4B
1378  8D4B 21 C6 88     Borra_datos_entidad ld hl,Filas
1379  8D4E 01 3C 00     	ld bc,60
1380  8D51 AF           	xor a
1381  8D52 77           	ld (hl),a
1382  8D53 11 C7 88     	ld de,Filas+1
1383  8D56 ED B0        	ldir
1384  8D58 C9           	ret
1385  8D59
1386  8D59              ; -----------------------------------------------------------
1387  8D59
1388  8D59              ; Teclado.
1389  8D59
1390  8D59 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1391  8D5B DB FE        	in a,($fe)
1392  8D5D E6 01        	and $01
1393  8D5F 28 02        	jr z,1f
1394  8D61 18 F6        	jr Pulsa_ENTER
1395  8D63 C9           1 ret
1396  8D64
1397  8D64              ; **************************************************************************************************
1398  8D64              ;
1399  8D64              ; Temporización.
1400  8D64
1401  8D64              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1402  8D64              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1403  8D64              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1404  8D64              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1405  8D64
1406  8D64              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1407  8D64              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1408  8D64              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1409  8D64
1410  8D64              ; A partir de $4f61 no hace falta DELAY.
1411  8D64
1412  8D64              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1413  8D64
1414  8D64 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1415  8D67 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1416  8D68 78           	LD A,B
1417  8D69 A7           	AND A
1418  8D6A 20 FB        	JR NZ,wait
1419  8D6C C9           	RET
1420  8D6D
1421  8D6D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1422  8D6D              ;
1423  8D6D              ;	5/3/23
1424  8D6D              ;
1425  8D6D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1426  8D6D
1427  8D6D              Movimiento_Amadeus
1428  8D6D
1429  8D6D              ; Disparo.
1430  8D6D
1431  8D6D 3A 56 89     	ld a,(Disparo_Amadeus)
1432  8D70 A7           	and a
1433  8D71 20 02        	jr nz,1F
1434  8D73 18 15        	jr 2F
1435  8D75
1436  8D75 3E F7        1 ld a,$f7													; "5" para disparar.
1437  8D77 DB FE        	in a,($fe)
1438  8D79 E6 10        	and $10
1439  8D7B
1440  8D7B F5           	push af
1441  8D7C CC 3B 8E     	call z,Genera_disparo
1442  8D7F F1           	pop af
1443  8D80 20 08        	jr nz,2F
1444  8D82
1445  8D82 3A 56 89     	ld a,(Disparo_Amadeus)
1446  8D85 EE 01        	xor 1
1447  8D87 32 56 89     	ld (Disparo_Amadeus),a
1448  8D8A
1449  8D8A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1450  8D8C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1451  8D8E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1452  8D90 CC 0C 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1453  8D93
1454  8D93 3E F7        	ld a,$f7
1455  8D95 DB FE        	in a,($fe)
1456  8D97 E6 01        	and $01
1457  8D99 C8           	ret z
1458  8D9A
1459  8D9A 3E F7        	ld a,$f7
1460  8D9C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1461  8D9E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1462  8DA0 CC EE 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1463  8DA3 C9           	ret
1464  8DA4
1465  8DA4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1466  8DA4              ;
1467  8DA4              ;	Rutina provisional para que los malotes cagen balas.
1468  8DA4
1469  8DA4              Detecta_disparo_entidad
1470  8DA4
1471  8DA4 3A 59 89     	ld a,(Disparo_entidad)
1472  8DA7 A7           	and a
1473  8DA8 C8           	ret z
1474  8DA9
1475  8DA9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1476  8DA9
1477  8DA9              ;	ld a,$7f				; Detecta SPACE.
1478  8DA9              ;	in a,($fe)
1479  8DA9              ;	and 1
1480  8DA9              ;	ret nz
1481  8DA9
1482  8DA9              ;	call Genera_disparo
1483  8DA9 C9           	ret
1484  8DAA
1485  8DAA              ; ----------------------------------------------------------------------
1486  8DAA              ;
1487  8DAA              ;	8/9/23
1488  8DAA
1489  8DAA 2A 22 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1490  8DAD 2B            	dec hl
1491  8DAE 7E           	ld a,(hl)
1492  8DAF A7           	and a
1493  8DB0 C8           	ret z										; Salimos si es álbum está vacío.
1494  8DB1
1495  8DB1 11 E5 88     	ld de,Variables_de_borrado+5
1496  8DB4 01 06 00     	ld bc,6
1497  8DB7 ED B8        	lddr
1498  8DB9 C9           	ret
1499  8DBA
1500  8DBA              ; ----------------------------------------------------------------------
1501  8DBA              ;
1502  8DBA              ;	9/9/23
1503  8DBA
1504  8DBA              Repone_datos_de_borrado_Amadeus
1505  8DBA
1506  8DBA 21 E0 88     	ld hl,Variables_de_borrado
1507  8DBD 11 A0 72     	ld de,Album_de_fotos_Amadeus
1508  8DC0 01 06 00     	ld bc,6
1509  8DC3 ED B0        	ldir
1510  8DC5
1511  8DC5 EB           	ex de,hl
1512  8DC6 22 22 89     	ld (End_Snapshot_Amadeus),hl
1513  8DC9
1514  8DC9 C9           	ret
1515  8DCA
1516  8DCA              ; ----------------------------------------------------------------------
1517  8DCA              ;
1518  8DCA              ;	18/9/23
1519  8DCA              ;
1520  8DCA
1521  8DCA              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1522  8DCA              ;	_ Album_de_fotos correspondiente.
1523  8DCA
1524  8DCA              ;	DI.
1525  8DCA
1526  8DCA              Repone_datos_de_borrado
1527  8DCA
1528  8DCA ED 5B 1A 89  	ld de,(Stack_snapshot)
1529  8DCE 21 E0 88     	ld hl,Variables_de_borrado
1530  8DD1 01 06 00     	ld bc,6
1531  8DD4 ED B0        	ldir
1532  8DD6
1533  8DD6 EB           	ex de,hl
1534  8DD7 22 1A 89     	ld (Stack_snapshot),hl
1535  8DDA
1536  8DDA C9           	ret
1537  8DDB
1538  8DDB              ; ----------------------------------------------------------------------
1539  8DDB              ;
1540  8DDB              ;	11/8/23
1541  8DDB
1542  8DDB              Gestiona_entidades
1543  8DDB
1544  8DDB              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1545  8DDB
1546  8DDB 3A 3C 89     	ld a,(Semaforo)
1547  8DDE CB 47        	bit 0,a
1548  8DE0 28 FE        	jr z,$												;! STOP el buffer está vacío.
1549  8DE2 C8           	ret z
1550  8DE3
1551  8DE3              ;	call Extrae_foto_disparos
1552  8DE3              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1553  8DE3
1554  8DE3 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1555  8DE6
1556  8DE6              ;	Album incompleto ?????
1557  8DE6              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1558  8DE6
1559  8DE6 3A 3D 89     	ld a,(Ctrl_Semaforo)
1560  8DE9 CB 7F        	bit 7,a
1561  8DEB 20 07        	jr nz,1F
1562  8DED
1563  8DED CB 47        	bit 0,a
1564  8DEF C0           	ret nz
1565  8DF0
1566  8DF0              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1567  8DF0              ; Nos situamos al comienzo del último álbum.
1568  8DF0
1569  8DF0 CD 02 73     	call Modifica_Stack_snapshot
1570  8DF3
1571  8DF3 C9           	ret
1572  8DF4
1573  8DF4 CB BF        1 res 7,a												; Salimos sin modificar punteros.
1574  8DF6 32 3D 89     	ld (Ctrl_Semaforo),a
1575  8DF9 C9           	ret
1576  8DFA
1577  8DFA              ; -----------------------------------------------------------------------------------
1578  8DFA
1579  8DFA              Pinta_Amadeus
1580  8DFA
1581  8DFA 3E 06        	ld a,6
1582  8DFC D3 FE            out ($fe),a										; Amarillo
1583  8DFE
1584  8DFE CD 4C 8C        	call Calcula_malotes_Amadeus
1585  8E01 CD C1 96     	call Extrae_foto_Amadeus
1586  8E04 CD 08 8C     	call Limpia_album_Amadeus
1587  8E07
1588  8E07 C9           	ret
1589  8E08
1590  8E08              Pinta_entidades
1591  8E08
1592  8E08 3A 3C 89     	ld a,(Semaforo)
1593  8E0B CB 47        	bit 0,a
1594  8E0D C8           	ret z
1595  8E0E
1596  8E0E              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1597  8E0E
1598  8E0E CD 30 8C     	call Calcula_numero_de_malotes
1599  8E11 CD 3F 96     	call Extrae_foto_entidades
1600  8E14
1601  8E14 C9           	ret
1602  8E15
1603  8E15              ; -----------------------------------------------------------------------------------
1604  8E15
1605  8E15              Actualiza_relojes
1606  8E15
1607  8E15 21 51 89     	ld hl,Contador_de_frames
1608  8E18 7E           	ld a,(hl)
1609  8E19 FE FF        	cp $ff
1610  8E1B 20 04        	jr nz,1F
1611  8E1D 34           	inc (hl)
1612  8E1E 21 52 89     	ld hl,Contador_de_frames_2
1613  8E21 34           1 inc (hl)											; 0 - 255
1614  8E22 C9           	ret
1615  8E23
1616  8E23              ; ---------------------------------------------------------------
1617  8E23              ;
1618  8E23              ;	27/9/23
1619  8E23
1620  8E23              Guarda_parametros_DRAW
1621  8E23
1622  8E23 21 C6 88     	ld hl,Filas
1623  8E26 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1624  8E29 01 3D 00     	ld bc,61
1625  8E2C ED B0        	ldir
1626  8E2E C9           	ret
1627  8E2F
1628  8E2F              Recupera_parametros_DRAW
1629  8E2F
1630  8E2F 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1631  8E32 11 C6 88     	ld de,Filas
1632  8E35 01 3D 00     	ld bc,61
1633  8E38 ED B0        	ldir
1634  8E3A C9           	ret
1635  8E3B
1636  8E3B              ; ---------------------------------------------------------------
1637  8E3B
1638  8E3B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E3B              ; ******************************************************************************************************************************************************************************************
   2+ 8E3B              ;
   3+ 8E3B              ;   21/07/23
   4+ 8E3B              ;
   5+ 8E3B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E3B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E3B              ;
   8+ 8E3B              ;
   9+ 8E3B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E3B              ;
  11+ 8E3B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E3B              ;               _ hacen las entidades hacia abajo.
  13+ 8E3B              ;
  14+ 8E3B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E3B              ;
  16+ 8E3B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E3B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E3B              ;
  19+ 8E3B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E3B              ;           _ la bala.
  21+ 8E3B              ;
  22+ 8E3B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E3B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E3B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E3B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E3B              ;           _ en el momento de generarse la bala)).
  27+ 8E3B
  28+ 8E3B              Genera_disparo
  29+ 8E3B
  30+ 8E3B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E3B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E3B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E3B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E3B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E3B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E3B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E3B
  38+ 8E3B              ; Exclusiones:
  39+ 8E3B
  40+ 8E3B 3A DE 88         ld a,(Vel_down)
  41+ 8E3E 47               ld b,a
  42+ 8E3F 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E42 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E43 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E44 3A FD 88         ld a,(Columnas)
  46+ 8E47 47               ld b,a
  47+ 8E48 3A C7 88         ld a,(Columns)
  48+ 8E4B B8               cp b
  49+ 8E4C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E4D
  51+ 8E4D              ; ----- ----- -----
  52+ 8E4D
  53+ 8E4D 3A F0 88         ld a,(Ctrl_0)
  54+ 8E50 CB 77            bit 6,a
  55+ 8E52 20 06            jr nz,14F
  56+ 8E54
  57+ 8E54 3A CD 88         ld a,(Coordenada_y)
  58+ 8E57 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E59 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E5A
  61+ 8E5A 21 00 80     14 ld hl,Indice_disparo
  62+ 8E5D 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E60 4F               ld c,a
  64+ 8E61 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E63              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E63              ;                                            ""        ""       "f9", B="1"
  67+ 8E63              ;                                            ""        ""       "fb", B="2"
  68+ 8E63              ;                                            ""        ""       "fb", B="3"
  69+ 8E63 A7               and a
  70+ 8E64 28 10            jr z,1F
  71+ 8E66 E6 01            and 1
  72+ 8E68 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E69
  74+ 8E69 79               ld a,c
  75+ 8E6A 16 F9            ld d,$f9
  76+ 8E6C 23           2 inc hl
  77+ 8E6D 23               inc hl
  78+ 8E6E 04               inc b
  79+ 8E6F BA               cp d
  80+ 8E70 28 04            jr z,1F
  81+ 8E72 14               inc d
  82+ 8E73 14               inc d
  83+ 8E74 18 F6            jr 2B
  84+ 8E76
  85+ 8E76 CD 80 8C     1 call Extrae_address
  86+ 8E79 E5               push hl
  87+ 8E7A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E7C DD 21 07 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E80
  90+ 8E80              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E80              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E80
  93+ 8E80 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E83 CB 77            bit 6,a
  95+ 8E85 20 04            jr nz,19F
  96+ 8E87
  97+ 8E87 AF               xor a
  98+ 8E88 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E8B
 100+ 8E8B 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8E8E FE 02            cp 2
 102+ 8E90 38 66            jr c,3F
 103+ 8E92 28 64            jr z,3F
 104+ 8E94
 105+ 8E94              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E94
 107+ 8E94 E6 01            and 1
 108+ 8E96 28 30            jr z,4F
 109+ 8E98
 110+ 8E98              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E98              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E98              ;
 113+ 8E98              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E98              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E98              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E98
 117+ 8E98 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8E9B
 119+ 8E9B              ;   Amadeus o entidad ???.
 120+ 8E9B
 121+ 8E9B 3A F0 88         ld a,(Ctrl_0)
 122+ 8E9E CB 77            bit 6,a
 123+ 8EA0 28 0A            jr z,8F
 124+ 8EA2
 125+ 8EA2              ; 	Dispara Amadeus.
 126+ 8EA2
 127+ 8EA2 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EA4 CD 30 96         call PreviousScan
 129+ 8EA7 CD 30 96         call PreviousScan
 130+ 8EAA
 131+ 8EAA              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EAA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EAA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EAA
 136+ 8EAA 18 11            jr 10F
 137+ 8EAC
 138+ 8EAC              ; 	Dispara Entidad.
 139+ 8EAC
 140+ 8EAC 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EAF              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EAF
 143+ 8EAF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EAF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EAF
 146+ 8EAF C5               push bc
 147+ 8EB0 06 10            ld b,16
 148+ 8EB2 CD 21 96     9 call NextScan
 149+ 8EB5 10 FB            djnz 9B
 150+ 8EB7 C1               pop bc
 151+ 8EB8 CD 22 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EBB 18 06            jr 17F
 153+ 8EBD
 154+ 8EBD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EBD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EBD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EBD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EBD
 159+ 8EBD CD 22 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EC0 CD 97 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EC3              ;                                                      ; _al generar el disparo.
 162+ 8EC3
 163+ 8EC3              ; 	LLegados a este punto tendremos:
 164+ 8EC3              ;
 165+ 8EC3              ;       Puntero_objeto_disparo en IY.
 166+ 8EC3              ;       Rutinas_de_impresion en IX.
 167+ 8EC3              ;       Puntero_de_impresion en HL.
 168+ 8EC3              ;       Impacto/Dirección en BC.
 169+ 8EC3
 170+ 8EC3 CD 2A 8F     17 call Almacena_disparo
 171+ 8EC6 18 52            jr 6F                                             ; RET.
 172+ 8EC8
 173+ 8EC8              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EC8              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EC8              ;
 176+ 8EC8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EC8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EC8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EC8
 180+ 8EC8 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8ECB
 182+ 8ECB              ;   Amadeus o entidad ???.
 183+ 8ECB
 184+ 8ECB 3A F0 88         ld a,(Ctrl_0)
 185+ 8ECE CB 77            bit 6,a
 186+ 8ED0 28 0A            jr z,11F
 187+ 8ED2
 188+ 8ED2              ; 	Dispara Amadeus.
 189+ 8ED2
 190+ 8ED2 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ED4 CD 30 96         call PreviousScan
 192+ 8ED7 CD 30 96         call PreviousScan
 193+ 8EDA
 194+ 8EDA              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EDA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EDA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EDA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EDA
 199+ 8EDA 18 11            jr 13F
 200+ 8EDC
 201+ 8EDC              ; 	Dispara Entidad.
 202+ 8EDC
 203+ 8EDC 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EDF              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EDF
 206+ 8EDF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EDF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EDF
 209+ 8EDF C5               push bc
 210+ 8EE0 06 10            ld b,16
 211+ 8EE2 CD 21 96     12 call NextScan
 212+ 8EE5 10 FB            djnz 12B
 213+ 8EE7 C1               pop bc
 214+ 8EE8
 215+ 8EE8 CD 1B 8F         call Ajusta_disparo_parte_derecha
 216+ 8EEB 18 06            jr 18F
 217+ 8EED
 218+ 8EED              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EED              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EED              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EED              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EED
 223+ 8EED CD 1B 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EF0 CD 97 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EF3              ;                                                       ; _al generar el disparo.
 226+ 8EF3
 227+ 8EF3              ; LLegados a este punto tendremos:
 228+ 8EF3              ;
 229+ 8EF3              ;       Puntero_objeto_disparo en IY.
 230+ 8EF3              ;       Rutinas_de_impresion en IX.
 231+ 8EF3              ;       Puntero_de_impresion en HL.
 232+ 8EF3              ;       Impacto/Dirección en BC.
 233+ 8EF3
 234+ 8EF3 CD 2A 8F     18 call Almacena_disparo
 235+ 8EF6 18 22            jr 6F                                               ; RET.
 236+ 8EF8
 237+ 8EF8              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EF8
 239+ 8EF8 28 11        3 jr z,5F
 240+ 8EFA
 241+ 8EFA              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EFA              ;
 243+ 8EFA              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EFA              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EFA              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EFA              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EFA
 248+ 8EFA              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EFA              ;	   ""        ""       "f9", B="1"
 250+ 8EFA              ;	   ""        ""       "fb", B="2"
 251+ 8EFA              ; 	   ""        ""       "fb", B="3"
 252+ 8EFA
 253+ 8EFA 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8EFD CD 21 96     	call NextScan
 255+ 8F00
 256+ 8F00              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F00              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F00              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F00              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F00
 261+ 8F00 CD 22 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F03
 263+ 8F03              ; 	No se produce impacto. B="$80"
 264+ 8F03              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F03
 266+ 8F03 01 80 80         ld bc,$8080
 267+ 8F06
 268+ 8F06              ; 	LLegados a este punto tendremos:
 269+ 8F06              ;
 270+ 8F06              ;       Puntero_objeto_disparo en IY.
 271+ 8F06              ;       Rutinas_de_impresion en IX.
 272+ 8F06              ;       Puntero_de_impresion en HL.
 273+ 8F06              ;       Impacto/Dirección en BC.
 274+ 8F06
 275+ 8F06 CD 2A 8F         call Almacena_disparo
 276+ 8F09 18 0F            jr 6F                                           ; RET.
 277+ 8F0B
 278+ 8F0B              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F0B              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F0B              ;
 281+ 8F0B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F0B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F0B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F0B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F0B
 286+ 8F0B 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F0E CD 21 96     	call NextScan
 288+ 8F11
 289+ 8F11              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F11              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F11              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F11              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F11
 294+ 8F11 CD 1B 8F         call Ajusta_disparo_parte_derecha
 295+ 8F14
 296+ 8F14              ; 	No se produce impacto. B="$80"
 297+ 8F14              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F14
 299+ 8F14 01 80 80     15 ld bc,$8080
 300+ 8F17
 301+ 8F17              ; 	LLegados a este punto tendremos:
 302+ 8F17              ;
 303+ 8F17              ;       Puntero_objeto_disparo en IY.
 304+ 8F17              ;       Rutinas_de_impresion en IX.
 305+ 8F17              ;       Puntero_de_impresion en HL.
 306+ 8F17              ;       Impacto/Dirección en BC.
 307+ 8F17
 308+ 8F17 CD 2A 8F         call Almacena_disparo
 309+ 8F1A
 310+ 8F1A C9           6 ret
 311+ 8F1B
 312+ 8F1B              ; ----------------------------------------------------------------
 313+ 8F1B              ;
 314+ 8F1B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F1B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F1B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F1B
 318+ 8F1B 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F1C FE 02            cp 2
 320+ 8F1E 38 01            jr c,1F
 321+ 8F20 23               inc hl
 322+ 8F21 C9           1 ret
 323+ 8F22
 324+ 8F22 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F23 FE 01        	cp 1
 326+ 8F25 20 01        	jr nz,1F
 327+ 8F27 2B           	dec hl
 328+ 8F28 2B           1 dec hl
 329+ 8F29 C9               ret
 330+ 8F2A
 331+ 8F2A              ; ----------------------------------------------------------------
 332+ 8F2A              ;
 333+ 8F2A              ;   25/02/23
 334+ 8F2A              ;
 335+ 8F2A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F2A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F2A              ;
 338+ 8F2A              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F2A              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F2A
 341+ 8F2A              Almacena_disparo
 342+ 8F2A
 343+ 8F2A E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F2B F1               pop af
 345+ 8F2C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F2D
 347+ 8F2D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F2E E6 01            and 1
 349+ 8F30 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F32              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F32              ; 	Dispara AMADEUS.
 352+ 8F32
 353+ 8F32              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F32              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F32              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F32              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F32
 358+ 8F32 C5               push bc
 359+ 8F33 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F36 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F39 A7               and a
 362+ 8F3A ED 42            sbc hl,bc
 363+ 8F3C CC 01 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F3F C1               pop bc
 365+ 8F40 28 54            jr z,4F
 366+ 8F42
 367+ 8F42 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F45 23               inc hl
 369+ 8F46 23               inc hl
 370+ 8F47 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F4A              ;                                                   ; _ Disparo_(+1).
 372+ 8F4A 18 18            jr 2F
 373+ 8F4C
 374+ 8F4C              ; Dispara una entidad.
 375+ 8F4C
 376+ 8F4C C5           1 push bc
 377+ 8F4D 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F50 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F53 A7               and a
 380+ 8F54 ED 42            sbc hl,bc
 381+ 8F56 CC FA 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F59 C1               pop bc
 383+ 8F5A 28 3A            jr z,4F
 384+ 8F5C
 385+ 8F5C 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F5F 23               inc hl
 387+ 8F60 23               inc hl
 388+ 8F61 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F64              ;                                                   ; _ Disparo_(+1).
 390+ 8F64 CD 80 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F67              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F67              ;
 393+ 8F67              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F67              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F67              ;                                                     Puntero_de_impresion en HL.
 396+ 8F67              ;                                                     Impacto/Dirección en BC.
 397+ 8F67
 398+ 8F67 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F68 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F69 23               inc hl                                          ; _ al siguiente.
 401+ 8F6A A7               and a
 402+ 8F6B 20 C0            jr nz,3B
 403+ 8F6D
 404+ 8F6D 08               ex af,af
 405+ 8F6E ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F72 F9               ld sp,hl
 407+ 8F73
 408+ 8F73 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F75 F5               push af                                         ; Puntero de impresión.
 410+ 8F76 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F78 C5               push bc                                         ; Control.
 412+ 8F79
 413+ 8F79 ED 7B 14 89      ld sp,(Stack)
 414+ 8F7D
 415+ 8F7D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F7D
 417+ 8F7D 21 03 89     	ld hl,Ctrl_1
 418+ 8F80 CB C6        	set 0,(hl)
 419+ 8F82
 420+ 8F82 DD E5        	push ix
 421+ 8F84 E1               pop hl
 422+ 8F85 F5               push af
 423+ 8F86 DD E1            pop ix
 424+ 8F88
 425+ 8F88 CD A0 7F     	call Guarda_foto_registros
 426+ 8F8B
 427+ 8F8B 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F8E CB 86        	res 0,(hl)
 429+ 8F90
 430+ 8F90              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F90              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F90
 433+ 8F90 CD 01 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F93 CD FA 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F96
 436+ 8F96 C9           4 ret
 437+ 8F97
 438+ 8F97              ; ----------------------------------------------------------------
 439+ 8F97              ;
 440+ 8F97              ;   4/3/23
 441+ 8F97              ;
 442+ 8F97              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F97              ;   _ al generarse el disparo.
 444+ 8F97              ;
 445+ 8F97              ;       "$80" ..... No se produce colisión.
 446+ 8F97              ;       "$81" ..... Se produce colisión.
 447+ 8F97              ;
 448+ 8F97              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F97              ;         _ que forman el disparo.
 450+ 8F97
 451+ 8F97
 452+ 8F97              Comprueba_Colision
 453+ 8F97
 454+ 8F97              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F97
 456+ 8F97 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F99 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F9A
 459+ 8F9A CD D0 8F         call Modifica_H_Velocidad_disparo
 460+ 8F9D
 461+ 8F9D 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F9E FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FA0 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FA2
 465+ 8FA2 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FA4 CD C0 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FA7
 468+ 8FA7 7B               ld a,e
 469+ 8FA8 E6 01            and 1
 470+ 8FAA 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FAC              ;                                                  ; _ para activar IMPACTO.
 472+ 8FAC E1               pop hl
 473+ 8FAD E5               push hl
 474+ 8FAE CD 21 96         call NextScan
 475+ 8FB1
 476+ 8FB1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FB2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FB4 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FB6              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FB6 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FB8 CD C0 8F         call Bucle_2
 482+ 8FBB
 483+ 8FBB 43           1 ld b,e
 484+ 8FBC E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FBD FD E1            pop iy
 486+ 8FBF C9               ret
 487+ 8FC0
 488+ 8FC0              ; ---------- ----------
 489+ 8FC0
 490+ 8FC0 06 02        Bucle_2 ld b,2
 491+ 8FC2 FD 7E 00     2 ld a,(iy)
 492+ 8FC5 A6               and (hl)
 493+ 8FC6 28 02            jr z,1F
 494+ 8FC8 1E 81            ld e,$81
 495+ 8FCA 23           1 inc hl
 496+ 8FCB FD 23            inc iy
 497+ 8FCD 10 F3            djnz 2B
 498+ 8FCF C9               ret
 499+ 8FD0
 500+ 8FD0              ; ---------- ----------
 501+ 8FD0              ;
 502+ 8FD0              ;   21/7/23
 503+ 8FD0
 504+ 8FD0              Modifica_H_Velocidad_disparo
 505+ 8FD0
 506+ 8FD0 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FD3 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FD5 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FD6 24               inc h
 510+ 8FD7
 511+ 8FD7 C9               ret
 512+ 8FD8
 513+ 8FD8              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FD8              ;
 515+ 8FD8              ;   11/04/23
 516+ 8FD8              ;
 517+ 8FD8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FD8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FD8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FD8              ;
 521+ 8FD8              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FD8
 523+ 8FD8              Compara_coordenadas_X
 524+ 8FD8
 525+ 8FD8              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FD8              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FD8
 528+ 8FD8              ; Preparamos registros:
 529+ 8FD8
 530+ 8FD8 21 CC 88         ld hl,Filas+6
 531+ 8FDB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FDC 23               inc hl
 533+ 8FDD 23               inc hl
 534+ 8FDE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FDF 43               ld b,e
 536+ 8FE0
 537+ 8FE0 21 DA 88         ld hl,Filas+20
 538+ 8FE3 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FE4 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 8FE7 CD 03 92         call Guarda_coordenadas_X
 541+ 8FEA
 542+ 8FEA              ; Preparamos registros:
 543+ 8FEA
 544+ 8FEA 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FED 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FEE 23               inc hl
 547+ 8FEF 23               inc hl
 548+ 8FF0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FF1 7B               ld a,e
 550+ 8FF2 08               ex af,af'
 551+ 8FF3 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FF6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FF7 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FFA CD 03 92         call Guarda_coordenadas_X
 555+ 8FFD
 556+ 8FFD              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8FFD              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8FFD
 559+ 8FFD 04               inc b
 560+ 8FFE 05               dec b
 561+ 8FFF 28 04            jr z,1F
 562+ 9001 06 03            ld b,3
 563+ 9003 18 02            jr 2F
 564+ 9005 06 02        1 ld b,2
 565+ 9007 08           2 ex af,af'
 566+ 9008 3C               inc a
 567+ 9009 3D               dec a
 568+ 900A 28 04            jr z,5F
 569+ 900C 0E 03            ld c,3
 570+ 900E 18 02            jr 6F
 571+ 9010 0E 02        5 ld c,2
 572+ 9012 79           6 ld a,c
 573+ 9013 08               ex af,af'
 574+ 9014 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 9017 1A           4 ld a,(de)
 576+ 9018 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 901B BE           3 cp (hl)
 578+ 901C 28 0E            jr z,7F
 579+ 901E 23               inc hl
 580+ 901F 0D               dec c
 581+ 9020 20 F9            jr nz,3B
 582+ 9022 13               inc de
 583+ 9023 08               ex af,af'
 584+ 9024 4F               ld c,a
 585+ 9025 08               ex af,af'
 586+ 9026 10 EF            djnz 4B
 587+ 9028
 588+ 9028              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9028
 590+ 9028 CD 3F 92     8 call Limpia_Coordenadas_X
 591+ 902B C9               ret
 592+ 902C
 593+ 902C 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 902E 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9031 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9034 CB D6            set 2,(hl)
 597+ 9036 18 F0            jr 8B
 598+ 9038
 599+ 9038              ; -----------------------------------------------------------------------
 600+ 9038              ;
 601+ 9038              ;   17/04/23
 602+ 9038              ;
 603+ 9038
 604+ 9038              Detecta_colision_nave_entidad
 605+ 9038
 606+ 9038              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9038
 608+ 9038 2A C8 88         ld hl,(Posicion_actual)
 609+ 903B CD 7C 95         call Calcula_puntero_de_impresion
 610+ 903E
 611+ 903E              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 903E              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 903E
 614+ 903E DD E5            push ix
 615+ 9040 E1               pop hl
 616+ 9041 E5               push hl
 617+ 9042
 618+ 9042              ; ----- ----- -----
 619+ 9042 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9044 06 0A            ld b,10
 621+ 9046 CD 76 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9049 7B               ld a,e
 623+ 904A FE 05            cp 5
 624+ 904C 38 0E            jr c,3F
 625+ 904E
 626+ 904E              ; LLegados a este punto:
 627+ 904E              ;
 628+ 904E              ;   HAY COLISIÓN !!!!!.
 629+ 904E              ;
 630+ 904E              ;   .db (Impacto) de Amadeus a "1".
 631+ 904E              ;   SET el bit3 de (Impacto2).
 632+ 904E              ;
 633+ 904E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 904E
 635+ 904E 21 B7 85         ld hl,Amadeus_db+25
 636+ 9051 36 01            ld (hl),1
 637+ 9053 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9056 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9058 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 905A 18 18            jr 1F
 641+ 905C
 642+ 905C              ; -----
 643+ 905C
 644+ 905C E1           3 pop hl
 645+ 905D CD 21 96         call NextScan
 646+ 9060 E5               push hl
 647+ 9061 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9062 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9064 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9066 30 0C            jr nc,1F
 651+ 9068              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9068 10 DC            djnz 2B
 653+ 906A
 654+ 906A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 906A
 656+ 906A              ; LLegados a este punto:
 657+ 906A              ;
 658+ 906A              ;   NO HAY COLISIÓN !!!!!.
 659+ 906A              ;
 660+ 906A              ;   .db (Impacto) de Amadeus a "0".
 661+ 906A              ;   RES el bit2 de (Impacto2).
 662+ 906A              ;
 663+ 906A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 906A              ;   Lo colocamos a "0".
 665+ 906A
 666+ 906A 21 43 89         ld hl,Impacto2
 667+ 906D CB 96            res 2,(hl)
 668+ 906F 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9072 36 00            ld (hl),0
 670+ 9074
 671+ 9074 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9075 C9               ret
 673+ 9076
 674+ 9076               ; ---------- ----------
 675+ 9076
 676+ 9076 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9077 3A C7 88         ld a,(Columns)
 678+ 907A 47               ld b,a
 679+ 907B FD 7E 00     2 ld a,(iy)
 680+ 907E BE               cp (hl)
 681+ 907F 28 01            jr z,1F
 682+ 9081
 683+ 9081 1C               inc e
 684+ 9082
 685+ 9082 23           1 inc hl
 686+ 9083 FD 23            inc iy
 687+ 9085 10 F4            djnz 2B
 688+ 9087 C1               pop bc
 689+ 9088 C9               ret
 690+ 9089
 691+ 9089              ; -------------------------------------------------------------------------------------------------------------
 692+ 9089              ;
 693+ 9089              ;   13/03/23
 694+ 9089              ;
 695+ 9089              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9089              ;
 697+ 9089              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9089
 699+ 9089 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 908C 7E               ld a,(hl)
 701+ 908D A7               and a
 702+ 908E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 908F
 704+ 908F 44               ld b,h
 705+ 9090 4D               ld c,l
 706+ 9091 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 9094 E5               push hl
 708+ 9095 A7               and a
 709+ 9096 ED 42            sbc hl,bc
 710+ 9098 E5               push hl
 711+ 9099 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 909A
 713+ 909A E1               pop hl
 714+ 909B 54               ld d,h
 715+ 909C 5D               ld e,l
 716+ 909D 1B               dec de
 717+ 909E ED B8            lddr                                                ; Limpiamos.
 718+ 90A0
 719+ 90A0 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90A3 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 90A6
 722+ 90A6 C9               ret
 723+ 90A7
 724+ 90A7              ; -------------------------------------------------------------------------------------------------------------
 725+ 90A7              ;
 726+ 90A7              ;   18/07/23
 727+ 90A7              ;
 728+ 90A7
 729+ 90A7              Motor_de_disparos
 730+ 90A7
 731+ 90A7              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90A7
 733+ 90A7 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90AA 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90AD
 736+ 90AD CD 80 8C     2 call Extrae_address
 737+ 90B0 7E               ld a,(hl)
 738+ 90B1 A7               and a
 739+ 90B2 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90B4
 741+ 90B4              ; ----- ----- ----- ----- ----- -----
 742+ 90B4
 743+ 90B4 C5               push bc
 744+ 90B5 CD 79 91         call foto_disparo_a_borrar
 745+ 90B8
 746+ 90B8              ; Existe colisión con este disparo???
 747+ 90B8
 748+ 90B8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90B9 7E               ld a,(hl)
 750+ 90BA 2B               dec hl
 751+ 90BB E6 01            and 1
 752+ 90BD 28 1D            jr z,9F
 753+ 90BF
 754+ 90BF              ;   En este punto:
 755+ 90BF              ;
 756+ 90BF              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90BF              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90BF              ;   _con la entidad).
 759+ 90BF              ;
 760+ 90BF              ;   Disparo_2A defw 0                                ; Control.
 761+ 90BF              ;    defw 0                                          ; Puntero objeto.
 762+ 90BF              ;    defw 0                                          ; Puntero de impresión.
 763+ 90BF              ;    defw 0                                          ; Rutina de impresión.
 764+ 90BF
 765+ 90BF E5               push hl
 766+ 90C0
 767+ 90C0 06 04            ld b,4
 768+ 90C2 23           19 inc hl
 769+ 90C3 10 FD            djnz 19B
 770+ 90C5
 771+ 90C5 CD 80 8C         call Extrae_address
 772+ 90C8 CD EA 9C         call Genera_coordenadas_disparo
 773+ 90CB
 774+ 90CB              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90CB
 776+ 90CB 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90CE 72               ld (hl),d
 778+ 90CF 23               inc hl
 779+ 90D0 73               ld (hl),e
 780+ 90D1
 781+ 90D1              ; Elimino el disparo de la base de datos.
 782+ 90D1
 783+ 90D1 E1               pop hl
 784+ 90D2 CD F8 91         call Elimina_disparo_de_base_de_datos
 785+ 90D5 21 43 89         ld hl,Impacto2
 786+ 90D8 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90DA
 788+ 90DA 18 06            jr 11F
 789+ 90DC
 790+ 90DC CD A2 91     9 call Mueve_disparo
 791+ 90DF CD 79 91         call foto_disparo_a_borrar
 792+ 90E2
 793+ 90E2 C1           11 pop bc
 794+ 90E3 18 04            jr 7F
 795+ 90E5
 796+ 90E5              ; ----- ----- ----- ----- ----- -----
 797+ 90E5
 798+ 90E5 ED 42        1 sbc hl,bc
 799+ 90E7 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90E9
 801+ 90E9 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90EC 23               inc hl
 803+ 90ED 23               inc hl
 804+ 90EE 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90F1 18 BA            jr 2B
 806+ 90F3
 807+ 90F3 CD 01 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90F6              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90F6
 810+ 90F6              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90F6
 812+ 90F6 01 8A 85         ld bc,Disparo_11
 813+ 90F9 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 90FC
 815+ 90FC CD 80 8C     5 call Extrae_address
 816+ 90FF 7E               ld a,(hl)
 817+ 9100 A7               and a
 818+ 9101 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9103
 820+ 9103              ; ----- ----- ----- ----- ----- -----
 821+ 9103
 822+ 9103 C5               push bc
 823+ 9104 CD 79 91         call foto_disparo_a_borrar
 824+ 9107
 825+ 9107              ; Existe colisión con este disparo???
 826+ 9107
 827+ 9107 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9108 7E               ld a,(hl)
 829+ 9109 2B               dec hl
 830+ 910A E6 01            and 1
 831+ 910C 28 4D            jr z,10F
 832+ 910E
 833+ 910E              ;! La colisión se produce con Amadeus???
 834+ 910E              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 910E
 836+ 910E E5               push hl
 837+ 910F
 838+ 910F 06 04            ld b,4
 839+ 9111 23           16 inc hl
 840+ 9112 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9114
 842+ 9114 CD 80 8C         call Extrae_address
 843+ 9117 CD EA 9C         call Genera_coordenadas_disparo
 844+ 911A
 845+ 911A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 911B FE 16            cp $16
 847+ 911D 38 2A            jr c,15F
 848+ 911F
 849+ 911F
 850+ 911F              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 911F
 852+ 911F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9120
 854+ 9120              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9120
 856+ 9120
 857+ 9120 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9123
 859+ 9123              ; Coordenada X de Amadeus en D.
 860+ 9123
 861+ 9123 7D               ld a,l
 862+ 9124 E6 1F            and $1F
 863+ 9126 57               ld d,a
 864+ 9127
 865+ 9127 21 A6 85         ld hl,Amadeus_db+8
 866+ 912A 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 912B
 868+ 912B 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 912E CD 03 92         call Guarda_coordenadas_X
 870+ 9131
 871+ 9131 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9132
 873+ 9132              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9132
 875+ 9132 06 02            ld b,2
 876+ 9134 C5           20 push bc
 877+ 9135
 878+ 9135 06 03            ld b,3
 879+ 9137 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 913A 7E           18 ld a,(hl)
 881+ 913B BA               cp d
 882+ 913C 20 04            jr nz,17F
 883+ 913E
 884+ 913E              ;! Colisión Amadeus !!!!!!!!!!
 885+ 913E
 886+ 913E C1               pop bc
 887+ 913F E1               pop hl
 888+ 9140 18 0D            jr 14F
 889+ 9142
 890+ 9142 23           17 inc hl
 891+ 9143 10 F5            djnz 18B
 892+ 9145
 893+ 9145 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9146
 895+ 9146 C1               pop bc
 896+ 9147 10 EB            djnz 20B
 897+ 9149
 898+ 9149
 899+ 9149              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9149              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9149
 902+ 9149 E1           15 pop hl
 903+ 914A 23               inc hl
 904+ 914B 35               dec (hl)
 905+ 914C 2B               dec hl
 906+ 914D 18 0C            jr 10F
 907+ 914F
 908+ 914F              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 914F              ; _ almacén de coordenadas_X de Amadeus.
 910+ 914F
 911+ 914F E5           14 push hl
 912+ 9150 CD F8 91         call Elimina_disparo_de_base_de_datos
 913+ 9153 21 43 89         ld hl,Impacto2
 914+ 9156 CB CE            set 1,(hl)
 915+ 9158 E1               pop hl
 916+ 9159 18 06            jr 12F
 917+ 915B
 918+ 915B              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 915B
 920+ 915B CD A2 91     10 call Mueve_disparo
 921+ 915E CD 79 91         call foto_disparo_a_borrar
 922+ 9161 C1           12 pop bc
 923+ 9162
 924+ 9162 18 04            jr 8F
 925+ 9164
 926+ 9164              ; ----- ----- ----- ----- ----- -----
 927+ 9164
 928+ 9164 ED 42        4 sbc hl,bc
 929+ 9166 28 0A            jr z,6F
 930+ 9168
 931+ 9168 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 916B 23               inc hl
 933+ 916C 23               inc hl
 934+ 916D 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9170 18 8A            jr 5B
 936+ 9172
 937+ 9172 CD FA 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9175 CD 3F 92         call Limpia_Coordenadas_X
 939+ 9178 C9               ret
 940+ 9179
 941+ 9179              ; ------------------------------------------------------------------
 942+ 9179
 943+ 9179              foto_disparo_a_borrar
 944+ 9179
 945+ 9179 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 917A A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 917B C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 917C
 949+ 917C E5               push hl
 950+ 917D 23               inc hl
 951+ 917E 23               inc hl
 952+ 917F ED 73 14 89      ld (Stack),sp
 953+ 9183 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9184 FD E1            pop iy
 955+ 9186 DD E1            pop ix
 956+ 9188 E1               pop hl
 957+ 9189 ED 7B 14 89      ld sp,(Stack)
 958+ 918D 3A 03 89         ld a,(Ctrl_1)
 959+ 9190 CB C7            set 0,a
 960+ 9192 32 03 89         ld (Ctrl_1),a
 961+ 9195 CD A0 7F         call Guarda_foto_registros
 962+ 9198 3A 03 89         ld a,(Ctrl_1)
 963+ 919B CB 87            res 0,a
 964+ 919D 32 03 89         ld (Ctrl_1),a
 965+ 91A0 E1               pop hl
 966+ 91A1 C9               ret
 967+ 91A2
 968+ 91A2              ;---------------------------------------------------
 969+ 91A2              ;
 970+ 91A2              ;   18/07/23
 971+ 91A2              ;
 972+ 91A2
 973+ 91A2              Mueve_disparo
 974+ 91A2
 975+ 91A2              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91A2              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91A2              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91A2
 979+ 91A2 E5               push hl
 980+ 91A3
 981+ 91A3 7E               ld a,(hl)
 982+ 91A4
 983+ 91A4 06 04            ld b,4
 984+ 91A6 23           1 inc hl
 985+ 91A7 10 FD            djnz 1B
 986+ 91A9
 987+ 91A9              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91A9
 989+ 91A9 CD 80 8C         call Extrae_address
 990+ 91AC
 991+ 91AC E6 01            and 1
 992+ 91AE 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91B0
 994+ 91B0              ; Disparo hacia arriba, (Amadeus).
 995+ 91B0
 996+ 91B0              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91B0              ; _ de la dificultad.
 998+ 91B0
 999+ 91B0 CD 30 96         call PreviousScan
1000+ 91B3 CD 30 96         call PreviousScan
1001+ 91B6 CD 30 96         call PreviousScan
1002+ 91B9 CD 30 96         call PreviousScan
1003+ 91BC
1004+ 91BC              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91BC
1006+ 91BC 7C               ld a,h
1007+ 91BD FE 40            cp $40
1008+ 91BF 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91C1
1010+ 91C1              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91C1
1012+ 91C1 EB               ex de,hl
1013+ 91C2 06 04            ld b,4
1014+ 91C4 2B           6 dec hl
1015+ 91C5 10 FD            djnz 6B
1016+ 91C7
1017+ 91C7 CD F8 91         call Elimina_disparo_de_base_de_datos
1018+ 91CA E1               pop hl
1019+ 91CB 18 10            jr 7F
1020+ 91CD
1021+ 91CD              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91CD              ; HL contiene el puntero de impresión del disparo.
1023+ 91CD              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91CD
1025+ 91CD D5           3 push de
1026+ 91CE C5               push bc
1027+ 91CF
1028+ 91CF CD 97 8F         call Comprueba_Colision
1029+ 91D2
1030+ 91D2              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91D2
1032+ 91D2 78               ld a,b
1033+ 91D3
1034+ 91D3 C1               pop bc
1035+ 91D4 D1               pop de
1036+ 91D5
1037+ 91D5 EB               ex de,hl
1038+ 91D6
1039+ 91D6 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91D7 23               inc hl                                      ; _ movimiento.
1041+ 91D8 72               ld (hl),d
1042+ 91D9
1043+ 91D9 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91DA
1045+ 91DA 23               inc hl                                      ; _ en curso.
1046+ 91DB 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91DC 2B               dec hl
1048+ 91DD
1049+ 91DD C9           7 ret
1050+ 91DE
1051+ 91DE              ; Disparo hacia abajo, (Entidad).
1052+ 91DE
1053+ 91DE 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91E1 47               ld b,a
1055+ 91E2
1056+ 91E2 CD 21 96     4 call NextScan
1057+ 91E5 10 FB            djnz 4B
1058+ 91E7
1059+ 91E7              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91E7
1061+ 91E7 7C               ld a,h
1062+ 91E8 FE 58            cp $58
1063+ 91EA 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91EC
1065+ 91EC EB               ex de,hl
1066+ 91ED 06 04            ld b,4
1067+ 91EF 2B           5 dec hl
1068+ 91F0 10 FD            djnz 5B
1069+ 91F2
1070+ 91F2 CD F8 91         call Elimina_disparo_de_base_de_datos
1071+ 91F5 E1               pop hl
1072+ 91F6 18 E5            jr 7B
1073+ 91F8
1074+ 91F8              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91F8
1076+ 91F8 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91FB AF               xor a
1078+ 91FC 77               ld (hl),a
1079+ 91FD 54               ld d,h
1080+ 91FE 5D               ld e,l
1081+ 91FF 13               inc de
1082+ 9200 ED B0            ldir
1083+ 9202 C9               ret
1084+ 9203
1085+ 9203              ; -----------------------------------------------------------------
1086+ 9203              ;
1087+ 9203              ;   19/7/23
1088+ 9203              ;
1089+ 9203              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9203              ;
1091+ 9203              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9203              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9203              ;
1094+ 9203              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9203              ;
1096+ 9203              ;   INPUTS:
1097+ 9203              ;
1098+ 9203              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9203              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9203
1101+ 9203              ;   MODIFICA: A, HL, BC y DE.
1102+ 9203
1103+ 9203              Guarda_coordenadas_X
1104+ 9203
1105+ 9203 7B               ld a,e
1106+ 9204 A7               and a
1107+ 9205 20 04            jr nz,1F
1108+ 9207
1109+ 9207 06 02            ld b,2
1110+ 9209 18 02            jr 2F
1111+ 920B
1112+ 920B 06 03        1 ld b,3
1113+ 920D 72           2 ld (hl),d
1114+ 920E 23               inc hl
1115+ 920F 14               inc d
1116+ 9210 10 FB            djnz 2B
1117+ 9212
1118+ 9212 C9               ret
1119+ 9213
1120+ 9213              ; -----------------------------------------------------------------
1121+ 9213              ;
1122+ 9213              ;   12/04/23
1123+ 9213              ;
1124+ 9213
1125+ 9213 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9216 A7               and a
1127+ 9217 C8               ret z
1128+ 9218
1129+ 9218 FE 04            cp 4
1130+ 921A 20 09            jr nz,1F
1131+ 921C
1132+ 921C
1133+ 921C              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 921C
1135+ 921C CD 38 90         call Detecta_colision_nave_entidad
1136+ 921F
1137+ 921F 21 43 89         ld hl,Impacto2
1138+ 9222 CB 5E            bit 3,(hl)
1139+ 9224 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9225
1141+ 9225              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9225              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9225
1144+ 9225 21 43 89     1 ld hl,Impacto2
1145+ 9228 CB 4E            bit 1,(hl)
1146+ 922A 28 07            jr z,2F
1147+ 922C
1148+ 922C 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 922F 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9231 18 0B            jr 3F
1151+ 9233
1152+ 9233 21 43 89     2 ld hl,Impacto2
1153+ 9236 CB 46            bit 0,(hl)
1154+ 9238 C8               ret z
1155+ 9239
1156+ 9239              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9239
1158+ 9239 21 03 89         ld hl,Ctrl_1
1159+ 923C CB D6            set 2,(hl)
1160+ 923E
1161+ 923E C9           3 ret
1162+ 923F
1163+ 923F              ; -----------------------------------------------------------------
1164+ 923F              ;
1165+ 923F              ;   19/7/23
1166+ 923F              ;
1167+ 923F              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 923F
1169+ 923F AF           Limpia_Coordenadas_X xor a
1170+ 9240 06 06            ld b,6
1171+ 9242 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 9245 77           1 ld (hl),a
1173+ 9246 23               inc hl
1174+ 9247 10 FC            djnz 1B
1175+ 9249 C9               ret
1176+ 924A
1177+ 924A              ; -----------------------------------------------------------------
1178+ 924A              ;
1179+ 924A              ;   25/04/23
1180+ 924A              ;
1181+ 924A
1182+ 924A              Determina_resultado_comparativa
1183+ 924A
1184+ 924A              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 924A              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 924A              ;
1187+ 924A              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 924A              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 924A              ;
1190+ 924A              ;   SBC HL,DE
1191+ 924A
1192+ 924A              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 924A              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 924A
1195+ 924A              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 924A              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 924A
1198+ 924A
1199+ 924A 3A DA 88         ld a,(Cuad_objeto)
1200+ 924D FE 02            cp 2
1201+ 924F 28 26            jr z,2F
1202+ 9251 38 24            jr c,2F
1203+ 9253
1204+ 9253              ; Cuadrantes 3º y 4º
1205+ 9253
1206+ 9253 E6 01            and 1
1207+ 9255 28 10            jr z,4F
1208+ 9257
1209+ 9257              ; Cuadrante 3º
1210+ 9257
1211+ 9257 7C               ld a,h
1212+ 9258 06 00            ld b,0
1213+ 925A
1214+ 925A CD E5 92         call Compara_cositas_H3
1215+ 925D
1216+ 925D 04               inc b
1217+ 925E 05               dec b
1218+ 925F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9260
1220+ 9260 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9261 06 00            ld b,0
1222+ 9263
1223+ 9263 CD F7 92         call Compara_cositas_L3
1224+ 9266 C9               ret
1225+ 9267
1226+ 9267              ; Cuadrante 4º
1227+ 9267
1228+ 9267 7C           4 ld a,h
1229+ 9268 06 00            ld b,0
1230+ 926A
1231+ 926A CD 09 93         call Compara_cositas_H4
1232+ 926D
1233+ 926D 04               inc b
1234+ 926E 05               dec b
1235+ 926F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9270
1237+ 9270 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9271 06 00            ld b,0
1239+ 9273
1240+ 9273 CD 1F 93         call Compara_cositas_L4
1241+ 9276 C9               ret
1242+ 9277
1243+ 9277              ; Cuadrantes 1º y 2º.
1244+ 9277
1245+ 9277 28 10        2 jr z,3F
1246+ 9279
1247+ 9279              ; 1er Cuadrante
1248+ 9279
1249+ 9279 7C               ld a,h
1250+ 927A 06 00            ld b,0
1251+ 927C
1252+ 927C CD BD 92         call Compara_cositas_H1
1253+ 927F
1254+ 927F 04               inc b
1255+ 9280 05               dec b
1256+ 9281 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9282
1258+ 9282 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9283 06 00            ld b,0
1260+ 9285
1261+ 9285 CD D3 92         call Compara_cositas_L1
1262+ 9288 C9               ret
1263+ 9289
1264+ 9289
1265+ 9289              ; 2º Cuadrante
1266+ 9289
1267+ 9289 7C           3 ld a,h
1268+ 928A 06 00            ld b,0
1269+ 928C
1270+ 928C CD 99 92         call Compara_cositas_H2
1271+ 928F
1272+ 928F 04               inc b
1273+ 9290 05               dec b
1274+ 9291 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9292
1276+ 9292 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9293 06 00            ld b,0
1278+ 9295
1279+ 9295 CD AB 92         call Compara_cositas_L2
1280+ 9298 C9               ret
1281+ 9299
1282+ 9299 A7           Compara_cositas_H2 and a
1283+ 929A 28 0D            jr z,1F
1284+ 929C              ;    cp $fd
1285+ 929C              ;    jr z,1F
1286+ 929C              ;    cp $fe
1287+ 929C              ;    jr z,1F
1288+ 929C FE FF            cp $ff
1289+ 929E 28 09            jr z,1F
1290+ 92A0 FE 01            cp $01
1291+ 92A2 28 05            jr z,1F
1292+ 92A4 FE 02            cp $02
1293+ 92A6 28 01            jr z,1F
1294+ 92A8 C0               ret nz
1295+ 92A9 04           1 inc b
1296+ 92AA C9               ret
1297+ 92AB
1298+ 92AB A7           Compara_cositas_L2 and a
1299+ 92AC 28 0D            jr z,1F
1300+ 92AE              ;    cp $fd
1301+ 92AE              ;    jr z,1F
1302+ 92AE FE FE            cp $fe
1303+ 92B0 28 09            jr z,1F
1304+ 92B2 FE FF            cp $ff
1305+ 92B4 28 05            jr z,1F
1306+ 92B6 FE 01            cp $01
1307+ 92B8 28 01            jr z,1F
1308+ 92BA              ;    cp $02
1309+ 92BA              ;    jr z,1F
1310+ 92BA C0               ret nz
1311+ 92BB 04           1 inc b
1312+ 92BC C9               ret
1313+ 92BD
1314+ 92BD A7           Compara_cositas_H1 and a
1315+ 92BE 28 11            jr z,1F
1316+ 92C0              ;    cp $fd
1317+ 92C0              ;    jr z,1F
1318+ 92C0              ;    cp $fe
1319+ 92C0              ;    jr z,1F
1320+ 92C0 FE FF            cp $ff
1321+ 92C2 28 0D            jr z,1F
1322+ 92C4 FE 01            cp $01
1323+ 92C6 28 09            jr z,1F
1324+ 92C8 FE 02            cp $02
1325+ 92CA 28 05            jr z,1F
1326+ 92CC FE 03            cp $03
1327+ 92CE 28 01            jr z,1F
1328+ 92D0 C0               ret nz
1329+ 92D1 04           1 inc b
1330+ 92D2 C9               ret
1331+ 92D3
1332+ 92D3 A7           Compara_cositas_L1 and a
1333+ 92D4 28 0D            jr z,1F
1334+ 92D6              ;    cp $fd
1335+ 92D6              ;    jr z,1F
1336+ 92D6              ;    cp $fe
1337+ 92D6              ;    jr z,1F
1338+ 92D6              ;    cp $ff
1339+ 92D6              ;    jr z,1F
1340+ 92D6 FE 01            cp $01
1341+ 92D8 28 09            jr z,1F
1342+ 92DA FE 02            cp $02
1343+ 92DC 28 05            jr z,1F
1344+ 92DE FE 03            cp $03
1345+ 92E0 28 01            jr z,1F
1346+ 92E2 C0               ret nz
1347+ 92E3 04           1 inc b
1348+ 92E4 C9               ret
1349+ 92E5
1350+ 92E5 A7           Compara_cositas_H3 and a
1351+ 92E6 28 0D            jr z,1F
1352+ 92E8              ;    cp $fd
1353+ 92E8              ;    jr z,1F
1354+ 92E8 FE FE            cp $fe
1355+ 92EA 28 09            jr z,1F
1356+ 92EC FE FF            cp $ff
1357+ 92EE 28 05            jr z,1F
1358+ 92F0 FE 01            cp $01
1359+ 92F2 28 01            jr z,1F
1360+ 92F4              ;    cp $02
1361+ 92F4              ;    jr z,1F
1362+ 92F4              ;    cp $03
1363+ 92F4              ;    jr z,1F
1364+ 92F4 C0               ret nz
1365+ 92F5 04           1 inc b
1366+ 92F6 C9               ret
1367+ 92F7
1368+ 92F7 A7           Compara_cositas_L3 and a
1369+ 92F8 28 0D            jr z,1F
1370+ 92FA              ;    cp $fd
1371+ 92FA              ;    jr z,1F
1372+ 92FA              ;    cp $fe
1373+ 92FA              ;    jr z,1F
1374+ 92FA              ;    cp $ff
1375+ 92FA              ;    jr z,1F
1376+ 92FA FE 01            cp $01
1377+ 92FC 28 09            jr z,1F
1378+ 92FE FE 02            cp $02
1379+ 9300 28 05            jr z,1F
1380+ 9302 FE 03            cp $03
1381+ 9304 28 01            jr z,1F
1382+ 9306 C0               ret nz
1383+ 9307 04           1 inc b
1384+ 9308 C9               ret
1385+ 9309
1386+ 9309 A7           Compara_cositas_H4 and a
1387+ 930A 28 11            jr z,1F
1388+ 930C FE FD            cp $fd
1389+ 930E 28 0D            jr z,1F
1390+ 9310 FE FE            cp $fe
1391+ 9312 28 09            jr z,1F
1392+ 9314 FE FF            cp $ff
1393+ 9316 28 05            jr z,1F
1394+ 9318 FE 01            cp $01
1395+ 931A 28 01            jr z,1F
1396+ 931C              ;    cp $02
1397+ 931C              ;    jr z,1F
1398+ 931C              ;    cp $03
1399+ 931C              ;    jr z,1F
1400+ 931C C0               ret nz
1401+ 931D 04           1 inc b
1402+ 931E C9               ret
1403+ 931F
1404+ 931F A7           Compara_cositas_L4 and a
1405+ 9320 28 0D            jr z,1F
1406+ 9322              ;    cp $fd
1407+ 9322              ;    jr z,1F
1408+ 9322 FE FE            cp $fe
1409+ 9324 28 09            jr z,1F
1410+ 9326 FE FF            cp $ff
1411+ 9328 28 05            jr z,1F
1412+ 932A FE 01            cp $01
1413+ 932C 28 01            jr z,1F
1414+ 932E              ;    cp $02
1415+ 932E              ;    jr z,1F
1416+ 932E              ;    cp $03
1417+ 932E              ;    jr z,1F
1418+ 932E C0               ret nz
1419+ 932F 04           1 inc b
1420+ 9330 C9               ret
# file closed: Disparo.asm
1639  9331              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9331              ; ******************************************************************************************************************************************************************************************
   2+ 9331              ;
   3+ 9331              ; 26/06/23
   4+ 9331              ;
   5+ 9331              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9331
   7+ 9331 CD 15 96     Draw call Prepara_draw
   8+ 9334 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9335 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9336 28 05        	jr z,2F
  11+ 9338
  12+ 9338 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 933B 18 0C        	jr 1F
  14+ 933D
  15+ 933D 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9340 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9343 CD D2 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9346              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9346 CD 75 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9349
  21+ 9349 3A F0 88     1 ld a,(Ctrl_0)
  22+ 934C CB 6F        	bit 5,a
  23+ 934E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9350
  25+ 9350 CD 68 93     	call Comprueba_limite_horizontal
  26+ 9353 CD F8 93     	call Comprueba_limite_vertical
  27+ 9356
  28+ 9356              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9356              ; -----------------------
  30+ 9356              ; -----------------------
  31+ 9356              ; -----------------------
  32+ 9356
  33+ 9356 CD 45 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9359 CD 7C 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 935C CD DB 95     	call Define_rutina_de_impresion
  36+ 935F
  37+ 935F 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9362 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9364 32 F0 88     	ld (Ctrl_0),a
  40+ 9367
  41+ 9367 C9           	ret
  42+ 9368
  43+ 9368              ; *******************************************************************************************************************************************************************************************
  44+ 9368              ;	21/01/23
  45+ 9368              ;
  46+ 9368              ; 	Comprueba_limite_horizontal.
  47+ 9368              ;
  48+ 9368              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9368              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9368              ;
  51+ 9368              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9368              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9368              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9368              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9368
  56+ 9368
  57+ 9368
  58+ 9368 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 936B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 936D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 936F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9371 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9374 18 09            jr 6F
  64+ 9376 CB 5F        1 bit 3,a
  65+ 9378 28 0A            jr z,2F
  66+ 937A E6 F7            and $f7
  67+ 937C 32 F0 88         ld (Ctrl_0),a
  68+ 937F CD D2 94     6 call Inicializacion
  69+ 9382 18 5B            jr 5F
  70+ 9384 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9385
  72+ 9385              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9385              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9385
  75+ 9385 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9386 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9389 CD 34 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 938C 67           	ld h,a
  79+ 938D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 938E CD 34 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9391 67           	ld h,a
  82+ 9392 A7           	and a
  83+ 9393 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9395 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9396 3A DA 88     	ld a,(Cuad_objeto)
  86+ 9399 FE 02        	cp 2
  87+ 939B 38 1E        	jr c,3F
  88+ 939D 28 1C        	jr z,3F
  89+ 939F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93A0 28 23            jr z,7F
  91+ 93A2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93A4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93A6 E1           	pop hl
  94+ 93A7
  95+ 93A7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93A7              ; _para indicar con E="2" en caso necesario.
  97+ 93A7
  98+ 93A7 E5               push hl
  99+ 93A8 C5               push bc
 100+ 93A9 CD 34 99     	call calcula_tercio
 101+ 93AC FE 01        	cp 1
 102+ 93AE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93B0 CD E0 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93B3 28 26            jr z,9F
 105+ 93B5 38 24            jr c,9F
 106+ 93B7 1E 00        11 ld e,0
 107+ 93B9 18 22            jr 8F
 108+ 93BB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93BC 28 07        	jr z, 7F
 110+ 93BE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93C0 1E 00         	ld e,0
 112+ 93C2 E1           	pop hl
 113+ 93C3 18 04        	jr 4F
 114+ 93C5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93C7 18 15            jr 10F
 116+ 93C9
 117+ 93C9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93C9              ; _para indicar con E="2" en caso necesario.
 119+ 93C9
 120+ 93C9 E5           4 push hl
 121+ 93CA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93CB CD 34 99     	call calcula_tercio
 123+ 93CE FE 01        	cp 1
 124+ 93D0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93D2 CD E0 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93D5 28 04            jr z,9F
 127+ 93D7 30 02            jr nc,9F
 128+ 93D9 18 02        	jr 8F
 129+ 93DB 1E 02        9 ld e,2
 130+ 93DD C1           8 pop bc
 131+ 93DE E1           10 pop hl
 132+ 93DF C9           5 ret
 133+ 93E0
 134+ 93E0              ; --------------------
 135+ 93E0              ;
 136+ 93E0              ; 25/08/22
 137+ 93E0
 138+ 93E0 CD 34 99     Comprueba_centro call calcula_tercio
 139+ 93E3 67               ld h,a
 140+ 93E4 08           	ex af,af
 141+ 93E5 FE 02        	cp 2
 142+ 93E7 38 07        	jr c,1F
 143+ 93E9 28 05        	jr z,1F
 144+ 93EB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93EE 18 03        	jr 2F
 146+ 93F0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93F3 08           2 ex af,af
 148+ 93F4 A7               and a
 149+ 93F5 ED 42            sbc hl,bc
 150+ 93F7 C9               ret
 151+ 93F8
 152+ 93F8              ; *********************************************************************************************************************************************************************************************
 153+ 93F8              ;
 154+ 93F8              ;   16/8/22
 155+ 93F8              ;
 156+ 93F8              ;	Comprueba_limite_vertical
 157+ 93F8              ;
 158+ 93F8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93F8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93F8              ;
 161+ 93F8
 162+ 93F8 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93FB 7D           	ld a,l
 164+ 93FC E6 1F        	and $1F
 165+ 93FE 57           	ld d,a
 166+ 93FF 3A 00 89     	ld a,(Limite_vertical)
 167+ 9402 BA           	cp d 											; Límite - Posición.
 168+ 9403 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9404 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9407 CB 47        	bit 0,a
 171+ 9409 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 940B
 173+ 940B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 940B
 175+ 940B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 940C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 940E
 178+ 940E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 940E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 940E
 181+ 940E 3A CC 88         ld a,(Coordenada_X)
 182+ 9411 16 0F            ld d,Centro_izquierda
 183+ 9413 A7               and a
 184+ 9414 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9415 28 1E            jr z,3F
 186+ 9417 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9419              ;                                                    ; _salimos sin modificar nada.
 188+ 9419 18 0E            jr 2F
 189+ 941B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 941C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 941E
 192+ 941E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 941E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 941E
 195+ 941E 3A CC 88         ld a,(Coordenada_X)
 196+ 9421 16 10            ld d,Centro_derecha
 197+ 9423 A7               and a
 198+ 9424 92               sub d
 199+ 9425 28 0E            jr z,3F
 200+ 9427 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9429              ;                                                    ; _salimos sin modificar nada.
 202+ 9429 CB 43        2 bit 0,e
 203+ 942B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 942D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 942E CD C2 94         call Modificaccionne
 206+ 9431 C1           	pop bc
 207+ 9432 CD D2 94         call Inicializacion
 208+ 9435 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9436
 210+ 9436              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9436
 212+ 9436 C5           4 push bc
 213+ 9437 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 943A 0A           	ld a,(bc)
 215+ 943B 3D           	dec a
 216+ 943C 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 943D 7D           	ld a,l
 218+ 943E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 943F CB 47        	bit 0,a
 220+ 9441 28 03        	jr z,5F
 221+ 9443 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9444 18 2E        	jr 7F
 223+ 9446
 224+ 9446              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9446
 226+ 9446 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9447 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9448 3A F0 88     	ld a,(Ctrl_0)
 229+ 944B CB 4F        	bit 1,a
 230+ 944D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 944F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9450
 233+ 9450              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9450
 235+ 9450 1C               inc e
 236+ 9451 1D               dec e
 237+ 9452 20 07            jr nz,12F
 238+ 9454 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9455 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9456 22 C8 88     	ld (Posicion_actual),hl
 241+ 9459 18 44        13 jr 9F
 242+ 945B CB 43        12 bit 0,e
 243+ 945D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 945F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 945F C1           	pop bc
 246+ 9460 18 D3        	jr 3B
 247+ 9462 80           14 add b
 248+ 9463 6F               ld l,a
 249+ 9464 22 C8 88     	ld (Posicion_actual),hl
 250+ 9467 CD C2 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 946A 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 946C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 946E 32 F0 88         ld (Ctrl_0),a
 254+ 9471 F1           	pop af
 255+ 9472 18 2B        	jr 9F
 256+ 9474
 257+ 9474              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9474
 259+ 9474 F5           7 push af
 260+ 9475 3A F0 88     	ld a,(Ctrl_0)
 261+ 9478 CB 47        	bit 0,a
 262+ 947A 20 1D        	jr nz,8F
 263+ 947C F1           	pop af
 264+ 947D
 265+ 947D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 947D
 267+ 947D 1C           	inc e
 268+ 947E 1D               dec e
 269+ 947F 20 07            jr nz,10F
 270+ 9481 90           	sub b
 271+ 9482 6F               ld l,a
 272+ 9483 22 C8 88     	ld (Posicion_actual),hl
 273+ 9486 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9488              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9488 CB 43        10 bit 0,e
 276+ 948A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 948C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 948C C1           	pop bc
 279+ 948D 18 A6        	jr 3B
 280+ 948F 90           16 sub b
 281+ 9490 6F               ld l,a
 282+ 9491 22 C8 88     	ld (Posicion_actual),hl
 283+ 9494 CD C2 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9497 18 06            jr 9F
 285+ 9499 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 949B 32 F0 88         ld (Ctrl_0),a
 287+ 949E F1           	pop af
 288+ 949F C1           9 pop bc
 289+ 94A0 1E 00        	ld e,0
 290+ 94A2 CD D2 94         call Inicializacion
 291+ 94A5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94A6 08           	ex af,af
 293+ 94A7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94A8 18 8B            jr 3B
 295+ 94AA
 296+ 94AA              ; --------------------
 297+ 94AA
 298+ 94AA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94AC CD 30 96     1 call PreviousScan
 300+ 94AF 10 FB            djnz 1B
 301+ 94B1 22 C8 88     	ld (Posicion_actual),hl
 302+ 94B4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94B5 C9           	ret
 304+ 94B6
 305+ 94B6              ; --------------------
 306+ 94B6
 307+ 94B6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94B8 CD 21 96     1 call NextScan
 309+ 94BB 10 FB            djnz 1B
 310+ 94BD 22 C8 88     	ld (Posicion_actual),hl
 311+ 94C0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94C1 C9           	ret
 313+ 94C2
 314+ 94C2              ; --------------------
 315+ 94C2              ;
 316+ 94C2              ;	22/01/23
 317+ 94C2              ;
 318+ 94C2              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94C2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94C2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94C2
 322+ 94C2
 323+ 94C2              Modificaccionne
 324+ 94C2
 325+ 94C2 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94C5 FE 02        	cp 2
 327+ 94C7 CC AA 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94CA DC AA 94         call c,Modifica_Pos_actual
 329+ 94CD C8           	ret z
 330+ 94CE CD B6 94         call Modifica_Pos_actual2
 331+ 94D1 C9               ret
 332+ 94D2
 333+ 94D2              ; *************************************************************************************************************************************************************************************************
 334+ 94D2              ;
 335+ 94D2              ;	13/8/22
 336+ 94D2              ;
 337+ 94D2              ;	Inicializacion
 338+ 94D2              ;
 339+ 94D2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94D2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94D2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94D2              ;
 343+ 94D2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94D2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94D2              ;	_ desaparece/aparece.
 346+ 94D2
 347+ 94D2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94D2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94D2              ;
 350+ 94D2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94D2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94D2              ; 		   [E] ="0"
 353+ 94D2
 354+ 94D2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94D2
 356+ 94D2 CD 34 99     Inicializacion call calcula_tercio
 357+ 94D5 28 36        	jr z,primit
 358+ 94D7 E6 02        	and 2
 359+ 94D9 20 07        	jr nz,segmit
 360+ 94DB 7D           	ld a,l
 361+ 94DC FE 7F        	cp $7f
 362+ 94DE 38 2D        	jr c,primit
 363+ 94E0 28 2B        	jr z,primit
 364+ 94E2 CD 3F 95     segmit call column
 365+ 94E5 38 13        	jr c,tercuad
 366+ 94E7 3E 04        cuarcuad ld a,4
 367+ 94E9 32 DA 88     	ld (Cuad_objeto),a
 368+ 94EC 21 20 48     	ld hl,$4820
 369+ 94EF 22 FE 88     	ld (Limite_horizontal),hl
 370+ 94F2 21 00 89     	ld hl,Limite_vertical
 371+ 94F5 36 0D        	ld (hl),$0d
 372+ 94F7 08           	ex af,af
 373+ 94F8 18 3C        	jr 1F
 374+ 94FA              tercuad
 375+ 94FA 3E 03        	ld a,3
 376+ 94FC 32 DA 88     	ld (Cuad_objeto),a
 377+ 94FF 21 20 48     	ld hl,$4820
 378+ 9502 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9505 21 00 89     	ld hl,Limite_vertical
 380+ 9508 36 12        	ld (hl),$12
 381+ 950A 08           	ex af,af
 382+ 950B 18 29        	jr 1F
 383+ 950D CD 3F 95     primit call column
 384+ 9510 38 13        	jr c, primcuad
 385+ 9512              segcuad
 386+ 9512 3E 02        	ld a,2
 387+ 9514 32 DA 88     	ld (Cuad_objeto),a
 388+ 9517 21 C0 4F     	ld hl,$4fc0
 389+ 951A 22 FE 88     	ld (Limite_horizontal),hl
 390+ 951D 21 00 89     	ld hl,Limite_vertical
 391+ 9520 36 0D        	ld (hl),$0d
 392+ 9522 08           	ex af,af
 393+ 9523 18 11        	jr 1F
 394+ 9525              primcuad
 395+ 9525 3E 01        	ld a,1
 396+ 9527 32 DA 88     	ld (Cuad_objeto),a
 397+ 952A 21 C0 4F     	ld hl,$4fc0
 398+ 952D 22 FE 88     	ld (Limite_horizontal),hl
 399+ 9530 21 00 89     	ld hl,Limite_vertical
 400+ 9533 36 12        	ld (hl),$12
 401+ 9535 08           	ex af,af
 402+ 9536 CD BF 9C     1 call Genera_coordenadas
 403+ 9539 21 F0 88     	ld hl,Ctrl_0
 404+ 953C CB EE        	set 5,(hl)
 405+ 953E C9           	ret
 406+ 953F
 407+ 953F              ; ------------------------------------------------------------------------------------------------------------------
 408+ 953F
 409+ 953F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 953F              ;
 411+ 953F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 953F
 413+ 953F 7D           column ld a,l
 414+ 9540 E6 1F        	and $1f
 415+ 9542 FE 10         	cp $10
 416+ 9544 C9            	ret
 417+ 9545
 418+ 9545              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9545              ;
 420+ 9545              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9545              ;
 422+ 9545              ; 14/12/22
 423+ 9545              ;
 424+ 9545              ;	Modifica: A y BC.
 425+ 9545
 426+ 9545 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9548 E6 01        	and 1
 428+ 954A 28 17        	jr z,1F
 429+ 954C
 430+ 954C              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 954C
 432+ 954C 3A CC 88     	ld a,(Coordenada_X)
 433+ 954F 47           	ld b,a
 434+ 9550 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9551 79           	ld a,c
 436+ 9552 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9553 38 08        	jr c,2F
 438+ 9555 47           	ld b,a
 439+ 9556 79           	ld a,c
 440+ 9557 90           	sub b
 441+ 9558 32 FD 88     	ld (Columnas),a
 442+ 955B 18 1B        	jr 4F
 443+ 955D 79           2 ld a,c
 444+ 955E 32 FD 88     	ld (Columnas),a
 445+ 9561 18 15        	jr 4F
 446+ 9563
 447+ 9563              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9563
 449+ 9563 3A CC 88     1 ld a,(Coordenada_X)
 450+ 9566 81           	add c
 451+ 9567 3D           	dec a
 452+ 9568 D6 1F        	sub $1f
 453+ 956A 38 08        	jr c,3F
 454+ 956C 47           	ld b,a
 455+ 956D 79           	ld a,c
 456+ 956E 90           	sub b
 457+ 956F 32 FD 88     	ld (Columnas),a
 458+ 9572 18 04        	jr 4F
 459+ 9574 79           3 ld a,c
 460+ 9575 32 FD 88     	ld (Columnas),a
 461+ 9578 D9           4 exx
 462+ 9579 4F           	ld c,a
 463+ 957A D9           	exx
 464+ 957B C9            ret
 465+ 957C
 466+ 957C              ; --------------------------------------------------------------------------------------------------------------------
 467+ 957C              ;
 468+ 957C              ;   19/7/23
 469+ 957C              ;
 470+ 957C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 957C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 957C              ;
 473+ 957C              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 957C              ;			HL e IY Contienen (Puntero_objeto).
 475+ 957C              ;
 476+ 957C              ;	DESTRUYE: HL,B Y A.
 477+ 957C
 478+ 957C 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 957F FE 02        	cp 2
 480+ 9581 38 18        	jr c,1F
 481+ 9583 28 16        	jr z,1F
 482+ 9585 E6 01        	and 1
 483+ 9587 28 0D        	jr z,3F
 484+ 9589
 485+ 9589              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9589
 487+ 9589 CD CF 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 958C
 489+ 958C 7D           9 ld a,l
 490+ 958D E6 1F        	and $1f
 491+ 958F 28 2A        	jr z,7F
 492+ 9591 2B           	dec hl
 493+ 9592 10 F8        	djnz 9B
 494+ 9594 18 25        	jr 7F
 495+ 9596
 496+ 9596              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9596
 498+ 9596 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 9599 18 20        	jr 7F
 500+ 959B
 501+ 959B 28 14        1 jr z,2F
 502+ 959D
 503+ 959D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 959D
 505+ 959D CD CF 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95A0
 507+ 95A0 7D           4 ld a,l
 508+ 95A1 E6 1F        	and $1f
 509+ 95A3 28 03        	jr z,6F
 510+ 95A5 2B           	dec hl
 511+ 95A6 10 F8        	djnz 4B
 512+ 95A8 06 0F        6 ld b,15
 513+ 95AA CD 30 96     5 call PreviousScan
 514+ 95AD 10 FB        	djnz 5B
 515+ 95AF 18 0A        	jr 7F
 516+ 95B1
 517+ 95B1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95B1
 519+ 95B1 CD CF 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95B4 06 0F        	ld b,15
 521+ 95B6 CD 30 96     8 call PreviousScan
 522+ 95B9 10 FB        	djnz 8B
 523+ 95BB
 524+ 95BB E5           7 push hl
 525+ 95BC DD E1        	pop ix
 526+ 95BE
 527+ 95BE 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95C1 E5           	push hl
 529+ 95C2 FD E1        	pop iy
 530+ 95C4
 531+ 95C4              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95C4
 533+ 95C4 3A F0 88     	ld a,(Ctrl_0)
 534+ 95C7 CB 77        	bit 6,a
 535+ 95C9 C8           	ret z
 536+ 95CA
 537+ 95CA              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95CA              ; _ entidad / Amadeus´.
 539+ 95CA
 540+ 95CA DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95CE
 542+ 95CE C9           	ret
 543+ 95CF
 544+ 95CF              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95CF              ;
 546+ 95CF              ;	2/1/23
 547+ 95CF              ;
 548+ 95CF              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95CF              ;
 550+ 95CF              ;	Tras esta rutina tenemos:
 551+ 95CF              ;
 552+ 95CF              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95CF              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95CF              ;
 555+ 95CF              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95CF
 557+ 95CF 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 95D2 3A FD 88     	ld a,(Columnas)
 559+ 95D5 3D           	dec a
 560+ 95D6 20 01        	jr nz,1F
 561+ 95D8 3C           	inc a
 562+ 95D9 47           1 ld b,a
 563+ 95DA C9           	ret
 564+ 95DB
 565+ 95DB              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95DB              ;
 567+ 95DB              ;	3/1/23
 568+ 95DB              ;
 569+ 95DB              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95DB              ;
 571+ 95DB              ;	Destruye: A,B,HL y DE.
 572+ 95DB
 573+ 95DB              Define_rutina_de_impresion
 574+ 95DB
 575+ 95DB 3A C7 88     	ld a,(Columns)
 576+ 95DE 47           	ld b,a
 577+ 95DF 3A FD 88     	ld a,(Columnas)
 578+ 95E2 B8           	cp b
 579+ 95E3 20 0D        	jr nz,2f
 580+ 95E5
 581+ 95E5              ;	La entidad se imprime entera.
 582+ 95E5
 583+ 95E5 21 04 97     	ld hl, Indice_entidades_completas
 584+ 95E8 E6 01        	and 1
 585+ 95EA 28 02        	jr z,1F
 586+ 95EC
 587+ 95EC 23           	inc hl
 588+ 95ED 23           	inc hl
 589+ 95EE
 590+ 95EE CD 80 8C     1 call Extrae_address
 591+ 95F1 C9           	ret		;	ret
 592+ 95F2
 593+ 95F2              ;	La entidad no se imprime entera en pantalla.
 594+ 95F2
 595+ 95F2 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 95F5 E6 01        	and 1
 597+ 95F7 28 17        	jr z,3F
 598+ 95F9
 599+ 95F9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95F9
 601+ 95F9 21 08 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 95FC 3A C7 88     4 ld a,(Columns)
 603+ 95FF E6 01        	and 1
 604+ 9601 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9603
 606+ 9603 23           	inc hl
 607+ 9604 23           	inc hl
 608+ 9605
 609+ 9605 3A FD 88     	ld a,(Columnas)
 610+ 9608 E6 01        	and 1
 611+ 960A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 960C
 613+ 960C 23           	inc hl
 614+ 960D 23           	inc hl
 615+ 960E
 616+ 960E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9610
 618+ 9610 21 0E 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9613 18 E7        	jr 4B
 620+ 9615
 621+ 9615              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9615              ;
 623+ 9615              ;	Prepara_draw
 624+ 9615              ;
 625+ 9615              ;	Es una rutina de carga.
 626+ 9615              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9615              ;
 628+ 9615              ;	FUNCIONAMIENTO:
 629+ 9615              ;
 630+ 9615              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9615              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9615              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9615              ;
 634+ 9615              ;	DESTRUYE:
 635+ 9615              ;
 636+ 9615              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9615
 638+ 9615 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9618 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9619 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 961A 4E           	ld c,(hl)
 642+ 961B 2A C8 88     	ld hl,(Posicion_actual)
 643+ 961E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9620 C9           	ret
 645+ 9621
 646+ 9621              ;----------------------------------------------------------------------------------------------------------------
 647+ 9621              ;
 648+ 9621              ;	5/08/22
 649+ 9621              ;
 650+ 9621              ;   NextScan.
 651+ 9621              ;
 652+ 9621              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9621              ;
 654+ 9621              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9621              ;
 656+ 9621              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9621              ;
 658+ 9621              ;       DESTRUIDOS: AF y HL !!!
 659+ 9621              ;
 660+ 9621              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9621              ;
 662+ 9621
 663+ 9621 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9622 7C               ld a,h
 665+ 9623 E6 07            and 7
 666+ 9625 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9626
 668+ 9626 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9627 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9629 6F               ld l,a
 671+ 962A D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 962B
 673+ 962B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 962C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 962E 67               ld h,a
 676+ 962F C9               ret
 677+ 9630
 678+ 9630              ;----------------------------------------------------------------------------------------------------------------
 679+ 9630              ;
 680+ 9630              ;	5/08/22
 681+ 9630              ;
 682+ 9630              ;   PreviousScan.
 683+ 9630              ;
 684+ 9630              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9630              ;
 686+ 9630              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9630              ;
 688+ 9630              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9630              ;
 690+ 9630              ;       DESTRUIDOS: AF y HL !!!
 691+ 9630              ;
 692+ 9630              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9630              ;
 694+ 9630
 695+ 9630 7C           PreviousScan ld a,h
 696+ 9631 25               dec h               ; Dec H.
 697+ 9632 E6 07            and 7
 698+ 9634 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9635
 700+ 9635 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9636 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9638 6F               ld l,a
 703+ 9639 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 963A
 705+ 963A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 963B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 963D 67               ld h,a
 708+ 963E C9               ret
 709+ 963F
 710+ 963F              ; -----------------------------------------------------------------------------------
 711+ 963F              ;
 712+ 963F              ;	31/7/23
 713+ 963F              ;
 714+ 963F              ;	Rutina principal de pintado de entidades.
 715+ 963F              ;	Extrae la foto del frame, (entidades).
 716+ 963F
 717+ 963F              Extrae_foto_entidades
 718+ 963F
 719+ 963F 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9642 7E           	ld a,(hl)
 721+ 9643 A7           	and a
 722+ 9644 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9645
 724+ 9645              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9645
 726+ 9645 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9648 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9649 C8           	ret z
 729+ 964A
 730+ 964A              ; -----------------------------------
 731+ 964A
 732+ 964A ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 964E 31 00 70     	ld sp,Album_de_fotos
 734+ 9651
 735+ 9651 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9653 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9654 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9655
 739+ 9655 ED 73 16 89  	ld (Stack_2),sp
 740+ 9659 ED 7B 14 89  	ld sp,(Stack)
 741+ 965D
 742+ 965D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 965D
 744+ 965D 3E CD        	ld a,$cd
 745+ 965F 32 67 96     	ld (Imprime),a
 746+ 9662 EB           	ex de,hl
 747+ 9663 22 68 96     	ld (Imprime+1),hl
 748+ 9666 EB           	ex de,hl
 749+ 9667
 750+ 9667              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9667
 752+ 9667 00 00 00     Imprime db 0,0,0
 753+ 966A
 754+ 966A ED 73 14 89  	ld (Stack),sp
 755+ 966E
 756+ 966E 3A 0F 89     	ld a,(Numero_de_malotes)
 757+ 9671 3D           	dec a
 758+ 9672 28 09        	jr z,1F
 759+ 9674 32 0F 89      	ld (Numero_de_malotes),a
 760+ 9677
 761+ 9677 ED 7B 16 89  	ld sp,(Stack_2)
 762+ 967B 18 D4        	jr 2B
 763+ 967D
 764+ 967D AF           1 xor a
 765+ 967E 32 16 89     	ld (Stack_2),a
 766+ 9681
 767+ 9681 C9           	ret
 768+ 9682
 769+ 9682              ; -----------------------------------------------------------------------------------
 770+ 9682              ;
 771+ 9682              ;	28/2/23
 772+ 9682              ;
 773+ 9682              ;	Pinta los disparos generados.
 774+ 9682
 775+ 9682              Extrae_foto_disparos
 776+ 9682
 777+ 9682 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9685 7E               ld a,(hl)
 779+ 9686 A7               and a
 780+ 9687 C8               ret z
 781+ 9688
 782+ 9688 3A 3E 89     	ld a,(Numero_de_disparotes)
 783+ 968B A7           	and a
 784+ 968C C8           	ret z
 785+ 968D ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9691 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 9694
 788+ 9694 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9696 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9697 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9698
 792+ 9698 ED 73 16 89  	ld (Stack_2),sp
 793+ 969C ED 7B 14 89  	ld sp,(Stack)
 794+ 96A0
 795+ 96A0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96A0
 797+ 96A0 3E CD        	ld a,$cd
 798+ 96A2 32 AA 96     	ld (Imprime2),a
 799+ 96A5 EB           	ex de,hl
 800+ 96A6 22 AB 96     	ld (Imprime2+1),hl
 801+ 96A9 EB           	ex de,hl
 802+ 96AA
 803+ 96AA              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96AA
 805+ 96AA 00 00 00     Imprime2 db 0,0,0
 806+ 96AD
 807+ 96AD 3A 3E 89     	ld a,(Numero_de_disparotes)
 808+ 96B0 3D           	dec a
 809+ 96B1 28 09        	jr z,1F
 810+ 96B3 32 3E 89      	ld (Numero_de_disparotes),a
 811+ 96B6
 812+ 96B6 ED 7B 16 89  	ld sp,(Stack_2)
 813+ 96BA 18 D8        	jr 2B
 814+ 96BC
 815+ 96BC AF           1 xor a
 816+ 96BD 32 16 89     	ld (Stack_2),a
 817+ 96C0 C9           	ret
 818+ 96C1
 819+ 96C1              ; -----------------------------------------------------------------------------------
 820+ 96C1              ;
 821+ 96C1              ;	4/9/23
 822+ 96C1              ;
 823+ 96C1              ;	Rutina principal de pintado de Amadeus.
 824+ 96C1              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96C1
 826+ 96C1 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96C4 7E           	ld a,(hl)
 828+ 96C5 A7           	and a
 829+ 96C6 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96C7
 831+ 96C7 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96CA A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96CB C8           	ret z
 834+ 96CC
 835+ 96CC              ; -----------------------------------
 836+ 96CC
 837+ 96CC ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96D0 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96D3
 840+ 96D3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96D5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96D6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96D7
 844+ 96D7 ED 73 16 89  	ld (Stack_2),sp
 845+ 96DB ED 7B 14 89  	ld sp,(Stack)
 846+ 96DF
 847+ 96DF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96DF
 849+ 96DF 3E CD        	ld a,$cd
 850+ 96E1 32 E9 96     	ld (Imprime_Amadeus),a
 851+ 96E4 EB           	ex de,hl
 852+ 96E5 22 EA 96     	ld (Imprime_Amadeus+1),hl
 853+ 96E8 EB           	ex de,hl
 854+ 96E9
 855+ 96E9              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96E9
 857+ 96E9 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96EC
 859+ 96EC ED 73 14 89  	ld (Stack),sp
 860+ 96F0
 861+ 96F0 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 96F3 3D           	dec a
 863+ 96F4 28 09        	jr z,1F
 864+ 96F6 32 0F 89      	ld (Numero_de_malotes),a
 865+ 96F9
 866+ 96F9 ED 7B 16 89  	ld sp,(Stack_2)
 867+ 96FD 18 D4        	jr 2B
 868+ 96FF
 869+ 96FF AF           1 xor a
 870+ 9700 32 16 89     	ld (Stack_2),a
 871+ 9703
 872+ 9703 C9           	ret
# file closed: Draw_XOR.asm
1640  9704              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9704              ;   índices de Rutinas de impresión.
   2+ 9704
   3+ 9704 14 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9706 41 97            defw Pinta_Amadeus_3x2
   5+ 9708
   6+ 9708 97 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 970A 37 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 970C EB 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 970E
  10+ 970E C1 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9710 C5 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9712 79 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9714
  14+ 9714
  15+ 9714              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9714              ;
  17+ 9714              ;   12/12/22
  18+ 9714              ;
  19+ 9714              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9714              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9714              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9714              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9714              ;
  24+ 9714              ;   Modifica: DE y HL.
  25+ 9714
  26+ 9714 ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9718 FD F9        	ld sp,iy
  28+ 971A 06 10            ld b,16
  29+ 971C D1           1 pop de
  30+ 971D 7B               ld a,e
  31+ 971E AE               xor (hl)
  32+ 971F 77           	ld (hl),a
  33+ 9720 23           	inc hl
  34+ 9721 7A               ld a,d
  35+ 9722 AE               xor (hl)
  36+ 9723 77           	ld (hl),a
  37+ 9724 2B           	dec hl
  38+ 9725 24           	inc h
  39+ 9726 7C               ld a,h
  40+ 9727 E6 07            and 7
  41+ 9729 20 0A            jr nz,2F
  42+ 972B 7D               ld a,l
  43+ 972C C6 20            add a,$20
  44+ 972E 6F               ld l,a
  45+ 972F 38 04            jr c,2F
  46+ 9731 7C               ld a,h
  47+ 9732 D6 08            sub 8
  48+ 9734 67               ld h,a
  49+ 9735 7C           2 ld a,h
  50+ 9736 FE 58            cp $58
  51+ 9738 28 02            jr z,3F
  52+ 973A 10 E0            djnz 1B
  53+ 973C ED 7B 14 89  3 ld sp,(Stack)
  54+ 9740 C9           	ret
  55+ 9741
  56+ 9741 ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9745 FD F9        	ld sp,iy
  58+ 9747 06 08            ld b,8
  59+ 9749 D1           1 pop de
  60+ 974A 7B               ld a,e
  61+ 974B AE               xor (hl)
  62+ 974C 77           	ld (hl),a
  63+ 974D 23           	inc hl
  64+ 974E 7A               ld a,d
  65+ 974F AE               xor (hl)
  66+ 9750 77           	ld (hl),a
  67+ 9751 23           	inc hl
  68+ 9752 D1           	pop de
  69+ 9753 7B               ld a,e
  70+ 9754 AE               xor (hl)
  71+ 9755 77           	ld (hl),a
  72+ 9756 2B           	dec hl
  73+ 9757 2B           	dec hl
  74+ 9758 24           	inc h
  75+ 9759 7C               ld a,h
  76+ 975A E6 07            and 7
  77+ 975C 20 0A            jr nz,2F
  78+ 975E 7D               ld a,l
  79+ 975F C6 20            add a,$20
  80+ 9761 6F               ld l,a
  81+ 9762 38 04            jr c,2F
  82+ 9764 7C               ld a,h
  83+ 9765 D6 08            sub 8
  84+ 9767 67               ld h,a
  85+ 9768 7C           2 ld a,h
  86+ 9769 FE 58            cp $58
  87+ 976B 28 25            jr z,4F
  88+ 976D 7A               ld a,d
  89+ 976E AE               xor (hl)
  90+ 976F 77               ld (hl),a
  91+ 9770 D1           	pop de
  92+ 9771 23           	inc hl
  93+ 9772 7B               ld a,e
  94+ 9773 AE               xor (hl)
  95+ 9774 77           	ld (hl),a
  96+ 9775 23           	inc hl
  97+ 9776 7A               ld a,d
  98+ 9777 AE               xor (hl)
  99+ 9778 77           	ld (hl),a
 100+ 9779 2B           	dec hl
 101+ 977A 2B           	dec hl
 102+ 977B 24           	inc h
 103+ 977C 7C               ld a,h
 104+ 977D E6 07            and 7
 105+ 977F 20 0A            jr nz,3F
 106+ 9781 7D               ld a,l
 107+ 9782 C6 20            add a,$20
 108+ 9784 6F               ld l,a
 109+ 9785 38 04            jr c,3F
 110+ 9787 7C               ld a,h
 111+ 9788 D6 08            sub 8
 112+ 978A 67               ld h,a
 113+ 978B 7C           3 ld a,h
 114+ 978C FE 58            cp $58
 115+ 978E 28 02            jr z,4F
 116+ 9790 10 B7            djnz 1B
 117+ 9792 ED 7B 14 89  4 ld sp,(Stack)
 118+ 9796 C9           	ret
 119+ 9797
 120+ 9797              ; ---------------------------------------------------
 121+ 9797
 122+ 9797 ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 979B FD F9        	ld sp,iy
 124+ 979D
 125+ 979D              ; >>>
 126+ 979D
 127+ 979D 06 10            ld b,16
 128+ 979F D1           1 pop de
 129+ 97A0 7A           	ld a,d
 130+ 97A1 AE           	xor (hl)
 131+ 97A2 77           	ld (hl),a
 132+ 97A3 24           	inc h
 133+ 97A4 7C               ld a,h
 134+ 97A5 E6 07            and 7
 135+ 97A7 20 0C            jr nz,2F
 136+ 97A9 7D               ld a,l
 137+ 97AA C6 20            add a,$20
 138+ 97AC 6F               ld l,a
 139+ 97AD 38 06            jr c,2F
 140+ 97AF 7C               ld a,h
 141+ 97B0 D6 08            sub 8
 142+ 97B2 67               ld h,a
 143+ 97B3 18 00            jr 2F
 144+ 97B5 7C           2 ld a,h
 145+ 97B6 FE 58            cp $58
 146+ 97B8 28 02            jr z,3F
 147+ 97BA 10 E3            djnz 1B
 148+ 97BC ED 7B 14 89  3 ld sp,(Stack)
 149+ 97C0 C9           	ret
 150+ 97C1
 151+ 97C1 ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97C5 FD F9        	ld sp,iy
 153+ 97C7
 154+ 97C7              ; >>>
 155+ 97C7
 156+ 97C7 06 10            ld b,16
 157+ 97C9 D1           1 pop de
 158+ 97CA 7B           	ld a,e
 159+ 97CB AE           	xor (hl)
 160+ 97CC 77           	ld (hl),a
 161+ 97CD 24           	inc h
 162+ 97CE 7C               ld a,h
 163+ 97CF E6 07            and 7
 164+ 97D1 20 0C            jr nz,2F
 165+ 97D3 7D               ld a,l
 166+ 97D4 C6 20            add a,$20
 167+ 97D6 6F               ld l,a
 168+ 97D7 38 06            jr c,2F
 169+ 97D9 7C               ld a,h
 170+ 97DA D6 08            sub 8
 171+ 97DC 67               ld h,a
 172+ 97DD 18 00            jr 2F
 173+ 97DF 7C           2 ld a,h
 174+ 97E0 FE 58            cp $58
 175+ 97E2 28 02            jr z,3F
 176+ 97E4 10 E3            djnz 1B
 177+ 97E6 ED 7B 14 89  3 ld sp,(Stack)
 178+ 97EA C9           	ret
 179+ 97EB
 180+ 97EB              ; ---------------------------------------------------
 181+ 97EB
 182+ 97EB ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97EF FD F9        	ld sp,iy
 184+ 97F1 06 08            ld b,8
 185+ 97F3 D1           1 pop de
 186+ 97F4 7A           	ld a,d
 187+ 97F5 AE           	xor (hl)
 188+ 97F6 77           	ld (hl),a
 189+ 97F7 23           	inc hl
 190+ 97F8 D1           	pop de
 191+ 97F9 7B           	ld a,e
 192+ 97FA AE           	xor (hl)
 193+ 97FB 77           	ld (hl),a
 194+ 97FC 2B           	dec hl
 195+ 97FD 24            	inc h
 196+ 97FE 7C               ld a,h
 197+ 97FF E6 07            and 7
 198+ 9801 20 0A            jr nz,2F
 199+ 9803 7D               ld a,l
 200+ 9804 C6 20            add a,$20
 201+ 9806 6F               ld l,a
 202+ 9807 38 04            jr c,2F
 203+ 9809 7C               ld a,h
 204+ 980A D6 08            sub 8
 205+ 980C 67               ld h,a
 206+ 980D 7C           2 ld a,h
 207+ 980E FE 58            cp $58
 208+ 9810 28 20            jr z,4F
 209+ 9812 D1               pop de
 210+ 9813 7B           	ld a,e
 211+ 9814 AE           	xor (hl)
 212+ 9815 77           	ld (hl),a
 213+ 9816 23           	inc hl
 214+ 9817 7A           	ld a,d
 215+ 9818 AE           	xor (hl)
 216+ 9819 77           	ld (hl),a
 217+ 981A 2B           	dec hl
 218+ 981B 24           	inc h
 219+ 981C 7C               ld a,h
 220+ 981D E6 07            and 7
 221+ 981F 20 0A            jr nz,3F
 222+ 9821 7D               ld a,l
 223+ 9822 C6 20            add a,$20
 224+ 9824 6F               ld l,a
 225+ 9825 38 04            jr c,3F
 226+ 9827 7C               ld a,h
 227+ 9828 D6 08            sub 8
 228+ 982A 67               ld h,a
 229+ 982B 7C           3 ld a,h
 230+ 982C FE 58            cp $58
 231+ 982E 28 02            jr z,4F
 232+ 9830 10 C1            djnz 1B
 233+ 9832 ED 7B 14 89  4 ld sp,(Stack)
 234+ 9836 C9           	ret
 235+ 9837
 236+ 9837 ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 983B FD F9        	ld sp,iy
 238+ 983D 06 08            ld b,8
 239+ 983F D1           1 pop de
 240+ 9840 D1           	pop de
 241+ 9841 7B           	ld a,e
 242+ 9842 AE           	xor (hl)
 243+ 9843 77           	ld (hl),a
 244+ 9844 24            	inc h
 245+ 9845 7C               ld a,h
 246+ 9846 E6 07            and 7
 247+ 9848 20 0A            jr nz,2F
 248+ 984A 7D               ld a,l
 249+ 984B C6 20            add a,$20
 250+ 984D 6F               ld l,a
 251+ 984E 38 04            jr c,2F
 252+ 9850 7C               ld a,h
 253+ 9851 D6 08            sub 8
 254+ 9853 67               ld h,a
 255+ 9854 7C           2 ld a,h
 256+ 9855 FE 58            cp $58
 257+ 9857 28 1B            jr z,4F
 258+ 9859 D1               pop de
 259+ 985A 7A           	ld a,d
 260+ 985B AE           	xor (hl)
 261+ 985C 77           	ld (hl),a
 262+ 985D 24           	inc h
 263+ 985E 7C               ld a,h
 264+ 985F E6 07            and 7
 265+ 9861 20 0A            jr nz,3F
 266+ 9863 7D               ld a,l
 267+ 9864 C6 20            add a,$20
 268+ 9866 6F               ld l,a
 269+ 9867 38 04            jr c,3F
 270+ 9869 7C               ld a,h
 271+ 986A D6 08            sub 8
 272+ 986C 67               ld h,a
 273+ 986D 7C           3 ld a,h
 274+ 986E FE 58            cp $58
 275+ 9870 28 02            jr z,4F
 276+ 9872 10 CB            djnz 1B
 277+ 9874 ED 7B 14 89  4 ld sp,(Stack)
 278+ 9878 C9           	ret
 279+ 9879
 280+ 9879 ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 987D FD F9        	ld sp,iy
 282+ 987F 06 08            ld b,8
 283+ 9881 D1           1 pop de
 284+ 9882 7B           	ld a,e
 285+ 9883 AE           	xor (hl)
 286+ 9884 77           	ld (hl),a
 287+ 9885 23           	inc hl
 288+ 9886 7A           	ld a,d
 289+ 9887 AE           	xor (hl)
 290+ 9888 77           	ld (hl),a
 291+ 9889 2B           	dec hl
 292+ 988A 24             	inc h
 293+ 988B 7C               ld a,h
 294+ 988C E6 07            and 7
 295+ 988E 20 0A            jr nz,2F
 296+ 9890 7D               ld a,l
 297+ 9891 C6 20            add a,$20
 298+ 9893 6F               ld l,a
 299+ 9894 38 04            jr c,2F
 300+ 9896 7C               ld a,h
 301+ 9897 D6 08            sub 8
 302+ 9899 67               ld h,a
 303+ 989A 7C           2 ld a,h
 304+ 989B FE 58            cp $58
 305+ 989D 28 21            jr z,4F
 306+ 989F D1               pop de
 307+ 98A0 7A           	ld a,d
 308+ 98A1 AE           	xor (hl)
 309+ 98A2 77           	ld (hl),a
 310+ 98A3 23           	inc hl
 311+ 98A4 D1               pop de
 312+ 98A5 7B           	ld a,e
 313+ 98A6 AE           	xor (hl)
 314+ 98A7 77           	ld (hl),a
 315+ 98A8 2B           	dec hl
 316+ 98A9 24           	inc h
 317+ 98AA 7C               ld a,h
 318+ 98AB E6 07            and 7
 319+ 98AD 20 0A            jr nz,3F
 320+ 98AF 7D               ld a,l
 321+ 98B0 C6 20            add a,$20
 322+ 98B2 6F               ld l,a
 323+ 98B3 38 04            jr c,3F
 324+ 98B5 7C               ld a,h
 325+ 98B6 D6 08            sub 8
 326+ 98B8 67               ld h,a
 327+ 98B9 7C           3 ld a,h
 328+ 98BA FE 58            cp $58
 329+ 98BC 28 02            jr z,4F
 330+ 98BE 10 C1            djnz 1B
 331+ 98C0 ED 7B 14 89  4 ld sp,(Stack)
 332+ 98C4 C9           	ret
 333+ 98C5
 334+ 98C5 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98C9 FD F9        	ld sp,iy
 336+ 98CB 06 08            ld b,8
 337+ 98CD D1           1 pop de
 338+ 98CE 7B           	ld a,e
 339+ 98CF AE           	xor (hl)
 340+ 98D0 77           	ld (hl),a
 341+ 98D1 24            	inc h
 342+ 98D2 7C               ld a,h
 343+ 98D3 E6 07            and 7
 344+ 98D5 20 0A            jr nz,2F
 345+ 98D7 7D               ld a,l
 346+ 98D8 C6 20            add a,$20
 347+ 98DA 6F               ld l,a
 348+ 98DB 38 04            jr c,2F
 349+ 98DD 7C               ld a,h
 350+ 98DE D6 08            sub 8
 351+ 98E0 67               ld h,a
 352+ 98E1 7C           2 ld a,h
 353+ 98E2 FE 58            cp $58
 354+ 98E4 28 1C            jr z,4F
 355+ 98E6 D1               pop de
 356+ 98E7 7A           	ld a,d
 357+ 98E8 AE           	xor (hl)
 358+ 98E9 77           	ld (hl),a
 359+ 98EA 24           	inc h
 360+ 98EB 7C               ld a,h
 361+ 98EC E6 07            and 7
 362+ 98EE 20 0A            jr nz,3F
 363+ 98F0 7D               ld a,l
 364+ 98F1 C6 20            add a,$20
 365+ 98F3 6F               ld l,a
 366+ 98F4 38 04            jr c,3F
 367+ 98F6 7C               ld a,h
 368+ 98F7 D6 08            sub 8
 369+ 98F9 67               ld h,a
 370+ 98FA 7C           3 ld a,h
 371+ 98FB FE 58            cp $58
 372+ 98FD 28 03            jr z,4F
 373+ 98FF D1               pop de
 374+ 9900 10 CB            djnz 1B
 375+ 9902 ED 7B 14 89  4 ld sp,(Stack)
 376+ 9906 C9           	ret
 377+ 9907
 378+ 9907              ; ---------------------------------------------------
 379+ 9907              ;
 380+ 9907              ;   27/02/23
 381+ 9907              ;
 382+ 9907              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9907              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9907              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9907
 386+ 9907 ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 990B FD F9            ld sp,iy
 388+ 990D 06 03            ld b,3
 389+ 990F D1           1 pop de
 390+ 9910 7B               ld a,e
 391+ 9911 AE               xor (hl)
 392+ 9912 77               ld (hl),a
 393+ 9913 23               inc hl
 394+ 9914 7A               ld a,d
 395+ 9915 AE               xor (hl)
 396+ 9916 77               ld (hl),a
 397+ 9917 2B               dec hl
 398+ 9918
 399+ 9918 24               inc h
 400+ 9919 7C               ld a,h
 401+ 991A E6 07            and 7
 402+ 991C 20 0A            jr nz,2F
 403+ 991E 7D               ld a,l
 404+ 991F C6 20            add a,$20
 405+ 9921 6F               ld l,a
 406+ 9922 38 04            jr c,2F
 407+ 9924 7C               ld a,h
 408+ 9925 D6 08            sub 8
 409+ 9927 67               ld h,a
 410+ 9928 7C           2 ld a,h
 411+ 9929 FE 58            cp $58
 412+ 992B 28 02            jr z,3F
 413+ 992D
 414+ 992D 10 E0            djnz 1B
 415+ 992F ED 7B 14 89  3 ld sp,(Stack)
 416+ 9933 C9               ret
 417+ 9934
# file closed: Rutinas_de_impresion_sprites.asm
1641  9934              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9934              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9934              ;
   3+ 9934              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9934              ;
   5+ 9934              ; *****************************************************************************************************************************************************************************************
   6+ 9934              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9934
   8+ 9934 7C           calcula_tercio ld a,h
   9+ 9935 E6 18        	and $18
  10+ 9937 CB 2F        	sra a
  11+ 9939 CB 2F        	sra a
  12+ 993B CB 2F        	sra a
  13+ 993D C9           	ret
  14+ 993E
# file closed: calcula_tercio.asm
1642  993E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 993E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 993E              ;
   3+ 993E              ;
   4+ 993E              ;	CLS.
   5+ 993E              ;
   6+ 993E              ;	Limpia la pantalla y define sus atributos.
   7+ 993E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 993E              ;
   9+ 993E              ;	COLORES: 0 ..... NEGRO
  10+ 993E              ;    		 1 ..... AZUL
  11+ 993E              ; 			 2 ..... ROJO
  12+ 993E              ;			 3 ..... MAGENTA
  13+ 993E              ; 			 4 ..... VERDE
  14+ 993E              ; 			 5 ..... CIAN
  15+ 993E              ;			 6 ..... AMARILLO
  16+ 993E              ; 			 7 ..... BLANCO
  17+ 993E              ;
  18+ 993E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 993E              ;
  20+ 993E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 993E
  22+ 993E
  23+ 993E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9941 11 01 40     	LD DE,$4001
  25+ 9944 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9947 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9949 ED B0        	LDIR
  28+ 994B 01 FF 02     	LD BC,767
  29+ 994E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 994F ED B0        	LDIR
  31+ 9951 C9           	ret
  32+ 9952
# file closed: Cls.asm
1643  9952              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9952              ; ******************************************************************************************************************************************************************************************
   2+ 9952              ;
   3+ 9952              ;   20/05/23
   4+ 9952              ;
   5+ 9952              ;	Recompone_posicion_inicio
   6+ 9952              ;
   7+ 9952              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9952              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9952              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9952              ;	_ a una u otra rutina.
  11+ 9952
  12+ 9952              Recompone_posicion_inicio
  13+ 9952
  14+ 9952 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 9955 7D           	ld a,l
  16+ 9956 E6 1F        	and $1f
  17+ 9958 28 16        	jr z,1F
  18+ 995A
  19+ 995A FE 1F        	cp $1f
  20+ 995C 28 0D        	jr z,3F
  21+ 995E
  22+ 995E 21 01 89     	ld hl,Ctrl_2
  23+ 9961 CB C6        	set 0,(hl)
  24+ 9963 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 9966 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 9969 18 08        	jr 2F
  27+ 996B
  28+ 996B CD 0C 9B     3 call Mov_left
  29+ 996E 18 03        	jr 2F
  30+ 9970
  31+ 9970 CD EE 99     1 call Mov_right
  32+ 9973 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9976 22 CA 88     	ld (Puntero_objeto),hl
  34+ 9979 C9           	ret
  35+ 997A
  36+ 997A              ; ******************************************************************************************************************************************************************************************
  37+ 997A              ;
  38+ 997A              ;   27/05/23
  39+ 997A              ;
  40+ 997A              ;	Mov_down
  41+ 997A              ;
  42+ 997A              ; 	Mueve el Sprite X px hacia abajo.
  43+ 997A              ;
  44+ 997A              ;
  45+ 997A              Mov_down
  46+ 997A
  47+ 997A CD DC 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 997D              ;																	; _ repone (Puntero_objeto).
  49+ 997D 21 F0 88     	ld hl,Ctrl_0
  50+ 9980 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9982              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9982              ; 																	; _ en el caso de que no lo haya.
  53+ 9982 3A DE 88     	ld a,(Vel_down)
  54+ 9985 47           	ld b,a
  55+ 9986 2A C8 88         ld hl,(Posicion_actual)
  56+ 9989 CD 34 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 998C E6 02        	and 2
  58+ 998E 28 0F        	jr z,1F
  59+ 9990
  60+ 9990              ; Nos encontramos en el último tercio de pantalla.
  61+ 9990              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9990
  63+ 9990 7C           	ld a,h
  64+ 9991 FE 57        	cp $57
  65+ 9993 20 0A        	jr nz,1F
  66+ 9995
  67+ 9995 7D           	ld a,l
  68+ 9996 C6 20        	add $20
  69+ 9998 30 05        	jr nc,1F
  70+ 999A
  71+ 999A              ; ------------------------------
  72+ 999A              ;	call Reaparece_arriba
  73+ 999A CD 99 9C     	call Reinicio
  74+ 999D              ; ------------------------------
  75+ 999D
  76+ 999D 18 08        	jr 3F
  77+ 999F CD 21 96     1 call NextScan
  78+ 99A2 22 C8 88     	ld (Posicion_actual),hl
  79+ 99A5 10 E2            djnz 2B
  80+ 99A7 CD BF 9C     3 call Genera_coordenadas
  81+ 99AA C9           	ret
  82+ 99AB
  83+ 99AB              ; ******************************************************************************************************************************************************************************************
  84+ 99AB              ;
  85+ 99AB              ;   27/05/23
  86+ 99AB              ;
  87+ 99AB              ;	Mov_up
  88+ 99AB              ;
  89+ 99AB              ; 	Mueve el Sprite hacia arriba.
  90+ 99AB              ;
  91+ 99AB              ;
  92+ 99AB              Mov_up
  93+ 99AB
  94+ 99AB CD DC 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99AE              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99AE 21 F0 88     	ld hl,Ctrl_0
  97+ 99B1 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99B3              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99B3              ; 																		; _ en el caso de que no lo haya.
 100+ 99B3 3A DD 88     	ld a,(Vel_up)
 101+ 99B6 47           	ld b,a
 102+ 99B7 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99BA CD 34 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99BD A7           	and a
 105+ 99BE 20 10        	jr nz,1F
 106+ 99C0
 107+ 99C0              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99C0              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99C0
 110+ 99C0 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99C1 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99C3 20 0B            jr nz,1F
 113+ 99C5 7D               ld a,l
 114+ 99C6 D6 20            sub $20
 115+ 99C8 30 06            jr nc,1F
 116+ 99CA 25               dec h
 117+ 99CB
 118+ 99CB              ; -----------------------------
 119+ 99CB CD 7A 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99CE              ;	call Reinicio
 121+ 99CE              ; -----------------------------
 122+ 99CE
 123+ 99CE 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99D0 CD 30 96     1 call PreviousScan
 125+ 99D3 22 C8 88     	ld (Posicion_actual),hl
 126+ 99D6 10 E2            djnz 3B
 127+ 99D8 CD BF 9C     2 call Genera_coordenadas
 128+ 99DB C9           	ret
 129+ 99DC
 130+ 99DC              ; -----------------------------
 131+ 99DC              ;
 132+ 99DC              ;	27/5/23
 133+ 99DC              ;
 134+ 99DC              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99DC              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99DC              ;
 137+ 99DC              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99DC              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99DC              ;
 140+ 99DC              ;	Modifica: A y (Puntero_objeto).
 141+ 99DC
 142+ 99DC 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99DF CB 47        	bit 0,a
 144+ 99E1 C8           	ret z
 145+ 99E2 CB 87        	res 0,a
 146+ 99E4 32 01 89     	ld (Ctrl_2),a
 147+ 99E7 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 99EA 22 CA 88     	ld (Puntero_objeto),hl
 149+ 99ED C9           	ret
 150+ 99EE
 151+ 99EE              ; ******************************************************************************************************************************************************************************************
 152+ 99EE              ;
 153+ 99EE              ;	19/10/22
 154+ 99EE              ;
 155+ 99EE              ;	Mov_right.
 156+ 99EE              ;
 157+ 99EE              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99EE              ;
 159+ 99EE
 160+ 99EE 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 99F1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99F3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99F3              ; 																	; _ en el caso de que no lo haya.
 164+ 99F3 3A F0 88     	ld a,(Ctrl_0)
 165+ 99F6 CB 77        	bit 6,a
 166+ 99F8 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99FA
 168+ 99FA CD 28 9C     	call Stop_Amadeus_right
 169+ 99FD C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99FE 18 4D        	jr 8F
 171+ 9A00
 172+ 9A00 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A03 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A05 20 46        	jr nz,8F
 175+ 9A07
 176+ 9A07 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A0A A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A0B 28 40        	jr z,8F
 179+ 9A0D
 180+ 9A0D              ; ---------- ---------- ----------
 181+ 9A0D              ;
 182+ 9A0D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A0D
 184+ 9A0D 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A10 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A12 28 11        	jr z,1F
 187+ 9A14 38 06        	jr c,6F
 188+ 9A16 FE 04        	cp 4
 189+ 9A18 28 14        	jr z,7F
 190+ 9A1A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A1C
 192+ 9A1C              ; ---------- ---------- ----------
 193+ 9A1C              ;
 194+ 9A1C              ; Perfiles de velocidad
 195+ 9A1C              ;
 196+ 9A1C
 197+ 9A1C 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A1F FE FE        	cp $fe
 199+ 9A21 20 2A        	jr nz,8F
 200+ 9A23 18 10        	jr 3F
 201+ 9A25 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A28 FE FD        	cp $fd
 203+ 9A2A 20 21        	jr nz,8F
 204+ 9A2C 18 07        	jr 3F
 205+ 9A2E 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A31 FE FB        	cp $fb
 207+ 9A33 20 18        	jr nz,8F
 208+ 9A35
 209+ 9A35              ; ---------- ---------- ----------
 210+ 9A35
 211+ 9A35              3
 212+ 9A35 CD 68 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A38              ;	call Reinicio
 214+ 9A38
 215+ 9A38              ; ---------- ---------- ----------
 216+ 9A38              ;
 217+ 9A38              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A38
 219+ 9A38 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A3A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A3B CD 54 9A     	call DESPLZ_DER
 222+ 9A3E C1           	pop bc
 223+ 9A3F 10 F9        	djnz 5B
 224+ 9A41 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A44 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A45 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A48 CD BF 9C     	call Genera_coordenadas
 228+ 9A4B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A4D
 230+ 9A4D              ; ---------- ---------- ----------
 231+ 9A4D
 232+ 9A4D 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A50 CD 54 9A     	call DESPLZ_DER
 234+ 9A53 C9           2 ret
 235+ 9A54
 236+ 9A54              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A54              ;
 238+ 9A54              ;	22/9/22
 239+ 9A54              ;
 240+ 9A54
 241+ 9A54 CD 63 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A57 CD AF 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A5A CD D8 9A         call Ciclo_completo
 244+ 9A5D 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A60 CB FE        	set 7,(hl)
 246+ 9A62 C9           	ret
 247+ 9A63
 248+ 9A63              ; ******************************************************************************************************************************************************************************************
 249+ 9A63              ;	15/02/23
 250+ 9A63              ;
 251+ 9A63
 252+ 9A63 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A66 47           	ld b,a
 254+ 9A67 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A6A 23           1 inc hl
 256+ 9A6B 23           	inc hl
 257+ 9A6C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A6E 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A71 CD 80 8C     	call Extrae_address
 260+ 9A74 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9A77
 262+ 9A77              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A77
 264+ 9A77              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A77              ; Cuántos movimientos hemos hecho ??
 266+ 9A77              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A77
 268+ 9A77 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A7A EB           	ex de,hl
 270+ 9A7B A7           	and a
 271+ 9A7C ED 52        	sbc hl,de
 272+ 9A7E CB 3D        	srl l
 273+ 9A80 3E 08        6 ld a,8
 274+ 9A82 95           	sub l
 275+ 9A83 30 1E        	jr nc,3F
 276+ 9A85
 277+ 9A85              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A85              ; B="0".
 279+ 9A85
 280+ 9A85 04           4 inc b
 281+ 9A86 3C           	inc a
 282+ 9A87 20 FC        	jr nz,4B
 283+ 9A89 78           	ld a,b
 284+ 9A8A 08           	ex af,af
 285+ 9A8B 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9A8E 23           5 inc hl
 287+ 9A8F 23           	inc hl
 288+ 9A90 10 FC        	djnz 5B
 289+ 9A92 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A95 CD 80 8C     	call Extrae_address
 291+ 9A98 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9A9B
 293+ 9A9B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A9B              ; _(Posicion_actual).
 295+ 9A9B
 296+ 9A9B 21 C8 88     	ld hl,Posicion_actual
 297+ 9A9E 34           	inc (hl)
 298+ 9A9F 08               ex af,af
 299+ 9AA0 6F           	ld l,a
 300+ 9AA1 18 DD        	jr 6B
 301+ 9AA3
 302+ 9AA3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AA3
 304+ 9AA3 47           3 ld b,a
 305+ 9AA4 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AA7 23           2 inc hl
 307+ 9AA8 23           	inc hl
 308+ 9AA9 10 FC        	djnz 2B
 309+ 9AAB 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AAE C9           8 ret
 311+ 9AAF
 312+ 9AAF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AAF              ;
 314+ 9AAF              ;	24/7/22
 315+ 9AAF              ;
 316+ 9AAF              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AAF              ;
 318+ 9AAF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AAF              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AAF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AAF
 322+ 9AAF 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AB2 A7           	and a
 324+ 9AB3 20 1F        	jr nz,1F
 325+ 9AB5 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AB7 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9ABA
 328+ 9ABA 21 C7 88     	ld hl,Columns
 329+ 9ABD 34           	inc (hl)
 330+ 9ABE 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9AC1 E6 01        	and 1
 332+ 9AC3 28 0F        	jr z,1F
 333+ 9AC5 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AC8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AC9 22 C8 88     	ld (Posicion_actual),hl
 336+ 9ACC CD BF 9C     	call Genera_coordenadas
 337+ 9ACF CD 34 9C     	call Inc_CTRL_DESPLZ
 338+ 9AD2 18 03        	jr 2F
 339+ 9AD4 CD 34 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AD7 C9           2 ret
 341+ 9AD8
 342+ 9AD8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AD8              ;
 344+ 9AD8              ;	24/7/22
 345+ 9AD8              ;
 346+ 9AD8              ;	Ciclo_completo.
 347+ 9AD8              ;
 348+ 9AD8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AD8              ;
 350+ 9AD8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AD8              ; 	Decrementamos (Columns).
 352+ 9AD8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AD8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AD8
 355+ 9AD8
 356+ 9AD8 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9ADB FE FF        	cp $ff
 358+ 9ADD 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9ADF E6 F0        	and $f0
 360+ 9AE1 20 28        	jr nz,3F
 361+ 9AE3
 362+ 9AE3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AE3
 364+ 9AE3 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9AE6 47           	ld b,a
 366+ 9AE7 3E F8        	ld a,$f8
 367+ 9AE9 80           	add b
 368+ 9AEA 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9AED 18 1C        	jr 3F
 370+ 9AEF 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AF2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AF3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AF4 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9AF7 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AFA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AFC 20 0A        	jr nz,2F
 377+ 9AFE 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B01 23           	inc hl
 379+ 9B02 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B05 CD BF 9C     	call Genera_coordenadas
 381+ 9B08
 382+ 9B08              ; Inicia el puntero de Sprite.
 383+ 9B08
 384+ 9B08 CD 97 8C     2 call Inicia_puntero_objeto_der
 385+ 9B0B C9           3 ret
 386+ 9B0C
 387+ 9B0C              ; ******************************************************************************************************************************************************************************************
 388+ 9B0C              ;
 389+ 9B0C              ;	15/02/23
 390+ 9B0C              ;
 391+ 9B0C              ;	Mov_left.
 392+ 9B0C              ;
 393+ 9B0C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B0C              ;
 395+ 9B0C              Mov_left
 396+ 9B0C
 397+ 9B0C 21 F0 88     	ld hl,Ctrl_0
 398+ 9B0F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B11              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B11              ; 																	; _ en el caso de que no lo haya.
 401+ 9B11 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B14 CB 77        	bit 6,a
 403+ 9B16 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B18
 405+ 9B18 CD 2E 9C     	call Stop_Amadeus_left
 406+ 9B1B C8           	ret z
 407+ 9B1C 20 4A        	jr nz,8F
 408+ 9B1E
 409+ 9B1E 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B21 A7           	and a
 411+ 9B22 20 44        	jr nz,8F
 412+ 9B24
 413+ 9B24 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B27 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B28 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B2A
 417+ 9B2A              ; ---------- ---------- ----------
 418+ 9B2A
 419+ 9B2A 3A DB 88     	ld a,(Vel_left)
 420+ 9B2D FE 02        	cp 2
 421+ 9B2F 28 0F        	jr z,1F
 422+ 9B31 38 04        	jr c,6F
 423+ 9B33 FE 04        	cp 4
 424+ 9B35 28 12        	jr z,7F
 425+ 9B37
 426+ 9B37              ; ---------- ---------- ----------
 427+ 9B37
 428+ 9B37 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B3A FE F8        	cp $f8
 430+ 9B3C 20 2A        	jr nz,8F
 431+ 9B3E 18 10        	jr 4F
 432+ 9B40 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B43 FE F9        	cp $f9
 434+ 9B45 20 21        	jr nz,8F
 435+ 9B47 18 07        	jr 4F
 436+ 9B49 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B4C FE FB        	cp $fb
 438+ 9B4E 20 18        	jr nz,8F
 439+ 9B50
 440+ 9B50              ; ---------- ---------- ----------
 441+ 9B50
 442+ 9B50              4
 443+ 9B50 CD 56 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B53              ;	call Reinicio
 445+ 9B53
 446+ 9B53              ; ---------- ---------- ----------
 447+ 9B53
 448+ 9B53 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B55 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B56
 451+ 9B56              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B56              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B56
 454+ 9B56 CD 6F 9B     	call DESPLZ_IZQ
 455+ 9B59 C1           	pop bc
 456+ 9B5A 10 F9        	djnz 5B
 457+ 9B5C 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B5F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B60 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B63 CD BF 9C     	call Genera_coordenadas
 461+ 9B66 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B68
 463+ 9B68              ; ---------- ---------- ----------
 464+ 9B68
 465+ 9B68              ; Movemos, no hay recolocación.
 466+ 9B68
 467+ 9B68 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9B6B CD 6F 9B     	call DESPLZ_IZQ
 469+ 9B6E C9           2 ret
 470+ 9B6F
 471+ 9B6F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B6F              ;
 473+ 9B6F              ;	22/9/22
 474+ 9B6F
 475+ 9B6F              DESPLZ_IZQ
 476+ 9B6F
 477+ 9B6F CD 7E 9B     	call Desplaza_izquierda
 478+ 9B72 CD CA 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B75 CD F2 9B     	call Ciclo_completo_2
 480+ 9B78 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B7B CB BE        	res 7,(hl)
 482+ 9B7D C9           	ret
 483+ 9B7E
 484+ 9B7E              Desplaza_izquierda
 485+ 9B7E
 486+ 9B7E 3A DB 88     	ld a,(Vel_left)
 487+ 9B81 47           	ld b,a
 488+ 9B82 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B85 23           1 inc hl
 490+ 9B86 23           	inc hl
 491+ 9B87 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B89 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B8C CD 80 8C     	call Extrae_address
 494+ 9B8F 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9B92
 496+ 9B92              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B92
 498+ 9B92              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B92              ; Cuántos movimientos hemos hecho ??
 500+ 9B92              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B92
 502+ 9B92 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B95 EB           	ex de,hl
 504+ 9B96 A7           	and a
 505+ 9B97 ED 52        	sbc hl,de
 506+ 9B99 CB 3D        	srl l
 507+ 9B9B 3E 08        6 ld a,8
 508+ 9B9D 95           	sub l
 509+ 9B9E 30 1E        	jr nc,3F
 510+ 9BA0
 511+ 9BA0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BA0              ; B="0".
 513+ 9BA0
 514+ 9BA0 04           4 inc b
 515+ 9BA1 3C           	inc a
 516+ 9BA2 20 FC        	jr nz,4B
 517+ 9BA4 78           	ld a,b
 518+ 9BA5 08           	ex af,af
 519+ 9BA6 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BA9 23           5 inc hl
 521+ 9BAA 23           	inc hl
 522+ 9BAB 10 FC        	djnz 5B
 523+ 9BAD 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BB0 CD 80 8C     	call Extrae_address
 525+ 9BB3 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BB6
 527+ 9BB6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BB6              ; _(Posicion_actual).
 529+ 9BB6
 530+ 9BB6 21 C8 88     	ld hl,Posicion_actual
 531+ 9BB9 35           	dec (hl)
 532+ 9BBA 08           	ex af,af
 533+ 9BBB 6F           	ld l,a
 534+ 9BBC 18 DD        	jr 6B
 535+ 9BBE
 536+ 9BBE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BBE
 538+ 9BBE 47           3 ld b,a
 539+ 9BBF 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BC2 23           2 inc hl
 541+ 9BC3 23           	inc hl
 542+ 9BC4 10 FC        	djnz 2B
 543+ 9BC6 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BC9 C9           8 ret
 545+ 9BCA
 546+ 9BCA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BCA              ;
 548+ 9BCA              ;	modifica_parametros_1er_DESPLZ
 549+ 9BCA              ;
 550+ 9BCA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BCA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BCA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BCA
 554+ 9BCA 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BCD A7           	and a
 556+ 9BCE 20 1E        	jr nz,1F
 557+ 9BD0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BD1 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9BD4 21 C7 88     	ld hl,Columns
 560+ 9BD7 34           	inc (hl)
 561+ 9BD8 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9BDB E6 01        	and 1
 563+ 9BDD 20 0F        	jr nz,1F
 564+ 9BDF 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BE2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BE3 22 C8 88     	ld (Posicion_actual),hl
 567+ 9BE6 CD BF 9C     	call Genera_coordenadas
 568+ 9BE9 CD 45 9C     	call Dec_CTRL_DESPLZ
 569+ 9BEC 18 03        	jr 2F
 570+ 9BEE CD 45 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BF1 C9           2 ret
 572+ 9BF2
 573+ 9BF2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BF2
 575+ 9BF2 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BF5 FE F7        	cp $f7
 577+ 9BF7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BF9 30 2C        	jr nc,3F
 579+ 9BFB
 580+ 9BFB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BFB
 582+ 9BFB 06 00        	ld b,0
 583+ 9BFD 04           4 inc b
 584+ 9BFE 3C           	inc a
 585+ 9BFF FE F7        	cp $f7
 586+ 9C01 20 FA        	jr nz,4B
 587+ 9C03 3E FF        	ld a,$ff
 588+ 9C05 90           	sub b
 589+ 9C06 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C09 18 1C        	jr 3F
 591+ 9C0B
 592+ 9C0B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C0B
 594+ 9C0B 21 C7 88     1 ld hl,Columns
 595+ 9C0E 35           	dec (hl)
 596+ 9C0F AF           	xor a
 597+ 9C10 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C13 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C16 E6 01        	and 1
 600+ 9C18 28 0A        	jr z,2F
 601+ 9C1A 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C1D 2B           	dec hl
 603+ 9C1E 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C21 CD BF 9C     	call Genera_coordenadas
 605+ 9C24
 606+ 9C24              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C24
 608+ 9C24 CD AA 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C27 C9           3 ret
 610+ 9C28
 611+ 9C28              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C28              ;
 613+ 9C28              ;	19/10/22
 614+ 9C28              ;
 615+ 9C28              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C28              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C28
 618+ 9C28 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C2B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C2D C9           	ret
 621+ 9C2E
 622+ 9C2E              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C2E              ;
 624+ 9C2E              ;	19/10/22
 625+ 9C2E              ;
 626+ 9C2E              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C2E              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C2E
 629+ 9C2E 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C31 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C33 C9           	ret
 632+ 9C34
 633+ 9C34              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C34              ;
 635+ 9C34              ;	24/7/22
 636+ 9C34              ;
 637+ 9C34              ;	Inc_CTRL_DESPLZ
 638+ 9C34              ;
 639+ 9C34              ;
 640+ 9C34              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C34
 642+ 9C34 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C37 3A DC 88     	ld a,(Vel_right)
 644+ 9C3A A7           	and a
 645+ 9C3B 28 06        	jr z,1F
 646+ 9C3D 47           	ld b,a
 647+ 9C3E 34           3 inc (hl)
 648+ 9C3F 10 FD        	djnz 3B
 649+ 9C41 18 01        	jr 2F
 650+ 9C43 34           1 inc (hl)
 651+ 9C44 C9           2 ret
 652+ 9C45
 653+ 9C45              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C45              ;
 655+ 9C45              ;	5/2/23
 656+ 9C45              ;
 657+ 9C45              ;	Dec_CTRL_DESPLZ
 658+ 9C45              ;
 659+ 9C45              ;
 660+ 9C45              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C45
 662+ 9C45 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C48 3A DB 88     	ld a,(Vel_left)
 664+ 9C4B A7           	and a
 665+ 9C4C 28 06        	jr z,1F
 666+ 9C4E 47           	ld b,a
 667+ 9C4F 35           3 dec (hl)
 668+ 9C50 10 FD        	djnz 3B
 669+ 9C52 18 01        	jr 2F
 670+ 9C54 35           1 dec (hl)
 671+ 9C55 C9           2 ret
 672+ 9C56
 673+ 9C56              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C56
 675+ 9C56 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C59 01 1F 00     	ld bc,31
 677+ 9C5C A7           	and a
 678+ 9C5D ED 4A        	adc hl,bc
 679+ 9C5F 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C62 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C65 CB C6        	set 0,(hl)
 682+ 9C67 C9           	ret
 683+ 9C68
 684+ 9C68              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C68
 686+ 9C68 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C6B 01 1F 00     	ld bc,31
 688+ 9C6E A7           	and a
 689+ 9C6F ED 42        	sbc hl,bc
 690+ 9C71 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C74 21 F0 88     	ld hl,Ctrl_0
 692+ 9C77 CB CE        	set 1,(hl)
 693+ 9C79 C9           	ret
 694+ 9C7A
 695+ 9C7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C7A
 697+ 9C7A 24           Reaparece_abajo inc h
 698+ 9C7B 01 E0 17     	ld bc,$17e0
 699+ 9C7E A7           	and a
 700+ 9C7F ED 4A        	adc hl,bc
 701+ 9C81 22 C8 88     	ld (Posicion_actual),hl
 702+ 9C84 21 F0 88     	ld hl,Ctrl_0
 703+ 9C87 CB D6        	set 2,(hl)
 704+ 9C89 C9           	ret
 705+ 9C8A
 706+ 9C8A              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C8A
 708+ 9C8A 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C8D A7           	and a
 710+ 9C8E ED 42        	sbc hl,bc
 711+ 9C90 22 C8 88     	ld (Posicion_actual),hl
 712+ 9C93 21 F0 88     	ld hl,Ctrl_0
 713+ 9C96 CB DE        	set 3,(hl)
 714+ 9C98 C9           	ret
 715+ 9C99
 716+ 9C99              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C99              ;
 718+ 9C99              ;	15/07/23
 719+ 9C99
 720+ 9C99              Reinicio
 721+ 9C99
 722+ 9C99              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C99
 724+ 9C99 AF           	xor a
 725+ 9C9A 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C9D CD BB 9C     	call Limpia_contenido_hl
 727+ 9CA0
 728+ 9CA0 21 C8 88     	ld hl,Posicion_actual
 729+ 9CA3 CD BB 9C     	call Limpia_contenido_hl
 730+ 9CA6
 731+ 9CA6 CD EB 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CA9 CD 75 9F     	call Inicia_Puntero_mov
 733+ 9CAC
 734+ 9CAC 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CAF 06 05        	ld b,5
 736+ 9CB1 77           1 ld (hl),a
 737+ 9CB2 23           	inc hl
 738+ 9CB3 10 FC        	djnz 1B
 739+ 9CB5
 740+ 9CB5 21 01 89     	ld hl,Ctrl_2
 741+ 9CB8 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CBA
 743+ 9CBA C9           	ret
 744+ 9CBB
 745+ 9CBB 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CBC 23           	inc hl
 747+ 9CBD 77           	ld (hl),a
 748+ 9CBE C9           	ret
 749+ 9CBF
 750+ 9CBF
# file closed: Direcciones.asm
1644  9CBF              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CBF              ; ------------------------------------------------------------------------
   2+ 9CBF              ;
   3+ 9CBF              ;	02/04/23
   4+ 9CBF              ;
   5+ 9CBF              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CBF              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CBF              ;
   8+ 9CBF              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CBF              ;
  10+ 9CBF              ;	Modifica: A,BC y DE.
  11+ 9CBF
  12+ 9CBF C5           Genera_coordenadas push bc
  13+ 9CC0 E5           	push hl
  14+ 9CC1 D5           	push de
  15+ 9CC2
  16+ 9CC2 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CC5
  18+ 9CC5 7D           	ld a,l
  19+ 9CC6 E6 1F        	and $1f
  20+ 9CC8 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CCB
  22+ 9CCB CD 34 99     	call calcula_tercio
  23+ 9CCE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CCF
  25+ 9CCF 1E 00        	ld e,0
  26+ 9CD1 7D           	ld a,l
  27+ 9CD2 E6 E0        	and $e0
  28+ 9CD4 28 01        	jr z,1F
  29+ 9CD6 04           	inc b
  30+ 9CD7
  31+ 9CD7 04           1 inc b
  32+ 9CD8 05           	dec b
  33+ 9CD9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CDB              ;														; _ , salimos.
  35+ 9CDB 1C           3 inc e
  36+ 9CDC D6 20        	sub 32
  37+ 9CDE 20 FB        	jr nz,3B
  38+ 9CE0 10 F5        	djnz 1B
  39+ 9CE2
  40+ 9CE2 7B           2 ld a,e
  41+ 9CE3 32 CD 88     	ld (Coordenada_y),a
  42+ 9CE6
  43+ 9CE6 D1           	pop de
  44+ 9CE7 E1           	pop hl
  45+ 9CE8 C1           	pop bc
  46+ 9CE9
  47+ 9CE9 C9           	ret
  48+ 9CEA
  49+ 9CEA              ; ------------------------------------------------------------------------
  50+ 9CEA              ;	28/05/23
  51+ 9CEA              ;
  52+ 9CEA              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CEA              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CEA              ;
  55+ 9CEA              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CEA              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CEA              ;
  58+ 9CEA              ;		DE="$120d"
  59+ 9CEA              ;
  60+ 9CEA              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CEA              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CEA              ;
  63+ 9CEA              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CEA
  65+ 9CEA              ;	Modifica: A,BC y DE.
  66+ 9CEA
  67+ 9CEA
  68+ 9CEA              Genera_coordenadas_disparo
  69+ 9CEA
  70+ 9CEA              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CEA
  72+ 9CEA 7D           	ld a,l
  73+ 9CEB E6 1F        	and $1f
  74+ 9CED 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CEE CD 34 99     	call calcula_tercio
  76+ 9CF1 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CF2 1E 00        	ld e,0
  78+ 9CF4 7D           	ld a,l
  79+ 9CF5 E6 E0        	and $e0
  80+ 9CF7 28 01        	jr z,1F
  81+ 9CF9 04           	inc b
  82+ 9CFA 1C           1 inc e
  83+ 9CFB D6 20        	sub 32
  84+ 9CFD 20 FB        	jr nz,1B
  85+ 9CFF 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D01 C9           	ret
  87+ 9D02
# file closed: Genera_coordenadas.asm
1645  9D02              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D02              ; Relojes y temporizaciones.
   2+ 9D02
   3+ 9D02              ; ------------------------------------------------------
   4+ 9D02              ;
   5+ 9D02              ;	16/7/23
   6+ 9D02              ;
   7+ 9D02              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D02              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D02              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D02              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D02              ;
  12+ 9D02              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D02              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D02
  15+ 9D02              ; Disparo_entidad db 1
  16+ 9D02              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D02              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D02
  19+ 9D02              Habilita_disparos
  20+ 9D02
  21+ 9D02 7E           	ld a,(hl)
  22+ 9D03 A7           	and a
  23+ 9D04 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D05
  25+ 9D05 EB           	ex de,hl
  26+ 9D06
  27+ 9D06 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D07 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D08
  30+ 9D08              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D08
  32+ 9D08 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D09 7E           	ld a,(hl)
  34+ 9D0A 23           	inc hl
  35+ 9D0B 77           	ld (hl),a
  36+ 9D0C
  37+ 9D0C EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D0D 3E 01        	ld a,1
  39+ 9D0F 77           	ld (hl),a
  40+ 9D10 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1646  9D11              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D11
   2+ 9D11
   3+ 9D11              ;   07/07/23
   4+ 9D11              ;
   5+ 9D11              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D11              ;
   7+ 9D11              ;   Codificación:
   8+ 9D11              ;
   9+ 9D11              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D11              ;
  11+ 9D11              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D11              ;
  13+ 9D11              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D11              ;
  15+ 9D11              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D11              ;
  17+ 9D11              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D11              ;                               ..... %01000010 Vel_up 4
  19+ 9D11              ;                                               Vel_down 2
  20+ 9D11              ;                               ..... $42
  21+ 9D11              ;
  22+ 9D11              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D11              ;
  24+ 9D11              ;                               ..... %01000010 Vel_left 4
  25+ 9D11              ;                                               Vel_right 2
  26+ 9D11              ;                               ..... $42
  27+ 9D11              ;
  28+ 9D11              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D11              ;
  30+ 9D11              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D11              ;
  32+ 9D11              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D11              ;
  34+ 9D11              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D11              ;                                     $53
  36+ 9D11              ;
  37+ 9D11              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D11              ;
  39+ 9D11              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D11              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D11              ;
  42+ 9D11              ;                       Arriba ..... $81
  43+ 9D11              ;                       Arriba - izquierda ..... $a1
  44+ 9D11              ;                       Arriba - derecha ..... $91
  45+ 9D11              ;
  46+ 9D11              ;                       Abajo ..... $41
  47+ 9D11              ;                       Abajo - izquierda ..... $61
  48+ 9D11              ;                       Abajo - derecha ..... $51
  49+ 9D11              ;
  50+ 9D11              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D11              ;
  52+ 9D11              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D11              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D11              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D11              ;
  56+ 9D11              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D11              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D11              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D11              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D11              ;
  61+ 9D11              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D11              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D11              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D11              ;
  65+ 9D11              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D11              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D11              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D11              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D11
  70+ 9D11              ; ----- ----- ----- ----- -----
  71+ 9D11
  72+ 9D11 3D 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D13 45 9D            defw F_1
  74+ 9D15 4F 9D            defw F_2
  75+ 9D17 59 9D            defw Codo_abajo_derecha
  76+ 9D19 8D 9D            defw Derecha_y_subiendo
  77+ 9D1B 97 9D            defw Derecha_y_subiendo_1
  78+ 9D1D A1 9D            defw F_3
  79+ 9D1F AB 9D            defw F_4
  80+ 9D21 B5 9D            defw Derecha_y_bajando
  81+ 9D23 BF 9D            defw Derecha_y_bajando_1
  82+ 9D25 C9 9D            defw Derecha_y_bajando_2
  83+ 9D27 D3 9D            defw Codo_derecha_abajo
  84+ 9D29 03 9E            defw Codo_abajo_izq.
  85+ 9D2B 37 9E            defw Izquierda_y_subiendo
  86+ 9D2D 41 9E            defw Izquierda_y_subiendo_1
  87+ 9D2F 4B 9E            defw F_5
  88+ 9D31 55 9E            defw F_6
  89+ 9D33 5F 9E            defw Izquierda_y_bajando
  90+ 9D35 69 9E            defw Izquierda_y_bajando_1
  91+ 9D37 73 9E            defw Izquierda_y_bajando_2
  92+ 9D39 7D 9E            defw Codo_izquierda_abajo
  93+ 9D3B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D3D
  95+ 9D3D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D41 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D45
  98+ 9D45 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D49 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D4D 08 00
 100+ 9D4F 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D53 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D57 0F FE
 102+ 9D59
 103+ 9D59 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D5D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D61 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D65 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D6D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D71 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D75 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D79 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D7D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D81 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D85 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D89 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D8D
 117+ 9D8D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D91 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D95 06 00
 119+ 9D97
 120+ 9D97 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D9B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D9F 02 00
 122+ 9DA1
 123+ 9DA1 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DA5 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA9 04 00
 125+ 9DAB 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DAF 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DB3 08 00
 127+ 9DB5
 128+ 9DB5 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB9 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DBD 02 00
 130+ 9DBF
 131+ 9DBF 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DC3 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DC7 06 00
 133+ 9DC9
 134+ 9DC9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DCD 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DD1 06 00
 136+ 9DD3
 137+ 9DD3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DD3
 139+ 9DD3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DD7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DDB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DDF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DE3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DE7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DEB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DEF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DF3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DF7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DFB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DFF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E03
 152+ 9E03 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E07 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E0B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E0F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E13 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E17 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E1B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E1F 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E23 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E27 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E2B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E2F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E33 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E37
 166+ 9E37 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E3B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E3F 06 00
 168+ 9E41
 169+ 9E41 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E45 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E49 02 00
 171+ 9E4B
 172+ 9E4B 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E4F 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E53 04 00
 174+ 9E55 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E59 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E5D 08 00
 176+ 9E5F
 177+ 9E5F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E63 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E67 02 00
 179+ 9E69
 180+ 9E69 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E6D 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E71 06 00
 182+ 9E73
 183+ 9E73 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E77 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E7B 06 00
 185+ 9E7D
 186+ 9E7D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E81 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E85 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E89 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E8D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E91 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E95 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E99 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E9D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EA1 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EA5 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA9 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EAD
 199+ 9EAD              ; ----- ----- ----- ----- -----
 200+ 9EAD              ;
 201+ 9EAD              ;   27/06/23
 202+ 9EAD
 203+ 9EAD              Movimiento
 204+ 9EAD
 205+ 9EAD              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EAD
 207+ 9EAD              ;    ld hl,(Posicion_actual)
 208+ 9EAD
 209+ 9EAD 3A 01 89         ld a,(Ctrl_2)
 210+ 9EB0 CB 57            bit 2,a
 211+ 9EB2 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EB4
 213+ 9EB4 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EB7 7E               ld a,(hl)
 215+ 9EB8
 216+ 9EB8              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EB8
 218+ 9EB8              Inicia_desplazamiento.
 219+ 9EB8
 220+ 9EB8              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EB8
 222+ 9EB8 CD AC 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EBB
 224+ 9EBB              ; Iniciamos (Repetimos_mov).
 225+ 9EBB
 226+ 9EBB 7E               ld a,(hl)
 227+ 9EBC E6 0F            and $0f
 228+ 9EBE 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9EC1 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EC4
 231+ 9EC4              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EC4
 233+ 9EC4 23               inc hl
 234+ 9EC5 7E               ld a,(hl)
 235+ 9EC6 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9EC9 2B               dec hl
 237+ 9ECA
 238+ 9ECA 21 01 89         ld hl,Ctrl_2
 239+ 9ECD CB D6            set 2,(hl)
 240+ 9ECF
 241+ 9ECF              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9ECF              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9ECF
 244+ 9ECF              Desplazamiento_iniciado
 245+ 9ECF
 246+ 9ECF CD 80 9F         call Aplica_desplazamiento
 247+ 9ED2
 248+ 9ED2 3A 01 89         ld a,(Ctrl_2)
 249+ 9ED5 CB 67            bit 4,a
 250+ 9ED7 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ED8
 252+ 9ED8 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EDB 35               dec (hl)
 254+ 9EDC C0               ret nz
 255+ 9EDD
 256+ 9EDD              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EDD              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EDD              ; Analiza (Cola_de_desplazamiento).
 259+ 9EDD
 260+ 9EDD 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EE0 A7               and a
 262+ 9EE1 CC D5 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EE4 28 30            jr z,Reinicia_el_movimiento
 264+ 9EE6
 265+ 9EE6 FE FF            cp $ff
 266+ 9EE8 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EEA
 268+ 9EEA FE FE            cp $fe
 269+ 9EEC CC 59 9F         call z,Fijamos_bucle
 270+ 9EEF 28 25            jr z,Reinicia_el_movimiento
 271+ 9EF1
 272+ 9EF1 FE FD            cp $fd
 273+ 9EF3 20 11            jr nz,1F
 274+ 9EF5
 275+ 9EF5              ; ---
 276+ 9EF5              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EF5
 278+ 9EF5 3A 01 89         ld a,(Ctrl_2)
 279+ 9EF8 CB 5F            bit 3,a
 280+ 9EFA 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EFC
 282+ 9EFC              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EFC
 284+ 9EFC 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EFF CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F01
 287+ 9F01 CD 6A 9F         call Inicia_Repetimos_movimiento
 288+ 9F04 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F06              ; ---
 290+ 9F06
 291+ 9F06 FE 01        1 cp 1
 292+ 9F08 CA 43 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F0B
 294+ 9F0B 3D               dec a
 295+ 9F0C 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F0F
 297+ 9F0F 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F12 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F15              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F15 C9               ret
 301+ 9F16
 302+ 9F16              Reinicia_el_movimiento
 303+ 9F16
 304+ 9F16 3A 01 89         ld a,(Ctrl_2)
 305+ 9F19 CB 5F            bit 3,a
 306+ 9F1B 28 1B            jr z,2F
 307+ 9F1D
 308+ 9F1D              ; (Cola_de_desplazamiento)="254".
 309+ 9F1D
 310+ 9F1D 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F20 35               dec (hl)
 312+ 9F21 20 15            jr nz,2F
 313+ 9F23
 314+ 9F23              ; Fin de las repeticiones del último movimiento.
 315+ 9F23
 316+ 9F23 21 01 89         ld hl,Ctrl_2
 317+ 9F26 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F28
 319+ 9F28 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F2B 23               inc hl
 321+ 9F2C 23               inc hl
 322+ 9F2D 23               inc hl
 323+ 9F2E 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F31              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F31 7E               ld a,(hl)
 326+ 9F32 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F35
 328+ 9F35 C3 DD 9E         jp Cola
 329+ 9F38
 330+ 9F38 CD 75 9F     2 call Inicia_Puntero_mov
 331+ 9F3B
 332+ 9F3B 21 01 89         ld hl,Ctrl_2
 333+ 9F3E CB 96            res 2,(hl)
 334+ 9F40
 335+ 9F40 C3 AD 9E         jp Movimiento
 336+ 9F43
 337+ 9F43              Siguiente_desplazamiento
 338+ 9F43
 339+ 9F43              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F43              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F43
 342+ 9F43 21 01 89         ld hl,Ctrl_2
 343+ 9F46 CB 96            res 2,(hl)
 344+ 9F48
 345+ 9F48 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F4B 23               inc hl
 347+ 9F4C 23               inc hl
 348+ 9F4D 22 F3 88         ld (Puntero_mov),hl
 349+ 9F50
 350+ 9F50 7E               ld a,(hl)
 351+ 9F51 A7               and a
 352+ 9F52 CC D5 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F55 CA 16 9F         jp z,Reinicia_el_movimiento
 354+ 9F58
 355+ 9F58 C9               ret
 356+ 9F59              ; Subrutinas -----------------------------------------
 357+ 9F59              ; ---------- --------- --------- ---------- ----------
 358+ 9F59              ;
 359+ 9F59              ;   24/07/23
 360+ 9F59              ;
 361+ 9F59              ;   Fijamos_bucle
 362+ 9F59              ;
 363+ 9F59              ;
 364+ 9F59
 365+ 9F59              Fijamos_bucle
 366+ 9F59
 367+ 9F59 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F5C 3C               inc a
 369+ 9F5D 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F60
 371+ 9F60 CD D5 9F         call Incrementa_Puntero_indice_mov
 372+ 9F63 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9F66 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F69 C9               ret
 375+ 9F6A
 376+ 9F6A              ; ---------- --------- --------- ---------- ----------
 377+ 9F6A              ;
 378+ 9F6A              ;   07/7/23
 379+ 9F6A              ;
 380+ 9F6A              ;   Inicia_Repetimos_movimiento
 381+ 9F6A              ;
 382+ 9F6A              ;
 383+ 9F6A
 384+ 9F6A              Inicia_Repetimos_movimiento
 385+ 9F6A
 386+ 9F6A              ; Iniciamos (Repetimos_movimiento).
 387+ 9F6A
 388+ 9F6A DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9F6E DD 7E 02         ld a,(ix+2)
 390+ 9F71 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9F74
 392+ 9F74 C9               ret
 393+ 9F75
 394+ 9F75              ; ---------- --------- --------- ---------- ----------
 395+ 9F75              ;
 396+ 9F75              ;   26/6/23
 397+ 9F75              ;
 398+ 9F75              ;   Inicia_Puntero_mov
 399+ 9F75              ;
 400+ 9F75              ;
 401+ 9F75
 402+ 9F75 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F78 5E               ld e,(hl)
 404+ 9F79 23               inc hl
 405+ 9F7A 56               ld d,(hl)
 406+ 9F7B EB               ex de,hl
 407+ 9F7C 22 F3 88         ld (Puntero_mov),hl
 408+ 9F7F C9               ret
 409+ 9F80
 410+ 9F80              ; ---------- --------- --------- ---------- ----------
 411+ 9F80              ;
 412+ 9F80              ;   27/06/23
 413+ 9F80              ;
 414+ 9F80              ;   Aplica_movimiento.
 415+ 9F80
 416+ 9F80              Aplica_desplazamiento
 417+ 9F80
 418+ 9F80              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F80
 420+ 9F80 2A F3 88         ld hl, (Puntero_mov)
 421+ 9F83
 422+ 9F83 7E               ld a,(hl)
 423+ 9F84 E6 F0            and $f0
 424+ 9F86 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F87
 426+ 9F87 CB 7E            bit 7,(hl)
 427+ 9F89 28 03            jr z,1F
 428+ 9F8B CD AB 99         call Mov_up
 429+ 9F8E 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9F91 CB 76            bit 6,(hl)
 431+ 9F93 28 03            jr z,2F
 432+ 9F95 CD 7A 99         call Mov_down
 433+ 9F98 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9F9B CB 6E            bit 5,(hl)
 435+ 9F9D 28 03            jr z,3F
 436+ 9F9F CD 0C 9B         call Mov_left
 437+ 9FA2 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9FA5 CB 66            bit 4,(hl)
 439+ 9FA7 C8               ret z
 440+ 9FA8 CD EE 99         call Mov_right
 441+ 9FAB C9               ret
 442+ 9FAC
 443+ 9FAC              ; ---------- --------- --------- ---------- ----------
 444+ 9FAC              ;
 445+ 9FAC              ;   26/06/23
 446+ 9FAC              ;
 447+ 9FAC              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FAC
 449+ 9FAC              Ajusta_velocidad_desplazamiento
 450+ 9FAC
 451+ 9FAC              ; 1er byte de la cadena de movimiento.
 452+ 9FAC              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FAC
 454+ 9FAC CD CA 9F         call Extrae_nibble_alto
 455+ 9FAF
 456+ 9FAF 32 DD 88         ld (Vel_up),a
 457+ 9FB2 79               ld a,c
 458+ 9FB3 E6 0F            and $0f
 459+ 9FB5 32 DE 88         ld (Vel_down),a
 460+ 9FB8
 461+ 9FB8              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FB8              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FB8
 464+ 9FB8 23               inc hl
 465+ 9FB9 CD CA 9F         call Extrae_nibble_alto
 466+ 9FBC
 467+ 9FBC 32 DB 88         ld (Vel_left),a
 468+ 9FBF 79               ld a,c
 469+ 9FC0 E6 0F            and $0f
 470+ 9FC2 32 DC 88         ld (Vel_right),a
 471+ 9FC5
 472+ 9FC5              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FC5
 474+ 9FC5 23               inc hl
 475+ 9FC6 22 F3 88         ld (Puntero_mov),hl
 476+ 9FC9 C9               ret
 477+ 9FCA
 478+ 9FCA 06 04        Extrae_nibble_alto ld b,4
 479+ 9FCC 7E               ld a,(hl)
 480+ 9FCD 4F               ld c,a
 481+ 9FCE E6 F0            and $f0
 482+ 9FD0 CB 3F        1 srl a
 483+ 9FD2 10 FC            djnz 1B
 484+ 9FD4 C9               ret
 485+ 9FD5
 486+ 9FD5              ; ---------- --------- --------- ---------- ----------
 487+ 9FD5              ;
 488+ 9FD5              ;   5/7/23
 489+ 9FD5              ;
 490+ 9FD5              ;   Incrementa_Puntero_indice_mov
 491+ 9FD5
 492+ 9FD5              Incrementa_Puntero_indice_mov
 493+ 9FD5
 494+ 9FD5 21 F7 88         ld hl,Incrementa_puntero
 495+ 9FD8 34               inc (hl)
 496+ 9FD9
 497+ 9FD9 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ 9FDC 01 02 00         ld bc,2
 499+ 9FDF A7               and a
 500+ 9FE0 09               add hl,bc
 501+ 9FE1 22 F1 88         ld (Puntero_indice_mov),hl
 502+ 9FE4
 503+ 9FE4 7E               ld a,(hl)
 504+ 9FE5 A7               and a
 505+ 9FE6
 506+ 9FE6              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FE6
 508+ 9FE6              ;    jr z,$
 509+ 9FE6
 510+ 9FE6              ;! Reinicia el Patrón de movimiento.
 511+ 9FE6
 512+ 9FE6 CC EB 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FE9
 514+ 9FE9 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FEA
 516+ 9FEA C9               ret
 517+ 9FEB
 518+ 9FEB
 519+ 9FEB              ; ---------- --------- --------- ---------- ----------
 520+ 9FEB              ;
 521+ 9FEB              ;   24/07/23
 522+ 9FEB              ;
 523+ 9FEB              ;   Inicializa_Puntero_indice_mov
 524+ 9FEB
 525+ 9FEB              Inicializa_Puntero_indice_mov
 526+ 9FEB
 527+ 9FEB              ; Existe etiqueta de bucle principal???
 528+ 9FEB
 529+ 9FEB 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FEE 24               inc h
 531+ 9FEF 25               dec h
 532+ 9FF0 28 05            jr z,2F
 533+ 9FF2
 534+ 9FF2 22 F1 88         ld (Puntero_indice_mov),hl
 535+ 9FF5 18 14            jr 3F
 536+ 9FF7
 537+ 9FF7              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FF7
 539+ 9FF7 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ 9FFA 47               ld b,a
 541+ 9FFB
 542+ 9FFB 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ 9FFE 2B           1 dec hl
 544+ 9FFF 2B               dec hl
 545+ A000 10 FC            djnz 1B
 546+ A002 22 F1 88         ld (Puntero_indice_mov),hl
 547+ A005
 548+ A005 AF               xor a
 549+ A006 32 F7 88         ld (Incrementa_puntero),a
 550+ A009 18 06            jr 4F
 551+ A00B
 552+ A00B 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A00E 32 F7 88         ld (Incrementa_puntero),a
 554+ A011 C9           4 ret
 555+ A012
 556+ A012
 557+ A012
# file closed: Patrones_de_mov.asm
1647  A012              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A012              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A012              ;
   3+ A012              ;	4/9/23
   4+ A012              ;
   5+ A012              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A012
   7+ A012              ;	ADC HL,SP	LD (addr),SP
   8+ A012              ;	ADD HL,SP	LD SP,(addr)
   9+ A012              ;	ADD IX,SP	LD SP,nn
  10+ A012              ; 	ADD IY,SP	LD SP,HL
  11+ A012              ;				LD SP,IX
  12+ A012              ;	DEC SP		LD SP,IY
  13+ A012
  14+ A012              ;	EX (SP),HL
  15+ A012              ;	EX (SP),IX
  16+ A012              ;	EX (SP),IY
  17+ A012
  18+ A012              ;	INC SP
  19+ A012
  20+ A012                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E6 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 03 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A F0 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 03 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 1C 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A F0 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 22 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 14 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 1A 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 14 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   19/10/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 127+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 no está completo.
 128+ 72EC
 129+ 72EC 3A 3D 89         ld a,(Ctrl_Semaforo)
 130+ 72EF CB 47            bit 0,a
 131+ 72F1 28 1E            jr z,7F
 132+ 72F3
 133+ 72F3              ; Album_de_fotos_3 completo ?????
 134+ 72F3
 135+ 72F3 3A 3C 89         ld a,(Semaforo)
 136+ 72F6 CB 5F            bit 3,a
 137+ 72F8 28 FE            jr z,$
 138+ 72FA
 139+ 72FA              ; Album_de_fotos_3 contiene un FRAME completo.
 140+ 72FA              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 141+ 72FA
 142+ 72FA CD A4 73         call Album3_a_Album2    ;   X-X-X-0
 143+ 72FD CD 02 73         call Modifica_Stack_snapshot
 144+ 7300
 145+ 7300
 146+ 7300              ;;! Debugggggg
 147+ 7300              ;    ld a,(Contador_de_frames_2)
 148+ 7300              ;    ex af,af'
 149+ 7300              ;    ld a,(Contador_de_frames)
 150+ 7300               ;   jr $
 151+ 7300
 152+ 7300              ;
 153+ 7300              ; Tenemos completos:
 154+ 7300
 155+ 7300              ;   Album_de_fotos
 156+ 7300              ;   Album_de_fotos_1
 157+ 7300              ;   Album_de_fotos_2
 158+ 7300
 159+ 7300              ;   (Stack_snapshot) está situado al principio de Album_de_fotos_3, (que estará vacío).
 160+ 7300
 161+ 7300 18 0F            jr 7F
 162+ 7302
 163+ 7302 2A 30 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 164+ 7305 CD 80 8C     	call Extrae_address
 165+ 7308 22 1A 89     	ld (Stack_snapshot),hl
 166+ 730B 21 3C 89     	ld hl,Semaforo
 167+ 730E CB 0E        	rrc (hl)
 168+ 7310 C9               ret
 169+ 7311
 170+ 7311
 171+ 7311
 172+ 7311              ;    call Album2_a_Album1
 173+ 7311
 174+ 7311              ;   1-1-0-X Distribución actual de los álbumes.
 175+ 7311
 176+ 7311              ;   Está el buffer lleno ???
 177+ 7311
 178+ 7311              ;    ld a,(Ctrl_1)
 179+ 7311              ;    bit 5,a
 180+ 7311              ;    jr $
 181+ 7311
 182+ 7311              ;    call Album3_a_Album2
 183+ 7311              ;    call Actualiza_punteros_de_albumes
 184+ 7311
 185+ 7311              ;    ld a,(Contador_de_frames_2)
 186+ 7311              ;    ex af,af'
 187+ 7311              ;    ld a,(Contador_de_frames)
 188+ 7311              ;    jr $
 189+ 7311
 190+ 7311              ; #############################################################3
 191+ 7311
 192+ 7311              ;   En 1er lugar limpiamos el FRAME pintado.
 193+ 7311              ;   Vaciamos Album_de_fotos.
 194+ 7311
 195+ 7311              ;   Album_de_fotos. Contiene datos ???
 196+ 7311
 197+ 7311 21 01 70     7 ld hl,Album_de_fotos+1
 198+ 7314 7E               ld a,(hl)
 199+ 7315 A7               and a
 200+ 7316 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 201+ 7318
 202+ 7318              ;   Hemos impreso Album_de_fotos. Limpiamos el álbum y actualizamos (End_Snapshot).
 203+ 7318
 204+ 7318 2A 1E 89         ld hl,(End_Snapshot)
 205+ 731B 01 00 70         ld bc,Album_de_fotos
 206+ 731E 11 01 70         ld de,Album_de_fotos+1
 207+ 7321 AF               xor a
 208+ 7322 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 209+ 7323
 210+ 7323 CD F2 73         call Limpia_album
 211+ 7326
 212+ 7326 21 00 00         ld hl,0
 213+ 7329 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 214+ 732C
 215+ 732C              ; ----- ----- ----- -----
 216+ 732C
 217+ 732C              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 218+ 732C              ;   Album_de_fotos_1. Contiene un frame completo ???
 219+ 732C
 220+ 732C 3A 3C 89     3 ld a,(Semaforo)
 221+ 732F CB 4F            bit 1,a
 222+ 7331 20 02            jr nz,4F
 223+ 7333
 224+ 7333              ;   Album_de_fotos_1 no está completo.
 225+ 7333
 226+ 7333              ;    ld hl,Semaforo
 227+ 7333              ;    set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 228+ 7333              ;    res 1,(hl)
 229+ 7333              ;    ret                         ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 230+ 7333
 231+ 7333 18 FE            jr $
 232+ 7335
 233+ 7335
 234+ 7335              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 235+ 7335
 236+ 7335 21 55 70     4 ld hl,Album_de_fotos_1+1
 237+ 7338 7E               ld a,(hl)
 238+ 7339 A7               and a
 239+ 733A 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 240+ 733C
 241+ 733C              ; ----- ----- ----- -----
 242+ 733C              ; ----- ----- ----- -----
 243+ 733C
 244+ 733C              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 245+ 733C              ;   Actualiza (End_Snapshot).
 246+ 733C
 247+ 733C 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 248+ 733F 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 249+ 7342 11 00 70         ld de,Album_de_fotos        ; Destino.
 250+ 7345
 251+ 7345 CD F2 73         call Limpia_album
 252+ 7348
 253+ 7348              ;   Calculamos (End_Snapshot)
 254+ 7348
 255+ 7348 A7               and a
 256+ 7349 ED 4A            adc hl,bc
 257+ 734B 22 1E 89         ld (End_Snapshot),hl
 258+ 734E
 259+ 734E              ;   Limpiamos Album_de_fotos_1.
 260+ 734E
 261+ 734E 2A 24 89         ld hl,(End_Snapshot_1)
 262+ 7351 01 54 70         ld bc,Album_de_fotos_1
 263+ 7354 11 55 70         ld de,Album_de_fotos_1+1
 264+ 7357 AF               xor a
 265+ 7358 02               ld (bc),a
 266+ 7359
 267+ 7359 CD F2 73         call Limpia_album
 268+ 735C
 269+ 735C 21 00 00         ld hl,0
 270+ 735F 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 271+ 7362
 272+ 7362              ; ----- ----- ----- -----
 273+ 7362
 274+ 7362              ;   Album_de_fotos_2. Contiene Frame completo ???
 275+ 7362
 276+ 7362 3A 3C 89     1 ld a,(Semaforo)
 277+ 7365 CB 57            bit 2,a
 278+ 7367 20 09            jr nz,5F
 279+ 7369
 280+ 7369              ;   Album_de_fotos_2 no está completo.
 281+ 7369
 282+ 7369              ;   Ha sido reestructurado ???
 283+ 7369
 284+ 7369              ;! Debugggggg
 285+ 7369 3A 52 89         ld a,(Contador_de_frames_2)
 286+ 736C 08               ex af,af'
 287+ 736D 3A 51 89         ld a,(Contador_de_frames)
 288+ 7370 18 FE            jr $
 289+ 7372
 290+ 7372              ;    bit 5,a
 291+ 7372              ;    ret nz
 292+ 7372
 293+ 7372              ;    ld hl,Semaforo
 294+ 7372              ;    set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 295+ 7372              ;    set 6,(hl)
 296+ 7372              ;    ret
 297+ 7372
 298+ 7372              ;   Album_de_fotos_2 contiene un FRAME completo. Datos ???.
 299+ 7372
 300+ 7372 21 A9 70     5 ld hl,Album_de_fotos_2+1
 301+ 7375 7E               ld a,(hl)
 302+ 7376 A7               and a
 303+ 7377 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 304+ 7379
 305+ 7379              ; ----- ----- ----- -----
 306+ 7379              ; ----- ----- ----- -----
 307+ 7379              ; ----- ----- ----- -----
 308+ 7379
 309+ 7379              ;   Album_de_fotos_2 contiene un frame completo.
 310+ 7379              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 311+ 7379
 312+ 7379 CD CB 73         call Album2_a_Album1
 313+ 737C
 314+ 737C              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 315+ 737C              ;   Album_de_fotos_3. Contiene un frame completo ???
 316+ 737C
 317+ 737C 3A 3C 89     2 ld a,(Semaforo)
 318+ 737F CB 5F            bit 3,a
 319+ 7381 20 1B            jr nz,6F
 320+ 7383
 321+ 7383              ; Venimos de reorganizar los álbumes ???
 322+ 7383
 323+ 7383 3A 3D 89         ld a,(Ctrl_Semaforo)
 324+ 7386 CB 47            bit 0,a
 325+ 7388 28 0E            jr z,8F
 326+ 738A
 327+ 738A              ; Venimos de REORGANIZAR los álbumes. X-X-0-0
 328+ 738A              ; Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2, actualizar (Semaforo) y inicializar el bit_0 de (Ctrl_Semaforo).
 329+ 738A
 330+ 738A CD FF 73         call Actualiza_punteros_de_albumes
 331+ 738D CD 02 73         call Modifica_Stack_snapshot
 332+ 7390 21 3D 89         ld hl,Ctrl_Semaforo
 333+ 7393 CB 86            res 0,(hl)
 334+ 7395 CB FE            set 7,(hl)
 335+ 7397 C9               ret
 336+ 7398
 337+ 7398
 338+ 7398              ;   Album_de_fotos_3 no está completo.
 339+ 7398
 340+ 7398 21 3D 89     8 ld hl,Ctrl_Semaforo
 341+ 739B CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 342+ 739D C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 343+ 739E
 344+ 739E              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 345+ 739E
 346+ 739E 21 FD 70     6 ld hl,Album_de_fotos_3+1
 347+ 73A1 7E               ld a,(hl)
 348+ 73A2 A7               and a
 349+ 73A3 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 350+ 73A4
 351+ 73A4              ; ----- ----- ----- -----
 352+ 73A4              ; ----- ----- ----- -----
 353+ 73A4              ; ----- ----- ----- -----
 354+ 73A4
 355+ 73A4              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2 y limpiamos Album_de_fotos_3.
 356+ 73A4
 357+ 73A4 2A 2C 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 358+ 73A7 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 359+ 73AA 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 360+ 73AD
 361+ 73AD CD F2 73         call Limpia_album
 362+ 73B0
 363+ 73B0              ;   Actualizamos (End_Snapshot_2):
 364+ 73B0
 365+ 73B0 A7               and a
 366+ 73B1 ED 4A            adc hl,bc
 367+ 73B3 22 28 89         ld (End_Snapshot_2),hl
 368+ 73B6
 369+ 73B6              ;   Limpiamos Album_de_fotos_3.
 370+ 73B6
 371+ 73B6 2A 2C 89         ld hl,(End_Snapshot_3)
 372+ 73B9 01 FC 70         ld bc,Album_de_fotos_3
 373+ 73BC 11 FD 70         ld de,Album_de_fotos_3+1
 374+ 73BF AF               xor a
 375+ 73C0 02               ld (bc),a
 376+ 73C1 CD F2 73         call Limpia_album
 377+ 73C4
 378+ 73C4              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 379+ 73C4              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 380+ 73C4
 381+ 73C4 21 00 00         ld hl,0
 382+ 73C7 22 2C 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 383+ 73CA
 384+ 73CA C9               ret
 385+ 73CB
 386+ 73CB 2A 28 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 387+ 73CE 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 388+ 73D1 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 389+ 73D4 CD F2 73         call Limpia_album
 390+ 73D7
 391+ 73D7              ;   Actualizamos (End_Snapshot_1):
 392+ 73D7
 393+ 73D7 A7               and a
 394+ 73D8 ED 4A            adc hl,bc
 395+ 73DA 22 24 89         ld (End_Snapshot_1),hl
 396+ 73DD
 397+ 73DD              ;   Limpiamos Album_de_fotos_2.
 398+ 73DD
 399+ 73DD 2A 28 89         ld hl,(End_Snapshot_2)
 400+ 73E0 01 A8 70         ld bc,Album_de_fotos_2
 401+ 73E3 11 A9 70         ld de,Album_de_fotos_2+1
 402+ 73E6 AF               xor a
 403+ 73E7 02               ld (bc),a
 404+ 73E8 CD F2 73         call Limpia_album
 405+ 73EB 21 00 00         ld hl,0
 406+ 73EE 22 28 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 407+ 73F1 C9               ret
 408+ 73F2
 409+ 73F2
 410+ 73F2              ; ----------------------------------------------------
 411+ 73F2              ;
 412+ 73F2              ;   10/8/23
 413+ 73F2              ;
 414+ 73F2              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 415+ 73F2              ;
 416+ 73F2              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 417+ 73F2              ;           BC ..... Dirección de inicio del álbum.
 418+ 73F2              ;           DE ..... Dirección de inicio del álbum. +1
 419+ 73F2
 420+ 73F2              ;    ld hl,(End_Snapshot)
 421+ 73F2              ;    ld bc,Album_de_fotos
 422+ 73F2              ;    ld de,Album_de_fotos+1
 423+ 73F2
 424+ 73F2              ;   MODIFICA: A,HL,BC y DE.
 425+ 73F2
 426+ 73F2              Limpia_album
 427+ 73F2 D5               push de                     ; Guardo DESTINO.
 428+ 73F3 C5               push bc                     ; Guardo ORIGEN.
 429+ 73F4 ED 42            sbc hl,bc
 430+ 73F6 4D               ld c,l
 431+ 73F7 44               ld b,h
 432+ 73F8 E1               pop hl
 433+ 73F9 C5               push bc
 434+ 73FA ED B0            ldir
 435+ 73FC C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 436+ 73FD E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 437+ 73FE C9               ret                         ; _ a otro).
 438+ 73FF
 439+ 73FF              ; --------------------------------------------------------------------------------------------
 440+ 73FF              ;
 441+ 73FF              ;   20/10/23
 442+ 73FF
 443+ 73FF              ;
 444+ 73FF
 445+ 73FF              Actualiza_punteros_de_albumes
 446+ 73FF
 447+ 73FF 2A 30 89         ld hl,(Puntero_indice_album_de_fotos)
 448+ 7402 2B               dec hl
 449+ 7403 2B               dec hl
 450+ 7404 22 30 89         ld (Puntero_indice_album_de_fotos),hl
 451+ 7407
 452+ 7407 2A 34 89         ld hl,(Puntero_indice_End_Snapshot)
 453+ 740A 2B               dec hl
 454+ 740B 2B               dec hl
 455+ 740C 22 34 89         ld (Puntero_indice_End_Snapshot),hl
 456+ 740F CD 80 8C         call Extrae_address
 457+ 7412 22 38 89         ld (Puntero_de_End_Snapshot),hl
 458+ 7415
 459+ 7415 C9               ret
 460+ 7416
# file closed: Guarda_foto_registros.asm
1648  7416
1649  7416              	SAVESNA "Pruebas.sna", START
1650  7416
1651  7416
1652  7416
1653  7416
# file closed: Banco_de_pruebas.asm
