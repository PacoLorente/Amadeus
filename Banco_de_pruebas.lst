# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  40  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  41  FE01
  42  FE01              ;																		; Scanlines_album.
  43  FE01
  44  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  45  FE01
  46  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  47  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  48  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  49  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  50  FE01
  51  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  52  FE01              ;
  53  FE01              ;	13/08/24
  54  FE01              ;
  55  FE01
  56  FE01              	org $82f4
  57  82F4
  58  82F4 F5           	push af
  59  82F5 E5           	push hl
  60  82F6
  61  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  62  82F6 21 24 8C     	ld hl,Ctrl_3
  63  82F9 CB 46        	bit 0,(hl)
  64  82FB 28 FE        	jr z,$
  65  82FD              ;! -------------------
  66  82FD
  67  82FD              ; Disparos.
  68  82FD
  69  82FD CD D1 A0     	call Pinta_disparos
  70  8300
  71  8300              ; Shield -----------------------
  72  8300
  73  8300              Temporizacion_shield
  74  8300
  75  8300 21 4E 8C     	ld hl,Shield
  76  8303 7E           	ld a,(hl)
  77  8304 A7           	and a
  78  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8307
  80  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8308
  82  8308 23           	inc hl
  83  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  830A
  85  830A 20 17        	jr nz,Incrementa_FRAMES
  86  830C
  87  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  830C
  89  830C              Cambio_de_estado
  90  830C
  91  830C              ;	Indica cambio de estado.
  92  830C
  93  830C 23           	inc hl						;	Sitúa en (Shield_3).
  94  830D
  95  830D CB 5E        	bit 3,(hl)
  96  830F 28 05        	jr z,2F
  97  8311
  98  8311 CD 10 91     	call Inicia_Shield
  99  8314
 100  8314 18 0D        	jr Incrementa_FRAMES
 101  8316
 102  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8318
 104  8318              ;	Carga en (Shield_2) la siguiente temporización.
 105  8318
 106  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 107  831B 23           	inc hl
 108  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 109  831F 7E           	ld a,(hl)
 110  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8323
 112  8323              Incrementa_FRAMES
 113  8323
 114  8323 2A 78 5C     	ld hl,(FRAMES)
 115  8326 23           	inc hl
 116  8327 22 78 5C     	ld (FRAMES),hl
 117  832A
 118  832A 7C           	ld a,h
 119  832B B5           	or l
 120  832C 20 04        	jr nz,1F
 121  832E
 122  832E 21 7A 5C     	ld hl,FRAMES_3
 123  8331 34           	inc (hl)
 124  8332
 125  8332 D5           1 push de
 126  8333 C5           	push bc
 127  8334
 128  8334 CD 20 91     	call Actualiza_pantalla
 129  8337
 130  8337 C1           	pop bc
 131  8338 D1           	pop de
 132  8339 E1           	pop hl
 133  833A F1           	pop af
 134  833B
 135  833B FB           	ei
 136  833C
 137  833C C9           	ret
 138  833D
 139  833D              ; --------------------------------------------------------------------------------
 140  833D
 141  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_de_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 142  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 144  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 145  8BB3
 146  8BB3              ; --------------------------------------------------------------------------------
 147  8BB3              ;
 148  8BB3              ; 12/05/24
 149  8BB3              ;
 150  8BB3              ; Parámetros DRAW.
 151  8BB3              ;
 152  8BB3
 153  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8BB3
 155  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8BB4              ;															- Patrón de movimiento.
 157  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8BB6
 160  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8BB7
 163  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8BB7              ; Ejemplos.
 166  8BB7
 167  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8BB7
 173  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8BB8
 177  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8BBA
 180  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8BBC
 182  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8BBC
 184  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 186  8BBE
 187  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BBE
 189  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BBF
 195  8BBF 00           Ctrl_2 db 0
 196  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC0              ;
 204  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC0              ;														BIT 4, ???
 210  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC0
 212  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC1              ;
 218  8BC1              ; 														DESCRIPCIÖN:
 219  8BC1              ;
 220  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC1              ;
 234  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC1
 238  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC1
 240  8BC1 00           Filas db 0												; Filas. [DRAW]
 241  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BC7
 245  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BC7
 247  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BC8
 251  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BC8
 253  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BC8              ;
 255  8BC8              ;	COLORES: 0 ..... NEGRO
 256  8BC8              ;    		 1 ..... AZUL
 257  8BC8              ; 			 2 ..... ROJO
 258  8BC8              ;			 3 ..... MAGENTA
 259  8BC8              ; 			 4 ..... VERDE
 260  8BC8              ; 			 5 ..... CIAN
 261  8BC8              ;			 6 ..... AMARILLO
 262  8BC8              ; 			 7 ..... BLANCO
 263  8BC8
 264  8BC8 00 00        Indice_Sprite_der defw 0
 265  8BCA 00 00        Indice_Sprite_izq defw 0
 266  8BCC 00 00        Puntero_DESPLZ_der defw 0
 267  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD0
 269  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BD3 00           Columnas db 0
 272  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BD7
 276  8BD7              ; variables de control general.
 277  8BD7
 278  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BD8
 280  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BD8
 282  8BD8              Perfiles_de_velocidad
 283  8BD8
 284  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BDC
 289  8BDC              ; Contadores de 16 bits.
 290  8BDC
 291  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BE4
 296  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BE4
 298  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BEA              ;
 302  8BEA              ;
 303  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BEB 00           Incrementa_puntero_backup db 0
 307  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF0              ;
 313  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF0              ;
 317  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF0              ;
 322  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF0
 326  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF1
 328  8BF1              ;														DESCRIPCIÓN:
 329  8BF1              ;
 330  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF1
 337  8BF1              ;														BIT 3, Recarga de nueva oleada.
 338  8BF1              ;														BIT 4, Recarga de nueva oleada.
 339  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF1              ;														BIT 6, **** Frame completo.
 341  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF1
 343  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BF3
 348  8BF3              ; Gestión de ENTIDADES y CAJAS.
 349  8BF3
 350  8BF3 00 00        Puntero_store_caja defw 0
 351  8BF5 00 00        Puntero_restore_caja defw 0
 352  8BF7 00 00        Indice_restore_caja defw 0
 353  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8BFC
 357  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C00              ;														; _ puntero (Indice_entidades).
 360  8C00
 361  8C00              ;---------------------------------------------------------------------------------------------------------------
 362  8C00              ;
 363  8C00              ;	11/09/24
 364  8C00              ;
 365  8C00              ;	Álbumes.
 366  8C00
 367  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C02              ;														; _variable para almacenar lo posición del puntero_
 369  8C02              ; 														; _de pila, SP.
 370  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C04
 373  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C04
 375  8C04 00 00        Album_de_pintado defw 0
 376  8C06 00 00        Album_de_borrado defw 0
 377  8C08 00 00        Album_de_pintado_Amadeus defw 0
 378  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 379  8C0C 00 00        Album_de_pintado_disparos defw 0
 380  8C0E 00 00        Album_de_borrado_disparos defw 0
 381  8C10
 382  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C12 00           Num_de_bytes_album_de_disparos db 0
 384  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C14
 386  8C14 07           Numero_de_disparos_de_entidades db 7
 387  8C15
 388  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 390  8C17
 391  8C17 00 00        Techo_Scanlines_album defw 0
 392  8C19 00 00        Techo_Scanlines_album_2 defw 0
 393  8C1B 00           Switch db 0
 394  8C1C 00 00        Techo defw 0
 395  8C1E 00 00        Scanlines_album_SP defw 0
 396  8C20 00 89        India_SP defw Tabla_de_pintado
 397  8C22 03 89        India_2_SP defw Tabla_de_pintado+3
 398  8C24
 399  8C24 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  8C25              ;
 401  8C25              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  8C25              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  8C25              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  8C25              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 405  8C25              ;																Habilita el borrado/pintado de sprites.
 406  8C25              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 407  8C25              ;																_ a la baja.
 408  8C25              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 409  8C25              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 410  8C25              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 411  8C25              ; 																_ el último frame de la explosión de nuestra nave.
 412  8C25              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 413  8C25              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 414  8C25
 415  8C25 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 416  8C26              ;
 417  8C26              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 418  8C26              ;
 419  8C26              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 420  8C26              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 421  8C26              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 422  8C26              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 423  8C26              ;
 424  8C26              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 425  8C26              ;															_ masticados ya generados.
 426  8C26              ;
 427  8C26              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 428  8C26              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 429  8C26              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 430  8C26              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 431  8C26
 432  8C26 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 433  8C27              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 434  8C27              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 435  8C27
 436  8C27
 437  8C27
 438  8C27
 439  8C27
 440  8C27              ; Gestión de Disparos.
 441  8C27
 442  8C27 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 443  8C29 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 444  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 445  8C2C
 446  8C2C              ;
 447  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 448  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 449  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 450  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 451  8C2C
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C
 458  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 459  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 460  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 461  8C2E
 462  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 463  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 464  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 466  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 467  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 468  8C36
 469  8C36              ;---------------------------------------------------------------------------------------------------------------
 470  8C36
 471  8C36              ; Relojes y temporizaciones.
 472  8C36
 473  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 474  8C37 05           Clock_explosion_Amadeus db 5
 475  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 476  8C39
 477  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 478  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 479  8C3D 00           DB_RND_disparos db 0
 480  8C3E
 481  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 482  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 483  8C41              ;														; Repite la oleada de entidades.
 484  8C41 20           CLOCK_disparo_entidad_MASTER db $20						; Reloj, decreciente.
 485  8C42 20           CLOCK_disparo_entidad db $20
 486  8C43
 487  8C43              ;---------------------------------------------------------------------------------------------------------------
 488  8C43
 489  8C43              ; Gestión de NIVELES.
 490  8C43
 491  8C43 00           Nivel db 0												; Nivel actual del juego.
 492  8C44 00 00        Puntero_indice_NIVELES defw 0
 493  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 494  8C48              ; 														; _ que definen el NIVEL.
 495  8C48
 496  8C48              ; ---------------------------------------------------------------------------------------------------------------
 497  8C48
 498  8C48              ; Temporizaciones Shield.
 499  8C48
 500  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 501  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 502  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 503  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 504  8C50 00           Shield_3 db 0
 505  8C51
 506  8C51 06           Lives db 6
 507  8C52
 508  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 509  8C52              ;
 510  8C52              ;	5/1/24
 511  8C52
 512  8C52              START
 513  8C52
 514  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 515  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 516  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 517  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 518  8C5B F3           	DI
 519  8C5C
 520  8C5C              ; Limpiamos pantalla.
 521  8C5C
 522  8C5C 3E 07        	ld a,%00000111
 523  8C5E              ;	call Cls
 524  8C5E CD 05 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 525  8C61
 526  8C61              ; INICIALIZACIÓN.
 527  8C61
 528  8C61 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 529  8C63 CD 52 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 530  8C66 CD 9C 8E     	call Extrae_numero_aleatorio_y_avanza
 531  8C69
 532  8C69 6F           	ld l,a
 533  8C6A 26 00        	ld h,0
 534  8C6C 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 535  8C6F
 536  8C6F              ;	Inicializa 1er Nivel.
 537  8C6F
 538  8C6F 21 94 8B     	ld hl,Indice_de_niveles
 539  8C72 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 540  8C75 CD 82 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 541  8C78              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 542  8C78              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 543  8C78              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 544  8C78
 545  8C78              ;	Inicia los álbumes de líneas.
 546  8C78
 547  8C78 CD 55 90     	call Inicia_albumes_de_lineas
 548  8C7B              ;
 549  8C7B CD 65 90     	call Inicia_albumes_de_lineas_Amadeus
 550  8C7E CD 72 90     	call Inicia_albumes_de_disparos
 551  8C81
 552  8C81 CD 9B 90     	call Inicia_Puntero_Disparo_Entidades
 553  8C84
 554  8C84 CD C7 92     4 call Inicia_Entidades
 555  8C87 CD 2A 93     	call Inicia_Amadeus
 556  8C8A
 557  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 558  8C8A              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 559  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 560  8C8A
 561  8C8A 11 6D 89     	ld de,Amadeus_BOX
 562  8C8D CD 7D 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 563  8C90 CD 6D 93     	call Limpiamos_bandeja_DRAW
 564  8C93
 565  8C93              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 566  8C93
 567  8C93 06 3C        	ld b,60
 568  8C95 CD 59 9D     2 call Amadeus_a_izquierda
 569  8C98 10 FB        	djnz 2B
 570  8C9A
 571  8C9A CD 33 90     	call Genera_datos_de_impresion_Amadeus
 572  8C9D
 573  8C9D              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 574  8C9D
 575  8C9D CD 85 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 576  8CA0              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 577  8CA0
 578  8CA0              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 579  8CA0              ; (Esto se dá cuando se inicia una nueva oleada).
 580  8CA0
 581  8CA0              ;	ld a,(Ctrl_1)
 582  8CA0              ;	bit 3,a
 583  8CA0              ;	jr nz,5F											 ; Loop
 584  8CA0
 585  8CA0              ;	ld de,Amadeus_db
 586  8CA0              ;	call Store_Amadeus
 587  8CA0
 588  8CA0              ; 	INICIA DISPAROS !!!!!
 589  8CA0
 590  8CA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA0
 592  8CA0              ;5 call Inicia_punteros_de_cajas
 593  8CA0              ;	call Restore_entidad
 594  8CA0
 595  8CA0              ;	ld a,(Ctrl_1)
 596  8CA0              ;	bit 3,a
 597  8CA0              ;	jr z,6F
 598  8CA0
 599  8CA0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA0
 601  8CA0              ;	ld hl,Ctrl_1
 602  8CA0              ;	res 3,(hl)
 603  8CA0              ;	jr Main
 604  8CA0
 605  8CA0              ; Damos por concluida la construcción del FRAME.
 606  8CA0              ;
 607  8CA0
 608  8CA0 CD 10 91     	call Inicia_Shield
 609  8CA3
 610  8CA3
 611  8CA3 2A 1E 8C     6 ld hl,(Scanlines_album_SP)
 612  8CA6 22 17 8C     	ld (Techo_Scanlines_album),hl
 613  8CA9
 614  8CA9 2A 06 8C     	ld hl,(Album_de_borrado)
 615  8CAC 22 1E 8C     	ld (Scanlines_album_SP),hl
 616  8CAF
 617  8CAF 21 00 89     	ld hl,Tabla_de_pintado
 618  8CB2 22 20 8C     	ld (India_SP),hl
 619  8CB5
 620  8CB5 21 24 8C     	ld hl,Ctrl_3
 621  8CB8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CBA CB D6        	set 2,(hl)
 623  8CBC CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CBE
 625  8CBE FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CBF
 627  8CBF 76           	halt
 628  8CC0
 629  8CC0              ; ------------------------------------
 630  8CC0
 631  8CC0              Main
 632  8CC0              ;
 633  8CC0              ; 20/09/24
 634  8CC0
 635  8CC0              ; Gestión de disparos.
 636  8CC0
 637  8CC0 CD 3F A0     	call Limpia_album_de_borrado_disparos
 638  8CC3 CD 83 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CC6 CD 06 9F     	call Motor_de_disparos_entidades
 640  8CC9 CD 7B A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 641  8CCC
 642  8CCC              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CCC              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CCC              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CCC
 646  8CCC CD 1D A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CCF
 648  8CCF              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 649  8CCF
 650  8CCF 21 42 8C     	ld hl,CLOCK_disparo_entidad
 651  8CD2 35           	dec (hl)
 652  8CD3 CC CB 8D     	call z,Autoriza_disparo_de_entidades
 653  8CD6
 654  8CD6 2A 3E 8C     	ld hl,(Clock_next_entity)
 655  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 656  8CDD A7           	and a
 657  8CDE ED 42        	sbc hl,bc
 658  8CE0 20 16        	jr nz,1F
 659  8CE2
 660  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 661  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 662  8CE2
 663  8CE2 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 664  8CE5 47           	ld b,a
 665  8CE6 3A FB 8B     	ld a,(Entidades_en_curso)
 666  8CE9 B8           	cp b
 667  8CEA 28 0C        	jr z,1F
 668  8CEC 30 0A        	jr nc,1F
 669  8CEE
 670  8CEE 3C           	inc a
 671  8CEF 32 FB 8B     	ld (Entidades_en_curso),a
 672  8CF2
 673  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 674  8CF2
 675  8CF2 CD 9C 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 676  8CF5 CD B8 8E     	call Define_Clock_next_entity
 677  8CF8
 678  8CF8 3A FB 8B     1 ld a,(Entidades_en_curso)
 679  8CFB A7           	and a
 680  8CFC CA 76 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 681  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 682  8D00
 683  8D00              ; ( Código que ejecutamos con cada entidad: ).
 684  8D00
 685  8D00              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 686  8D00              ;
 687  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 688  8D00
 689  8D00 21 00 89     	ld hl,Tabla_de_pintado
 690  8D03 22 20 8C     	ld (India_SP),hl
 691  8D06
 692  8D06 21 24 8C     	ld hl,Ctrl_3
 693  8D09 CB D6        	set 2,(hl)
 694  8D0B CD 58 8E     	call Change
 695  8D0E
 696  8D0E C5           2 push bc 												; Nº de entidades en curso.
 697  8D0F
 698  8D0F CD DD 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 699  8D12 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 700  8D16
 701  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 702  8D16
 703  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 704  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 705  8D16
 706  8D16 3A 2B 8C     	ld a,(Impacto2)
 707  8D19 CB 5F        	bit 3,a
 708  8D1B C4 05 A0     	call nz,Compara_con_coordenadas_de_disparo
 709  8D1E
 710  8D1E 3A B7 8B     	ld a,(Impacto)
 711  8D21 CB 4F        	bit 1,a
 712  8D23 C4 ED 91     	call nz,Genera_explosion
 713  8D26 20 31        	jr nz,Gestiona_siguiente_entidad
 714  8D28
 715  8D28 3A B7 8B     	ld a,(Impacto)
 716  8D2B A7           	and a
 717  8D2C 28 0C        	jr z,3F
 718  8D2E
 719  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 720  8D2E
 721  8D2E              ; 5/7/24
 722  8D2E              ; Nota importante:
 723  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 724  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 725  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 726  8D2E
 727  8D2E 3A 71 89     	ld a,(Impacto_Amadeus)
 728  8D31 A7           	and a
 729  8D32 C4 ED 91     	call nz,Genera_explosion
 730  8D35 20 22        	jr nz,Gestiona_siguiente_entidad
 731  8D37
 732  8D37              ; Falsa colisión !!!
 733  8D37
 734  8D37 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 735  8D3A
 736  8D3A              ; -------------------------------------------
 737  8D3A
 738  8D3A CD FC 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 739  8D3D CD 38 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 740  8D40 CD EC 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 741  8D43 CD ED 94     	call Genera_datos_de_impresion
 742  8D46 CD 90 93     	call Decrementa_Contador_de_mov_masticados
 743  8D49
 744  8D49              ; -------------------------------------------
 745  8D49
 746  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 747  8D49
 748  8D49 2A B8 8B     	ld hl,(Puntero_de_impresion)
 749  8D4C CD C1 94     	call Genera_coordenadas
 750  8D4F
 751  8D4F              ; TODO: Generamos disparo ???
 752  8D4F
 753  8D4F 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 754  8D52 A7           	and a
 755  8D53 C4 ED 8D     	call nz,Entidad_genera_disparo_si_procede
 756  8D56
 757  8D56 CD 9B A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 758  8D59
 759  8D59              Gestiona_siguiente_entidad
 760  8D59
 761  8D59 CD 62 93      	call Store_Restore_cajas
 762  8D5C C1           	pop bc
 763  8D5D 10 AF        	djnz 2B
 764  8D5F
 765  8D5F              ; Hemos gestionado todas las entidades.
 766  8D5F              ; ----- ----- -----
 767  8D5F
 768  8D5F CD 10 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 769  8D62 CD 27 8F     	call Ordena_tabla_de_impresion
 770  8D65 CD 85 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 771  8D68
 772  8D68              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 773  8D68              ; Hemos gestionado todas las unidades.
 774  8D68              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 775  8D68
 776  8D68              ;	ld hl,Ctrl_1
 777  8D68              ;	res 2,(hl)
 778  8D68
 779  8D68 CD CD 8E     	call Borra_diferencia
 780  8D6B
 781  8D6B 3A 24 8C     	ld a,(Ctrl_3)
 782  8D6E CB 5F        	bit 3,a
 783  8D70 20 04        	jr nz,Gestion_de_Amadeus
 784  8D72
 785  8D72 EB           	ex de,hl
 786  8D73 71           	ld (hl),c
 787  8D74 2C           	inc l
 788  8D75 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 789  8D76
 790  8D76              ;! GESTIONA AMADEUS !!!!!!!!!!
 791  8D76
 792  8D76              Gestion_de_Amadeus
 793  8D76
 794  8D76 21 24 8C     	ld hl,Ctrl_3
 795  8D79 CB 76        	bit 6,(hl)
 796  8D7B 28 13        	jr z,Amadeus_vivo
 797  8D7D
 798  8D7D              ; Amadeus ha sido destruido.
 799  8D7D              ; Decrementa (Temp_new_live).
 800  8D7D
 801  8D7D 21 38 8C     	ld hl,Temp_new_live
 802  8D80 35           	dec (hl)
 803  8D81 20 26        	jr nz,End_frame
 804  8D83
 805  8D83              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 806  8D83
 807  8D83 21 51 8C     	ld hl,Lives
 808  8D86 35           	dec (hl)
 809  8D87
 810  8D87              ;! Fin del juego
 811  8D87
 812  8D87 F3           	di
 813  8D88 28 FE        	jr z,$
 814  8D8A FB           	ei
 815  8D8B
 816  8D8B              ; Nueva nave.
 817  8D8B
 818  8D8B CD FE 8D     	call Reinicia_Amadeus
 819  8D8E 18 19        	jr End_frame
 820  8D90
 821  8D90              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 822  8D90
 823  8D90              Amadeus_vivo
 824  8D90
 825  8D90 3A 71 89     	ld a,(Impacto_Amadeus)
 826  8D93 A7           	and a
 827  8D94 C4 1D 92     	call nz, Genera_explosion_Amadeus
 828  8D97 20 10        	jr nz, End_frame
 829  8D99
 830  8D99 CD CA 91     	call Teclado
 831  8D9C
 832  8D9C 21 24 8C     	ld hl,Ctrl_3
 833  8D9F CB 6E        	bit 5,(hl)
 834  8DA1 28 06        	jr z,End_frame
 835  8DA3
 836  8DA3              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 837  8DA3
 838  8DA3 CD 73 8E     	call Change_Amadeus
 839  8DA6 CD 33 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 840  8DA9
 841  8DA9              End_frame
 842  8DA9
 843  8DA9              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 844  8DA9              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 845  8DA9
 846  8DA9 CD 63 9F     	call Genera_datos_de_impresion_disparos_Entidades
 847  8DAC CD 02 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 848  8DAF CD 55 A0     	call Calcula_bytes_pintado_disparos
 849  8DB2 CD 62 A0     	call Limpia_album_de_pintado_disparos
 850  8DB5
 851  8DB5              ; ------------ ------------- --------------
 852  8DB5
 853  8DB5 2A 06 8C     	ld hl,(Album_de_borrado)
 854  8DB8 22 1E 8C     	ld (Scanlines_album_SP),hl
 855  8DBB
 856  8DBB 21 24 8C     	ld hl,Ctrl_3
 857  8DBE CB C6        	set 0,(hl) 											; Indica Frame completo.
 858  8DC0 CB 9E        	res 3,(hl)
 859  8DC2 CB A6        	res 4,(hl)
 860  8DC4
 861  8DC4 AF           	xor a
 862  8DC5 D3 FE        	out ($fe),a
 863  8DC7
 864  8DC7 76           	halt
 865  8DC8
 866  8DC8              ; ----------------------------------------
 867  8DC8
 868  8DC8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 869  8DC8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 870  8DC8 CA C0 8C     	jp z,Main
 871  8DCB
 872  8DCB              ;------------------------------------------
 873  8DCB              ;
 874  8DCB              ;	14/09/24
 875  8DCB
 876  8DCB              Autoriza_disparo_de_entidades
 877  8DCB
 878  8DCB 3E 01        	ld a,1
 879  8DCD 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 880  8DD0
 881  8DD0 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 882  8DD3 32 42 8C     	ld (CLOCK_disparo_entidad),a
 883  8DD6
 884  8DD6 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 885  8DD9
 886  8DD9 7E           2 ld a,(hl)
 887  8DDA A7           	and a
 888  8DDB 28 08        	jr z,1F
 889  8DDD
 890  8DDD 32 3D 8C     	ld (DB_RND_disparos),a
 891  8DE0 23           	inc hl
 892  8DE1 22 3B 8C     	ld (RND_SP_Disparos),hl
 893  8DE4
 894  8DE4 C9           	ret
 895  8DE5
 896  8DE5 21 F6 88     1	ld hl,Numeros_aleatorios
 897  8DE8 22 3B 8C     	ld (RND_SP_Disparos),hl
 898  8DEB 18 EC        	jr 2B
 899  8DED
 900  8DED              ;------------------------------------------
 901  8DED              ;
 902  8DED              ;	14/09/24
 903  8DED              ;
 904  8DED              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 905  8DED
 906  8DED              Entidad_genera_disparo_si_procede
 907  8DED
 908  8DED 3A 3D 8C     	ld a,(DB_RND_disparos)
 909  8DF0 CB 4F        	bit 1,a
 910  8DF2 F5           	push af											; Guardamos FLAGS.
 911  8DF3
 912  8DF3 17           	rla
 913  8DF4 17           	rla
 914  8DF5
 915  8DF5 32 3D 8C     	ld (DB_RND_disparos),a
 916  8DF8
 917  8DF8 F1           	pop af
 918  8DF9 C4 9E 9F     	call nz,Genera_disparo_de_entidad_maldosa
 919  8DFC
 920  8DFC C9           	ret
 921  8DFD
 922  8DFD
 923  8DFD              ; RECARGA DE NUEVA OLEADA.
 924  8DFD
 925  8DFD              ;	ld a,(Contador_de_frames)
 926  8DFD              ;	ld b,a
 927  8DFD              ;	ld a,(Activa_recarga_cajas)
 928  8DFD              ;	cp b
 929  8DFD              ;	jr z,20F
 930  8DFD
 931  8DFD              ;	ld hl,Ctrl_1
 932  8DFD              ;	set 4,(hl)
 933  8DFD              ;	jp Main
 934  8DFD
 935  8DFD              ;20 ld hl,Ctrl_1
 936  8DFD              ;	res 4,(hl)
 937  8DFD
 938  8DFD              ;	ld a,(Contador_de_frames)
 939  8DFD
 940  8DFD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 941  8DFD              ;! _ IMPREDECIBLE !!!!
 942  8DFD
 943  8DFD              ;	add 10
 944  8DFD              ;	ld (Clock_next_entity),a
 945  8DFD
 946  8DFD              ;	jp 4B
 947  8DFD
 948  8DFD C9           	ret
 949  8DFE
 950  8DFE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 951  8DFE              ;
 952  8DFE              ;	16/11/23
 953  8DFE
 954  8DFE              ;;Gestiona_Amadeus
 955  8DFE
 956  8DFE              ;! Activa/desactiva impacto con Amadeus.
 957  8DFE
 958  8DFE              ;	ld a,(Impacto)
 959  8DFE              ;	and a
 960  8DFE              ;	jr nz,2F
 961  8DFE
 962  8DFE              ;;	call Mov_Amadeus
 963  8DFE
 964  8DFE              ;;2 ld a,(Ctrl_0)
 965  8DFE              ;;	bit 4,a
 966  8DFE              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 967  8DFE
 968  8DFE              ;;	call Guarda_foto_entidad_a_pintar
 969  8DFE              ;;	call Guarda_datos_de_borrado_Amadeus
 970  8DFE
 971  8DFE              ;;1 ld hl,Ctrl_0
 972  8DFE              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 973  8DFE
 974  8DFE              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 975  8DFE
 976  8DFE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 977  8DFE
 978  8DFE              ;	call Calcula_numero_de_disparotes
 979  8DFE
 980  8DFE              ;;	ret
 981  8DFE
 982  8DFE              ; -----------------------------
 983  8DFE              ;
 984  8DFE              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 985  8DFE              ;
 986  8DFE              ;	INPUTS: B a de estar a "0".
 987  8DFE
 988  8DFE              ;Prepara_Borra_sprites
 989  8DFE
 990  8DFE              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 991  8DFE              ;	ld a,l
 992  8DFE              ;	ret z
 993  8DFE
 994  8DFE              ;	srl a
 995  8DFE
 996  8DFE              ;2 sub 16
 997  8DFE              ;	jr z,1F
 998  8DFE              ;	inc b
 999  8DFE              ;	jr 2B
1000  8DFE
1001  8DFE              ;1 inc b
1002  8DFE
1003  8DFE              ;	exx
1004  8DFE              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1005  8DFE              ;	exx
1006  8DFE
1007  8DFE              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1008  8DFE              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1009  8DFE
1010  8DFE              ;	ret
1011  8DFE
1012  8DFE              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1013  8DFE              ;
1014  8DFE              ;	24/07/24
1015  8DFE
1016  8DFE              Reinicia_Amadeus
1017  8DFE
1018  8DFE              ;	Reinicia posición y estado.
1019  8DFE
1020  8DFE 21 CF 50     	ld hl,$50cf
1021  8E01 22 72 89     	ld (p.imp.amadeus),hl
1022  8E04 21 F0 E0     	ld hl,$e0f0
1023  8E07 22 74 89     	ld (Pamm_Amadeus),hl
1024  8E0A 21 3D 00     	ld hl,$003d
1025  8E0D 22 76 89     	ld (Comm_Amadeus),hl
1026  8E10
1027  8E10              ;	limpiamos el álbum de borrado.
1028  8E10
1029  8E10 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1030  8E13
1031  8E13 AF           	xor a
1032  8E14 77           	ld (hl),a
1033  8E15
1034  8E15 E5           	push hl
1035  8E16 D1           	pop de
1036  8E17 13           	inc de
1037  8E18
1038  8E18 01 23 00     	ld bc,35
1039  8E1B ED B0        	ldir
1040  8E1D
1041  8E1D CD 33 90     	call Genera_datos_de_impresion_Amadeus
1042  8E20
1043  8E20              ;	Reinicia temporizaciones.
1044  8E20
1045  8E20 CD 10 91     	call Inicia_Shield
1046  8E23
1047  8E23 3E 5A        	ld a,90
1048  8E25 32 4E 8C     	ld (Shield),a
1049  8E28
1050  8E28 3E 64        	ld a,100
1051  8E2A 32 38 8C     	ld (Temp_new_live),a
1052  8E2D
1053  8E2D              ; 	Restauramos el FLAG: Amadeus vivo.
1054  8E2D
1055  8E2D 21 24 8C     	ld hl,Ctrl_3
1056  8E30 CB B6        	res 6,(hl)
1057  8E32
1058  8E32              ;	Fuerza la impresión de la nave en el siguiente frame.
1059  8E32
1060  8E32 21 24 8C      	ld hl,Ctrl_3
1061  8E35 CB EE        	set 5,(hl)
1062  8E37
1063  8E37 C9           	ret
1064  8E38
1065  8E38              ; --------------------------------------------------------------------------------------------------------------
1066  8E38              ;
1067  8E38              ;	12/05/24
1068  8E38
1069  8E38 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1070  8E3B CB 27        	sla a
1071  8E3D 32 BE 8B     	ld (Velocidad),a
1072  8E40 E6 10        	and $10
1073  8E42 C8           	ret z
1074  8E43
1075  8E43              ; Restaura (Velocidad) a razón del nº de vueltas.
1076  8E43
1077  8E43 3A B6 8B     	ld a,(Contador_de_vueltas)
1078  8E46 CB 2F        	sra a
1079  8E48 CB 2F        	sra a
1080  8E4A 32 BE 8B     	ld (Velocidad),a
1081  8E4D
1082  8E4D 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1083  8E50 23           	inc hl
1084  8E51 23           	inc hl
1085  8E52 23           	inc hl
1086  8E53 23           	inc hl
1087  8E54 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1088  8E57
1089  8E57 C9           	ret
1090  8E58
1091  8E58              ; --------------------------------------------------------------------------------------------------------------
1092  8E58              ;
1093  8E58              ;	25/08/24
1094  8E58
1095  8E58              Change
1096  8E58
1097  8E58 3A 1B 8C     	ld a,(Switch)
1098  8E5B EE 01        	xor 1
1099  8E5D 32 1B 8C     	ld (Switch),a
1100  8E60 2A 04 8C     	ld hl,(Album_de_pintado)
1101  8E63 ED 5B 06 8C  	ld de,(Album_de_borrado)
1102  8E67 EB           	ex de,hl
1103  8E68 22 04 8C     	ld (Album_de_pintado),hl
1104  8E6B 22 1E 8C     	ld (Scanlines_album_SP),hl
1105  8E6E ED 53 06 8C  	ld (Album_de_borrado),de
1106  8E72 C9           	ret
1107  8E73
1108  8E73              Change_Amadeus
1109  8E73
1110  8E73 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1111  8E76 ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1112  8E7A EB           	ex de,hl
1113  8E7B 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1114  8E7E ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1115  8E82 C9           	ret
1116  8E83
1117  8E83              Change_Disparos
1118  8E83
1119  8E83 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1120  8E86 ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1121  8E8A EB           	ex de,hl
1122  8E8B 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1123  8E8E ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1124  8E92 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1125  8E95
1126  8E95 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1127  8E98 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1128  8E9B
1129  8E9B C9           	ret
1130  8E9C
1131  8E9C              ; ------------------------------------
1132  8E9C              ;
1133  8E9C              ; 1/05/24
1134  8E9C
1135  8E9C              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1136  8E9C              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1137  8E9C
1138  8E9C              ;	DESTRUYE: HL,DE,A
1139  8E9C              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1140  8E9C
1141  8E9C              ;	Variables implicadas: (RND_SP).
1142  8E9C
1143  8E9C              Extrae_numero_aleatorio_y_avanza
1144  8E9C
1145  8E9C 21 00 89     	ld hl,Tabla_de_pintado
1146  8E9F EB           	ex de,hl
1147  8EA0 2A 39 8C     	ld hl,(RND_SP)
1148  8EA3 EB           	ex de,hl
1149  8EA4 A7           	and a
1150  8EA5 ED 52        	sbc hl,de
1151  8EA7
1152  8EA7 2A 39 8C     	ld hl,(RND_SP)
1153  8EAA 20 06        	jr nz,1F
1154  8EAC
1155  8EAC              ; Sitúa HL al principio de la tabla de nº aleatorios.
1156  8EAC
1157  8EAC 21 F6 88     	ld hl,Numeros_aleatorios
1158  8EAF 22 39 8C     	ld (RND_SP),HL
1159  8EB2
1160  8EB2              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1161  8EB2
1162  8EB2 7E           1 ld a,(hl)
1163  8EB3 23           	inc hl
1164  8EB4 22 39 8C     	ld (RND_SP),hl
1165  8EB7 C9           	ret
1166  8EB8
1167  8EB8              ; ------------------------------------
1168  8EB8              ;
1169  8EB8              ; 1/05/24
1170  8EB8
1171  8EB8              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1172  8EB8              ; (1 a 4 segundos).
1173  8EB8              ; Actualizamos (Clock_next_entity) con A.
1174  8EB8
1175  8EB8              ;	DESTRUYE: A y B.
1176  8EB8              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1177  8EB8              ;			 Actualiza (Clock_next_entity) con A.
1178  8EB8
1179  8EB8              ;	Variables implicadas: (Clock_next_entity).
1180  8EB8
1181  8EB8              ; Notas:
1182  8EB8
1183  8EB8              ; 	$32 1 seg.
1184  8EB8              ; 	$64 2 seg.
1185  8EB8              ; 	$96 3 seg.
1186  8EB8              ; 	$c8 4 seg.
1187  8EB8              ; 	$fa 5 seg.
1188  8EB8
1189  8EB8              ; $ffff 1310,7 seg, 22 minutos.
1190  8EB8
1191  8EB8              ;	$0100  5 seg. aproximadamente.
1192  8EB8              ;	$0200 10 seg. aproximadamente.
1193  8EB8              ;	$0300 15 seg. aproximadamente.
1194  8EB8              ;	$0400 20 seg. aproximadamente.
1195  8EB8              ;	$0500 25 seg. aproximadamente.
1196  8EB8              ;	$0600 30 seg. aproximadamente.
1197  8EB8
1198  8EB8              Define_Clock_next_entity
1199  8EB8
1200  8EB8 FE 34        	cp $34
1201  8EBA 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1202  8EBC
1203  8EBC              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1204  8EBC
1205  8EBC 4F           3 ld c,a
1206  8EBD 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1207  8EBF 2A 78 5C     	ld hl,(FRAMES)
1208  8EC2 A7           	and a
1209  8EC3 ED 4A        	adc hl,bc
1210  8EC5 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1211  8EC8 C9           	ret
1212  8EC9
1213  8EC9 3E 34        1 ld a,$34
1214  8ECB 18 EF        	jr 3B
1215  8ECD
1216  8ECD              ; ------------------------------------
1217  8ECD              ;
1218  8ECD              ; 18/03/24
1219  8ECD
1220  8ECD              Borra_diferencia
1221  8ECD
1222  8ECD ED 4B 1E 8C  	ld bc,(Scanlines_album_SP)
1223  8ED1
1224  8ED1 3A 1B 8C     	ld a,(Switch)
1225  8ED4 A7           	and a
1226  8ED5 28 08        	jr z,2F
1227  8ED7
1228  8ED7 2A 19 8C     	ld hl,(Techo_Scanlines_album_2)
1229  8EDA 11 19 8C     	ld de,Techo_Scanlines_album_2
1230  8EDD 18 06        	jr 3F
1231  8EDF
1232  8EDF 2A 17 8C     2 ld hl,(Techo_Scanlines_album)
1233  8EE2 11 17 8C     	ld de,Techo_Scanlines_album
1234  8EE5
1235  8EE5              ; Diferencia.
1236  8EE5
1237  8EE5 ED 42        3 sbc hl,bc
1238  8EE7
1239  8EE7 C8           	ret z
1240  8EE8 D8           	ret c
1241  8EE9
1242  8EE9              ; Nuevo techo, (más bajo que el anterior).
1243  8EE9              ; Fijamos nuevo techo y borramos bytes sobrantes.
1244  8EE9
1245  8EE9 EB           	ex de,hl
1246  8EEA
1247  8EEA 71           	ld (hl),c
1248  8EEB 2C           	inc l
1249  8EEC 70           	ld (hl),b
1250  8EED
1251  8EED AF           	xor a
1252  8EEE 43           	ld b,e
1253  8EEF
1254  8EEF 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1255  8EF2
1256  8EF2 77           1 ld (hl),a
1257  8EF3 23           	inc hl
1258  8EF4 10 FC        	djnz 1B
1259  8EF6
1260  8EF6              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1261  8EF6
1262  8EF6 21 24 8C     	ld hl,Ctrl_3
1263  8EF9 CB DE        	set 3,(hl)
1264  8EFB
1265  8EFB C9           	ret
1266  8EFC
1267  8EFC              ; --------------------------------------------------------------------------------------------------------------
1268  8EFC              ;
1269  8EFC              ;	26/3/24
1270  8EFC
1271  8EFC              Recauda_informacion_de_entidad_en_curso
1272  8EFC
1273  8EFC              ; Almacena la Coordenada Y de la entidad en curso.
1274  8EFC
1275  8EFC              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1276  8EFC
1277  8EFC 3A B5 8B     	ld a,(Coordenada_y)
1278  8EFF 2A 20 8C     	ld hl,(India_SP)
1279  8F02 77           	ld (hl),a
1280  8F03 2C           	inc l
1281  8F04
1282  8F04              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1283  8F04
1284  8F04 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
1285  8F08
1286  8F08 73           	ld (hl),e
1287  8F09 2C           	inc l
1288  8F0A 72           	ld (hl),d
1289  8F0B 2C           	inc l
1290  8F0C
1291  8F0C 22 20 8C     	ld (India_SP),hl
1292  8F0F
1293  8F0F C9           	ret
1294  8F10
1295  8F10              ; --------------------------------------------------------------------------------------------------------------
1296  8F10              ;
1297  8F10              ;	27/03/24
1298  8F10              ;
1299  8F10
1300  8F10              Inicializa_India_y_limpia_Tabla_de_impresion
1301  8F10
1302  8F10 2A 20 8C     	ld hl,(India_SP)
1303  8F13 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1304  8F16
1305  8F16 79           	ld a,c
1306  8F17 95           	sub l
1307  8F18 28 06        	jr z,2F
1308  8F1A 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1309  8F1B              ;														; _ y pasamos a inicializar (India_SP).
1310  8F1B AF           	xor a
1311  8F1C
1312  8F1C 77           1 ld (hl),a
1313  8F1D 2C           	inc l
1314  8F1E 10 FC        	djnz 1B												; Limpia Tabla.
1315  8F20
1316  8F20 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1317  8F23 22 20 8C     	ld (India_SP),hl
1318  8F26
1319  8F26 C9           	ret
1320  8F27
1321  8F27              ; --------------------------------------------------------------------------------------------------------------
1322  8F27              ;
1323  8F27              ;	31/3/24
1324  8F27
1325  8F27              Ordena_tabla_de_impresion
1326  8F27
1327  8F27              ; 5794 T/states.
1328  8F27              ; 6278 T/states.
1329  8F27              ; 5310 T/states.
1330  8F27
1331  8F27              ; Inicializamos punteros (India_SP) e (India_2_SP).
1332  8F27              ; Inicializamos contador de comparaciones, [C].
1333  8F27              ; Cargamos los registros A y B para efectuar comparación.
1334  8F27
1335  8F27 FD 2E 00     	ld iyl,0
1336  8F2A
1337  8F2A 3A FB 8B     	ld a,(Entidades_en_curso)
1338  8F2D FE 04        	cp 4 	;	4
1339  8F2F D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1340  8F30
1341  8F30 3D           	dec a
1342  8F31 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1343  8F32 51           	ld d,c 										; Copia de respaldo.
1344  8F33
1345  8F33 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1346  8F34
1347  8F34 21 03 89     	ld hl,Tabla_de_pintado+3
1348  8F37 46           	ld b,(hl)
1349  8F38 22 22 8C     	ld (India_2_SP),hl
1350  8F3B
1351  8F3B B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1352  8F3C DC 64 8F     	call c, Avanza_India_2_SP
1353  8F3F CC 64 8F     	call z, Avanza_India_2_SP
1354  8F42
1355  8F42 FD 2D        	dec iyl
1356  8F44 28 18        	jr z,2F
1357  8F46
1358  8F46
1359  8F46              ; --------------------------------------------------------------------------------------------------------------
1360  8F46              ;
1361  8F46              ;	7/4/24
1362  8F46
1363  8F46              Trueque
1364  8F46
1365  8F46              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1366  8F46              ;  			A contiene en nº de fila de (India_SP).
1367  8F46              ;			HL contiene (India_2_SP).
1368  8F46
1369  8F46 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1370  8F47 E5           	push hl										; Preservo (India_2_SP).
1371  8F48
1372  8F48 ED 5B 20 8C  	ld de,(India_SP)
1373  8F4C EB           	ex de,hl
1374  8F4D 70           	ld (hl),b
1375  8F4E 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1376  8F4F
1377  8F4F CD 90 8F     	call Intercambia_1_byte
1378  8F52 CD 90 8F     	call Intercambia_1_byte
1379  8F55
1380  8F55
1381  8F55              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1382  8F55              ; Recuperamos (India_2_SP) en HL.
1383  8F55
1384  8F55 2A 20 8C     	ld hl,(India_SP)
1385  8F58 7E           	ld a,(hl)
1386  8F59
1387  8F59 E1           	pop hl
1388  8F5A D1           	pop de
1389  8F5B
1390  8F5B              ; --------------------------------------------------------------------------------------------------------------
1391  8F5B
1392  8F5B CD 64 8F     	call Avanza_India_2_SP
1393  8F5E
1394  8F5E 14           2 inc d
1395  8F5F 15           	dec d
1396  8F60 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1397  8F61 18 D8        	jr 1B
1398  8F63
1399  8F63 C9           	ret
1400  8F64
1401  8F64              ; ----- ----- ----- ----- -----
1402  8F64
1403  8F64              Avanza_India_2_SP
1404  8F64
1405  8F64 0D           	dec c
1406  8F65 28 0A        	jr z,Avanza_punteros_indios
1407  8F67
1408  8F67 FD 2C        	inc iyl
1409  8F69
1410  8F69 2C           	inc l
1411  8F6A 2C           	inc l
1412  8F6B 2C           	inc l
1413  8F6C
1414  8F6C 46           	ld b,(hl)
1415  8F6D 22 22 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1416  8F70
1417  8F70 C9           	ret
1418  8F71
1419  8F71              ; ----- ----- ----- ----- -----
1420  8F71
1421  8F71              Avanza_punteros_indios
1422  8F71
1423  8F71 15           	dec d
1424  8F72 28 15        	jr z,Prepara_salida
1425  8F74
1426  8F74 4A           	ld c,d
1427  8F75
1428  8F75 2A 20 8C     	ld hl,(India_SP)
1429  8F78 2C           	inc l
1430  8F79 2C           	inc l
1431  8F7A 2C           	inc l
1432  8F7B 7E           	ld a,(hl)
1433  8F7C 22 20 8C     	ld (India_SP),hl
1434  8F7F
1435  8F7F 2C           	inc l
1436  8F80 2C           	inc l
1437  8F81 2C           	inc l
1438  8F82 46           	ld b,(hl)
1439  8F83 22 22 8C     	ld (India_2_SP),hl
1440  8F86
1441  8F86 FD 2C        	inc iyl
1442  8F88
1443  8F88 C9           	ret
1444  8F89
1445  8F89              Prepara_salida
1446  8F89
1447  8F89 21 00 89     	ld hl,Tabla_de_pintado
1448  8F8C 22 20 8C     	ld (India_SP),hl
1449  8F8F C9           	ret
1450  8F90
1451  8F90
1452  8F90 2C           Intercambia_1_byte inc l
1453  8F91 1C           	inc e
1454  8F92 46           	ld b,(hl)
1455  8F93 1A           	ld a,(de)
1456  8F94 EB           	ex de,hl
1457  8F95 70           	ld (hl),b
1458  8F96 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1459  8F97 C9           	ret
1460  8F98
1461  8F98              ; -----------------------------------------------------------------------------------
1462  8F98              ;
1463  8F98              ;	20/01/24
1464  8F98              ;
1465  8F98              ;
1466  8F98
1467  8F98              Construye_movimientos_masticados_entidad
1468  8F98
1469  8F98 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1470  8F9B E5           	push hl
1471  8F9C CD DF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1472  8F9F              ;															; _ el (Contador_de_mov_masticados).
1473  8F9F CD A8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1474  8FA2              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1475  8FA2 CD DF 99     	call Recompone_posicion_inicio
1476  8FA5
1477  8FA5 CD 0F 97     1 call Draw
1478  8FA8 CD C4 8F     	call Guarda_movimiento_masticado
1479  8FAB
1480  8FAB CD 8C 9D     	call Movimiento
1481  8FAE
1482  8FAE 3A 24 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1483  8FB1 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1484  8FB3 28 F0        	jr z,1B
1485  8FB5
1486  8FB5              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1487  8FB5              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1488  8FB5
1489  8FB5 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1490  8FB6 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1491  8FB9
1492  8FB9              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1493  8FB9
1494  8FB9 CD F0 9E     	call Situa_en_contador_general_de_mov_masticados
1495  8FBC
1496  8FBC              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1497  8FBC              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1498  8FBC
1499  8FBC ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1500  8FC0
1501  8FC0 71           	ld (hl),c
1502  8FC1 23           	inc hl
1503  8FC2 70           	ld (hl),b
1504  8FC3
1505  8FC3 C9           	ret
1506  8FC4
1507  8FC4              ; -----------------------------------------------------------------------------------
1508  8FC4              ;
1509  8FC4              ;	28/12/23
1510  8FC4              ;
1511  8FC4              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1512  8FC4              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1513  8FC4
1514  8FC4              Guarda_movimiento_masticado
1515  8FC4
1516  8FC4 ED 73 00 8C  	ld (Stack),sp
1517  8FC8 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1518  8FCC
1519  8FCC DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1520  8FCE FD E5            push iy 												; Pushea Puntero_objeto.
1521  8FD0
1522  8FD0 ED 7B 00 8C      ld sp,(Stack)
1523  8FD4
1524  8FD4 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1525  8FD7 23           	inc hl
1526  8FD8 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1527  8FDB
1528  8FDB CD DF 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1529  8FDE              ;															; _ el (Contador_de_mov_masticados).
1530  8FDE C9               ret
1531  8FDF
1532  8FDF              ; --------------------------------------------------------------------------------------------------------------
1533  8FDF              ;
1534  8FDF              ;	12/1/24
1535  8FDF              ;
1536  8FDF              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1537  8FDF
1538  8FDF              Actualiza_Puntero_de_almacen_de_mov_masticados
1539  8FDF
1540  8FDF 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1541  8FE2 01 04 00     	ld bc,4
1542  8FE5 A7           	and a
1543  8FE6 ED 4A        	adc hl,bc
1544  8FE8 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1545  8FEB C9           	ret
1546  8FEC
1547  8FEC              ; --------------------------------------------------------------------------------------------------------------
1548  8FEC              ;
1549  8FEC              ;	24/03/24
1550  8FEC              ;
1551  8FEC              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1552  8FEC              ;
1553  8FEC              ;	IX contiene el puntero de impresión.
1554  8FEC              ;	DE contiene (Puntero_objeto).
1555  8FEC
1556  8FEC
1557  8FEC              Cargamos_registros_con_mov_masticado
1558  8FEC
1559  8FEC ED 73 00 8C  	ld (Stack),sp
1560  8FF0 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1561  8FF4
1562  8FF4 D1           	pop de 															; DE contiene Puntero_objeto
1563  8FF5 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1564  8FF7
1565  8FF7 ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1566  8FFB ED 7B 00 8C  	ld sp,(Stack)
1567  8FFF
1568  8FFF 7B           	ld a,e
1569  9000 82           	add d															; Comprueba si ya no hay datos en el almacén.
1570  9001
1571  9001 CC 98 93     	call z,Reinicia_entidad_maliciosa
1572  9004
1573  9004 C9           	ret
1574  9005
1575  9005              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1576  9005              ;
1577  9005              ;	22/7/24
1578  9005
1579  9005              Cargamos_registros_con_explosion
1580  9005
1581  9005
1582  9005 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1583  9008 CD A2 90     	call Extrae_address
1584  900B
1585  900B 5D           	ld e,l
1586  900C 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1587  900D
1588  900D DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1589  9011
1590  9011 C9           	ret
1591  9012
1592  9012
1593  9012              Cargamos_registros_con_explosion_Amadeus
1594  9012
1595  9012 2A 74 89     	ld hl,(Pamm_Amadeus)
1596  9015 CD A2 90     	call Extrae_address
1597  9018
1598  9018 5D           	ld e,l
1599  9019 54           	ld d,h
1600  901A
1601  901A DD 2A 72 89  	ld ix,(p.imp.amadeus)
1602  901E
1603  901E C9           	ret
1604  901F
1605  901F              ; --------------------------------------------------------------------------------------------------------------
1606  901F              ;
1607  901F              ;	17/06/24
1608  901F              ;
1609  901F              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1610  901F              ;
1611  901F              ;	IX contiene el puntero de impresión.
1612  901F              ;	DE contiene (Puntero_objeto).
1613  901F
1614  901F
1615  901F              Cargamos_registros_con_mov_masticado_Amadeus
1616  901F
1617  901F ED 73 00 8C  	ld (Stack),sp
1618  9023 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1619  9027 D1           	pop de 															; DE contiene Puntero_objeto
1620  9028 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1621  902A DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1622  902E ED 7B 00 8C  	ld sp,(Stack)
1623  9032 C9           	ret
1624  9033
1625  9033              ; ---------------------------------------------------------------------------------------------------------------------
1626  9033              ;
1627  9033              ;	18/6/24
1628  9033              ;
1629  9033              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1630  9033
1631  9033              Genera_datos_de_impresion_Amadeus
1632  9033
1633  9033 3A 71 89     	ld a,(Impacto_Amadeus)
1634  9036 A7           	and a
1635  9037 20 03        	jr nz,1F
1636  9039
1637  9039              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1638  9039              ; _apuntando a la correspondiente explosión.
1639  9039
1640  9039 CD 1F 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1641  903C
1642  903C DD 7D        1 ld a,ixl
1643  903E E6 1F        	and $1f
1644  9040 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1645  9043
1646  9043 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1647  9046 E5           	push hl
1648  9047
1649  9047 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1650  904A 22 1E 8C     	ld (Scanlines_album_SP),hl
1651  904D
1652  904D CD ED 94     	call Genera_datos_de_impresion
1653  9050
1654  9050 E1           	pop hl
1655  9051 22 1E 8C     	ld (Scanlines_album_SP),hl
1656  9054
1657  9054 C9           	ret
1658  9055
1659  9055              ; ---------------------------------------------------------------------------------------------------------------------
1660  9055              ;
1661  9055              ;	13/03/24
1662  9055              ;
1663  9055              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1664  9055
1665  9055              Inicia_albumes_de_lineas
1666  9055
1667  9055 21 00 80     	ld hl,Scanlines_album
1668  9058 22 04 8C     	ld (Album_de_pintado),hl
1669  905B 22 1E 8C     	ld (Scanlines_album_SP),hl
1670  905E
1671  905E 21 1A 81     	ld hl,Scanlines_album_2
1672  9061 22 06 8C     	ld (Album_de_borrado),hl
1673  9064
1674  9064 C9           	ret
1675  9065
1676  9065              Inicia_albumes_de_lineas_Amadeus
1677  9065
1678  9065 21 34 82     	ld hl,Amadeus_scanlines_album
1679  9068 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1680  906B 21 58 82     	ld hl,Amadeus_scanlines_album_2
1681  906E 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1682  9071
1683  9071 C9           	ret
1684  9072
1685  9072              Inicia_albumes_de_disparos
1686  9072
1687  9072 21 7C 82     	ld hl,Disparos_scanlines_album
1688  9075 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1689  9078 21 B8 82     	ld hl,Disparos_scanlines_album_2
1690  907B 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1691  907E
1692  907E 21 7C 82     	ld hl,Disparos_scanlines_album
1693  9081 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1694  9084
1695  9084 C9           	ret
1696  9085
1697  9085              ; ---------------------------------------------------------------------------------------------------------------------
1698  9085              ;
1699  9085              ; 8/1/23
1700  9085              ;
1701  9085              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1702  9085              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1703  9085              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1704  9085
1705  9085              ; Destruye HL y DE !!!!!
1706  9085
1707  9085              Inicia_punteros_de_cajas
1708  9085
1709  9085 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1710  9088 CD A2 90         call Extrae_address
1711  908B 22 F3 8B         ld (Puntero_store_caja),hl
1712  908E 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1713  9091 22 F7 8B     	ld (Indice_restore_caja),hl
1714  9094 CD A2 90     	call Extrae_address
1715  9097 22 F5 8B     	ld (Puntero_restore_caja),hl
1716  909A C9               ret
1717  909B
1718  909B              ; *************************************************************************************************************************************************************
1719  909B              ;
1720  909B              ; 8/1/23
1721  909B              ;
1722  909B              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1723  909B
1724  909B 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1725  909E 22 27 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1726  90A1 C9           	ret
1727  90A2
1728  90A2              ; *************************************************************************************************************************************************************
1729  90A2              ;
1730  90A2              ; 20/10/22
1731  90A2              ;
1732  90A2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1733  90A2              ;
1734  90A2              ; Destruye el puntero y DE !!!!!
1735  90A2
1736  90A2 5E           Extrae_address ld e,(hl)
1737  90A3 23           	inc hl
1738  90A4 56           	ld d,(hl)
1739  90A5 2B           	dec hl
1740  90A6 EB           	ex de,hl
1741  90A7 C9           	ret
1742  90A8
1743  90A8              ; *************************************************************************************************************************************************************
1744  90A8              ;
1745  90A8              ;	20/1/24
1746  90A8              ;
1747  90A8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1748  90A8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1749  90A8              ;
1750  90A8              ;   Destruye HL y BC !!!!!,
1751  90A8              ;
1752  90A8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1753  90A8              ;					"0" ..... Izquierda.
1754  90A8
1755  90A8              Inicia_Puntero_objeto
1756  90A8
1757  90A8 3A D2 8B     	ld a,(Cuad_objeto)
1758  90AB E6 01        	and 1
1759  90AD F5           	push af
1760  90AE CC CA 90     	call z,Inicia_puntero_objeto_izq
1761  90B1 F1           	pop af
1762  90B2 C8           	ret z
1763  90B3 CD B7 90     	call Inicia_puntero_objeto_der
1764  90B6 C9           	ret
1765  90B7
1766  90B7              ; Arrancamos desde la parte izquierda de la pantalla.
1767  90B7              ; Iniciamos (Indice_Sprite_der).
1768  90B7
1769  90B7 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1770  90BA 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1771  90BD CD A2 90     	call Extrae_address
1772  90C0 22 C5 8B     	ld (Puntero_objeto),hl
1773  90C3
1774  90C3 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1775  90C6 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1776  90C9 C9           	ret
1777  90CA
1778  90CA              ; Arrancamos desde la parte derecha de la pantalla.
1779  90CA              ; Iniciamos (Indice_Sprite_izq).
1780  90CA
1781  90CA 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1782  90CD 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1783  90D0 CD A2 90     	call Extrae_address
1784  90D3 22 C5 8B     	ld (Puntero_objeto),hl
1785  90D6
1786  90D6 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1787  90D9 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1788  90DC C9           	ret
1789  90DD
1790  90DD              ; **************************************************************************************************
1791  90DD              ;
1792  90DD              ;	06/07/24
1793  90DD              ;
1794  90DD              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1795  90DD
1796  90DD              Restore_entidad
1797  90DD
1798  90DD 2A F3 8B     	ld hl,(Puntero_store_caja)
1799  90E0 7E           	ld a,(hl)
1800  90E1 A7           	and a
1801  90E2 CC F0 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1802  90E5 28 F6        	jr z,Restore_entidad
1803  90E7
1804  90E7 11 B3 8B     	ld de,Bandeja_DRAW
1805  90EA 01 0C 00     	ld bc,12
1806  90ED ED B0        	ldir
1807  90EF C9           	ret
1808  90F0
1809  90F0              ; **************************************************************************************************
1810  90F0              ;
1811  90F0              ;	08/05/23
1812  90F0              ;
1813  90F0              ;	Incrementamos los dos punteros de entidades. (+1).
1814  90F0
1815  90F0              Incrementa_punteros_de_cajas
1816  90F0
1817  90F0 2A F5 8B     	ld hl,(Puntero_restore_caja)
1818  90F3 22 F3 8B     	ld (Puntero_store_caja),hl
1819  90F6 2A F7 8B     	ld hl,(Indice_restore_caja)
1820  90F9 23           	inc hl
1821  90FA 23           	inc hl
1822  90FB 22 F7 8B     	ld (Indice_restore_caja),hl
1823  90FE CD A2 90         call Extrae_address
1824  9101 22 F5 8B         ld (Puntero_restore_caja),hl
1825  9104 C9               ret
1826  9105
1827  9105              ; -----------------------------------------------------------
1828  9105
1829  9105              ; Teclado.
1830  9105
1831  9105 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1832  9107 DB FE        	in a,($fe)
1833  9109 E6 01        	and $01
1834  910B 28 02        	jr z,1f
1835  910D 18 F6        	jr Pulsa_ENTER
1836  910F C9           1 ret
1837  9110
1838  9110              ; **************************************************************************************************
1839  9110              ;
1840  9110              ; Temporización.
1841  9110
1842  9110              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1843  9110              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1844  9110              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1845  9110              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1846  9110
1847  9110              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1848  9110              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1849  9110              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1850  9110
1851  9110              ; A partir de $4f61 no hace falta DELAY.
1852  9110
1853  9110              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1854  9110
1855  9110              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1856  9110              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1857  9110              ;	LD A,B
1858  9110              ;	AND A
1859  9110              ;	JR NZ,wait
1860  9110              ;	RET
1861  9110
1862  9110              ; ---------------------------------------------------------------------------------------------------------------
1863  9110              ;
1864  9110              ;	13/07/24
1865  9110              ;
1866  9110
1867  9110              Inicia_Shield
1868  9110
1869  9110 21 48 8C     	ld hl,Datos_Shield
1870  9113 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1871  9116
1872  9116 7E           	ld a,(hl)
1873  9117 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1874  911A
1875  911A 3E 01        	ld a,1
1876  911C 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1877  911F
1878  911F C9           	ret
1879  9120
1880  9120              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1881  9120              ;
1882  9120              ;	4/6/24
1883  9120              ;
1884  9120              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1885  9120              ;
1886  9120              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1887  9120              ;
1888  9120
1889  9120              Actualiza_pantalla
1890  9120
1891  9120 3E 02        	ld a,2
1892  9122 D3 FE        	out ($fe),a
1893  9124
1894  9124 3A 24 8C     	ld a,(Ctrl_3)
1895  9127 CB 57        	bit 2,a
1896  9129 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1897  912B
1898  912B              Borrando_entidades
1899  912B
1900  912B 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1901  912E CD A2 90     	call Extrae_address
1902  9131 24           	inc h
1903  9132 25           	dec h
1904  9133 28 05        	jr z,Pintando_entidades
1905  9135 CD EC 95     	call Pinta_Sprites
1906  9138 18 F1        	jr Borrando_entidades
1907  913A
1908  913A              Pintando_entidades
1909  913A
1910  913A 2A 20 8C     	ld hl,(India_SP)
1911  913D 2C           	inc l
1912  913E CD A2 90     	call Extrae_address
1913  9141 24           	inc h
1914  9142 25           	dec h
1915  9143 28 0E        	jr z,Ejecuta_escudo
1916  9145 1C           	inc e
1917  9146 1C           	inc e
1918  9147 ED 53 20 8C  	ld (India_SP),de
1919  914B CD A2 90     	call Extrae_address
1920  914E CD EC 95     	call Pinta_Sprites
1921  9151 18 E7        	jr Pintando_entidades
1922  9153
1923  9153              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1924  9153
1925  9153              Ejecuta_escudo
1926  9153
1927  9153 3A 4E 8C     	ld a,(Shield)
1928  9156 A7           	and a
1929  9157 20 2F        	jr nz,Aplica_Shield
1930  9159
1931  9159              Borrando_Amadeus
1932  9159
1933  9159 21 24 8C     	ld hl,Ctrl_3
1934  915C CB 6E        	bit 5,(hl)
1935  915E 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1936  9160
1937  9160 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1938  9163 CD A2 90     	call Extrae_address
1939  9166 24           	inc h
1940  9167 25           	dec h
1941  9168 28 03        	jr z,Pintando_Amadeus
1942  916A CD EC 95     	call Pinta_Sprites
1943  916D
1944  916D              Pintando_Amadeus
1945  916D
1946  916D 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1947  9170 CD A2 90     	call Extrae_address
1948  9173 24           	inc h
1949  9174 25           	dec h
1950  9175 28 03        	jr z,1F
1951  9177 CD EC 95     	call Pinta_Sprites
1952  917A
1953  917A              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1954  917A
1955  917A 21 24 8C     1 ld hl,Ctrl_3
1956  917D CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1957  917F CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1958  9181 CB AE        	res 5,(hl)
1959  9183
1960  9183 3E 01        	ld a,1												; Borde azul.
1961  9185 D3 FE        	out ($fe),a
1962  9187
1963  9187 C9           	ret
1964  9188
1965  9188              Aplica_Shield
1966  9188
1967  9188              ;	Bit 1 "1" (Shield_3) Sólo borra.
1968  9188              ;		  "0"     ""     Borra/Pinta.
1969  9188              ;	Bit 2    ""  RET.	 No borra, no pinta.
1970  9188
1971  9188 21 50 8C     	ld hl,Shield_3
1972  918B
1973  918B CB 5E        	bit 3,(hl)
1974  918D 20 DE        	jr nz,Pintando_Amadeus
1975  918F
1976  918F CB 56        	bit 2,(hl)
1977  9191 20 E7        	jr nz,1B
1978  9193
1979  9193 CB 4E        	bit 1,(hl)
1980  9195 C4 9C 91     	call nz,Borra_Amadeus_shield
1981  9198
1982  9198 28 BF        	jr z,Borrando_Amadeus
1983  919A 18 DE        	jr 1B
1984  919C
1985  919C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1986  919C
1987  919C              Borra_Amadeus_shield
1988  919C
1989  919C 3A 24 8C     	ld a,(Ctrl_3)
1990  919F CB 6F        	bit 5,a
1991  91A1 28 08        	jr z,1F
1992  91A3
1993  91A3 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1994  91A6 CD A2 90     	call Extrae_address
1995  91A9 18 06        	jr 2F
1996  91AB
1997  91AB 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
1998  91AE CD A2 90     	call Extrae_address
1999  91B1
2000  91B1 CD EC 95     2 call Pinta_Sprites
2001  91B4
2002  91B4 AF           	xor a
2003  91B5 3C           	inc a											; Asegura NZ en la salida de la rutina.
2004  91B6
2005  91B6 C9           	ret
2006  91B7
2007  91B7              Pinta_Amadeus_shield
2008  91B7
2009  91B7 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2010  91BA CD A2 90     	call Extrae_address
2011  91BD CD EC 95     	call Pinta_Sprites
2012  91C0
2013  91C0 AF           	xor a
2014  91C1 3C           	inc a											; Asegura NZ en la salida de la rutina.
2015  91C2
2016  91C2 C9           	ret
2017  91C3
2018  91C3              Borra_Pinta_Amadeus_shield
2019  91C3
2020  91C3 CD 9C 91     	call Borra_Amadeus_shield
2021  91C6 CD B7 91     	call Pinta_Amadeus_shield
2022  91C9 C9           	ret
2023  91CA
2024  91CA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2025  91CA              ;
2026  91CA              ;	19/6/24
2027  91CA              ;
2028  91CA
2029  91CA              Teclado
2030  91CA
2031  91CA              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2032  91CA
2033  91CA 3E F7        	ld a,$f7												; "5" para disparar.
2034  91CC DB FE        	in a,($fe)
2035  91CE E6 10        	and $10
2036  91D0
2037  91D0 CC 25 A1     	call z,Genera_disparo_Amadeus
2038  91D3
2039  91D3 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2040  91D5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2041  91D7 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2042  91D9 CC 59 9D         call z,Amadeus_a_izquierda
2043  91DC
2044  91DC 3E F7        	ld a,$f7
2045  91DE DB FE        	in a,($fe)
2046  91E0 E6 01        	and $01
2047  91E2 C8           	ret z
2048  91E3
2049  91E3 3E F7        	ld a,$f7
2050  91E5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2051  91E7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2052  91E9 CC 71 9D     	call z,Amadeus_a_derecha
2053  91EC
2054  91EC C9           	ret
2055  91ED
2056  91ED              ; ------------------------------------------------------------------------------------------------------------------------
2057  91ED              ;
2058  91ED              ;	06/07/24
2059  91ED              ;
2060  91ED
2061  91ED              Genera_explosion
2062  91ED
2063  91ED 21 36 8C     	ld hl,Clock_explosion
2064  91F0 35           	dec (hl)
2065  91F1 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2066  91F3
2067  91F3              Borra_entidad_colisionada
2068  91F3
2069  91F3 CD FC 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2070  91F6 CD 05 90     	call Cargamos_registros_con_explosion
2071  91F9 CD ED 94     	call Genera_datos_de_impresion
2072  91FC
2073  91FC AF           	xor a
2074  91FD 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2075  91FE
2076  91FE C9           	ret
2077  91FF
2078  91FF              Siguiente_frame_explosion
2079  91FF
2080  91FF 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2081  9201
2082  9201              ; Avanza Frame de explosión.
2083  9201
2084  9201 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2085  9204 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2086  9207
2087  9207 79           	ld a,c
2088  9208 95           	sub l
2089  9209 20 0B        	jr nz,1F
2090  920B
2091  920B              ; Fín de la entidad !!!!!!!!!!!!!
2092  920B
2093  920B 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2094  920E 35           	dec (hl)
2095  920F 23           	inc hl
2096  9210 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2097  9211
2098  9211 CD 6D 93     	call Limpiamos_bandeja_DRAW
2099  9214 18 DD        	jr Borra_entidad_colisionada
2100  9216
2101  9216 23           1 inc hl
2102  9217 23           	inc hl
2103  9218 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2104  921B 18 D6        	jr Borra_entidad_colisionada
2105  921D
2106  921D              ; ----- ----- ----- ----- -----
2107  921D
2108  921D              Genera_explosion_Amadeus
2109  921D
2110  921D 21 37 8C     	ld hl,Clock_explosion_Amadeus
2111  9220 35           	dec (hl)
2112  9221 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2113  9223
2114  9223              Borra_Amadeus_impactado
2115  9223
2116  9223 CD 73 8E     	call Change_Amadeus
2117  9226 CD 12 90     	call Cargamos_registros_con_explosion_Amadeus
2118  9229 CD 33 90     	call Genera_datos_de_impresion_Amadeus
2119  922C
2120  922C 21 24 8C     	ld hl,Ctrl_3
2121  922F CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2122  9231
2123  9231 AF           	xor a
2124  9232 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2125  9233
2126  9233 C9           	ret
2127  9234
2128  9234              Siguiente_frame_explosion_Amadeus
2129  9234
2130  9234 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2131  9236
2132  9236              ; Avanza Frame de explosión.
2133  9236
2134  9236 2A 74 89     	ld hl,(Pamm_Amadeus)
2135  9239 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2136  923C
2137  923C 79           	ld a,c
2138  923D 95           	sub l
2139  923E 20 0B        	jr nz,1F
2140  9240
2141  9240              ; Fín de Amadeus !!!!!!!!!!!!!
2142  9240              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2143  9240
2144  9240 AF           	xor a
2145  9241 32 71 89     	ld (Impacto_Amadeus),a
2146  9244 21 24 8C     	ld hl,Ctrl_3
2147  9247 CB F6        	set 6,(hl)
2148  9249
2149  9249 18 D8        	jr Borra_Amadeus_impactado
2150  924B
2151  924B 23           1 inc hl
2152  924C 23           	inc hl
2153  924D 22 74 89     	ld (Pamm_Amadeus),hl
2154  9250 18 D1        	jr Borra_Amadeus_impactado
2155  9252
2156  9252              ; ---------------------------------------------------------------
2157  9252
2158  9252              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9252              ; ******************************************************************************************************************************************************************************************
   2+ 9252              ;
   3+ 9252              ;   21/04/24
   4+ 9252              ;
   5+ 9252              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9252              ;   (XOR) bit a bit.
   7+ 9252              ;
   8+ 9252              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9252
  10+ 9252              Derivando_RND
  11+ 9252
  12+ 9252 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9255
  14+ 9255 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9257 C5               push bc
  16+ 9258              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9258 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 925B              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 925B
  20+ 925B A7           6 and a                                 ; Carry a "0".
  21+ 925C CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 925E 30 02            jr nc,1F
  23+ 9260
  24+ 9260 CB C1            set 0,c
  25+ 9262
  26+ 9262 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9263 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9265 5F               ld e,a
  29+ 9266
  30+ 9266 7A               ld a,d
  31+ 9267 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9269 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 926B
  34+ 926B CB 3F            srl a
  35+ 926D
  36+ 926D AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 926E
  38+ 926E 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 926F 28 04            jr z,4F
  40+ 9271
  41+ 9271 CB FF            set 7,a
  42+ 9273 18 02            jr 5F
  43+ 9275
  44+ 9275 CB BF        4 res 7,a
  45+ 9277
  46+ 9277 CB 21        5 sla c
  47+ 9279 10 E0            djnz 6B
  48+ 927B
  49+ 927B 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 927C
  51+ 927C 77               ld (hl),a
  52+ 927D 23               inc hl
  53+ 927E C1               pop bc
  54+ 927F 10 D4            djnz 3B
  55+ 9281
  56+ 9281 C9               ret
  57+ 9282
  58+ 9282
  59+ 9282
# file closed: RND_Derivando.asm
2159  9282              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9282              ;---------------------------------------------------------------------------------------------------------------
   2+ 9282              ;
   3+ 9282              ;   8/3/24
   4+ 9282              ;
   5+ 9282              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9282              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9282              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9282              ;	_ de la 1ª entidad del Nivel.
   9+ 9282              ;
  10+ 9282              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9282
  12+ 9282              ;	MODIFICA: HL,DE y A.
  13+ 9282              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9282
  15+ 9282              Inicializa_Nivel
  16+ 9282
  17+ 9282 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9285 CD A2 90     	call Extrae_address
  19+ 9288 7E           	ld a,(hl)
  20+ 9289 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 928C 23           	inc hl
  22+ 928D CD 9A 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9290 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9293 CD A3 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9296
  26+ 9296 CD B4 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9299 C9           	ret
  28+ 929A
  29+ 929A              ; ----------------------
  30+ 929A
  31+ 929A 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 929D 01 04 00     	ld bc,4
  33+ 92A0 ED B0        	ldir
  34+ 92A2 C9           	ret
  35+ 92A3
  36+ 92A3 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92A4 CD 3E 94         call Calcula_salto_en_BC
  38+ 92A7 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92AA A7               and a
  40+ 92AB ED 4A            adc hl,bc
  41+ 92AD CD A2 90         call Extrae_address
  42+ 92B0 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92B3 C9               ret
  44+ 92B4
  45+ 92B4 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92B7 CD 3E 94     	call Calcula_salto_en_BC
  47+ 92BA 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92BD A7               and a
  49+ 92BE ED 4A            adc hl,bc
  50+ 92C0 CD A2 90         call Extrae_address
  51+ 92C3 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92C6 C9           	ret
  53+ 92C7
  54+ 92C7              ;---------------------------------------------------------------------------------------------------------------
  55+ 92C7              ;
  56+ 92C7              ;   5/1/24
  57+ 92C7              ;
  58+ 92C7              ;	Destruye A,BC,HL,DE
  59+ 92C7
  60+ 92C7              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92C7              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92C7
  63+ 92C7              Inicia_Entidades
  64+ 92C7
  65+ 92C7              ; Preparamos los punteros de las cajas de entidades:
  66+ 92C7
  67+ 92C7 CD 85 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92CA              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92CA CD 86 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92CD
  71+ 92CD 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92D0
  73+ 92D0 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92D3
  75+ 92D3 CD EC 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92D6
  77+ 92D6 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92D9
  79+ 92D9              ; En este punto:
  80+ 92D9              ;
  81+ 92D9              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92D9              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92D9
  84+ 92D9 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92DA
  86+ 92DA 7E           	ld a,(hl)
  87+ 92DB CD 58 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92DE
  89+ 92DE CD 50 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92E1
  91+ 92E1              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92E1
  93+ 92E1 CD 0E 94     	call Busca_mov_masticados_segun_tipo
  94+ 92E4
  95+ 92E4 A7           	and a
  96+ 92E5 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92E7
  98+ 92E7              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92E7
 100+ 92E7              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92E7              ;	_ de este tipo de entidad.
 102+ 92E7
 103+ 92E7 CD F0 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92EA CD FD 9E     	call Transfiere_datos_de_contadores
 105+ 92ED
 106+ 92ED 18 06        	jr 4F
 107+ 92EF
 108+ 92EF CD 98 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92F2
 110+ 92F2              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92F2              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92F2              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92F2              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92F2              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92F2
 116+ 92F2 CD CC 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92F5              ;																; _ Mov_masticados ya generados.
 118+ 92F5
 119+ 92F5 CD EC 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92F8
 121+ 92F8 DD E5        	push ix
 122+ 92FA E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92FB
 124+ 92FB D5           	push de
 125+ 92FC CD C1 94     	call Genera_coordenadas
 126+ 92FF
 127+ 92FF ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 128+ 9303 CD FC 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9306 D1           	pop de
 130+ 9307
 131+ 9307 CD ED 94     	call Genera_datos_de_impresion
 132+ 930A              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 930A              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 930A              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 930A              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 930A
 137+ 930A CD 90 93     	call Decrementa_Contador_de_mov_masticados
 138+ 930D
 139+ 930D              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 930D
 141+ 930D ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 9311 CD 7D 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9314
 144+ 9314 CD 6D 93     	call Limpiamos_bandeja_DRAW
 145+ 9317 CD F0 90     	call Incrementa_punteros_de_cajas
 146+ 931A
 147+ 931A              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 931A              ; _ entidad del Nivel.
 149+ 931A
 150+ 931A 3A 25 8C     	ld a,(Ctrl_4)
 151+ 931D E6 F0        	and $f0
 152+ 931F 32 25 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9322
 154+ 9322              ; Siguiente entidad del Nivel.
 155+ 9322
 156+ 9322 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9325 23           	inc hl 														; _ entidad del Nivel.
 158+ 9326
 159+ 9326 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9327
 161+ 9327 10 A7        	djnz 2B
 162+ 9329
 163+ 9329 C9           	ret
 164+ 932A
 165+ 932A              ; -------------------------------------------------------------------------------------------------------------------
 166+ 932A              ;
 167+ 932A              ;	27/5/24
 168+ 932A              ;
 169+ 932A              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 932A              ;
 171+ 932A
 172+ 932A              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 932A              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 932A
 175+ 932A 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 932D CD 50 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9330
 178+ 9330
 179+ 9330              Construye_movimientos_masticados_Amadeus
 180+ 9330
 181+ 9330 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9333 CD DF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9336              ;															; _ el (Contador_de_mov_masticados).
 184+ 9336 CD A8 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9339              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9339
 187+ 9339              ; Generamos movimientos masticados de Amadeus.
 188+ 9339
 189+ 9339 06 79        	ld b,121												; $0079, 121d.
 190+ 933B
 191+ 933B C5           1 push bc
 192+ 933C CD 0F 97     	call Draw
 193+ 933F CD C4 8F     	call Guarda_movimiento_masticado
 194+ 9342
 195+ 9342 CD 83 9A     	call Mov_right
 196+ 9345 CD 83 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9348
 198+ 9348 C1           	pop bc
 199+ 9349 10 F0        	djnz 1B
 200+ 934B
 201+ 934B              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 934B
 203+ 934B              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 934B              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 934B
 206+ 934B 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 934E 01 08 00     	ld bc,8
 208+ 9351 A7           	and a
 209+ 9352 ED 42        	sbc hl,bc
 210+ 9354 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9357
 212+ 9357 C9           	ret
 213+ 9358
 214+ 9358              ; ---------------------------------------------------------------------
 215+ 9358              ;
 216+ 9358              ;	10/02/24
 217+ 9358              ;
 218+ 9358              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9358              ;
 220+ 9358              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9358
 222+ 9358              Definicion_segun_tipo
 223+ 9358
 224+ 9358 CD 3E 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 935B 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 935E CD 46 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9361 C9           	ret
 228+ 9362
 229+ 9362              ; ---------------------------------------------------------------------
 230+ 9362              ;
 231+ 9362              ;	6/7/24
 232+ 9362
 233+ 9362
 234+ 9362              Store_Restore_cajas
 235+ 9362
 236+ 9362 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 9366 CD 7D 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9369 CD F0 90     	call Incrementa_punteros_de_cajas
 239+ 936C C9           	ret
 240+ 936D
 241+ 936D              ; ---------------------------------------------------------------------
 242+ 936D              ;
 243+ 936D              ;	23/6/24
 244+ 936D              ;
 245+ 936D              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 936D              ;
 247+ 936D              ;	MODIFY: HL
 248+ 936D
 249+ 936D              Limpiamos_bandeja_DRAW
 250+ 936D
 251+ 936D ED 73 00 8C  	ld (Stack),sp
 252+ 9371 31 D8 8B     	ld sp,Vel_left
 253+ 9374
 254+ 9374 AF           	xor a
 255+ 9375 67           	ld h,a
 256+ 9376 6F           	ld l,a
 257+ 9377
 258+ 9377 E5           	push hl
 259+ 9378 E5           	push hl
 260+ 9379 E5           	push hl
 261+ 937A E5           	push hl
 262+ 937B E5           	push hl
 263+ 937C E5           	push hl
 264+ 937D E5           	push hl
 265+ 937E E5           	push hl
 266+ 937F E5           	push hl
 267+ 9380 E5           	push hl
 268+ 9381 E5           	push hl
 269+ 9382 E5           	push hl
 270+ 9383 E5           	push hl
 271+ 9384 E5           	push hl
 272+ 9385 E5           	push hl
 273+ 9386 E5           	push hl
 274+ 9387 E5           	push hl
 275+ 9388 E5           	push hl
 276+ 9389
 277+ 9389 33           	inc sp
 278+ 938A
 279+ 938A E5           	push hl
 280+ 938B ED 7B 00 8C  	ld sp,(Stack)
 281+ 938F
 282+ 938F C9           	ret
 283+ 9390
 284+ 9390              ; ---------------------------------------------------------------------
 285+ 9390              ;
 286+ 9390              ;	24/03/24
 287+ 9390
 288+ 9390 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9393 2B           	dec hl
 290+ 9394 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9397 C9           	ret
 292+ 9398
 293+ 9398              ; ---------------------------------------------------------------------
 294+ 9398              ;
 295+ 9398              ;	8/5/24
 296+ 9398
 297+ 9398              Reinicia_entidad_maliciosa
 298+ 9398
 299+ 9398              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9398
 301+ 9398 CD F0 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 939B CD FD 9E     	call Transfiere_datos_de_contadores
 303+ 939E
 304+ 939E              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 939E
 306+ 939E 3A B3 8B     	ld a,(Tipo)
 307+ 93A1 CD 58 93     	call Definicion_segun_tipo
 308+ 93A4
 309+ 93A4 E5           	push hl
 310+ 93A5 DD E1        	pop ix
 311+ 93A7
 312+ 93A7 DD 6E 0B     	ld l,(ix+11)
 313+ 93AA DD 66 0C     	ld h,(ix+12)
 314+ 93AD
 315+ 93AD 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93B0
 317+ 93B0 CD EC 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93B3
 319+ 93B3              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93B3              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93B3              ; Ejemplos.
 322+ 93B3
 323+ 93B3              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93B3              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93B3              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93B3              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93B3              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93B3
 329+ 93B3 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93B6 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93B8
 332+ 93B8 7E           	ld a,(hl)
 333+ 93B9 CB 2F        	sra a
 334+ 93BB CB 2F        	sra a
 335+ 93BD
 336+ 93BD 32 BE 8B     	ld (Velocidad),a
 337+ 93C0
 338+ 93C0 3E 40        	ld a,$40
 339+ 93C2 BE           	cp (hl)
 340+ 93C3 C0           	ret nz
 341+ 93C4
 342+ 93C4              ; Límitador.
 343+ 93C4
 344+ 93C4              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93C4
 346+ 93C4 CB 2E        	sra (hl)
 347+ 93C6 21 BE 8B     	ld hl,Velocidad
 348+ 93C9 CB 2E        	sra (hl)
 349+ 93CB
 350+ 93CB C9           	ret
 351+ 93CC
 352+ 93CC              ; ---------------------------------------------------------------------
 353+ 93CC              ;
 354+ 93CC              ;	22/01/24
 355+ 93CC
 356+ 93CC 21 25 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93CF CB 46        	bit 0,(hl)
 358+ 93D1 20 0D        	jr nz,1F
 359+ 93D3 CB 4E        	bit 1,(hl)
 360+ 93D5 20 0C        	jr nz,2F
 361+ 93D7 CB 56        	bit 2,(hl)
 362+ 93D9 20 0B        	jr nz,3F
 363+ 93DB CB 5E        	bit 3,(hl)
 364+ 93DD 20 0A        	jr nz,4F
 365+ 93DF C9           	ret
 366+ 93E0
 367+ 93E0 CB E6        1 set 4,(hl)
 368+ 93E2 C9           	ret
 369+ 93E3 CB EE        2 set 5,(hl)
 370+ 93E5 C9           	ret
 371+ 93E6 CB F6        3 set 6,(hl)
 372+ 93E8 C9           	ret
 373+ 93E9 CB FE        4 set 7,(hl)
 374+ 93EB C9           	ret
 375+ 93EC
 376+ 93EC              ; ---------------------------------------------------------------------
 377+ 93EC              ;
 378+ 93EC              ;	23/01/24
 379+ 93EC              ;
 380+ 93EC              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93EC              ;
 382+ 93EC              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93EC              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93EC              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93EC              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93EC
 387+ 93EC              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93EC
 389+ 93EC 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93ED 3D           	dec a
 391+ 93EE 20 06        	jr nz,1F
 392+ 93F0
 393+ 93F0              ; --- Tipo_1
 394+ 93F0
 395+ 93F0 21 25 8C     	ld hl,Ctrl_4
 396+ 93F3 CB C6        	set 0,(hl)
 397+ 93F5 C9           	ret
 398+ 93F6
 399+ 93F6 3D           1 dec a
 400+ 93F7 20 06        	jr nz,2F
 401+ 93F9
 402+ 93F9              ; --- Tipo_2
 403+ 93F9
 404+ 93F9 21 25 8C     	ld hl,Ctrl_4
 405+ 93FC CB CE        	set 1,(hl)
 406+ 93FE C9           	ret
 407+ 93FF
 408+ 93FF 3D           2 dec a
 409+ 9400 20 06        	jr nz,3F
 410+ 9402
 411+ 9402              ; --- Tipo_3
 412+ 9402
 413+ 9402 21 25 8C     	ld hl,Ctrl_4
 414+ 9405 CB D6        	set 2,(hl)
 415+ 9407 C9           	ret
 416+ 9408
 417+ 9408              ; --- Tipo_3
 418+ 9408
 419+ 9408 21 25 8C     3 ld hl,Ctrl_4
 420+ 940B CB D6        	set 2,(hl)
 421+ 940D C9           	ret
 422+ 940E
 423+ 940E              ; ---------------------------------------------------------------------
 424+ 940E              ;
 425+ 940E              ;	22/01/24
 426+ 940E
 427+ 940E 21 25 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9411 CB 46        	bit 0,(hl)
 429+ 9413 20 0E        	jr nz,1F
 430+ 9415
 431+ 9415 CB 4E        	bit 1,(hl)
 432+ 9417 20 10        	jr nz,2F
 433+ 9419
 434+ 9419 CB 56        	bit 2,(hl)
 435+ 941B 20 12        	jr nz,3F
 436+ 941D
 437+ 941D CB 5E        	bit 3,(hl)
 438+ 941F 20 14        	jr nz,4F
 439+ 9421 18 19        	jr 6F
 440+ 9423
 441+ 9423              ; Entidad_de_Tipo_1.
 442+ 9423
 443+ 9423 CB 66        1 bit 4,(hl)
 444+ 9425 28 15        	jr z,6F
 445+ 9427 18 10        	jr 5F
 446+ 9429
 447+ 9429              ; Entidad_de_Tipo_2.
 448+ 9429
 449+ 9429 CB 6E        2 bit 5,(hl)
 450+ 942B 28 0F        	jr z,6F
 451+ 942D 18 0A        	jr 5F
 452+ 942F
 453+ 942F              ; Entidad_de_Tipo_3.
 454+ 942F
 455+ 942F CB 76        3 bit 6,(hl)
 456+ 9431 28 09        	jr z,6F
 457+ 9433 18 04        	jr 5F
 458+ 9435
 459+ 9435              ; Entidad_de_Tipo_4.
 460+ 9435
 461+ 9435 CB 7E        4 bit 7,(hl)
 462+ 9437 28 03        	jr z,6F
 463+ 9439
 464+ 9439              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9439
 466+ 9439 AF           5 xor a
 467+ 943A 3C           	inc a
 468+ 943B C9           	ret
 469+ 943C
 470+ 943C              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 943C
 472+ 943C AF           6 xor a
 473+ 943D C9           	ret
 474+ 943E
 475+ 943E              ;	------------------------------------------------------------------------------------
 476+ 943E              ;
 477+ 943E              ;	12/01/24
 478+ 943E              ;
 479+ 943E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 943E              ;
 481+ 943E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 943E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 943E
 484+ 943E CB 27        Calcula_salto_en_BC sla a
 485+ 9440 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9442 4F           	ld c,a
 487+ 9443 06 00        	ld b,0
 488+ 9445 C9           	ret
 489+ 9446
 490+ 9446              ; ------------------------------------------------------------------
 491+ 9446              ;
 492+ 9446              ;	19/1/24
 493+ 9446              ;
 494+ 9446              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9446              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9446
 497+ 9446 A7           Situa_en_datos_de_definicion and a
 498+ 9447 ED 4A        	adc hl,bc
 499+ 9449 CD A2 90     	call Extrae_address
 500+ 944C 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 944F C9           	ret
 502+ 9450
 503+ 9450              ; ------------------------------------------------------------------
 504+ 9450
 505+ 9450              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9450              ; 	inc de
 507+ 9450              ; 	inc de
 508+ 9450              ; 	ex de,hl
 509+ 9450              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9450              ; 	ret
 511+ 9450
 512+ 9450              ; ----------------------------------------------------------------------------------------------------------
 513+ 9450              ;
 514+ 9450              ;	24/6/24
 515+ 9450              ;
 516+ 9450              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9450              ;	_ de entidad.
 518+ 9450              ;
 519+ 9450              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9450              ;
 521+ 9450              ;
 522+ 9450              ;	MODIFICA: HL,DE y BC
 523+ 9450
 524+ 9450
 525+ 9450              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9450
 527+ 9450 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9453 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9454 12           	ld (de),a
 530+ 9455 23           	inc hl
 531+ 9456              ;
 532+ 9456 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9459 01 02 00     	ld bc,2
 534+ 945C ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 945E              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 945E 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 9461 7E           	ld a,(hl)
 538+ 9462 12           	ld (de),a
 539+ 9463 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9464
 541+ 9464 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 9467 01 04 00     	ld bc,4
 543+ 946A ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 946C
 545+ 946C 11 D0 8B     	ld de,Posicion_inicio
 546+ 946F 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9472 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9474
 549+ 9474 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9477 01 02 00     	ld bc,2
 551+ 947A ED B0        	ldir
 552+ 947C
 553+ 947C C9           	ret
 554+ 947D
 555+ 947D              ; ----------------------------------------------------------------------------------------------------------
 556+ 947D              ;
 557+ 947D              ;	1/8/24
 558+ 947D              ;
 559+ 947D
 560+ 947D              Parametros_de_bandeja_DRAW_a_caja
 561+ 947D
 562+ 947D 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 9480 01 0C 00     	ld bc,12
 564+ 9483 ED B0        	ldir
 565+ 9485 C9           	ret
 566+ 9486
 567+ 9486              ;---------------------------------------------------------------------------------------------------------------
 568+ 9486              ;
 569+ 9486              ;	5/1/24
 570+ 9486              ;
 571+ 9486              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9486              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9486              ;
 574+ 9486              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9486              ;
 576+ 9486              ;	(Numero_parcial_de_entidades)="7".
 577+ 9486              ;
 578+ 9486              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9486              ;
 580+ 9486              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9486              ;
 582+ 9486              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9486              ;	MODIFICA: A y B.
 584+ 9486              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9486
 586+ 9486              Inicializa_Numero_parcial_de_entidades
 587+ 9486
 588+ 9486              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9486
 590+ 9486 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 9489 A7           	and a
 592+ 948A
 593+ 948A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 948A              ;	jr z,$
 595+ 948A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 948A
 597+ 948A 20 03        	jr nz,3F
 598+ 948C
 599+ 948C              ; ---------- ---------- ----------
 600+ 948C
 601+ 948C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 948C              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 948C
 604+ 948C CD 82 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 948F
 606+ 948F              ; ---------- ---------- ----------
 607+ 948F
 608+ 948F 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9492 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9494 38 08        	jr c,1F
 611+ 9496
 612+ 9496              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9496              ; Actualizamos variables.
 614+ 9496
 615+ 9496 3E 07        	ld a,7
 616+ 9498 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 949B 47           	ld b,a
 618+ 949C 18 04        	jr 2F
 619+ 949E
 620+ 949E              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 949E              ; (Numero_de_entidades)="0".
 622+ 949E
 623+ 949E 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94A1 47           	ld b,a
 625+ 94A2 C9           2 ret
 626+ 94A3
# file closed: Rutinas_de_inicio_y_niveles.asm
2160  94A3              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94A3              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94A3              ;
   3+ 94A3              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94A3              ;
   5+ 94A3              ; *****************************************************************************************************************************************************************************************
   6+ 94A3              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94A3
   8+ 94A3 7C           calcula_tercio ld a,h
   9+ 94A4 E6 18        	and $18
  10+ 94A6 CB 2F        	sra a
  11+ 94A8 CB 2F        	sra a
  12+ 94AA CB 2F        	sra a
  13+ 94AC C9           	ret
  14+ 94AD
# file closed: calcula_tercio.asm
2161  94AD              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94AD              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94AD              ;
   3+ 94AD              ;
   4+ 94AD              ;	CLS.
   5+ 94AD              ;
   6+ 94AD              ;	Limpia la pantalla y define sus atributos.
   7+ 94AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94AD              ;
   9+ 94AD              ;	COLORES: 0 ..... NEGRO
  10+ 94AD              ;    		 1 ..... AZUL
  11+ 94AD              ; 			 2 ..... ROJO
  12+ 94AD              ;			 3 ..... MAGENTA
  13+ 94AD              ; 			 4 ..... VERDE
  14+ 94AD              ; 			 5 ..... CIAN
  15+ 94AD              ;			 6 ..... AMARILLO
  16+ 94AD              ; 			 7 ..... BLANCO
  17+ 94AD              ;
  18+ 94AD              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94AD              ;
  20+ 94AD              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94AD
  22+ 94AD
  23+ 94AD 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94B0 11 01 40     	LD DE,$4001
  25+ 94B3 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94B6 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94B8 ED B0        	LDIR
  28+ 94BA 01 FF 02     	LD BC,767
  29+ 94BD 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94BE ED B0        	LDIR
  31+ 94C0 C9           	ret
  32+ 94C1
# file closed: Cls.asm
2162  94C1              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94C1              ; ------------------------------------------------------------------------
   2+ 94C1              ;
   3+ 94C1              ;	30/1/24
   4+ 94C1              ;
   5+ 94C1              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94C1              ;	Fila superior "0", Columna izquierda "0".
   7+ 94C1              ;
   8+ 94C1              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94C1              ;
  10+ 94C1              ;	Modifica: A,BC y DE.
  11+ 94C1
  12+ 94C1 7D           Genera_coordenadas ld a,l
  13+ 94C2 E6 1F        	and $1f
  14+ 94C4 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94C7
  16+ 94C7 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94C8 FE 40        	cp $40
  18+ 94CA 38 1C        	jr c,4F
  19+ 94CC
  20+ 94CC CD A3 94     	call calcula_tercio
  21+ 94CF 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94D0
  23+ 94D0 1E 00        	ld e,0
  24+ 94D2 7D           	ld a,l
  25+ 94D3 E6 E0        	and $e0
  26+ 94D5 28 01        	jr z,1F
  27+ 94D7 04           	inc b
  28+ 94D8
  29+ 94D8 04           1 inc b
  30+ 94D9 05           	dec b
  31+ 94DA 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94DC              ;														; _ , salimos.
  33+ 94DC 1C           3 inc e
  34+ 94DD D6 20        	sub 32
  35+ 94DF 20 FB        	jr nz,3B
  36+ 94E1 10 F5        	djnz 1B
  37+ 94E3
  38+ 94E3 7B           2 ld a,e
  39+ 94E4 32 B5 8B     	ld (Coordenada_y),a
  40+ 94E7 C9           	ret
  41+ 94E8
  42+ 94E8 AF           4 xor a
  43+ 94E9 32 B5 8B     	ld (Coordenada_y),a
  44+ 94EC C9           	ret
  45+ 94ED
# file closed: Genera_coordenadas.asm
2163  94ED              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94ED              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94ED              ;
   3+ 94ED              ;	20/09/24
   4+ 94ED              ;
   5+ 94ED              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94ED              ;   DE contiene Puntero_objeto.
   7+ 94ED              ;   IX contiene el Puntero de impresión.
   8+ 94ED
   9+ 94ED              Genera_datos_de_impresion
  10+ 94ED
  11+ 94ED ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94F1
  13+ 94F1 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94F4 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94F6
  16+ 94F6 2A 1E 8C         ld hl,(Scanlines_album_SP)
  17+ 94F9
  18+ 94F9 3E 05            ld a,5
  19+ 94FB 85               add l
  20+ 94FC 6F               ld l,a
  21+ 94FD
  22+ 94FD F9               ld sp,hl
  23+ 94FE 22 1E 8C         ld (Scanlines_album_SP),hl
  24+ 9501
  25+ 9501 21 00 00         ld hl,0
  26+ 9504
  27+ 9504 DD E5            push ix
  28+ 9506 3B               dec sp
  29+ 9507 ED 7A            adc hl,sp
  30+ 9509 D5               push de
  31+ 950A
  32+ 950A              ; Recuperamos SP.
  33+ 950A
  34+ 950A ED 7B 00 8C      ld sp,(Stack)
  35+ 950E
  36+ 950E E5               push hl
  37+ 950F F1               pop af
  38+ 9510 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9511
  40+ 9511              ; Tenemos el encabezado listo.
  41+ 9511              ; Preparamos registros para generar los scanlines.
  42+ 9511
  43+ 9511 DD E5            push ix
  44+ 9513 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9514
  46+ 9514 ED 5B 1E 8C      ld de,(Scanlines_album_SP)
  47+ 9518
  48+ 9518              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9518              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9518
  51+ 9518 7C               ld a,h
  52+ 9519 FE 50            cp $50
  53+ 951B 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 951D
  55+ 951D 20 05            jr nz,2F
  56+ 951F
  57+ 951F 7D               ld a,l
  58+ 9520 FE E0            cp $e0
  59+ 9522 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9524
  61+ 9524 7D           2 ld a,l
  62+ 9525 FE C0            cp $c0
  63+ 9527 D2 C3 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 952A
  65+ 952A              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 952A
  67+ 952A CD C1 99         call NextScan
  68+ 952D EB               ex de,hl
  69+ 952E
  70+ 952E 73               ld (hl),e
  71+ 952F 23               inc hl
  72+ 9530 72               ld (hl),d
  73+ 9531 23               inc hl
  74+ 9532
  75+ 9532 EB               ex de,hl
  76+ 9533
  77+ 9533 CD C1 99         call NextScan
  78+ 9536 EB               ex de,hl
  79+ 9537
  80+ 9537 73               ld (hl),e
  81+ 9538 23               inc hl
  82+ 9539 72               ld (hl),d
  83+ 953A 23               inc hl
  84+ 953B
  85+ 953B EB               ex de,hl
  86+ 953C
  87+ 953C CD C1 99         call NextScan
  88+ 953F EB               ex de,hl
  89+ 9540
  90+ 9540 73               ld (hl),e
  91+ 9541 23               inc hl
  92+ 9542 72               ld (hl),d
  93+ 9543 23               inc hl
  94+ 9544
  95+ 9544 EB               ex de,hl
  96+ 9545
  97+ 9545 CD C1 99         call NextScan
  98+ 9548 EB               ex de,hl
  99+ 9549
 100+ 9549 73               ld (hl),e
 101+ 954A 23               inc hl
 102+ 954B 72               ld (hl),d
 103+ 954C 23               inc hl
 104+ 954D
 105+ 954D EB               ex de,hl
 106+ 954E
 107+ 954E CD C1 99         call NextScan
 108+ 9551 EB               ex de,hl
 109+ 9552
 110+ 9552 73               ld (hl),e
 111+ 9553 23               inc hl
 112+ 9554 72               ld (hl),d
 113+ 9555 23               inc hl
 114+ 9556
 115+ 9556 EB               ex de,hl
 116+ 9557
 117+ 9557 CD C1 99         call NextScan
 118+ 955A EB               ex de,hl
 119+ 955B
 120+ 955B 73               ld (hl),e
 121+ 955C 23               inc hl
 122+ 955D 72               ld (hl),d
 123+ 955E 23               inc hl
 124+ 955F
 125+ 955F EB               ex de,hl
 126+ 9560
 127+ 9560 CD C1 99         call NextScan
 128+ 9563 EB               ex de,hl
 129+ 9564
 130+ 9564 73               ld (hl),e
 131+ 9565 23               inc hl
 132+ 9566 72               ld (hl),d
 133+ 9567 23               inc hl
 134+ 9568
 135+ 9568 EB               ex de,hl
 136+ 9569
 137+ 9569 CD C1 99         call NextScan
 138+ 956C EB               ex de,hl
 139+ 956D
 140+ 956D 73               ld (hl),e
 141+ 956E 23               inc hl
 142+ 956F 72               ld (hl),d
 143+ 9570 23               inc hl
 144+ 9571
 145+ 9571 EB               ex de,hl
 146+ 9572
 147+ 9572 CD C1 99         call NextScan
 148+ 9575 EB               ex de,hl
 149+ 9576
 150+ 9576 73               ld (hl),e
 151+ 9577 23               inc hl
 152+ 9578 72               ld (hl),d
 153+ 9579 23               inc hl
 154+ 957A
 155+ 957A EB               ex de,hl
 156+ 957B
 157+ 957B CD C1 99         call NextScan
 158+ 957E EB               ex de,hl
 159+ 957F
 160+ 957F 73               ld (hl),e
 161+ 9580 23               inc hl
 162+ 9581 72               ld (hl),d
 163+ 9582 23               inc hl
 164+ 9583
 165+ 9583 EB               ex de,hl
 166+ 9584
 167+ 9584 CD C1 99         call NextScan
 168+ 9587 EB               ex de,hl
 169+ 9588
 170+ 9588 73               ld (hl),e
 171+ 9589 23               inc hl
 172+ 958A 72               ld (hl),d
 173+ 958B 23               inc hl
 174+ 958C
 175+ 958C EB               ex de,hl
 176+ 958D
 177+ 958D CD C1 99         call NextScan
 178+ 9590 EB               ex de,hl
 179+ 9591
 180+ 9591 73               ld (hl),e
 181+ 9592 23               inc hl
 182+ 9593 72               ld (hl),d
 183+ 9594 23               inc hl
 184+ 9595
 185+ 9595 EB               ex de,hl
 186+ 9596
 187+ 9596 CD C1 99         call NextScan
 188+ 9599 EB               ex de,hl
 189+ 959A
 190+ 959A 73               ld (hl),e
 191+ 959B 23               inc hl
 192+ 959C 72               ld (hl),d
 193+ 959D 23               inc hl
 194+ 959E
 195+ 959E EB               ex de,hl
 196+ 959F
 197+ 959F CD C1 99         call NextScan
 198+ 95A2 EB               ex de,hl
 199+ 95A3
 200+ 95A3 73               ld (hl),e
 201+ 95A4 23               inc hl
 202+ 95A5 72               ld (hl),d
 203+ 95A6 23               inc hl
 204+ 95A7
 205+ 95A7 EB               ex de,hl
 206+ 95A8
 207+ 95A8 CD C1 99         call NextScan
 208+ 95AB EB               ex de,hl
 209+ 95AC
 210+ 95AC              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95AC              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95AC              ;   _ generar sus scanlines.
 213+ 95AC
 214+ 95AC              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95AC
 216+ 95AC 73               ld (hl),e
 217+ 95AD 23               inc hl
 218+ 95AE 72               ld (hl),d
 219+ 95AF 23               inc hl
 220+ 95B0
 221+ 95B0              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95B0
 223+ 95B0 22 1E 8C         ld (Scanlines_album_SP),hl
 224+ 95B3
 225+ 95B3 EB               ex de,hl
 226+ 95B4
 227+ 95B4              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95B4
 229+ 95B4 CD C1 99         call NextScan
 230+ 95B7 CD C1 99         call NextScan
 231+ 95BA
 232+ 95BA 22 29 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95BD
 234+ 95BD              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95BD
 236+ 95BD 08               ex af,af
 237+ 95BE
 238+ 95BE F5               push af
 239+ 95BF E1               pop hl
 240+ 95C0
 241+ 95C0 36 10            ld (hl),16
 242+ 95C2
 243+ 95C2 C9               ret
 244+ 95C3
 245+ 95C3              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95C3
 247+ 95C3              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95C3
 249+ 95C3 3E 57            ld a,$57
 250+ 95C5 94               sub h
 251+ 95C6 47               ld b,a
 252+ 95C7
 253+ 95C7 3E DF            ld a,$df
 254+ 95C9 BD               cp l
 255+ 95CA 38 04            jr c,1F
 256+ 95CC
 257+ 95CC 3E 08            ld a,8
 258+ 95CE 80               add b
 259+ 95CF 47               ld b,a
 260+ 95D0
 261+ 95D0              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95D0              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95D0
 264+ 95D0 48           1 ld c,b
 265+ 95D1 0C               inc c
 266+ 95D2
 267+ 95D2 04               inc b
 268+ 95D3 05               dec b
 269+ 95D4 20 02            jr nz,3F
 270+ 95D6
 271+ 95D6 18 0B            jr 6F
 272+ 95D8
 273+ 95D8 CD C1 99     3 call NextScan
 274+ 95DB EB               ex de,hl
 275+ 95DC
 276+ 95DC 73               ld (hl),e
 277+ 95DD 23               inc hl
 278+ 95DE 72               ld (hl),d
 279+ 95DF 23               inc hl
 280+ 95E0
 281+ 95E0 EB               ex de,hl
 282+ 95E1 10 F5            djnz 3B
 283+ 95E3
 284+ 95E3 ED 53 1E 8C  6 ld (Scanlines_album_SP),de
 285+ 95E7
 286+ 95E7 08           5 ex af,af
 287+ 95E8 F5               push af
 288+ 95E9 E1               pop hl
 289+ 95EA
 290+ 95EA 71               ld (hl),c
 291+ 95EB
 292+ 95EB C9               ret
 293+ 95EC
# file closed: Genera_datos_de_impresion.asm
2164  95EC              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95EC              ; -----------------------------------------------------------------------------
   2+ 95EC              ;
   3+ 95EC              ;   11/03/24
   4+ 95EC              ;
   5+ 95EC
   6+ 95EC              Pinta_Sprites
   7+ 95EC
   8+ 95EC              ;    ld hl,(Scanlines_album_SP)
   9+ 95EC              ;    call Extrae_address
  10+ 95EC
  11+ 95EC              ;    inc h
  12+ 95EC              ;    dec h
  13+ 95EC              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95EC
  15+ 95EC ED 73 00 8C      ld (Stack),sp
  16+ 95F0
  17+ 95F0 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95F1              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95F1 2C               inc l
  20+ 95F2 2C               inc l
  21+ 95F3
  22+ 95F3 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95F4
  24+ 95F4 2C               inc l
  25+ 95F5 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95F6
  27+ 95F6              ;   Seleccionamos rutina de impresión:
  28+ 95F6
  29+ 95F6 3E 10            ld a,16
  30+ 95F8 B8               cp b
  31+ 95F9 C2 F5 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95FC
  33+ 95FC              ;   Rutinas:
  34+ 95FC
  35+ 95FC              Pinta_rapido    ;   1520 t/states.
  36+ 95FC
  37+ 95FC E1               pop hl
  38+ 95FD
  39+ 95FD 1A               ld a,(de)
  40+ 95FE AE               xor (hl)
  41+ 95FF 77               ld (hl),a
  42+ 9600 2C               inc l
  43+ 9601 1C               inc e
  44+ 9602 1A               ld a,(de)
  45+ 9603 AE               xor (hl)
  46+ 9604 77               ld (hl),a
  47+ 9605 2C               inc l
  48+ 9606 1C               inc e
  49+ 9607 1A               ld a,(de)
  50+ 9608 AE               xor (hl)
  51+ 9609 77               ld (hl),a
  52+ 960A 13               inc de
  53+ 960B
  54+ 960B E1               pop hl
  55+ 960C
  56+ 960C 1A               ld a,(de)
  57+ 960D AE               xor (hl)
  58+ 960E 77               ld (hl),a
  59+ 960F 2C               inc l
  60+ 9610 1C               inc e
  61+ 9611 1A               ld a,(de)
  62+ 9612 AE               xor (hl)
  63+ 9613 77               ld (hl),a
  64+ 9614 2C               inc l
  65+ 9615 1C               inc e
  66+ 9616 1A               ld a,(de)
  67+ 9617 AE               xor (hl)
  68+ 9618 77               ld (hl),a
  69+ 9619 13               inc de
  70+ 961A
  71+ 961A E1               pop hl
  72+ 961B
  73+ 961B 1A               ld a,(de)
  74+ 961C AE               xor (hl)
  75+ 961D 77               ld (hl),a
  76+ 961E 2C               inc l
  77+ 961F 1C               inc e
  78+ 9620 1A               ld a,(de)
  79+ 9621 AE               xor (hl)
  80+ 9622 77               ld (hl),a
  81+ 9623 2C               inc l
  82+ 9624 1C               inc e
  83+ 9625 1A               ld a,(de)
  84+ 9626 AE               xor (hl)
  85+ 9627 77               ld (hl),a
  86+ 9628 13               inc de
  87+ 9629
  88+ 9629 E1               pop hl
  89+ 962A
  90+ 962A 1A               ld a,(de)
  91+ 962B AE               xor (hl)
  92+ 962C 77               ld (hl),a
  93+ 962D 2C               inc l
  94+ 962E 1C               inc e
  95+ 962F 1A               ld a,(de)
  96+ 9630 AE               xor (hl)
  97+ 9631 77               ld (hl),a
  98+ 9632 2C               inc l
  99+ 9633 1C               inc e
 100+ 9634 1A               ld a,(de)
 101+ 9635 AE               xor (hl)
 102+ 9636 77               ld (hl),a
 103+ 9637 13               inc de
 104+ 9638
 105+ 9638 E1               pop hl
 106+ 9639
 107+ 9639 1A               ld a,(de)
 108+ 963A AE               xor (hl)
 109+ 963B 77               ld (hl),a
 110+ 963C 2C               inc l
 111+ 963D 1C               inc e
 112+ 963E 1A               ld a,(de)
 113+ 963F AE               xor (hl)
 114+ 9640 77               ld (hl),a
 115+ 9641 2C               inc l
 116+ 9642 1C               inc e
 117+ 9643 1A               ld a,(de)
 118+ 9644 AE               xor (hl)
 119+ 9645 77               ld (hl),a
 120+ 9646 13               inc de
 121+ 9647
 122+ 9647 E1               pop hl
 123+ 9648
 124+ 9648 1A               ld a,(de)
 125+ 9649 AE               xor (hl)
 126+ 964A 77               ld (hl),a
 127+ 964B 2C               inc l
 128+ 964C 1C               inc e
 129+ 964D 1A               ld a,(de)
 130+ 964E AE               xor (hl)
 131+ 964F 77               ld (hl),a
 132+ 9650 2C               inc l
 133+ 9651 1C               inc e
 134+ 9652 1A               ld a,(de)
 135+ 9653 AE               xor (hl)
 136+ 9654 77               ld (hl),a
 137+ 9655 13               inc de
 138+ 9656
 139+ 9656 E1               pop hl
 140+ 9657
 141+ 9657 1A               ld a,(de)
 142+ 9658 AE               xor (hl)
 143+ 9659 77               ld (hl),a
 144+ 965A 2C               inc l
 145+ 965B 1C               inc e
 146+ 965C 1A               ld a,(de)
 147+ 965D AE               xor (hl)
 148+ 965E 77               ld (hl),a
 149+ 965F 2C               inc l
 150+ 9660 1C               inc e
 151+ 9661 1A               ld a,(de)
 152+ 9662 AE               xor (hl)
 153+ 9663 77               ld (hl),a
 154+ 9664 13               inc de
 155+ 9665
 156+ 9665 E1               pop hl
 157+ 9666
 158+ 9666 1A               ld a,(de)
 159+ 9667 AE               xor (hl)
 160+ 9668 77               ld (hl),a
 161+ 9669 2C               inc l
 162+ 966A 1C               inc e
 163+ 966B 1A               ld a,(de)
 164+ 966C AE               xor (hl)
 165+ 966D 77               ld (hl),a
 166+ 966E 2C               inc l
 167+ 966F 1C               inc e
 168+ 9670 1A               ld a,(de)
 169+ 9671 AE               xor (hl)
 170+ 9672 77               ld (hl),a
 171+ 9673 13               inc de
 172+ 9674
 173+ 9674 E1               pop hl
 174+ 9675
 175+ 9675 1A               ld a,(de)
 176+ 9676 AE               xor (hl)
 177+ 9677 77               ld (hl),a
 178+ 9678 2C               inc l
 179+ 9679 1C               inc e
 180+ 967A 1A               ld a,(de)
 181+ 967B AE               xor (hl)
 182+ 967C 77               ld (hl),a
 183+ 967D 2C               inc l
 184+ 967E 1C               inc e
 185+ 967F 1A               ld a,(de)
 186+ 9680 AE               xor (hl)
 187+ 9681 77               ld (hl),a
 188+ 9682 13               inc de
 189+ 9683
 190+ 9683 E1               pop hl
 191+ 9684
 192+ 9684 1A               ld a,(de)
 193+ 9685 AE               xor (hl)
 194+ 9686 77               ld (hl),a
 195+ 9687 2C               inc l
 196+ 9688 1C               inc e
 197+ 9689 1A               ld a,(de)
 198+ 968A AE               xor (hl)
 199+ 968B 77               ld (hl),a
 200+ 968C 2C               inc l
 201+ 968D 1C               inc e
 202+ 968E 1A               ld a,(de)
 203+ 968F AE               xor (hl)
 204+ 9690 77               ld (hl),a
 205+ 9691 13               inc de
 206+ 9692
 207+ 9692 E1               pop hl
 208+ 9693
 209+ 9693 1A               ld a,(de)
 210+ 9694 AE               xor (hl)
 211+ 9695 77               ld (hl),a
 212+ 9696 2C               inc l
 213+ 9697 1C               inc e
 214+ 9698 1A               ld a,(de)
 215+ 9699 AE               xor (hl)
 216+ 969A 77               ld (hl),a
 217+ 969B 2C               inc l
 218+ 969C 1C               inc e
 219+ 969D 1A               ld a,(de)
 220+ 969E AE               xor (hl)
 221+ 969F 77               ld (hl),a
 222+ 96A0 13               inc de
 223+ 96A1
 224+ 96A1 E1               pop hl
 225+ 96A2
 226+ 96A2 1A               ld a,(de)
 227+ 96A3 AE               xor (hl)
 228+ 96A4 77               ld (hl),a
 229+ 96A5 2C               inc l
 230+ 96A6 1C               inc e
 231+ 96A7 1A               ld a,(de)
 232+ 96A8 AE               xor (hl)
 233+ 96A9 77               ld (hl),a
 234+ 96AA 2C               inc l
 235+ 96AB 1C               inc e
 236+ 96AC 1A               ld a,(de)
 237+ 96AD AE               xor (hl)
 238+ 96AE 77               ld (hl),a
 239+ 96AF 13               inc de
 240+ 96B0
 241+ 96B0 E1               pop hl
 242+ 96B1
 243+ 96B1 1A               ld a,(de)
 244+ 96B2 AE               xor (hl)
 245+ 96B3 77               ld (hl),a
 246+ 96B4 2C               inc l
 247+ 96B5 1C               inc e
 248+ 96B6 1A               ld a,(de)
 249+ 96B7 AE               xor (hl)
 250+ 96B8 77               ld (hl),a
 251+ 96B9 2C               inc l
 252+ 96BA 1C               inc e
 253+ 96BB 1A               ld a,(de)
 254+ 96BC AE               xor (hl)
 255+ 96BD 77               ld (hl),a
 256+ 96BE 13               inc de
 257+ 96BF
 258+ 96BF E1               pop hl
 259+ 96C0
 260+ 96C0 1A               ld a,(de)
 261+ 96C1 AE               xor (hl)
 262+ 96C2 77               ld (hl),a
 263+ 96C3 2C               inc l
 264+ 96C4 1C               inc e
 265+ 96C5 1A               ld a,(de)
 266+ 96C6 AE               xor (hl)
 267+ 96C7 77               ld (hl),a
 268+ 96C8 2C               inc l
 269+ 96C9 1C               inc e
 270+ 96CA 1A               ld a,(de)
 271+ 96CB AE               xor (hl)
 272+ 96CC 77               ld (hl),a
 273+ 96CD 13               inc de
 274+ 96CE
 275+ 96CE E1               pop hl
 276+ 96CF
 277+ 96CF 1A               ld a,(de)
 278+ 96D0 AE               xor (hl)
 279+ 96D1 77               ld (hl),a
 280+ 96D2 2C               inc l
 281+ 96D3 1C               inc e
 282+ 96D4 1A               ld a,(de)
 283+ 96D5 AE               xor (hl)
 284+ 96D6 77               ld (hl),a
 285+ 96D7 2C               inc l
 286+ 96D8 1C               inc e
 287+ 96D9 1A               ld a,(de)
 288+ 96DA AE               xor (hl)
 289+ 96DB 77               ld (hl),a
 290+ 96DC 13               inc de
 291+ 96DD
 292+ 96DD E1               pop hl
 293+ 96DE
 294+ 96DE 1A               ld a,(de)
 295+ 96DF AE               xor (hl)
 296+ 96E0 77               ld (hl),a
 297+ 96E1 2C               inc l
 298+ 96E2 1C               inc e
 299+ 96E3 1A               ld a,(de)
 300+ 96E4 AE               xor (hl)
 301+ 96E5 77               ld (hl),a
 302+ 96E6 2C               inc l
 303+ 96E7 1C               inc e
 304+ 96E8 1A               ld a,(de)
 305+ 96E9 AE               xor (hl)
 306+ 96EA 77               ld (hl),a
 307+ 96EB 13               inc de
 308+ 96EC
 309+ 96EC ED 73 1E 8C      ld (Scanlines_album_SP),sp
 310+ 96F0 ED 7B 00 8C      ld sp,(Stack)
 311+ 96F4 C9               ret
 312+ 96F5
 313+ 96F5              Pinta_lento
 314+ 96F5
 315+ 96F5 E1           1 pop hl
 316+ 96F6
 317+ 96F6 1A               ld a,(de)
 318+ 96F7 AE               xor (hl)
 319+ 96F8 77               ld (hl),a
 320+ 96F9 2C               inc l
 321+ 96FA 1C               inc e
 322+ 96FB 1A               ld a,(de)
 323+ 96FC AE               xor (hl)
 324+ 96FD 77               ld (hl),a
 325+ 96FE 2C               inc l
 326+ 96FF 1C               inc e
 327+ 9700 1A               ld a,(de)
 328+ 9701 AE               xor (hl)
 329+ 9702 77               ld (hl),a
 330+ 9703 13               inc de
 331+ 9704
 332+ 9704 10 EF            djnz 1B
 333+ 9706
 334+ 9706 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 335+ 970A ED 7B 00 8C      ld sp,(Stack)
 336+ 970E C9               ret
# file closed: Pinta_Sprites.asm
2165  970F              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 970F              ; ******************************************************************************************************************************************************************************************
   2+ 970F              ;
   3+ 970F              ; 26/06/23
   4+ 970F              ;
   5+ 970F              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 970F
   7+ 970F              Draw
   8+ 970F
   9+ 970F CD B5 99     	call Prepara_draw
  10+ 9712 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9713 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9714 28 05        	jr z,2F
  13+ 9716
  14+ 9716 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9719 18 0C        	jr 1F
  16+ 971B
  17+ 971B 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 971E 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9721 CD AD 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9724              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9724
  22+ 9724 CD 54 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9727
  24+ 9727 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 972A CB 6F        	bit 5,a
  26+ 972C 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 972E
  28+ 972E CD 43 97     	call Comprueba_limite_horizontal
  29+ 9731 CD D3 97     	call Comprueba_limite_vertical
  30+ 9734
  31+ 9734              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9734              ; -----------------------
  33+ 9734              ; -----------------------
  34+ 9734              ; -----------------------
  35+ 9734
  36+ 9734 CD 29 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9737 CD 60 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 973A
  39+ 973A 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 973D CB AF        	res 5,a											; _a ser de utilidad.
  41+ 973F 32 C0 8B     	ld (Ctrl_0),a
  42+ 9742
  43+ 9742 C9           	ret
  44+ 9743
  45+ 9743              ; *******************************************************************************************************************************************************************************************
  46+ 9743              ;	21/01/23
  47+ 9743              ;
  48+ 9743              ; 	Comprueba_limite_horizontal.
  49+ 9743              ;
  50+ 9743              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9743              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9743              ;
  53+ 9743              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9743              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9743              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9743              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9743
  58+ 9743
  59+ 9743
  60+ 9743 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9746 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9748 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 974A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 974C 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 974F 18 09            jr 6F
  66+ 9751 CB 5F        1 bit 3,a
  67+ 9753 28 0A            jr z,2F
  68+ 9755 E6 F7            and $f7
  69+ 9757 32 C0 8B         ld (Ctrl_0),a
  70+ 975A CD AD 98     6 call Inicializacion
  71+ 975D 18 5B            jr 5F
  72+ 975F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9760
  74+ 9760              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9760              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9760
  77+ 9760 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9761 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9764 CD A3 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9767 67           	ld h,a
  81+ 9768 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9769 CD A3 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 976C 67           	ld h,a
  84+ 976D A7           	and a
  85+ 976E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9770 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9771 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9774 FE 02        	cp 2
  89+ 9776 38 1E        	jr c,3F
  90+ 9778 28 1C        	jr z,3F
  91+ 977A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 977B 28 23            jr z,7F
  93+ 977D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 977F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9781 E1           	pop hl
  96+ 9782
  97+ 9782              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9782              ; _para indicar con E="2" en caso necesario.
  99+ 9782
 100+ 9782 E5               push hl
 101+ 9783 C5               push bc
 102+ 9784 CD A3 94     	call calcula_tercio
 103+ 9787 FE 01        	cp 1
 104+ 9789 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 978B CD BB 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 978E 28 26            jr z,9F
 107+ 9790 38 24            jr c,9F
 108+ 9792 1E 00        11 ld e,0
 109+ 9794 18 22            jr 8F
 110+ 9796 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9797 28 07        	jr z, 7F
 112+ 9799 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 979B 1E 00         	ld e,0
 114+ 979D E1           	pop hl
 115+ 979E 18 04        	jr 4F
 116+ 97A0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97A2 18 15            jr 10F
 118+ 97A4
 119+ 97A4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97A4              ; _para indicar con E="2" en caso necesario.
 121+ 97A4
 122+ 97A4 E5           4 push hl
 123+ 97A5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97A6 CD A3 94     	call calcula_tercio
 125+ 97A9 FE 01        	cp 1
 126+ 97AB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97AD CD BB 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97B0 28 04            jr z,9F
 129+ 97B2 30 02            jr nc,9F
 130+ 97B4 18 02        	jr 8F
 131+ 97B6 1E 02        9 ld e,2
 132+ 97B8 C1           8 pop bc
 133+ 97B9 E1           10 pop hl
 134+ 97BA C9           5 ret
 135+ 97BB
 136+ 97BB              ; --------------------
 137+ 97BB              ;
 138+ 97BB              ; 25/08/22
 139+ 97BB
 140+ 97BB CD A3 94     Comprueba_centro call calcula_tercio
 141+ 97BE 67               ld h,a
 142+ 97BF 08           	ex af,af
 143+ 97C0 FE 02        	cp 2
 144+ 97C2 38 07        	jr c,1F
 145+ 97C4 28 05        	jr z,1F
 146+ 97C6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97C9 18 03        	jr 2F
 148+ 97CB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97CE 08           2 ex af,af
 150+ 97CF A7               and a
 151+ 97D0 ED 42            sbc hl,bc
 152+ 97D2 C9               ret
 153+ 97D3
 154+ 97D3              ; *********************************************************************************************************************************************************************************************
 155+ 97D3              ;
 156+ 97D3              ;   16/8/22
 157+ 97D3              ;
 158+ 97D3              ;	Comprueba_limite_vertical
 159+ 97D3              ;
 160+ 97D3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97D3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97D3              ;
 163+ 97D3
 164+ 97D3 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97D6 7D           	ld a,l
 166+ 97D7 E6 1F        	and $1F
 167+ 97D9 57           	ld d,a
 168+ 97DA 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97DD BA           	cp d 											; Límite - Posición.
 170+ 97DE 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97DF 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97E2 CB 47        	bit 0,a
 173+ 97E4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97E6
 175+ 97E6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97E6
 177+ 97E6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97E9
 180+ 97E9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97E9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97E9
 183+ 97E9 3A B4 8B         ld a,(Coordenada_X)
 184+ 97EC 16 0F            ld d,Centro_izquierda
 185+ 97EE A7               and a
 186+ 97EF 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97F0 28 1E            jr z,3F
 188+ 97F2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97F4              ;                                                    ; _salimos sin modificar nada.
 190+ 97F4 18 0E            jr 2F
 191+ 97F6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97F9
 194+ 97F9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97F9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97F9
 197+ 97F9 3A B4 8B         ld a,(Coordenada_X)
 198+ 97FC 16 10            ld d,Centro_derecha
 199+ 97FE A7               and a
 200+ 97FF 92               sub d
 201+ 9800 28 0E            jr z,3F
 202+ 9802 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9804              ;                                                    ; _salimos sin modificar nada.
 204+ 9804 CB 43        2 bit 0,e
 205+ 9806 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9808 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9809 CD 9D 98         call Modificaccionne
 208+ 980C C1           	pop bc
 209+ 980D CD AD 98         call Inicializacion
 210+ 9810 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9811
 212+ 9811              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9811
 214+ 9811 C5           4 push bc
 215+ 9812 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9815 0A           	ld a,(bc)
 217+ 9816 3D           	dec a
 218+ 9817 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9818 7D           	ld a,l
 220+ 9819 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 981A CB 47        	bit 0,a
 222+ 981C 28 03        	jr z,5F
 223+ 981E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 981F 18 2E        	jr 7F
 225+ 9821
 226+ 9821              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9821
 228+ 9821 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9822 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9823 3A C0 8B     	ld a,(Ctrl_0)
 231+ 9826 CB 4F        	bit 1,a
 232+ 9828 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 982A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 982B
 235+ 982B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 982B
 237+ 982B 1C               inc e
 238+ 982C 1D               dec e
 239+ 982D 20 07            jr nz,12F
 240+ 982F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9830 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9831 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9834 18 44        13 jr 9F
 244+ 9836 CB 43        12 bit 0,e
 245+ 9838 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 983A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 983A C1           	pop bc
 248+ 983B 18 D3        	jr 3B
 249+ 983D 80           14 add b
 250+ 983E 6F               ld l,a
 251+ 983F 22 C3 8B     	ld (Posicion_actual),hl
 252+ 9842 CD 9D 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9845 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9847 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9849 32 C0 8B         ld (Ctrl_0),a
 256+ 984C F1           	pop af
 257+ 984D 18 2B        	jr 9F
 258+ 984F
 259+ 984F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 984F
 261+ 984F F5           7 push af
 262+ 9850 3A C0 8B     	ld a,(Ctrl_0)
 263+ 9853 CB 47        	bit 0,a
 264+ 9855 20 1D        	jr nz,8F
 265+ 9857 F1           	pop af
 266+ 9858
 267+ 9858              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9858
 269+ 9858 1C           	inc e
 270+ 9859 1D               dec e
 271+ 985A 20 07            jr nz,10F
 272+ 985C 90           	sub b
 273+ 985D 6F               ld l,a
 274+ 985E 22 C3 8B     	ld (Posicion_actual),hl
 275+ 9861 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9863              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9863 CB 43        10 bit 0,e
 278+ 9865 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9867              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9867 C1           	pop bc
 281+ 9868 18 A6        	jr 3B
 282+ 986A 90           16 sub b
 283+ 986B 6F               ld l,a
 284+ 986C 22 C3 8B     	ld (Posicion_actual),hl
 285+ 986F CD 9D 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9872 18 06            jr 9F
 287+ 9874 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9876 32 C0 8B         ld (Ctrl_0),a
 289+ 9879 F1           	pop af
 290+ 987A C1           9 pop bc
 291+ 987B 1E 00        	ld e,0
 292+ 987D CD AD 98         call Inicializacion
 293+ 9880 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9881 08           	ex af,af
 295+ 9882 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9883 18 8B            jr 3B
 297+ 9885
 298+ 9885              ; --------------------
 299+ 9885
 300+ 9885 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9887 CD D0 99     1 call PreviousScan
 302+ 988A 10 FB            djnz 1B
 303+ 988C 22 C3 8B     	ld (Posicion_actual),hl
 304+ 988F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9890 C9           	ret
 306+ 9891
 307+ 9891              ; --------------------
 308+ 9891
 309+ 9891 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9893 CD C1 99     1 call NextScan
 311+ 9896 10 FB            djnz 1B
 312+ 9898 22 C3 8B     	ld (Posicion_actual),hl
 313+ 989B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 989C C9           	ret
 315+ 989D
 316+ 989D              ; --------------------
 317+ 989D              ;
 318+ 989D              ;	22/01/23
 319+ 989D              ;
 320+ 989D              ;	E="1". Hemos cambiado de cuadrante.
 321+ 989D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 989D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 989D
 324+ 989D
 325+ 989D              Modificaccionne
 326+ 989D
 327+ 989D 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 98A0 FE 02        	cp 2
 329+ 98A2 CC 85 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98A5 DC 85 98         call c,Modifica_Pos_actual
 331+ 98A8 C8           	ret z
 332+ 98A9 CD 91 98         call Modifica_Pos_actual2
 333+ 98AC C9               ret
 334+ 98AD
 335+ 98AD              ; *************************************************************************************************************************************************************************************************
 336+ 98AD              ;
 337+ 98AD              ;	13/8/22
 338+ 98AD              ;
 339+ 98AD              ;	Inicializacion
 340+ 98AD              ;
 341+ 98AD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98AD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98AD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98AD              ;
 345+ 98AD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98AD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98AD              ;	_ desaparece/aparece.
 348+ 98AD
 349+ 98AD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98AD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98AD              ;
 352+ 98AD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98AD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98AD              ; 		   [E] ="0"
 355+ 98AD
 356+ 98AD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98AD
 358+ 98AD CD A3 94     Inicializacion call calcula_tercio
 359+ 98B0 28 36        	jr z,primit
 360+ 98B2 E6 02        	and 2
 361+ 98B4 20 07        	jr nz,segmit
 362+ 98B6 7D           	ld a,l
 363+ 98B7 FE 7F        	cp $7f
 364+ 98B9 38 2D        	jr c,primit
 365+ 98BB 28 2B        	jr z,primit
 366+ 98BD CD 23 99     segmit call column
 367+ 98C0 38 13        	jr c,tercuad
 368+ 98C2 3E 04        cuarcuad ld a,4
 369+ 98C4 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98C7 21 20 48     	ld hl,$4820
 371+ 98CA 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98CD 21 D6 8B     	ld hl,Limite_vertical
 373+ 98D0 36 0D        	ld (hl),$0d
 374+ 98D2 08           	ex af,af
 375+ 98D3 18 3C        	jr 1F
 376+ 98D5              tercuad
 377+ 98D5 3E 03        	ld a,3
 378+ 98D7 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98DA 21 20 48     	ld hl,$4820
 380+ 98DD 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98E0 21 D6 8B     	ld hl,Limite_vertical
 382+ 98E3 36 12        	ld (hl),$12
 383+ 98E5 08           	ex af,af
 384+ 98E6 18 29        	jr 1F
 385+ 98E8 CD 23 99     primit call column
 386+ 98EB 38 13        	jr c, primcuad
 387+ 98ED              segcuad
 388+ 98ED 3E 02        	ld a,2
 389+ 98EF 32 D2 8B     	ld (Cuad_objeto),a
 390+ 98F2 21 C0 4F     	ld hl,$4fc0
 391+ 98F5 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 98F8 21 D6 8B     	ld hl,Limite_vertical
 393+ 98FB 36 0D        	ld (hl),$0d
 394+ 98FD 08           	ex af,af
 395+ 98FE 18 11        	jr 1F
 396+ 9900              primcuad
 397+ 9900 3E 01        	ld a,1
 398+ 9902 32 D2 8B     	ld (Cuad_objeto),a
 399+ 9905 21 C0 4F     	ld hl,$4fc0
 400+ 9908 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 990B 21 D6 8B     	ld hl,Limite_vertical
 402+ 990E 36 12        	ld (hl),$12
 403+ 9910 08           	ex af,af
 404+ 9911
 405+ 9911 C5           1 push bc
 406+ 9912 E5           	push hl
 407+ 9913 D5           	push de
 408+ 9914
 409+ 9914 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 9917 CD C1 94     	call Genera_coordenadas
 411+ 991A
 412+ 991A D1           	pop de
 413+ 991B E1           	pop hl
 414+ 991C C1           	pop bc
 415+ 991D
 416+ 991D 21 C0 8B     	ld hl,Ctrl_0
 417+ 9920 CB EE        	set 5,(hl)
 418+ 9922 C9           	ret
 419+ 9923
 420+ 9923              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9923
 422+ 9923              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9923              ;
 424+ 9923              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9923
 426+ 9923 7D           column ld a,l
 427+ 9924 E6 1F        	and $1f
 428+ 9926 FE 10         	cp $10
 429+ 9928 C9            	ret
 430+ 9929
 431+ 9929              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9929              ;
 433+ 9929              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9929              ;
 435+ 9929              ; 14/12/22
 436+ 9929              ;
 437+ 9929              ;	Modifica: A y BC.
 438+ 9929
 439+ 9929 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 992C E6 01        	and 1
 441+ 992E 28 17        	jr z,1F
 442+ 9930
 443+ 9930              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9930
 445+ 9930 3A B4 8B     	ld a,(Coordenada_X)
 446+ 9933 47           	ld b,a
 447+ 9934 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9935 79           	ld a,c
 449+ 9936 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9937 38 08        	jr c,2F
 451+ 9939 47           	ld b,a
 452+ 993A 79           	ld a,c
 453+ 993B 90           	sub b
 454+ 993C 32 D3 8B     	ld (Columnas),a
 455+ 993F 18 1B        	jr 4F
 456+ 9941 79           2 ld a,c
 457+ 9942 32 D3 8B     	ld (Columnas),a
 458+ 9945 18 15        	jr 4F
 459+ 9947
 460+ 9947              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9947
 462+ 9947 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 994A 81           	add c
 464+ 994B 3D           	dec a
 465+ 994C D6 1F        	sub $1f
 466+ 994E 38 08        	jr c,3F
 467+ 9950 47           	ld b,a
 468+ 9951 79           	ld a,c
 469+ 9952 90           	sub b
 470+ 9953 32 D3 8B     	ld (Columnas),a
 471+ 9956 18 04        	jr 4F
 472+ 9958 79           3 ld a,c
 473+ 9959 32 D3 8B     	ld (Columnas),a
 474+ 995C D9           4 exx
 475+ 995D 4F           	ld c,a
 476+ 995E D9           	exx
 477+ 995F C9            ret
 478+ 9960
 479+ 9960              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9960              ;
 481+ 9960              ;   19/7/23
 482+ 9960              ;
 483+ 9960              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9960              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9960              ;
 486+ 9960              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9960              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9960              ;
 489+ 9960              ;	DESTRUYE: HL,B Y A.
 490+ 9960
 491+ 9960 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9963 FE 02        	cp 2
 493+ 9965 38 18        	jr c,1F
 494+ 9967 28 16        	jr z,1F
 495+ 9969 E6 01        	and 1
 496+ 996B 28 0D        	jr z,3F
 497+ 996D
 498+ 996D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 996D
 500+ 996D CD A9 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9970
 502+ 9970 7D           9 ld a,l
 503+ 9971 E6 1F        	and $1f
 504+ 9973 28 2A        	jr z,7F
 505+ 9975 2B           	dec hl
 506+ 9976 10 F8        	djnz 9B
 507+ 9978 18 25        	jr 7F
 508+ 997A
 509+ 997A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 997A
 511+ 997A 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 997D 18 20        	jr 7F
 513+ 997F
 514+ 997F 28 14        1 jr z,2F
 515+ 9981
 516+ 9981              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9981
 518+ 9981 CD A9 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9984
 520+ 9984 7D           4 ld a,l
 521+ 9985 E6 1F        	and $1f
 522+ 9987 28 03        	jr z,6F
 523+ 9989 2B           	dec hl
 524+ 998A 10 F8        	djnz 4B
 525+ 998C 06 0F        6 ld b,15
 526+ 998E CD D0 99     5 call PreviousScan
 527+ 9991 10 FB        	djnz 5B
 528+ 9993 18 0A        	jr 7F
 529+ 9995
 530+ 9995              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9995
 532+ 9995 CD A9 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9998 06 0F        	ld b,15
 534+ 999A CD D0 99     8 call PreviousScan
 535+ 999D 10 FB        	djnz 8B
 536+ 999F
 537+ 999F E5           7 push hl
 538+ 99A0 DD E1        	pop ix
 539+ 99A2
 540+ 99A2 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 99A5 E5           	push hl
 542+ 99A6 FD E1        	pop iy
 543+ 99A8
 544+ 99A8 C9           	ret
 545+ 99A9
 546+ 99A9              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99A9              ;
 548+ 99A9              ;	2/1/23
 549+ 99A9              ;
 550+ 99A9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99A9              ;
 552+ 99A9              ;	Tras esta rutina tenemos:
 553+ 99A9              ;
 554+ 99A9              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99A9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99A9              ;
 557+ 99A9              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99A9
 559+ 99A9 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 99AC 3A D3 8B     	ld a,(Columnas)
 561+ 99AF 3D           	dec a
 562+ 99B0 20 01        	jr nz,1F
 563+ 99B2 3C           	inc a
 564+ 99B3 47           1 ld b,a
 565+ 99B4 C9           	ret
 566+ 99B5
 567+ 99B5              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99B5              ;
 569+ 99B5              ;	Prepara_draw
 570+ 99B5              ;
 571+ 99B5              ;	Es una rutina de carga.
 572+ 99B5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99B5              ;
 574+ 99B5              ;	FUNCIONAMIENTO:
 575+ 99B5              ;
 576+ 99B5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99B5              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99B5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99B5              ;
 580+ 99B5              ;	DESTRUYE:
 581+ 99B5              ;
 582+ 99B5              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99B5
 584+ 99B5 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99B8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99B9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99BA 4E           	ld c,(hl)
 588+ 99BB 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99BE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99C0 C9           	ret
 591+ 99C1
 592+ 99C1              ;----------------------------------------------------------------------------------------------------------------
 593+ 99C1              ;
 594+ 99C1              ;	5/08/22
 595+ 99C1              ;
 596+ 99C1              ;   NextScan.
 597+ 99C1              ;
 598+ 99C1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99C1              ;
 600+ 99C1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99C1              ;
 602+ 99C1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99C1              ;
 604+ 99C1              ;       DESTRUIDOS: AF y HL !!!
 605+ 99C1              ;
 606+ 99C1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99C1              ;
 608+ 99C1
 609+ 99C1 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99C2 7C               ld a,h
 611+ 99C3 E6 07            and 7
 612+ 99C5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99C6
 614+ 99C6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C7 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99C9 6F               ld l,a
 617+ 99CA D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99CB
 619+ 99CB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99CC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99CE 67               ld h,a
 622+ 99CF C9               ret
 623+ 99D0
 624+ 99D0              ;----------------------------------------------------------------------------------------------------------------
 625+ 99D0              ;
 626+ 99D0              ;	5/08/22
 627+ 99D0              ;
 628+ 99D0              ;   PreviousScan.
 629+ 99D0              ;
 630+ 99D0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99D0              ;
 632+ 99D0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99D0              ;
 634+ 99D0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99D0              ;
 636+ 99D0              ;       DESTRUIDOS: AF y HL !!!
 637+ 99D0              ;
 638+ 99D0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99D0              ;
 640+ 99D0
 641+ 99D0 7C           PreviousScan ld a,h
 642+ 99D1 25               dec h               ; Dec H.
 643+ 99D2 E6 07            and 7
 644+ 99D4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99D5
 646+ 99D5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99D6 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99D8 6F               ld l,a
 649+ 99D9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99DA
 651+ 99DA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99DB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99DD 67               ld h,a
 654+ 99DE C9               ret
 655+ 99DF
 656+ 99DF
 657+ 99DF
 658+ 99DF
 659+ 99DF
 660+ 99DF
 661+ 99DF
 662+ 99DF
 663+ 99DF
 664+ 99DF
 665+ 99DF
 666+ 99DF
# file closed: Draw_XOR.asm
2166  99DF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99DF
   2+ 99DF              ; ******************************************************************************************************************************************************************************************
   3+ 99DF              ;
   4+ 99DF              ;   20/05/23
   5+ 99DF              ;
   6+ 99DF              ;	Recompone_posicion_inicio
   7+ 99DF              ;
   8+ 99DF              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99DF              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99DF              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99DF              ;	_ a una u otra rutina.
  12+ 99DF
  13+ 99DF              Recompone_posicion_inicio
  14+ 99DF
  15+ 99DF 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99E2 7D           	ld a,l
  17+ 99E3 E6 1F        	and $1f
  18+ 99E5 28 16        	jr z,1F
  19+ 99E7
  20+ 99E7 FE 1F        	cp $1f
  21+ 99E9 28 0D        	jr z,3F
  22+ 99EB
  23+ 99EB 21 BF 8B     	ld hl,Ctrl_2
  24+ 99EE CB C6        	set 0,(hl)
  25+ 99F0 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 99F3 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 99F6 18 08        	jr 2F
  28+ 99F8
  29+ 99F8 CD A6 9B     3 call Mov_left
  30+ 99FB 18 03        	jr 2F
  31+ 99FD
  32+ 99FD CD 83 9A     1 call Mov_right
  33+ 9A00 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A03 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 9A06 C9           	ret
  36+ 9A07
  37+ 9A07              ; ******************************************************************************************************************************************************************************************
  38+ 9A07              ;
  39+ 9A07              ;   27/05/23
  40+ 9A07              ;
  41+ 9A07              ;	Mov_down
  42+ 9A07              ;
  43+ 9A07              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A07              ;
  45+ 9A07              ;
  46+ 9A07              Mov_down
  47+ 9A07
  48+ 9A07 CD 71 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A0A              ;																	; _ repone (Puntero_objeto).
  50+ 9A0A 21 C0 8B     	ld hl,Ctrl_0
  51+ 9A0D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A0F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A0F              ; 																	; _ en el caso de que no lo haya.
  54+ 9A0F 3A DB 8B     	ld a,(Vel_down)
  55+ 9A12 47           	ld b,a
  56+ 9A13 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A16 CD A3 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A19 E6 02        	and 2
  59+ 9A1B 28 17        	jr z,1F
  60+ 9A1D
  61+ 9A1D              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A1D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A1D
  64+ 9A1D 7C           	ld a,h
  65+ 9A1E FE 57        	cp $57
  66+ 9A20 20 12        	jr nz,1F
  67+ 9A22
  68+ 9A22 7D           	ld a,l
  69+ 9A23 C6 20        	add $20
  70+ 9A25 30 0D        	jr nc,1F
  71+ 9A27
  72+ 9A27              ; ------------------------------
  73+ 9A27              ;
  74+ 9A27              ;	12/01/24
  75+ 9A27
  76+ 9A27              ;	call Reaparece_arriba
  77+ 9A27 CD 33 9D     	call Reinicio
  78+ 9A2A
  79+ 9A2A              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A2A
  81+ 9A2A 3A 24 8C     	ld a,(Ctrl_3)
  82+ 9A2D CB CF        	set 1,a
  83+ 9A2F 32 24 8C     	ld (Ctrl_3),a
  84+ 9A32
  85+ 9A32 18 08        	jr 3F
  86+ 9A34              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A34              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A34              ; ------------------------------
  89+ 9A34
  90+ 9A34 CD C1 99     1 call NextScan
  91+ 9A37 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A3A 10 DA            djnz 2B
  93+ 9A3C CD C1 94     3 call Genera_coordenadas
  94+ 9A3F C9           	ret
  95+ 9A40
  96+ 9A40              ; ******************************************************************************************************************************************************************************************
  97+ 9A40              ;
  98+ 9A40              ;   27/05/23
  99+ 9A40              ;
 100+ 9A40              ;	Mov_up
 101+ 9A40              ;
 102+ 9A40              ; 	Mueve el Sprite hacia arriba.
 103+ 9A40              ;
 104+ 9A40              ;
 105+ 9A40              Mov_up
 106+ 9A40
 107+ 9A40 CD 71 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A43              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A43 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A46 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A48              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A48              ; 																		; _ en el caso de que no lo haya.
 113+ 9A48 3A DA 8B     	ld a,(Vel_up)
 114+ 9A4B 47           	ld b,a
 115+ 9A4C 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A4F CD A3 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A52 A7           	and a
 118+ 9A53 20 10        	jr nz,1F
 119+ 9A55
 120+ 9A55              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A55              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A55
 123+ 9A55 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A56 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A58 20 0B            jr nz,1F
 126+ 9A5A 7D               ld a,l
 127+ 9A5B D6 20            sub $20
 128+ 9A5D 30 06            jr nc,1F
 129+ 9A5F 25               dec h
 130+ 9A60
 131+ 9A60              ; -----------------------------
 132+ 9A60 CD 14 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A63              ;	call Reinicio
 134+ 9A63              ; -----------------------------
 135+ 9A63
 136+ 9A63 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A65 CD D0 99     1 call PreviousScan
 138+ 9A68 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A6B 10 E2            djnz 3B
 140+ 9A6D CD C1 94     2 call Genera_coordenadas
 141+ 9A70 C9           	ret
 142+ 9A71
 143+ 9A71              ; -----------------------------
 144+ 9A71              ;
 145+ 9A71              ;	27/5/23
 146+ 9A71              ;
 147+ 9A71              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A71              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A71              ;
 150+ 9A71              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A71              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A71              ;
 153+ 9A71              ;	Modifica: A y (Puntero_objeto).
 154+ 9A71
 155+ 9A71 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A74 CB 47        	bit 0,a
 157+ 9A76 C8           	ret z
 158+ 9A77 CB 87        	res 0,a
 159+ 9A79 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A7C 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A7F 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A82 C9           	ret
 163+ 9A83
 164+ 9A83              ; ******************************************************************************************************************************************************************************************
 165+ 9A83              ;
 166+ 9A83              ;	19/10/22
 167+ 9A83              ;
 168+ 9A83              ;	Mov_right.
 169+ 9A83              ;
 170+ 9A83              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A83              ;
 172+ 9A83
 173+ 9A83 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A86 CB 77        	bit 6,a
 175+ 9A88 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A8A
 177+ 9A8A CD C2 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A8D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A8E
 180+ 9A8E 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A91 CB E6        	set 4,(hl)
 182+ 9A93 18 52        	jr 8F
 183+ 9A95
 184+ 9A95 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9A98 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A9A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A9A              ; 																	; _ en el caso de que no lo haya.
 188+ 9A9A 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A9D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A9F 20 46        	jr nz,8F
 191+ 9AA1
 192+ 9AA1 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AA4 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AA5 28 40        	jr z,8F
 195+ 9AA7
 196+ 9AA7              ; ---------- ---------- ----------
 197+ 9AA7              ;
 198+ 9AA7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA7
 200+ 9AA7 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AAA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AAC 28 11        	jr z,1F
 203+ 9AAE 38 06        	jr c,6F
 204+ 9AB0 FE 04        	cp 4
 205+ 9AB2 28 14        	jr z,7F
 206+ 9AB4 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AB6
 208+ 9AB6              ; ---------- ---------- ----------
 209+ 9AB6              ;
 210+ 9AB6              ; Perfiles de velocidad
 211+ 9AB6              ;
 212+ 9AB6
 213+ 9AB6 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AB9 FE FE        	cp $fe
 215+ 9ABB 20 2A        	jr nz,8F
 216+ 9ABD 18 10        	jr 3F
 217+ 9ABF 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AC2 FE FD        	cp $fd
 219+ 9AC4 20 21        	jr nz,8F
 220+ 9AC6 18 07        	jr 3F
 221+ 9AC8 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9ACB FE FB        	cp $fb
 223+ 9ACD 20 18        	jr nz,8F
 224+ 9ACF
 225+ 9ACF              ; ---------- ---------- ----------
 226+ 9ACF
 227+ 9ACF              3
 228+ 9ACF CD 02 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AD2              ;	call Reinicio
 230+ 9AD2
 231+ 9AD2              ; ---------- ---------- ----------
 232+ 9AD2              ;
 233+ 9AD2              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AD2
 235+ 9AD2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AD4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AD5 CD EE 9A     	call DESPLZ_DER
 238+ 9AD8 C1           	pop bc
 239+ 9AD9 10 F9        	djnz 5B
 240+ 9ADB 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ADE 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ADF 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9AE2 CD C1 94     	call Genera_coordenadas
 244+ 9AE5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE7
 246+ 9AE7              ; ---------- ---------- ----------
 247+ 9AE7
 248+ 9AE7 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AEA CD EE 9A     	call DESPLZ_DER
 250+ 9AED C9           2 ret
 251+ 9AEE
 252+ 9AEE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AEE              ;
 254+ 9AEE              ;	22/9/22
 255+ 9AEE              ;
 256+ 9AEE
 257+ 9AEE CD FD 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AF1 CD 49 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AF4 CD 72 9B         call Ciclo_completo
 260+ 9AF7 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AFA CB FE        	set 7,(hl)
 262+ 9AFC C9           	ret
 263+ 9AFD
 264+ 9AFD              ; ******************************************************************************************************************************************************************************************
 265+ 9AFD              ;	15/02/23
 266+ 9AFD              ;
 267+ 9AFD
 268+ 9AFD 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B00 47           	ld b,a
 270+ 9B01 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B04 23           1 inc hl
 272+ 9B05 23           	inc hl
 273+ 9B06 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B08 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B0B CD A2 90     	call Extrae_address
 276+ 9B0E 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9B11
 278+ 9B11              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B11
 280+ 9B11              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B11              ; Cuántos movimientos hemos hecho ??
 282+ 9B11              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B11
 284+ 9B11 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B14 EB           	ex de,hl
 286+ 9B15 A7           	and a
 287+ 9B16 ED 52        	sbc hl,de
 288+ 9B18 CB 3D        	srl l
 289+ 9B1A 3E 08        6 ld a,8
 290+ 9B1C 95           	sub l
 291+ 9B1D 30 1E        	jr nc,3F
 292+ 9B1F
 293+ 9B1F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B1F              ; B="0".
 295+ 9B1F
 296+ 9B1F 04           4 inc b
 297+ 9B20 3C           	inc a
 298+ 9B21 20 FC        	jr nz,4B
 299+ 9B23 78           	ld a,b
 300+ 9B24 08           	ex af,af
 301+ 9B25 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B28 23           5 inc hl
 303+ 9B29 23           	inc hl
 304+ 9B2A 10 FC        	djnz 5B
 305+ 9B2C 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B2F CD A2 90     	call Extrae_address
 307+ 9B32 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B35
 309+ 9B35              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B35              ; _(Posicion_actual).
 311+ 9B35
 312+ 9B35 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B38 34           	inc (hl)
 314+ 9B39 08               ex af,af
 315+ 9B3A 6F           	ld l,a
 316+ 9B3B 18 DD        	jr 6B
 317+ 9B3D
 318+ 9B3D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B3D
 320+ 9B3D 47           3 ld b,a
 321+ 9B3E 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B41 23           2 inc hl
 323+ 9B42 23           	inc hl
 324+ 9B43 10 FC        	djnz 2B
 325+ 9B45 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B48 C9           8 ret
 327+ 9B49
 328+ 9B49              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B49              ;
 330+ 9B49              ;	24/7/22
 331+ 9B49              ;
 332+ 9B49              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B49              ;
 334+ 9B49              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B49              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B49              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B49
 338+ 9B49 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B4C A7           	and a
 340+ 9B4D 20 1F        	jr nz,1F
 341+ 9B4F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B51 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B54
 344+ 9B54 21 C2 8B     	ld hl,Columns
 345+ 9B57 34           	inc (hl)
 346+ 9B58 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B5B E6 01        	and 1
 348+ 9B5D 28 0F        	jr z,1F
 349+ 9B5F 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B62 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B63 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B66 CD C1 94     	call Genera_coordenadas
 353+ 9B69 CD CE 9C     	call Inc_CTRL_DESPLZ
 354+ 9B6C 18 03        	jr 2F
 355+ 9B6E CD CE 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B71 C9           2 ret
 357+ 9B72
 358+ 9B72              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B72              ;
 360+ 9B72              ;	24/7/22
 361+ 9B72              ;
 362+ 9B72              ;	Ciclo_completo.
 363+ 9B72              ;
 364+ 9B72              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B72              ;
 366+ 9B72              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B72              ; 	Decrementamos (Columns).
 368+ 9B72              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B72              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B72
 371+ 9B72
 372+ 9B72 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B75 FE FF        	cp $ff
 374+ 9B77 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B79 E6 F0        	and $f0
 376+ 9B7B 20 28        	jr nz,3F
 377+ 9B7D
 378+ 9B7D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B7D
 380+ 9B7D 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B80 47           	ld b,a
 382+ 9B81 3E F8        	ld a,$f8
 383+ 9B83 80           	add b
 384+ 9B84 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B87 18 1C        	jr 3F
 386+ 9B89 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B8C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B8D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B8E 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B91 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B94 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B96 20 0A        	jr nz,2F
 393+ 9B98 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B9B 23           	inc hl
 395+ 9B9C 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9B9F CD C1 94     	call Genera_coordenadas
 397+ 9BA2
 398+ 9BA2              ; Inicia el puntero de Sprite.
 399+ 9BA2
 400+ 9BA2 CD B7 90     2 call Inicia_puntero_objeto_der
 401+ 9BA5 C9           3 ret
 402+ 9BA6
 403+ 9BA6              ; ******************************************************************************************************************************************************************************************
 404+ 9BA6              ;
 405+ 9BA6              ;	15/02/23
 406+ 9BA6              ;
 407+ 9BA6              ;	Mov_left.
 408+ 9BA6              ;
 409+ 9BA6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BA6              ;
 411+ 9BA6              Mov_left
 412+ 9BA6
 413+ 9BA6 21 C0 8B     	ld hl,Ctrl_0
 414+ 9BA9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BAB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BAB              ; 																	; _ en el caso de que no lo haya.
 417+ 9BAB 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9BAE CB 77        	bit 6,a
 419+ 9BB0 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BB2
 421+ 9BB2 CD C8 9C     	call Stop_Amadeus_left
 422+ 9BB5 C8           	ret z
 423+ 9BB6 20 4A        	jr nz,8F
 424+ 9BB8
 425+ 9BB8 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BBB A7           	and a
 427+ 9BBC 20 44        	jr nz,8F
 428+ 9BBE
 429+ 9BBE 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BC1 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BC2 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BC4
 433+ 9BC4              ; ---------- ---------- ----------
 434+ 9BC4
 435+ 9BC4 3A D8 8B     	ld a,(Vel_left)
 436+ 9BC7 FE 02        	cp 2
 437+ 9BC9 28 0F        	jr z,1F
 438+ 9BCB 38 04        	jr c,6F
 439+ 9BCD FE 04        	cp 4
 440+ 9BCF 28 12        	jr z,7F
 441+ 9BD1
 442+ 9BD1              ; ---------- ---------- ----------
 443+ 9BD1
 444+ 9BD1 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BD4 FE F8        	cp $f8
 446+ 9BD6 20 2A        	jr nz,8F
 447+ 9BD8 18 10        	jr 4F
 448+ 9BDA 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BDD FE F9        	cp $f9
 450+ 9BDF 20 21        	jr nz,8F
 451+ 9BE1 18 07        	jr 4F
 452+ 9BE3 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BE6 FE FB        	cp $fb
 454+ 9BE8 20 18        	jr nz,8F
 455+ 9BEA
 456+ 9BEA              ; ---------- ---------- ----------
 457+ 9BEA
 458+ 9BEA              4
 459+ 9BEA CD F0 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BED              ;	call Reinicio
 461+ 9BED
 462+ 9BED              ; ---------- ---------- ----------
 463+ 9BED
 464+ 9BED 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BEF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BF0
 467+ 9BF0              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BF0              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BF0
 470+ 9BF0 CD 09 9C     	call DESPLZ_IZQ
 471+ 9BF3 C1           	pop bc
 472+ 9BF4 10 F9        	djnz 5B
 473+ 9BF6 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BF9 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BFA 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9BFD CD C1 94     	call Genera_coordenadas
 477+ 9C00 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C02
 479+ 9C02              ; ---------- ---------- ----------
 480+ 9C02
 481+ 9C02              ; Movemos, no hay recolocación.
 482+ 9C02
 483+ 9C02 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9C05 CD 09 9C     	call DESPLZ_IZQ
 485+ 9C08 C9           2 ret
 486+ 9C09
 487+ 9C09              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C09              ;
 489+ 9C09              ;	22/9/22
 490+ 9C09
 491+ 9C09              DESPLZ_IZQ
 492+ 9C09
 493+ 9C09 CD 18 9C     	call Desplaza_izquierda
 494+ 9C0C CD 64 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C0F CD 8C 9C     	call Ciclo_completo_2
 496+ 9C12 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C15 CB BE        	res 7,(hl)
 498+ 9C17 C9           	ret
 499+ 9C18
 500+ 9C18              Desplaza_izquierda
 501+ 9C18
 502+ 9C18 3A D8 8B     	ld a,(Vel_left)
 503+ 9C1B 47           	ld b,a
 504+ 9C1C 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C1F 23           1 inc hl
 506+ 9C20 23           	inc hl
 507+ 9C21 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C23 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C26 CD A2 90     	call Extrae_address
 510+ 9C29 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C2C
 512+ 9C2C              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C2C
 514+ 9C2C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C2C              ; Cuántos movimientos hemos hecho ??
 516+ 9C2C              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C2C
 518+ 9C2C 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C2F EB           	ex de,hl
 520+ 9C30 A7           	and a
 521+ 9C31 ED 52        	sbc hl,de
 522+ 9C33 CB 3D        	srl l
 523+ 9C35 3E 08        6 ld a,8
 524+ 9C37 95           	sub l
 525+ 9C38 30 1E        	jr nc,3F
 526+ 9C3A
 527+ 9C3A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C3A              ; B="0".
 529+ 9C3A
 530+ 9C3A 04           4 inc b
 531+ 9C3B 3C           	inc a
 532+ 9C3C 20 FC        	jr nz,4B
 533+ 9C3E 78           	ld a,b
 534+ 9C3F 08           	ex af,af
 535+ 9C40 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C43 23           5 inc hl
 537+ 9C44 23           	inc hl
 538+ 9C45 10 FC        	djnz 5B
 539+ 9C47 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C4A CD A2 90     	call Extrae_address
 541+ 9C4D 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C50
 543+ 9C50              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C50              ; _(Posicion_actual).
 545+ 9C50
 546+ 9C50 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C53 35           	dec (hl)
 548+ 9C54 08           	ex af,af
 549+ 9C55 6F           	ld l,a
 550+ 9C56 18 DD        	jr 6B
 551+ 9C58
 552+ 9C58              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C58
 554+ 9C58 47           3 ld b,a
 555+ 9C59 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C5C 23           2 inc hl
 557+ 9C5D 23           	inc hl
 558+ 9C5E 10 FC        	djnz 2B
 559+ 9C60 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C63 C9           8 ret
 561+ 9C64
 562+ 9C64              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C64              ;
 564+ 9C64              ;	modifica_parametros_1er_DESPLZ
 565+ 9C64              ;
 566+ 9C64              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C64              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C64              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C64
 570+ 9C64 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C67 A7           	and a
 572+ 9C68 20 1E        	jr nz,1F
 573+ 9C6A 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C6B 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C6E 21 C2 8B     	ld hl,Columns
 576+ 9C71 34           	inc (hl)
 577+ 9C72 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C75 E6 01        	and 1
 579+ 9C77 20 0F        	jr nz,1F
 580+ 9C79 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C7C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C7D 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C80 CD C1 94     	call Genera_coordenadas
 584+ 9C83 CD DF 9C     	call Dec_CTRL_DESPLZ
 585+ 9C86 18 03        	jr 2F
 586+ 9C88 CD DF 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C8B C9           2 ret
 588+ 9C8C
 589+ 9C8C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C8C
 591+ 9C8C 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C8F FE F7        	cp $f7
 593+ 9C91 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C93 30 2C        	jr nc,3F
 595+ 9C95
 596+ 9C95              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C95
 598+ 9C95 06 00        	ld b,0
 599+ 9C97 04           4 inc b
 600+ 9C98 3C           	inc a
 601+ 9C99 FE F7        	cp $f7
 602+ 9C9B 20 FA        	jr nz,4B
 603+ 9C9D 3E FF        	ld a,$ff
 604+ 9C9F 90           	sub b
 605+ 9CA0 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9CA3 18 1C        	jr 3F
 607+ 9CA5
 608+ 9CA5              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CA5
 610+ 9CA5 21 C2 8B     1 ld hl,Columns
 611+ 9CA8 35           	dec (hl)
 612+ 9CA9 AF           	xor a
 613+ 9CAA 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9CAD 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9CB0 E6 01        	and 1
 616+ 9CB2 28 0A        	jr z,2F
 617+ 9CB4 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB7 2B           	dec hl
 619+ 9CB8 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CBB CD C1 94     	call Genera_coordenadas
 621+ 9CBE
 622+ 9CBE              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CBE
 624+ 9CBE CD CA 90     2 call Inicia_puntero_objeto_izq
 625+ 9CC1 C9           3 ret
 626+ 9CC2
 627+ 9CC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CC2              ;
 629+ 9CC2              ;	19/10/22
 630+ 9CC2              ;
 631+ 9CC2              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CC2              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CC2
 634+ 9CC2 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CC5 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC7 C9           	ret
 637+ 9CC8
 638+ 9CC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CC8              ;
 640+ 9CC8              ;	19/10/22
 641+ 9CC8              ;
 642+ 9CC8              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CC8              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CC8
 645+ 9CC8 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CCB FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CCD C9           	ret
 648+ 9CCE
 649+ 9CCE              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CCE              ;
 651+ 9CCE              ;	24/7/22
 652+ 9CCE              ;
 653+ 9CCE              ;	Inc_CTRL_DESPLZ
 654+ 9CCE              ;
 655+ 9CCE              ;
 656+ 9CCE              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CCE
 658+ 9CCE 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CD1 3A D9 8B     	ld a,(Vel_right)
 660+ 9CD4 A7           	and a
 661+ 9CD5 28 06        	jr z,1F
 662+ 9CD7 47           	ld b,a
 663+ 9CD8 34           3 inc (hl)
 664+ 9CD9 10 FD        	djnz 3B
 665+ 9CDB 18 01        	jr 2F
 666+ 9CDD 34           1 inc (hl)
 667+ 9CDE C9           2 ret
 668+ 9CDF
 669+ 9CDF              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CDF              ;
 671+ 9CDF              ;	5/2/23
 672+ 9CDF              ;
 673+ 9CDF              ;	Dec_CTRL_DESPLZ
 674+ 9CDF              ;
 675+ 9CDF              ;
 676+ 9CDF              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CDF
 678+ 9CDF 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CE2 3A D8 8B     	ld a,(Vel_left)
 680+ 9CE5 A7           	and a
 681+ 9CE6 28 06        	jr z,1F
 682+ 9CE8 47           	ld b,a
 683+ 9CE9 35           3 dec (hl)
 684+ 9CEA 10 FD        	djnz 3B
 685+ 9CEC 18 01        	jr 2F
 686+ 9CEE 35           1 dec (hl)
 687+ 9CEF C9           2 ret
 688+ 9CF0
 689+ 9CF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CF0
 691+ 9CF0 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CF3 01 1F 00     	ld bc,31
 693+ 9CF6 A7           	and a
 694+ 9CF7 ED 4A        	adc hl,bc
 695+ 9CF9 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9CFC 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CFF CB C6        	set 0,(hl)
 698+ 9D01 C9           	ret
 699+ 9D02
 700+ 9D02              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D02
 702+ 9D02 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D05 01 1F 00     	ld bc,31
 704+ 9D08 A7           	and a
 705+ 9D09 ED 42        	sbc hl,bc
 706+ 9D0B 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D0E 21 C0 8B     	ld hl,Ctrl_0
 708+ 9D11 CB CE        	set 1,(hl)
 709+ 9D13 C9           	ret
 710+ 9D14
 711+ 9D14              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D14
 713+ 9D14 24           Reaparece_abajo inc h
 714+ 9D15 01 E0 17     	ld bc,$17e0
 715+ 9D18 A7           	and a
 716+ 9D19 ED 4A        	adc hl,bc
 717+ 9D1B 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D1E 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D21 CB D6        	set 2,(hl)
 720+ 9D23 C9           	ret
 721+ 9D24
 722+ 9D24              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D24
 724+ 9D24 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D27 A7           	and a
 726+ 9D28 ED 42        	sbc hl,bc
 727+ 9D2A 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D2D 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D30 CB DE        	set 3,(hl)
 730+ 9D32 C9           	ret
 731+ 9D33
 732+ 9D33              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D33              ;
 734+ 9D33              ;	15/07/23
 735+ 9D33
 736+ 9D33              Reinicio
 737+ 9D33
 738+ 9D33              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D33
 740+ 9D33 AF           	xor a
 741+ 9D34 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D37 CD 55 9D     	call Limpia_contenido_hl
 743+ 9D3A
 744+ 9D3A 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D3D CD 55 9D     	call Limpia_contenido_hl
 746+ 9D40
 747+ 9D40 CD A3 92     	call Inicializa_Puntero_indice_mov
 748+ 9D43 CD 54 9E     	call Inicia_Puntero_mov
 749+ 9D46
 750+ 9D46 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D49 06 05        	ld b,5
 752+ 9D4B 77           1 ld (hl),a
 753+ 9D4C 23           	inc hl
 754+ 9D4D 10 FC        	djnz 1B
 755+ 9D4F
 756+ 9D4F 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D52 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D54
 759+ 9D54 C9           	ret
 760+ 9D55
 761+ 9D55 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D56 23           	inc hl
 763+ 9D57 77           	ld (hl),a
 764+ 9D58 C9           	ret
 765+ 9D59
 766+ 9D59              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D59              ;
 768+ 9D59              ;	18/6/24
 769+ 9D59              ;
 770+ 9D59
 771+ 9D59              Amadeus_a_izquierda
 772+ 9D59
 773+ 9D59              ;	Actualiza contador de movimientos.
 774+ 9D59
 775+ 9D59 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D5C 35           	dec (hl)
 777+ 9D5D 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D5F
 779+ 9D5F 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D62 2B           	dec hl
 781+ 9D63 2B           	dec hl
 782+ 9D64 2B           	dec hl
 783+ 9D65 2B           	dec hl
 784+ 9D66 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D69
 786+ 9D69 21 24 8C     	ld hl,Ctrl_3
 787+ 9D6C CB EE        	set 5,(hl)
 788+ 9D6E
 789+ 9D6E C9           	ret
 790+ 9D6F
 791+ 9D6F 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D70 C9           	ret
 793+ 9D71
 794+ 9D71
 795+ 9D71              Amadeus_a_derecha
 796+ 9D71
 797+ 9D71              ;	Actualiza contador de movimientos.
 798+ 9D71
 799+ 9D71 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D74 34           	inc (hl)
 801+ 9D75 3E 7A        	ld a,$7a
 802+ 9D77 BE           	cp (hl)
 803+ 9D78 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D7A
 805+ 9D7A 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D7D 23           	inc hl
 807+ 9D7E 23           	inc hl
 808+ 9D7F 23           	inc hl
 809+ 9D80 23           	inc hl
 810+ 9D81 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D84
 812+ 9D84 21 24 8C     	ld hl,Ctrl_3
 813+ 9D87 CB EE        	set 5,(hl)
 814+ 9D89 C9           	ret
 815+ 9D8A
 816+ 9D8A 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D8B C9           	ret
# file closed: Direcciones.asm
2167  9D8C              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D8C              ; ----- ----- ----- ----- -----
   2+ 9D8C              ;
   3+ 9D8C              ;   28/12/23
   4+ 9D8C
   5+ 9D8C              Movimiento
   6+ 9D8C
   7+ 9D8C              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D8C
   9+ 9D8C 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D8F CB 57            bit 2,a
  11+ 9D91 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D93
  13+ 9D93 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9D96 7E               ld a,(hl)
  15+ 9D97
  16+ 9D97              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D97
  18+ 9D97              Inicia_desplazamiento.
  19+ 9D97
  20+ 9D97              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D97
  22+ 9D97 CD 8A 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D9A
  24+ 9D9A              ; Iniciamos (Repetimos_mov).
  25+ 9D9A
  26+ 9D9A 7E               ld a,(hl)
  27+ 9D9B E6 0F            and $0f
  28+ 9D9D 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9DA0 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DA3
  31+ 9DA3              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DA3
  33+ 9DA3 23               inc hl
  34+ 9DA4 7E               ld a,(hl)
  35+ 9DA5 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9DA8 2B               dec hl
  37+ 9DA9
  38+ 9DA9 21 BF 8B         ld hl,Ctrl_2
  39+ 9DAC CB D6            set 2,(hl)
  40+ 9DAE
  41+ 9DAE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DAE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DAE
  44+ 9DAE              Desplazamiento_iniciado
  45+ 9DAE
  46+ 9DAE CD 5E 9E         call Aplica_desplazamiento
  47+ 9DB1
  48+ 9DB1              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DB1
  50+ 9DB1 3A 24 8C         ld a,(Ctrl_3)
  51+ 9DB4 CB 4F            bit 1,a
  52+ 9DB6 C0               ret nz
  53+ 9DB7
  54+ 9DB7 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DBA 35               dec (hl)
  56+ 9DBB C0               ret nz
  57+ 9DBC
  58+ 9DBC              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DBC              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DBC              ; Analiza (Cola_de_desplazamiento).
  61+ 9DBC
  62+ 9DBC 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DBF A7               and a
  64+ 9DC0 CC B3 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DC3 28 30            jr z,Reinicia_el_movimiento
  66+ 9DC5
  67+ 9DC5 FE FF            cp $ff
  68+ 9DC7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DC9
  70+ 9DC9 FE FE            cp $fe
  71+ 9DCB CC 38 9E         call z,Fijamos_bucle
  72+ 9DCE 28 25            jr z,Reinicia_el_movimiento
  73+ 9DD0
  74+ 9DD0 FE FD            cp $fd
  75+ 9DD2 20 11            jr nz,1F
  76+ 9DD4
  77+ 9DD4              ; ---
  78+ 9DD4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DD4
  80+ 9DD4 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DD7 CB 5F            bit 3,a
  82+ 9DD9 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DDB
  84+ 9DDB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DDB
  86+ 9DDB 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DDE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DE0
  89+ 9DE0 CD 49 9E         call Inicia_Repetimos_movimiento
  90+ 9DE3 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DE5              ; ---
  92+ 9DE5
  93+ 9DE5 FE 01        1 cp 1
  94+ 9DE7 CA 22 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DEA
  96+ 9DEA 3D               dec a
  97+ 9DEB 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DEE
  99+ 9DEE 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DF1 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DF4              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DF4 C9               ret
 103+ 9DF5
 104+ 9DF5              Reinicia_el_movimiento
 105+ 9DF5
 106+ 9DF5 3A BF 8B         ld a,(Ctrl_2)
 107+ 9DF8 CB 5F            bit 3,a
 108+ 9DFA 28 1B            jr z,2F
 109+ 9DFC
 110+ 9DFC              ; (Cola_de_desplazamiento)="254".
 111+ 9DFC
 112+ 9DFC 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DFF 35               dec (hl)
 114+ 9E00 20 15            jr nz,2F
 115+ 9E02
 116+ 9E02              ; Fin de las repeticiones del último movimiento.
 117+ 9E02
 118+ 9E02 21 BF 8B         ld hl,Ctrl_2
 119+ 9E05 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E07
 121+ 9E07 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9E0A 23               inc hl
 123+ 9E0B 23               inc hl
 124+ 9E0C 23               inc hl
 125+ 9E0D 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E10              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E10 7E               ld a,(hl)
 128+ 9E11 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E14
 130+ 9E14 C3 BC 9D         jp Cola
 131+ 9E17
 132+ 9E17 CD 54 9E     2 call Inicia_Puntero_mov
 133+ 9E1A
 134+ 9E1A 21 BF 8B         ld hl,Ctrl_2
 135+ 9E1D CB 96            res 2,(hl)
 136+ 9E1F
 137+ 9E1F C3 8C 9D         jp Movimiento
 138+ 9E22
 139+ 9E22              Siguiente_desplazamiento
 140+ 9E22
 141+ 9E22              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E22              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E22
 144+ 9E22 21 BF 8B         ld hl,Ctrl_2
 145+ 9E25 CB 96            res 2,(hl)
 146+ 9E27
 147+ 9E27 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E2A 23               inc hl
 149+ 9E2B 23               inc hl
 150+ 9E2C 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E2F
 152+ 9E2F 7E               ld a,(hl)
 153+ 9E30 A7               and a
 154+ 9E31 CC B3 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E34 CA F5 9D         jp z,Reinicia_el_movimiento
 156+ 9E37
 157+ 9E37 C9               ret
 158+ 9E38
 159+ 9E38              ; Subrutinas -----------------------------------------
 160+ 9E38              ; ---------- --------- --------- ---------- ----------
 161+ 9E38              ;
 162+ 9E38              ;   24/07/23
 163+ 9E38              ;
 164+ 9E38              ;   Fijamos_bucle
 165+ 9E38              ;
 166+ 9E38              ;
 167+ 9E38
 168+ 9E38              Fijamos_bucle
 169+ 9E38
 170+ 9E38 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E3B 3C               inc a
 172+ 9E3C 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E3F
 174+ 9E3F CD B3 9E         call Incrementa_Puntero_indice_mov
 175+ 9E42 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E45 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E48 C9               ret
 178+ 9E49
 179+ 9E49              ; ---------- --------- --------- ---------- ----------
 180+ 9E49              ;
 181+ 9E49              ;   07/7/23
 182+ 9E49              ;
 183+ 9E49              ;   Inicia_Repetimos_movimiento
 184+ 9E49              ;
 185+ 9E49              ;
 186+ 9E49
 187+ 9E49              Inicia_Repetimos_movimiento
 188+ 9E49
 189+ 9E49              ; Iniciamos (Repetimos_movimiento).
 190+ 9E49
 191+ 9E49 DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E4D DD 7E 02         ld a,(ix+2)
 193+ 9E50 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E53
 195+ 9E53 C9               ret
 196+ 9E54
 197+ 9E54              ; ---------- --------- --------- ---------- ----------
 198+ 9E54              ;
 199+ 9E54              ;   26/6/23
 200+ 9E54              ;
 201+ 9E54              ;   Inicia_Puntero_mov
 202+ 9E54              ;
 203+ 9E54              ;
 204+ 9E54
 205+ 9E54 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E57 CD A2 90         call Extrae_address
 207+ 9E5A 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E5D C9               ret
 209+ 9E5E
 210+ 9E5E              ; ---------- --------- --------- ---------- ----------
 211+ 9E5E              ;
 212+ 9E5E              ;   27/06/23
 213+ 9E5E              ;
 214+ 9E5E              ;   Aplica_movimiento.
 215+ 9E5E
 216+ 9E5E              Aplica_desplazamiento
 217+ 9E5E
 218+ 9E5E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E5E
 220+ 9E5E 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E61
 222+ 9E61 7E               ld a,(hl)
 223+ 9E62 E6 F0            and $f0
 224+ 9E64 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E65
 226+ 9E65 CB 7E            bit 7,(hl)
 227+ 9E67 28 03            jr z,1F
 228+ 9E69 CD 40 9A         call Mov_up
 229+ 9E6C 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E6F CB 76            bit 6,(hl)
 231+ 9E71 28 03            jr z,2F
 232+ 9E73 CD 07 9A         call Mov_down
 233+ 9E76
 234+ 9E76              ; Se ha aplicado reinicio ???
 235+ 9E76              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E76
 237+ 9E76              ;    ld a,(Ctrl_3)
 238+ 9E76              ;    bit 1,a
 239+ 9E76              ;    ret nz
 240+ 9E76
 241+ 9E76 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E79 CB 6E            bit 5,(hl)
 243+ 9E7B 28 03            jr z,3F
 244+ 9E7D CD A6 9B         call Mov_left
 245+ 9E80 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E83 CB 66            bit 4,(hl)
 247+ 9E85 C8               ret z
 248+ 9E86 CD 83 9A         call Mov_right
 249+ 9E89 C9               ret
 250+ 9E8A
 251+ 9E8A              ; ---------- --------- --------- ---------- ----------
 252+ 9E8A              ;
 253+ 9E8A              ;   26/06/23
 254+ 9E8A              ;
 255+ 9E8A              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E8A
 257+ 9E8A              Ajusta_velocidad_desplazamiento
 258+ 9E8A
 259+ 9E8A              ; 1er byte de la cadena de movimiento.
 260+ 9E8A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E8A
 262+ 9E8A CD A8 9E         call Extrae_nibble_alto
 263+ 9E8D
 264+ 9E8D 32 DA 8B         ld (Vel_up),a
 265+ 9E90 79               ld a,c
 266+ 9E91 E6 0F            and $0f
 267+ 9E93 32 DB 8B         ld (Vel_down),a
 268+ 9E96
 269+ 9E96              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E96              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E96
 272+ 9E96 23               inc hl
 273+ 9E97 CD A8 9E         call Extrae_nibble_alto
 274+ 9E9A
 275+ 9E9A 32 D8 8B         ld (Vel_left),a
 276+ 9E9D 79               ld a,c
 277+ 9E9E E6 0F            and $0f
 278+ 9EA0 32 D9 8B         ld (Vel_right),a
 279+ 9EA3
 280+ 9EA3              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EA3
 282+ 9EA3 23               inc hl
 283+ 9EA4 22 E6 8B         ld (Puntero_mov),hl
 284+ 9EA7 C9               ret
 285+ 9EA8
 286+ 9EA8 06 04        Extrae_nibble_alto ld b,4
 287+ 9EAA 7E               ld a,(hl)
 288+ 9EAB 4F               ld c,a
 289+ 9EAC E6 F0            and $f0
 290+ 9EAE CB 3F        1 srl a
 291+ 9EB0 10 FC            djnz 1B
 292+ 9EB2 C9               ret
 293+ 9EB3
 294+ 9EB3              ; ---------- --------- --------- ---------- ----------
 295+ 9EB3              ;
 296+ 9EB3              ;   5/7/23
 297+ 9EB3              ;
 298+ 9EB3              ;   Incrementa_Puntero_indice_mov
 299+ 9EB3
 300+ 9EB3              Incrementa_Puntero_indice_mov
 301+ 9EB3
 302+ 9EB3 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9EB6 34               inc (hl)
 304+ 9EB7
 305+ 9EB7 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EBA 01 02 00         ld bc,2
 307+ 9EBD A7               and a
 308+ 9EBE 09               add hl,bc
 309+ 9EBF 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9EC2
 311+ 9EC2 7E               ld a,(hl)
 312+ 9EC3 A7               and a
 313+ 9EC4
 314+ 9EC4              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EC4
 316+ 9EC4              ;    jr z,$
 317+ 9EC4
 318+ 9EC4              ;! Reinicia el Patrón de movimiento.
 319+ 9EC4
 320+ 9EC4 CC C9 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC7
 322+ 9EC7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EC8
 324+ 9EC8 C9               ret
 325+ 9EC9
 326+ 9EC9              ; ---------- --------- --------- ---------- ----------
 327+ 9EC9              ;
 328+ 9EC9              ;   15/01/24
 329+ 9EC9              ;
 330+ 9EC9              ;   Inicializa_Puntero_indice_mov
 331+ 9EC9
 332+ 9EC9              Inicializa_Puntero_indice_mov_2
 333+ 9EC9
 334+ 9EC9              ; Existe etiqueta de bucle principal???
 335+ 9EC9
 336+ 9EC9 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ECC 24               inc h
 338+ 9ECD 25               dec h
 339+ 9ECE 28 05            jr z,2F
 340+ 9ED0
 341+ 9ED0 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9ED3 18 14            jr 3F
 343+ 9ED5
 344+ 9ED5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ED5
 346+ 9ED5 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9ED8 47               ld b,a
 348+ 9ED9
 349+ 9ED9 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9EDC 2B           1 dec hl
 351+ 9EDD 2B               dec hl
 352+ 9EDE 10 FC            djnz 1B
 353+ 9EE0 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9EE3
 355+ 9EE3 AF               xor a
 356+ 9EE4 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9EE7 18 06            jr 4F
 358+ 9EE9
 359+ 9EE9 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EEC 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9EEF C9           4 ret
 362+ 9EF0
 363+ 9EF0              ; ----------------------------------------------------------------------
 364+ 9EF0              ;
 365+ 9EF0              ;   30/01/24
 366+ 9EF0              ;
 367+ 9EF0              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EF0
 369+ 9EF0 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EF3 CD 3E 94         call Calcula_salto_en_BC
 371+ 9EF6 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EF9 A7               and a
 373+ 9EFA ED 4A            adc hl,bc
 374+ 9EFC C9               ret
 375+ 9EFD
 376+ 9EFD              ; ----------------------------------------------------------------------
 377+ 9EFD              ;
 378+ 9EFD              ;   30/01/24
 379+ 9EFD              ;
 380+ 9EFD              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EFD              ;
 382+ 9EFD              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EFD
 384+ 9EFD 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EFE 23               inc hl
 386+ 9EFF 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F00 69               ld l,c
 388+ 9F01 60               ld h,b
 389+ 9F02 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F05 C9               ret
 391+ 9F06
# file closed: Movimiento.asm
2168  9F06              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F06              Motor_de_disparos_entidades
   2+ 9F06
   3+ 9F06 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9F09 FE 07            cp 7
   5+ 9F0B C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F0C
   7+ 9F0C 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F0E 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F11
  10+ 9F11 CD A2 90     1 call Extrae_address
  11+ 9F14 13               inc de
  12+ 9F15 13               inc de
  13+ 9F16 ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F1A
  15+ 9F1A 23               inc hl
  16+ 9F1B
  17+ 9F1B 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F1C 35               dec (hl)
  19+ 9F1D 28 14            jr z,3F
  20+ 9F1F
  21+ 9F1F 23               inc hl
  22+ 9F20
  23+ 9F20 CD A2 90         call Extrae_address
  24+ 9F23              ;   (Puntero_de_impresion) del disparo en HL.
  25+ 9F23
  26+ 9F23
  27+ 9F23              ;! Velocidad del disparo de entidades.
  28+ 9F23
  29+ 9F23              ;    call NextScan
  30+ 9F23              ;    call NextScan
  31+ 9F23              ;    call NextScan
  32+ 9F23              ;    call NextScan
  33+ 9F23 CD C1 99         call NextScan
  34+ 9F26
  35+ 9F26              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  36+ 9F26
  37+ 9F26 CD 37 9F         call Fin_de_disparo_de_entidad
  38+ 9F29
  39+ 9F29 EB               ex de,hl
  40+ 9F2A
  41+ 9F2A 73               ld (hl),e
  42+ 9F2B 23               inc hl
  43+ 9F2C 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  44+ 9F2D
  45+ 9F2D 2A 27 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F30 18 02            jr 2F
  47+ 9F32
  48+ 9F32 C9               ret
  49+ 9F33
  50+ 9F33 EB           3 ex de,hl
  51+ 9F34 10 DB        2 djnz 1B
  52+ 9F36
  53+ 9F36 C9               ret
  54+ 9F37
  55+ 9F37              ; ------------- ------------- ------------
  56+ 9F37              ;
  57+ 9F37              ;   25/9/24
  58+ 9F37
  59+ 9F37              Fin_de_disparo_de_entidad
  60+ 9F37
  61+ 9F37 7C               ld a,h
  62+ 9F38 FE 54            cp $54
  63+ 9F3A D8               ret c
  64+ 9F3B
  65+ 9F3B D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  66+ 9F3C
  67+ 9F3C 5D               ld e,l
  68+ 9F3D 54               ld d,h
  69+ 9F3E
  70+ 9F3E 21 E0 57         ld hl,$57e0
  71+ 9F41 ED 52            sbc hl,de
  72+ 9F43
  73+ 9F43 38 04            jr c,Elimina_disparo_entidad
  74+ 9F45
  75+ 9F45 6B               ld l,e
  76+ 9F46 62               ld h,d
  77+ 9F47
  78+ 9F47 D1               pop de
  79+ 9F48
  80+ 9F48 C9               ret
  81+ 9F49
  82+ 9F49              ; ------------ ----------- ------------
  83+ 9F49              ;
  84+ 9F49              ;   25/9/24
  85+ 9F49
  86+ 9F49              Elimina_disparo_entidad
  87+ 9F49
  88+ 9F49 21 14 8C         ld hl,Numero_de_disparos_de_entidades
  89+ 9F4C 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
  90+ 9F4D
  91+ 9F4D E1               pop hl
  92+ 9F4E E5               push hl
  93+ 9F4F
  94+ 9F4F 2B               dec hl
  95+ 9F50 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
  96+ 9F51
  97+ 9F51 16 06            ld d,6                                                              ; Contador
  98+ 9F53 AF               xor a                                                               ; Borrador
  99+ 9F54
 100+ 9F54 77           1 ld (hl),a
 101+ 9F55 15               dec d
 102+ 9F56 23               inc hl
 103+ 9F57 20 FB            jr nz,1B
 104+ 9F59
 105+ 9F59 D1               pop de
 106+ 9F5A
 107+ 9F5A 21 26 8C         ld hl,Ctrl_5                                                        ; Indica que desaparece un disparo de entidad.
 108+ 9F5D CB D6            set 2,(hl)
 109+ 9F5F
 110+ 9F5F 21 00 00         ld hl,0
 111+ 9F62
 112+ 9F62 C9               ret
 113+ 9F63              ; --------------------------------------------------------------------------------------
 114+ 9F63              ;
 115+ 9F63              ;   19/09/24
 116+ 9F63              ;
 117+ 9F63
 118+ 9F63              Genera_datos_de_impresion_disparos_Entidades
 119+ 9F63
 120+ 9F63              ;*  Exclusiones.
 121+ 9F63
 122+ 9F63 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 123+ 9F66 47               ld b,a
 124+ 9F67 3E 07            ld a,7
 125+ 9F69 90               sub b
 126+ 9F6A C8               ret z
 127+ 9F6B
 128+ 9F6B 3C               inc a
 129+ 9F6C 08               ex af,af
 130+ 9F6D
 131+ 9F6D              ; ---------------
 132+ 9F6D
 133+ 9F6D              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 134+ 9F6D
 135+ 9F6D              ;	ld a,(Ctrl_5)
 136+ 9F6D              ;	bit 2,a
 137+ 9F6D              ;	di
 138+ 9F6D              ;	jr nz,$
 139+ 9F6D              ;	ei
 140+ 9F6D
 141+ 9F6D CD 9B 90         call Inicia_Puntero_Disparo_Entidades
 142+ 9F70
 143+ 9F70 CD A2 90     1 call Extrae_address
 144+ 9F73
 145+ 9F73 23               inc hl
 146+ 9F74 7E               ld a,(hl)
 147+ 9F75 A7               and a
 148+ 9F76
 149+ 9F76 28 1D            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 150+ 9F78
 151+ 9F78 2B               dec hl
 152+ 9F79
 153+ 9F79 ED 73 00 8C      ld (Stack),sp
 154+ 9F7D F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 155+ 9F7E
 156+ 9F7E              Genera_scanlines_de_los_disparos_de_entidades.
 157+ 9F7E
 158+ 9F7E C1               pop bc
 159+ 9F7F E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 160+ 9F80              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 161+ 9F80 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 162+ 9F84
 163+ 9F84 F1               pop af
 164+ 9F85 F1               pop af
 165+ 9F86 F1               pop af
 166+ 9F87
 167+ 9F87 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 168+ 9F8B
 169+ 9F8B E5               push hl                                                   ;? Sube 2º scanline al álbum.
 170+ 9F8C CD C1 99         call NextScan
 171+ 9F8F E5               push hl                                                   ;? Sube 1er scanline al álbum.
 172+ 9F90 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 173+ 9F91
 174+ 9F91 ED 7B 00 8C      ld sp,(Stack)
 175+ 9F95
 176+ 9F95              Situa_en_siguiente_caja
 177+ 9F95
 178+ 9F95 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 179+ 9F96 3D               dec a
 180+ 9F97 C8               ret z
 181+ 9F98 08               ex af,af
 182+ 9F99
 183+ 9F99 13               inc de
 184+ 9F9A 13               inc de
 185+ 9F9B
 186+ 9F9B EB               ex de,hl
 187+ 9F9C
 188+ 9F9C 18 D2            jr 1B
 189+ 9F9E
 190+ 9F9E              ; --------------------------------------------------------------------------------------
 191+ 9F9E              ;
 192+ 9F9E              ;   18/09/24
 193+ 9F9E              ;
 194+ 9F9E
 195+ 9F9E              Genera_disparo_de_entidad_maldosa
 196+ 9F9E
 197+ 9F9E              ;   Estructura de un disparo de entidades.
 198+ 9F9E
 199+ 9F9E              ;   Disparo_1 defw 0								; Puntero objeto.
 200+ 9F9E              ; 	defw 0											; Puntero de impresión.
 201+ 9F9E              ;	defw 0											; Control.
 202+ 9F9E
 203+ 9F9E              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 204+ 9F9E              ;   _de la entidad en el momento de disparar.
 205+ 9F9E
 206+ 9F9E              ;   El byte alto muestra la siguiente información:
 207+ 9F9E              ;
 208+ 9F9E              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 209+ 9F9E              ;                        _antes de desplazarse a derecha/izquierda.
 210+ 9F9E              ;
 211+ 9F9E              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 212+ 9F9E              ;
 213+ 9F9E              ;                        10xx ..... Izquierda.
 214+ 9F9E              ;                        01xx ..... Derecha.
 215+ 9F9E              ;                        00xx ..... Recto.
 216+ 9F9E
 217+ 9F9E              ;*  Exclusiones.
 218+ 9F9E
 219+ 9F9E              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 220+ 9F9E              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 221+ 9F9E
 222+ 9F9E 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 223+ 9FA1 A7               and a
 224+ 9FA2 C8               ret z
 225+ 9FA3
 226+ 9FA3 3A B5 8B         ld a,(Coordenada_y)
 227+ 9FA6 A7               and a
 228+ 9FA7 C8               ret z
 229+ 9FA8
 230+ 9FA8 3D               dec a
 231+ 9FA9 C8               ret z
 232+ 9FAA
 233+ 9FAA FE 0E            cp 14
 234+ 9FAC D0               ret nc
 235+ 9FAD
 236+ 9FAD              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 237+ 9FAD              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 238+ 9FAD              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 239+ 9FAD              ;
 240+ 9FAD
 241+ 9FAD 21 16 8C         ld hl,Permiso_de_disparo_Entidades			        ; No más disparos en este FRAME.
 242+ 9FB0 35               dec (hl)
 243+ 9FB1
 244+ 9FB1 FD 21 70 83      ld iy,Disparo_de_entidad
 245+ 9FB5
 246+ 9FB5              ;! Debuggg
 247+ 9FB5
 248+ 9FB5              ;   Decrementa el numero de disparos de entidades.
 249+ 9FB5
 250+ 9FB5 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 251+ 9FB8 35               dec (hl)
 252+ 9FB9
 253+ 9FB9              ;   Puntero de impresión del disparo en BC.
 254+ 9FB9
 255+ 9FB9 21 29 8C         ld hl,Puntero_de_impresion_disparo_de_entidad
 256+ 9FBC 4E               ld c,(hl)
 257+ 9FBD 23               inc hl
 258+ 9FBE 46               ld b,(hl)
 259+ 9FBF
 260+ 9FBF CD 9B 90         call Inicia_Puntero_Disparo_Entidades
 261+ 9FC2
 262+ 9FC2 2A 27 8C     1 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)              ; En la 1ª caja del índice.
 263+ 9FC5 CD A2 90         call Extrae_address
 264+ 9FC8
 265+ 9FC8              ;   Comprobamos si la caja está vacía.
 266+ 9FC8
 267+ 9FC8 23               inc hl
 268+ 9FC9 7E               ld a,(hl)
 269+ 9FCA A7               and a
 270+ 9FCB
 271+ 9FCB 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 272+ 9FCD
 273+ 9FCD              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 274+ 9FCD
 275+ 9FCD 2B               dec hl
 276+ 9FCE
 277+ 9FCE FD 7D            ld a,iyl
 278+ 9FD0 77               ld (hl),a
 279+ 9FD1 23               inc hl
 280+ 9FD2 FD 7C            ld a,iyh
 281+ 9FD4 77               ld (hl),a                                           ; Guarda el (puntero objeto) del disparo en la caja.
 282+ 9FD5
 283+ 9FD5 23               inc hl
 284+ 9FD6
 285+ 9FD6 71               ld (hl),c
 286+ 9FD7 23               inc hl
 287+ 9FD8 70               ld (hl),b                                           ; Guarda el puntero de impresión.
 288+ 9FD9
 289+ 9FD9 23               inc hl
 290+ 9FDA
 291+ 9FDA 3A BE 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 292+ 9FDD 77               ld (hl),a
 293+ 9FDE
 294+ 9FDE 23               inc hl
 295+ 9FDF
 296+ 9FDF              ;! Ajusta el grado de inclinación del disparo.
 297+ 9FDF
 298+ 9FDF 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 299+ 9FE1
 300+ 9FE1              ; Determina tendencia del disparo.
 301+ 9FE1
 302+ 9FE1 3A 6E 89         ld a,(CX_Amadeus)
 303+ 9FE4 47               ld b,a
 304+ 9FE5 3A B4 8B         ld a,(Coordenada_X)
 305+ 9FE8 90               sub b
 306+ 9FE9 38 07            jr c,Disparo_a_derecha
 307+ 9FEB
 308+ 9FEB FE 04        Disparo_a_izquierda cp 4
 309+ 9FED
 310+ 9FED D8               ret c
 311+ 9FEE C8               ret z
 312+ 9FEF
 313+ 9FEF CB FE            set 7,(hl)
 314+ 9FF1 C9               ret
 315+ 9FF2
 316+ 9FF2 47           Disparo_a_derecha ld b,a
 317+ 9FF3 3E FF            ld a,$ff
 318+ 9FF5 90               sub b
 319+ 9FF6
 320+ 9FF6 FE 04            cp 4
 321+ 9FF8
 322+ 9FF8 D8               ret c
 323+ 9FF9 C8               ret z
 324+ 9FFA
 325+ 9FFA CB F6            set 6,(hl)
 326+ 9FFC C9               ret
 327+ 9FFD
 328+ 9FFD              ;   --- --- ---
 329+ 9FFD
 330+ 9FFD              Situa_en_siguiente_disparo
 331+ 9FFD
 332+ 9FFD 13               inc de
 333+ 9FFE 13               inc de
 334+ 9FFF
 335+ 9FFF ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 336+ A003 18 BD            jr 1B
 337+ A005
 338+ A005              ; --------------------------------------------------------------------------------------
 339+ A005              ;
 340+ A005              ;   31/08/24
 341+ A005              ;
 342+ A005
 343+ A005              Compara_con_coordenadas_de_disparo
 344+ A005
 345+ A005 3A B5 8B         ld a,(Coordenada_y)
 346+ A008 47               ld b,a
 347+ A009 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 348+ A00C 90               sub b
 349+ A00D
 350+ A00D              ; A = "0" ok
 351+ A00D              ; A = "1" ok
 352+ A00D
 353+ A00D 28 08            jr z,Comprueba_coordenada_X
 354+ A00F 3D               dec a
 355+ A010 28 05            jr z,Comprueba_coordenada_X
 356+ A012
 357+ A012              ; A = "$ff" ok
 358+ A012
 359+ A012 FE FE            cp $fe
 360+ A014 28 01            jr z,Comprueba_coordenada_X
 361+ A016
 362+ A016 C9               ret
 363+ A017
 364+ A017              Comprueba_coordenada_X
 365+ A017
 366+ A017 3A B4 8B         ld a,(Coordenada_X)
 367+ A01A 47               ld b,a
 368+ A01B 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 369+ A01E 7E               ld a,(hl)
 370+ A01F 90               sub b
 371+ A020
 372+ A020              ; A = "0" ok
 373+ A020              ; A = "1" ok
 374+ A020
 375+ A020 28 09            jr z,Activa_Impacto_en_entidad
 376+ A022 3D               dec a
 377+ A023 28 06            jr z,Activa_Impacto_en_entidad
 378+ A025
 379+ A025              ; A = "2" ok
 380+ A025
 381+ A025 3D               dec a
 382+ A026 28 03            jr z,Activa_Impacto_en_entidad
 383+ A028
 384+ A028              ; A = "$ff"
 385+ A028
 386+ A028 FE FD            cp $fd
 387+ A02A C0               ret nz
 388+ A02B
 389+ A02B              Activa_Impacto_en_entidad
 390+ A02B
 391+ A02B              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 392+ A02B
 393+ A02B 3E 02            ld a,2
 394+ A02D 32 B7 8B         ld (Impacto),a
 395+ A030
 396+ A030              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 397+ A030
 398+ A030 11 C0 87         ld de,Indice_Explosion_entidades
 399+ A033 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 400+ A036
 401+ A036 73               ld (hl),e
 402+ A037 23               inc hl
 403+ A038 72               ld (hl),d
 404+ A039
 405+ A039              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 406+ A039
 407+ A039 21 2B 8C         ld hl,Impacto2
 408+ A03C CB 9E            res 3,(hl)
 409+ A03E
 410+ A03E C9               ret
 411+ A03F
 412+ A03F              ; --------------------------------------------------------------------------------------
 413+ A03F              ;
 414+ A03F              ;   11/09/24
 415+ A03F              ;
 416+ A03F
 417+ A03F              Limpia_album_de_borrado_disparos
 418+ A03F
 419+ A03F 21 26 8C         ld hl,Ctrl_5
 420+ A042 CB 56            bit 2,(hl)
 421+ A044              ;    jr z,1F
 422+ A044 C8               ret z
 423+ A045
 424+ A045 CB 96            res 2,(hl)
 425+ A047
 426+ A047              ;    ld a,(Numero_de_disparos_de_entidades)
 427+ A047              ;    cp 7
 428+ A047              ;    jr z,Limpiando
 429+ A047
 430+ A047              ;    ret
 431+ A047
 432+ A047              ;1 bit 0,(hl)
 433+ A047              ;    ret z
 434+ A047              ;    res 0,(hl)
 435+ A047
 436+ A047              Limpiando
 437+ A047
 438+ A047 AF               xor a
 439+ A048 2A 0E 8C         ld hl,(Album_de_borrado_disparos)
 440+ A04B 77               ld (hl),a
 441+ A04C 5D               ld e,l
 442+ A04D 54               ld d,h
 443+ A04E 1C               inc e                                           ; DE = HL+1
 444+ A04F 01 3A 00         ld bc,$003a
 445+ A052 ED B0            ldir
 446+ A054
 447+ A054 C9               ret
 448+ A055
 449+ A055
 450+ A055              ; --------------------------------------------------------------------------------------
 451+ A055              ;
 452+ A055              ;   26/08/24
 453+ A055              ;
 454+ A055
 455+ A055              Calcula_bytes_pintado_disparos
 456+ A055
 457+ A055 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 458+ A058 45               ld b,l
 459+ A059 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 460+ A05C 7D               ld a,l
 461+ A05D
 462+ A05D 90               sub b
 463+ A05E 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 464+ A061
 465+ A061 C9               ret
 466+ A062
 467+ A062              ; --------------------------------------------------------------------------------------
 468+ A062              ;
 469+ A062              ;   11/09/24
 470+ A062              ;
 471+ A062              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 472+ A062              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 473+ A062              ;   _disparos que el álbum del FRAME actual).
 474+ A062
 475+ A062              Limpia_album_de_pintado_disparos
 476+ A062
 477+ A062              ;*   Exclusiones.
 478+ A062
 479+ A062 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 480+ A065 A7               and a
 481+ A066 C8               ret z
 482+ A067
 483+ A067              ; -----
 484+ A067
 485+ A067 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 486+ A06A 47               ld b,a
 487+ A06B 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 488+ A06E
 489+ A06E 90               sub b
 490+ A06F
 491+ A06F C8               ret z
 492+ A070 D8               ret c
 493+ A071
 494+ A071 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 495+ A074 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 496+ A075 AF               xor a                                                               ; "0".
 497+ A076
 498+ A076 77           1 ld (hl),a
 499+ A077 2C               inc l
 500+ A078 10 FC            djnz 1B
 501+ A07A
 502+ A07A C9               ret
 503+ A07B
 504+ A07B              ; --------------------------------------------------------------------------------------
 505+ A07B              ;
 506+ A07B              ;   27/08/24
 507+ A07B              ;
 508+ A07B
 509+ A07B              Motor_Disparos_Amadeus
 510+ A07B
 511+ A07B              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 512+ A07B
 513+ A07B 21 20 89         ld hl,Disparo_Amad+1
 514+ A07E
 515+ A07E 34               inc (hl)
 516+ A07F 35               dec (hl)
 517+ A080
 518+ A080 C8               ret z
 519+ A081
 520+ A081              ;   Esta caja contiene un disparo.
 521+ A081
 522+ A081 CD 88 A0         call Consulta_Impacto
 523+ A084 CC A1 A0         call z,Mueve_disparo_Amadeus
 524+ A087
 525+ A087 C9               ret
 526+ A088
 527+ A088              ; ----------------------
 528+ A088              ;
 529+ A088              ;
 530+ A088              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 531+ A088              ;
 532+ A088              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 533+ A088
 534+ A088
 535+ A088              Consulta_Impacto
 536+ A088
 537+ A088              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 538+ A088              ;   _sea lo más coherente posible.
 539+ A088
 540+ A088 E5               push hl
 541+ A089 2B               dec hl
 542+ A08A CD 82 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 543+ A08D E1               pop hl
 544+ A08E 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 545+ A08F
 546+ A08F C8               ret z
 547+ A090
 548+ A090 3A 2B 8C         ld a,(Impacto2)
 549+ A093 CB DF            set 3,a
 550+ A095 32 2B 8C         ld (Impacto2),a
 551+ A098
 552+ A098 E5               push hl
 553+ A099 CD 6F A1         call Genera_coordenadas_de_disparo_Amadeus
 554+ A09C E1               pop hl
 555+ A09D CD BA A0         call Elimina_disparo
 556+ A0A0
 557+ A0A0 C9               ret
 558+ A0A1
 559+ A0A1              ; ----------------------
 560+ A0A1              ;
 561+ A0A1              ;
 562+ A0A1              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 563+ A0A1
 564+ A0A1              Mueve_disparo_Amadeus
 565+ A0A1
 566+ A0A1 CD A2 90         call Extrae_address
 567+ A0A4
 568+ A0A4 CD D0 99         call PreviousScan
 569+ A0A7 CD D0 99         call PreviousScan
 570+ A0AA CD D0 99         call PreviousScan
 571+ A0AD CD D0 99         call PreviousScan
 572+ A0B0
 573+ A0B0              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 574+ A0B0
 575+ A0B0 7C               ld a,h
 576+ A0B1 D6 40            sub $40
 577+ A0B3 EB               ex de,hl
 578+ A0B4 38 04            jr c,Elimina_disparo
 579+ A0B6
 580+ A0B6               ; Introduce nuevo puntero_de_impresión en la caja.
 581+ A0B6
 582+ A0B6 73               ld (hl),e
 583+ A0B7 23               inc hl
 584+ A0B8 72               ld (hl),d
 585+ A0B9
 586+ A0B9 C9               ret
 587+ A0BA
 588+ A0BA              ; ----------------------
 589+ A0BA              ;
 590+ A0BA              ;   11/9/24
 591+ A0BA
 592+ A0BA              Elimina_disparo
 593+ A0BA
 594+ A0BA              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 595+ A0BA              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 596+ A0BA
 597+ A0BA              ;   Disparo_1A defw 0									; Puntero objeto.
 598+ A0BA              ;   	defw 0											; Puntero de impresión.
 599+ A0BA
 600+ A0BA 2B               dec hl
 601+ A0BB 2B               dec hl
 602+ A0BC
 603+ A0BC AF               xor a
 604+ A0BD 77               ld (hl),a
 605+ A0BE 23               inc hl
 606+ A0BF 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 607+ A0C0
 608+ A0C0 23               inc hl
 609+ A0C1 77               ld (hl),a
 610+ A0C2 23               inc hl
 611+ A0C3 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 612+ A0C4
 613+ A0C4 3E 01            ld a,1
 614+ A0C6 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 615+ A0C9
 616+ A0C9 21 26 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 617+ A0CC CB C6            set 0,(hl)
 618+ A0CE
 619+ A0CE AF               xor a
 620+ A0CF 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 621+ A0D0
 622+ A0D0 C9               ret
 623+ A0D1
 624+ A0D1              ; --------------------------------------------------------------------------------------
 625+ A0D1              ;
 626+ A0D1              ;   21/8/24
 627+ A0D1              ;
 628+ A0D1
 629+ A0D1              Pinta_disparos
 630+ A0D1
 631+ A0D1              ;    ld a,(Ctrl_5)
 632+ A0D1              ;    bit 2,a
 633+ A0D1              ;    jr nz,$
 634+ A0D1
 635+ A0D1 ED 73 00 8C      ld (Stack),sp
 636+ A0D5 06 02            ld b,2
 637+ A0D7
 638+ A0D7 ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 639+ A0DB
 640+ A0DB D1           2 pop de
 641+ A0DC
 642+ A0DC 14               inc d
 643+ A0DD 15               dec d
 644+ A0DE
 645+ A0DE 28 1B            jr z,1F
 646+ A0E0
 647+ A0E0              Imprime_scanlines_de_disparo
 648+ A0E0
 649+ A0E0 E1               pop hl
 650+ A0E1
 651+ A0E1              ; Puntero objeto en DE.
 652+ A0E1              ; Puntero_de_impresión en HL.
 653+ A0E1
 654+ A0E1              ; 1er scanline.
 655+ A0E1
 656+ A0E1 1A               ld a,(de)
 657+ A0E2 AE               xor (hl)
 658+ A0E3 77               ld (hl),a
 659+ A0E4
 660+ A0E4 13               inc de
 661+ A0E5 2C               inc l
 662+ A0E6
 663+ A0E6 1A               ld a,(de)
 664+ A0E7 AE               xor (hl)
 665+ A0E8 77               ld (hl),a
 666+ A0E9
 667+ A0E9              ; 2º scanline.
 668+ A0E9
 669+ A0E9 E1               pop hl
 670+ A0EA 1B               dec de
 671+ A0EB
 672+ A0EB 1A               ld a,(de)
 673+ A0EC AE               xor (hl)
 674+ A0ED 77               ld (hl),a
 675+ A0EE
 676+ A0EE 13               inc de
 677+ A0EF 2C               inc l
 678+ A0F0
 679+ A0F0 1A               ld a,(de)
 680+ A0F1 AE               xor (hl)
 681+ A0F2 77               ld (hl),a
 682+ A0F3
 683+ A0F3              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 684+ A0F3
 685+ A0F3 18 E6            jr 2B
 686+ A0F5
 687+ A0F5 ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 688+ A0F9 18 E0            jr 2B
 689+ A0FB
 690+ A0FB 10 F8        1 djnz 3B
 691+ A0FD ED 7B 00 8C      ld sp,(Stack)
 692+ A101 C9               ret
 693+ A102
 694+ A102              ; --------------------------------------------------------------------------------------
 695+ A102              ;
 696+ A102              ;   14/09/24
 697+ A102              ;
 698+ A102              ;   Modifica: HL y DE.
 699+ A102
 700+ A102
 701+ A102              Genera_datos_de_impresion_disparos_Amadeus
 702+ A102
 703+ A102 ED 73 00 8C      ld (Stack),sp
 704+ A106 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 705+ A109 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 706+ A10A
 707+ A10A 14               inc d                                                     ;? Salimos si no hay disparo.
 708+ A10B 15               dec d
 709+ A10C
 710+ A10C 28 12            jr z,Salida
 711+ A10E
 712+ A10E              Genera_scanlines_de_disparo_Amadeus
 713+ A10E
 714+ A10E E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 715+ A10F              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 716+ A10F ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 717+ A113
 718+ A113 C1               pop bc
 719+ A114 C1               pop bc
 720+ A115 C1               pop bc
 721+ A116
 722+ A116 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 723+ A11A
 724+ A11A E5               push hl                                                   ;? Sube 2º scanline al álbum.
 725+ A11B CD D0 99         call PreviousScan
 726+ A11E E5               push hl                                                   ;? Sube 1er scanline al álbum.
 727+ A11F D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 728+ A120
 729+ A120              Salida
 730+ A120
 731+ A120 ED 7B 00 8C      ld sp,(Stack)
 732+ A124
 733+ A124 C9               ret
 734+ A125
 735+ A125              ; --------------------------------------------------------------------------------------
 736+ A125              ;
 737+ A125              ;   12/09/24
 738+ A125              ;
 739+ A125
 740+ A125              Genera_disparo_Amadeus
 741+ A125
 742+ A125              ;*  Exclusiones.
 743+ A125
 744+ A125 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 745+ A128 A7               and a
 746+ A129 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 747+ A12A
 748+ A12A 3D               dec a
 749+ A12B 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 750+ A12E
 751+ A12E              Define_puntero_objeto_disparo
 752+ A12E
 753+ A12E              ;   Inicializamos contador.
 754+ A12E
 755+ A12E 06 00            ld b,0
 756+ A130
 757+ A130 2A 72 89         ld hl,(p.imp.amadeus)
 758+ A133 2C               inc l
 759+ A134
 760+ A134 3E 80            ld a,$80
 761+ A136 BE               cp (hl)
 762+ A137 28 0D            jr z,1F
 763+ A139
 764+ A139 04               inc b
 765+ A13A
 766+ A13A 3E 60            ld a,$60
 767+ A13C BE               cp (hl)
 768+ A13D 28 07            jr z,1F
 769+ A13F
 770+ A13F
 771+ A13F 04               inc b
 772+ A140
 773+ A140 3E 18            ld a,$18
 774+ A142 BE               cp (hl)
 775+ A143 28 01            jr z,1F
 776+ A145
 777+ A145 04               inc b
 778+ A146
 779+ A146              ;   Calcula el Puntero_de_impresión del disparo.
 780+ A146
 781+ A146              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 782+ A146
 783+ A146 CD D0 99     1 call PreviousScan
 784+ A149
 785+ A149 78               ld a,b
 786+ A14A CB 3F            srl a
 787+ A14C 28 03            jr z,4F
 788+ A14E
 789+ A14E              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 790+ A14E E5               push hl
 791+ A14F 18 02            jr 5F
 792+ A151 2D           4 dec l
 793+ A152 E5               push hl
 794+ A153              ; ---
 795+ A153
 796+ A153              ;   Calcula el Puntero_objeto del disparo.
 797+ A153
 798+ A153 21 72 83     5 ld hl,Indice_disparo_Amadeus
 799+ A156 04               inc b
 800+ A157 05               dec b
 801+ A158 28 04            jr z,2F
 802+ A15A
 803+ A15A              ;   Nos desplazamos por el índice de disparos.
 804+ A15A
 805+ A15A 2C           3 inc l
 806+ A15B 2C               inc l
 807+ A15C 10 FC            djnz 3B
 808+ A15E
 809+ A15E              ; --- Guarda el Puntero_objeto del disparo en la pila.
 810+ A15E CD A2 90     2 call Extrae_address
 811+ A161 E5               push hl
 812+ A162              ; ---
 813+ A162
 814+ A162              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 815+ A162              ; HL en el 1er .db de la caja.
 816+ A162
 817+ A162 21 1F 89         ld hl,Disparo_Amad
 818+ A165
 819+ A165 06 02            ld b,2
 820+ A167
 821+ A167 D1           6 pop de
 822+ A168 73               ld (hl),e
 823+ A169 23               inc hl
 824+ A16A 72               ld (hl),d
 825+ A16B 23               inc hl
 826+ A16C
 827+ A16C 10 F9            djnz 6B
 828+ A16E
 829+ A16E C9               ret
 830+ A16F
 831+ A16F              Genera_coordenadas_de_disparo_Amadeus
 832+ A16F
 833+ A16F              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 834+ A16F              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 835+ A16F              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 836+ A16F
 837+ A16F CD A2 90         call Extrae_address
 838+ A172 CD C1 94         call Genera_coordenadas
 839+ A175
 840+ A175 3D               dec a
 841+ A176
 842+ A176 21 2E 8C         ld hl,Coordenadas_disparo_certero
 843+ A179 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 844+ A17A 23               inc hl
 845+ A17B 3A B4 8B         ld a,(Coordenada_X)
 846+ A17E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 847+ A17F
 848+ A17F AF               xor a
 849+ A180 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 850+ A181
 851+ A181 C9               ret
 852+ A182
 853+ A182              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 854+ A182              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 855+ A182              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 856+ A182
 857+ A182              ; ----------------------------------------------
 858+ A182              ;
 859+ A182              ;   27/08/24
 860+ A182              ;
 861+ A182              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 862+ A182              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 863+ A182
 864+ A182              Detecta_impacto_en_disparo_de_Amadeus
 865+ A182
 866+ A182              Extraccion_de_datos
 867+ A182
 868+ A182 13               inc de
 869+ A183 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 870+ A184
 871+ A184 5E               ld e,(hl)
 872+ A185 23               inc hl
 873+ A186 56               ld d,(hl)
 874+ A187
 875+ A187 23               inc hl
 876+ A188
 877+ A188 4E               ld c,(hl)
 878+ A189 23               inc hl
 879+ A18A 46               ld b,(hl)
 880+ A18B
 881+ A18B C5               push bc
 882+ A18C E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 883+ A18D
 884+ A18D              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 885+ A18D
 886+ A18D CD D0 99         call PreviousScan
 887+ A190 CD D0 99         call PreviousScan
 888+ A193
 889+ A193              Detecta_impacto_
 890+ A193
 891+ A193 1A               ld a,(de)
 892+ A194 A6               and (hl)
 893+ A195 C0               ret nz
 894+ A196
 895+ A196 13               inc de
 896+ A197 23               inc hl
 897+ A198
 898+ A198 1A               ld a,(de)
 899+ A199 A6               and (hl)
 900+ A19A C9               ret
 901+ A19B
 902+ A19B              ; -------------------------------------------------------------------------------------------------------------
 903+ A19B              ;
 904+ A19B              ;   8/8/24
 905+ A19B              ;
 906+ A19B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 907+ A19B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 908+ A19B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 909+ A19B              ;
 910+ A19B              ;   MODIFICA: HL,DE,BC y A.
 911+ A19B              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 912+ A19B              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 913+ A19B
 914+ A19B              Colision_Entidad_Amadeus
 915+ A19B
 916+ A19B              ; Posible contacto de entidad con Amadeus. ?????
 917+ A19B
 918+ A19B              ; Exclusiones:
 919+ A19B
 920+ A19B 3A 4E 8C         ld a,(Shield)
 921+ A19E A7               and a
 922+ A19F C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 923+ A1A0
 924+ A1A0 21 24 8C         ld hl,Ctrl_3
 925+ A1A3 CB 76            bit 6,(hl)
 926+ A1A5 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 927+ A1A6
 928+ A1A6 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 929+ A1A9 CB 56            bit 2,(hl)
 930+ A1AB C0               ret nz
 931+ A1AC
 932+ A1AC 3A B5 8B     	ld a,(Coordenada_y)
 933+ A1AF FE 14        	cp $14
 934+ A1B1 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 935+ A1B2
 936+ A1B2 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 937+ A1B5 A7               and a
 938+ A1B6 C0               ret nz
 939+ A1B7
 940+ A1B7              Genera_coordenadas_X
 941+ A1B7
 942+ A1B7              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 943+ A1B7              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 944+ A1B7
 945+ A1B7              ;   Limpiamos almacenes.
 946+ A1B7
 947+ A1B7              ;    call Limpia_Coordenadas_X
 948+ A1B7
 949+ A1B7              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 950+ A1B7
 951+ A1B7 21 30 8C         ld hl,Coordenadas_X_Entidad
 952+ A1BA 3A B4 8B         ld a,(Coordenada_X)
 953+ A1BD CD DF A1         call Guarda_coordenadas_X
 954+ A1C0
 955+ A1C0              ;   Almacenamos las coordenadas X de Amadeus.
 956+ A1C0
 957+ A1C0 3A 6E 89         ld a,(CX_Amadeus)
 958+ A1C3 CD DF A1         call Guarda_coordenadas_X
 959+ A1C6 CD F3 A1         call Compara_coordenadas_X
 960+ A1C9 C0               ret nz
 961+ A1CA
 962+ A1CA 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 963+ A1CC 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 964+ A1CF
 965+ A1CF 2A F3 8B         ld hl,(Puntero_store_caja)
 966+ A1D2 2C               inc l
 967+ A1D3 2C               inc l
 968+ A1D4 2C               inc l
 969+ A1D5 2C               inc l
 970+ A1D6 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 971+ A1D9
 972+ A1D9 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 973+ A1DC CB D6            set 2,(hl)
 974+ A1DE
 975+ A1DE C9               ret
 976+ A1DF
 977+ A1DF               ; ----- ----- ----- ----- -----
 978+ A1DF
 979+ A1DF 77           Guarda_coordenadas_X ld (hl),a
 980+ A1E0 3C               inc a
 981+ A1E1 2C               inc l
 982+ A1E2 77               ld (hl),a
 983+ A1E3 3C               inc a
 984+ A1E4 2C               inc l
 985+ A1E5 77               ld (hl),a
 986+ A1E6 2C               inc l
 987+ A1E7 C9               ret
 988+ A1E8
 989+ A1E8 AF           Limpia_Coordenadas_X xor a
 990+ A1E9 06 06            ld b,6
 991+ A1EB 21 33 8C         ld hl,Coordenadas_X_Amadeus
 992+ A1EE 77           1 ld (hl),a
 993+ A1EF 23               inc hl
 994+ A1F0 10 FC            djnz 1B
 995+ A1F2 C9               ret
 996+ A1F3
 997+ A1F3              ; ----- ----- ----- ----- -----
 998+ A1F3
 999+ A1F3              Compara_coordenadas_X
1000+ A1F3
1001+ A1F3 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
1002+ A1F7 DD 7E 00         ld a,(ix+0)
1003+ A1FA CD 08 A2         call Comparando
1004+ A1FD C8               ret z
1005+ A1FE
1006+ A1FE 3C               inc a
1007+ A1FF CD 17 A2         call Comparando_1
1008+ A202 C8               ret z
1009+ A203
1010+ A203 3C               inc a
1011+ A204 CD 17 A2         call Comparando_1
1012+ A207 C9               ret
1013+ A208
1014+ A208              ; ----- ----- ----- ----- -----
1015+ A208              ;
1016+ A208              ;   4/12/23
1017+ A208              ;
1018+ A208              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1019+ A208
1020+ A208              Comparando
1021+ A208
1022+ A208 DD 2C            inc ixl
1023+ A20A DD 2C            inc ixl
1024+ A20C DD 2C            inc ixl
1025+ A20E
1026+ A20E DD 46 00         ld b,(ix+0)
1027+ A211 DD 4E 01         ld c,(ix+1)
1028+ A214 DD 56 02         ld d,(ix+2)
1029+ A217
1030+ A217 B8           Comparando_1 cp b
1031+ A218 C8               ret z
1032+ A219 B9               cp c
1033+ A21A C8               ret z
1034+ A21B BA               cp d
1035+ A21C C9               ret
1036+ A21D
1037+ A21D              ; -----------------------------------------------------------------------
1038+ A21D              ;
1039+ A21D              ;   04/7/24
1040+ A21D              ;
1041+ A21D
1042+ A21D              Detecta_colision_nave_entidad
1043+ A21D
1044+ A21D              ; Exclusiones:
1045+ A21D
1046+ A21D              ; Salimos de la rutina si no hay advertencia de posible colisión.
1047+ A21D
1048+ A21D 21 2B 8C     	ld hl,Impacto2
1049+ A220 CB 56        	bit 2,(hl)
1050+ A222 C8           	ret z
1051+ A223
1052+ A223              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1053+ A223
1054+ A223 2A 74 89         ld hl,(Pamm_Amadeus)
1055+ A226 CD A2 90         call Extrae_address
1056+ A229 54               ld d,h
1057+ A22A 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1058+ A22B
1059+ A22B 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1060+ A22E 06 10            ld b,16                                        ; Contador de scanlines en B.
1061+ A230 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1062+ A233
1063+ A233 C5           1 push bc
1064+ A234 06 03            ld b,3
1065+ A236 E5               push hl
1066+ A237
1067+ A237              ; .db
1068+ A237
1069+ A237 1A           3 ld a,(de)
1070+ A238 A7               and a
1071+ A239 20 03            jr nz,4F
1072+ A23B
1073+ A23B 2C               inc l
1074+ A23C 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1075+ A23E
1076+ A23E ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1077+ A240 28 04            jr z,2F
1078+ A242
1079+ A242              ; Impacto.
1080+ A242 FD 2D            dec iyl
1081+ A244 28 22            jr z,5F
1082+ A246
1083+ A246 1C           2 inc e
1084+ A247 10 EE            djnz 3B
1085+ A249
1086+ A249 E1               pop hl
1087+ A24A
1088+ A24A              ; Hay salto de línea en el puntero de impresión ???
1089+ A24A
1090+ A24A 7C               ld a,h
1091+ A24B D6 57            sub $57
1092+ A24D 20 0A            jr nz,6F
1093+ A24F
1094+ A24F              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1095+ A24F
1096+ A24F 2A 72 89         ld hl,(p.imp.amadeus)
1097+ A252 3E 20            ld a,$20
1098+ A254 A7               and a
1099+ A255 85               add l
1100+ A256 6F               ld l,a
1101+ A257 18 01            jr 7F
1102+ A259
1103+ A259 24           6 inc h
1104+ A25A
1105+ A25A C1           7 pop bc
1106+ A25B 10 D6            djnz 1B
1107+ A25D
1108+ A25D              ;   Fin de la comparativa.
1109+ A25D
1110+ A25D              ;   NO HAY COLISIÓN !!!!!.
1111+ A25D              ;
1112+ A25D              ;   .db (Impacto) de Amadeus a "0".
1113+ A25D              ;   RES el bit2 de (Impacto2).
1114+ A25D              ;
1115+ A25D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1116+ A25D              ;   Lo colocamos a "0".
1117+ A25D
1118+ A25D 21 2B 8C         ld hl,Impacto2
1119+ A260 CB 96            res 2,(hl)
1120+ A262 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1121+ A265 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1122+ A267 C9               ret
1123+ A268
1124+ A268              ;   COLISIÓN !!!!!.
1125+ A268              ;
1126+ A268              ;   .db (Impacto) de Amadeus a "1".
1127+ A268              ;   SET el bit3 de (Impacto2).
1128+ A268              ;
1129+ A268              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1130+ A268
1131+ A268 E1           5 pop hl
1132+ A269 C1               pop bc
1133+ A26A
1134+ A26A 21 71 89         ld hl,Impacto_Amadeus
1135+ A26D 36 01            ld (hl),1
1136+ A26F 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1137+ A272 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1138+ A274
1139+ A274 11 C0 87         ld de,Indice_Explosion_entidades
1140+ A277 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1141+ A27A
1142+ A27A 23               inc hl
1143+ A27B 23               inc hl
1144+ A27C 23               inc hl
1145+ A27D
1146+ A27D 73               ld (hl),e
1147+ A27E 23               inc hl
1148+ A27F 72               ld (hl),d
1149+ A280
1150+ A280              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1151+ A280
1152+ A280 11 60 88         ld de,Indice_Explosion_Amadeus
1153+ A283 21 74 89         ld hl,Pamm_Amadeus
1154+ A286
1155+ A286 73               ld (hl),e
1156+ A287 23               inc hl
1157+ A288 72               ld (hl),d
1158+ A289
1159+ A289 C9               ret
1160+ A28A
1161+ A28A
1162+ A28A
# file closed: Disparo.asm
2169  A28A
2170  A28A              	SAVESNA "Pruebas.sna", START
2171  A28A
2172  A28A
2173  A28A
2174  A28A
# file closed: Banco_de_pruebas.asm
