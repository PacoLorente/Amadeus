# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  40  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  41  FE01
  42  FE01              ;																		; Scanlines_album.
  43  FE01
  44  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  45  FE01
  46  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  47  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  48  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  49  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  50  FE01
  51  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  52  FE01              ;
  53  FE01              ;	13/08/24
  54  FE01              ;
  55  FE01
  56  FE01              	org $82f4
  57  82F4
  58  82F4 F5           	push af
  59  82F5 E5           	push hl
  60  82F6
  61  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  62  82F6 21 24 8C     	ld hl,Ctrl_3
  63  82F9 CB 46        	bit 0,(hl)
  64  82FB 28 FE        	jr z,$
  65  82FD              ;! -------------------
  66  82FD
  67  82FD              ; Disparos.
  68  82FD
  69  82FD CD EA A0     	call Pinta_disparos
  70  8300
  71  8300              ; Shield -----------------------
  72  8300
  73  8300              Temporizacion_shield
  74  8300
  75  8300 21 4E 8C     	ld hl,Shield
  76  8303 7E           	ld a,(hl)
  77  8304 A7           	and a
  78  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8307
  80  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8308
  82  8308 23           	inc hl
  83  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  830A
  85  830A 20 17        	jr nz,Incrementa_FRAMES
  86  830C
  87  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  830C
  89  830C              Cambio_de_estado
  90  830C
  91  830C              ;	Indica cambio de estado.
  92  830C
  93  830C 23           	inc hl						;	Sitúa en (Shield_3).
  94  830D
  95  830D CB 5E        	bit 3,(hl)
  96  830F 28 05        	jr z,2F
  97  8311
  98  8311 CD 25 91     	call Inicia_Shield
  99  8314
 100  8314 18 0D        	jr Incrementa_FRAMES
 101  8316
 102  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8318
 104  8318              ;	Carga en (Shield_2) la siguiente temporización.
 105  8318
 106  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 107  831B 23           	inc hl
 108  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 109  831F 7E           	ld a,(hl)
 110  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8323
 112  8323              Incrementa_FRAMES
 113  8323
 114  8323 2A 78 5C     	ld hl,(FRAMES)
 115  8326 23           	inc hl
 116  8327 22 78 5C     	ld (FRAMES),hl
 117  832A
 118  832A 7C           	ld a,h
 119  832B B5           	or l
 120  832C 20 04        	jr nz,1F
 121  832E
 122  832E 21 7A 5C     	ld hl,FRAMES_3
 123  8331 34           	inc (hl)
 124  8332
 125  8332 D5           1 push de
 126  8333 C5           	push bc
 127  8334
 128  8334 CD 35 91     	call Actualiza_pantalla
 129  8337
 130  8337 C1           	pop bc
 131  8338 D1           	pop de
 132  8339 E1           	pop hl
 133  833A F1           	pop af
 134  833B
 135  833B FB           	ei
 136  833C
 137  833C C9           	ret
 138  833D
 139  833D              ; --------------------------------------------------------------------------------
 140  833D
 141  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_de_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 142  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 144  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 145  8BB3
 146  8BB3              ; --------------------------------------------------------------------------------
 147  8BB3              ;
 148  8BB3              ; 12/05/24
 149  8BB3              ;
 150  8BB3              ; Parámetros DRAW.
 151  8BB3              ;
 152  8BB3
 153  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8BB3
 155  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8BB4              ;															- Patrón de movimiento.
 157  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8BB6
 160  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8BB7
 163  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8BB7              ; Ejemplos.
 166  8BB7
 167  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8BB7
 173  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8BB8
 177  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8BBA
 180  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8BBC
 182  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8BBC
 184  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 186  8BBE
 187  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BBE
 189  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BBF
 195  8BBF 00           Ctrl_2 db 0
 196  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC0              ;
 204  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC0              ;														BIT 4, ???
 210  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC0
 212  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC1              ;
 218  8BC1              ; 														DESCRIPCIÖN:
 219  8BC1              ;
 220  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC1              ;
 234  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC1
 238  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC1
 240  8BC1 00           Filas db 0												; Filas. [DRAW]
 241  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BC7
 245  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BC7
 247  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BC8
 251  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BC8
 253  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BC8              ;
 255  8BC8              ;	COLORES: 0 ..... NEGRO
 256  8BC8              ;    		 1 ..... AZUL
 257  8BC8              ; 			 2 ..... ROJO
 258  8BC8              ;			 3 ..... MAGENTA
 259  8BC8              ; 			 4 ..... VERDE
 260  8BC8              ; 			 5 ..... CIAN
 261  8BC8              ;			 6 ..... AMARILLO
 262  8BC8              ; 			 7 ..... BLANCO
 263  8BC8
 264  8BC8 00 00        Indice_Sprite_der defw 0
 265  8BCA 00 00        Indice_Sprite_izq defw 0
 266  8BCC 00 00        Puntero_DESPLZ_der defw 0
 267  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD0
 269  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BD3 00           Columnas db 0
 272  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BD7
 276  8BD7              ; variables de control general.
 277  8BD7
 278  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BD8
 280  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BD8
 282  8BD8              Perfiles_de_velocidad
 283  8BD8
 284  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BDC
 289  8BDC              ; Contadores de 16 bits.
 290  8BDC
 291  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BE4
 296  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BE4
 298  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BEA              ;
 302  8BEA              ;
 303  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BEB 00           Incrementa_puntero_backup db 0
 307  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF0              ;
 313  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF0              ;
 317  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF0              ;
 322  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF0
 326  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF1
 328  8BF1              ;														DESCRIPCIÓN:
 329  8BF1              ;
 330  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF1
 337  8BF1              ;														BIT 3, Recarga de nueva oleada.
 338  8BF1              ;														BIT 4, Recarga de nueva oleada.
 339  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF1              ;														BIT 6, **** Frame completo.
 341  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF1
 343  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BF3
 348  8BF3              ; Gestión de ENTIDADES y CAJAS.
 349  8BF3
 350  8BF3 00 00        Puntero_store_caja defw 0
 351  8BF5 00 00        Puntero_restore_caja defw 0
 352  8BF7 00 00        Indice_restore_caja defw 0
 353  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8BFC
 357  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C00              ;														; _ puntero (Indice_entidades).
 360  8C00
 361  8C00              ;---------------------------------------------------------------------------------------------------------------
 362  8C00              ;
 363  8C00              ;	11/09/24
 364  8C00              ;
 365  8C00              ;	Álbumes.
 366  8C00
 367  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C02              ;														; _variable para almacenar lo posición del puntero_
 369  8C02              ; 														; _de pila, SP.
 370  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C04
 373  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C04
 375  8C04 00 00        Album_de_pintado defw 0
 376  8C06 00 00        Album_de_borrado defw 0
 377  8C08 00 00        Album_de_pintado_Amadeus defw 0
 378  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 379  8C0C 00 00        Album_de_pintado_disparos defw 0
 380  8C0E 00 00        Album_de_borrado_disparos defw 0
 381  8C10
 382  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C12 00           Num_de_bytes_album_de_disparos db 0
 384  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C14
 386  8C14 07           Numero_de_disparos_de_entidades db 7
 387  8C15
 388  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 390  8C17
 391  8C17 00 00        Techo_Scanlines_album defw 0
 392  8C19 00 00        Techo_Scanlines_album_2 defw 0
 393  8C1B 00           Switch db 0
 394  8C1C 00 00        Techo defw 0
 395  8C1E 00 00        Scanlines_album_SP defw 0
 396  8C20 00 89        India_SP defw Tabla_de_pintado
 397  8C22 03 89        India_2_SP defw Tabla_de_pintado+3
 398  8C24
 399  8C24 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  8C25              ;
 401  8C25              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  8C25              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  8C25              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  8C25              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 405  8C25              ;																Habilita el borrado/pintado de sprites.
 406  8C25              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 407  8C25              ;																_ a la baja.
 408  8C25              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 409  8C25              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 410  8C25              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 411  8C25              ; 																_ el último frame de la explosión de nuestra nave.
 412  8C25              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 413  8C25              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 414  8C25
 415  8C25 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 416  8C26              ;
 417  8C26              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 418  8C26              ;
 419  8C26              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 420  8C26              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 421  8C26              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 422  8C26              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 423  8C26              ;
 424  8C26              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 425  8C26              ;															_ masticados ya generados.
 426  8C26              ;
 427  8C26              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 428  8C26              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 429  8C26              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 430  8C26              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 431  8C26
 432  8C26 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 433  8C27              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 434  8C27              ;                                                           BIT 2, "1" DEBUG !! Indica que se ha generado un disparo de entidad.
 435  8C27
 436  8C27
 437  8C27
 438  8C27
 439  8C27
 440  8C27              ; Gestión de Disparos.
 441  8C27
 442  8C27 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 443  8C29 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 444  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 445  8C2C
 446  8C2C              ;
 447  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 448  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 449  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 450  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 451  8C2C
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C
 458  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 459  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 460  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 461  8C2E
 462  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 463  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 464  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 466  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 467  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 468  8C36
 469  8C36              ;---------------------------------------------------------------------------------------------------------------
 470  8C36
 471  8C36              ; Relojes y temporizaciones.
 472  8C36
 473  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 474  8C37 05           Clock_explosion_Amadeus db 5
 475  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 476  8C39
 477  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 478  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 479  8C3D 00           DB_RND_disparos db 0
 480  8C3E
 481  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 482  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 483  8C41              ;														; Repite la oleada de entidades.
 484  8C41 30           CLOCK_disparo_entidad_MASTER db $30						; Reloj, decreciente.
 485  8C42 30           CLOCK_disparo_entidad db $30
 486  8C43
 487  8C43              ;---------------------------------------------------------------------------------------------------------------
 488  8C43
 489  8C43              ; Gestión de NIVELES.
 490  8C43
 491  8C43 00           Nivel db 0												; Nivel actual del juego.
 492  8C44 00 00        Puntero_indice_NIVELES defw 0
 493  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 494  8C48              ; 														; _ que definen el NIVEL.
 495  8C48
 496  8C48              ; ---------------------------------------------------------------------------------------------------------------
 497  8C48
 498  8C48              ; Temporizaciones Shield.
 499  8C48
 500  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 501  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 502  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 503  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 504  8C50 00           Shield_3 db 0
 505  8C51
 506  8C51 06           Lives db 6
 507  8C52
 508  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 509  8C52              ;
 510  8C52              ;	5/1/24
 511  8C52
 512  8C52              START
 513  8C52
 514  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 515  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 516  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 517  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 518  8C5B F3           	DI
 519  8C5C
 520  8C5C              ; Limpiamos pantalla.
 521  8C5C
 522  8C5C 3E 07        	ld a,%00000111
 523  8C5E CD C2 94     	call Cls
 524  8C61 CD 1A 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 525  8C64
 526  8C64              ; INICIALIZACIÓN.
 527  8C64
 528  8C64 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 529  8C66 CD 67 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 530  8C69 CD B1 8E     	call Extrae_numero_aleatorio_y_avanza
 531  8C6C
 532  8C6C 6F           	ld l,a
 533  8C6D 26 00        	ld h,0
 534  8C6F 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 535  8C72
 536  8C72              ;	Inicializa 1er Nivel.
 537  8C72
 538  8C72 21 94 8B     	ld hl,Indice_de_niveles
 539  8C75 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 540  8C78 CD 97 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 541  8C7B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 542  8C7B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 543  8C7B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 544  8C7B
 545  8C7B              ;	Inicia los álbumes de líneas.
 546  8C7B
 547  8C7B CD 6A 90     	call Inicia_albumes_de_lineas
 548  8C7E              ;
 549  8C7E CD 7A 90     	call Inicia_albumes_de_lineas_Amadeus
 550  8C81 CD 87 90     	call Inicia_albumes_de_disparos
 551  8C84
 552  8C84 CD B0 90     	call Inicia_Puntero_Disparo_Entidades
 553  8C87
 554  8C87 CD DC 92     4 call Inicia_Entidades
 555  8C8A CD 3F 93     	call Inicia_Amadeus
 556  8C8D
 557  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 558  8C8D              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 559  8C8D              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 560  8C8D
 561  8C8D 11 6D 89     	ld de,Amadeus_BOX
 562  8C90 CD 92 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 563  8C93 CD 82 93     	call Limpiamos_bandeja_DRAW
 564  8C96
 565  8C96              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 566  8C96
 567  8C96 06 3C        	ld b,60
 568  8C98 CD 6E 9D     2 call Amadeus_a_izquierda
 569  8C9B 10 FB        	djnz 2B
 570  8C9D
 571  8C9D CD 48 90     	call Genera_datos_de_impresion_Amadeus
 572  8CA0
 573  8CA0              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 574  8CA0
 575  8CA0 CD 9A 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 576  8CA3              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 577  8CA3
 578  8CA3              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 579  8CA3              ; (Esto se dá cuando se inicia una nueva oleada).
 580  8CA3
 581  8CA3              ;	ld a,(Ctrl_1)
 582  8CA3              ;	bit 3,a
 583  8CA3              ;	jr nz,5F											 ; Loop
 584  8CA3
 585  8CA3              ;	ld de,Amadeus_db
 586  8CA3              ;	call Store_Amadeus
 587  8CA3
 588  8CA3              ; 	INICIA DISPAROS !!!!!
 589  8CA3
 590  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA3
 592  8CA3              ;5 call Inicia_punteros_de_cajas
 593  8CA3              ;	call Restore_entidad
 594  8CA3
 595  8CA3              ;	ld a,(Ctrl_1)
 596  8CA3              ;	bit 3,a
 597  8CA3              ;	jr z,6F
 598  8CA3
 599  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA3
 601  8CA3              ;	ld hl,Ctrl_1
 602  8CA3              ;	res 3,(hl)
 603  8CA3              ;	jr Main
 604  8CA3
 605  8CA3              ; Damos por concluida la construcción del FRAME.
 606  8CA3              ;
 607  8CA3
 608  8CA3 CD 25 91     	call Inicia_Shield
 609  8CA6
 610  8CA6
 611  8CA6 2A 1E 8C     6 ld hl,(Scanlines_album_SP)
 612  8CA9 22 17 8C     	ld (Techo_Scanlines_album),hl
 613  8CAC
 614  8CAC 2A 06 8C     	ld hl,(Album_de_borrado)
 615  8CAF 22 1E 8C     	ld (Scanlines_album_SP),hl
 616  8CB2
 617  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 618  8CB5 22 20 8C     	ld (India_SP),hl
 619  8CB8
 620  8CB8 21 24 8C     	ld hl,Ctrl_3
 621  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CBD CB D6        	set 2,(hl)
 623  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CC1
 625  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CC2
 627  8CC2 76           	halt
 628  8CC3
 629  8CC3              ; ------------------------------------
 630  8CC3
 631  8CC3              Main
 632  8CC3              ;
 633  8CC3              ; 20/09/24
 634  8CC3
 635  8CC3              ; Gestión de disparos.
 636  8CC3
 637  8CC3 3A 26 8C     	ld a,(Ctrl_5)
 638  8CC6 CB 57        	bit 2,a
 639  8CC8 F3           	di
 640  8CC9 20 FE        	jr nz,$
 641  8CCB FB           	ei
 642  8CCC
 643  8CCC CD 58 A0     	call Limpia_album_de_borrado_disparos
 644  8CCF CD 98 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 645  8CD2 CD 1B 9F     	call Motor_de_disparos_entidades
 646  8CD5 CD 94 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 647  8CD8
 648  8CD8              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 649  8CD8              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 650  8CD8              ; Este hecho lo indica el bit2 de (Impacto2).
 651  8CD8
 652  8CD8 CD 36 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 653  8CDB
 654  8CDB              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 655  8CDB
 656  8CDB 21 42 8C     	ld hl,CLOCK_disparo_entidad
 657  8CDE 35           	dec (hl)
 658  8CDF CC DB 8D     	call z,Autoriza_disparo_de_entidades
 659  8CE2
 660  8CE2 2A 3E 8C     	ld hl,(Clock_next_entity)
 661  8CE5 ED 4B 78 5C  	ld bc,(FRAMES)
 662  8CE9 A7           	and a
 663  8CEA ED 42        	sbc hl,bc
 664  8CEC 20 16        	jr nz,1F
 665  8CEE
 666  8CEE              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 667  8CEE              ; _ (Clock_next_entity) para la siguiente entidad.
 668  8CEE
 669  8CEE 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 670  8CF1 47           	ld b,a
 671  8CF2 3A FB 8B     	ld a,(Entidades_en_curso)
 672  8CF5 B8           	cp b
 673  8CF6 28 0C        	jr z,1F
 674  8CF8 30 0A        	jr nc,1F
 675  8CFA
 676  8CFA 3C           	inc a
 677  8CFB 32 FB 8B     	ld (Entidades_en_curso),a
 678  8CFE
 679  8CFE              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 680  8CFE
 681  8CFE CD B1 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 682  8D01 CD CD 8E     	call Define_Clock_next_entity
 683  8D04
 684  8D04 3A FB 8B     1 ld a,(Entidades_en_curso)
 685  8D07 A7           	and a
 686  8D08 CA 82 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 687  8D0B 47           	ld b,a												; No hay entidades que gestionar.
 688  8D0C
 689  8D0C              ; ( Código que ejecutamos con cada entidad: ).
 690  8D0C
 691  8D0C              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 692  8D0C              ;
 693  8D0C              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 694  8D0C
 695  8D0C 21 00 89     	ld hl,Tabla_de_pintado
 696  8D0F 22 20 8C     	ld (India_SP),hl
 697  8D12
 698  8D12 21 24 8C     	ld hl,Ctrl_3
 699  8D15 CB D6        	set 2,(hl)
 700  8D17 CD 6D 8E     	call Change
 701  8D1A
 702  8D1A C5           2 push bc 												; Nº de entidades en curso.
 703  8D1B
 704  8D1B CD F2 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 705  8D1E ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 706  8D22
 707  8D22              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 708  8D22
 709  8D22              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 710  8D22              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 711  8D22
 712  8D22 3A 2B 8C     	ld a,(Impacto2)
 713  8D25 CB 5F        	bit 3,a
 714  8D27 C4 1E A0     	call nz,Compara_con_coordenadas_de_disparo
 715  8D2A
 716  8D2A 3A B7 8B     	ld a,(Impacto)
 717  8D2D CB 4F        	bit 1,a
 718  8D2F C4 02 92     	call nz,Genera_explosion
 719  8D32 20 31        	jr nz,Gestiona_siguiente_entidad
 720  8D34
 721  8D34 3A B7 8B     	ld a,(Impacto)
 722  8D37 A7           	and a
 723  8D38 28 0C        	jr z,3F
 724  8D3A
 725  8D3A              ; IMPACTO en entidad por colisión con Amadeus.
 726  8D3A
 727  8D3A              ; 5/7/24
 728  8D3A              ; Nota importante:
 729  8D3A              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 730  8D3A              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 731  8D3A              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 732  8D3A
 733  8D3A 3A 71 89     	ld a,(Impacto_Amadeus)
 734  8D3D A7           	and a
 735  8D3E C4 02 92     	call nz,Genera_explosion
 736  8D41 20 22        	jr nz,Gestiona_siguiente_entidad
 737  8D43
 738  8D43              ; Falsa colisión !!!
 739  8D43
 740  8D43 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 741  8D46
 742  8D46              ; -------------------------------------------
 743  8D46
 744  8D46 CD 11 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 745  8D49 CD 4D 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 746  8D4C CD 01 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 747  8D4F CD 02 95     	call Genera_datos_de_impresion
 748  8D52 CD A5 93     	call Decrementa_Contador_de_mov_masticados
 749  8D55
 750  8D55              ; -------------------------------------------
 751  8D55
 752  8D55              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 753  8D55
 754  8D55 2A B8 8B     	ld hl,(Puntero_de_impresion)
 755  8D58 CD D6 94     	call Genera_coordenadas
 756  8D5B
 757  8D5B              ; TODO: Generamos disparo ???
 758  8D5B
 759  8D5B 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 760  8D5E A7           	and a
 761  8D5F C4 FD 8D     	call nz,Entidad_genera_disparo_si_procede
 762  8D62
 763  8D62 CD B4 A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 764  8D65
 765  8D65              Gestiona_siguiente_entidad
 766  8D65
 767  8D65 CD 77 93      	call Store_Restore_cajas
 768  8D68 C1           	pop bc
 769  8D69 10 AF        	djnz 2B
 770  8D6B
 771  8D6B              ; Hemos gestionado todas las entidades.
 772  8D6B              ; ----- ----- -----
 773  8D6B
 774  8D6B CD 25 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 775  8D6E CD 3C 8F     	call Ordena_tabla_de_impresion
 776  8D71 CD 9A 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 777  8D74
 778  8D74              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 779  8D74              ; Hemos gestionado todas las unidades.
 780  8D74              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 781  8D74
 782  8D74              ;	ld hl,Ctrl_1
 783  8D74              ;	res 2,(hl)
 784  8D74
 785  8D74 CD E2 8E     	call Borra_diferencia
 786  8D77
 787  8D77 3A 24 8C     	ld a,(Ctrl_3)
 788  8D7A CB 5F        	bit 3,a
 789  8D7C 20 04        	jr nz,Gestion_de_Amadeus
 790  8D7E
 791  8D7E EB           	ex de,hl
 792  8D7F 71           	ld (hl),c
 793  8D80 2C           	inc l
 794  8D81 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 795  8D82
 796  8D82              ;! GESTIONA AMADEUS !!!!!!!!!!
 797  8D82
 798  8D82              Gestion_de_Amadeus
 799  8D82
 800  8D82 21 24 8C     	ld hl,Ctrl_3
 801  8D85 CB 76        	bit 6,(hl)
 802  8D87 28 13        	jr z,Amadeus_vivo
 803  8D89
 804  8D89              ; Amadeus ha sido destruido.
 805  8D89              ; Decrementa (Temp_new_live).
 806  8D89
 807  8D89 21 38 8C     	ld hl,Temp_new_live
 808  8D8C 35           	dec (hl)
 809  8D8D 20 26        	jr nz,End_frame
 810  8D8F
 811  8D8F              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 812  8D8F
 813  8D8F 21 51 8C     	ld hl,Lives
 814  8D92 35           	dec (hl)
 815  8D93
 816  8D93              ;! Fin del juego
 817  8D93
 818  8D93 F3           	di
 819  8D94 28 FE        	jr z,$
 820  8D96 FB           	ei
 821  8D97
 822  8D97              ; Nueva nave.
 823  8D97
 824  8D97 CD 13 8E     	call Reinicia_Amadeus
 825  8D9A 18 19        	jr End_frame
 826  8D9C
 827  8D9C              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 828  8D9C
 829  8D9C              Amadeus_vivo
 830  8D9C
 831  8D9C 3A 71 89     	ld a,(Impacto_Amadeus)
 832  8D9F A7           	and a
 833  8DA0 C4 32 92     	call nz, Genera_explosion_Amadeus
 834  8DA3 20 10        	jr nz, End_frame
 835  8DA5
 836  8DA5 CD DF 91     	call Teclado
 837  8DA8
 838  8DA8 21 24 8C     	ld hl,Ctrl_3
 839  8DAB CB 6E        	bit 5,(hl)
 840  8DAD 28 06        	jr z,End_frame
 841  8DAF
 842  8DAF              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 843  8DAF
 844  8DAF CD 88 8E     	call Change_Amadeus
 845  8DB2 CD 48 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 846  8DB5
 847  8DB5              End_frame
 848  8DB5
 849  8DB5              ; 20/09/24. Deshabilitamos el permiso de disparo de entidades y generamos los scanlines de los disparos de entidades.
 850  8DB5
 851  8DB5 AF           	xor a
 852  8DB6 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 853  8DB9
 854  8DB9
 855  8DB9              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 856  8DB9              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 857  8DB9
 858  8DB9 CD 7B 9F     	call Genera_datos_de_impresion_disparos_Entidades
 859  8DBC CD 1B A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 860  8DBF
 861  8DBF CD 6E A0     	call Calcula_bytes_pintado_disparos
 862  8DC2 CD 7B A0     	call Limpia_album_de_pintado_disparos
 863  8DC5
 864  8DC5              ; ------------ ------------- --------------
 865  8DC5
 866  8DC5 2A 06 8C     	ld hl,(Album_de_borrado)
 867  8DC8 22 1E 8C     	ld (Scanlines_album_SP),hl
 868  8DCB
 869  8DCB 21 24 8C     	ld hl,Ctrl_3
 870  8DCE CB C6        	set 0,(hl) 											; Indica Frame completo.
 871  8DD0 CB 9E        	res 3,(hl)
 872  8DD2 CB A6        	res 4,(hl)
 873  8DD4
 874  8DD4 AF           	xor a
 875  8DD5 D3 FE        	out ($fe),a
 876  8DD7
 877  8DD7 76           	halt
 878  8DD8
 879  8DD8              ; ----------------------------------------
 880  8DD8
 881  8DD8              ;	ld a,(Ctrl_1) 										; Existe Loop?
 882  8DD8              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 883  8DD8 CA C3 8C     	jp z,Main
 884  8DDB
 885  8DDB              ;------------------------------------------
 886  8DDB              ;
 887  8DDB              ;	14/09/24
 888  8DDB
 889  8DDB              Autoriza_disparo_de_entidades
 890  8DDB
 891  8DDB 3E 01        	ld a,1
 892  8DDD 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 893  8DE0
 894  8DE0 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 895  8DE3 32 42 8C     	ld (CLOCK_disparo_entidad),a
 896  8DE6
 897  8DE6 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 898  8DE9
 899  8DE9 7E           2 ld a,(hl)
 900  8DEA A7           	and a
 901  8DEB 28 08        	jr z,1F
 902  8DED
 903  8DED 32 3D 8C     	ld (DB_RND_disparos),a
 904  8DF0 23           	inc hl
 905  8DF1 22 3B 8C     	ld (RND_SP_Disparos),hl
 906  8DF4
 907  8DF4 C9           	ret
 908  8DF5
 909  8DF5 21 F6 88     1	ld hl,Numeros_aleatorios
 910  8DF8 22 3B 8C     	ld (RND_SP_Disparos),hl
 911  8DFB 18 EC        	jr 2B
 912  8DFD
 913  8DFD              ;------------------------------------------
 914  8DFD              ;
 915  8DFD              ;	14/09/24
 916  8DFD              ;
 917  8DFD              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 918  8DFD
 919  8DFD              Entidad_genera_disparo_si_procede
 920  8DFD
 921  8DFD 3A FB 8B     	ld a,(Entidades_en_curso)
 922  8E00 A7           	and a
 923  8E01 C8           	ret z
 924  8E02
 925  8E02 3A 3D 8C     	ld a,(DB_RND_disparos)
 926  8E05 CB 4F        	bit 1,a
 927  8E07 F5           	push af											; Guardamos FLAGS.
 928  8E08
 929  8E08 17           	rla
 930  8E09 17           	rla
 931  8E0A
 932  8E0A 32 3D 8C     	ld (DB_RND_disparos),a
 933  8E0D
 934  8E0D F1           	pop af
 935  8E0E C4 BB 9F     	call nz,Genera_disparo_de_entidad_maldosa
 936  8E11
 937  8E11 C9           	ret
 938  8E12
 939  8E12
 940  8E12              ; RECARGA DE NUEVA OLEADA.
 941  8E12
 942  8E12              ;	ld a,(Contador_de_frames)
 943  8E12              ;	ld b,a
 944  8E12              ;	ld a,(Activa_recarga_cajas)
 945  8E12              ;	cp b
 946  8E12              ;	jr z,20F
 947  8E12
 948  8E12              ;	ld hl,Ctrl_1
 949  8E12              ;	set 4,(hl)
 950  8E12              ;	jp Main
 951  8E12
 952  8E12              ;20 ld hl,Ctrl_1
 953  8E12              ;	res 4,(hl)
 954  8E12
 955  8E12              ;	ld a,(Contador_de_frames)
 956  8E12
 957  8E12              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 958  8E12              ;! _ IMPREDECIBLE !!!!
 959  8E12
 960  8E12              ;	add 10
 961  8E12              ;	ld (Clock_next_entity),a
 962  8E12
 963  8E12              ;	jp 4B
 964  8E12
 965  8E12 C9           	ret
 966  8E13
 967  8E13              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 968  8E13              ;
 969  8E13              ;	16/11/23
 970  8E13
 971  8E13              ;;Gestiona_Amadeus
 972  8E13
 973  8E13              ;! Activa/desactiva impacto con Amadeus.
 974  8E13
 975  8E13              ;	ld a,(Impacto)
 976  8E13              ;	and a
 977  8E13              ;	jr nz,2F
 978  8E13
 979  8E13              ;;	call Mov_Amadeus
 980  8E13
 981  8E13              ;;2 ld a,(Ctrl_0)
 982  8E13              ;;	bit 4,a
 983  8E13              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 984  8E13
 985  8E13              ;;	call Guarda_foto_entidad_a_pintar
 986  8E13              ;;	call Guarda_datos_de_borrado_Amadeus
 987  8E13
 988  8E13              ;;1 ld hl,Ctrl_0
 989  8E13              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 990  8E13
 991  8E13              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 992  8E13
 993  8E13              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 994  8E13
 995  8E13              ;	call Calcula_numero_de_disparotes
 996  8E13
 997  8E13              ;;	ret
 998  8E13
 999  8E13              ; -----------------------------
1000  8E13              ;
1001  8E13              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1002  8E13              ;
1003  8E13              ;	INPUTS: B a de estar a "0".
1004  8E13
1005  8E13              ;Prepara_Borra_sprites
1006  8E13
1007  8E13              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1008  8E13              ;	ld a,l
1009  8E13              ;	ret z
1010  8E13
1011  8E13              ;	srl a
1012  8E13
1013  8E13              ;2 sub 16
1014  8E13              ;	jr z,1F
1015  8E13              ;	inc b
1016  8E13              ;	jr 2B
1017  8E13
1018  8E13              ;1 inc b
1019  8E13
1020  8E13              ;	exx
1021  8E13              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1022  8E13              ;	exx
1023  8E13
1024  8E13              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1025  8E13              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1026  8E13
1027  8E13              ;	ret
1028  8E13
1029  8E13              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1030  8E13              ;
1031  8E13              ;	24/07/24
1032  8E13
1033  8E13              Reinicia_Amadeus
1034  8E13
1035  8E13              ;	Reinicia posición y estado.
1036  8E13
1037  8E13 21 CF 50     	ld hl,$50cf
1038  8E16 22 72 89     	ld (p.imp.amadeus),hl
1039  8E19 21 F0 E0     	ld hl,$e0f0
1040  8E1C 22 74 89     	ld (Pamm_Amadeus),hl
1041  8E1F 21 3D 00     	ld hl,$003d
1042  8E22 22 76 89     	ld (Comm_Amadeus),hl
1043  8E25
1044  8E25              ;	limpiamos el álbum de borrado.
1045  8E25
1046  8E25 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1047  8E28
1048  8E28 AF           	xor a
1049  8E29 77           	ld (hl),a
1050  8E2A
1051  8E2A E5           	push hl
1052  8E2B D1           	pop de
1053  8E2C 13           	inc de
1054  8E2D
1055  8E2D 01 23 00     	ld bc,35
1056  8E30 ED B0        	ldir
1057  8E32
1058  8E32 CD 48 90     	call Genera_datos_de_impresion_Amadeus
1059  8E35
1060  8E35              ;	Reinicia temporizaciones.
1061  8E35
1062  8E35 CD 25 91     	call Inicia_Shield
1063  8E38
1064  8E38 3E 5A        	ld a,90
1065  8E3A 32 4E 8C     	ld (Shield),a
1066  8E3D
1067  8E3D 3E 64        	ld a,100
1068  8E3F 32 38 8C     	ld (Temp_new_live),a
1069  8E42
1070  8E42              ; 	Restauramos el FLAG: Amadeus vivo.
1071  8E42
1072  8E42 21 24 8C     	ld hl,Ctrl_3
1073  8E45 CB B6        	res 6,(hl)
1074  8E47
1075  8E47              ;	Fuerza la impresión de la nave en el siguiente frame.
1076  8E47
1077  8E47 21 24 8C      	ld hl,Ctrl_3
1078  8E4A CB EE        	set 5,(hl)
1079  8E4C
1080  8E4C C9           	ret
1081  8E4D
1082  8E4D              ; --------------------------------------------------------------------------------------------------------------
1083  8E4D              ;
1084  8E4D              ;	12/05/24
1085  8E4D
1086  8E4D 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1087  8E50 CB 27        	sla a
1088  8E52 32 BE 8B     	ld (Velocidad),a
1089  8E55 E6 10        	and $10
1090  8E57 C8           	ret z
1091  8E58
1092  8E58              ; Restaura (Velocidad) a razón del nº de vueltas.
1093  8E58
1094  8E58 3A B6 8B     	ld a,(Contador_de_vueltas)
1095  8E5B CB 2F        	sra a
1096  8E5D CB 2F        	sra a
1097  8E5F 32 BE 8B     	ld (Velocidad),a
1098  8E62
1099  8E62 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1100  8E65 23           	inc hl
1101  8E66 23           	inc hl
1102  8E67 23           	inc hl
1103  8E68 23           	inc hl
1104  8E69 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1105  8E6C
1106  8E6C C9           	ret
1107  8E6D
1108  8E6D              ; --------------------------------------------------------------------------------------------------------------
1109  8E6D              ;
1110  8E6D              ;	25/08/24
1111  8E6D
1112  8E6D              Change
1113  8E6D
1114  8E6D 3A 1B 8C     	ld a,(Switch)
1115  8E70 EE 01        	xor 1
1116  8E72 32 1B 8C     	ld (Switch),a
1117  8E75 2A 04 8C     	ld hl,(Album_de_pintado)
1118  8E78 ED 5B 06 8C  	ld de,(Album_de_borrado)
1119  8E7C EB           	ex de,hl
1120  8E7D 22 04 8C     	ld (Album_de_pintado),hl
1121  8E80 22 1E 8C     	ld (Scanlines_album_SP),hl
1122  8E83 ED 53 06 8C  	ld (Album_de_borrado),de
1123  8E87 C9           	ret
1124  8E88
1125  8E88              Change_Amadeus
1126  8E88
1127  8E88 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1128  8E8B ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1129  8E8F EB           	ex de,hl
1130  8E90 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1131  8E93 ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1132  8E97 C9           	ret
1133  8E98
1134  8E98              Change_Disparos
1135  8E98
1136  8E98 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1137  8E9B ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1138  8E9F EB           	ex de,hl
1139  8EA0 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1140  8EA3 ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1141  8EA7 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1142  8EAA
1143  8EAA 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1144  8EAD 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1145  8EB0
1146  8EB0 C9           	ret
1147  8EB1
1148  8EB1              ; ------------------------------------
1149  8EB1              ;
1150  8EB1              ; 1/05/24
1151  8EB1
1152  8EB1              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1153  8EB1              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1154  8EB1
1155  8EB1              ;	DESTRUYE: HL,DE,A
1156  8EB1              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1157  8EB1
1158  8EB1              ;	Variables implicadas: (RND_SP).
1159  8EB1
1160  8EB1              Extrae_numero_aleatorio_y_avanza
1161  8EB1
1162  8EB1 21 00 89     	ld hl,Tabla_de_pintado
1163  8EB4 EB           	ex de,hl
1164  8EB5 2A 39 8C     	ld hl,(RND_SP)
1165  8EB8 EB           	ex de,hl
1166  8EB9 A7           	and a
1167  8EBA ED 52        	sbc hl,de
1168  8EBC
1169  8EBC 2A 39 8C     	ld hl,(RND_SP)
1170  8EBF 20 06        	jr nz,1F
1171  8EC1
1172  8EC1              ; Sitúa HL al principio de la tabla de nº aleatorios.
1173  8EC1
1174  8EC1 21 F6 88     	ld hl,Numeros_aleatorios
1175  8EC4 22 39 8C     	ld (RND_SP),HL
1176  8EC7
1177  8EC7              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1178  8EC7
1179  8EC7 7E           1 ld a,(hl)
1180  8EC8 23           	inc hl
1181  8EC9 22 39 8C     	ld (RND_SP),hl
1182  8ECC C9           	ret
1183  8ECD
1184  8ECD              ; ------------------------------------
1185  8ECD              ;
1186  8ECD              ; 1/05/24
1187  8ECD
1188  8ECD              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1189  8ECD              ; (1 a 4 segundos).
1190  8ECD              ; Actualizamos (Clock_next_entity) con A.
1191  8ECD
1192  8ECD              ;	DESTRUYE: A y B.
1193  8ECD              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1194  8ECD              ;			 Actualiza (Clock_next_entity) con A.
1195  8ECD
1196  8ECD              ;	Variables implicadas: (Clock_next_entity).
1197  8ECD
1198  8ECD              ; Notas:
1199  8ECD
1200  8ECD              ; 	$32 1 seg.
1201  8ECD              ; 	$64 2 seg.
1202  8ECD              ; 	$96 3 seg.
1203  8ECD              ; 	$c8 4 seg.
1204  8ECD              ; 	$fa 5 seg.
1205  8ECD
1206  8ECD              ; $ffff 1310,7 seg, 22 minutos.
1207  8ECD
1208  8ECD              ;	$0100  5 seg. aproximadamente.
1209  8ECD              ;	$0200 10 seg. aproximadamente.
1210  8ECD              ;	$0300 15 seg. aproximadamente.
1211  8ECD              ;	$0400 20 seg. aproximadamente.
1212  8ECD              ;	$0500 25 seg. aproximadamente.
1213  8ECD              ;	$0600 30 seg. aproximadamente.
1214  8ECD
1215  8ECD              Define_Clock_next_entity
1216  8ECD
1217  8ECD FE 34        	cp $34
1218  8ECF 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1219  8ED1
1220  8ED1              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1221  8ED1
1222  8ED1 4F           3 ld c,a
1223  8ED2 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1224  8ED4 2A 78 5C     	ld hl,(FRAMES)
1225  8ED7 A7           	and a
1226  8ED8 ED 4A        	adc hl,bc
1227  8EDA 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1228  8EDD C9           	ret
1229  8EDE
1230  8EDE 3E 34        1 ld a,$34
1231  8EE0 18 EF        	jr 3B
1232  8EE2
1233  8EE2              ; ------------------------------------
1234  8EE2              ;
1235  8EE2              ; 18/03/24
1236  8EE2
1237  8EE2              Borra_diferencia
1238  8EE2
1239  8EE2 ED 4B 1E 8C  	ld bc,(Scanlines_album_SP)
1240  8EE6
1241  8EE6 3A 1B 8C     	ld a,(Switch)
1242  8EE9 A7           	and a
1243  8EEA 28 08        	jr z,2F
1244  8EEC
1245  8EEC 2A 19 8C     	ld hl,(Techo_Scanlines_album_2)
1246  8EEF 11 19 8C     	ld de,Techo_Scanlines_album_2
1247  8EF2 18 06        	jr 3F
1248  8EF4
1249  8EF4 2A 17 8C     2 ld hl,(Techo_Scanlines_album)
1250  8EF7 11 17 8C     	ld de,Techo_Scanlines_album
1251  8EFA
1252  8EFA              ; Diferencia.
1253  8EFA
1254  8EFA ED 42        3 sbc hl,bc
1255  8EFC
1256  8EFC C8           	ret z
1257  8EFD D8           	ret c
1258  8EFE
1259  8EFE              ; Nuevo techo, (más bajo que el anterior).
1260  8EFE              ; Fijamos nuevo techo y borramos bytes sobrantes.
1261  8EFE
1262  8EFE EB           	ex de,hl
1263  8EFF
1264  8EFF 71           	ld (hl),c
1265  8F00 2C           	inc l
1266  8F01 70           	ld (hl),b
1267  8F02
1268  8F02 AF           	xor a
1269  8F03 43           	ld b,e
1270  8F04
1271  8F04 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1272  8F07
1273  8F07 77           1 ld (hl),a
1274  8F08 23           	inc hl
1275  8F09 10 FC        	djnz 1B
1276  8F0B
1277  8F0B              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1278  8F0B
1279  8F0B 21 24 8C     	ld hl,Ctrl_3
1280  8F0E CB DE        	set 3,(hl)
1281  8F10
1282  8F10 C9           	ret
1283  8F11
1284  8F11              ; --------------------------------------------------------------------------------------------------------------
1285  8F11              ;
1286  8F11              ;	26/3/24
1287  8F11
1288  8F11              Recauda_informacion_de_entidad_en_curso
1289  8F11
1290  8F11              ; Almacena la Coordenada Y de la entidad en curso.
1291  8F11
1292  8F11              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1293  8F11
1294  8F11 3A B5 8B     	ld a,(Coordenada_y)
1295  8F14 2A 20 8C     	ld hl,(India_SP)
1296  8F17 77           	ld (hl),a
1297  8F18 2C           	inc l
1298  8F19
1299  8F19              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1300  8F19
1301  8F19 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
1302  8F1D
1303  8F1D 73           	ld (hl),e
1304  8F1E 2C           	inc l
1305  8F1F 72           	ld (hl),d
1306  8F20 2C           	inc l
1307  8F21
1308  8F21 22 20 8C     	ld (India_SP),hl
1309  8F24
1310  8F24 C9           	ret
1311  8F25
1312  8F25              ; --------------------------------------------------------------------------------------------------------------
1313  8F25              ;
1314  8F25              ;	27/03/24
1315  8F25              ;
1316  8F25
1317  8F25              Inicializa_India_y_limpia_Tabla_de_impresion
1318  8F25
1319  8F25 2A 20 8C     	ld hl,(India_SP)
1320  8F28 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1321  8F2B
1322  8F2B 79           	ld a,c
1323  8F2C 95           	sub l
1324  8F2D 28 06        	jr z,2F
1325  8F2F 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1326  8F30              ;														; _ y pasamos a inicializar (India_SP).
1327  8F30 AF           	xor a
1328  8F31
1329  8F31 77           1 ld (hl),a
1330  8F32 2C           	inc l
1331  8F33 10 FC        	djnz 1B												; Limpia Tabla.
1332  8F35
1333  8F35 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1334  8F38 22 20 8C     	ld (India_SP),hl
1335  8F3B
1336  8F3B C9           	ret
1337  8F3C
1338  8F3C              ; --------------------------------------------------------------------------------------------------------------
1339  8F3C              ;
1340  8F3C              ;	31/3/24
1341  8F3C
1342  8F3C              Ordena_tabla_de_impresion
1343  8F3C
1344  8F3C              ; 5794 T/states.
1345  8F3C              ; 6278 T/states.
1346  8F3C              ; 5310 T/states.
1347  8F3C
1348  8F3C              ; Inicializamos punteros (India_SP) e (India_2_SP).
1349  8F3C              ; Inicializamos contador de comparaciones, [C].
1350  8F3C              ; Cargamos los registros A y B para efectuar comparación.
1351  8F3C
1352  8F3C FD 2E 00     	ld iyl,0
1353  8F3F
1354  8F3F 3A FB 8B     	ld a,(Entidades_en_curso)
1355  8F42 FE 04        	cp 4 	;	4
1356  8F44 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1357  8F45
1358  8F45 3D           	dec a
1359  8F46 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1360  8F47 51           	ld d,c 										; Copia de respaldo.
1361  8F48
1362  8F48 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1363  8F49
1364  8F49 21 03 89     	ld hl,Tabla_de_pintado+3
1365  8F4C 46           	ld b,(hl)
1366  8F4D 22 22 8C     	ld (India_2_SP),hl
1367  8F50
1368  8F50 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1369  8F51 DC 79 8F     	call c, Avanza_India_2_SP
1370  8F54 CC 79 8F     	call z, Avanza_India_2_SP
1371  8F57
1372  8F57 FD 2D        	dec iyl
1373  8F59 28 18        	jr z,2F
1374  8F5B
1375  8F5B
1376  8F5B              ; --------------------------------------------------------------------------------------------------------------
1377  8F5B              ;
1378  8F5B              ;	7/4/24
1379  8F5B
1380  8F5B              Trueque
1381  8F5B
1382  8F5B              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1383  8F5B              ;  			A contiene en nº de fila de (India_SP).
1384  8F5B              ;			HL contiene (India_2_SP).
1385  8F5B
1386  8F5B D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1387  8F5C E5           	push hl										; Preservo (India_2_SP).
1388  8F5D
1389  8F5D ED 5B 20 8C  	ld de,(India_SP)
1390  8F61 EB           	ex de,hl
1391  8F62 70           	ld (hl),b
1392  8F63 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1393  8F64
1394  8F64 CD A5 8F     	call Intercambia_1_byte
1395  8F67 CD A5 8F     	call Intercambia_1_byte
1396  8F6A
1397  8F6A
1398  8F6A              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1399  8F6A              ; Recuperamos (India_2_SP) en HL.
1400  8F6A
1401  8F6A 2A 20 8C     	ld hl,(India_SP)
1402  8F6D 7E           	ld a,(hl)
1403  8F6E
1404  8F6E E1           	pop hl
1405  8F6F D1           	pop de
1406  8F70
1407  8F70              ; --------------------------------------------------------------------------------------------------------------
1408  8F70
1409  8F70 CD 79 8F     	call Avanza_India_2_SP
1410  8F73
1411  8F73 14           2 inc d
1412  8F74 15           	dec d
1413  8F75 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1414  8F76 18 D8        	jr 1B
1415  8F78
1416  8F78 C9           	ret
1417  8F79
1418  8F79              ; ----- ----- ----- ----- -----
1419  8F79
1420  8F79              Avanza_India_2_SP
1421  8F79
1422  8F79 0D           	dec c
1423  8F7A 28 0A        	jr z,Avanza_punteros_indios
1424  8F7C
1425  8F7C FD 2C        	inc iyl
1426  8F7E
1427  8F7E 2C           	inc l
1428  8F7F 2C           	inc l
1429  8F80 2C           	inc l
1430  8F81
1431  8F81 46           	ld b,(hl)
1432  8F82 22 22 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1433  8F85
1434  8F85 C9           	ret
1435  8F86
1436  8F86              ; ----- ----- ----- ----- -----
1437  8F86
1438  8F86              Avanza_punteros_indios
1439  8F86
1440  8F86 15           	dec d
1441  8F87 28 15        	jr z,Prepara_salida
1442  8F89
1443  8F89 4A           	ld c,d
1444  8F8A
1445  8F8A 2A 20 8C     	ld hl,(India_SP)
1446  8F8D 2C           	inc l
1447  8F8E 2C           	inc l
1448  8F8F 2C           	inc l
1449  8F90 7E           	ld a,(hl)
1450  8F91 22 20 8C     	ld (India_SP),hl
1451  8F94
1452  8F94 2C           	inc l
1453  8F95 2C           	inc l
1454  8F96 2C           	inc l
1455  8F97 46           	ld b,(hl)
1456  8F98 22 22 8C     	ld (India_2_SP),hl
1457  8F9B
1458  8F9B FD 2C        	inc iyl
1459  8F9D
1460  8F9D C9           	ret
1461  8F9E
1462  8F9E              Prepara_salida
1463  8F9E
1464  8F9E 21 00 89     	ld hl,Tabla_de_pintado
1465  8FA1 22 20 8C     	ld (India_SP),hl
1466  8FA4 C9           	ret
1467  8FA5
1468  8FA5
1469  8FA5 2C           Intercambia_1_byte inc l
1470  8FA6 1C           	inc e
1471  8FA7 46           	ld b,(hl)
1472  8FA8 1A           	ld a,(de)
1473  8FA9 EB           	ex de,hl
1474  8FAA 70           	ld (hl),b
1475  8FAB 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1476  8FAC C9           	ret
1477  8FAD
1478  8FAD              ; -----------------------------------------------------------------------------------
1479  8FAD              ;
1480  8FAD              ;	20/01/24
1481  8FAD              ;
1482  8FAD              ;
1483  8FAD
1484  8FAD              Construye_movimientos_masticados_entidad
1485  8FAD
1486  8FAD 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1487  8FB0 E5           	push hl
1488  8FB1 CD F4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1489  8FB4              ;															; _ el (Contador_de_mov_masticados).
1490  8FB4 CD BD 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1491  8FB7              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1492  8FB7 CD F4 99     	call Recompone_posicion_inicio
1493  8FBA
1494  8FBA CD 24 97     1 call Draw
1495  8FBD CD D9 8F     	call Guarda_movimiento_masticado
1496  8FC0
1497  8FC0 CD A1 9D     	call Movimiento
1498  8FC3
1499  8FC3 3A 24 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1500  8FC6 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1501  8FC8 28 F0        	jr z,1B
1502  8FCA
1503  8FCA              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1504  8FCA              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1505  8FCA
1506  8FCA E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1507  8FCB 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1508  8FCE
1509  8FCE              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1510  8FCE
1511  8FCE CD 05 9F     	call Situa_en_contador_general_de_mov_masticados
1512  8FD1
1513  8FD1              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1514  8FD1              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1515  8FD1
1516  8FD1 ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1517  8FD5
1518  8FD5 71           	ld (hl),c
1519  8FD6 23           	inc hl
1520  8FD7 70           	ld (hl),b
1521  8FD8
1522  8FD8 C9           	ret
1523  8FD9
1524  8FD9              ; -----------------------------------------------------------------------------------
1525  8FD9              ;
1526  8FD9              ;	28/12/23
1527  8FD9              ;
1528  8FD9              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1529  8FD9              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1530  8FD9
1531  8FD9              Guarda_movimiento_masticado
1532  8FD9
1533  8FD9 ED 73 00 8C  	ld (Stack),sp
1534  8FDD ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1535  8FE1
1536  8FE1 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1537  8FE3 FD E5            push iy 												; Pushea Puntero_objeto.
1538  8FE5
1539  8FE5 ED 7B 00 8C      ld sp,(Stack)
1540  8FE9
1541  8FE9 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1542  8FEC 23           	inc hl
1543  8FED 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1544  8FF0
1545  8FF0 CD F4 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1546  8FF3              ;															; _ el (Contador_de_mov_masticados).
1547  8FF3 C9               ret
1548  8FF4
1549  8FF4              ; --------------------------------------------------------------------------------------------------------------
1550  8FF4              ;
1551  8FF4              ;	12/1/24
1552  8FF4              ;
1553  8FF4              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1554  8FF4
1555  8FF4              Actualiza_Puntero_de_almacen_de_mov_masticados
1556  8FF4
1557  8FF4 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1558  8FF7 01 04 00     	ld bc,4
1559  8FFA A7           	and a
1560  8FFB ED 4A        	adc hl,bc
1561  8FFD 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1562  9000 C9           	ret
1563  9001
1564  9001              ; --------------------------------------------------------------------------------------------------------------
1565  9001              ;
1566  9001              ;	24/03/24
1567  9001              ;
1568  9001              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1569  9001              ;
1570  9001              ;	IX contiene el puntero de impresión.
1571  9001              ;	DE contiene (Puntero_objeto).
1572  9001
1573  9001
1574  9001              Cargamos_registros_con_mov_masticado
1575  9001
1576  9001 ED 73 00 8C  	ld (Stack),sp
1577  9005 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1578  9009
1579  9009 D1           	pop de 															; DE contiene Puntero_objeto
1580  900A DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1581  900C
1582  900C ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1583  9010 ED 7B 00 8C  	ld sp,(Stack)
1584  9014
1585  9014 7B           	ld a,e
1586  9015 82           	add d															; Comprueba si ya no hay datos en el almacén.
1587  9016
1588  9016 CC AD 93     	call z,Reinicia_entidad_maliciosa
1589  9019
1590  9019 C9           	ret
1591  901A
1592  901A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1593  901A              ;
1594  901A              ;	22/7/24
1595  901A
1596  901A              Cargamos_registros_con_explosion
1597  901A
1598  901A
1599  901A 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1600  901D CD B7 90     	call Extrae_address
1601  9020
1602  9020 5D           	ld e,l
1603  9021 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1604  9022
1605  9022 DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1606  9026
1607  9026 C9           	ret
1608  9027
1609  9027
1610  9027              Cargamos_registros_con_explosion_Amadeus
1611  9027
1612  9027 2A 74 89     	ld hl,(Pamm_Amadeus)
1613  902A CD B7 90     	call Extrae_address
1614  902D
1615  902D 5D           	ld e,l
1616  902E 54           	ld d,h
1617  902F
1618  902F DD 2A 72 89  	ld ix,(p.imp.amadeus)
1619  9033
1620  9033 C9           	ret
1621  9034
1622  9034              ; --------------------------------------------------------------------------------------------------------------
1623  9034              ;
1624  9034              ;	17/06/24
1625  9034              ;
1626  9034              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1627  9034              ;
1628  9034              ;	IX contiene el puntero de impresión.
1629  9034              ;	DE contiene (Puntero_objeto).
1630  9034
1631  9034
1632  9034              Cargamos_registros_con_mov_masticado_Amadeus
1633  9034
1634  9034 ED 73 00 8C  	ld (Stack),sp
1635  9038 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1636  903C D1           	pop de 															; DE contiene Puntero_objeto
1637  903D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1638  903F DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1639  9043 ED 7B 00 8C  	ld sp,(Stack)
1640  9047 C9           	ret
1641  9048
1642  9048              ; ---------------------------------------------------------------------------------------------------------------------
1643  9048              ;
1644  9048              ;	18/6/24
1645  9048              ;
1646  9048              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1647  9048
1648  9048              Genera_datos_de_impresion_Amadeus
1649  9048
1650  9048 3A 71 89     	ld a,(Impacto_Amadeus)
1651  904B A7           	and a
1652  904C 20 03        	jr nz,1F
1653  904E
1654  904E              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1655  904E              ; _apuntando a la correspondiente explosión.
1656  904E
1657  904E CD 34 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1658  9051
1659  9051 DD 7D        1 ld a,ixl
1660  9053 E6 1F        	and $1f
1661  9055 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1662  9058
1663  9058 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1664  905B E5           	push hl
1665  905C
1666  905C 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1667  905F 22 1E 8C     	ld (Scanlines_album_SP),hl
1668  9062
1669  9062 CD 02 95     	call Genera_datos_de_impresion
1670  9065
1671  9065 E1           	pop hl
1672  9066 22 1E 8C     	ld (Scanlines_album_SP),hl
1673  9069
1674  9069 C9           	ret
1675  906A
1676  906A              ; ---------------------------------------------------------------------------------------------------------------------
1677  906A              ;
1678  906A              ;	13/03/24
1679  906A              ;
1680  906A              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1681  906A
1682  906A              Inicia_albumes_de_lineas
1683  906A
1684  906A 21 00 80     	ld hl,Scanlines_album
1685  906D 22 04 8C     	ld (Album_de_pintado),hl
1686  9070 22 1E 8C     	ld (Scanlines_album_SP),hl
1687  9073
1688  9073 21 1A 81     	ld hl,Scanlines_album_2
1689  9076 22 06 8C     	ld (Album_de_borrado),hl
1690  9079
1691  9079 C9           	ret
1692  907A
1693  907A              Inicia_albumes_de_lineas_Amadeus
1694  907A
1695  907A 21 34 82     	ld hl,Amadeus_scanlines_album
1696  907D 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1697  9080 21 58 82     	ld hl,Amadeus_scanlines_album_2
1698  9083 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1699  9086
1700  9086 C9           	ret
1701  9087
1702  9087              Inicia_albumes_de_disparos
1703  9087
1704  9087 21 7C 82     	ld hl,Disparos_scanlines_album
1705  908A 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1706  908D 21 B8 82     	ld hl,Disparos_scanlines_album_2
1707  9090 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1708  9093
1709  9093 21 7C 82     	ld hl,Disparos_scanlines_album
1710  9096 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1711  9099
1712  9099 C9           	ret
1713  909A
1714  909A              ; ---------------------------------------------------------------------------------------------------------------------
1715  909A              ;
1716  909A              ; 8/1/23
1717  909A              ;
1718  909A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1719  909A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1720  909A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1721  909A
1722  909A              ; Destruye HL y DE !!!!!
1723  909A
1724  909A              Inicia_punteros_de_cajas
1725  909A
1726  909A 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1727  909D CD B7 90         call Extrae_address
1728  90A0 22 F3 8B         ld (Puntero_store_caja),hl
1729  90A3 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1730  90A6 22 F7 8B     	ld (Indice_restore_caja),hl
1731  90A9 CD B7 90     	call Extrae_address
1732  90AC 22 F5 8B     	ld (Puntero_restore_caja),hl
1733  90AF C9               ret
1734  90B0
1735  90B0              ; *************************************************************************************************************************************************************
1736  90B0              ;
1737  90B0              ; 8/1/23
1738  90B0              ;
1739  90B0              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1740  90B0
1741  90B0 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1742  90B3 22 27 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1743  90B6 C9           	ret
1744  90B7
1745  90B7              ; *************************************************************************************************************************************************************
1746  90B7              ;
1747  90B7              ; 20/10/22
1748  90B7              ;
1749  90B7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1750  90B7              ;
1751  90B7              ; Destruye el puntero y DE !!!!!
1752  90B7
1753  90B7 5E           Extrae_address ld e,(hl)
1754  90B8 23           	inc hl
1755  90B9 56           	ld d,(hl)
1756  90BA 2B           	dec hl
1757  90BB EB           	ex de,hl
1758  90BC C9           	ret
1759  90BD
1760  90BD              ; *************************************************************************************************************************************************************
1761  90BD              ;
1762  90BD              ;	20/1/24
1763  90BD              ;
1764  90BD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1765  90BD              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1766  90BD              ;
1767  90BD              ;   Destruye HL y BC !!!!!,
1768  90BD              ;
1769  90BD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1770  90BD              ;					"0" ..... Izquierda.
1771  90BD
1772  90BD              Inicia_Puntero_objeto
1773  90BD
1774  90BD 3A D2 8B     	ld a,(Cuad_objeto)
1775  90C0 E6 01        	and 1
1776  90C2 F5           	push af
1777  90C3 CC DF 90     	call z,Inicia_puntero_objeto_izq
1778  90C6 F1           	pop af
1779  90C7 C8           	ret z
1780  90C8 CD CC 90     	call Inicia_puntero_objeto_der
1781  90CB C9           	ret
1782  90CC
1783  90CC              ; Arrancamos desde la parte izquierda de la pantalla.
1784  90CC              ; Iniciamos (Indice_Sprite_der).
1785  90CC
1786  90CC 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1787  90CF 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1788  90D2 CD B7 90     	call Extrae_address
1789  90D5 22 C5 8B     	ld (Puntero_objeto),hl
1790  90D8
1791  90D8 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1792  90DB 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1793  90DE C9           	ret
1794  90DF
1795  90DF              ; Arrancamos desde la parte derecha de la pantalla.
1796  90DF              ; Iniciamos (Indice_Sprite_izq).
1797  90DF
1798  90DF 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1799  90E2 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1800  90E5 CD B7 90     	call Extrae_address
1801  90E8 22 C5 8B     	ld (Puntero_objeto),hl
1802  90EB
1803  90EB 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1804  90EE 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1805  90F1 C9           	ret
1806  90F2
1807  90F2              ; **************************************************************************************************
1808  90F2              ;
1809  90F2              ;	06/07/24
1810  90F2              ;
1811  90F2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1812  90F2
1813  90F2              Restore_entidad
1814  90F2
1815  90F2 2A F3 8B     	ld hl,(Puntero_store_caja)
1816  90F5 7E           	ld a,(hl)
1817  90F6 A7           	and a
1818  90F7 CC 05 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1819  90FA 28 F6        	jr z,Restore_entidad
1820  90FC
1821  90FC 11 B3 8B     	ld de,Bandeja_DRAW
1822  90FF 01 0C 00     	ld bc,12
1823  9102 ED B0        	ldir
1824  9104 C9           	ret
1825  9105
1826  9105              ; **************************************************************************************************
1827  9105              ;
1828  9105              ;	08/05/23
1829  9105              ;
1830  9105              ;	Incrementamos los dos punteros de entidades. (+1).
1831  9105
1832  9105              Incrementa_punteros_de_cajas
1833  9105
1834  9105 2A F5 8B     	ld hl,(Puntero_restore_caja)
1835  9108 22 F3 8B     	ld (Puntero_store_caja),hl
1836  910B 2A F7 8B     	ld hl,(Indice_restore_caja)
1837  910E 23           	inc hl
1838  910F 23           	inc hl
1839  9110 22 F7 8B     	ld (Indice_restore_caja),hl
1840  9113 CD B7 90         call Extrae_address
1841  9116 22 F5 8B         ld (Puntero_restore_caja),hl
1842  9119 C9               ret
1843  911A
1844  911A              ; -----------------------------------------------------------
1845  911A
1846  911A              ; Teclado.
1847  911A
1848  911A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1849  911C DB FE        	in a,($fe)
1850  911E E6 01        	and $01
1851  9120 28 02        	jr z,1f
1852  9122 18 F6        	jr Pulsa_ENTER
1853  9124 C9           1 ret
1854  9125
1855  9125              ; **************************************************************************************************
1856  9125              ;
1857  9125              ; Temporización.
1858  9125
1859  9125              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1860  9125              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1861  9125              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1862  9125              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1863  9125
1864  9125              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1865  9125              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1866  9125              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1867  9125
1868  9125              ; A partir de $4f61 no hace falta DELAY.
1869  9125
1870  9125              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1871  9125
1872  9125              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1873  9125              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1874  9125              ;	LD A,B
1875  9125              ;	AND A
1876  9125              ;	JR NZ,wait
1877  9125              ;	RET
1878  9125
1879  9125              ; ---------------------------------------------------------------------------------------------------------------
1880  9125              ;
1881  9125              ;	13/07/24
1882  9125              ;
1883  9125
1884  9125              Inicia_Shield
1885  9125
1886  9125 21 48 8C     	ld hl,Datos_Shield
1887  9128 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1888  912B
1889  912B 7E           	ld a,(hl)
1890  912C 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1891  912F
1892  912F 3E 01        	ld a,1
1893  9131 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1894  9134
1895  9134 C9           	ret
1896  9135
1897  9135              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1898  9135              ;
1899  9135              ;	4/6/24
1900  9135              ;
1901  9135              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1902  9135              ;
1903  9135              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1904  9135              ;
1905  9135
1906  9135              Actualiza_pantalla
1907  9135
1908  9135 3E 02        	ld a,2
1909  9137 D3 FE        	out ($fe),a
1910  9139
1911  9139 3A 24 8C     	ld a,(Ctrl_3)
1912  913C CB 57        	bit 2,a
1913  913E 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1914  9140
1915  9140              Borrando_entidades
1916  9140
1917  9140 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1918  9143 CD B7 90     	call Extrae_address
1919  9146 24           	inc h
1920  9147 25           	dec h
1921  9148 28 05        	jr z,Pintando_entidades
1922  914A CD 01 96     	call Pinta_Sprites
1923  914D 18 F1        	jr Borrando_entidades
1924  914F
1925  914F              Pintando_entidades
1926  914F
1927  914F 2A 20 8C     	ld hl,(India_SP)
1928  9152 2C           	inc l
1929  9153 CD B7 90     	call Extrae_address
1930  9156 24           	inc h
1931  9157 25           	dec h
1932  9158 28 0E        	jr z,Ejecuta_escudo
1933  915A 1C           	inc e
1934  915B 1C           	inc e
1935  915C ED 53 20 8C  	ld (India_SP),de
1936  9160 CD B7 90     	call Extrae_address
1937  9163 CD 01 96     	call Pinta_Sprites
1938  9166 18 E7        	jr Pintando_entidades
1939  9168
1940  9168              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1941  9168
1942  9168              Ejecuta_escudo
1943  9168
1944  9168 3A 4E 8C     	ld a,(Shield)
1945  916B A7           	and a
1946  916C 20 2F        	jr nz,Aplica_Shield
1947  916E
1948  916E              Borrando_Amadeus
1949  916E
1950  916E 21 24 8C     	ld hl,Ctrl_3
1951  9171 CB 6E        	bit 5,(hl)
1952  9173 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1953  9175
1954  9175 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1955  9178 CD B7 90     	call Extrae_address
1956  917B 24           	inc h
1957  917C 25           	dec h
1958  917D 28 03        	jr z,Pintando_Amadeus
1959  917F CD 01 96     	call Pinta_Sprites
1960  9182
1961  9182              Pintando_Amadeus
1962  9182
1963  9182 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1964  9185 CD B7 90     	call Extrae_address
1965  9188 24           	inc h
1966  9189 25           	dec h
1967  918A 28 03        	jr z,1F
1968  918C CD 01 96     	call Pinta_Sprites
1969  918F
1970  918F              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1971  918F
1972  918F 21 24 8C     1 ld hl,Ctrl_3
1973  9192 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1974  9194 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1975  9196 CB AE        	res 5,(hl)
1976  9198
1977  9198 3E 01        	ld a,1												; Borde azul.
1978  919A D3 FE        	out ($fe),a
1979  919C
1980  919C C9           	ret
1981  919D
1982  919D              Aplica_Shield
1983  919D
1984  919D              ;	Bit 1 "1" (Shield_3) Sólo borra.
1985  919D              ;		  "0"     ""     Borra/Pinta.
1986  919D              ;	Bit 2    ""  RET.	 No borra, no pinta.
1987  919D
1988  919D 21 50 8C     	ld hl,Shield_3
1989  91A0
1990  91A0 CB 5E        	bit 3,(hl)
1991  91A2 20 DE        	jr nz,Pintando_Amadeus
1992  91A4
1993  91A4 CB 56        	bit 2,(hl)
1994  91A6 20 E7        	jr nz,1B
1995  91A8
1996  91A8 CB 4E        	bit 1,(hl)
1997  91AA C4 B1 91     	call nz,Borra_Amadeus_shield
1998  91AD
1999  91AD 28 BF        	jr z,Borrando_Amadeus
2000  91AF 18 DE        	jr 1B
2001  91B1
2002  91B1              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2003  91B1
2004  91B1              Borra_Amadeus_shield
2005  91B1
2006  91B1 3A 24 8C     	ld a,(Ctrl_3)
2007  91B4 CB 6F        	bit 5,a
2008  91B6 28 08        	jr z,1F
2009  91B8
2010  91B8 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
2011  91BB CD B7 90     	call Extrae_address
2012  91BE 18 06        	jr 2F
2013  91C0
2014  91C0 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
2015  91C3 CD B7 90     	call Extrae_address
2016  91C6
2017  91C6 CD 01 96     2 call Pinta_Sprites
2018  91C9
2019  91C9 AF           	xor a
2020  91CA 3C           	inc a											; Asegura NZ en la salida de la rutina.
2021  91CB
2022  91CB C9           	ret
2023  91CC
2024  91CC              Pinta_Amadeus_shield
2025  91CC
2026  91CC 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2027  91CF CD B7 90     	call Extrae_address
2028  91D2 CD 01 96     	call Pinta_Sprites
2029  91D5
2030  91D5 AF           	xor a
2031  91D6 3C           	inc a											; Asegura NZ en la salida de la rutina.
2032  91D7
2033  91D7 C9           	ret
2034  91D8
2035  91D8              Borra_Pinta_Amadeus_shield
2036  91D8
2037  91D8 CD B1 91     	call Borra_Amadeus_shield
2038  91DB CD CC 91     	call Pinta_Amadeus_shield
2039  91DE C9           	ret
2040  91DF
2041  91DF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2042  91DF              ;
2043  91DF              ;	19/6/24
2044  91DF              ;
2045  91DF
2046  91DF              Teclado
2047  91DF
2048  91DF              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2049  91DF
2050  91DF 3E F7        	ld a,$f7												; "5" para disparar.
2051  91E1 DB FE        	in a,($fe)
2052  91E3 E6 10        	and $10
2053  91E5
2054  91E5 CC 3E A1     	call z,Genera_disparo_Amadeus
2055  91E8
2056  91E8 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2057  91EA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2058  91EC E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2059  91EE CC 6E 9D         call z,Amadeus_a_izquierda
2060  91F1
2061  91F1 3E F7        	ld a,$f7
2062  91F3 DB FE        	in a,($fe)
2063  91F5 E6 01        	and $01
2064  91F7 C8           	ret z
2065  91F8
2066  91F8 3E F7        	ld a,$f7
2067  91FA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2068  91FC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2069  91FE CC 86 9D     	call z,Amadeus_a_derecha
2070  9201
2071  9201 C9           	ret
2072  9202
2073  9202              ; ------------------------------------------------------------------------------------------------------------------------
2074  9202              ;
2075  9202              ;	06/07/24
2076  9202              ;
2077  9202
2078  9202              Genera_explosion
2079  9202
2080  9202 21 36 8C     	ld hl,Clock_explosion
2081  9205 35           	dec (hl)
2082  9206 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2083  9208
2084  9208              Borra_entidad_colisionada
2085  9208
2086  9208 CD 11 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2087  920B CD 1A 90     	call Cargamos_registros_con_explosion
2088  920E CD 02 95     	call Genera_datos_de_impresion
2089  9211
2090  9211 AF           	xor a
2091  9212 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2092  9213
2093  9213 C9           	ret
2094  9214
2095  9214              Siguiente_frame_explosion
2096  9214
2097  9214 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2098  9216
2099  9216              ; Avanza Frame de explosión.
2100  9216
2101  9216 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2102  9219 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2103  921C
2104  921C 79           	ld a,c
2105  921D 95           	sub l
2106  921E 20 0B        	jr nz,1F
2107  9220
2108  9220              ; Fín de la entidad !!!!!!!!!!!!!
2109  9220
2110  9220 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2111  9223 35           	dec (hl)
2112  9224 23           	inc hl
2113  9225 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2114  9226
2115  9226 CD 82 93     	call Limpiamos_bandeja_DRAW
2116  9229 18 DD        	jr Borra_entidad_colisionada
2117  922B
2118  922B 23           1 inc hl
2119  922C 23           	inc hl
2120  922D 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2121  9230 18 D6        	jr Borra_entidad_colisionada
2122  9232
2123  9232              ; ----- ----- ----- ----- -----
2124  9232
2125  9232              Genera_explosion_Amadeus
2126  9232
2127  9232 21 37 8C     	ld hl,Clock_explosion_Amadeus
2128  9235 35           	dec (hl)
2129  9236 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2130  9238
2131  9238              Borra_Amadeus_impactado
2132  9238
2133  9238 CD 88 8E     	call Change_Amadeus
2134  923B CD 27 90     	call Cargamos_registros_con_explosion_Amadeus
2135  923E CD 48 90     	call Genera_datos_de_impresion_Amadeus
2136  9241
2137  9241 21 24 8C     	ld hl,Ctrl_3
2138  9244 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2139  9246
2140  9246 AF           	xor a
2141  9247 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2142  9248
2143  9248 C9           	ret
2144  9249
2145  9249              Siguiente_frame_explosion_Amadeus
2146  9249
2147  9249 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2148  924B
2149  924B              ; Avanza Frame de explosión.
2150  924B
2151  924B 2A 74 89     	ld hl,(Pamm_Amadeus)
2152  924E 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2153  9251
2154  9251 79           	ld a,c
2155  9252 95           	sub l
2156  9253 20 0B        	jr nz,1F
2157  9255
2158  9255              ; Fín de Amadeus !!!!!!!!!!!!!
2159  9255              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2160  9255
2161  9255 AF           	xor a
2162  9256 32 71 89     	ld (Impacto_Amadeus),a
2163  9259 21 24 8C     	ld hl,Ctrl_3
2164  925C CB F6        	set 6,(hl)
2165  925E
2166  925E 18 D8        	jr Borra_Amadeus_impactado
2167  9260
2168  9260 23           1 inc hl
2169  9261 23           	inc hl
2170  9262 22 74 89     	ld (Pamm_Amadeus),hl
2171  9265 18 D1        	jr Borra_Amadeus_impactado
2172  9267
2173  9267              ; ---------------------------------------------------------------
2174  9267
2175  9267              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9267              ; ******************************************************************************************************************************************************************************************
   2+ 9267              ;
   3+ 9267              ;   21/04/24
   4+ 9267              ;
   5+ 9267              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9267              ;   (XOR) bit a bit.
   7+ 9267              ;
   8+ 9267              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9267
  10+ 9267              Derivando_RND
  11+ 9267
  12+ 9267 21 F6 88         ld hl,Numeros_aleatorios
  13+ 926A
  14+ 926A ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 926C C5               push bc
  16+ 926D              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 926D 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9270              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9270
  20+ 9270 A7           6 and a                                 ; Carry a "0".
  21+ 9271 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9273 30 02            jr nc,1F
  23+ 9275
  24+ 9275 CB C1            set 0,c
  25+ 9277
  26+ 9277 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9278 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 927A 5F               ld e,a
  29+ 927B
  30+ 927B 7A               ld a,d
  31+ 927C E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 927E 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9280
  34+ 9280 CB 3F            srl a
  35+ 9282
  36+ 9282 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9283
  38+ 9283 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9284 28 04            jr z,4F
  40+ 9286
  41+ 9286 CB FF            set 7,a
  42+ 9288 18 02            jr 5F
  43+ 928A
  44+ 928A CB BF        4 res 7,a
  45+ 928C
  46+ 928C CB 21        5 sla c
  47+ 928E 10 E0            djnz 6B
  48+ 9290
  49+ 9290 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9291
  51+ 9291 77               ld (hl),a
  52+ 9292 23               inc hl
  53+ 9293 C1               pop bc
  54+ 9294 10 D4            djnz 3B
  55+ 9296
  56+ 9296 C9               ret
  57+ 9297
  58+ 9297
  59+ 9297
# file closed: RND_Derivando.asm
2176  9297              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9297              ;---------------------------------------------------------------------------------------------------------------
   2+ 9297              ;
   3+ 9297              ;   8/3/24
   4+ 9297              ;
   5+ 9297              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9297              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9297              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9297              ;	_ de la 1ª entidad del Nivel.
   9+ 9297              ;
  10+ 9297              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9297
  12+ 9297              ;	MODIFICA: HL,DE y A.
  13+ 9297              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9297
  15+ 9297              Inicializa_Nivel
  16+ 9297
  17+ 9297 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 929A CD B7 90     	call Extrae_address
  19+ 929D 7E           	ld a,(hl)
  20+ 929E 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92A1 23           	inc hl
  22+ 92A2 CD AF 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92A5 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92A8 CD B8 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92AB
  26+ 92AB CD C9 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92AE C9           	ret
  28+ 92AF
  29+ 92AF              ; ----------------------
  30+ 92AF
  31+ 92AF 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92B2 01 04 00     	ld bc,4
  33+ 92B5 ED B0        	ldir
  34+ 92B7 C9           	ret
  35+ 92B8
  36+ 92B8 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92B9 CD 53 94         call Calcula_salto_en_BC
  38+ 92BC 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92BF A7               and a
  40+ 92C0 ED 4A            adc hl,bc
  41+ 92C2 CD B7 90         call Extrae_address
  42+ 92C5 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92C8 C9               ret
  44+ 92C9
  45+ 92C9 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92CC CD 53 94     	call Calcula_salto_en_BC
  47+ 92CF 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92D2 A7               and a
  49+ 92D3 ED 4A            adc hl,bc
  50+ 92D5 CD B7 90         call Extrae_address
  51+ 92D8 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92DB C9           	ret
  53+ 92DC
  54+ 92DC              ;---------------------------------------------------------------------------------------------------------------
  55+ 92DC              ;
  56+ 92DC              ;   5/1/24
  57+ 92DC              ;
  58+ 92DC              ;	Destruye A,BC,HL,DE
  59+ 92DC
  60+ 92DC              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92DC              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92DC
  63+ 92DC              Inicia_Entidades
  64+ 92DC
  65+ 92DC              ; Preparamos los punteros de las cajas de entidades:
  66+ 92DC
  67+ 92DC CD 9A 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92DF              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92DF CD 9B 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92E2
  71+ 92E2 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92E5
  73+ 92E5 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92E8
  75+ 92E8 CD 01 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92EB
  77+ 92EB 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92EE
  79+ 92EE              ; En este punto:
  80+ 92EE              ;
  81+ 92EE              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92EE              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92EE
  84+ 92EE C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92EF
  86+ 92EF 7E           	ld a,(hl)
  87+ 92F0 CD 6D 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92F3
  89+ 92F3 CD 65 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92F6
  91+ 92F6              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92F6
  93+ 92F6 CD 23 94     	call Busca_mov_masticados_segun_tipo
  94+ 92F9
  95+ 92F9 A7           	and a
  96+ 92FA 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92FC
  98+ 92FC              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92FC
 100+ 92FC              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92FC              ;	_ de este tipo de entidad.
 102+ 92FC
 103+ 92FC CD 05 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 92FF CD 12 9F     	call Transfiere_datos_de_contadores
 105+ 9302
 106+ 9302 18 06        	jr 4F
 107+ 9304
 108+ 9304 CD AD 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9307
 110+ 9307              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9307              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9307              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9307              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9307              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9307
 116+ 9307 CD E1 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 930A              ;																; _ Mov_masticados ya generados.
 118+ 930A
 119+ 930A CD 01 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 930D
 121+ 930D DD E5        	push ix
 122+ 930F E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9310
 124+ 9310 D5           	push de
 125+ 9311 CD D6 94     	call Genera_coordenadas
 126+ 9314
 127+ 9314 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 128+ 9318 CD 11 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 931B D1           	pop de
 130+ 931C
 131+ 931C CD 02 95     	call Genera_datos_de_impresion
 132+ 931F              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 931F              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 931F              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 931F              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 931F
 137+ 931F CD A5 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9322
 139+ 9322              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9322
 141+ 9322 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 9326 CD 92 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9329
 144+ 9329 CD 82 93     	call Limpiamos_bandeja_DRAW
 145+ 932C CD 05 91     	call Incrementa_punteros_de_cajas
 146+ 932F
 147+ 932F              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 932F              ; _ entidad del Nivel.
 149+ 932F
 150+ 932F 3A 25 8C     	ld a,(Ctrl_4)
 151+ 9332 E6 F0        	and $f0
 152+ 9334 32 25 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9337
 154+ 9337              ; Siguiente entidad del Nivel.
 155+ 9337
 156+ 9337 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 933A 23           	inc hl 														; _ entidad del Nivel.
 158+ 933B
 159+ 933B C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 933C
 161+ 933C 10 A7        	djnz 2B
 162+ 933E
 163+ 933E C9           	ret
 164+ 933F
 165+ 933F              ; -------------------------------------------------------------------------------------------------------------------
 166+ 933F              ;
 167+ 933F              ;	27/5/24
 168+ 933F              ;
 169+ 933F              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 933F              ;
 171+ 933F
 172+ 933F              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 933F              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 933F
 175+ 933F 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9342 CD 65 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9345
 178+ 9345
 179+ 9345              Construye_movimientos_masticados_Amadeus
 180+ 9345
 181+ 9345 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9348 CD F4 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 934B              ;															; _ el (Contador_de_mov_masticados).
 184+ 934B CD BD 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 934E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 934E
 187+ 934E              ; Generamos movimientos masticados de Amadeus.
 188+ 934E
 189+ 934E 06 79        	ld b,121												; $0079, 121d.
 190+ 9350
 191+ 9350 C5           1 push bc
 192+ 9351 CD 24 97     	call Draw
 193+ 9354 CD D9 8F     	call Guarda_movimiento_masticado
 194+ 9357
 195+ 9357 CD 98 9A     	call Mov_right
 196+ 935A CD 98 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 935D
 198+ 935D C1           	pop bc
 199+ 935E 10 F0        	djnz 1B
 200+ 9360
 201+ 9360              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9360
 203+ 9360              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9360              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9360
 206+ 9360 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9363 01 08 00     	ld bc,8
 208+ 9366 A7           	and a
 209+ 9367 ED 42        	sbc hl,bc
 210+ 9369 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 936C
 212+ 936C C9           	ret
 213+ 936D
 214+ 936D              ; ---------------------------------------------------------------------
 215+ 936D              ;
 216+ 936D              ;	10/02/24
 217+ 936D              ;
 218+ 936D              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 936D              ;
 220+ 936D              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 936D
 222+ 936D              Definicion_segun_tipo
 223+ 936D
 224+ 936D CD 53 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9370 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9373 CD 5B 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9376 C9           	ret
 228+ 9377
 229+ 9377              ; ---------------------------------------------------------------------
 230+ 9377              ;
 231+ 9377              ;	6/7/24
 232+ 9377
 233+ 9377
 234+ 9377              Store_Restore_cajas
 235+ 9377
 236+ 9377 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 937B CD 92 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 937E CD 05 91     	call Incrementa_punteros_de_cajas
 239+ 9381 C9           	ret
 240+ 9382
 241+ 9382              ; ---------------------------------------------------------------------
 242+ 9382              ;
 243+ 9382              ;	23/6/24
 244+ 9382              ;
 245+ 9382              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9382              ;
 247+ 9382              ;	MODIFY: HL
 248+ 9382
 249+ 9382              Limpiamos_bandeja_DRAW
 250+ 9382
 251+ 9382 ED 73 00 8C  	ld (Stack),sp
 252+ 9386 31 D8 8B     	ld sp,Vel_left
 253+ 9389
 254+ 9389 AF           	xor a
 255+ 938A 67           	ld h,a
 256+ 938B 6F           	ld l,a
 257+ 938C
 258+ 938C E5           	push hl
 259+ 938D E5           	push hl
 260+ 938E E5           	push hl
 261+ 938F E5           	push hl
 262+ 9390 E5           	push hl
 263+ 9391 E5           	push hl
 264+ 9392 E5           	push hl
 265+ 9393 E5           	push hl
 266+ 9394 E5           	push hl
 267+ 9395 E5           	push hl
 268+ 9396 E5           	push hl
 269+ 9397 E5           	push hl
 270+ 9398 E5           	push hl
 271+ 9399 E5           	push hl
 272+ 939A E5           	push hl
 273+ 939B E5           	push hl
 274+ 939C E5           	push hl
 275+ 939D E5           	push hl
 276+ 939E
 277+ 939E 33           	inc sp
 278+ 939F
 279+ 939F E5           	push hl
 280+ 93A0 ED 7B 00 8C  	ld sp,(Stack)
 281+ 93A4
 282+ 93A4 C9           	ret
 283+ 93A5
 284+ 93A5              ; ---------------------------------------------------------------------
 285+ 93A5              ;
 286+ 93A5              ;	24/03/24
 287+ 93A5
 288+ 93A5 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93A8 2B           	dec hl
 290+ 93A9 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93AC C9           	ret
 292+ 93AD
 293+ 93AD              ; ---------------------------------------------------------------------
 294+ 93AD              ;
 295+ 93AD              ;	8/5/24
 296+ 93AD
 297+ 93AD              Reinicia_entidad_maliciosa
 298+ 93AD
 299+ 93AD              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93AD
 301+ 93AD CD 05 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93B0 CD 12 9F     	call Transfiere_datos_de_contadores
 303+ 93B3
 304+ 93B3              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93B3
 306+ 93B3 3A B3 8B     	ld a,(Tipo)
 307+ 93B6 CD 6D 93     	call Definicion_segun_tipo
 308+ 93B9
 309+ 93B9 E5           	push hl
 310+ 93BA DD E1        	pop ix
 311+ 93BC
 312+ 93BC DD 6E 0B     	ld l,(ix+11)
 313+ 93BF DD 66 0C     	ld h,(ix+12)
 314+ 93C2
 315+ 93C2 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93C5
 317+ 93C5 CD 01 90     	call Cargamos_registros_con_mov_masticado
 318+ 93C8
 319+ 93C8              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93C8              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93C8              ; Ejemplos.
 322+ 93C8
 323+ 93C8              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93C8              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93C8              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93C8              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93C8              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93C8
 329+ 93C8 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93CB CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93CD
 332+ 93CD 7E           	ld a,(hl)
 333+ 93CE CB 2F        	sra a
 334+ 93D0 CB 2F        	sra a
 335+ 93D2
 336+ 93D2 32 BE 8B     	ld (Velocidad),a
 337+ 93D5
 338+ 93D5 3E 40        	ld a,$40
 339+ 93D7 BE           	cp (hl)
 340+ 93D8 C0           	ret nz
 341+ 93D9
 342+ 93D9              ; Límitador.
 343+ 93D9
 344+ 93D9              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93D9
 346+ 93D9 CB 2E        	sra (hl)
 347+ 93DB 21 BE 8B     	ld hl,Velocidad
 348+ 93DE CB 2E        	sra (hl)
 349+ 93E0
 350+ 93E0 C9           	ret
 351+ 93E1
 352+ 93E1              ; ---------------------------------------------------------------------
 353+ 93E1              ;
 354+ 93E1              ;	22/01/24
 355+ 93E1
 356+ 93E1 21 25 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93E4 CB 46        	bit 0,(hl)
 358+ 93E6 20 0D        	jr nz,1F
 359+ 93E8 CB 4E        	bit 1,(hl)
 360+ 93EA 20 0C        	jr nz,2F
 361+ 93EC CB 56        	bit 2,(hl)
 362+ 93EE 20 0B        	jr nz,3F
 363+ 93F0 CB 5E        	bit 3,(hl)
 364+ 93F2 20 0A        	jr nz,4F
 365+ 93F4 C9           	ret
 366+ 93F5
 367+ 93F5 CB E6        1 set 4,(hl)
 368+ 93F7 C9           	ret
 369+ 93F8 CB EE        2 set 5,(hl)
 370+ 93FA C9           	ret
 371+ 93FB CB F6        3 set 6,(hl)
 372+ 93FD C9           	ret
 373+ 93FE CB FE        4 set 7,(hl)
 374+ 9400 C9           	ret
 375+ 9401
 376+ 9401              ; ---------------------------------------------------------------------
 377+ 9401              ;
 378+ 9401              ;	23/01/24
 379+ 9401              ;
 380+ 9401              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 9401              ;
 382+ 9401              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 9401              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 9401              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 9401              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 9401
 387+ 9401              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 9401
 389+ 9401 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 9402 3D           	dec a
 391+ 9403 20 06        	jr nz,1F
 392+ 9405
 393+ 9405              ; --- Tipo_1
 394+ 9405
 395+ 9405 21 25 8C     	ld hl,Ctrl_4
 396+ 9408 CB C6        	set 0,(hl)
 397+ 940A C9           	ret
 398+ 940B
 399+ 940B 3D           1 dec a
 400+ 940C 20 06        	jr nz,2F
 401+ 940E
 402+ 940E              ; --- Tipo_2
 403+ 940E
 404+ 940E 21 25 8C     	ld hl,Ctrl_4
 405+ 9411 CB CE        	set 1,(hl)
 406+ 9413 C9           	ret
 407+ 9414
 408+ 9414 3D           2 dec a
 409+ 9415 20 06        	jr nz,3F
 410+ 9417
 411+ 9417              ; --- Tipo_3
 412+ 9417
 413+ 9417 21 25 8C     	ld hl,Ctrl_4
 414+ 941A CB D6        	set 2,(hl)
 415+ 941C C9           	ret
 416+ 941D
 417+ 941D              ; --- Tipo_3
 418+ 941D
 419+ 941D 21 25 8C     3 ld hl,Ctrl_4
 420+ 9420 CB D6        	set 2,(hl)
 421+ 9422 C9           	ret
 422+ 9423
 423+ 9423              ; ---------------------------------------------------------------------
 424+ 9423              ;
 425+ 9423              ;	22/01/24
 426+ 9423
 427+ 9423 21 25 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9426 CB 46        	bit 0,(hl)
 429+ 9428 20 0E        	jr nz,1F
 430+ 942A
 431+ 942A CB 4E        	bit 1,(hl)
 432+ 942C 20 10        	jr nz,2F
 433+ 942E
 434+ 942E CB 56        	bit 2,(hl)
 435+ 9430 20 12        	jr nz,3F
 436+ 9432
 437+ 9432 CB 5E        	bit 3,(hl)
 438+ 9434 20 14        	jr nz,4F
 439+ 9436 18 19        	jr 6F
 440+ 9438
 441+ 9438              ; Entidad_de_Tipo_1.
 442+ 9438
 443+ 9438 CB 66        1 bit 4,(hl)
 444+ 943A 28 15        	jr z,6F
 445+ 943C 18 10        	jr 5F
 446+ 943E
 447+ 943E              ; Entidad_de_Tipo_2.
 448+ 943E
 449+ 943E CB 6E        2 bit 5,(hl)
 450+ 9440 28 0F        	jr z,6F
 451+ 9442 18 0A        	jr 5F
 452+ 9444
 453+ 9444              ; Entidad_de_Tipo_3.
 454+ 9444
 455+ 9444 CB 76        3 bit 6,(hl)
 456+ 9446 28 09        	jr z,6F
 457+ 9448 18 04        	jr 5F
 458+ 944A
 459+ 944A              ; Entidad_de_Tipo_4.
 460+ 944A
 461+ 944A CB 7E        4 bit 7,(hl)
 462+ 944C 28 03        	jr z,6F
 463+ 944E
 464+ 944E              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 944E
 466+ 944E AF           5 xor a
 467+ 944F 3C           	inc a
 468+ 9450 C9           	ret
 469+ 9451
 470+ 9451              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9451
 472+ 9451 AF           6 xor a
 473+ 9452 C9           	ret
 474+ 9453
 475+ 9453              ;	------------------------------------------------------------------------------------
 476+ 9453              ;
 477+ 9453              ;	12/01/24
 478+ 9453              ;
 479+ 9453              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9453              ;
 481+ 9453              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9453              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9453
 484+ 9453 CB 27        Calcula_salto_en_BC sla a
 485+ 9455 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9457 4F           	ld c,a
 487+ 9458 06 00        	ld b,0
 488+ 945A C9           	ret
 489+ 945B
 490+ 945B              ; ------------------------------------------------------------------
 491+ 945B              ;
 492+ 945B              ;	19/1/24
 493+ 945B              ;
 494+ 945B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 945B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 945B
 497+ 945B A7           Situa_en_datos_de_definicion and a
 498+ 945C ED 4A        	adc hl,bc
 499+ 945E CD B7 90     	call Extrae_address
 500+ 9461 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 9464 C9           	ret
 502+ 9465
 503+ 9465              ; ------------------------------------------------------------------
 504+ 9465
 505+ 9465              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9465              ; 	inc de
 507+ 9465              ; 	inc de
 508+ 9465              ; 	ex de,hl
 509+ 9465              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9465              ; 	ret
 511+ 9465
 512+ 9465              ; ----------------------------------------------------------------------------------------------------------
 513+ 9465              ;
 514+ 9465              ;	24/6/24
 515+ 9465              ;
 516+ 9465              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9465              ;	_ de entidad.
 518+ 9465              ;
 519+ 9465              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9465              ;
 521+ 9465              ;
 522+ 9465              ;	MODIFICA: HL,DE y BC
 523+ 9465
 524+ 9465
 525+ 9465              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9465
 527+ 9465 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9468 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9469 12           	ld (de),a
 530+ 946A 23           	inc hl
 531+ 946B              ;
 532+ 946B 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 946E 01 02 00     	ld bc,2
 534+ 9471 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9473              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9473 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 9476 7E           	ld a,(hl)
 538+ 9477 12           	ld (de),a
 539+ 9478 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9479
 541+ 9479 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 947C 01 04 00     	ld bc,4
 543+ 947F ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9481
 545+ 9481 11 D0 8B     	ld de,Posicion_inicio
 546+ 9484 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9487 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9489
 549+ 9489 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 948C 01 02 00     	ld bc,2
 551+ 948F ED B0        	ldir
 552+ 9491
 553+ 9491 C9           	ret
 554+ 9492
 555+ 9492              ; ----------------------------------------------------------------------------------------------------------
 556+ 9492              ;
 557+ 9492              ;	1/8/24
 558+ 9492              ;
 559+ 9492
 560+ 9492              Parametros_de_bandeja_DRAW_a_caja
 561+ 9492
 562+ 9492 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 9495 01 0C 00     	ld bc,12
 564+ 9498 ED B0        	ldir
 565+ 949A C9           	ret
 566+ 949B
 567+ 949B              ;---------------------------------------------------------------------------------------------------------------
 568+ 949B              ;
 569+ 949B              ;	5/1/24
 570+ 949B              ;
 571+ 949B              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 949B              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 949B              ;
 574+ 949B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 949B              ;
 576+ 949B              ;	(Numero_parcial_de_entidades)="7".
 577+ 949B              ;
 578+ 949B              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 949B              ;
 580+ 949B              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 949B              ;
 582+ 949B              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 949B              ;	MODIFICA: A y B.
 584+ 949B              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 949B
 586+ 949B              Inicializa_Numero_parcial_de_entidades
 587+ 949B
 588+ 949B              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 949B
 590+ 949B 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 949E A7           	and a
 592+ 949F
 593+ 949F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 949F              ;	jr z,$
 595+ 949F              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 949F
 597+ 949F 20 03        	jr nz,3F
 598+ 94A1
 599+ 94A1              ; ---------- ---------- ----------
 600+ 94A1
 601+ 94A1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94A1              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94A1
 604+ 94A1 CD 97 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94A4
 606+ 94A4              ; ---------- ---------- ----------
 607+ 94A4
 608+ 94A4 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94A7 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94A9 38 08        	jr c,1F
 611+ 94AB
 612+ 94AB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94AB              ; Actualizamos variables.
 614+ 94AB
 615+ 94AB 3E 07        	ld a,7
 616+ 94AD 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94B0 47           	ld b,a
 618+ 94B1 18 04        	jr 2F
 619+ 94B3
 620+ 94B3              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94B3              ; (Numero_de_entidades)="0".
 622+ 94B3
 623+ 94B3 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94B6 47           	ld b,a
 625+ 94B7 C9           2 ret
 626+ 94B8
# file closed: Rutinas_de_inicio_y_niveles.asm
2177  94B8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94B8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94B8              ;
   3+ 94B8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94B8              ;
   5+ 94B8              ; *****************************************************************************************************************************************************************************************
   6+ 94B8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94B8
   8+ 94B8 7C           calcula_tercio ld a,h
   9+ 94B9 E6 18        	and $18
  10+ 94BB CB 2F        	sra a
  11+ 94BD CB 2F        	sra a
  12+ 94BF CB 2F        	sra a
  13+ 94C1 C9           	ret
  14+ 94C2
# file closed: calcula_tercio.asm
2178  94C2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94C2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94C2              ;
   3+ 94C2              ;
   4+ 94C2              ;	CLS.
   5+ 94C2              ;
   6+ 94C2              ;	Limpia la pantalla y define sus atributos.
   7+ 94C2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94C2              ;
   9+ 94C2              ;	COLORES: 0 ..... NEGRO
  10+ 94C2              ;    		 1 ..... AZUL
  11+ 94C2              ; 			 2 ..... ROJO
  12+ 94C2              ;			 3 ..... MAGENTA
  13+ 94C2              ; 			 4 ..... VERDE
  14+ 94C2              ; 			 5 ..... CIAN
  15+ 94C2              ;			 6 ..... AMARILLO
  16+ 94C2              ; 			 7 ..... BLANCO
  17+ 94C2              ;
  18+ 94C2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94C2              ;
  20+ 94C2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94C2
  22+ 94C2
  23+ 94C2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94C5 11 01 40     	LD DE,$4001
  25+ 94C8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94CB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94CD ED B0        	LDIR
  28+ 94CF 01 FF 02     	LD BC,767
  29+ 94D2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94D3 ED B0        	LDIR
  31+ 94D5 C9           	ret
  32+ 94D6
# file closed: Cls.asm
2179  94D6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94D6              ; ------------------------------------------------------------------------
   2+ 94D6              ;
   3+ 94D6              ;	30/1/24
   4+ 94D6              ;
   5+ 94D6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94D6              ;	Fila superior "0", Columna izquierda "0".
   7+ 94D6              ;
   8+ 94D6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94D6              ;
  10+ 94D6              ;	Modifica: A,BC y DE.
  11+ 94D6
  12+ 94D6 7D           Genera_coordenadas ld a,l
  13+ 94D7 E6 1F        	and $1f
  14+ 94D9 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94DC
  16+ 94DC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94DD FE 40        	cp $40
  18+ 94DF 38 1C        	jr c,4F
  19+ 94E1
  20+ 94E1 CD B8 94     	call calcula_tercio
  21+ 94E4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94E5
  23+ 94E5 1E 00        	ld e,0
  24+ 94E7 7D           	ld a,l
  25+ 94E8 E6 E0        	and $e0
  26+ 94EA 28 01        	jr z,1F
  27+ 94EC 04           	inc b
  28+ 94ED
  29+ 94ED 04           1 inc b
  30+ 94EE 05           	dec b
  31+ 94EF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94F1              ;														; _ , salimos.
  33+ 94F1 1C           3 inc e
  34+ 94F2 D6 20        	sub 32
  35+ 94F4 20 FB        	jr nz,3B
  36+ 94F6 10 F5        	djnz 1B
  37+ 94F8
  38+ 94F8 7B           2 ld a,e
  39+ 94F9 32 B5 8B     	ld (Coordenada_y),a
  40+ 94FC C9           	ret
  41+ 94FD
  42+ 94FD AF           4 xor a
  43+ 94FE 32 B5 8B     	ld (Coordenada_y),a
  44+ 9501 C9           	ret
  45+ 9502
# file closed: Genera_coordenadas.asm
2180  9502              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9502              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9502              ;
   3+ 9502              ;	20/09/24
   4+ 9502              ;
   5+ 9502              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9502              ;   DE contiene Puntero_objeto.
   7+ 9502              ;   IX contiene el Puntero de impresión.
   8+ 9502
   9+ 9502              Genera_datos_de_impresion
  10+ 9502
  11+ 9502 ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9506
  13+ 9506 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9509 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 950B
  16+ 950B 2A 1E 8C         ld hl,(Scanlines_album_SP)
  17+ 950E
  18+ 950E 3E 05            ld a,5
  19+ 9510 85               add l
  20+ 9511 6F               ld l,a
  21+ 9512
  22+ 9512 F9               ld sp,hl
  23+ 9513 22 1E 8C         ld (Scanlines_album_SP),hl
  24+ 9516
  25+ 9516 21 00 00         ld hl,0
  26+ 9519
  27+ 9519 DD E5            push ix
  28+ 951B 3B               dec sp
  29+ 951C ED 7A            adc hl,sp
  30+ 951E D5               push de
  31+ 951F
  32+ 951F              ; Recuperamos SP.
  33+ 951F
  34+ 951F ED 7B 00 8C      ld sp,(Stack)
  35+ 9523
  36+ 9523 E5               push hl
  37+ 9524 F1               pop af
  38+ 9525 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9526
  40+ 9526              ; Tenemos el encabezado listo.
  41+ 9526              ; Preparamos registros para generar los scanlines.
  42+ 9526
  43+ 9526 DD E5            push ix
  44+ 9528 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9529
  46+ 9529 ED 5B 1E 8C      ld de,(Scanlines_album_SP)
  47+ 952D
  48+ 952D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 952D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 952D
  51+ 952D 7C               ld a,h
  52+ 952E FE 50            cp $50
  53+ 9530 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9532
  55+ 9532 20 05            jr nz,2F
  56+ 9534
  57+ 9534 7D               ld a,l
  58+ 9535 FE E0            cp $e0
  59+ 9537 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9539
  61+ 9539 7D           2 ld a,l
  62+ 953A FE C0            cp $c0
  63+ 953C D2 D8 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 953F
  65+ 953F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 953F
  67+ 953F CD D6 99         call NextScan
  68+ 9542 EB               ex de,hl
  69+ 9543
  70+ 9543 73               ld (hl),e
  71+ 9544 23               inc hl
  72+ 9545 72               ld (hl),d
  73+ 9546 23               inc hl
  74+ 9547
  75+ 9547 EB               ex de,hl
  76+ 9548
  77+ 9548 CD D6 99         call NextScan
  78+ 954B EB               ex de,hl
  79+ 954C
  80+ 954C 73               ld (hl),e
  81+ 954D 23               inc hl
  82+ 954E 72               ld (hl),d
  83+ 954F 23               inc hl
  84+ 9550
  85+ 9550 EB               ex de,hl
  86+ 9551
  87+ 9551 CD D6 99         call NextScan
  88+ 9554 EB               ex de,hl
  89+ 9555
  90+ 9555 73               ld (hl),e
  91+ 9556 23               inc hl
  92+ 9557 72               ld (hl),d
  93+ 9558 23               inc hl
  94+ 9559
  95+ 9559 EB               ex de,hl
  96+ 955A
  97+ 955A CD D6 99         call NextScan
  98+ 955D EB               ex de,hl
  99+ 955E
 100+ 955E 73               ld (hl),e
 101+ 955F 23               inc hl
 102+ 9560 72               ld (hl),d
 103+ 9561 23               inc hl
 104+ 9562
 105+ 9562 EB               ex de,hl
 106+ 9563
 107+ 9563 CD D6 99         call NextScan
 108+ 9566 EB               ex de,hl
 109+ 9567
 110+ 9567 73               ld (hl),e
 111+ 9568 23               inc hl
 112+ 9569 72               ld (hl),d
 113+ 956A 23               inc hl
 114+ 956B
 115+ 956B EB               ex de,hl
 116+ 956C
 117+ 956C CD D6 99         call NextScan
 118+ 956F EB               ex de,hl
 119+ 9570
 120+ 9570 73               ld (hl),e
 121+ 9571 23               inc hl
 122+ 9572 72               ld (hl),d
 123+ 9573 23               inc hl
 124+ 9574
 125+ 9574 EB               ex de,hl
 126+ 9575
 127+ 9575 CD D6 99         call NextScan
 128+ 9578 EB               ex de,hl
 129+ 9579
 130+ 9579 73               ld (hl),e
 131+ 957A 23               inc hl
 132+ 957B 72               ld (hl),d
 133+ 957C 23               inc hl
 134+ 957D
 135+ 957D EB               ex de,hl
 136+ 957E
 137+ 957E CD D6 99         call NextScan
 138+ 9581 EB               ex de,hl
 139+ 9582
 140+ 9582 73               ld (hl),e
 141+ 9583 23               inc hl
 142+ 9584 72               ld (hl),d
 143+ 9585 23               inc hl
 144+ 9586
 145+ 9586 EB               ex de,hl
 146+ 9587
 147+ 9587 CD D6 99         call NextScan
 148+ 958A EB               ex de,hl
 149+ 958B
 150+ 958B 73               ld (hl),e
 151+ 958C 23               inc hl
 152+ 958D 72               ld (hl),d
 153+ 958E 23               inc hl
 154+ 958F
 155+ 958F EB               ex de,hl
 156+ 9590
 157+ 9590 CD D6 99         call NextScan
 158+ 9593 EB               ex de,hl
 159+ 9594
 160+ 9594 73               ld (hl),e
 161+ 9595 23               inc hl
 162+ 9596 72               ld (hl),d
 163+ 9597 23               inc hl
 164+ 9598
 165+ 9598 EB               ex de,hl
 166+ 9599
 167+ 9599 CD D6 99         call NextScan
 168+ 959C EB               ex de,hl
 169+ 959D
 170+ 959D 73               ld (hl),e
 171+ 959E 23               inc hl
 172+ 959F 72               ld (hl),d
 173+ 95A0 23               inc hl
 174+ 95A1
 175+ 95A1 EB               ex de,hl
 176+ 95A2
 177+ 95A2 CD D6 99         call NextScan
 178+ 95A5 EB               ex de,hl
 179+ 95A6
 180+ 95A6 73               ld (hl),e
 181+ 95A7 23               inc hl
 182+ 95A8 72               ld (hl),d
 183+ 95A9 23               inc hl
 184+ 95AA
 185+ 95AA EB               ex de,hl
 186+ 95AB
 187+ 95AB CD D6 99         call NextScan
 188+ 95AE EB               ex de,hl
 189+ 95AF
 190+ 95AF 73               ld (hl),e
 191+ 95B0 23               inc hl
 192+ 95B1 72               ld (hl),d
 193+ 95B2 23               inc hl
 194+ 95B3
 195+ 95B3 EB               ex de,hl
 196+ 95B4
 197+ 95B4 CD D6 99         call NextScan
 198+ 95B7 EB               ex de,hl
 199+ 95B8
 200+ 95B8 73               ld (hl),e
 201+ 95B9 23               inc hl
 202+ 95BA 72               ld (hl),d
 203+ 95BB 23               inc hl
 204+ 95BC
 205+ 95BC EB               ex de,hl
 206+ 95BD
 207+ 95BD CD D6 99         call NextScan
 208+ 95C0 EB               ex de,hl
 209+ 95C1
 210+ 95C1              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95C1              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95C1              ;   _ generar sus scanlines.
 213+ 95C1
 214+ 95C1              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95C1
 216+ 95C1 73               ld (hl),e
 217+ 95C2 23               inc hl
 218+ 95C3 72               ld (hl),d
 219+ 95C4 23               inc hl
 220+ 95C5
 221+ 95C5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95C5
 223+ 95C5 22 1E 8C         ld (Scanlines_album_SP),hl
 224+ 95C8
 225+ 95C8 EB               ex de,hl
 226+ 95C9
 227+ 95C9              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95C9
 229+ 95C9 CD D6 99         call NextScan
 230+ 95CC CD D6 99         call NextScan
 231+ 95CF
 232+ 95CF 22 29 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D2
 234+ 95D2              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D2
 236+ 95D2 08               ex af,af
 237+ 95D3
 238+ 95D3 F5               push af
 239+ 95D4 E1               pop hl
 240+ 95D5
 241+ 95D5 36 10            ld (hl),16
 242+ 95D7
 243+ 95D7 C9               ret
 244+ 95D8
 245+ 95D8              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95D8
 247+ 95D8              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95D8
 249+ 95D8 3E 57            ld a,$57
 250+ 95DA 94               sub h
 251+ 95DB 47               ld b,a
 252+ 95DC
 253+ 95DC 3E DF            ld a,$df
 254+ 95DE BD               cp l
 255+ 95DF 38 04            jr c,1F
 256+ 95E1
 257+ 95E1 3E 08            ld a,8
 258+ 95E3 80               add b
 259+ 95E4 47               ld b,a
 260+ 95E5
 261+ 95E5              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E5              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E5
 264+ 95E5 48           1 ld c,b
 265+ 95E6 0C               inc c
 266+ 95E7
 267+ 95E7 04               inc b
 268+ 95E8 05               dec b
 269+ 95E9 20 02            jr nz,3F
 270+ 95EB
 271+ 95EB 18 0B            jr 6F
 272+ 95ED
 273+ 95ED CD D6 99     3 call NextScan
 274+ 95F0 EB               ex de,hl
 275+ 95F1
 276+ 95F1 73               ld (hl),e
 277+ 95F2 23               inc hl
 278+ 95F3 72               ld (hl),d
 279+ 95F4 23               inc hl
 280+ 95F5
 281+ 95F5 EB               ex de,hl
 282+ 95F6 10 F5            djnz 3B
 283+ 95F8
 284+ 95F8 ED 53 1E 8C  6 ld (Scanlines_album_SP),de
 285+ 95FC
 286+ 95FC 08           5 ex af,af
 287+ 95FD F5               push af
 288+ 95FE E1               pop hl
 289+ 95FF
 290+ 95FF 71               ld (hl),c
 291+ 9600
 292+ 9600 C9               ret
 293+ 9601
# file closed: Genera_datos_de_impresion.asm
2181  9601              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9601              ; -----------------------------------------------------------------------------
   2+ 9601              ;
   3+ 9601              ;   11/03/24
   4+ 9601              ;
   5+ 9601
   6+ 9601              Pinta_Sprites
   7+ 9601
   8+ 9601              ;    ld hl,(Scanlines_album_SP)
   9+ 9601              ;    call Extrae_address
  10+ 9601
  11+ 9601              ;    inc h
  12+ 9601              ;    dec h
  13+ 9601              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9601
  15+ 9601 ED 73 00 8C      ld (Stack),sp
  16+ 9605
  17+ 9605 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9606              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9606 2C               inc l
  20+ 9607 2C               inc l
  21+ 9608
  22+ 9608 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9609
  24+ 9609 2C               inc l
  25+ 960A F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960B
  27+ 960B              ;   Seleccionamos rutina de impresión:
  28+ 960B
  29+ 960B 3E 10            ld a,16
  30+ 960D B8               cp b
  31+ 960E C2 0A 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9611
  33+ 9611              ;   Rutinas:
  34+ 9611
  35+ 9611              Pinta_rapido    ;   1520 t/states.
  36+ 9611
  37+ 9611 E1               pop hl
  38+ 9612
  39+ 9612 1A               ld a,(de)
  40+ 9613 AE               xor (hl)
  41+ 9614 77               ld (hl),a
  42+ 9615 2C               inc l
  43+ 9616 1C               inc e
  44+ 9617 1A               ld a,(de)
  45+ 9618 AE               xor (hl)
  46+ 9619 77               ld (hl),a
  47+ 961A 2C               inc l
  48+ 961B 1C               inc e
  49+ 961C 1A               ld a,(de)
  50+ 961D AE               xor (hl)
  51+ 961E 77               ld (hl),a
  52+ 961F 13               inc de
  53+ 9620
  54+ 9620 E1               pop hl
  55+ 9621
  56+ 9621 1A               ld a,(de)
  57+ 9622 AE               xor (hl)
  58+ 9623 77               ld (hl),a
  59+ 9624 2C               inc l
  60+ 9625 1C               inc e
  61+ 9626 1A               ld a,(de)
  62+ 9627 AE               xor (hl)
  63+ 9628 77               ld (hl),a
  64+ 9629 2C               inc l
  65+ 962A 1C               inc e
  66+ 962B 1A               ld a,(de)
  67+ 962C AE               xor (hl)
  68+ 962D 77               ld (hl),a
  69+ 962E 13               inc de
  70+ 962F
  71+ 962F E1               pop hl
  72+ 9630
  73+ 9630 1A               ld a,(de)
  74+ 9631 AE               xor (hl)
  75+ 9632 77               ld (hl),a
  76+ 9633 2C               inc l
  77+ 9634 1C               inc e
  78+ 9635 1A               ld a,(de)
  79+ 9636 AE               xor (hl)
  80+ 9637 77               ld (hl),a
  81+ 9638 2C               inc l
  82+ 9639 1C               inc e
  83+ 963A 1A               ld a,(de)
  84+ 963B AE               xor (hl)
  85+ 963C 77               ld (hl),a
  86+ 963D 13               inc de
  87+ 963E
  88+ 963E E1               pop hl
  89+ 963F
  90+ 963F 1A               ld a,(de)
  91+ 9640 AE               xor (hl)
  92+ 9641 77               ld (hl),a
  93+ 9642 2C               inc l
  94+ 9643 1C               inc e
  95+ 9644 1A               ld a,(de)
  96+ 9645 AE               xor (hl)
  97+ 9646 77               ld (hl),a
  98+ 9647 2C               inc l
  99+ 9648 1C               inc e
 100+ 9649 1A               ld a,(de)
 101+ 964A AE               xor (hl)
 102+ 964B 77               ld (hl),a
 103+ 964C 13               inc de
 104+ 964D
 105+ 964D E1               pop hl
 106+ 964E
 107+ 964E 1A               ld a,(de)
 108+ 964F AE               xor (hl)
 109+ 9650 77               ld (hl),a
 110+ 9651 2C               inc l
 111+ 9652 1C               inc e
 112+ 9653 1A               ld a,(de)
 113+ 9654 AE               xor (hl)
 114+ 9655 77               ld (hl),a
 115+ 9656 2C               inc l
 116+ 9657 1C               inc e
 117+ 9658 1A               ld a,(de)
 118+ 9659 AE               xor (hl)
 119+ 965A 77               ld (hl),a
 120+ 965B 13               inc de
 121+ 965C
 122+ 965C E1               pop hl
 123+ 965D
 124+ 965D 1A               ld a,(de)
 125+ 965E AE               xor (hl)
 126+ 965F 77               ld (hl),a
 127+ 9660 2C               inc l
 128+ 9661 1C               inc e
 129+ 9662 1A               ld a,(de)
 130+ 9663 AE               xor (hl)
 131+ 9664 77               ld (hl),a
 132+ 9665 2C               inc l
 133+ 9666 1C               inc e
 134+ 9667 1A               ld a,(de)
 135+ 9668 AE               xor (hl)
 136+ 9669 77               ld (hl),a
 137+ 966A 13               inc de
 138+ 966B
 139+ 966B E1               pop hl
 140+ 966C
 141+ 966C 1A               ld a,(de)
 142+ 966D AE               xor (hl)
 143+ 966E 77               ld (hl),a
 144+ 966F 2C               inc l
 145+ 9670 1C               inc e
 146+ 9671 1A               ld a,(de)
 147+ 9672 AE               xor (hl)
 148+ 9673 77               ld (hl),a
 149+ 9674 2C               inc l
 150+ 9675 1C               inc e
 151+ 9676 1A               ld a,(de)
 152+ 9677 AE               xor (hl)
 153+ 9678 77               ld (hl),a
 154+ 9679 13               inc de
 155+ 967A
 156+ 967A E1               pop hl
 157+ 967B
 158+ 967B 1A               ld a,(de)
 159+ 967C AE               xor (hl)
 160+ 967D 77               ld (hl),a
 161+ 967E 2C               inc l
 162+ 967F 1C               inc e
 163+ 9680 1A               ld a,(de)
 164+ 9681 AE               xor (hl)
 165+ 9682 77               ld (hl),a
 166+ 9683 2C               inc l
 167+ 9684 1C               inc e
 168+ 9685 1A               ld a,(de)
 169+ 9686 AE               xor (hl)
 170+ 9687 77               ld (hl),a
 171+ 9688 13               inc de
 172+ 9689
 173+ 9689 E1               pop hl
 174+ 968A
 175+ 968A 1A               ld a,(de)
 176+ 968B AE               xor (hl)
 177+ 968C 77               ld (hl),a
 178+ 968D 2C               inc l
 179+ 968E 1C               inc e
 180+ 968F 1A               ld a,(de)
 181+ 9690 AE               xor (hl)
 182+ 9691 77               ld (hl),a
 183+ 9692 2C               inc l
 184+ 9693 1C               inc e
 185+ 9694 1A               ld a,(de)
 186+ 9695 AE               xor (hl)
 187+ 9696 77               ld (hl),a
 188+ 9697 13               inc de
 189+ 9698
 190+ 9698 E1               pop hl
 191+ 9699
 192+ 9699 1A               ld a,(de)
 193+ 969A AE               xor (hl)
 194+ 969B 77               ld (hl),a
 195+ 969C 2C               inc l
 196+ 969D 1C               inc e
 197+ 969E 1A               ld a,(de)
 198+ 969F AE               xor (hl)
 199+ 96A0 77               ld (hl),a
 200+ 96A1 2C               inc l
 201+ 96A2 1C               inc e
 202+ 96A3 1A               ld a,(de)
 203+ 96A4 AE               xor (hl)
 204+ 96A5 77               ld (hl),a
 205+ 96A6 13               inc de
 206+ 96A7
 207+ 96A7 E1               pop hl
 208+ 96A8
 209+ 96A8 1A               ld a,(de)
 210+ 96A9 AE               xor (hl)
 211+ 96AA 77               ld (hl),a
 212+ 96AB 2C               inc l
 213+ 96AC 1C               inc e
 214+ 96AD 1A               ld a,(de)
 215+ 96AE AE               xor (hl)
 216+ 96AF 77               ld (hl),a
 217+ 96B0 2C               inc l
 218+ 96B1 1C               inc e
 219+ 96B2 1A               ld a,(de)
 220+ 96B3 AE               xor (hl)
 221+ 96B4 77               ld (hl),a
 222+ 96B5 13               inc de
 223+ 96B6
 224+ 96B6 E1               pop hl
 225+ 96B7
 226+ 96B7 1A               ld a,(de)
 227+ 96B8 AE               xor (hl)
 228+ 96B9 77               ld (hl),a
 229+ 96BA 2C               inc l
 230+ 96BB 1C               inc e
 231+ 96BC 1A               ld a,(de)
 232+ 96BD AE               xor (hl)
 233+ 96BE 77               ld (hl),a
 234+ 96BF 2C               inc l
 235+ 96C0 1C               inc e
 236+ 96C1 1A               ld a,(de)
 237+ 96C2 AE               xor (hl)
 238+ 96C3 77               ld (hl),a
 239+ 96C4 13               inc de
 240+ 96C5
 241+ 96C5 E1               pop hl
 242+ 96C6
 243+ 96C6 1A               ld a,(de)
 244+ 96C7 AE               xor (hl)
 245+ 96C8 77               ld (hl),a
 246+ 96C9 2C               inc l
 247+ 96CA 1C               inc e
 248+ 96CB 1A               ld a,(de)
 249+ 96CC AE               xor (hl)
 250+ 96CD 77               ld (hl),a
 251+ 96CE 2C               inc l
 252+ 96CF 1C               inc e
 253+ 96D0 1A               ld a,(de)
 254+ 96D1 AE               xor (hl)
 255+ 96D2 77               ld (hl),a
 256+ 96D3 13               inc de
 257+ 96D4
 258+ 96D4 E1               pop hl
 259+ 96D5
 260+ 96D5 1A               ld a,(de)
 261+ 96D6 AE               xor (hl)
 262+ 96D7 77               ld (hl),a
 263+ 96D8 2C               inc l
 264+ 96D9 1C               inc e
 265+ 96DA 1A               ld a,(de)
 266+ 96DB AE               xor (hl)
 267+ 96DC 77               ld (hl),a
 268+ 96DD 2C               inc l
 269+ 96DE 1C               inc e
 270+ 96DF 1A               ld a,(de)
 271+ 96E0 AE               xor (hl)
 272+ 96E1 77               ld (hl),a
 273+ 96E2 13               inc de
 274+ 96E3
 275+ 96E3 E1               pop hl
 276+ 96E4
 277+ 96E4 1A               ld a,(de)
 278+ 96E5 AE               xor (hl)
 279+ 96E6 77               ld (hl),a
 280+ 96E7 2C               inc l
 281+ 96E8 1C               inc e
 282+ 96E9 1A               ld a,(de)
 283+ 96EA AE               xor (hl)
 284+ 96EB 77               ld (hl),a
 285+ 96EC 2C               inc l
 286+ 96ED 1C               inc e
 287+ 96EE 1A               ld a,(de)
 288+ 96EF AE               xor (hl)
 289+ 96F0 77               ld (hl),a
 290+ 96F1 13               inc de
 291+ 96F2
 292+ 96F2 E1               pop hl
 293+ 96F3
 294+ 96F3 1A               ld a,(de)
 295+ 96F4 AE               xor (hl)
 296+ 96F5 77               ld (hl),a
 297+ 96F6 2C               inc l
 298+ 96F7 1C               inc e
 299+ 96F8 1A               ld a,(de)
 300+ 96F9 AE               xor (hl)
 301+ 96FA 77               ld (hl),a
 302+ 96FB 2C               inc l
 303+ 96FC 1C               inc e
 304+ 96FD 1A               ld a,(de)
 305+ 96FE AE               xor (hl)
 306+ 96FF 77               ld (hl),a
 307+ 9700 13               inc de
 308+ 9701
 309+ 9701 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 310+ 9705 ED 7B 00 8C      ld sp,(Stack)
 311+ 9709 C9               ret
 312+ 970A
 313+ 970A              Pinta_lento
 314+ 970A
 315+ 970A E1           1 pop hl
 316+ 970B
 317+ 970B 1A               ld a,(de)
 318+ 970C AE               xor (hl)
 319+ 970D 77               ld (hl),a
 320+ 970E 2C               inc l
 321+ 970F 1C               inc e
 322+ 9710 1A               ld a,(de)
 323+ 9711 AE               xor (hl)
 324+ 9712 77               ld (hl),a
 325+ 9713 2C               inc l
 326+ 9714 1C               inc e
 327+ 9715 1A               ld a,(de)
 328+ 9716 AE               xor (hl)
 329+ 9717 77               ld (hl),a
 330+ 9718 13               inc de
 331+ 9719
 332+ 9719 10 EF            djnz 1B
 333+ 971B
 334+ 971B ED 73 1E 8C      ld (Scanlines_album_SP),sp
 335+ 971F ED 7B 00 8C      ld sp,(Stack)
 336+ 9723 C9               ret
# file closed: Pinta_Sprites.asm
2182  9724              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9724              ; ******************************************************************************************************************************************************************************************
   2+ 9724              ;
   3+ 9724              ; 26/06/23
   4+ 9724              ;
   5+ 9724              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9724
   7+ 9724              Draw
   8+ 9724
   9+ 9724 CD CA 99     	call Prepara_draw
  10+ 9727 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9728 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9729 28 05        	jr z,2F
  13+ 972B
  14+ 972B 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 972E 18 0C        	jr 1F
  16+ 9730
  17+ 9730 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9733 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9736 CD C2 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9739              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9739
  22+ 9739 CD 69 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 973C
  24+ 973C 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 973F CB 6F        	bit 5,a
  26+ 9741 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9743
  28+ 9743 CD 58 97     	call Comprueba_limite_horizontal
  29+ 9746 CD E8 97     	call Comprueba_limite_vertical
  30+ 9749
  31+ 9749              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9749              ; -----------------------
  33+ 9749              ; -----------------------
  34+ 9749              ; -----------------------
  35+ 9749
  36+ 9749 CD 3E 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 974C CD 75 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 974F
  39+ 974F 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9752 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9754 32 C0 8B     	ld (Ctrl_0),a
  42+ 9757
  43+ 9757 C9           	ret
  44+ 9758
  45+ 9758              ; *******************************************************************************************************************************************************************************************
  46+ 9758              ;	21/01/23
  47+ 9758              ;
  48+ 9758              ; 	Comprueba_limite_horizontal.
  49+ 9758              ;
  50+ 9758              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9758              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9758              ;
  53+ 9758              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9758              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9758              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9758              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9758
  58+ 9758
  59+ 9758
  60+ 9758 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 975D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 975F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9761 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9764 18 09            jr 6F
  66+ 9766 CB 5F        1 bit 3,a
  67+ 9768 28 0A            jr z,2F
  68+ 976A E6 F7            and $f7
  69+ 976C 32 C0 8B         ld (Ctrl_0),a
  70+ 976F CD C2 98     6 call Inicializacion
  71+ 9772 18 5B            jr 5F
  72+ 9774 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9775
  74+ 9775              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9775              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9775
  77+ 9775 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9776 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9779 CD B8 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 977C 67           	ld h,a
  81+ 977D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 977E CD B8 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9781 67           	ld h,a
  84+ 9782 A7           	and a
  85+ 9783 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9785 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9786 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9789 FE 02        	cp 2
  89+ 978B 38 1E        	jr c,3F
  90+ 978D 28 1C        	jr z,3F
  91+ 978F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9790 28 23            jr z,7F
  93+ 9792 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9794 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9796 E1           	pop hl
  96+ 9797
  97+ 9797              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9797              ; _para indicar con E="2" en caso necesario.
  99+ 9797
 100+ 9797 E5               push hl
 101+ 9798 C5               push bc
 102+ 9799 CD B8 94     	call calcula_tercio
 103+ 979C FE 01        	cp 1
 104+ 979E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A0 CD D0 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A3 28 26            jr z,9F
 107+ 97A5 38 24            jr c,9F
 108+ 97A7 1E 00        11 ld e,0
 109+ 97A9 18 22            jr 8F
 110+ 97AB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97AC 28 07        	jr z, 7F
 112+ 97AE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B0 1E 00         	ld e,0
 114+ 97B2 E1           	pop hl
 115+ 97B3 18 04        	jr 4F
 116+ 97B5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97B7 18 15            jr 10F
 118+ 97B9
 119+ 97B9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97B9              ; _para indicar con E="2" en caso necesario.
 121+ 97B9
 122+ 97B9 E5           4 push hl
 123+ 97BA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BB CD B8 94     	call calcula_tercio
 125+ 97BE FE 01        	cp 1
 126+ 97C0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C2 CD D0 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C5 28 04            jr z,9F
 129+ 97C7 30 02            jr nc,9F
 130+ 97C9 18 02        	jr 8F
 131+ 97CB 1E 02        9 ld e,2
 132+ 97CD C1           8 pop bc
 133+ 97CE E1           10 pop hl
 134+ 97CF C9           5 ret
 135+ 97D0
 136+ 97D0              ; --------------------
 137+ 97D0              ;
 138+ 97D0              ; 25/08/22
 139+ 97D0
 140+ 97D0 CD B8 94     Comprueba_centro call calcula_tercio
 141+ 97D3 67               ld h,a
 142+ 97D4 08           	ex af,af
 143+ 97D5 FE 02        	cp 2
 144+ 97D7 38 07        	jr c,1F
 145+ 97D9 28 05        	jr z,1F
 146+ 97DB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97DE 18 03        	jr 2F
 148+ 97E0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E3 08           2 ex af,af
 150+ 97E4 A7               and a
 151+ 97E5 ED 42            sbc hl,bc
 152+ 97E7 C9               ret
 153+ 97E8
 154+ 97E8              ; *********************************************************************************************************************************************************************************************
 155+ 97E8              ;
 156+ 97E8              ;   16/8/22
 157+ 97E8              ;
 158+ 97E8              ;	Comprueba_limite_vertical
 159+ 97E8              ;
 160+ 97E8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97E8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97E8              ;
 163+ 97E8
 164+ 97E8 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97EB 7D           	ld a,l
 166+ 97EC E6 1F        	and $1F
 167+ 97EE 57           	ld d,a
 168+ 97EF 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97F2 BA           	cp d 											; Límite - Posición.
 170+ 97F3 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F4 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97F7 CB 47        	bit 0,a
 173+ 97F9 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FB
 175+ 97FB              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FB
 177+ 97FB 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97FC 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97FE
 180+ 97FE              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97FE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97FE
 183+ 97FE 3A B4 8B         ld a,(Coordenada_X)
 184+ 9801 16 0F            ld d,Centro_izquierda
 185+ 9803 A7               and a
 186+ 9804 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9805 28 1E            jr z,3F
 188+ 9807 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9809              ;                                                    ; _salimos sin modificar nada.
 190+ 9809 18 0E            jr 2F
 191+ 980B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 980C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 980E
 194+ 980E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 980E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 980E
 197+ 980E 3A B4 8B         ld a,(Coordenada_X)
 198+ 9811 16 10            ld d,Centro_derecha
 199+ 9813 A7               and a
 200+ 9814 92               sub d
 201+ 9815 28 0E            jr z,3F
 202+ 9817 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9819              ;                                                    ; _salimos sin modificar nada.
 204+ 9819 CB 43        2 bit 0,e
 205+ 981B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 981D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 981E CD B2 98         call Modificaccionne
 208+ 9821 C1           	pop bc
 209+ 9822 CD C2 98         call Inicializacion
 210+ 9825 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9826
 212+ 9826              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9826
 214+ 9826 C5           4 push bc
 215+ 9827 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982A 0A           	ld a,(bc)
 217+ 982B 3D           	dec a
 218+ 982C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 982D 7D           	ld a,l
 220+ 982E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 982F CB 47        	bit 0,a
 222+ 9831 28 03        	jr z,5F
 223+ 9833 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9834 18 2E        	jr 7F
 225+ 9836
 226+ 9836              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9836
 228+ 9836 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9837 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9838 3A C0 8B     	ld a,(Ctrl_0)
 231+ 983B CB 4F        	bit 1,a
 232+ 983D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 983F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9840
 235+ 9840              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9840
 237+ 9840 1C               inc e
 238+ 9841 1D               dec e
 239+ 9842 20 07            jr nz,12F
 240+ 9844 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9845 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9846 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9849 18 44        13 jr 9F
 244+ 984B CB 43        12 bit 0,e
 245+ 984D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 984F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 984F C1           	pop bc
 248+ 9850 18 D3        	jr 3B
 249+ 9852 80           14 add b
 250+ 9853 6F               ld l,a
 251+ 9854 22 C3 8B     	ld (Posicion_actual),hl
 252+ 9857 CD B2 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 985C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 985E 32 C0 8B         ld (Ctrl_0),a
 256+ 9861 F1           	pop af
 257+ 9862 18 2B        	jr 9F
 258+ 9864
 259+ 9864              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9864
 261+ 9864 F5           7 push af
 262+ 9865 3A C0 8B     	ld a,(Ctrl_0)
 263+ 9868 CB 47        	bit 0,a
 264+ 986A 20 1D        	jr nz,8F
 265+ 986C F1           	pop af
 266+ 986D
 267+ 986D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 986D
 269+ 986D 1C           	inc e
 270+ 986E 1D               dec e
 271+ 986F 20 07            jr nz,10F
 272+ 9871 90           	sub b
 273+ 9872 6F               ld l,a
 274+ 9873 22 C3 8B     	ld (Posicion_actual),hl
 275+ 9876 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9878              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9878 CB 43        10 bit 0,e
 278+ 987A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 987C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 987C C1           	pop bc
 281+ 987D 18 A6        	jr 3B
 282+ 987F 90           16 sub b
 283+ 9880 6F               ld l,a
 284+ 9881 22 C3 8B     	ld (Posicion_actual),hl
 285+ 9884 CD B2 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9887 18 06            jr 9F
 287+ 9889 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988B 32 C0 8B         ld (Ctrl_0),a
 289+ 988E F1           	pop af
 290+ 988F C1           9 pop bc
 291+ 9890 1E 00        	ld e,0
 292+ 9892 CD C2 98         call Inicializacion
 293+ 9895 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9896 08           	ex af,af
 295+ 9897 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9898 18 8B            jr 3B
 297+ 989A
 298+ 989A              ; --------------------
 299+ 989A
 300+ 989A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 989C CD E5 99     1 call PreviousScan
 302+ 989F 10 FB            djnz 1B
 303+ 98A1 22 C3 8B     	ld (Posicion_actual),hl
 304+ 98A4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A5 C9           	ret
 306+ 98A6
 307+ 98A6              ; --------------------
 308+ 98A6
 309+ 98A6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98A8 CD D6 99     1 call NextScan
 311+ 98AB 10 FB            djnz 1B
 312+ 98AD 22 C3 8B     	ld (Posicion_actual),hl
 313+ 98B0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B1 C9           	ret
 315+ 98B2
 316+ 98B2              ; --------------------
 317+ 98B2              ;
 318+ 98B2              ;	22/01/23
 319+ 98B2              ;
 320+ 98B2              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B2
 324+ 98B2
 325+ 98B2              Modificaccionne
 326+ 98B2
 327+ 98B2 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 98B5 FE 02        	cp 2
 329+ 98B7 CC 9A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BA DC 9A 98         call c,Modifica_Pos_actual
 331+ 98BD C8           	ret z
 332+ 98BE CD A6 98         call Modifica_Pos_actual2
 333+ 98C1 C9               ret
 334+ 98C2
 335+ 98C2              ; *************************************************************************************************************************************************************************************************
 336+ 98C2              ;
 337+ 98C2              ;	13/8/22
 338+ 98C2              ;
 339+ 98C2              ;	Inicializacion
 340+ 98C2              ;
 341+ 98C2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C2              ;
 345+ 98C2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C2              ;	_ desaparece/aparece.
 348+ 98C2
 349+ 98C2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C2              ;
 352+ 98C2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C2              ; 		   [E] ="0"
 355+ 98C2
 356+ 98C2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C2
 358+ 98C2 CD B8 94     Inicializacion call calcula_tercio
 359+ 98C5 28 36        	jr z,primit
 360+ 98C7 E6 02        	and 2
 361+ 98C9 20 07        	jr nz,segmit
 362+ 98CB 7D           	ld a,l
 363+ 98CC FE 7F        	cp $7f
 364+ 98CE 38 2D        	jr c,primit
 365+ 98D0 28 2B        	jr z,primit
 366+ 98D2 CD 38 99     segmit call column
 367+ 98D5 38 13        	jr c,tercuad
 368+ 98D7 3E 04        cuarcuad ld a,4
 369+ 98D9 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98DC 21 20 48     	ld hl,$4820
 371+ 98DF 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98E2 21 D6 8B     	ld hl,Limite_vertical
 373+ 98E5 36 0D        	ld (hl),$0d
 374+ 98E7 08           	ex af,af
 375+ 98E8 18 3C        	jr 1F
 376+ 98EA              tercuad
 377+ 98EA 3E 03        	ld a,3
 378+ 98EC 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98EF 21 20 48     	ld hl,$4820
 380+ 98F2 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98F5 21 D6 8B     	ld hl,Limite_vertical
 382+ 98F8 36 12        	ld (hl),$12
 383+ 98FA 08           	ex af,af
 384+ 98FB 18 29        	jr 1F
 385+ 98FD CD 38 99     primit call column
 386+ 9900 38 13        	jr c, primcuad
 387+ 9902              segcuad
 388+ 9902 3E 02        	ld a,2
 389+ 9904 32 D2 8B     	ld (Cuad_objeto),a
 390+ 9907 21 C0 4F     	ld hl,$4fc0
 391+ 990A 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 990D 21 D6 8B     	ld hl,Limite_vertical
 393+ 9910 36 0D        	ld (hl),$0d
 394+ 9912 08           	ex af,af
 395+ 9913 18 11        	jr 1F
 396+ 9915              primcuad
 397+ 9915 3E 01        	ld a,1
 398+ 9917 32 D2 8B     	ld (Cuad_objeto),a
 399+ 991A 21 C0 4F     	ld hl,$4fc0
 400+ 991D 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 9920 21 D6 8B     	ld hl,Limite_vertical
 402+ 9923 36 12        	ld (hl),$12
 403+ 9925 08           	ex af,af
 404+ 9926
 405+ 9926 C5           1 push bc
 406+ 9927 E5           	push hl
 407+ 9928 D5           	push de
 408+ 9929
 409+ 9929 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 992C CD D6 94     	call Genera_coordenadas
 411+ 992F
 412+ 992F D1           	pop de
 413+ 9930 E1           	pop hl
 414+ 9931 C1           	pop bc
 415+ 9932
 416+ 9932 21 C0 8B     	ld hl,Ctrl_0
 417+ 9935 CB EE        	set 5,(hl)
 418+ 9937 C9           	ret
 419+ 9938
 420+ 9938              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9938
 422+ 9938              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9938              ;
 424+ 9938              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9938
 426+ 9938 7D           column ld a,l
 427+ 9939 E6 1F        	and $1f
 428+ 993B FE 10         	cp $10
 429+ 993D C9            	ret
 430+ 993E
 431+ 993E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 993E              ;
 433+ 993E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 993E              ;
 435+ 993E              ; 14/12/22
 436+ 993E              ;
 437+ 993E              ;	Modifica: A y BC.
 438+ 993E
 439+ 993E 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9941 E6 01        	and 1
 441+ 9943 28 17        	jr z,1F
 442+ 9945
 443+ 9945              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9945
 445+ 9945 3A B4 8B     	ld a,(Coordenada_X)
 446+ 9948 47           	ld b,a
 447+ 9949 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994A 79           	ld a,c
 449+ 994B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 994C 38 08        	jr c,2F
 451+ 994E 47           	ld b,a
 452+ 994F 79           	ld a,c
 453+ 9950 90           	sub b
 454+ 9951 32 D3 8B     	ld (Columnas),a
 455+ 9954 18 1B        	jr 4F
 456+ 9956 79           2 ld a,c
 457+ 9957 32 D3 8B     	ld (Columnas),a
 458+ 995A 18 15        	jr 4F
 459+ 995C
 460+ 995C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 995C
 462+ 995C 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 995F 81           	add c
 464+ 9960 3D           	dec a
 465+ 9961 D6 1F        	sub $1f
 466+ 9963 38 08        	jr c,3F
 467+ 9965 47           	ld b,a
 468+ 9966 79           	ld a,c
 469+ 9967 90           	sub b
 470+ 9968 32 D3 8B     	ld (Columnas),a
 471+ 996B 18 04        	jr 4F
 472+ 996D 79           3 ld a,c
 473+ 996E 32 D3 8B     	ld (Columnas),a
 474+ 9971 D9           4 exx
 475+ 9972 4F           	ld c,a
 476+ 9973 D9           	exx
 477+ 9974 C9            ret
 478+ 9975
 479+ 9975              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9975              ;
 481+ 9975              ;   19/7/23
 482+ 9975              ;
 483+ 9975              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9975              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9975              ;
 486+ 9975              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9975              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9975              ;
 489+ 9975              ;	DESTRUYE: HL,B Y A.
 490+ 9975
 491+ 9975 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9978 FE 02        	cp 2
 493+ 997A 38 18        	jr c,1F
 494+ 997C 28 16        	jr z,1F
 495+ 997E E6 01        	and 1
 496+ 9980 28 0D        	jr z,3F
 497+ 9982
 498+ 9982              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9982
 500+ 9982 CD BE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9985
 502+ 9985 7D           9 ld a,l
 503+ 9986 E6 1F        	and $1f
 504+ 9988 28 2A        	jr z,7F
 505+ 998A 2B           	dec hl
 506+ 998B 10 F8        	djnz 9B
 507+ 998D 18 25        	jr 7F
 508+ 998F
 509+ 998F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 998F
 511+ 998F 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 9992 18 20        	jr 7F
 513+ 9994
 514+ 9994 28 14        1 jr z,2F
 515+ 9996
 516+ 9996              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9996
 518+ 9996 CD BE 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9999
 520+ 9999 7D           4 ld a,l
 521+ 999A E6 1F        	and $1f
 522+ 999C 28 03        	jr z,6F
 523+ 999E 2B           	dec hl
 524+ 999F 10 F8        	djnz 4B
 525+ 99A1 06 0F        6 ld b,15
 526+ 99A3 CD E5 99     5 call PreviousScan
 527+ 99A6 10 FB        	djnz 5B
 528+ 99A8 18 0A        	jr 7F
 529+ 99AA
 530+ 99AA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AA
 532+ 99AA CD BE 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99AD 06 0F        	ld b,15
 534+ 99AF CD E5 99     8 call PreviousScan
 535+ 99B2 10 FB        	djnz 8B
 536+ 99B4
 537+ 99B4 E5           7 push hl
 538+ 99B5 DD E1        	pop ix
 539+ 99B7
 540+ 99B7 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 99BA E5           	push hl
 542+ 99BB FD E1        	pop iy
 543+ 99BD
 544+ 99BD C9           	ret
 545+ 99BE
 546+ 99BE              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99BE              ;
 548+ 99BE              ;	2/1/23
 549+ 99BE              ;
 550+ 99BE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99BE              ;
 552+ 99BE              ;	Tras esta rutina tenemos:
 553+ 99BE              ;
 554+ 99BE              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99BE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99BE              ;
 557+ 99BE              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99BE
 559+ 99BE 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C1 3A D3 8B     	ld a,(Columnas)
 561+ 99C4 3D           	dec a
 562+ 99C5 20 01        	jr nz,1F
 563+ 99C7 3C           	inc a
 564+ 99C8 47           1 ld b,a
 565+ 99C9 C9           	ret
 566+ 99CA
 567+ 99CA              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CA              ;
 569+ 99CA              ;	Prepara_draw
 570+ 99CA              ;
 571+ 99CA              ;	Es una rutina de carga.
 572+ 99CA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CA              ;
 574+ 99CA              ;	FUNCIONAMIENTO:
 575+ 99CA              ;
 576+ 99CA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CA              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CA              ;
 580+ 99CA              ;	DESTRUYE:
 581+ 99CA              ;
 582+ 99CA              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CA
 584+ 99CA 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99CD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99CE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99CF 4E           	ld c,(hl)
 588+ 99D0 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99D3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D5 C9           	ret
 591+ 99D6
 592+ 99D6              ;----------------------------------------------------------------------------------------------------------------
 593+ 99D6              ;
 594+ 99D6              ;	5/08/22
 595+ 99D6              ;
 596+ 99D6              ;   NextScan.
 597+ 99D6              ;
 598+ 99D6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99D6              ;
 600+ 99D6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99D6              ;
 602+ 99D6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99D6              ;
 604+ 99D6              ;       DESTRUIDOS: AF y HL !!!
 605+ 99D6              ;
 606+ 99D6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99D6              ;
 608+ 99D6
 609+ 99D6 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99D7 7C               ld a,h
 611+ 99D8 E6 07            and 7
 612+ 99DA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DB
 614+ 99DB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99DC C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99DE 6F               ld l,a
 617+ 99DF D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E0
 619+ 99E0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E3 67               ld h,a
 622+ 99E4 C9               ret
 623+ 99E5
 624+ 99E5              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E5              ;
 626+ 99E5              ;	5/08/22
 627+ 99E5              ;
 628+ 99E5              ;   PreviousScan.
 629+ 99E5              ;
 630+ 99E5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E5              ;
 632+ 99E5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E5              ;
 634+ 99E5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E5              ;
 636+ 99E5              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E5              ;
 638+ 99E5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E5              ;
 640+ 99E5
 641+ 99E5 7C           PreviousScan ld a,h
 642+ 99E6 25               dec h               ; Dec H.
 643+ 99E7 E6 07            and 7
 644+ 99E9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99EA
 646+ 99EA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99EB D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99ED 6F               ld l,a
 649+ 99EE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99EF
 651+ 99EF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F2 67               ld h,a
 654+ 99F3 C9               ret
 655+ 99F4
 656+ 99F4
 657+ 99F4
 658+ 99F4
 659+ 99F4
 660+ 99F4
 661+ 99F4
 662+ 99F4
 663+ 99F4
 664+ 99F4
 665+ 99F4
 666+ 99F4
# file closed: Draw_XOR.asm
2183  99F4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F4
   2+ 99F4              ; ******************************************************************************************************************************************************************************************
   3+ 99F4              ;
   4+ 99F4              ;   20/05/23
   5+ 99F4              ;
   6+ 99F4              ;	Recompone_posicion_inicio
   7+ 99F4              ;
   8+ 99F4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F4              ;	_ a una u otra rutina.
  12+ 99F4
  13+ 99F4              Recompone_posicion_inicio
  14+ 99F4
  15+ 99F4 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99F7 7D           	ld a,l
  17+ 99F8 E6 1F        	and $1f
  18+ 99FA 28 16        	jr z,1F
  19+ 99FC
  20+ 99FC FE 1F        	cp $1f
  21+ 99FE 28 0D        	jr z,3F
  22+ 9A00
  23+ 9A00 21 BF 8B     	ld hl,Ctrl_2
  24+ 9A03 CB C6        	set 0,(hl)
  25+ 9A05 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 9A08 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A0B 18 08        	jr 2F
  28+ 9A0D
  29+ 9A0D CD BB 9B     3 call Mov_left
  30+ 9A10 18 03        	jr 2F
  31+ 9A12
  32+ 9A12 CD 98 9A     1 call Mov_right
  33+ 9A15 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A18 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 9A1B C9           	ret
  36+ 9A1C
  37+ 9A1C              ; ******************************************************************************************************************************************************************************************
  38+ 9A1C              ;
  39+ 9A1C              ;   27/05/23
  40+ 9A1C              ;
  41+ 9A1C              ;	Mov_down
  42+ 9A1C              ;
  43+ 9A1C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A1C              ;
  45+ 9A1C              ;
  46+ 9A1C              Mov_down
  47+ 9A1C
  48+ 9A1C CD 86 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A1F              ;																	; _ repone (Puntero_objeto).
  50+ 9A1F 21 C0 8B     	ld hl,Ctrl_0
  51+ 9A22 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A24              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A24              ; 																	; _ en el caso de que no lo haya.
  54+ 9A24 3A DB 8B     	ld a,(Vel_down)
  55+ 9A27 47           	ld b,a
  56+ 9A28 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A2B CD B8 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A2E E6 02        	and 2
  59+ 9A30 28 17        	jr z,1F
  60+ 9A32
  61+ 9A32              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A32              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A32
  64+ 9A32 7C           	ld a,h
  65+ 9A33 FE 57        	cp $57
  66+ 9A35 20 12        	jr nz,1F
  67+ 9A37
  68+ 9A37 7D           	ld a,l
  69+ 9A38 C6 20        	add $20
  70+ 9A3A 30 0D        	jr nc,1F
  71+ 9A3C
  72+ 9A3C              ; ------------------------------
  73+ 9A3C              ;
  74+ 9A3C              ;	12/01/24
  75+ 9A3C
  76+ 9A3C              ;	call Reaparece_arriba
  77+ 9A3C CD 48 9D     	call Reinicio
  78+ 9A3F
  79+ 9A3F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A3F
  81+ 9A3F 3A 24 8C     	ld a,(Ctrl_3)
  82+ 9A42 CB CF        	set 1,a
  83+ 9A44 32 24 8C     	ld (Ctrl_3),a
  84+ 9A47
  85+ 9A47 18 08        	jr 3F
  86+ 9A49              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A49              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A49              ; ------------------------------
  89+ 9A49
  90+ 9A49 CD D6 99     1 call NextScan
  91+ 9A4C 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A4F 10 DA            djnz 2B
  93+ 9A51 CD D6 94     3 call Genera_coordenadas
  94+ 9A54 C9           	ret
  95+ 9A55
  96+ 9A55              ; ******************************************************************************************************************************************************************************************
  97+ 9A55              ;
  98+ 9A55              ;   27/05/23
  99+ 9A55              ;
 100+ 9A55              ;	Mov_up
 101+ 9A55              ;
 102+ 9A55              ; 	Mueve el Sprite hacia arriba.
 103+ 9A55              ;
 104+ 9A55              ;
 105+ 9A55              Mov_up
 106+ 9A55
 107+ 9A55 CD 86 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A58              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A58 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A5B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A5D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A5D              ; 																		; _ en el caso de que no lo haya.
 113+ 9A5D 3A DA 8B     	ld a,(Vel_up)
 114+ 9A60 47           	ld b,a
 115+ 9A61 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A64 CD B8 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A67 A7           	and a
 118+ 9A68 20 10        	jr nz,1F
 119+ 9A6A
 120+ 9A6A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6A
 123+ 9A6A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A6D 20 0B            jr nz,1F
 126+ 9A6F 7D               ld a,l
 127+ 9A70 D6 20            sub $20
 128+ 9A72 30 06            jr nc,1F
 129+ 9A74 25               dec h
 130+ 9A75
 131+ 9A75              ; -----------------------------
 132+ 9A75 CD 29 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A78              ;	call Reinicio
 134+ 9A78              ; -----------------------------
 135+ 9A78
 136+ 9A78 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7A CD E5 99     1 call PreviousScan
 138+ 9A7D 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A80 10 E2            djnz 3B
 140+ 9A82 CD D6 94     2 call Genera_coordenadas
 141+ 9A85 C9           	ret
 142+ 9A86
 143+ 9A86              ; -----------------------------
 144+ 9A86              ;
 145+ 9A86              ;	27/5/23
 146+ 9A86              ;
 147+ 9A86              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A86              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A86              ;
 150+ 9A86              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A86              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A86              ;
 153+ 9A86              ;	Modifica: A y (Puntero_objeto).
 154+ 9A86
 155+ 9A86 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A89 CB 47        	bit 0,a
 157+ 9A8B C8           	ret z
 158+ 9A8C CB 87        	res 0,a
 159+ 9A8E 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A91 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A94 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A97 C9           	ret
 163+ 9A98
 164+ 9A98              ; ******************************************************************************************************************************************************************************************
 165+ 9A98              ;
 166+ 9A98              ;	19/10/22
 167+ 9A98              ;
 168+ 9A98              ;	Mov_right.
 169+ 9A98              ;
 170+ 9A98              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A98              ;
 172+ 9A98
 173+ 9A98 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9B CB 77        	bit 6,a
 175+ 9A9D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A9F
 177+ 9A9F CD D7 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA3
 180+ 9AA3 21 C0 8B     	ld hl,Ctrl_0
 181+ 9AA6 CB E6        	set 4,(hl)
 182+ 9AA8 18 52        	jr 8F
 183+ 9AAA
 184+ 9AAA 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9AAD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AAF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AAF              ; 																	; _ en el caso de que no lo haya.
 188+ 9AAF 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB4 20 46        	jr nz,8F
 191+ 9AB6
 192+ 9AB6 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AB9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABA 28 40        	jr z,8F
 195+ 9ABC
 196+ 9ABC              ; ---------- ---------- ----------
 197+ 9ABC              ;
 198+ 9ABC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9ABC
 200+ 9ABC 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9ABF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC1 28 11        	jr z,1F
 203+ 9AC3 38 06        	jr c,6F
 204+ 9AC5 FE 04        	cp 4
 205+ 9AC7 28 14        	jr z,7F
 206+ 9AC9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACB
 208+ 9ACB              ; ---------- ---------- ----------
 209+ 9ACB              ;
 210+ 9ACB              ; Perfiles de velocidad
 211+ 9ACB              ;
 212+ 9ACB
 213+ 9ACB 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9ACE FE FE        	cp $fe
 215+ 9AD0 20 2A        	jr nz,8F
 216+ 9AD2 18 10        	jr 3F
 217+ 9AD4 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AD7 FE FD        	cp $fd
 219+ 9AD9 20 21        	jr nz,8F
 220+ 9ADB 18 07        	jr 3F
 221+ 9ADD 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE0 FE FB        	cp $fb
 223+ 9AE2 20 18        	jr nz,8F
 224+ 9AE4
 225+ 9AE4              ; ---------- ---------- ----------
 226+ 9AE4
 227+ 9AE4              3
 228+ 9AE4 CD 17 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AE7              ;	call Reinicio
 230+ 9AE7
 231+ 9AE7              ; ---------- ---------- ----------
 232+ 9AE7              ;
 233+ 9AE7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AE7
 235+ 9AE7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AE9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AEA CD 03 9B     	call DESPLZ_DER
 238+ 9AED C1           	pop bc
 239+ 9AEE 10 F9        	djnz 5B
 240+ 9AF0 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF4 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9AF7 CD D6 94     	call Genera_coordenadas
 244+ 9AFA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AFC
 246+ 9AFC              ; ---------- ---------- ----------
 247+ 9AFC
 248+ 9AFC 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AFF CD 03 9B     	call DESPLZ_DER
 250+ 9B02 C9           2 ret
 251+ 9B03
 252+ 9B03              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B03              ;
 254+ 9B03              ;	22/9/22
 255+ 9B03              ;
 256+ 9B03
 257+ 9B03 CD 12 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B06 CD 5E 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B09 CD 87 9B         call Ciclo_completo
 260+ 9B0C 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B0F CB FE        	set 7,(hl)
 262+ 9B11 C9           	ret
 263+ 9B12
 264+ 9B12              ; ******************************************************************************************************************************************************************************************
 265+ 9B12              ;	15/02/23
 266+ 9B12              ;
 267+ 9B12
 268+ 9B12 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B15 47           	ld b,a
 270+ 9B16 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B19 23           1 inc hl
 272+ 9B1A 23           	inc hl
 273+ 9B1B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B1D 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B20 CD B7 90     	call Extrae_address
 276+ 9B23 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9B26
 278+ 9B26              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B26
 280+ 9B26              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B26              ; Cuántos movimientos hemos hecho ??
 282+ 9B26              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B26
 284+ 9B26 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B29 EB           	ex de,hl
 286+ 9B2A A7           	and a
 287+ 9B2B ED 52        	sbc hl,de
 288+ 9B2D CB 3D        	srl l
 289+ 9B2F 3E 08        6 ld a,8
 290+ 9B31 95           	sub l
 291+ 9B32 30 1E        	jr nc,3F
 292+ 9B34
 293+ 9B34              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B34              ; B="0".
 295+ 9B34
 296+ 9B34 04           4 inc b
 297+ 9B35 3C           	inc a
 298+ 9B36 20 FC        	jr nz,4B
 299+ 9B38 78           	ld a,b
 300+ 9B39 08           	ex af,af
 301+ 9B3A 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B3D 23           5 inc hl
 303+ 9B3E 23           	inc hl
 304+ 9B3F 10 FC        	djnz 5B
 305+ 9B41 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B44 CD B7 90     	call Extrae_address
 307+ 9B47 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B4A
 309+ 9B4A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4A              ; _(Posicion_actual).
 311+ 9B4A
 312+ 9B4A 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B4D 34           	inc (hl)
 314+ 9B4E 08               ex af,af
 315+ 9B4F 6F           	ld l,a
 316+ 9B50 18 DD        	jr 6B
 317+ 9B52
 318+ 9B52              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B52
 320+ 9B52 47           3 ld b,a
 321+ 9B53 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B56 23           2 inc hl
 323+ 9B57 23           	inc hl
 324+ 9B58 10 FC        	djnz 2B
 325+ 9B5A 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B5D C9           8 ret
 327+ 9B5E
 328+ 9B5E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B5E              ;
 330+ 9B5E              ;	24/7/22
 331+ 9B5E              ;
 332+ 9B5E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B5E              ;
 334+ 9B5E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B5E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B5E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B5E
 338+ 9B5E 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B61 A7           	and a
 340+ 9B62 20 1F        	jr nz,1F
 341+ 9B64 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B66 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B69
 344+ 9B69 21 C2 8B     	ld hl,Columns
 345+ 9B6C 34           	inc (hl)
 346+ 9B6D 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B70 E6 01        	and 1
 348+ 9B72 28 0F        	jr z,1F
 349+ 9B74 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B77 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B78 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B7B CD D6 94     	call Genera_coordenadas
 353+ 9B7E CD E3 9C     	call Inc_CTRL_DESPLZ
 354+ 9B81 18 03        	jr 2F
 355+ 9B83 CD E3 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B86 C9           2 ret
 357+ 9B87
 358+ 9B87              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B87              ;
 360+ 9B87              ;	24/7/22
 361+ 9B87              ;
 362+ 9B87              ;	Ciclo_completo.
 363+ 9B87              ;
 364+ 9B87              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B87              ;
 366+ 9B87              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B87              ; 	Decrementamos (Columns).
 368+ 9B87              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B87              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B87
 371+ 9B87
 372+ 9B87 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8A FE FF        	cp $ff
 374+ 9B8C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B8E E6 F0        	and $f0
 376+ 9B90 20 28        	jr nz,3F
 377+ 9B92
 378+ 9B92              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B92
 380+ 9B92 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B95 47           	ld b,a
 382+ 9B96 3E F8        	ld a,$f8
 383+ 9B98 80           	add b
 384+ 9B99 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B9C 18 1C        	jr 3F
 386+ 9B9E 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA3 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9BA6 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BA9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAB 20 0A        	jr nz,2F
 393+ 9BAD 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB0 23           	inc hl
 395+ 9BB1 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9BB4 CD D6 94     	call Genera_coordenadas
 397+ 9BB7
 398+ 9BB7              ; Inicia el puntero de Sprite.
 399+ 9BB7
 400+ 9BB7 CD CC 90     2 call Inicia_puntero_objeto_der
 401+ 9BBA C9           3 ret
 402+ 9BBB
 403+ 9BBB              ; ******************************************************************************************************************************************************************************************
 404+ 9BBB              ;
 405+ 9BBB              ;	15/02/23
 406+ 9BBB              ;
 407+ 9BBB              ;	Mov_left.
 408+ 9BBB              ;
 409+ 9BBB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBB              ;
 411+ 9BBB              Mov_left
 412+ 9BBB
 413+ 9BBB 21 C0 8B     	ld hl,Ctrl_0
 414+ 9BBE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC0              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC0 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9BC3 CB 77        	bit 6,a
 419+ 9BC5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BC7
 421+ 9BC7 CD DD 9C     	call Stop_Amadeus_left
 422+ 9BCA C8           	ret z
 423+ 9BCB 20 4A        	jr nz,8F
 424+ 9BCD
 425+ 9BCD 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BD0 A7           	and a
 427+ 9BD1 20 44        	jr nz,8F
 428+ 9BD3
 429+ 9BD3 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BD6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BD7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BD9
 433+ 9BD9              ; ---------- ---------- ----------
 434+ 9BD9
 435+ 9BD9 3A D8 8B     	ld a,(Vel_left)
 436+ 9BDC FE 02        	cp 2
 437+ 9BDE 28 0F        	jr z,1F
 438+ 9BE0 38 04        	jr c,6F
 439+ 9BE2 FE 04        	cp 4
 440+ 9BE4 28 12        	jr z,7F
 441+ 9BE6
 442+ 9BE6              ; ---------- ---------- ----------
 443+ 9BE6
 444+ 9BE6 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BE9 FE F8        	cp $f8
 446+ 9BEB 20 2A        	jr nz,8F
 447+ 9BED 18 10        	jr 4F
 448+ 9BEF 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF2 FE F9        	cp $f9
 450+ 9BF4 20 21        	jr nz,8F
 451+ 9BF6 18 07        	jr 4F
 452+ 9BF8 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BFB FE FB        	cp $fb
 454+ 9BFD 20 18        	jr nz,8F
 455+ 9BFF
 456+ 9BFF              ; ---------- ---------- ----------
 457+ 9BFF
 458+ 9BFF              4
 459+ 9BFF CD 05 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C02              ;	call Reinicio
 461+ 9C02
 462+ 9C02              ; ---------- ---------- ----------
 463+ 9C02
 464+ 9C02 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C04 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C05
 467+ 9C05              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C05              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C05
 470+ 9C05 CD 1E 9C     	call DESPLZ_IZQ
 471+ 9C08 C1           	pop bc
 472+ 9C09 10 F9        	djnz 5B
 473+ 9C0B 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C0E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C0F 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9C12 CD D6 94     	call Genera_coordenadas
 477+ 9C15 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C17
 479+ 9C17              ; ---------- ---------- ----------
 480+ 9C17
 481+ 9C17              ; Movemos, no hay recolocación.
 482+ 9C17
 483+ 9C17 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9C1A CD 1E 9C     	call DESPLZ_IZQ
 485+ 9C1D C9           2 ret
 486+ 9C1E
 487+ 9C1E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C1E              ;
 489+ 9C1E              ;	22/9/22
 490+ 9C1E
 491+ 9C1E              DESPLZ_IZQ
 492+ 9C1E
 493+ 9C1E CD 2D 9C     	call Desplaza_izquierda
 494+ 9C21 CD 79 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C24 CD A1 9C     	call Ciclo_completo_2
 496+ 9C27 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2A CB BE        	res 7,(hl)
 498+ 9C2C C9           	ret
 499+ 9C2D
 500+ 9C2D              Desplaza_izquierda
 501+ 9C2D
 502+ 9C2D 3A D8 8B     	ld a,(Vel_left)
 503+ 9C30 47           	ld b,a
 504+ 9C31 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C34 23           1 inc hl
 506+ 9C35 23           	inc hl
 507+ 9C36 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C38 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3B CD B7 90     	call Extrae_address
 510+ 9C3E 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C41
 512+ 9C41              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C41
 514+ 9C41              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C41              ; Cuántos movimientos hemos hecho ??
 516+ 9C41              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C41
 518+ 9C41 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C44 EB           	ex de,hl
 520+ 9C45 A7           	and a
 521+ 9C46 ED 52        	sbc hl,de
 522+ 9C48 CB 3D        	srl l
 523+ 9C4A 3E 08        6 ld a,8
 524+ 9C4C 95           	sub l
 525+ 9C4D 30 1E        	jr nc,3F
 526+ 9C4F
 527+ 9C4F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C4F              ; B="0".
 529+ 9C4F
 530+ 9C4F 04           4 inc b
 531+ 9C50 3C           	inc a
 532+ 9C51 20 FC        	jr nz,4B
 533+ 9C53 78           	ld a,b
 534+ 9C54 08           	ex af,af
 535+ 9C55 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C58 23           5 inc hl
 537+ 9C59 23           	inc hl
 538+ 9C5A 10 FC        	djnz 5B
 539+ 9C5C 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C5F CD B7 90     	call Extrae_address
 541+ 9C62 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C65
 543+ 9C65              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C65              ; _(Posicion_actual).
 545+ 9C65
 546+ 9C65 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C68 35           	dec (hl)
 548+ 9C69 08           	ex af,af
 549+ 9C6A 6F           	ld l,a
 550+ 9C6B 18 DD        	jr 6B
 551+ 9C6D
 552+ 9C6D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C6D
 554+ 9C6D 47           3 ld b,a
 555+ 9C6E 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C71 23           2 inc hl
 557+ 9C72 23           	inc hl
 558+ 9C73 10 FC        	djnz 2B
 559+ 9C75 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C78 C9           8 ret
 561+ 9C79
 562+ 9C79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C79              ;
 564+ 9C79              ;	modifica_parametros_1er_DESPLZ
 565+ 9C79              ;
 566+ 9C79              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C79              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C79              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C79
 570+ 9C79 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C7C A7           	and a
 572+ 9C7D 20 1E        	jr nz,1F
 573+ 9C7F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C80 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C83 21 C2 8B     	ld hl,Columns
 576+ 9C86 34           	inc (hl)
 577+ 9C87 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C8A E6 01        	and 1
 579+ 9C8C 20 0F        	jr nz,1F
 580+ 9C8E 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C91 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C92 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C95 CD D6 94     	call Genera_coordenadas
 584+ 9C98 CD F4 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9B 18 03        	jr 2F
 586+ 9C9D CD F4 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA0 C9           2 ret
 588+ 9CA1
 589+ 9CA1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA1
 591+ 9CA1 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA4 FE F7        	cp $f7
 593+ 9CA6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CA8 30 2C        	jr nc,3F
 595+ 9CAA
 596+ 9CAA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAA
 598+ 9CAA 06 00        	ld b,0
 599+ 9CAC 04           4 inc b
 600+ 9CAD 3C           	inc a
 601+ 9CAE FE F7        	cp $f7
 602+ 9CB0 20 FA        	jr nz,4B
 603+ 9CB2 3E FF        	ld a,$ff
 604+ 9CB4 90           	sub b
 605+ 9CB5 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9CB8 18 1C        	jr 3F
 607+ 9CBA
 608+ 9CBA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBA
 610+ 9CBA 21 C2 8B     1 ld hl,Columns
 611+ 9CBD 35           	dec (hl)
 612+ 9CBE AF           	xor a
 613+ 9CBF 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC2 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9CC5 E6 01        	and 1
 616+ 9CC7 28 0A        	jr z,2F
 617+ 9CC9 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CCC 2B           	dec hl
 619+ 9CCD 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CD0 CD D6 94     	call Genera_coordenadas
 621+ 9CD3
 622+ 9CD3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD3
 624+ 9CD3 CD DF 90     2 call Inicia_puntero_objeto_izq
 625+ 9CD6 C9           3 ret
 626+ 9CD7
 627+ 9CD7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CD7              ;
 629+ 9CD7              ;	19/10/22
 630+ 9CD7              ;
 631+ 9CD7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CD7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CD7
 634+ 9CD7 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CDC C9           	ret
 637+ 9CDD
 638+ 9CDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CDD              ;
 640+ 9CDD              ;	19/10/22
 641+ 9CDD              ;
 642+ 9CDD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CDD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CDD
 645+ 9CDD 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE2 C9           	ret
 648+ 9CE3
 649+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE3              ;
 651+ 9CE3              ;	24/7/22
 652+ 9CE3              ;
 653+ 9CE3              ;	Inc_CTRL_DESPLZ
 654+ 9CE3              ;
 655+ 9CE3              ;
 656+ 9CE3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE3
 658+ 9CE3 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CE6 3A D9 8B     	ld a,(Vel_right)
 660+ 9CE9 A7           	and a
 661+ 9CEA 28 06        	jr z,1F
 662+ 9CEC 47           	ld b,a
 663+ 9CED 34           3 inc (hl)
 664+ 9CEE 10 FD        	djnz 3B
 665+ 9CF0 18 01        	jr 2F
 666+ 9CF2 34           1 inc (hl)
 667+ 9CF3 C9           2 ret
 668+ 9CF4
 669+ 9CF4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF4              ;
 671+ 9CF4              ;	5/2/23
 672+ 9CF4              ;
 673+ 9CF4              ;	Dec_CTRL_DESPLZ
 674+ 9CF4              ;
 675+ 9CF4              ;
 676+ 9CF4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF4
 678+ 9CF4 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CF7 3A D8 8B     	ld a,(Vel_left)
 680+ 9CFA A7           	and a
 681+ 9CFB 28 06        	jr z,1F
 682+ 9CFD 47           	ld b,a
 683+ 9CFE 35           3 dec (hl)
 684+ 9CFF 10 FD        	djnz 3B
 685+ 9D01 18 01        	jr 2F
 686+ 9D03 35           1 dec (hl)
 687+ 9D04 C9           2 ret
 688+ 9D05
 689+ 9D05              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D05
 691+ 9D05 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D08 01 1F 00     	ld bc,31
 693+ 9D0B A7           	and a
 694+ 9D0C ED 4A        	adc hl,bc
 695+ 9D0E 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9D11 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D14 CB C6        	set 0,(hl)
 698+ 9D16 C9           	ret
 699+ 9D17
 700+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D17
 702+ 9D17 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1A 01 1F 00     	ld bc,31
 704+ 9D1D A7           	and a
 705+ 9D1E ED 42        	sbc hl,bc
 706+ 9D20 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D23 21 C0 8B     	ld hl,Ctrl_0
 708+ 9D26 CB CE        	set 1,(hl)
 709+ 9D28 C9           	ret
 710+ 9D29
 711+ 9D29              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D29
 713+ 9D29 24           Reaparece_abajo inc h
 714+ 9D2A 01 E0 17     	ld bc,$17e0
 715+ 9D2D A7           	and a
 716+ 9D2E ED 4A        	adc hl,bc
 717+ 9D30 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D33 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D36 CB D6        	set 2,(hl)
 720+ 9D38 C9           	ret
 721+ 9D39
 722+ 9D39              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D39
 724+ 9D39 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D3C A7           	and a
 726+ 9D3D ED 42        	sbc hl,bc
 727+ 9D3F 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D42 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D45 CB DE        	set 3,(hl)
 730+ 9D47 C9           	ret
 731+ 9D48
 732+ 9D48              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D48              ;
 734+ 9D48              ;	15/07/23
 735+ 9D48
 736+ 9D48              Reinicio
 737+ 9D48
 738+ 9D48              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D48
 740+ 9D48 AF           	xor a
 741+ 9D49 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D4C CD 6A 9D     	call Limpia_contenido_hl
 743+ 9D4F
 744+ 9D4F 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D52 CD 6A 9D     	call Limpia_contenido_hl
 746+ 9D55
 747+ 9D55 CD B8 92     	call Inicializa_Puntero_indice_mov
 748+ 9D58 CD 69 9E     	call Inicia_Puntero_mov
 749+ 9D5B
 750+ 9D5B 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D5E 06 05        	ld b,5
 752+ 9D60 77           1 ld (hl),a
 753+ 9D61 23           	inc hl
 754+ 9D62 10 FC        	djnz 1B
 755+ 9D64
 756+ 9D64 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D67 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D69
 759+ 9D69 C9           	ret
 760+ 9D6A
 761+ 9D6A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6B 23           	inc hl
 763+ 9D6C 77           	ld (hl),a
 764+ 9D6D C9           	ret
 765+ 9D6E
 766+ 9D6E              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D6E              ;
 768+ 9D6E              ;	18/6/24
 769+ 9D6E              ;
 770+ 9D6E
 771+ 9D6E              Amadeus_a_izquierda
 772+ 9D6E
 773+ 9D6E              ;	Actualiza contador de movimientos.
 774+ 9D6E
 775+ 9D6E 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D71 35           	dec (hl)
 777+ 9D72 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D74
 779+ 9D74 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D77 2B           	dec hl
 781+ 9D78 2B           	dec hl
 782+ 9D79 2B           	dec hl
 783+ 9D7A 2B           	dec hl
 784+ 9D7B 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D7E
 786+ 9D7E 21 24 8C     	ld hl,Ctrl_3
 787+ 9D81 CB EE        	set 5,(hl)
 788+ 9D83
 789+ 9D83 C9           	ret
 790+ 9D84
 791+ 9D84 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D85 C9           	ret
 793+ 9D86
 794+ 9D86
 795+ 9D86              Amadeus_a_derecha
 796+ 9D86
 797+ 9D86              ;	Actualiza contador de movimientos.
 798+ 9D86
 799+ 9D86 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D89 34           	inc (hl)
 801+ 9D8A 3E 7A        	ld a,$7a
 802+ 9D8C BE           	cp (hl)
 803+ 9D8D 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D8F
 805+ 9D8F 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D92 23           	inc hl
 807+ 9D93 23           	inc hl
 808+ 9D94 23           	inc hl
 809+ 9D95 23           	inc hl
 810+ 9D96 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D99
 812+ 9D99 21 24 8C     	ld hl,Ctrl_3
 813+ 9D9C CB EE        	set 5,(hl)
 814+ 9D9E C9           	ret
 815+ 9D9F
 816+ 9D9F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA0 C9           	ret
# file closed: Direcciones.asm
2184  9DA1              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA1              ; ----- ----- ----- ----- -----
   2+ 9DA1              ;
   3+ 9DA1              ;   28/12/23
   4+ 9DA1
   5+ 9DA1              Movimiento
   6+ 9DA1
   7+ 9DA1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA1
   9+ 9DA1 3A BF 8B         ld a,(Ctrl_2)
  10+ 9DA4 CB 57            bit 2,a
  11+ 9DA6 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DA8
  13+ 9DA8 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9DAB 7E               ld a,(hl)
  15+ 9DAC
  16+ 9DAC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DAC
  18+ 9DAC              Inicia_desplazamiento.
  19+ 9DAC
  20+ 9DAC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DAC
  22+ 9DAC CD 9F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DAF
  24+ 9DAF              ; Iniciamos (Repetimos_mov).
  25+ 9DAF
  26+ 9DAF 7E               ld a,(hl)
  27+ 9DB0 E6 0F            and $0f
  28+ 9DB2 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9DB5 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DB8
  31+ 9DB8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DB8
  33+ 9DB8 23               inc hl
  34+ 9DB9 7E               ld a,(hl)
  35+ 9DBA 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9DBD 2B               dec hl
  37+ 9DBE
  38+ 9DBE 21 BF 8B         ld hl,Ctrl_2
  39+ 9DC1 CB D6            set 2,(hl)
  40+ 9DC3
  41+ 9DC3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC3
  44+ 9DC3              Desplazamiento_iniciado
  45+ 9DC3
  46+ 9DC3 CD 73 9E         call Aplica_desplazamiento
  47+ 9DC6
  48+ 9DC6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DC6
  50+ 9DC6 3A 24 8C         ld a,(Ctrl_3)
  51+ 9DC9 CB 4F            bit 1,a
  52+ 9DCB C0               ret nz
  53+ 9DCC
  54+ 9DCC 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DCF 35               dec (hl)
  56+ 9DD0 C0               ret nz
  57+ 9DD1
  58+ 9DD1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD1              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD1
  62+ 9DD1 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD4 A7               and a
  64+ 9DD5 CC C8 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DD8 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDA
  67+ 9DDA FE FF            cp $ff
  68+ 9DDC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DDE
  70+ 9DDE FE FE            cp $fe
  71+ 9DE0 CC 4D 9E         call z,Fijamos_bucle
  72+ 9DE3 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE5
  74+ 9DE5 FE FD            cp $fd
  75+ 9DE7 20 11            jr nz,1F
  76+ 9DE9
  77+ 9DE9              ; ---
  78+ 9DE9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DE9
  80+ 9DE9 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DEC CB 5F            bit 3,a
  82+ 9DEE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF0
  84+ 9DF0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF0
  86+ 9DF0 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF5
  89+ 9DF5 CD 5E 9E         call Inicia_Repetimos_movimiento
  90+ 9DF8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFA              ; ---
  92+ 9DFA
  93+ 9DFA FE 01        1 cp 1
  94+ 9DFC CA 37 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DFF
  96+ 9DFF 3D               dec a
  97+ 9E00 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9E03
  99+ 9E03 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E06 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E09              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E09 C9               ret
 103+ 9E0A
 104+ 9E0A              Reinicia_el_movimiento
 105+ 9E0A
 106+ 9E0A 3A BF 8B         ld a,(Ctrl_2)
 107+ 9E0D CB 5F            bit 3,a
 108+ 9E0F 28 1B            jr z,2F
 109+ 9E11
 110+ 9E11              ; (Cola_de_desplazamiento)="254".
 111+ 9E11
 112+ 9E11 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E14 35               dec (hl)
 114+ 9E15 20 15            jr nz,2F
 115+ 9E17
 116+ 9E17              ; Fin de las repeticiones del último movimiento.
 117+ 9E17
 118+ 9E17 21 BF 8B         ld hl,Ctrl_2
 119+ 9E1A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E1C
 121+ 9E1C 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9E1F 23               inc hl
 123+ 9E20 23               inc hl
 124+ 9E21 23               inc hl
 125+ 9E22 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E25              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E25 7E               ld a,(hl)
 128+ 9E26 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E29
 130+ 9E29 C3 D1 9D         jp Cola
 131+ 9E2C
 132+ 9E2C CD 69 9E     2 call Inicia_Puntero_mov
 133+ 9E2F
 134+ 9E2F 21 BF 8B         ld hl,Ctrl_2
 135+ 9E32 CB 96            res 2,(hl)
 136+ 9E34
 137+ 9E34 C3 A1 9D         jp Movimiento
 138+ 9E37
 139+ 9E37              Siguiente_desplazamiento
 140+ 9E37
 141+ 9E37              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E37              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E37
 144+ 9E37 21 BF 8B         ld hl,Ctrl_2
 145+ 9E3A CB 96            res 2,(hl)
 146+ 9E3C
 147+ 9E3C 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E3F 23               inc hl
 149+ 9E40 23               inc hl
 150+ 9E41 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E44
 152+ 9E44 7E               ld a,(hl)
 153+ 9E45 A7               and a
 154+ 9E46 CC C8 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E49 CA 0A 9E         jp z,Reinicia_el_movimiento
 156+ 9E4C
 157+ 9E4C C9               ret
 158+ 9E4D
 159+ 9E4D              ; Subrutinas -----------------------------------------
 160+ 9E4D              ; ---------- --------- --------- ---------- ----------
 161+ 9E4D              ;
 162+ 9E4D              ;   24/07/23
 163+ 9E4D              ;
 164+ 9E4D              ;   Fijamos_bucle
 165+ 9E4D              ;
 166+ 9E4D              ;
 167+ 9E4D
 168+ 9E4D              Fijamos_bucle
 169+ 9E4D
 170+ 9E4D 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E50 3C               inc a
 172+ 9E51 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E54
 174+ 9E54 CD C8 9E         call Incrementa_Puntero_indice_mov
 175+ 9E57 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E5A 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E5D C9               ret
 178+ 9E5E
 179+ 9E5E              ; ---------- --------- --------- ---------- ----------
 180+ 9E5E              ;
 181+ 9E5E              ;   07/7/23
 182+ 9E5E              ;
 183+ 9E5E              ;   Inicia_Repetimos_movimiento
 184+ 9E5E              ;
 185+ 9E5E              ;
 186+ 9E5E
 187+ 9E5E              Inicia_Repetimos_movimiento
 188+ 9E5E
 189+ 9E5E              ; Iniciamos (Repetimos_movimiento).
 190+ 9E5E
 191+ 9E5E DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E62 DD 7E 02         ld a,(ix+2)
 193+ 9E65 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E68
 195+ 9E68 C9               ret
 196+ 9E69
 197+ 9E69              ; ---------- --------- --------- ---------- ----------
 198+ 9E69              ;
 199+ 9E69              ;   26/6/23
 200+ 9E69              ;
 201+ 9E69              ;   Inicia_Puntero_mov
 202+ 9E69              ;
 203+ 9E69              ;
 204+ 9E69
 205+ 9E69 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E6C CD B7 90         call Extrae_address
 207+ 9E6F 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E72 C9               ret
 209+ 9E73
 210+ 9E73              ; ---------- --------- --------- ---------- ----------
 211+ 9E73              ;
 212+ 9E73              ;   27/06/23
 213+ 9E73              ;
 214+ 9E73              ;   Aplica_movimiento.
 215+ 9E73
 216+ 9E73              Aplica_desplazamiento
 217+ 9E73
 218+ 9E73              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E73
 220+ 9E73 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E76
 222+ 9E76 7E               ld a,(hl)
 223+ 9E77 E6 F0            and $f0
 224+ 9E79 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7A
 226+ 9E7A CB 7E            bit 7,(hl)
 227+ 9E7C 28 03            jr z,1F
 228+ 9E7E CD 55 9A         call Mov_up
 229+ 9E81 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E84 CB 76            bit 6,(hl)
 231+ 9E86 28 03            jr z,2F
 232+ 9E88 CD 1C 9A         call Mov_down
 233+ 9E8B
 234+ 9E8B              ; Se ha aplicado reinicio ???
 235+ 9E8B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8B
 237+ 9E8B              ;    ld a,(Ctrl_3)
 238+ 9E8B              ;    bit 1,a
 239+ 9E8B              ;    ret nz
 240+ 9E8B
 241+ 9E8B 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E8E CB 6E            bit 5,(hl)
 243+ 9E90 28 03            jr z,3F
 244+ 9E92 CD BB 9B         call Mov_left
 245+ 9E95 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E98 CB 66            bit 4,(hl)
 247+ 9E9A C8               ret z
 248+ 9E9B CD 98 9A         call Mov_right
 249+ 9E9E C9               ret
 250+ 9E9F
 251+ 9E9F              ; ---------- --------- --------- ---------- ----------
 252+ 9E9F              ;
 253+ 9E9F              ;   26/06/23
 254+ 9E9F              ;
 255+ 9E9F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E9F
 257+ 9E9F              Ajusta_velocidad_desplazamiento
 258+ 9E9F
 259+ 9E9F              ; 1er byte de la cadena de movimiento.
 260+ 9E9F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E9F
 262+ 9E9F CD BD 9E         call Extrae_nibble_alto
 263+ 9EA2
 264+ 9EA2 32 DA 8B         ld (Vel_up),a
 265+ 9EA5 79               ld a,c
 266+ 9EA6 E6 0F            and $0f
 267+ 9EA8 32 DB 8B         ld (Vel_down),a
 268+ 9EAB
 269+ 9EAB              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAB              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAB
 272+ 9EAB 23               inc hl
 273+ 9EAC CD BD 9E         call Extrae_nibble_alto
 274+ 9EAF
 275+ 9EAF 32 D8 8B         ld (Vel_left),a
 276+ 9EB2 79               ld a,c
 277+ 9EB3 E6 0F            and $0f
 278+ 9EB5 32 D9 8B         ld (Vel_right),a
 279+ 9EB8
 280+ 9EB8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EB8
 282+ 9EB8 23               inc hl
 283+ 9EB9 22 E6 8B         ld (Puntero_mov),hl
 284+ 9EBC C9               ret
 285+ 9EBD
 286+ 9EBD 06 04        Extrae_nibble_alto ld b,4
 287+ 9EBF 7E               ld a,(hl)
 288+ 9EC0 4F               ld c,a
 289+ 9EC1 E6 F0            and $f0
 290+ 9EC3 CB 3F        1 srl a
 291+ 9EC5 10 FC            djnz 1B
 292+ 9EC7 C9               ret
 293+ 9EC8
 294+ 9EC8              ; ---------- --------- --------- ---------- ----------
 295+ 9EC8              ;
 296+ 9EC8              ;   5/7/23
 297+ 9EC8              ;
 298+ 9EC8              ;   Incrementa_Puntero_indice_mov
 299+ 9EC8
 300+ 9EC8              Incrementa_Puntero_indice_mov
 301+ 9EC8
 302+ 9EC8 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9ECB 34               inc (hl)
 304+ 9ECC
 305+ 9ECC 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9ECF 01 02 00         ld bc,2
 307+ 9ED2 A7               and a
 308+ 9ED3 09               add hl,bc
 309+ 9ED4 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9ED7
 311+ 9ED7 7E               ld a,(hl)
 312+ 9ED8 A7               and a
 313+ 9ED9
 314+ 9ED9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ED9
 316+ 9ED9              ;    jr z,$
 317+ 9ED9
 318+ 9ED9              ;! Reinicia el Patrón de movimiento.
 319+ 9ED9
 320+ 9ED9 CC DE 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EDC
 322+ 9EDC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EDD
 324+ 9EDD C9               ret
 325+ 9EDE
 326+ 9EDE              ; ---------- --------- --------- ---------- ----------
 327+ 9EDE              ;
 328+ 9EDE              ;   15/01/24
 329+ 9EDE              ;
 330+ 9EDE              ;   Inicializa_Puntero_indice_mov
 331+ 9EDE
 332+ 9EDE              Inicializa_Puntero_indice_mov_2
 333+ 9EDE
 334+ 9EDE              ; Existe etiqueta de bucle principal???
 335+ 9EDE
 336+ 9EDE 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE1 24               inc h
 338+ 9EE2 25               dec h
 339+ 9EE3 28 05            jr z,2F
 340+ 9EE5
 341+ 9EE5 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9EE8 18 14            jr 3F
 343+ 9EEA
 344+ 9EEA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EEA
 346+ 9EEA 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9EED 47               ld b,a
 348+ 9EEE
 349+ 9EEE 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF1 2B           1 dec hl
 351+ 9EF2 2B               dec hl
 352+ 9EF3 10 FC            djnz 1B
 353+ 9EF5 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9EF8
 355+ 9EF8 AF               xor a
 356+ 9EF9 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9EFC 18 06            jr 4F
 358+ 9EFE
 359+ 9EFE 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F01 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9F04 C9           4 ret
 362+ 9F05
 363+ 9F05              ; ----------------------------------------------------------------------
 364+ 9F05              ;
 365+ 9F05              ;   30/01/24
 366+ 9F05              ;
 367+ 9F05              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F05
 369+ 9F05 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F08 CD 53 94         call Calcula_salto_en_BC
 371+ 9F0B 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F0E A7               and a
 373+ 9F0F ED 4A            adc hl,bc
 374+ 9F11 C9               ret
 375+ 9F12
 376+ 9F12              ; ----------------------------------------------------------------------
 377+ 9F12              ;
 378+ 9F12              ;   30/01/24
 379+ 9F12              ;
 380+ 9F12              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F12              ;
 382+ 9F12              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F12
 384+ 9F12 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F13 23               inc hl
 386+ 9F14 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F15 69               ld l,c
 388+ 9F16 60               ld h,b
 389+ 9F17 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1A C9               ret
 391+ 9F1B
# file closed: Movimiento.asm
2185  9F1B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1B              Motor_de_disparos_entidades
   2+ 9F1B
   3+ 9F1B 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9F1E FE 07            cp 7
   5+ 9F20 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F21
   7+ 9F21 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F23 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F26
  10+ 9F26 CD B7 90     1 call Extrae_address
  11+ 9F29 13               inc de
  12+ 9F2A 13               inc de
  13+ 9F2B ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F2F
  15+ 9F2F 23               inc hl
  16+ 9F30
  17+ 9F30 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F31 35               dec (hl)
  19+ 9F32 28 17            jr z,3F
  20+ 9F34
  21+ 9F34 23               inc hl
  22+ 9F35
  23+ 9F35 CD B7 90         call Extrae_address
  24+ 9F38              ;   (Puntero_de_impresion) del disparo en HL.
  25+ 9F38
  26+ 9F38
  27+ 9F38              ;! Velocidad del disparo de entidades.
  28+ 9F38
  29+ 9F38              ;    call NextScan
  30+ 9F38              ;    call NextScan
  31+ 9F38              ;    call NextScan
  32+ 9F38 CD D6 99         call NextScan
  33+ 9F3B CD D6 99         call NextScan
  34+ 9F3E
  35+ 9F3E              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  36+ 9F3E
  37+ 9F3E CD 4F 9F         call Fin_de_disparo_de_entidad
  38+ 9F41
  39+ 9F41 EB               ex de,hl
  40+ 9F42
  41+ 9F42 73               ld (hl),e
  42+ 9F43 23               inc hl
  43+ 9F44 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  44+ 9F45
  45+ 9F45 2A 27 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F48 18 02            jr 2F
  47+ 9F4A
  48+ 9F4A C9               ret
  49+ 9F4B
  50+ 9F4B EB           3 ex de,hl
  51+ 9F4C 10 D8        2 djnz 1B
  52+ 9F4E
  53+ 9F4E C9               ret
  54+ 9F4F
  55+ 9F4F              ; ------------- ------------- ------------
  56+ 9F4F              ;
  57+ 9F4F              ;   25/9/24
  58+ 9F4F
  59+ 9F4F              Fin_de_disparo_de_entidad
  60+ 9F4F
  61+ 9F4F 7C               ld a,h
  62+ 9F50 FE 54            cp $54
  63+ 9F52 D8               ret c
  64+ 9F53
  65+ 9F53 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  66+ 9F54
  67+ 9F54 5D               ld e,l
  68+ 9F55 54               ld d,h
  69+ 9F56
  70+ 9F56 21 E0 57         ld hl,$57e0
  71+ 9F59 ED 52            sbc hl,de
  72+ 9F5B
  73+ 9F5B 38 04            jr c,Elimina_disparo_entidad
  74+ 9F5D
  75+ 9F5D 6B               ld l,e
  76+ 9F5E 62               ld h,d
  77+ 9F5F
  78+ 9F5F D1               pop de
  79+ 9F60
  80+ 9F60 C9               ret
  81+ 9F61
  82+ 9F61              ; ------------ ----------- ------------
  83+ 9F61              ;
  84+ 9F61              ;   25/9/24
  85+ 9F61
  86+ 9F61              Elimina_disparo_entidad
  87+ 9F61
  88+ 9F61 21 14 8C         ld hl,Numero_de_disparos_de_entidades
  89+ 9F64 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
  90+ 9F65
  91+ 9F65 E1               pop hl
  92+ 9F66 E5               push hl
  93+ 9F67
  94+ 9F67 2B               dec hl
  95+ 9F68 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
  96+ 9F69
  97+ 9F69 16 06            ld d,6                                                              ; Contador
  98+ 9F6B AF               xor a                                                               ; Borrador
  99+ 9F6C
 100+ 9F6C 77           1 ld (hl),a
 101+ 9F6D 15               dec d
 102+ 9F6E 23               inc hl
 103+ 9F6F 20 FB            jr nz,1B
 104+ 9F71
 105+ 9F71 D1               pop de
 106+ 9F72
 107+ 9F72              ; Debugggggg
 108+ 9F72 21 26 8C         ld hl,Ctrl_5
 109+ 9F75 CB D6            set 2,(hl)
 110+ 9F77              ; ----------
 111+ 9F77
 112+ 9F77 21 00 00         ld hl,0
 113+ 9F7A
 114+ 9F7A C9               ret
 115+ 9F7B              ; --------------------------------------------------------------------------------------
 116+ 9F7B              ;
 117+ 9F7B              ;   19/09/24
 118+ 9F7B              ;
 119+ 9F7B
 120+ 9F7B              Genera_datos_de_impresion_disparos_Entidades
 121+ 9F7B
 122+ 9F7B              ;*  Exclusiones.
 123+ 9F7B
 124+ 9F7B 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 125+ 9F7E FE 07            cp 7
 126+ 9F80 C8               ret z
 127+ 9F81
 128+ 9F81              ; ---------------
 129+ 9F81
 130+ 9F81              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 131+ 9F81
 132+ 9F81 CD B0 90         call Inicia_Puntero_Disparo_Entidades
 133+ 9F84
 134+ 9F84 3E 07            ld a,7
 135+ 9F86 08               ex af,af                                                  ;? 7 Cajas como 7 soles. Contador de cajas alojado en A´.
 136+ 9F87
 137+ 9F87 CD B7 90     1 call Extrae_address
 138+ 9F8A
 139+ 9F8A 23               inc hl
 140+ 9F8B 7E               ld a,(hl)
 141+ 9F8C A7               and a
 142+ 9F8D
 143+ 9F8D 28 19            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 144+ 9F8F
 145+ 9F8F 2B               dec hl
 146+ 9F90
 147+ 9F90 ED 73 00 8C      ld (Stack),sp
 148+ 9F94 F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 149+ 9F95
 150+ 9F95              Genera_scanlines_de_los_disparos_de_entidades.
 151+ 9F95
 152+ 9F95 C1               pop bc
 153+ 9F96 E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 154+ 9F97              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 155+ 9F97 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 156+ 9F9B
 157+ 9F9B F1               pop af
 158+ 9F9C F1               pop af
 159+ 9F9D F1               pop af
 160+ 9F9E
 161+ 9F9E ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 162+ 9FA2
 163+ 9FA2 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 164+ 9FA3 CD D6 99         call NextScan
 165+ 9FA6 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 166+ 9FA7 C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 167+ 9FA8
 168+ 9FA8              Situa_en_siguiente_caja
 169+ 9FA8
 170+ 9FA8 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 171+ 9FA9 3D               dec a
 172+ 9FAA 28 0A            jr z,2F
 173+ 9FAC 08               ex af,af
 174+ 9FAD
 175+ 9FAD 13               inc de
 176+ 9FAE 13               inc de
 177+ 9FAF
 178+ 9FAF EB               ex de,hl
 179+ 9FB0
 180+ 9FB0 ED 7B 00 8C      ld sp,(Stack)
 181+ 9FB4 18 D1            jr 1B
 182+ 9FB6
 183+ 9FB6 ED 7B 00 8C  2 ld sp,(Stack)
 184+ 9FBA C9               ret
 185+ 9FBB
 186+ 9FBB              ; --------------------------------------------------------------------------------------
 187+ 9FBB              ;
 188+ 9FBB              ;   18/09/24
 189+ 9FBB              ;
 190+ 9FBB
 191+ 9FBB              Genera_disparo_de_entidad_maldosa
 192+ 9FBB
 193+ 9FBB              ;   Estructura de un disparo de entidades.
 194+ 9FBB
 195+ 9FBB              ;   Disparo_1 defw 0								; Puntero objeto.
 196+ 9FBB              ; 	defw 0											; Puntero de impresión.
 197+ 9FBB              ;	defw 0											; Control.
 198+ 9FBB
 199+ 9FBB              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 200+ 9FBB              ;   _de la entidad en el momento de disparar.
 201+ 9FBB
 202+ 9FBB              ;   El byte alto muestra la siguiente información:
 203+ 9FBB              ;
 204+ 9FBB              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 205+ 9FBB              ;                        _antes de desplazarse a derecha/izquierda.
 206+ 9FBB              ;
 207+ 9FBB              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 208+ 9FBB              ;
 209+ 9FBB              ;                        10xx ..... Izquierda.
 210+ 9FBB              ;                        01xx ..... Derecha.
 211+ 9FBB              ;                        00xx ..... Recto.
 212+ 9FBB
 213+ 9FBB              ;*  Exclusiones.
 214+ 9FBB
 215+ 9FBB              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 216+ 9FBB              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 217+ 9FBB
 218+ 9FBB 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 219+ 9FBE A7               and a
 220+ 9FBF C8               ret z
 221+ 9FC0
 222+ 9FC0 3A B5 8B         ld a,(Coordenada_y)
 223+ 9FC3 A7               and a
 224+ 9FC4 C8               ret z
 225+ 9FC5
 226+ 9FC5 3D               dec a
 227+ 9FC6 C8               ret z
 228+ 9FC7
 229+ 9FC7 FE 0E            cp 14
 230+ 9FC9 D0               ret nc
 231+ 9FCA
 232+ 9FCA              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 233+ 9FCA              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 234+ 9FCA              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 235+ 9FCA              ;
 236+ 9FCA
 237+ 9FCA FD 21 70 83      ld iy,Disparo_de_entidad
 238+ 9FCE
 239+ 9FCE              ;! Debuggg
 240+ 9FCE
 241+ 9FCE              ;   Decrementa el numero de disparos de entidades.
 242+ 9FCE
 243+ 9FCE 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 244+ 9FD1 35               dec (hl)
 245+ 9FD2
 246+ 9FD2              ;   Puntero de impresión del disparo en BC.
 247+ 9FD2
 248+ 9FD2 21 29 8C         ld hl,Puntero_de_impresion_disparo_de_entidad
 249+ 9FD5 4E               ld c,(hl)
 250+ 9FD6 23               inc hl
 251+ 9FD7 46               ld b,(hl)
 252+ 9FD8
 253+ 9FD8 CD B0 90         call Inicia_Puntero_Disparo_Entidades
 254+ 9FDB
 255+ 9FDB 2A 27 8C     1 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)              ; En la 1ª caja del índice.
 256+ 9FDE CD B7 90         call Extrae_address
 257+ 9FE1
 258+ 9FE1              ;   Comprobamos si la caja está vacía.
 259+ 9FE1
 260+ 9FE1 23               inc hl
 261+ 9FE2 7E               ld a,(hl)
 262+ 9FE3 A7               and a
 263+ 9FE4
 264+ 9FE4 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 265+ 9FE6
 266+ 9FE6              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 267+ 9FE6
 268+ 9FE6 2B               dec hl
 269+ 9FE7
 270+ 9FE7 FD 7D            ld a,iyl
 271+ 9FE9 77               ld (hl),a
 272+ 9FEA 23               inc hl
 273+ 9FEB FD 7C            ld a,iyh
 274+ 9FED 77               ld (hl),a                                           ; Guarda el (puntero objeto) del disparo en la caja.
 275+ 9FEE
 276+ 9FEE 23               inc hl
 277+ 9FEF
 278+ 9FEF 71               ld (hl),c
 279+ 9FF0 23               inc hl
 280+ 9FF1 70               ld (hl),b                                           ; Guarda el puntero de impresión.
 281+ 9FF2
 282+ 9FF2 23               inc hl
 283+ 9FF3
 284+ 9FF3 3A BE 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 285+ 9FF6 77               ld (hl),a
 286+ 9FF7
 287+ 9FF7 23               inc hl
 288+ 9FF8
 289+ 9FF8              ;! Ajusta el grado de inclinación del disparo.
 290+ 9FF8
 291+ 9FF8 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 292+ 9FFA
 293+ 9FFA              ; Determina tendencia del disparo.
 294+ 9FFA
 295+ 9FFA 3A 6E 89         ld a,(CX_Amadeus)
 296+ 9FFD 47               ld b,a
 297+ 9FFE 3A B4 8B         ld a,(Coordenada_X)
 298+ A001 90               sub b
 299+ A002 38 07            jr c,Disparo_a_derecha
 300+ A004
 301+ A004 FE 04        Disparo_a_izquierda cp 4
 302+ A006
 303+ A006 D8               ret c
 304+ A007 C8               ret z
 305+ A008
 306+ A008 CB FE            set 7,(hl)
 307+ A00A C9               ret
 308+ A00B
 309+ A00B 47           Disparo_a_derecha ld b,a
 310+ A00C 3E FF            ld a,$ff
 311+ A00E 90               sub b
 312+ A00F
 313+ A00F FE 04            cp 4
 314+ A011
 315+ A011 D8               ret c
 316+ A012 C8               ret z
 317+ A013
 318+ A013 CB F6            set 6,(hl)
 319+ A015 C9               ret
 320+ A016
 321+ A016              ;   --- --- ---
 322+ A016
 323+ A016              Situa_en_siguiente_disparo
 324+ A016
 325+ A016 13               inc de
 326+ A017 13               inc de
 327+ A018
 328+ A018 ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 329+ A01C 18 BD            jr 1B
 330+ A01E
 331+ A01E              ; --------------------------------------------------------------------------------------
 332+ A01E              ;
 333+ A01E              ;   31/08/24
 334+ A01E              ;
 335+ A01E
 336+ A01E              Compara_con_coordenadas_de_disparo
 337+ A01E
 338+ A01E 3A B5 8B         ld a,(Coordenada_y)
 339+ A021 47               ld b,a
 340+ A022 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 341+ A025 90               sub b
 342+ A026
 343+ A026              ; A = "0" ok
 344+ A026              ; A = "1" ok
 345+ A026
 346+ A026 28 08            jr z,Comprueba_coordenada_X
 347+ A028 3D               dec a
 348+ A029 28 05            jr z,Comprueba_coordenada_X
 349+ A02B
 350+ A02B              ; A = "$ff" ok
 351+ A02B
 352+ A02B FE FE            cp $fe
 353+ A02D 28 01            jr z,Comprueba_coordenada_X
 354+ A02F
 355+ A02F C9               ret
 356+ A030
 357+ A030              Comprueba_coordenada_X
 358+ A030
 359+ A030 3A B4 8B         ld a,(Coordenada_X)
 360+ A033 47               ld b,a
 361+ A034 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 362+ A037 7E               ld a,(hl)
 363+ A038 90               sub b
 364+ A039
 365+ A039              ; A = "0" ok
 366+ A039              ; A = "1" ok
 367+ A039
 368+ A039 28 09            jr z,Activa_Impacto_en_entidad
 369+ A03B 3D               dec a
 370+ A03C 28 06            jr z,Activa_Impacto_en_entidad
 371+ A03E
 372+ A03E              ; A = "2" ok
 373+ A03E
 374+ A03E 3D               dec a
 375+ A03F 28 03            jr z,Activa_Impacto_en_entidad
 376+ A041
 377+ A041              ; A = "$ff"
 378+ A041
 379+ A041 FE FD            cp $fd
 380+ A043 C0               ret nz
 381+ A044
 382+ A044              Activa_Impacto_en_entidad
 383+ A044
 384+ A044              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 385+ A044
 386+ A044 3E 02            ld a,2
 387+ A046 32 B7 8B         ld (Impacto),a
 388+ A049
 389+ A049              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 390+ A049
 391+ A049 11 C0 87         ld de,Indice_Explosion_entidades
 392+ A04C 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 393+ A04F
 394+ A04F 73               ld (hl),e
 395+ A050 23               inc hl
 396+ A051 72               ld (hl),d
 397+ A052
 398+ A052              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 399+ A052
 400+ A052 21 2B 8C         ld hl,Impacto2
 401+ A055 CB 9E            res 3,(hl)
 402+ A057
 403+ A057 C9               ret
 404+ A058
 405+ A058              ; --------------------------------------------------------------------------------------
 406+ A058              ;
 407+ A058              ;   11/09/24
 408+ A058              ;
 409+ A058
 410+ A058              Limpia_album_de_borrado_disparos
 411+ A058
 412+ A058 21 26 8C         ld hl,Ctrl_5
 413+ A05B CB 46            bit 0,(hl)
 414+ A05D C8               ret z
 415+ A05E CB 86            res 0,(hl)
 416+ A060
 417+ A060              Limpiando
 418+ A060
 419+ A060 AF               xor a
 420+ A061 2A 0E 8C         ld hl,(Album_de_borrado_disparos)
 421+ A064 77               ld (hl),a
 422+ A065 5D               ld e,l
 423+ A066 54               ld d,h
 424+ A067 1C               inc e                                           ; DE = HL+1
 425+ A068 01 3A 00         ld bc,$003a
 426+ A06B ED B0            ldir
 427+ A06D
 428+ A06D C9               ret
 429+ A06E
 430+ A06E
 431+ A06E              ; --------------------------------------------------------------------------------------
 432+ A06E              ;
 433+ A06E              ;   26/08/24
 434+ A06E              ;
 435+ A06E
 436+ A06E              Calcula_bytes_pintado_disparos
 437+ A06E
 438+ A06E 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 439+ A071 45               ld b,l
 440+ A072 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 441+ A075 7D               ld a,l
 442+ A076
 443+ A076 90               sub b
 444+ A077 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 445+ A07A
 446+ A07A C9               ret
 447+ A07B
 448+ A07B              ; --------------------------------------------------------------------------------------
 449+ A07B              ;
 450+ A07B              ;   11/09/24
 451+ A07B              ;
 452+ A07B              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 453+ A07B              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 454+ A07B              ;   _disparos que el álbum del FRAME actual).
 455+ A07B
 456+ A07B              Limpia_album_de_pintado_disparos
 457+ A07B
 458+ A07B              ;*   Exclusiones.
 459+ A07B
 460+ A07B 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 461+ A07E A7               and a
 462+ A07F C8               ret z
 463+ A080
 464+ A080              ; -----
 465+ A080
 466+ A080 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 467+ A083 47               ld b,a
 468+ A084 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 469+ A087
 470+ A087 90               sub b
 471+ A088
 472+ A088 C8               ret z
 473+ A089 D8               ret c
 474+ A08A
 475+ A08A 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 476+ A08D 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 477+ A08E AF               xor a                                                               ; "0".
 478+ A08F
 479+ A08F 77           1 ld (hl),a
 480+ A090 2C               inc l
 481+ A091 10 FC            djnz 1B
 482+ A093
 483+ A093 C9               ret
 484+ A094
 485+ A094              ; --------------------------------------------------------------------------------------
 486+ A094              ;
 487+ A094              ;   27/08/24
 488+ A094              ;
 489+ A094
 490+ A094              Motor_Disparos_Amadeus
 491+ A094
 492+ A094              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 493+ A094
 494+ A094 21 20 89         ld hl,Disparo_Amad+1
 495+ A097
 496+ A097 34               inc (hl)
 497+ A098 35               dec (hl)
 498+ A099
 499+ A099 C8               ret z
 500+ A09A
 501+ A09A              ;   Esta caja contiene un disparo.
 502+ A09A
 503+ A09A CD A1 A0         call Consulta_Impacto
 504+ A09D CC BA A0         call z,Mueve_disparo_Amadeus
 505+ A0A0
 506+ A0A0 C9               ret
 507+ A0A1
 508+ A0A1              ; ----------------------
 509+ A0A1              ;
 510+ A0A1              ;
 511+ A0A1              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 512+ A0A1              ;
 513+ A0A1              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 514+ A0A1
 515+ A0A1
 516+ A0A1              Consulta_Impacto
 517+ A0A1
 518+ A0A1              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 519+ A0A1              ;   _sea lo más coherente posible.
 520+ A0A1
 521+ A0A1 E5               push hl
 522+ A0A2 2B               dec hl
 523+ A0A3 CD 9B A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 524+ A0A6 E1               pop hl
 525+ A0A7 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 526+ A0A8
 527+ A0A8 C8               ret z
 528+ A0A9
 529+ A0A9 3A 2B 8C         ld a,(Impacto2)
 530+ A0AC CB DF            set 3,a
 531+ A0AE 32 2B 8C         ld (Impacto2),a
 532+ A0B1
 533+ A0B1 E5               push hl
 534+ A0B2 CD 88 A1         call Genera_coordenadas_de_disparo_Amadeus
 535+ A0B5 E1               pop hl
 536+ A0B6 CD D3 A0         call Elimina_disparo
 537+ A0B9
 538+ A0B9 C9               ret
 539+ A0BA
 540+ A0BA              ; ----------------------
 541+ A0BA              ;
 542+ A0BA              ;
 543+ A0BA              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 544+ A0BA
 545+ A0BA              Mueve_disparo_Amadeus
 546+ A0BA
 547+ A0BA CD B7 90         call Extrae_address
 548+ A0BD
 549+ A0BD CD E5 99         call PreviousScan
 550+ A0C0 CD E5 99         call PreviousScan
 551+ A0C3 CD E5 99         call PreviousScan
 552+ A0C6 CD E5 99         call PreviousScan
 553+ A0C9
 554+ A0C9              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 555+ A0C9
 556+ A0C9 7C               ld a,h
 557+ A0CA D6 40            sub $40
 558+ A0CC EB               ex de,hl
 559+ A0CD 38 04            jr c,Elimina_disparo
 560+ A0CF
 561+ A0CF               ; Introduce nuevo puntero_de_impresión en la caja.
 562+ A0CF
 563+ A0CF 73               ld (hl),e
 564+ A0D0 23               inc hl
 565+ A0D1 72               ld (hl),d
 566+ A0D2
 567+ A0D2 C9               ret
 568+ A0D3
 569+ A0D3              ; ----------------------
 570+ A0D3              ;
 571+ A0D3              ;   11/9/24
 572+ A0D3
 573+ A0D3              Elimina_disparo
 574+ A0D3
 575+ A0D3              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 576+ A0D3              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 577+ A0D3
 578+ A0D3              ;   Disparo_1A defw 0									; Puntero objeto.
 579+ A0D3              ;   	defw 0											; Puntero de impresión.
 580+ A0D3
 581+ A0D3 2B               dec hl
 582+ A0D4 2B               dec hl
 583+ A0D5
 584+ A0D5 AF               xor a
 585+ A0D6 77               ld (hl),a
 586+ A0D7 23               inc hl
 587+ A0D8 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 588+ A0D9
 589+ A0D9 23               inc hl
 590+ A0DA 77               ld (hl),a
 591+ A0DB 23               inc hl
 592+ A0DC 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 593+ A0DD
 594+ A0DD 3E 01            ld a,1
 595+ A0DF 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 596+ A0E2
 597+ A0E2 21 26 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 598+ A0E5 CB C6            set 0,(hl)
 599+ A0E7
 600+ A0E7 AF               xor a
 601+ A0E8 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 602+ A0E9
 603+ A0E9 C9               ret
 604+ A0EA
 605+ A0EA              ; --------------------------------------------------------------------------------------
 606+ A0EA              ;
 607+ A0EA              ;   21/8/24
 608+ A0EA              ;
 609+ A0EA
 610+ A0EA              Pinta_disparos
 611+ A0EA
 612+ A0EA              ;    ld a,(Ctrl_5)
 613+ A0EA              ;    bit 2,a
 614+ A0EA              ;    jr nz,$
 615+ A0EA
 616+ A0EA ED 73 00 8C      ld (Stack),sp
 617+ A0EE 06 02            ld b,2
 618+ A0F0
 619+ A0F0 ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 620+ A0F4
 621+ A0F4 D1           2 pop de
 622+ A0F5
 623+ A0F5 14               inc d
 624+ A0F6 15               dec d
 625+ A0F7
 626+ A0F7 28 1B            jr z,1F
 627+ A0F9
 628+ A0F9              Imprime_scanlines_de_disparo
 629+ A0F9
 630+ A0F9 E1               pop hl
 631+ A0FA
 632+ A0FA              ; Puntero objeto en DE.
 633+ A0FA              ; Puntero_de_impresión en HL.
 634+ A0FA
 635+ A0FA              ; 1er scanline.
 636+ A0FA
 637+ A0FA 1A               ld a,(de)
 638+ A0FB AE               xor (hl)
 639+ A0FC 77               ld (hl),a
 640+ A0FD
 641+ A0FD 13               inc de
 642+ A0FE 2C               inc l
 643+ A0FF
 644+ A0FF 1A               ld a,(de)
 645+ A100 AE               xor (hl)
 646+ A101 77               ld (hl),a
 647+ A102
 648+ A102              ; 2º scanline.
 649+ A102
 650+ A102 E1               pop hl
 651+ A103 1B               dec de
 652+ A104
 653+ A104 1A               ld a,(de)
 654+ A105 AE               xor (hl)
 655+ A106 77               ld (hl),a
 656+ A107
 657+ A107 13               inc de
 658+ A108 2C               inc l
 659+ A109
 660+ A109 1A               ld a,(de)
 661+ A10A AE               xor (hl)
 662+ A10B 77               ld (hl),a
 663+ A10C
 664+ A10C              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 665+ A10C
 666+ A10C 18 E6            jr 2B
 667+ A10E
 668+ A10E ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 669+ A112 18 E0            jr 2B
 670+ A114
 671+ A114 10 F8        1 djnz 3B
 672+ A116 ED 7B 00 8C      ld sp,(Stack)
 673+ A11A C9               ret
 674+ A11B
 675+ A11B              ; --------------------------------------------------------------------------------------
 676+ A11B              ;
 677+ A11B              ;   14/09/24
 678+ A11B              ;
 679+ A11B              ;   Modifica: HL y DE.
 680+ A11B
 681+ A11B
 682+ A11B              Genera_datos_de_impresion_disparos_Amadeus
 683+ A11B
 684+ A11B ED 73 00 8C      ld (Stack),sp
 685+ A11F 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 686+ A122 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 687+ A123
 688+ A123 14               inc d                                                     ;? Salimos si no hay disparo.
 689+ A124 15               dec d
 690+ A125
 691+ A125 28 12            jr z,Salida
 692+ A127
 693+ A127              Genera_scanlines_de_disparo_Amadeus
 694+ A127
 695+ A127 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 696+ A128              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 697+ A128 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 698+ A12C
 699+ A12C C1               pop bc
 700+ A12D C1               pop bc
 701+ A12E C1               pop bc
 702+ A12F
 703+ A12F ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 704+ A133
 705+ A133 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 706+ A134 CD E5 99         call PreviousScan
 707+ A137 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 708+ A138 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 709+ A139
 710+ A139              Salida
 711+ A139
 712+ A139 ED 7B 00 8C      ld sp,(Stack)
 713+ A13D
 714+ A13D C9               ret
 715+ A13E
 716+ A13E              ; --------------------------------------------------------------------------------------
 717+ A13E              ;
 718+ A13E              ;   12/09/24
 719+ A13E              ;
 720+ A13E
 721+ A13E              Genera_disparo_Amadeus
 722+ A13E
 723+ A13E              ;*  Exclusiones.
 724+ A13E
 725+ A13E 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 726+ A141 A7               and a
 727+ A142 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 728+ A143
 729+ A143 3D               dec a
 730+ A144 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 731+ A147
 732+ A147              Define_puntero_objeto_disparo
 733+ A147
 734+ A147              ;   Inicializamos contador.
 735+ A147
 736+ A147 06 00            ld b,0
 737+ A149
 738+ A149 2A 72 89         ld hl,(p.imp.amadeus)
 739+ A14C 2C               inc l
 740+ A14D
 741+ A14D 3E 80            ld a,$80
 742+ A14F BE               cp (hl)
 743+ A150 28 0D            jr z,1F
 744+ A152
 745+ A152 04               inc b
 746+ A153
 747+ A153 3E 60            ld a,$60
 748+ A155 BE               cp (hl)
 749+ A156 28 07            jr z,1F
 750+ A158
 751+ A158
 752+ A158 04               inc b
 753+ A159
 754+ A159 3E 18            ld a,$18
 755+ A15B BE               cp (hl)
 756+ A15C 28 01            jr z,1F
 757+ A15E
 758+ A15E 04               inc b
 759+ A15F
 760+ A15F              ;   Calcula el Puntero_de_impresión del disparo.
 761+ A15F
 762+ A15F              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 763+ A15F
 764+ A15F CD E5 99     1 call PreviousScan
 765+ A162
 766+ A162 78               ld a,b
 767+ A163 CB 3F            srl a
 768+ A165 28 03            jr z,4F
 769+ A167
 770+ A167              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 771+ A167 E5               push hl
 772+ A168 18 02            jr 5F
 773+ A16A 2D           4 dec l
 774+ A16B E5               push hl
 775+ A16C              ; ---
 776+ A16C
 777+ A16C              ;   Calcula el Puntero_objeto del disparo.
 778+ A16C
 779+ A16C 21 72 83     5 ld hl,Indice_disparo_Amadeus
 780+ A16F 04               inc b
 781+ A170 05               dec b
 782+ A171 28 04            jr z,2F
 783+ A173
 784+ A173              ;   Nos desplazamos por el índice de disparos.
 785+ A173
 786+ A173 2C           3 inc l
 787+ A174 2C               inc l
 788+ A175 10 FC            djnz 3B
 789+ A177
 790+ A177              ; --- Guarda el Puntero_objeto del disparo en la pila.
 791+ A177 CD B7 90     2 call Extrae_address
 792+ A17A E5               push hl
 793+ A17B              ; ---
 794+ A17B
 795+ A17B              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 796+ A17B              ; HL en el 1er .db de la caja.
 797+ A17B
 798+ A17B 21 1F 89         ld hl,Disparo_Amad
 799+ A17E
 800+ A17E 06 02            ld b,2
 801+ A180
 802+ A180 D1           6 pop de
 803+ A181 73               ld (hl),e
 804+ A182 23               inc hl
 805+ A183 72               ld (hl),d
 806+ A184 23               inc hl
 807+ A185
 808+ A185 10 F9            djnz 6B
 809+ A187
 810+ A187 C9               ret
 811+ A188
 812+ A188              Genera_coordenadas_de_disparo_Amadeus
 813+ A188
 814+ A188              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 815+ A188              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 816+ A188              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 817+ A188
 818+ A188 CD B7 90         call Extrae_address
 819+ A18B CD D6 94         call Genera_coordenadas
 820+ A18E
 821+ A18E 3D               dec a
 822+ A18F
 823+ A18F 21 2E 8C         ld hl,Coordenadas_disparo_certero
 824+ A192 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 825+ A193 23               inc hl
 826+ A194 3A B4 8B         ld a,(Coordenada_X)
 827+ A197 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 828+ A198
 829+ A198 AF               xor a
 830+ A199 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 831+ A19A
 832+ A19A C9               ret
 833+ A19B
 834+ A19B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 835+ A19B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 836+ A19B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 837+ A19B
 838+ A19B              ; ----------------------------------------------
 839+ A19B              ;
 840+ A19B              ;   27/08/24
 841+ A19B              ;
 842+ A19B              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 843+ A19B              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 844+ A19B
 845+ A19B              Detecta_impacto_en_disparo_de_Amadeus
 846+ A19B
 847+ A19B              Extraccion_de_datos
 848+ A19B
 849+ A19B 13               inc de
 850+ A19C 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 851+ A19D
 852+ A19D 5E               ld e,(hl)
 853+ A19E 23               inc hl
 854+ A19F 56               ld d,(hl)
 855+ A1A0
 856+ A1A0 23               inc hl
 857+ A1A1
 858+ A1A1 4E               ld c,(hl)
 859+ A1A2 23               inc hl
 860+ A1A3 46               ld b,(hl)
 861+ A1A4
 862+ A1A4 C5               push bc
 863+ A1A5 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 864+ A1A6
 865+ A1A6              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 866+ A1A6
 867+ A1A6 CD E5 99         call PreviousScan
 868+ A1A9 CD E5 99         call PreviousScan
 869+ A1AC
 870+ A1AC              Detecta_impacto_
 871+ A1AC
 872+ A1AC 1A               ld a,(de)
 873+ A1AD A6               and (hl)
 874+ A1AE C0               ret nz
 875+ A1AF
 876+ A1AF 13               inc de
 877+ A1B0 23               inc hl
 878+ A1B1
 879+ A1B1 1A               ld a,(de)
 880+ A1B2 A6               and (hl)
 881+ A1B3 C9               ret
 882+ A1B4
 883+ A1B4              ; -------------------------------------------------------------------------------------------------------------
 884+ A1B4              ;
 885+ A1B4              ;   8/8/24
 886+ A1B4              ;
 887+ A1B4              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 888+ A1B4              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 889+ A1B4              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 890+ A1B4              ;
 891+ A1B4              ;   MODIFICA: HL,DE,BC y A.
 892+ A1B4              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 893+ A1B4              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 894+ A1B4
 895+ A1B4              Colision_Entidad_Amadeus
 896+ A1B4
 897+ A1B4              ; Posible contacto de entidad con Amadeus. ?????
 898+ A1B4
 899+ A1B4              ; Exclusiones:
 900+ A1B4
 901+ A1B4 3A 4E 8C         ld a,(Shield)
 902+ A1B7 A7               and a
 903+ A1B8 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 904+ A1B9
 905+ A1B9 21 24 8C         ld hl,Ctrl_3
 906+ A1BC CB 76            bit 6,(hl)
 907+ A1BE C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 908+ A1BF
 909+ A1BF 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 910+ A1C2 CB 56            bit 2,(hl)
 911+ A1C4 C0               ret nz
 912+ A1C5
 913+ A1C5 3A B5 8B     	ld a,(Coordenada_y)
 914+ A1C8 FE 14        	cp $14
 915+ A1CA D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 916+ A1CB
 917+ A1CB 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 918+ A1CE A7               and a
 919+ A1CF C0               ret nz
 920+ A1D0
 921+ A1D0              Genera_coordenadas_X
 922+ A1D0
 923+ A1D0              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 924+ A1D0              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 925+ A1D0
 926+ A1D0              ;   Limpiamos almacenes.
 927+ A1D0
 928+ A1D0              ;    call Limpia_Coordenadas_X
 929+ A1D0
 930+ A1D0              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 931+ A1D0
 932+ A1D0 21 30 8C         ld hl,Coordenadas_X_Entidad
 933+ A1D3 3A B4 8B         ld a,(Coordenada_X)
 934+ A1D6 CD F8 A1         call Guarda_coordenadas_X
 935+ A1D9
 936+ A1D9              ;   Almacenamos las coordenadas X de Amadeus.
 937+ A1D9
 938+ A1D9 3A 6E 89         ld a,(CX_Amadeus)
 939+ A1DC CD F8 A1         call Guarda_coordenadas_X
 940+ A1DF CD 0C A2         call Compara_coordenadas_X
 941+ A1E2 C0               ret nz
 942+ A1E3
 943+ A1E3 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 944+ A1E5 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 945+ A1E8
 946+ A1E8 2A F3 8B         ld hl,(Puntero_store_caja)
 947+ A1EB 2C               inc l
 948+ A1EC 2C               inc l
 949+ A1ED 2C               inc l
 950+ A1EE 2C               inc l
 951+ A1EF 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 952+ A1F2
 953+ A1F2 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 954+ A1F5 CB D6            set 2,(hl)
 955+ A1F7
 956+ A1F7 C9               ret
 957+ A1F8
 958+ A1F8               ; ----- ----- ----- ----- -----
 959+ A1F8
 960+ A1F8 77           Guarda_coordenadas_X ld (hl),a
 961+ A1F9 3C               inc a
 962+ A1FA 2C               inc l
 963+ A1FB 77               ld (hl),a
 964+ A1FC 3C               inc a
 965+ A1FD 2C               inc l
 966+ A1FE 77               ld (hl),a
 967+ A1FF 2C               inc l
 968+ A200 C9               ret
 969+ A201
 970+ A201 AF           Limpia_Coordenadas_X xor a
 971+ A202 06 06            ld b,6
 972+ A204 21 33 8C         ld hl,Coordenadas_X_Amadeus
 973+ A207 77           1 ld (hl),a
 974+ A208 23               inc hl
 975+ A209 10 FC            djnz 1B
 976+ A20B C9               ret
 977+ A20C
 978+ A20C              ; ----- ----- ----- ----- -----
 979+ A20C
 980+ A20C              Compara_coordenadas_X
 981+ A20C
 982+ A20C DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 983+ A210 DD 7E 00         ld a,(ix+0)
 984+ A213 CD 21 A2         call Comparando
 985+ A216 C8               ret z
 986+ A217
 987+ A217 3C               inc a
 988+ A218 CD 30 A2         call Comparando_1
 989+ A21B C8               ret z
 990+ A21C
 991+ A21C 3C               inc a
 992+ A21D CD 30 A2         call Comparando_1
 993+ A220 C9               ret
 994+ A221
 995+ A221              ; ----- ----- ----- ----- -----
 996+ A221              ;
 997+ A221              ;   4/12/23
 998+ A221              ;
 999+ A221              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1000+ A221
1001+ A221              Comparando
1002+ A221
1003+ A221 DD 2C            inc ixl
1004+ A223 DD 2C            inc ixl
1005+ A225 DD 2C            inc ixl
1006+ A227
1007+ A227 DD 46 00         ld b,(ix+0)
1008+ A22A DD 4E 01         ld c,(ix+1)
1009+ A22D DD 56 02         ld d,(ix+2)
1010+ A230
1011+ A230 B8           Comparando_1 cp b
1012+ A231 C8               ret z
1013+ A232 B9               cp c
1014+ A233 C8               ret z
1015+ A234 BA               cp d
1016+ A235 C9               ret
1017+ A236
1018+ A236              ; -----------------------------------------------------------------------
1019+ A236              ;
1020+ A236              ;   04/7/24
1021+ A236              ;
1022+ A236
1023+ A236              Detecta_colision_nave_entidad
1024+ A236
1025+ A236              ; Exclusiones:
1026+ A236
1027+ A236              ; Salimos de la rutina si no hay advertencia de posible colisión.
1028+ A236
1029+ A236 21 2B 8C     	ld hl,Impacto2
1030+ A239 CB 56        	bit 2,(hl)
1031+ A23B C8           	ret z
1032+ A23C
1033+ A23C              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1034+ A23C
1035+ A23C 2A 74 89         ld hl,(Pamm_Amadeus)
1036+ A23F CD B7 90         call Extrae_address
1037+ A242 54               ld d,h
1038+ A243 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1039+ A244
1040+ A244 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1041+ A247 06 10            ld b,16                                        ; Contador de scanlines en B.
1042+ A249 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1043+ A24C
1044+ A24C C5           1 push bc
1045+ A24D 06 03            ld b,3
1046+ A24F E5               push hl
1047+ A250
1048+ A250              ; .db
1049+ A250
1050+ A250 1A           3 ld a,(de)
1051+ A251 A7               and a
1052+ A252 20 03            jr nz,4F
1053+ A254
1054+ A254 2C               inc l
1055+ A255 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1056+ A257
1057+ A257 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1058+ A259 28 04            jr z,2F
1059+ A25B
1060+ A25B              ; Impacto.
1061+ A25B FD 2D            dec iyl
1062+ A25D 28 22            jr z,5F
1063+ A25F
1064+ A25F 1C           2 inc e
1065+ A260 10 EE            djnz 3B
1066+ A262
1067+ A262 E1               pop hl
1068+ A263
1069+ A263              ; Hay salto de línea en el puntero de impresión ???
1070+ A263
1071+ A263 7C               ld a,h
1072+ A264 D6 57            sub $57
1073+ A266 20 0A            jr nz,6F
1074+ A268
1075+ A268              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1076+ A268
1077+ A268 2A 72 89         ld hl,(p.imp.amadeus)
1078+ A26B 3E 20            ld a,$20
1079+ A26D A7               and a
1080+ A26E 85               add l
1081+ A26F 6F               ld l,a
1082+ A270 18 01            jr 7F
1083+ A272
1084+ A272 24           6 inc h
1085+ A273
1086+ A273 C1           7 pop bc
1087+ A274 10 D6            djnz 1B
1088+ A276
1089+ A276              ;   Fin de la comparativa.
1090+ A276
1091+ A276              ;   NO HAY COLISIÓN !!!!!.
1092+ A276              ;
1093+ A276              ;   .db (Impacto) de Amadeus a "0".
1094+ A276              ;   RES el bit2 de (Impacto2).
1095+ A276              ;
1096+ A276              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1097+ A276              ;   Lo colocamos a "0".
1098+ A276
1099+ A276 21 2B 8C         ld hl,Impacto2
1100+ A279 CB 96            res 2,(hl)
1101+ A27B 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1102+ A27E 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1103+ A280 C9               ret
1104+ A281
1105+ A281              ;   COLISIÓN !!!!!.
1106+ A281              ;
1107+ A281              ;   .db (Impacto) de Amadeus a "1".
1108+ A281              ;   SET el bit3 de (Impacto2).
1109+ A281              ;
1110+ A281              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1111+ A281
1112+ A281 E1           5 pop hl
1113+ A282 C1               pop bc
1114+ A283
1115+ A283 21 71 89         ld hl,Impacto_Amadeus
1116+ A286 36 01            ld (hl),1
1117+ A288 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1118+ A28B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1119+ A28D
1120+ A28D 11 C0 87         ld de,Indice_Explosion_entidades
1121+ A290 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1122+ A293
1123+ A293 23               inc hl
1124+ A294 23               inc hl
1125+ A295 23               inc hl
1126+ A296
1127+ A296 73               ld (hl),e
1128+ A297 23               inc hl
1129+ A298 72               ld (hl),d
1130+ A299
1131+ A299              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1132+ A299
1133+ A299 11 60 88         ld de,Indice_Explosion_Amadeus
1134+ A29C 21 74 89         ld hl,Pamm_Amadeus
1135+ A29F
1136+ A29F 73               ld (hl),e
1137+ A2A0 23               inc hl
1138+ A2A1 72               ld (hl),d
1139+ A2A2
1140+ A2A2 C9               ret
1141+ A2A3
1142+ A2A3
1143+ A2A3
# file closed: Disparo.asm
2186  A2A3
2187  A2A3              	SAVESNA "Pruebas.sna", START
2188  A2A3
2189  A2A3
2190  A2A3
2191  A2A3
# file closed: Banco_de_pruebas.asm
