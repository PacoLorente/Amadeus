# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 17 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD DE 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 24 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 19 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 20 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 20 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CD 87        	defw Nivel_2
   7+ 87BE DA 87        	defw Nivel_3
   8+ 87C0 EA 87        	defw Nivel_4
   9+ 87C2 FC 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CD 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CE 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D2 01 02
  21+ 87D4 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D8 01 02
  22+ 87DA 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DB 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DF 01
  24+ 87E0 03 01 01 01  	db 3,1,1,1,1
  24+ 87E4 01
  25+ 87E5 03 01 01 01  	db 3,1,1,1,1
  25+ 87E9 01
  26+ 87EA 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EB 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EF 01
  28+ 87F0 04 01 01 01  	db 4,1,1,1,1
  28+ 87F4 01
  29+ 87F5 04 01 01 01  	db 4,1,1,1,1
  29+ 87F9 01
  30+ 87FA 02 03        	db 2,3
  31+ 87FC 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FD 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8801 01
  33+ 8802 05 01 01 01  	db 5,1,1,1,1
  33+ 8806 01
  34+ 8807 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880B 01
  35+ 880C 05 01 01 01  	db 5,1,1,1,1
  35+ 8810 01
  36+ 8811
  37+ 8811              ;---------------------------------------------------------------------------------------------------------------
  38+ 8811              ;
  39+ 8811              ;   3/9/23
  40+ 8811              ;
  41+ 8811              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8811              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8811              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8811              ;	_en la caja DRAW correspondiente.
  45+ 8811              ;
  46+ 8811              ;	MODIFICA: HL,DE y A.
  47+ 8811              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8811
  49+ 8811              Inicializa_Punteros_de_nivel
  50+ 8811
  51+ 8811 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8814 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8817 CD 83 8C     	call Extrae_address
  54+ 881A 7E           	ld a,(hl)
  55+ 881B 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881E 23           	inc hl
  57+ 881F 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8822 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8823
  60+ 8823              ;---------------------------------------------------------------------------------------------------------------
  61+ 8823              ;
  62+ 8823              ;   13/5/23
  63+ 8823              ;
  64+ 8823              ;	Destruye A,BC,HL,DE
  65+ 8823
  66+ 8823              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8823              ;	_del juego.
  68+ 8823
  69+ 8823              Prepara_cajas
  70+ 8823
  71+ 8823              ; Preparamos los punteros de las cajas.
  72+ 8823
  73+ 8823 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8826 CD 83 8C     	call Extrae_address
  75+ 8829 CD 66 88     	call Avanza_caja
  76+ 882C
  77+ 882C CD AA 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882F
  79+ 882F 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8832
  81+ 8832              ; HL está en los datos del nivel correspondiente.
  82+ 8832              ; B actuará como contador de cajas.
  83+ 8832
  84+ 8832 C5           1 push bc
  85+ 8833
  86+ 8833 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8834 CD 57 88     	call PreparaBC
  88+ 8837
  89+ 8837 21 96 87     	ld hl,Indice_de_entidades
  90+ 883A CD 5F 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883D 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8840
  93+ 8840 CD 70 88     	call Datos_de_entidad_a_caja
  94+ 8843
  95+ 8843 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8846 CD 83 8C     	call Extrae_address
  97+ 8849 CD 66 88     	call Avanza_caja
  98+ 884C
  99+ 884C 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884F 23           	inc hl
 101+ 8850 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8853
 103+ 8853 C1           	pop bc
 104+ 8854 10 DC        	djnz 1B
 105+ 8856 C9           	ret
 106+ 8857
 107+ 8857 CB 27        PreparaBC sla a
 108+ 8859 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885B 4F           	ld c,a
 110+ 885C 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885E C9           	ret
 112+ 885F
 113+ 885F A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8860 ED 4A        	adc hl,bc
 115+ 8862 CD 83 8C     	call Extrae_address
 116+ 8865 C9           	ret
 117+ 8866
 118+ 8866 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8869 13           	inc de
 120+ 886A 13           	inc de
 121+ 886B EB           	ex de,hl
 122+ 886C 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886F C9           	ret
 124+ 8870
 125+ 8870              Datos_de_entidad_a_caja
 126+ 8870
 127+ 8870              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8870
 129+ 8870
 130+ 8870 ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8874
 132+ 8874 01 02 00     	ld bc,2
 133+ 8877 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8879
 135+ 8879 01 07 00     	ld bc,7
 136+ 887C CD A4 88     	call Situa_DE
 137+ 887F
 138+ 887F 01 05 00     	ld bc,5
 139+ 8882 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8884
 141+ 8884 01 04 00     	ld bc,4
 142+ 8887 CD A4 88     	call Situa_DE
 143+ 888A
 144+ 888A 01 07 00     	ld bc,7
 145+ 888D ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888F
 147+ 888F 01 12 00     	ld bc,18
 148+ 8892 CD A4 88     	call Situa_DE
 149+ 8895
 150+ 8895 01 02 00     	ld bc,2
 151+ 8898 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 889A
 153+ 889A              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 889A              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 889A
 156+ 889A 01 0F 00     	ld bc,15									; *****
 157+ 889D CD A4 88     	call Situa_DE
 158+ 88A0
 159+ 88A0 3E 03        	ld a,3
 160+ 88A2 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A3
 162+ 88A3 C9           	ret
 163+ 88A4
 164+ 88A4 EB           Situa_DE ex de,hl
 165+ 88A5 A7           	and a
 166+ 88A6 ED 4A        	adc hl,bc
 167+ 88A8 EB           	ex de,hl
 168+ 88A9 C9           	ret
 169+ 88AA
 170+ 88AA              ;---------------------------------------------------------------------------------------------------------------
 171+ 88AA              ;
 172+ 88AA              ;	21/5/23
 173+ 88AA              ;
 174+ 88AA              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88AA              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88AA              ;
 177+ 88AA              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88AA              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88AA              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88AA              ;
 181+ 88AA              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88AA              ;	MODIFICA: A y B.
 183+ 88AA              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88AA
 185+ 88AA              Admin_num_entidades
 186+ 88AA
 187+ 88AA              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88AA
 189+ 88AA 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AD A7           	and a
 191+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AE              ;	jr z,$
 193+ 88AE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AE
 195+ 88AE 20 03        	jr nz,3F
 196+ 88B0
 197+ 88B0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88B0
 199+ 88B0 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B3
 201+ 88B3 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B6 FE 0A        	cp 10
 203+ 88B8 38 08        	jr c,1F
 204+ 88BA
 205+ 88BA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88BA              ; Actualizamos variables.
 207+ 88BA
 208+ 88BA 3E 0A        	ld a,10
 209+ 88BC 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BF 47           	ld b,a
 211+ 88C0 18 04        	jr 2F
 212+ 88C2
 213+ 88C2              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C2              ; (Numero_de_entidades)="0".
 215+ 88C2
 216+ 88C2 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C5 47           	ld b,a
 218+ 88C6 C9           2 ret
# file closed: Niveles.asm
  92  88C7
  93  88C7              ; ******************************************************************************************************************************************************************************************
  94  88C7              ; Constantes.
  95  88C7              ; ******************************************************************************************************************************************************************************************
  96  88C7              ;
  97  88C7              ; 4/9/23
  98  88C7              ;
  99  88C7              ; Constantes generales.
 100  88C7              ;
 101  88C7
 102  88C7              Sprite_vacio equ $f000
 103  88C7              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C7              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C7              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C7              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C7
 108  88C7              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C7              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C7              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C7              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C7              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C7              ;
 114  88C7              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C7              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C7              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C7              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C7              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C7              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C7
 121  88C7              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C7              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C7
 124  88C7
 125  88C7
 126  88C7              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C7
 128  88C7              ; ******************************************************************************************************************************************************************************************
 129  88C7              ; Variables.
 130  88C7              ; ******************************************************************************************************************************************************************************************
 131  88C7              ;
 132  88C7              ; 28/07/23
 133  88C7              ;
 134  88C7              ; Variables de DRAW. (Motor principal).
 135  88C7              ;
 136  88C7              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C7
 138  88C7 00           Filas db 0												; Filas. [DRAW]
 139  88C8 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C9 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CB 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CF
 145  88CF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CF
 147  88CF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88D0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88D0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88D0 00           Attr db 0												; Atributos de la entidad:
 151  88D1
 152  88D1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D1              ;
 154  88D1              ;	COLORES: 0 ..... NEGRO
 155  88D1              ;    		 1 ..... AZUL
 156  88D1              ; 			 2 ..... ROJO
 157  88D1              ;			 3 ..... MAGENTA
 158  88D1              ; 			 4 ..... VERDE
 159  88D1              ; 			 5 ..... CIAN
 160  88D1              ;			 6 ..... AMARILLO
 161  88D1              ; 			 7 ..... BLANCO
 162  88D1
 163  88D1 00 00        Indice_Sprite_der defw 0
 164  88D3 00 00        Indice_Sprite_izq defw 0
 165  88D5 00 00        Puntero_DESPLZ_der defw 0
 166  88D7 00 00        Puntero_DESPLZ_izq defw 0
 167  88D9
 168  88D9 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DB 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DC
 171  88DC              ; Variables de objeto. (Características).
 172  88DC
 173  88DC 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DD 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DE 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DF 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88E0
 178  88E0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E1 00 00 00...  Variables_de_borrado ds 6
 182  88E7
 183  88E7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E9 00 00        	defw 0
 185  88EB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88ED 00 00 00 00  	db 0,0,0,0
 187  88F1
 188  88F1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F1
 190  88F1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F2              ;
 196  88F2              ; 														DESCRIPCIÖN:
 197  88F2              ;
 198  88F2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F2              ;
 212  88F2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F2
 216  88F2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F2
 218  88F2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F6 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F8              ;
 222  88F8              ;
 223  88F8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F9 00           Incrementa_puntero_backup db 0
 227  88FA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FE              ;
 233  88FE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FE              ;
 237  88FE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FE              ;
 242  88FE              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FE
 246  88FE
 247  88FE              ; Variables de funcionamiento. [DRAW].
 248  88FE
 249  88FE 00           Columnas db 0
 250  88FF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8901              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8901 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8902
 254  8902              ; variables de control general.
 255  8902
 256  8902 00           Ctrl_2 db 0
 257  8903              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8903              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8903              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8903              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8903              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8903              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8903              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8903              ;
 265  8903              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8903              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8903              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8903              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8903              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8903
 271  8903 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8904
 273  8904              ;! 61 Bytes por entidad.
 274  8904
 275  8904              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8904              ;					         		---------;      ;---------
 277  8904
 278  8904
 279  8904              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8904
 281  8904 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8905
 283  8905              ;														DESCRIPCIÓN:
 284  8905              ;
 285  8905              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8905              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8905              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8905              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8905              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8905              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8905
 292  8905              ;														BIT 3, Recarga de nueva oleada.
 293  8905              ;														BIT 4, Recarga de nueva oleada.
 294  8905              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8905              ;														BIT 6, **** Frame completo.
 296  8905              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8905
 298  8905 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8907              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8907              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8907              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8907
 303  8907              ; Ctrl_3 db 0											; Byte de control de propósito general.
 304  8907
 305  8907              ;														DESCRIPCIÓN:
 306  8907              ;
 307  8907              ;														BIT 0,
 308  8907
 309  8907              ; Gestión de ENTIDADES y CAJAS.
 310  8907
 311  8907 00 00        Puntero_store_caja defw 0
 312  8909 00 00        Puntero_restore_caja defw 0
 313  890B 00 00        Indice_restore_caja defw 0
 314  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890E 00           Numero_parcial_de_entidades db 0
 316  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 317  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8911              ;														; _ (Numero_de_malotes)="0".
 321  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8915              ;														; _ puntero (Indice_entidades).
 324  8915
 325  8915
 326  8915              ;---------------------------------------------------------------------------------------------------------------
 327  8915              ;
 328  8915              ;	2/9/23
 329  8915              ;
 330  8915              ;	Álbumes.
 331  8915
 332  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8917              ;														; _variable para almacenar lo posición del puntero_
 334  8917              ; 														; _de pila, SP.
 335  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891B 00 00        Stack_snapshot defw 0
 339  891D 00 00        Stack_snapshot_disparos defw 0
 340  891F
 341  891F 00 00        End_Snapshot defw 0
 342  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8923              ;														; _el snapshot de los registros del siguiente disparo.
 345  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8925 00 00        End_Snapshot_1 defw 0
 348  8927 00 00        End_Snapshot_disparos_1 defw 0
 349  8929 00 00        End_Snapshot_2 defw 0
 350  892B 00 00        End_Snapshot_disparos_2 defw 0
 351  892D 00 00        End_Snapshot_3 defw 0
 352  892F 00 00        End_Snapshot_disparos_3 defw 0
 353  8931
 354  8931 00 00        Puntero_indice_album_de_fotos defw 0
 355  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8935
 357  8935 00 00        Puntero_indice_End_Snapshot defw 0
 358  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8939 00 00        Puntero_de_End_Snapshot defw 0
 360  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893D
 362  893D 00           Semaforo db 0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 363  893E              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 364  893E
 365  893E              ;---------------------------------------------------------------------------------------------------------------
 366  893E
 367  893E              ; Gestión de Disparos.
 368  893E
 369  893E 00           Numero_de_disparotes db 0
 370  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 371  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 372  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 373  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 374  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 375  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 376  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 377  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 378  8946              ;														; _produzca colisión.
 379  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 380  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 381  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 382  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 383  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 384  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 385  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 386  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 387  8951
 388  8951              ;---------------------------------------------------------------------------------------------------------------
 389  8951
 390  8951              ; Relojes y temporizaciones.
 391  8951
 392  8951 00           Contador_de_frames db 0
 393  8952 00           Contador_de_frames_2 db 0
 394  8953
 395  8953 04           Clock_explosion db 4
 396  8954 1E           Clock_Entidades_en_curso db 30
 397  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 398  8956              ;														; Repite la oleada de entidades.
 399  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 400  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 401  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 402  8959
 403  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 404  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 405  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 406  895C
 407  895C              ;---------------------------------------------------------------------------------------------------------------
 408  895C
 409  895C              ; Gestión de NIVELES.
 410  895C
 411  895C 00           Nivel db 0												; Nivel actual del juego.
 412  895D 00 00        Puntero_indice_NIVELES defw 0
 413  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 414  8961              ; 														; _ que definen el NIVEL.
 415  8961              ; Y todo comienza aquí .....
 416  8961              ;
 417  8961              ; Rutina principal *************************************************************************************************************************************************************************
 418  8961              ;
 419  8961              ;	14/11/22
 420  8961
 421  8961              START
 422  8961
 423  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 424  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 425  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 426  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 427  896A F3           	DI
 428  896B
 429  896B 3E 07        	ld a,%00000111
 430  896D CD 4D 99     	call Cls
 431  8970
 432  8970 CD 5C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 433  8973
 434  8973              ; INICIALIZACIÓN.
 435  8973
 436  8973 CD 11 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 437  8976
 438  8976 CD 23 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 439  8979
 440  8979 CD 7E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 441  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 442  897C CD 94 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 443  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 444  897F              ; ----------
 445  897F
 446  897F CD 0C 8D     	call Restore_entidad
 447  8982
 448  8982 21 0E 89     	ld hl,Numero_parcial_de_entidades
 449  8985 46           	ld b,(hl)
 450  8986 04           	inc b
 451  8987 05           	dec b
 452  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 453  898A
 454  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 455  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 456  898A              ;	Pintamos el resto de entidades:
 457  898A
 458  898A              ;	INICIA ENTIDADES !!!!!
 459  898A
 460  898A C5           1 push bc  												; Guardo el contador de entidades.
 461  898B CD 4F 8B     	call Inicia_entidad
 462  898E C1           	pop bc
 463  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 464  8991
 465  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 466  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 467  8991
 468  8991 3A 04 89     	ld a,(Ctrl_1)
 469  8994 CB 5F        	bit 3,a
 470  8996 20 00        	jr nz,5F											; Loop
 471  8998
 472  8998              ; 	INICIA AMADEUS !!!!!
 473  8998
 474  8998              3
 475  8998
 476  8998              ;	call Restore_Amadeus
 477  8998              ;	call Inicia_Puntero_objeto
 478  8998              ;	call Draw
 479  8998              ;	call Guarda_foto_registros
 480  8998              ;	call Guarda_datos_de_borrado_Amadeus
 481  8998
 482  8998              ;	ld de,Amadeus_db
 483  8998              ;	call Store_Amadeus
 484  8998
 485  8998              ; 	INICIA DISPAROS !!!!!
 486  8998
 487  8998              ;	call Inicia_Puntero_Disparo_Entidades
 488  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 489  8998
 490  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 491  8998
 492  8998 CD 7E 8B     5 call Inicia_punteros_de_cajas
 493  899B CD 0C 8D     	call Restore_entidad
 494  899E
 495  899E 3A 04 89     	ld a,(Ctrl_1)
 496  89A1 CB 5F        	bit 3,a
 497  89A3 28 07        	jr z,6F
 498  89A5
 499  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 500  89A5
 501  89A5 21 04 89     	ld hl,Ctrl_1
 502  89A8 CB 9E        	res 3,(hl)
 503  89AA 18 03        	jr Main
 504  89AC
 505  89AC
 506  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 507  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 508  89AC              ; _ para situarnos en el siguiente album.
 509  89AC
 510  89AC CD C5 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 511  89AF
 512  89AF
 513  89AF              ; ------------------------------------
 514  89AF
 515  89AF              Main
 516  89AF              ;
 517  89AF              ;	3/8/23
 518  89AF
 519  89AF              ; 	ei
 520  89AF
 521  89AF 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 522  89B2 47           	ld b,a
 523  89B3 3A 51 89     	ld a,(Contador_de_frames)
 524  89B6 B8           	cp b
 525  89B7 20 18        	jr nz,13F
 526  89B9
 527  89B9 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 528  89BC 47           	ld b,a
 529  89BD 3A 0F 89     	ld a,(Entidades_en_curso)
 530  89C0 B8           	cp b
 531  89C1 28 0E        	jr z,13F
 532  89C3 30 0C        	jr nc,13F
 533  89C5
 534  89C5 3C           	inc a
 535  89C6 32 0F 89     	ld (Entidades_en_curso),a
 536  89C9
 537  89C9 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 538  89CC
 539  89CC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 540  89CC              ;! _ IMPREDECIBLE !!!!
 541  89CC
 542  89CC C6 64        	add 100
 543  89CE 32 54 89     	ld (Clock_Entidades_en_curso),a
 544  89D1
 545  89D1              ; Habilita disparos.
 546  89D1
 547  89D1 21 56 89     13 ld hl,Disparo_Amadeus
 548  89D4 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 549  89D7 CD 11 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 550  89DA
 551  89DA 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 552  89DD 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 553  89E0 CD 11 9D     	call Habilita_disparos
 554  89E3
 555  89E3              ; COLISIONES.
 556  89E3
 557  89E3 CD 22 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 558  89E6
 559  89E6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 560  89E6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 561  89E6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 562  89E6
 563  89E6 AF           	xor a
 564  89E7 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 565  89EA
 566  89EA CD 7E 8B     	call Inicia_punteros_de_cajas
 567  89ED CD 0C 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 568  89F0              ; 														; _ en DRAW.
 569  89F0 3A C7 88     	ld a,(Filas)
 570  89F3 A7           	and a
 571  89F4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 572  89F6 CD 1E 8D     	call Incrementa_punteros_de_cajas
 573  89F9 18 F2        	jr 12B
 574  89FB
 575  89FB              ; ---------------------------------------------------------------------------------------
 576  89FB
 577  89FB 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 578  89FE 47               ld b,a
 579  89FF A7           	and a
 580  8A00 20 14        	jr nz,11F
 581  8A02
 582  8A02 21 04 89     	ld hl,Ctrl_1
 583  8A05 CB 66        	bit 4,(hl)
 584  8A07 C2 94 8A     	jp nz,16F
 585  8A0A
 586  8A0A 21 04 89     	ld hl,Ctrl_1
 587  8A0D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 588  8A0F
 589  8A0F 3A 51 89     	ld a,(Contador_de_frames)
 590  8A12 3C           	inc a
 591  8A13 32 55 89     	ld (Activa_recarga_cajas),a
 592  8A16
 593  8A16              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 594  8A16
 595  8A16 3A 0F 89     11 ld a,(Entidades_en_curso)
 596  8A19 A7           	and a
 597  8A1A CA 94 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 598  8A1D 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 599  8A1E
 600  8A1E              ; Código que ejecutamos con cada entidad:
 601  8A1E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 602  8A1E
 603  8A1E C5           15 push bc 												; Nº de entidades en curso.
 604  8A1F
 605  8A1F              ; Impacto ???
 606  8A1F
 607  8A1F 3A E0 88     	ld a,(Impacto)
 608  8A22 A7           	and a
 609  8A23 28 32        	jr z,8F
 610  8A25
 611  8A25              ; Hay Impacto en esta entidad.
 612  8A25
 613  8A25 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 614  8A28 35           	dec (hl)
 615  8A29 20 63        	jr nz,17F
 616  8A2B
 617  8A2B              ;! Velocidad de la animación de la explosión.
 618  8A2B
 619  8A2B 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 620  8A2D              ;														; _,(velocidad de la explosión).
 621  8A2D
 622  8A2D              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 623  8A2D 18 FE        	jr $
 624  8A2F
 625  8A2F CD CD 8D     	call Repone_datos_de_borrado
 626  8A32 CD 25 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 627  8A35
 628  8A35
 629  8A35              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 630  8A35
 631  8A35 3A 02 89     	ld a,(Ctrl_2)
 632  8A38 CB 4F        	bit 1,a
 633  8A3A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 634  8A3C
 635  8A3C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 636  8A3C
 637  8A3C 3A CF 88     	ld a,(CTRL_DESPLZ)
 638  8A3F A7           	and a
 639  8A40 20 08        	jr nz,18F
 640  8A42
 641  8A42 21 84 84     	ld hl,Indice_Explosion_2x2-2
 642  8A45 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 643  8A48 18 06        	jr 19F
 644  8A4A
 645  8A4A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 646  8A4D 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 647  8A50
 648  8A50 21 02 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 649  8A53 CB CE        	set 1,(hl)
 650  8A55 18 22        	jr 7F
 651  8A57
 652  8A57              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 653  8A57              ; _con las coordenadas de la entidad almacenada en DRAW.
 654  8A57
 655  8A57 3A 04 89     8 ld a,(Ctrl_1)
 656  8A5A CB 57        	bit 2,a
 657  8A5C 28 1B        	jr z,7F
 658  8A5E
 659  8A5E 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 660  8A61 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 661  8A62              ;														; E contiene la coordenada_X del disparo.
 662  8A62 2A CD 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 663  8A65              ;														; H FILA, (Coordenada_y de la entidad).
 664  8A65 A7           	and a
 665  8A66 ED 52        	sbc hl,de
 666  8A68
 667  8A68 CD 59 92     	call Determina_resultado_comparativa
 668  8A6B
 669  8A6B 78           	ld a,b
 670  8A6C A7           	and a
 671  8A6D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 672  8A6F
 673  8A6F              ; ----- ----- -----
 674  8A6F
 675  8A6F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 676  8A71 32 E0 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 677  8A74
 678  8A74 21 04 89     	ld hl,Ctrl_1
 679  8A77 CB 96        	res 2,(hl)
 680  8A79
 681  8A79 CD EB 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 682  8A7C
 683  8A7C 3A F1 88     	ld a,(Ctrl_0)
 684  8A7F CB 67        	bit 4,a
 685  8A81 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 686  8A83
 687  8A83              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 688  8A83              ; [[[
 689  8A83 CD A7 8D     	call Detecta_disparo_entidad
 690  8A86              ; ]]]
 691  8A86
 692  8A86 CD 5F 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 693  8A89              ;	call Guarda_datos_de_borrado
 694  8A89
 695  8A89 21 F1 88     	ld hl,Ctrl_0
 696  8A8C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 697  8A8E
 698  8A8E CD D1 8C     17 call Store_Restore_cajas
 699  8A91
 700  8A91 C1           	pop bc
 701  8A92 10 8A        	djnz 15B
 702  8A94
 703  8A94              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 704  8A94              ; Hemos gestionado todas las unidades.
 705  8A94              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 706  8A94
 707  8A94              ;	ld hl,Ctrl_1
 708  8A94              ;	res 2,(hl)
 709  8A94
 710  8A94 CD C5 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 711  8A97              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 712  8A97              ; ----------------------------------------
 713  8A97
 714  8A97 3A 04 89     	ld a,(Ctrl_1) 										; Existe Loop?
 715  8A9A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 716  8A9C CA AF 89     	jp z,Main
 717  8A9F
 718  8A9F 3A 51 89     	ld a,(Contador_de_frames)
 719  8AA2 47           	ld b,a
 720  8AA3 3A 55 89     	ld a,(Activa_recarga_cajas)
 721  8AA6 B8           	cp b
 722  8AA7 28 08        	jr z,20F
 723  8AA9
 724  8AA9 21 04 89     	ld hl,Ctrl_1
 725  8AAC CB E6        	set 4,(hl)
 726  8AAE C3 AF 89     	jp Main
 727  8AB1
 728  8AB1 21 04 89     20 ld hl,Ctrl_1
 729  8AB4 CB A6        	res 4,(hl)
 730  8AB6
 731  8AB6 3A 51 89     	ld a,(Contador_de_frames)
 732  8AB9
 733  8AB9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 734  8AB9              ;! _ IMPREDECIBLE !!!!
 735  8AB9
 736  8AB9 C6 0A        	add 10
 737  8ABB 32 54 89     	ld (Clock_Entidades_en_curso),a
 738  8ABE
 739  8ABE C3 76 89     	jp 4B
 740  8AC1
 741  8AC1 C9           	ret
 742  8AC2
 743  8AC2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 744  8AC2
 745  8AC2              Gestiona_Amadeus
 746  8AC2
 747  8AC2 3E 04            ld a,4
 748  8AC4 D3 FE        	out ($fe),a											; Azul.
 749  8AC6
 750  8AC6 CD 33 8D     	call Restore_Amadeus
 751  8AC9
 752  8AC9              ;! Activa/desactiva impacto con Amadeus.
 753  8AC9
 754  8AC9 3A E0 88     	ld a,(Impacto)
 755  8ACC A7           	and a
 756  8ACD 20 FE        	jr nz,$
 757  8ACF
 758  8ACF CD 3C 8B     	call Mov_Amadeus
 759  8AD2
 760  8AD2 3A F1 88     	ld a,(Ctrl_0)
 761  8AD5 CB 67        	bit 4,a
 762  8AD7 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 763  8AD9
 764  8AD9 CD 5F 8B     	call Guarda_foto_entidad_a_pintar
 765  8ADC CD AD 8D     	call Guarda_datos_de_borrado_Amadeus
 766  8ADF
 767  8ADF 21 F1 88     14 ld hl,Ctrl_0
 768  8AE2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 769  8AE4
 770  8AE4 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 771  8AE7 CD 45 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 772  8AEA
 773  8AEA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 774  8AEA
 775  8AEA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 776  8AEA
 777  8AEA              ;	call Calcula_numero_de_disparotes
 778  8AEA
 779  8AEA C9           	ret
 780  8AEB
 781  8AEB              ; --------------------------------------------------------------------------------------------------------------
 782  8AEB              ;
 783  8AEB              ;	27/05/23
 784  8AEB
 785  8AEB              Mov_obj
 786  8AEB
 787  8AEB 3A 02 89     	ld a,(Ctrl_2)
 788  8AEE CB 4F        	bit 1,a
 789  8AF0 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 790  8AF2
 791  8AF2              ; Explosión:
 792  8AF2
 793  8AF2 3A 03 89     	ld a,(Frames_explosion)
 794  8AF5 A7           	and a
 795  8AF6 20 11        	jr nz,4F
 796  8AF8
 797  8AF8              ; Una alimaña menos!!!!!!!!!1
 798  8AF8
 799  8AF8 CD 4E 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 800  8AFB 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 801  8AFE 35           	dec (hl)
 802  8AFF 21 0F 89     	ld hl,Entidades_en_curso
 803  8B02 35           	dec (hl)
 804  8B03 21 0D 89     	ld hl,Numero_de_entidades
 805  8B06 35           	dec (hl)
 806  8B07 18 32        	jr 3F
 807  8B09
 808  8B09              ; -----
 809  8B09
 810  8B09              ;	`Movemos´ la explosión.
 811  8B09
 812  8B09 2A D5 88     4 ld hl,(Puntero_DESPLZ_der)
 813  8B0C 23           	inc hl
 814  8B0D 23           	inc hl
 815  8B0E 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 816  8B11 CD 83 8C     	call Extrae_address
 817  8B14 22 CB 88     	ld (Puntero_objeto),hl
 818  8B17
 819  8B17 21 03 89     	ld hl,Frames_explosion
 820  8B1A 35           	dec (hl)
 821  8B1B
 822  8B1B              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 823  8B1B 18 1E        	jr 3F
 824  8B1D
 825  8B1D AF           2 xor a
 826  8B1E 32 F1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 827  8B21
 828  8B21              ; Movemos Entidades malignas.
 829  8B21
 830  8B21 CD BC 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 831  8B24
 832  8B24 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 833  8B27 CB 67        	bit 4,a
 834  8B29 C8           	ret z
 835  8B2A
 836  8B2A              ; Ha habido desplazamiento de la entidad maligna.
 837  8B2A              ; Ha llegado a zona de AMADEUS ???
 838  8B2A
 839  8B2A 3A CE 88     	ld a,(Coordenada_y)
 840  8B2D FE 14        	cp $14
 841  8B2F D4 E7 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 842  8B32              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 843  8B32              ; ---------
 844  8B32
 845  8B32 CD 66 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 846  8B35 CD CD 8D     	call Repone_datos_de_borrado
 847  8B38 CD 25 8C     	call Limpia_Variables_de_borrado
 848  8B3B
 849  8B3B C9           3 ret													; _de la misma.
 850  8B3C
 851  8B3C              ; --------------------------------------------------------------------------------------------------------------
 852  8B3C              ;
 853  8B3C              ;	29/1/23
 854  8B3C
 855  8B3C              Mov_Amadeus
 856  8B3C
 857  8B3C CD 70 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 858  8B3F
 859  8B3F 3A F1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 860  8B42 CB 67        	bit 4,a
 861  8B44 C8           	ret z
 862  8B45
 863  8B45              ; ---------
 864  8B45
 865  8B45 CD 66 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 866  8B48 CD BD 8D     	call Repone_datos_de_borrado_Amadeus
 867  8B4B CD 25 8C     	call Limpia_Variables_de_borrado
 868  8B4E
 869  8B4E C9           	ret
 870  8B4F
 871  8B4F              ; -----------------------------------------------------------------------------------
 872  8B4F
 873  8B4F CD 89 8C     Inicia_entidad	call Inicia_Puntero_objeto
 874  8B52 CD 61 99     	call Recompone_posicion_inicio
 875  8B55 CD 40 93     	call Draw
 876  8B58 CD A0 7F     	call Guarda_foto_registros
 877  8B5B              ;	call Guarda_datos_de_borrado
 878  8B5B CD D1 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 879  8B5E C9           	ret
 880  8B5F
 881  8B5F              ; --------------------------------------------------------------------------------------------------------------
 882  8B5F              ;
 883  8B5F              ;	31/08/23
 884  8B5F              ;
 885  8B5F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 886  8B5F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 887  8B5F
 888  8B5F              Guarda_foto_entidad_a_pintar
 889  8B5F
 890  8B5F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 891  8B5F
 892  8B5F CD 40 93     	call Draw
 893  8B62 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 894  8B65 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 895  8B66
 896  8B66              ; --------------------------------------------------------------------------------------------------------------
 897  8B66              ;
 898  8B66              ;	19/9/23
 899  8B66
 900  8B66 21 C7 88     Prepara_var_pintado ld hl,Filas
 901  8B69 11 E7 88     	ld de,Variables_de_pintado
 902  8B6C 01 08 00     	ld bc,8
 903  8B6F ED B0        	ldir
 904  8B71 C9           	ret
 905  8B72
 906  8B72              ; --------------------------------------------------------------------------------------------------------------
 907  8B72
 908  8B72 21 E7 88     Repone_pintar ld hl,Variables_de_pintado
 909  8B75 11 C7 88     	ld de,Filas
 910  8B78 01 08 00     	ld bc,8
 911  8B7B ED B0        	ldir
 912  8B7D C9           	ret
 913  8B7E
 914  8B7E              ; *************************************************************************************************************************************************************
 915  8B7E              ;
 916  8B7E              ; 8/1/23
 917  8B7E              ;
 918  8B7E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 919  8B7E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 920  8B7E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 921  8B7E
 922  8B7E              ; Destruye HL y DE !!!!!
 923  8B7E
 924  8B7E              Inicia_punteros_de_cajas
 925  8B7E
 926  8B7E 21 8C 85     	ld hl,Indice_de_cajas
 927  8B81 CD 83 8C         call Extrae_address
 928  8B84 22 07 89         ld (Puntero_store_caja),hl
 929  8B87 21 8E 85     	ld hl,Indice_de_cajas+2
 930  8B8A 22 0B 89     	ld (Indice_restore_caja),hl
 931  8B8D CD 83 8C     	call Extrae_address
 932  8B90 22 09 89     	ld (Puntero_restore_caja),hl
 933  8B93 C9               ret
 934  8B94
 935  8B94              ; ---------------------------------------------------------------
 936  8B94              ;
 937  8B94              ;	9/8/23
 938  8B94              ;
 939  8B94              ;	Inicialización y gestión de álbumes de fotos y cajas.
 940  8B94
 941  8B94              Inicia_punteros_de_albumes_y_malotes
 942  8B94
 943  8B94 21 EC 84     	ld hl,Indice_album_de_fotos
 944  8B97 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 945  8B9A CD 83 8C     	call Extrae_address
 946  8B9D 22 1B 89     	ld (Stack_snapshot),hl
 947  8BA0
 948  8BA0 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 949  8BA3 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 950  8BA6 CD 83 8C     	call Extrae_address
 951  8BA9 22 1D 89     	ld (Stack_snapshot_disparos),hl
 952  8BAC
 953  8BAC 21 FC 84     	ld hl,Indice_End_Snapshot
 954  8BAF 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 955  8BB2 CD 83 8C     	call Extrae_address
 956  8BB5 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 957  8BB8
 958  8BB8 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 959  8BBB 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 960  8BBE CD 83 8C     	call Extrae_address
 961  8BC1 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 962  8BC4
 963  8BC4 C9           	ret
 964  8BC5
 965  8BC5              ;	23/9/23
 966  8BC5
 967  8BC5              Avanza_puntero_de_album_de_fotos_y_malotes
 968  8BC5
 969  8BC5              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 970  8BC5
 971  8BC5              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 972  8BC5              ; Estamos en el último álbum del índice???.
 973  8BC5              ;
 974  8BC5
 975  8BC5 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 976  8BC8 01 F2 84     	ld bc,Indice_album_de_fotos+6
 977  8BCB A7           	and a
 978  8BCC ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 979  8BCE 20 0D        	jr nz,1F								 		; El buffer está lleno. HALT.
 980  8BD0
 981  8BD0              ; Estamos en Album_de_fotos_3.
 982  8BD0              ; Configuramos el semáforo de álbumes para indicar que todos están completos.
 983  8BD0
 984  8BD0 21 3D 89     	ld hl,Semaforo
 985  8BD3 CB DE        	set 3,(hl)
 986  8BD5
 987  8BD5 21 04 89     	ld hl,Ctrl_1
 988  8BD8 CB EE        	set 5,(hl)
 989  8BDA
 990  8BDA              ; Inicia con el buffer de video completo !!!
 991  8BDA
 992  8BDA FB           	ei
 993  8BDB 76           	halt
 994  8BDC C9           	ret
 995  8BDD
 996  8BDD 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
 997  8BE0 23           	inc hl
 998  8BE1 23           	inc hl
 999  8BE2 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1000  8BE5 CD 83 8C     	call Extrae_address
1001  8BE8 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1002  8BEB
1003  8BEB 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1004  8BEE 23           	inc hl
1005  8BEF 23           	inc hl
1006  8BF0 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1007  8BF3 CD 83 8C     	call Extrae_address
1008  8BF6 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1009  8BF9
1010  8BF9 CD 0C 74     	call Actualiza_semaforo
1011  8BFC
1012  8BFC C9           	ret
1013  8BFD
1014  8BFD              ; *************************************************************************************************************************************************************
1015  8BFD              ;
1016  8BFD              ; 8/1/23
1017  8BFD              ;
1018  8BFD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1019  8BFD
1020  8BFD 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1021  8C00 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1022  8C03 C9           	ret
1023  8C04 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1024  8C07 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1025  8C0A C9           	ret
1026  8C0B
1027  8C0B              ; -------------------------------------------------------------------------------------------------------------
1028  8C0B              ;
1029  8C0B              ; 21/9/23
1030  8C0B              ;
1031  8C0B
1032  8C0B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1033  8C0B
1034  8C0B              Limpia_album_Amadeus
1035  8C0B
1036  8C0B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1037  8C0E 7E           	ld a,(hl)
1038  8C0F A7           	and a
1039  8C10 C8           	ret z
1040  8C11
1041  8C11 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1042  8C14 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1043  8C17 01 0B 00     	ld bc,11
1044  8C1A AF           	xor a
1045  8C1B 77           	ld (hl),a
1046  8C1C ED B0        	ldir
1047  8C1E
1048  8C1E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C21 22 23 89     	ld (End_Snapshot_Amadeus),hl
1050  8C24
1051  8C24 C9           	ret
1052  8C25
1053  8C25 21 E1 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1054  8C28 11 E2 88     	ld de,Variables_de_borrado+1
1055  8C2B 01 05 00     	ld bc,5
1056  8C2E AF           	xor a
1057  8C2F 77           	ld (hl),a
1058  8C30 ED B0        	ldir
1059  8C32 C9           	ret
1060  8C33
1061  8C33              ; -------------------------------------------------------------------------------------------------------------
1062  8C33              ;
1063  8C33              ; 8/9/23
1064  8C33              ;
1065  8C33
1066  8C33              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1067  8C33              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1068  8C33
1069  8C33              Calcula_numero_de_malotes
1070  8C33
1071  8C33 21 00 70     	ld hl,Album_de_fotos
1072  8C36 EB           	ex de,hl
1073  8C37 2A 1F 89     	ld hl,(End_Snapshot)
1074  8C3A
1075  8C3A 7C           	ld a,h
1076  8C3B A7           	and a
1077  8C3C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1078  8C3E
1079  8C3E 06 00        4 ld b,0
1080  8C40 7D           	ld a,l
1081  8C41 93           	sub e
1082  8C42 28 07        	jr z,1F
1083  8C44
1084  8C44              ; Nº de malotes no es "0".
1085  8C44
1086  8C44 D6 06        2 sub 6
1087  8C46 04           	inc b
1088  8C47 A7           	and a
1089  8C48 20 FA        	jr nz,2B
1090  8C4A 78           	ld a,b
1091  8C4B
1092  8C4B 32 10 89     1 ld (Numero_de_malotes),a
1093  8C4E C9           	ret
1094  8C4F
1095  8C4F              ; -------------------------------------------------------------------------------------------------------------
1096  8C4F              ;
1097  8C4F              ; 8/9/23
1098  8C4F              ;
1099  8C4F
1100  8C4F              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1101  8C4F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1102  8C4F
1103  8C4F              Calcula_malotes_Amadeus
1104  8C4F
1105  8C4F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1106  8C52 EB           	ex de,hl
1107  8C53 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1108  8C56
1109  8C56 7C           	ld a,h
1110  8C57 A7           	and a
1111  8C58 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1112  8C5A
1113  8C5A 06 00        	ld b,0
1114  8C5C 7D           	ld a,l
1115  8C5D 93           	sub e
1116  8C5E 28 07        	jr z,1F
1117  8C60
1118  8C60              ; Nº de malotes no es "0".
1119  8C60
1120  8C60 D6 06        2 sub 6
1121  8C62 04           	inc b
1122  8C63 A7           	and a
1123  8C64 20 FA        	jr nz,2B
1124  8C66 78           	ld a,b
1125  8C67
1126  8C67 32 10 89     1 ld (Numero_de_malotes),a
1127  8C6A C9           	ret
1128  8C6B
1129  8C6B              ; -------------------------------------------------------------------------------------------------------------
1130  8C6B              ;
1131  8C6B              ; 28/2/23
1132  8C6B              ;
1133  8C6B
1134  8C6B              Calcula_numero_de_disparotes
1135  8C6B
1136  8C6B 21 50 71     	ld hl,Album_de_fotos_disparos
1137  8C6E EB           	ex de,hl
1138  8C6F 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1139  8C72
1140  8C72 06 00        	ld b,0
1141  8C74 7D           	ld a,l
1142  8C75 93           	sub e
1143  8C76 28 07        	jr z,1F
1144  8C78
1145  8C78              ; Nº de malotes no es "0".
1146  8C78
1147  8C78 D6 06        2 sub 6
1148  8C7A 04           	inc b
1149  8C7B A7           	and a
1150  8C7C 20 FA        	jr nz,2B
1151  8C7E 78           	ld a,b
1152  8C7F
1153  8C7F 32 3E 89     1 ld (Numero_de_disparotes),a
1154  8C82 C9           	ret
1155  8C83
1156  8C83              ; *************************************************************************************************************************************************************
1157  8C83              ;
1158  8C83              ; 20/10/22
1159  8C83              ;
1160  8C83              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1161  8C83              ;
1162  8C83              ; Destruye el puntero y DE !!!!!
1163  8C83
1164  8C83 5E           Extrae_address ld e,(hl)
1165  8C84 23           	inc hl
1166  8C85 56           	ld d,(hl)
1167  8C86 2B           	dec hl
1168  8C87 EB           	ex de,hl
1169  8C88 C9           	ret
1170  8C89
1171  8C89              ; *************************************************************************************************************************************************************
1172  8C89              ;
1173  8C89              ;	7/2/23
1174  8C89              ;
1175  8C89              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1176  8C89              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1177  8C89              ;
1178  8C89              ;   Destruye HL y BC !!!!!,
1179  8C89              ;
1180  8C89              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1181  8C89              ;					"0" ..... Izquierda.
1182  8C89
1183  8C89              Inicia_Puntero_objeto
1184  8C89
1185  8C89 3A DB 88     	ld a,(Cuad_objeto)
1186  8C8C E6 01        	and 1
1187  8C8E F5           	push af
1188  8C8F CC AD 8C     	call z,Inicia_puntero_objeto_izq
1189  8C92 F1           	pop af
1190  8C93 28 2B        	jr z,1F
1191  8C95 CD 9A 8C     	call Inicia_puntero_objeto_der
1192  8C98 18 26        	jr 1F
1193  8C9A
1194  8C9A              ; Arrancamos desde la parte izquierda de la pantalla.
1195  8C9A              ; Iniciamos (Indice_Sprite_der).
1196  8C9A
1197  8C9A 2A D1 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1198  8C9D 22 D5 88     	ld (Puntero_DESPLZ_der),hl
1199  8CA0 CD 83 8C     	call Extrae_address
1200  8CA3 22 CB 88     	ld (Puntero_objeto),hl
1201  8CA6
1202  8CA6 2A D3 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1203  8CA9 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1204  8CAC C9           	ret
1205  8CAD
1206  8CAD              ; Arrancamos desde la parte derecha de la pantalla.
1207  8CAD              ; Iniciamos (Indice_Sprite_izq).
1208  8CAD
1209  8CAD 2A D3 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1210  8CB0 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CB3 CD 83 8C     	call Extrae_address
1212  8CB6 22 CB 88     	ld (Puntero_objeto),hl
1213  8CB9
1214  8CB9 2A D1 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1215  8CBC 22 D5 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1216  8CBF C9           	ret
1217  8CC0
1218  8CC0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1219  8CC0
1220  8CC0 21 40 83     1 ld hl,Amadeus
1221  8CC3 ED 4B CB 88  	ld bc,(Puntero_objeto)
1222  8CC7 B7 ED 42     	sub hl,bc
1223  8CCA C0           	ret nz
1224  8CCB 21 F1 88     	ld hl,Ctrl_0
1225  8CCE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1226  8CD0 C9           	ret 												; _de nuestra nave en los extremos.
1227  8CD1
1228  8CD1              ; *************************************************************************************************************************************************************
1229  8CD1              ;
1230  8CD1              ;	14/5/23
1231  8CD1              ;
1232  8CD1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1233  8CD1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1234  8CD1
1235  8CD1              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1236  8CD1              ;	_de la 2ª y 3ª entidad respectivamente.
1237  8CD1
1238  8CD1              Store_Restore_cajas
1239  8CD1
1240  8CD1 E5           	push hl
1241  8CD2 D5           	push de
1242  8CD3 C5            	push bc
1243  8CD4
1244  8CD4              ;	STORE !!!!!
1245  8CD4              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1246  8CD4
1247  8CD4 21 C7 88     	ld hl,Filas
1248  8CD7 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1249  8CDB 01 3D 00     	ld bc,61
1250  8CDE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1251  8CE0
1252  8CE0              ; 	Entidad_sospechosa. 20/4/23
1253  8CE0
1254  8CE0 3A E0 88     	ld a,(Impacto)
1255  8CE3 A7           	and a
1256  8CE4 28 0C        	jr z,1F
1257  8CE6
1258  8CE6 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1259  8CE9 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1260  8CEC A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1261  8CED ED 4A        	adc hl,bc 											; _ "0" más adelante.
1262  8CEF 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1263  8CF2
1264  8CF2              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1265  8CF2
1266  8CF2 2A 09 89     1 ld hl,(Puntero_restore_caja)
1267  8CF5 7E           	ld a,(hl)
1268  8CF6 A7           	and a
1269  8CF7 F5           	push af
1270  8CF8 28 08        	jr z,2F
1271  8CFA
1272  8CFA 11 C7 88     	ld de,Filas
1273  8CFD 01 3D 00     	ld bc,61
1274  8D00 ED B0        	ldir
1275  8D02
1276  8D02 CD 1E 8D     2 call Incrementa_punteros_de_cajas
1277  8D05
1278  8D05 F1           	pop af
1279  8D06 28 EA        	jr z,1B
1280  8D08
1281  8D08 C1           	pop bc
1282  8D09 D1           	pop de
1283  8D0A E1           	pop hl
1284  8D0B
1285  8D0B C9           	ret
1286  8D0C
1287  8D0C              ; **************************************************************************************************
1288  8D0C              ;
1289  8D0C              ;	12/05/23
1290  8D0C              ;
1291  8D0C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1292  8D0C
1293  8D0C E5           Restore_entidad push hl
1294  8D0D D5           	push de
1295  8D0E C5            	push bc
1296  8D0F
1297  8D0F 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1298  8D12 11 C7 88     	ld de,Filas
1299  8D15 01 3D 00     	ld bc,61
1300  8D18 ED B0        	ldir
1301  8D1A
1302  8D1A C1           	pop bc
1303  8D1B D1           	pop de
1304  8D1C E1           	pop hl
1305  8D1D C9           	ret
1306  8D1E
1307  8D1E              ; **************************************************************************************************
1308  8D1E              ;
1309  8D1E              ;	08/05/23
1310  8D1E              ;
1311  8D1E              ;	Incrementamos los dos punteros de entidades. (+1).
1312  8D1E
1313  8D1E              Incrementa_punteros_de_cajas
1314  8D1E
1315  8D1E 2A 09 89     	ld hl,(Puntero_restore_caja)
1316  8D21 22 07 89     	ld (Puntero_store_caja),hl
1317  8D24 2A 0B 89     	ld hl,(Indice_restore_caja)
1318  8D27 23           	inc hl
1319  8D28 23           	inc hl
1320  8D29 22 0B 89     	ld (Indice_restore_caja),hl
1321  8D2C CD 83 8C         call Extrae_address
1322  8D2F 22 09 89         ld (Puntero_restore_caja),hl
1323  8D32 C9               ret
1324  8D33
1325  8D33              ; **************************************************************************************************
1326  8D33              ;
1327  8D33              ;	25/01/23
1328  8D33              ;
1329  8D33              ;	Restore_Amadeus
1330  8D33              ;
1331  8D33              ;	Cargamos en DRAW los parámetros de Amadeus.
1332  8D33              ;
1333  8D33
1334  8D33 E5           Restore_Amadeus	push hl
1335  8D34 D5           	push de
1336  8D35 C5            	push bc
1337  8D36 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1338  8D39 11 C7 88     	ld de,Filas
1339  8D3C 01 3D 00     	ld bc,61
1340  8D3F ED B0        	ldir
1341  8D41 C1           	pop bc
1342  8D42 D1           	pop de
1343  8D43 E1           	pop hl
1344  8D44 C9           	ret
1345  8D45
1346  8D45              ; *************************************************************************************************************************************************************
1347  8D45              ;
1348  8D45              ;	29/04/23
1349  8D45              ;
1350  8D45              ;	Store_Amadeus
1351  8D45              ;
1352  8D45              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1353  8D45              ;
1354  8D45              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1355  8D45              ;
1356  8D45              ;	DESTRUYE: HL y BC y DE.
1357  8D45
1358  8D45 21 C7 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1359  8D48 01 3D 00     	ld bc,61
1360  8D4B ED B0        	ldir
1361  8D4D C9           	ret
1362  8D4E
1363  8D4E              ; -----------------------------------------------------------
1364  8D4E              ;
1365  8D4E              ;	27/04/23
1366  8D4E              ;
1367  8D4E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1368  8D4E              ;
1369  8D4E              ;	Destruye: HL,BC,DE,A
1370  8D4E
1371  8D4E 21 C7 88     Borra_datos_entidad ld hl,Filas
1372  8D51 01 3C 00     	ld bc,60
1373  8D54 AF           	xor a
1374  8D55 77           	ld (hl),a
1375  8D56 11 C8 88     	ld de,Filas+1
1376  8D59 ED B0        	ldir
1377  8D5B C9           	ret
1378  8D5C
1379  8D5C              ; -----------------------------------------------------------
1380  8D5C
1381  8D5C              ; Teclado.
1382  8D5C
1383  8D5C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1384  8D5E DB FE        	in a,($fe)
1385  8D60 E6 01        	and $01
1386  8D62 28 02        	jr z,1f
1387  8D64 18 F6        	jr Pulsa_ENTER
1388  8D66 C9           1 ret
1389  8D67
1390  8D67              ; **************************************************************************************************
1391  8D67              ;
1392  8D67              ; Temporización.
1393  8D67
1394  8D67              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1395  8D67              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1396  8D67              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1397  8D67              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1398  8D67
1399  8D67              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1400  8D67              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1401  8D67              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1402  8D67
1403  8D67              ; A partir de $4f61 no hace falta DELAY.
1404  8D67
1405  8D67              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1406  8D67
1407  8D67 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1408  8D6A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1409  8D6B 78           	LD A,B
1410  8D6C A7           	AND A
1411  8D6D 20 FB        	JR NZ,wait
1412  8D6F C9           	RET
1413  8D70
1414  8D70              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1415  8D70              ;
1416  8D70              ;	5/3/23
1417  8D70              ;
1418  8D70              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1419  8D70
1420  8D70              Movimiento_Amadeus
1421  8D70
1422  8D70              ; Disparo.
1423  8D70
1424  8D70 3A 56 89     	ld a,(Disparo_Amadeus)
1425  8D73 A7           	and a
1426  8D74 20 02        	jr nz,1F
1427  8D76 18 15        	jr 2F
1428  8D78
1429  8D78 3E F7        1 ld a,$f7													; "5" para disparar.
1430  8D7A DB FE        	in a,($fe)
1431  8D7C E6 10        	and $10
1432  8D7E
1433  8D7E F5           	push af
1434  8D7F CC 4A 8E     	call z,Genera_disparo
1435  8D82 F1           	pop af
1436  8D83 20 08        	jr nz,2F
1437  8D85
1438  8D85 3A 56 89     	ld a,(Disparo_Amadeus)
1439  8D88 EE 01        	xor 1
1440  8D8A 32 56 89     	ld (Disparo_Amadeus),a
1441  8D8D
1442  8D8D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1443  8D8F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1444  8D91 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1445  8D93 CC 1B 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1446  8D96
1447  8D96 3E F7        	ld a,$f7
1448  8D98 DB FE        	in a,($fe)
1449  8D9A E6 01        	and $01
1450  8D9C C8           	ret z
1451  8D9D
1452  8D9D 3E F7        	ld a,$f7
1453  8D9F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1454  8DA1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1455  8DA3 CC FD 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1456  8DA6 C9           	ret
1457  8DA7
1458  8DA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1459  8DA7              ;
1460  8DA7              ;	Rutina provisional para que los malotes cagen balas.
1461  8DA7
1462  8DA7              Detecta_disparo_entidad
1463  8DA7
1464  8DA7 3A 59 89     	ld a,(Disparo_entidad)
1465  8DAA A7           	and a
1466  8DAB C8           	ret z
1467  8DAC
1468  8DAC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1469  8DAC
1470  8DAC              ;	ld a,$7f				; Detecta SPACE.
1471  8DAC              ;	in a,($fe)
1472  8DAC              ;	and 1
1473  8DAC              ;	ret nz
1474  8DAC
1475  8DAC              ;	call Genera_disparo
1476  8DAC C9           	ret
1477  8DAD
1478  8DAD              ; ----------------------------------------------------------------------
1479  8DAD              ;
1480  8DAD              ;	8/9/23
1481  8DAD
1482  8DAD 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1483  8DB0 2B            	dec hl
1484  8DB1 7E           	ld a,(hl)
1485  8DB2 A7           	and a
1486  8DB3 C8           	ret z										; Salimos si es álbum está vacío.
1487  8DB4
1488  8DB4 11 E6 88     	ld de,Variables_de_borrado+5
1489  8DB7 01 06 00     	ld bc,6
1490  8DBA ED B8        	lddr
1491  8DBC C9           	ret
1492  8DBD
1493  8DBD              ; ----------------------------------------------------------------------
1494  8DBD              ;
1495  8DBD              ;	9/9/23
1496  8DBD
1497  8DBD              Repone_datos_de_borrado_Amadeus
1498  8DBD
1499  8DBD 21 E1 88     	ld hl,Variables_de_borrado
1500  8DC0 11 A0 72     	ld de,Album_de_fotos_Amadeus
1501  8DC3 01 06 00     	ld bc,6
1502  8DC6 ED B0        	ldir
1503  8DC8
1504  8DC8 EB           	ex de,hl
1505  8DC9 22 23 89     	ld (End_Snapshot_Amadeus),hl
1506  8DCC
1507  8DCC C9           	ret
1508  8DCD
1509  8DCD              ; ----------------------------------------------------------------------
1510  8DCD              ;
1511  8DCD              ;	18/9/23
1512  8DCD              ;
1513  8DCD
1514  8DCD              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1515  8DCD              ;	_ Album_de_fotos correspondiente.
1516  8DCD
1517  8DCD              ;	DI.
1518  8DCD
1519  8DCD              Repone_datos_de_borrado
1520  8DCD
1521  8DCD ED 5B 1B 89  	ld de,(Stack_snapshot)
1522  8DD1 21 E1 88     	ld hl,Variables_de_borrado
1523  8DD4 01 06 00     	ld bc,6
1524  8DD7 ED B0        	ldir
1525  8DD9
1526  8DD9 EB           	ex de,hl
1527  8DDA 22 1B 89     	ld (Stack_snapshot),hl
1528  8DDD
1529  8DDD C9           	ret
1530  8DDE
1531  8DDE              ; ----------------------------------------------------------------------
1532  8DDE              ;
1533  8DDE              ;	11/8/23
1534  8DDE
1535  8DDE              Gestiona_entidades
1536  8DDE
1537  8DDE              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1538  8DDE
1539  8DDE 3A 3D 89     	ld a,(Semaforo)
1540  8DE1 CB 47        	bit 0,a
1541  8DE3 28 FE        	jr z,$												;! STOP el buffer está vacío.
1542  8DE5
1543  8DE5              ;	call Extrae_foto_disparos
1544  8DE5              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1545  8DE5
1546  8DE5 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1547  8DE8
1548  8DE8              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1549  8DE8
1550  8DE8              ;	Album incompleto ?????
1551  8DE8              ;	Si es así, inicializamos el bit 4 de (Semaforo) y salimos de la rutina.
1552  8DE8
1553  8DE8 3A 3D 89     	ld a,(Semaforo)
1554  8DEB CB 6F        	bit 5,a
1555  8DED 20 03        	jr nz,1F
1556  8DEF
1557  8DEF CB 67        	bit 4,a
1558  8DF1 C0           	ret nz
1559  8DF2
1560  8DF2              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1561  8DF2              ; Nos situamos al comienzo del último álbum.
1562  8DF2
1563  8DF2 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1564  8DF5 CD 83 8C     	call Extrae_address
1565  8DF8 22 1B 89     	ld (Stack_snapshot),hl
1566  8DFB
1567  8DFB              ;	En este punto:
1568  8DFB
1569  8DFB              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1570  8DFB              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1571  8DFB
1572  8DFB 21 04 89     	ld hl,Ctrl_1
1573  8DFE CB AE        	res 5,(hl)
1574  8E00
1575  8E00              ;	Album_de_fotos_3 vuelve a estar vacío.
1576  8E00
1577  8E00 21 3D 89     	ld hl,Semaforo
1578  8E03 CB AE        	res 5,(hl)
1579  8E05 CD 48 74     	call Actualiza_semaforo_2
1580  8E08
1581  8E08 C9           	ret
1582  8E09
1583  8E09              ; -----------------------------------------------------------------------------------
1584  8E09
1585  8E09              Pinta_Amadeus
1586  8E09
1587  8E09 3E 06        	ld a,6
1588  8E0B D3 FE            out ($fe),a										; Amarillo
1589  8E0D
1590  8E0D CD 4F 8C        	call Calcula_malotes_Amadeus
1591  8E10 CD D0 96     	call Extrae_foto_Amadeus
1592  8E13 CD 0B 8C     	call Limpia_album_Amadeus
1593  8E16
1594  8E16 C9           	ret
1595  8E17
1596  8E17              Pinta_entidades
1597  8E17
1598  8E17 3A 3D 89     	ld a,(Semaforo)
1599  8E1A CB 47        	bit 0,a
1600  8E1C C8           	ret z
1601  8E1D
1602  8E1D              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1603  8E1D
1604  8E1D CD 33 8C     	call Calcula_numero_de_malotes
1605  8E20 CD 4E 96     	call Extrae_foto_entidades
1606  8E23
1607  8E23 C9           	ret
1608  8E24
1609  8E24              ; -----------------------------------------------------------------------------------
1610  8E24
1611  8E24              Actualiza_relojes
1612  8E24
1613  8E24 21 51 89     	ld hl,Contador_de_frames
1614  8E27 7E           	ld a,(hl)
1615  8E28 FE FF        	cp $ff
1616  8E2A 20 04        	jr nz,1F
1617  8E2C 34           	inc (hl)
1618  8E2D 21 52 89     	ld hl,Contador_de_frames_2
1619  8E30 34           1 inc (hl)											; 0 - 255
1620  8E31 C9           	ret
1621  8E32
1622  8E32              ; ---------------------------------------------------------------
1623  8E32              ;
1624  8E32              ;	27/9/23
1625  8E32
1626  8E32              Guarda_parametros_DRAW
1627  8E32
1628  8E32 21 C7 88     	ld hl,Filas
1629  8E35 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1630  8E38 01 3D 00     	ld bc,61
1631  8E3B ED B0        	ldir
1632  8E3D C9           	ret
1633  8E3E
1634  8E3E              Recupera_parametros_DRAW
1635  8E3E
1636  8E3E 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1637  8E41 11 C7 88     	ld de,Filas
1638  8E44 01 3D 00     	ld bc,61
1639  8E47 ED B0        	ldir
1640  8E49 C9           	ret
1641  8E4A
1642  8E4A              ; ---------------------------------------------------------------
1643  8E4A
1644  8E4A
1645  8E4A              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E4A              ; ******************************************************************************************************************************************************************************************
   2+ 8E4A              ;
   3+ 8E4A              ;   21/07/23
   4+ 8E4A              ;
   5+ 8E4A              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E4A              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E4A              ;
   8+ 8E4A              ;
   9+ 8E4A              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E4A              ;
  11+ 8E4A              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E4A              ;               _ hacen las entidades hacia abajo.
  13+ 8E4A              ;
  14+ 8E4A              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E4A              ;
  16+ 8E4A              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E4A              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E4A              ;
  19+ 8E4A              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E4A              ;           _ la bala.
  21+ 8E4A              ;
  22+ 8E4A              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E4A              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E4A              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E4A              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E4A              ;           _ en el momento de generarse la bala)).
  27+ 8E4A
  28+ 8E4A              Genera_disparo
  29+ 8E4A
  30+ 8E4A              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E4A              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E4A              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E4A              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E4A              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E4A              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E4A              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E4A
  38+ 8E4A              ; Exclusiones:
  39+ 8E4A
  40+ 8E4A 3A DF 88         ld a,(Vel_down)
  41+ 8E4D 47               ld b,a
  42+ 8E4E 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E51 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E52 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E53 3A FE 88         ld a,(Columnas)
  46+ 8E56 47               ld b,a
  47+ 8E57 3A C8 88         ld a,(Columns)
  48+ 8E5A B8               cp b
  49+ 8E5B C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E5C
  51+ 8E5C              ; ----- ----- -----
  52+ 8E5C
  53+ 8E5C 3A F1 88         ld a,(Ctrl_0)
  54+ 8E5F CB 77            bit 6,a
  55+ 8E61 20 06            jr nz,14F
  56+ 8E63
  57+ 8E63 3A CE 88         ld a,(Coordenada_y)
  58+ 8E66 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E68 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E69
  61+ 8E69 21 00 80     14 ld hl,Indice_disparo
  62+ 8E6C 3A CF 88         ld a,(CTRL_DESPLZ)
  63+ 8E6F 4F               ld c,a
  64+ 8E70 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E72              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E72              ;                                            ""        ""       "f9", B="1"
  67+ 8E72              ;                                            ""        ""       "fb", B="2"
  68+ 8E72              ;                                            ""        ""       "fb", B="3"
  69+ 8E72 A7               and a
  70+ 8E73 28 10            jr z,1F
  71+ 8E75 E6 01            and 1
  72+ 8E77 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E78
  74+ 8E78 79               ld a,c
  75+ 8E79 16 F9            ld d,$f9
  76+ 8E7B 23           2 inc hl
  77+ 8E7C 23               inc hl
  78+ 8E7D 04               inc b
  79+ 8E7E BA               cp d
  80+ 8E7F 28 04            jr z,1F
  81+ 8E81 14               inc d
  82+ 8E82 14               inc d
  83+ 8E83 18 F6            jr 2B
  84+ 8E85
  85+ 8E85 CD 83 8C     1 call Extrae_address
  86+ 8E88 E5               push hl
  87+ 8E89 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E8B DD 21 16 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E8F
  90+ 8E8F              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E8F              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E8F
  93+ 8E8F 3A F1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E92 CB 77            bit 6,a
  95+ 8E94 20 04            jr nz,19F
  96+ 8E96
  97+ 8E96 AF               xor a
  98+ 8E97 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E9A
 100+ 8E9A 3A DB 88     19 ld a,(Cuad_objeto)
 101+ 8E9D FE 02            cp 2
 102+ 8E9F 38 66            jr c,3F
 103+ 8EA1 28 64            jr z,3F
 104+ 8EA3
 105+ 8EA3              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EA3
 107+ 8EA3 E6 01            and 1
 108+ 8EA5 28 30            jr z,4F
 109+ 8EA7
 110+ 8EA7              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EA7              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EA7              ;
 113+ 8EA7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EA7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EA7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EA7
 117+ 8EA7 2A C9 88     	ld hl,(Posicion_actual)
 118+ 8EAA
 119+ 8EAA              ;   Amadeus o entidad ???.
 120+ 8EAA
 121+ 8EAA 3A F1 88         ld a,(Ctrl_0)
 122+ 8EAD CB 77            bit 6,a
 123+ 8EAF 28 0A            jr z,8F
 124+ 8EB1
 125+ 8EB1              ; 	Dispara Amadeus.
 126+ 8EB1
 127+ 8EB1 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EB3 CD 3F 96         call PreviousScan
 129+ 8EB6 CD 3F 96         call PreviousScan
 130+ 8EB9
 131+ 8EB9              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EB9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EB9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EB9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EB9
 136+ 8EB9 18 11            jr 10F
 137+ 8EBB
 138+ 8EBB              ; 	Dispara Entidad.
 139+ 8EBB
 140+ 8EBB 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EBE              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EBE
 143+ 8EBE              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EBE              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EBE
 146+ 8EBE C5               push bc
 147+ 8EBF 06 10            ld b,16
 148+ 8EC1 CD 30 96     9 call NextScan
 149+ 8EC4 10 FB            djnz 9B
 150+ 8EC6 C1               pop bc
 151+ 8EC7 CD 31 8F         call Ajusta_disparo_parte_izquierda
 152+ 8ECA 18 06            jr 17F
 153+ 8ECC
 154+ 8ECC              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8ECC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8ECC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8ECC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8ECC
 159+ 8ECC CD 31 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8ECF CD A6 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8ED2              ;                                                      ; _al generar el disparo.
 162+ 8ED2
 163+ 8ED2              ; 	LLegados a este punto tendremos:
 164+ 8ED2              ;
 165+ 8ED2              ;       Puntero_objeto_disparo en IY.
 166+ 8ED2              ;       Rutinas_de_impresion en IX.
 167+ 8ED2              ;       Puntero_de_impresion en HL.
 168+ 8ED2              ;       Impacto/Dirección en BC.
 169+ 8ED2
 170+ 8ED2 CD 39 8F     17 call Almacena_disparo
 171+ 8ED5 18 52            jr 6F                                             ; RET.
 172+ 8ED7
 173+ 8ED7              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8ED7              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8ED7              ;
 176+ 8ED7              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8ED7              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8ED7              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8ED7
 180+ 8ED7 2A C9 88     4 ld hl,(Posicion_actual)
 181+ 8EDA
 182+ 8EDA              ;   Amadeus o entidad ???.
 183+ 8EDA
 184+ 8EDA 3A F1 88         ld a,(Ctrl_0)
 185+ 8EDD CB 77            bit 6,a
 186+ 8EDF 28 0A            jr z,11F
 187+ 8EE1
 188+ 8EE1              ; 	Dispara Amadeus.
 189+ 8EE1
 190+ 8EE1 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EE3 CD 3F 96         call PreviousScan
 192+ 8EE6 CD 3F 96         call PreviousScan
 193+ 8EE9
 194+ 8EE9              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EE9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EE9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EE9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EE9
 199+ 8EE9 18 11            jr 13F
 200+ 8EEB
 201+ 8EEB              ; 	Dispara Entidad.
 202+ 8EEB
 203+ 8EEB 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EEE              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EEE
 206+ 8EEE              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EEE              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EEE
 209+ 8EEE C5               push bc
 210+ 8EEF 06 10            ld b,16
 211+ 8EF1 CD 30 96     12 call NextScan
 212+ 8EF4 10 FB            djnz 12B
 213+ 8EF6 C1               pop bc
 214+ 8EF7
 215+ 8EF7 CD 2A 8F         call Ajusta_disparo_parte_derecha
 216+ 8EFA 18 06            jr 18F
 217+ 8EFC
 218+ 8EFC              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EFC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EFC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EFC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EFC
 223+ 8EFC CD 2A 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EFF CD A6 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F02              ;                                                       ; _al generar el disparo.
 226+ 8F02
 227+ 8F02              ; LLegados a este punto tendremos:
 228+ 8F02              ;
 229+ 8F02              ;       Puntero_objeto_disparo en IY.
 230+ 8F02              ;       Rutinas_de_impresion en IX.
 231+ 8F02              ;       Puntero_de_impresion en HL.
 232+ 8F02              ;       Impacto/Dirección en BC.
 233+ 8F02
 234+ 8F02 CD 39 8F     18 call Almacena_disparo
 235+ 8F05 18 22            jr 6F                                               ; RET.
 236+ 8F07
 237+ 8F07              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F07
 239+ 8F07 28 11        3 jr z,5F
 240+ 8F09
 241+ 8F09              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F09              ;
 243+ 8F09              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F09              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F09              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F09              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F09
 248+ 8F09              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F09              ;	   ""        ""       "f9", B="1"
 250+ 8F09              ;	   ""        ""       "fb", B="2"
 251+ 8F09              ; 	   ""        ""       "fb", B="3"
 252+ 8F09
 253+ 8F09 2A C9 88     	ld hl,(Posicion_actual)
 254+ 8F0C CD 30 96     	call NextScan
 255+ 8F0F
 256+ 8F0F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F0F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F0F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F0F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F0F
 261+ 8F0F CD 31 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F12
 263+ 8F12              ; 	No se produce impacto. B="$80"
 264+ 8F12              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F12
 266+ 8F12 01 80 80         ld bc,$8080
 267+ 8F15
 268+ 8F15              ; 	LLegados a este punto tendremos:
 269+ 8F15              ;
 270+ 8F15              ;       Puntero_objeto_disparo en IY.
 271+ 8F15              ;       Rutinas_de_impresion en IX.
 272+ 8F15              ;       Puntero_de_impresion en HL.
 273+ 8F15              ;       Impacto/Dirección en BC.
 274+ 8F15
 275+ 8F15 CD 39 8F         call Almacena_disparo
 276+ 8F18 18 0F            jr 6F                                           ; RET.
 277+ 8F1A
 278+ 8F1A              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F1A              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F1A              ;
 281+ 8F1A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F1A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F1A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F1A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F1A
 286+ 8F1A 2A C9 88     5 ld hl,(Posicion_actual)
 287+ 8F1D CD 30 96     	call NextScan
 288+ 8F20
 289+ 8F20              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F20              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F20              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F20              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F20
 294+ 8F20 CD 2A 8F         call Ajusta_disparo_parte_derecha
 295+ 8F23
 296+ 8F23              ; 	No se produce impacto. B="$80"
 297+ 8F23              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F23
 299+ 8F23 01 80 80     15 ld bc,$8080
 300+ 8F26
 301+ 8F26              ; 	LLegados a este punto tendremos:
 302+ 8F26              ;
 303+ 8F26              ;       Puntero_objeto_disparo en IY.
 304+ 8F26              ;       Rutinas_de_impresion en IX.
 305+ 8F26              ;       Puntero_de_impresion en HL.
 306+ 8F26              ;       Impacto/Dirección en BC.
 307+ 8F26
 308+ 8F26 CD 39 8F         call Almacena_disparo
 309+ 8F29
 310+ 8F29 C9           6 ret
 311+ 8F2A
 312+ 8F2A              ; ----------------------------------------------------------------
 313+ 8F2A              ;
 314+ 8F2A              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F2A              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F2A              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F2A
 318+ 8F2A 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F2B FE 02            cp 2
 320+ 8F2D 38 01            jr c,1F
 321+ 8F2F 23               inc hl
 322+ 8F30 C9           1 ret
 323+ 8F31
 324+ 8F31 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F32 FE 01        	cp 1
 326+ 8F34 20 01        	jr nz,1F
 327+ 8F36 2B           	dec hl
 328+ 8F37 2B           1 dec hl
 329+ 8F38 C9               ret
 330+ 8F39
 331+ 8F39              ; ----------------------------------------------------------------
 332+ 8F39              ;
 333+ 8F39              ;   25/02/23
 334+ 8F39              ;
 335+ 8F39              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F39              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F39              ;
 338+ 8F39              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F39              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F39
 341+ 8F39              Almacena_disparo
 342+ 8F39
 343+ 8F39 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F3A F1               pop af
 345+ 8F3B 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F3C
 347+ 8F3C 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F3D E6 01            and 1
 349+ 8F3F 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F41              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F41              ; 	Dispara AMADEUS.
 352+ 8F41
 353+ 8F41              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F41              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F41              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F41              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F41
 358+ 8F41 C5               push bc
 359+ 8F42 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F45 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F48 A7               and a
 362+ 8F49 ED 42            sbc hl,bc
 363+ 8F4B CC 04 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F4E C1               pop bc
 365+ 8F4F 28 54            jr z,4F
 366+ 8F51
 367+ 8F51 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F54 23               inc hl
 369+ 8F55 23               inc hl
 370+ 8F56 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F59              ;                                                   ; _ Disparo_(+1).
 372+ 8F59 18 18            jr 2F
 373+ 8F5B
 374+ 8F5B              ; Dispara una entidad.
 375+ 8F5B
 376+ 8F5B C5           1 push bc
 377+ 8F5C 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F5F 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F62 A7               and a
 380+ 8F63 ED 42            sbc hl,bc
 381+ 8F65 CC FD 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F68 C1               pop bc
 383+ 8F69 28 3A            jr z,4F
 384+ 8F6B
 385+ 8F6B 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F6E 23               inc hl
 387+ 8F6F 23               inc hl
 388+ 8F70 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F73              ;                                                   ; _ Disparo_(+1).
 390+ 8F73 CD 83 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F76              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F76              ;
 393+ 8F76              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F76              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F76              ;                                                     Puntero_de_impresion en HL.
 396+ 8F76              ;                                                     Impacto/Dirección en BC.
 397+ 8F76
 398+ 8F76 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F77 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F78 23               inc hl                                          ; _ al siguiente.
 401+ 8F79 A7               and a
 402+ 8F7A 20 C0            jr nz,3B
 403+ 8F7C
 404+ 8F7C 08               ex af,af
 405+ 8F7D ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F81 F9               ld sp,hl
 407+ 8F82
 408+ 8F82 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F84 F5               push af                                         ; Puntero de impresión.
 410+ 8F85 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F87 C5               push bc                                         ; Control.
 412+ 8F88
 413+ 8F88 ED 7B 15 89      ld sp,(Stack)
 414+ 8F8C
 415+ 8F8C              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F8C
 417+ 8F8C 21 04 89     	ld hl,Ctrl_1
 418+ 8F8F CB C6        	set 0,(hl)
 419+ 8F91
 420+ 8F91 DD E5        	push ix
 421+ 8F93 E1               pop hl
 422+ 8F94 F5               push af
 423+ 8F95 DD E1            pop ix
 424+ 8F97
 425+ 8F97 CD A0 7F     	call Guarda_foto_registros
 426+ 8F9A
 427+ 8F9A 21 04 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F9D CB 86        	res 0,(hl)
 429+ 8F9F
 430+ 8F9F              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F9F              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F9F
 433+ 8F9F CD 04 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FA2 CD FD 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8FA5
 436+ 8FA5 C9           4 ret
 437+ 8FA6
 438+ 8FA6              ; ----------------------------------------------------------------
 439+ 8FA6              ;
 440+ 8FA6              ;   4/3/23
 441+ 8FA6              ;
 442+ 8FA6              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FA6              ;   _ al generarse el disparo.
 444+ 8FA6              ;
 445+ 8FA6              ;       "$80" ..... No se produce colisión.
 446+ 8FA6              ;       "$81" ..... Se produce colisión.
 447+ 8FA6              ;
 448+ 8FA6              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FA6              ;         _ que forman el disparo.
 450+ 8FA6
 451+ 8FA6
 452+ 8FA6              Comprueba_Colision
 453+ 8FA6
 454+ 8FA6              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FA6
 456+ 8FA6 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FA8 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FA9
 459+ 8FA9 CD DF 8F         call Modifica_H_Velocidad_disparo
 460+ 8FAC
 461+ 8FAC 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FAD FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FAF 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FB1
 465+ 8FB1 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FB3 CD CF 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FB6
 468+ 8FB6 7B               ld a,e
 469+ 8FB7 E6 01            and 1
 470+ 8FB9 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FBB              ;                                                  ; _ para activar IMPACTO.
 472+ 8FBB E1               pop hl
 473+ 8FBC E5               push hl
 474+ 8FBD CD 30 96         call NextScan
 475+ 8FC0
 476+ 8FC0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FC1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FC3 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FC5              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FC5 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FC7 CD CF 8F         call Bucle_2
 482+ 8FCA
 483+ 8FCA 43           1 ld b,e
 484+ 8FCB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FCC FD E1            pop iy
 486+ 8FCE C9               ret
 487+ 8FCF
 488+ 8FCF              ; ---------- ----------
 489+ 8FCF
 490+ 8FCF 06 02        Bucle_2 ld b,2
 491+ 8FD1 FD 7E 00     2 ld a,(iy)
 492+ 8FD4 A6               and (hl)
 493+ 8FD5 28 02            jr z,1F
 494+ 8FD7 1E 81            ld e,$81
 495+ 8FD9 23           1 inc hl
 496+ 8FDA FD 23            inc iy
 497+ 8FDC 10 F3            djnz 2B
 498+ 8FDE C9               ret
 499+ 8FDF
 500+ 8FDF              ; ---------- ----------
 501+ 8FDF              ;
 502+ 8FDF              ;   21/7/23
 503+ 8FDF
 504+ 8FDF              Modifica_H_Velocidad_disparo
 505+ 8FDF
 506+ 8FDF 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FE2 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FE4 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FE5 24               inc h
 510+ 8FE6
 511+ 8FE6 C9               ret
 512+ 8FE7
 513+ 8FE7              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FE7              ;
 515+ 8FE7              ;   11/04/23
 516+ 8FE7              ;
 517+ 8FE7              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FE7              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FE7              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FE7              ;
 521+ 8FE7              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FE7
 523+ 8FE7              Compara_coordenadas_X
 524+ 8FE7
 525+ 8FE7              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FE7              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FE7
 528+ 8FE7              ; Preparamos registros:
 529+ 8FE7
 530+ 8FE7 21 CD 88         ld hl,Filas+6
 531+ 8FEA 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FEB 23               inc hl
 533+ 8FEC 23               inc hl
 534+ 8FED 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FEE 43               ld b,e
 536+ 8FEF
 537+ 8FEF 21 DB 88         ld hl,Filas+20
 538+ 8FF2 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FF3 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 8FF6 CD 12 92         call Guarda_coordenadas_X
 541+ 8FF9
 542+ 8FF9              ; Preparamos registros:
 543+ 8FF9
 544+ 8FF9 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FFC 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FFD 23               inc hl
 547+ 8FFE 23               inc hl
 548+ 8FFF 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9000 7B               ld a,e
 550+ 9001 08               ex af,af'
 551+ 9002 21 B2 85         ld hl,Amadeus_db+20
 552+ 9005 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9006 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 9009 CD 12 92         call Guarda_coordenadas_X
 555+ 900C
 556+ 900C              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 900C              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 900C
 559+ 900C 04               inc b
 560+ 900D 05               dec b
 561+ 900E 28 04            jr z,1F
 562+ 9010 06 03            ld b,3
 563+ 9012 18 02            jr 2F
 564+ 9014 06 02        1 ld b,2
 565+ 9016 08           2 ex af,af'
 566+ 9017 3C               inc a
 567+ 9018 3D               dec a
 568+ 9019 28 04            jr z,5F
 569+ 901B 0E 03            ld c,3
 570+ 901D 18 02            jr 6F
 571+ 901F 0E 02        5 ld c,2
 572+ 9021 79           6 ld a,c
 573+ 9022 08               ex af,af'
 574+ 9023 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 9026 1A           4 ld a,(de)
 576+ 9027 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 902A BE           3 cp (hl)
 578+ 902B 28 0E            jr z,7F
 579+ 902D 23               inc hl
 580+ 902E 0D               dec c
 581+ 902F 20 F9            jr nz,3B
 582+ 9031 13               inc de
 583+ 9032 08               ex af,af'
 584+ 9033 4F               ld c,a
 585+ 9034 08               ex af,af'
 586+ 9035 10 EF            djnz 4B
 587+ 9037
 588+ 9037              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9037
 590+ 9037 CD 4E 92     8 call Limpia_Coordenadas_X
 591+ 903A C9               ret
 592+ 903B
 593+ 903B 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 903D 32 E0 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9040 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9043 CB D6            set 2,(hl)
 597+ 9045 18 F0            jr 8B
 598+ 9047
 599+ 9047              ; -----------------------------------------------------------------------
 600+ 9047              ;
 601+ 9047              ;   17/04/23
 602+ 9047              ;
 603+ 9047
 604+ 9047              Detecta_colision_nave_entidad
 605+ 9047
 606+ 9047              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9047
 608+ 9047 2A C9 88         ld hl,(Posicion_actual)
 609+ 904A CD 8B 95         call Calcula_puntero_de_impresion
 610+ 904D
 611+ 904D              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 904D              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 904D
 614+ 904D DD E5            push ix
 615+ 904F E1               pop hl
 616+ 9050 E5               push hl
 617+ 9051
 618+ 9051              ; ----- ----- -----
 619+ 9051 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9053 06 0A            ld b,10
 621+ 9055 CD 85 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9058 7B               ld a,e
 623+ 9059 FE 05            cp 5
 624+ 905B 38 0E            jr c,3F
 625+ 905D
 626+ 905D              ; LLegados a este punto:
 627+ 905D              ;
 628+ 905D              ;   HAY COLISIÓN !!!!!.
 629+ 905D              ;
 630+ 905D              ;   .db (Impacto) de Amadeus a "1".
 631+ 905D              ;   SET el bit3 de (Impacto2).
 632+ 905D              ;
 633+ 905D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 905D
 635+ 905D 21 B7 85         ld hl,Amadeus_db+25
 636+ 9060 36 01            ld (hl),1
 637+ 9062 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9065 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9067 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9069 18 18            jr 1F
 641+ 906B
 642+ 906B              ; -----
 643+ 906B
 644+ 906B E1           3 pop hl
 645+ 906C CD 30 96         call NextScan
 646+ 906F E5               push hl
 647+ 9070 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9071 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9073 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9075 30 0C            jr nc,1F
 651+ 9077              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9077 10 DC            djnz 2B
 653+ 9079
 654+ 9079              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9079
 656+ 9079              ; LLegados a este punto:
 657+ 9079              ;
 658+ 9079              ;   NO HAY COLISIÓN !!!!!.
 659+ 9079              ;
 660+ 9079              ;   .db (Impacto) de Amadeus a "0".
 661+ 9079              ;   RES el bit2 de (Impacto2).
 662+ 9079              ;
 663+ 9079              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9079              ;   Lo colocamos a "0".
 665+ 9079
 666+ 9079 21 43 89         ld hl,Impacto2
 667+ 907C CB 96            res 2,(hl)
 668+ 907E 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9081 36 00            ld (hl),0
 670+ 9083
 671+ 9083 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9084 C9               ret
 673+ 9085
 674+ 9085               ; ---------- ----------
 675+ 9085
 676+ 9085 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9086 3A C8 88         ld a,(Columns)
 678+ 9089 47               ld b,a
 679+ 908A FD 7E 00     2 ld a,(iy)
 680+ 908D BE               cp (hl)
 681+ 908E 28 01            jr z,1F
 682+ 9090
 683+ 9090 1C               inc e
 684+ 9091
 685+ 9091 23           1 inc hl
 686+ 9092 FD 23            inc iy
 687+ 9094 10 F4            djnz 2B
 688+ 9096 C1               pop bc
 689+ 9097 C9               ret
 690+ 9098
 691+ 9098              ; -------------------------------------------------------------------------------------------------------------
 692+ 9098              ;
 693+ 9098              ;   13/03/23
 694+ 9098              ;
 695+ 9098              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9098              ;
 697+ 9098              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9098
 699+ 9098 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 909B 7E               ld a,(hl)
 701+ 909C A7               and a
 702+ 909D C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 909E
 704+ 909E 44               ld b,h
 705+ 909F 4D               ld c,l
 706+ 90A0 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 90A3 E5               push hl
 708+ 90A4 A7               and a
 709+ 90A5 ED 42            sbc hl,bc
 710+ 90A7 E5               push hl
 711+ 90A8 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90A9
 713+ 90A9 E1               pop hl
 714+ 90AA 54               ld d,h
 715+ 90AB 5D               ld e,l
 716+ 90AC 1B               dec de
 717+ 90AD ED B8            lddr                                                ; Limpiamos.
 718+ 90AF
 719+ 90AF 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90B2 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 90B5
 722+ 90B5 C9               ret
 723+ 90B6
 724+ 90B6              ; -------------------------------------------------------------------------------------------------------------
 725+ 90B6              ;
 726+ 90B6              ;   18/07/23
 727+ 90B6              ;
 728+ 90B6
 729+ 90B6              Motor_de_disparos
 730+ 90B6
 731+ 90B6              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90B6
 733+ 90B6 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90B9 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90BC
 736+ 90BC CD 83 8C     2 call Extrae_address
 737+ 90BF 7E               ld a,(hl)
 738+ 90C0 A7               and a
 739+ 90C1 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90C3
 741+ 90C3              ; ----- ----- ----- ----- ----- -----
 742+ 90C3
 743+ 90C3 C5               push bc
 744+ 90C4 CD 88 91         call foto_disparo_a_borrar
 745+ 90C7
 746+ 90C7              ; Existe colisión con este disparo???
 747+ 90C7
 748+ 90C7 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90C8 7E               ld a,(hl)
 750+ 90C9 2B               dec hl
 751+ 90CA E6 01            and 1
 752+ 90CC 28 1D            jr z,9F
 753+ 90CE
 754+ 90CE              ;   En este punto:
 755+ 90CE              ;
 756+ 90CE              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90CE              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90CE              ;   _con la entidad).
 759+ 90CE              ;
 760+ 90CE              ;   Disparo_2A defw 0                                ; Control.
 761+ 90CE              ;    defw 0                                          ; Puntero objeto.
 762+ 90CE              ;    defw 0                                          ; Puntero de impresión.
 763+ 90CE              ;    defw 0                                          ; Rutina de impresión.
 764+ 90CE
 765+ 90CE E5               push hl
 766+ 90CF
 767+ 90CF 06 04            ld b,4
 768+ 90D1 23           19 inc hl
 769+ 90D2 10 FD            djnz 19B
 770+ 90D4
 771+ 90D4 CD 83 8C         call Extrae_address
 772+ 90D7 CD F9 9C         call Genera_coordenadas_disparo
 773+ 90DA
 774+ 90DA              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90DA
 776+ 90DA 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90DD 72               ld (hl),d
 778+ 90DE 23               inc hl
 779+ 90DF 73               ld (hl),e
 780+ 90E0
 781+ 90E0              ; Elimino el disparo de la base de datos.
 782+ 90E0
 783+ 90E0 E1               pop hl
 784+ 90E1 CD 07 92         call Elimina_disparo_de_base_de_datos
 785+ 90E4 21 43 89         ld hl,Impacto2
 786+ 90E7 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90E9
 788+ 90E9 18 06            jr 11F
 789+ 90EB
 790+ 90EB CD B1 91     9 call Mueve_disparo
 791+ 90EE CD 88 91         call foto_disparo_a_borrar
 792+ 90F1
 793+ 90F1 C1           11 pop bc
 794+ 90F2 18 04            jr 7F
 795+ 90F4
 796+ 90F4              ; ----- ----- ----- ----- ----- -----
 797+ 90F4
 798+ 90F4 ED 42        1 sbc hl,bc
 799+ 90F6 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90F8
 801+ 90F8 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90FB 23               inc hl
 803+ 90FC 23               inc hl
 804+ 90FD 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9100 18 BA            jr 2B
 806+ 9102
 807+ 9102 CD 04 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9105              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9105
 810+ 9105              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9105
 812+ 9105 01 8A 85         ld bc,Disparo_11
 813+ 9108 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 910B
 815+ 910B CD 83 8C     5 call Extrae_address
 816+ 910E 7E               ld a,(hl)
 817+ 910F A7               and a
 818+ 9110 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9112
 820+ 9112              ; ----- ----- ----- ----- ----- -----
 821+ 9112
 822+ 9112 C5               push bc
 823+ 9113 CD 88 91         call foto_disparo_a_borrar
 824+ 9116
 825+ 9116              ; Existe colisión con este disparo???
 826+ 9116
 827+ 9116 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9117 7E               ld a,(hl)
 829+ 9118 2B               dec hl
 830+ 9119 E6 01            and 1
 831+ 911B 28 4D            jr z,10F
 832+ 911D
 833+ 911D              ;! La colisión se produce con Amadeus???
 834+ 911D              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 911D
 836+ 911D E5               push hl
 837+ 911E
 838+ 911E 06 04            ld b,4
 839+ 9120 23           16 inc hl
 840+ 9121 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9123
 842+ 9123 CD 83 8C         call Extrae_address
 843+ 9126 CD F9 9C         call Genera_coordenadas_disparo
 844+ 9129
 845+ 9129 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 912A FE 16            cp $16
 847+ 912C 38 2A            jr c,15F
 848+ 912E
 849+ 912E
 850+ 912E              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 912E
 852+ 912E D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 912F
 854+ 912F              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 912F
 856+ 912F
 857+ 912F 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9132
 859+ 9132              ; Coordenada X de Amadeus en D.
 860+ 9132
 861+ 9132 7D               ld a,l
 862+ 9133 E6 1F            and $1F
 863+ 9135 57               ld d,a
 864+ 9136
 865+ 9136 21 A6 85         ld hl,Amadeus_db+8
 866+ 9139 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 913A
 868+ 913A 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 913D CD 12 92         call Guarda_coordenadas_X
 870+ 9140
 871+ 9140 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9141
 873+ 9141              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9141
 875+ 9141 06 02            ld b,2
 876+ 9143 C5           20 push bc
 877+ 9144
 878+ 9144 06 03            ld b,3
 879+ 9146 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 9149 7E           18 ld a,(hl)
 881+ 914A BA               cp d
 882+ 914B 20 04            jr nz,17F
 883+ 914D
 884+ 914D              ;! Colisión Amadeus !!!!!!!!!!
 885+ 914D
 886+ 914D C1               pop bc
 887+ 914E E1               pop hl
 888+ 914F 18 0D            jr 14F
 889+ 9151
 890+ 9151 23           17 inc hl
 891+ 9152 10 F5            djnz 18B
 892+ 9154
 893+ 9154 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9155
 895+ 9155 C1               pop bc
 896+ 9156 10 EB            djnz 20B
 897+ 9158
 898+ 9158
 899+ 9158              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9158              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9158
 902+ 9158 E1           15 pop hl
 903+ 9159 23               inc hl
 904+ 915A 35               dec (hl)
 905+ 915B 2B               dec hl
 906+ 915C 18 0C            jr 10F
 907+ 915E
 908+ 915E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 915E              ; _ almacén de coordenadas_X de Amadeus.
 910+ 915E
 911+ 915E E5           14 push hl
 912+ 915F CD 07 92         call Elimina_disparo_de_base_de_datos
 913+ 9162 21 43 89         ld hl,Impacto2
 914+ 9165 CB CE            set 1,(hl)
 915+ 9167 E1               pop hl
 916+ 9168 18 06            jr 12F
 917+ 916A
 918+ 916A              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 916A
 920+ 916A CD B1 91     10 call Mueve_disparo
 921+ 916D CD 88 91         call foto_disparo_a_borrar
 922+ 9170 C1           12 pop bc
 923+ 9171
 924+ 9171 18 04            jr 8F
 925+ 9173
 926+ 9173              ; ----- ----- ----- ----- ----- -----
 927+ 9173
 928+ 9173 ED 42        4 sbc hl,bc
 929+ 9175 28 0A            jr z,6F
 930+ 9177
 931+ 9177 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 917A 23               inc hl
 933+ 917B 23               inc hl
 934+ 917C 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 917F 18 8A            jr 5B
 936+ 9181
 937+ 9181 CD FD 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9184 CD 4E 92         call Limpia_Coordenadas_X
 939+ 9187 C9               ret
 940+ 9188
 941+ 9188              ; ------------------------------------------------------------------
 942+ 9188
 943+ 9188              foto_disparo_a_borrar
 944+ 9188
 945+ 9188 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9189 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 918A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 918B
 949+ 918B E5               push hl
 950+ 918C 23               inc hl
 951+ 918D 23               inc hl
 952+ 918E ED 73 15 89      ld (Stack),sp
 953+ 9192 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9193 FD E1            pop iy
 955+ 9195 DD E1            pop ix
 956+ 9197 E1               pop hl
 957+ 9198 ED 7B 15 89      ld sp,(Stack)
 958+ 919C 3A 04 89         ld a,(Ctrl_1)
 959+ 919F CB C7            set 0,a
 960+ 91A1 32 04 89         ld (Ctrl_1),a
 961+ 91A4 CD A0 7F         call Guarda_foto_registros
 962+ 91A7 3A 04 89         ld a,(Ctrl_1)
 963+ 91AA CB 87            res 0,a
 964+ 91AC 32 04 89         ld (Ctrl_1),a
 965+ 91AF E1               pop hl
 966+ 91B0 C9               ret
 967+ 91B1
 968+ 91B1              ;---------------------------------------------------
 969+ 91B1              ;
 970+ 91B1              ;   18/07/23
 971+ 91B1              ;
 972+ 91B1
 973+ 91B1              Mueve_disparo
 974+ 91B1
 975+ 91B1              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91B1              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91B1              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91B1
 979+ 91B1 E5               push hl
 980+ 91B2
 981+ 91B2 7E               ld a,(hl)
 982+ 91B3
 983+ 91B3 06 04            ld b,4
 984+ 91B5 23           1 inc hl
 985+ 91B6 10 FD            djnz 1B
 986+ 91B8
 987+ 91B8              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91B8
 989+ 91B8 CD 83 8C         call Extrae_address
 990+ 91BB
 991+ 91BB E6 01            and 1
 992+ 91BD 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91BF
 994+ 91BF              ; Disparo hacia arriba, (Amadeus).
 995+ 91BF
 996+ 91BF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91BF              ; _ de la dificultad.
 998+ 91BF
 999+ 91BF CD 3F 96         call PreviousScan
1000+ 91C2 CD 3F 96         call PreviousScan
1001+ 91C5 CD 3F 96         call PreviousScan
1002+ 91C8 CD 3F 96         call PreviousScan
1003+ 91CB
1004+ 91CB              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91CB
1006+ 91CB 7C               ld a,h
1007+ 91CC FE 40            cp $40
1008+ 91CE 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91D0
1010+ 91D0              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91D0
1012+ 91D0 EB               ex de,hl
1013+ 91D1 06 04            ld b,4
1014+ 91D3 2B           6 dec hl
1015+ 91D4 10 FD            djnz 6B
1016+ 91D6
1017+ 91D6 CD 07 92         call Elimina_disparo_de_base_de_datos
1018+ 91D9 E1               pop hl
1019+ 91DA 18 10            jr 7F
1020+ 91DC
1021+ 91DC              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91DC              ; HL contiene el puntero de impresión del disparo.
1023+ 91DC              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91DC
1025+ 91DC D5           3 push de
1026+ 91DD C5               push bc
1027+ 91DE
1028+ 91DE CD A6 8F         call Comprueba_Colision
1029+ 91E1
1030+ 91E1              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91E1
1032+ 91E1 78               ld a,b
1033+ 91E2
1034+ 91E2 C1               pop bc
1035+ 91E3 D1               pop de
1036+ 91E4
1037+ 91E4 EB               ex de,hl
1038+ 91E5
1039+ 91E5 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91E6 23               inc hl                                      ; _ movimiento.
1041+ 91E7 72               ld (hl),d
1042+ 91E8
1043+ 91E8 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91E9
1045+ 91E9 23               inc hl                                      ; _ en curso.
1046+ 91EA 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91EB 2B               dec hl
1048+ 91EC
1049+ 91EC C9           7 ret
1050+ 91ED
1051+ 91ED              ; Disparo hacia abajo, (Entidad).
1052+ 91ED
1053+ 91ED 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91F0 47               ld b,a
1055+ 91F1
1056+ 91F1 CD 30 96     4 call NextScan
1057+ 91F4 10 FB            djnz 4B
1058+ 91F6
1059+ 91F6              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91F6
1061+ 91F6 7C               ld a,h
1062+ 91F7 FE 58            cp $58
1063+ 91F9 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91FB
1065+ 91FB EB               ex de,hl
1066+ 91FC 06 04            ld b,4
1067+ 91FE 2B           5 dec hl
1068+ 91FF 10 FD            djnz 5B
1069+ 9201
1070+ 9201 CD 07 92         call Elimina_disparo_de_base_de_datos
1071+ 9204 E1               pop hl
1072+ 9205 18 E5            jr 7B
1073+ 9207
1074+ 9207              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9207
1076+ 9207 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 920A AF               xor a
1078+ 920B 77               ld (hl),a
1079+ 920C 54               ld d,h
1080+ 920D 5D               ld e,l
1081+ 920E 13               inc de
1082+ 920F ED B0            ldir
1083+ 9211 C9               ret
1084+ 9212
1085+ 9212              ; -----------------------------------------------------------------
1086+ 9212              ;
1087+ 9212              ;   19/7/23
1088+ 9212              ;
1089+ 9212              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9212              ;
1091+ 9212              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9212              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9212              ;
1094+ 9212              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9212              ;
1096+ 9212              ;   INPUTS:
1097+ 9212              ;
1098+ 9212              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9212              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9212
1101+ 9212              ;   MODIFICA: A, HL, BC y DE.
1102+ 9212
1103+ 9212              Guarda_coordenadas_X
1104+ 9212
1105+ 9212 7B               ld a,e
1106+ 9213 A7               and a
1107+ 9214 20 04            jr nz,1F
1108+ 9216
1109+ 9216 06 02            ld b,2
1110+ 9218 18 02            jr 2F
1111+ 921A
1112+ 921A 06 03        1 ld b,3
1113+ 921C 72           2 ld (hl),d
1114+ 921D 23               inc hl
1115+ 921E 14               inc d
1116+ 921F 10 FB            djnz 2B
1117+ 9221
1118+ 9221 C9               ret
1119+ 9222
1120+ 9222              ; -----------------------------------------------------------------
1121+ 9222              ;
1122+ 9222              ;   12/04/23
1123+ 9222              ;
1124+ 9222
1125+ 9222 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9225 A7               and a
1127+ 9226 C8               ret z
1128+ 9227
1129+ 9227 FE 04            cp 4
1130+ 9229 20 09            jr nz,1F
1131+ 922B
1132+ 922B
1133+ 922B              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 922B
1135+ 922B CD 47 90         call Detecta_colision_nave_entidad
1136+ 922E
1137+ 922E 21 43 89         ld hl,Impacto2
1138+ 9231 CB 5E            bit 3,(hl)
1139+ 9233 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9234
1141+ 9234              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9234              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9234
1144+ 9234 21 43 89     1 ld hl,Impacto2
1145+ 9237 CB 4E            bit 1,(hl)
1146+ 9239 28 07            jr z,2F
1147+ 923B
1148+ 923B 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 923E 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9240 18 0B            jr 3F
1151+ 9242
1152+ 9242 21 43 89     2 ld hl,Impacto2
1153+ 9245 CB 46            bit 0,(hl)
1154+ 9247 C8               ret z
1155+ 9248
1156+ 9248              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9248
1158+ 9248 21 04 89         ld hl,Ctrl_1
1159+ 924B CB D6            set 2,(hl)
1160+ 924D
1161+ 924D C9           3 ret
1162+ 924E
1163+ 924E              ; -----------------------------------------------------------------
1164+ 924E              ;
1165+ 924E              ;   19/7/23
1166+ 924E              ;
1167+ 924E              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 924E
1169+ 924E AF           Limpia_Coordenadas_X xor a
1170+ 924F 06 06            ld b,6
1171+ 9251 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 9254 77           1 ld (hl),a
1173+ 9255 23               inc hl
1174+ 9256 10 FC            djnz 1B
1175+ 9258 C9               ret
1176+ 9259
1177+ 9259              ; -----------------------------------------------------------------
1178+ 9259              ;
1179+ 9259              ;   25/04/23
1180+ 9259              ;
1181+ 9259
1182+ 9259              Determina_resultado_comparativa
1183+ 9259
1184+ 9259              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9259              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9259              ;
1187+ 9259              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9259              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9259              ;
1190+ 9259              ;   SBC HL,DE
1191+ 9259
1192+ 9259              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9259              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9259
1195+ 9259              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9259              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9259
1198+ 9259
1199+ 9259 3A DB 88         ld a,(Cuad_objeto)
1200+ 925C FE 02            cp 2
1201+ 925E 28 26            jr z,2F
1202+ 9260 38 24            jr c,2F
1203+ 9262
1204+ 9262              ; Cuadrantes 3º y 4º
1205+ 9262
1206+ 9262 E6 01            and 1
1207+ 9264 28 10            jr z,4F
1208+ 9266
1209+ 9266              ; Cuadrante 3º
1210+ 9266
1211+ 9266 7C               ld a,h
1212+ 9267 06 00            ld b,0
1213+ 9269
1214+ 9269 CD F4 92         call Compara_cositas_H3
1215+ 926C
1216+ 926C 04               inc b
1217+ 926D 05               dec b
1218+ 926E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 926F
1220+ 926F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9270 06 00            ld b,0
1222+ 9272
1223+ 9272 CD 06 93         call Compara_cositas_L3
1224+ 9275 C9               ret
1225+ 9276
1226+ 9276              ; Cuadrante 4º
1227+ 9276
1228+ 9276 7C           4 ld a,h
1229+ 9277 06 00            ld b,0
1230+ 9279
1231+ 9279 CD 18 93         call Compara_cositas_H4
1232+ 927C
1233+ 927C 04               inc b
1234+ 927D 05               dec b
1235+ 927E C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 927F
1237+ 927F 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9280 06 00            ld b,0
1239+ 9282
1240+ 9282 CD 2E 93         call Compara_cositas_L4
1241+ 9285 C9               ret
1242+ 9286
1243+ 9286              ; Cuadrantes 1º y 2º.
1244+ 9286
1245+ 9286 28 10        2 jr z,3F
1246+ 9288
1247+ 9288              ; 1er Cuadrante
1248+ 9288
1249+ 9288 7C               ld a,h
1250+ 9289 06 00            ld b,0
1251+ 928B
1252+ 928B CD CC 92         call Compara_cositas_H1
1253+ 928E
1254+ 928E 04               inc b
1255+ 928F 05               dec b
1256+ 9290 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9291
1258+ 9291 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9292 06 00            ld b,0
1260+ 9294
1261+ 9294 CD E2 92         call Compara_cositas_L1
1262+ 9297 C9               ret
1263+ 9298
1264+ 9298
1265+ 9298              ; 2º Cuadrante
1266+ 9298
1267+ 9298 7C           3 ld a,h
1268+ 9299 06 00            ld b,0
1269+ 929B
1270+ 929B CD A8 92         call Compara_cositas_H2
1271+ 929E
1272+ 929E 04               inc b
1273+ 929F 05               dec b
1274+ 92A0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92A1
1276+ 92A1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92A2 06 00            ld b,0
1278+ 92A4
1279+ 92A4 CD BA 92         call Compara_cositas_L2
1280+ 92A7 C9               ret
1281+ 92A8
1282+ 92A8 A7           Compara_cositas_H2 and a
1283+ 92A9 28 0D            jr z,1F
1284+ 92AB              ;    cp $fd
1285+ 92AB              ;    jr z,1F
1286+ 92AB              ;    cp $fe
1287+ 92AB              ;    jr z,1F
1288+ 92AB FE FF            cp $ff
1289+ 92AD 28 09            jr z,1F
1290+ 92AF FE 01            cp $01
1291+ 92B1 28 05            jr z,1F
1292+ 92B3 FE 02            cp $02
1293+ 92B5 28 01            jr z,1F
1294+ 92B7 C0               ret nz
1295+ 92B8 04           1 inc b
1296+ 92B9 C9               ret
1297+ 92BA
1298+ 92BA A7           Compara_cositas_L2 and a
1299+ 92BB 28 0D            jr z,1F
1300+ 92BD              ;    cp $fd
1301+ 92BD              ;    jr z,1F
1302+ 92BD FE FE            cp $fe
1303+ 92BF 28 09            jr z,1F
1304+ 92C1 FE FF            cp $ff
1305+ 92C3 28 05            jr z,1F
1306+ 92C5 FE 01            cp $01
1307+ 92C7 28 01            jr z,1F
1308+ 92C9              ;    cp $02
1309+ 92C9              ;    jr z,1F
1310+ 92C9 C0               ret nz
1311+ 92CA 04           1 inc b
1312+ 92CB C9               ret
1313+ 92CC
1314+ 92CC A7           Compara_cositas_H1 and a
1315+ 92CD 28 11            jr z,1F
1316+ 92CF              ;    cp $fd
1317+ 92CF              ;    jr z,1F
1318+ 92CF              ;    cp $fe
1319+ 92CF              ;    jr z,1F
1320+ 92CF FE FF            cp $ff
1321+ 92D1 28 0D            jr z,1F
1322+ 92D3 FE 01            cp $01
1323+ 92D5 28 09            jr z,1F
1324+ 92D7 FE 02            cp $02
1325+ 92D9 28 05            jr z,1F
1326+ 92DB FE 03            cp $03
1327+ 92DD 28 01            jr z,1F
1328+ 92DF C0               ret nz
1329+ 92E0 04           1 inc b
1330+ 92E1 C9               ret
1331+ 92E2
1332+ 92E2 A7           Compara_cositas_L1 and a
1333+ 92E3 28 0D            jr z,1F
1334+ 92E5              ;    cp $fd
1335+ 92E5              ;    jr z,1F
1336+ 92E5              ;    cp $fe
1337+ 92E5              ;    jr z,1F
1338+ 92E5              ;    cp $ff
1339+ 92E5              ;    jr z,1F
1340+ 92E5 FE 01            cp $01
1341+ 92E7 28 09            jr z,1F
1342+ 92E9 FE 02            cp $02
1343+ 92EB 28 05            jr z,1F
1344+ 92ED FE 03            cp $03
1345+ 92EF 28 01            jr z,1F
1346+ 92F1 C0               ret nz
1347+ 92F2 04           1 inc b
1348+ 92F3 C9               ret
1349+ 92F4
1350+ 92F4 A7           Compara_cositas_H3 and a
1351+ 92F5 28 0D            jr z,1F
1352+ 92F7              ;    cp $fd
1353+ 92F7              ;    jr z,1F
1354+ 92F7 FE FE            cp $fe
1355+ 92F9 28 09            jr z,1F
1356+ 92FB FE FF            cp $ff
1357+ 92FD 28 05            jr z,1F
1358+ 92FF FE 01            cp $01
1359+ 9301 28 01            jr z,1F
1360+ 9303              ;    cp $02
1361+ 9303              ;    jr z,1F
1362+ 9303              ;    cp $03
1363+ 9303              ;    jr z,1F
1364+ 9303 C0               ret nz
1365+ 9304 04           1 inc b
1366+ 9305 C9               ret
1367+ 9306
1368+ 9306 A7           Compara_cositas_L3 and a
1369+ 9307 28 0D            jr z,1F
1370+ 9309              ;    cp $fd
1371+ 9309              ;    jr z,1F
1372+ 9309              ;    cp $fe
1373+ 9309              ;    jr z,1F
1374+ 9309              ;    cp $ff
1375+ 9309              ;    jr z,1F
1376+ 9309 FE 01            cp $01
1377+ 930B 28 09            jr z,1F
1378+ 930D FE 02            cp $02
1379+ 930F 28 05            jr z,1F
1380+ 9311 FE 03            cp $03
1381+ 9313 28 01            jr z,1F
1382+ 9315 C0               ret nz
1383+ 9316 04           1 inc b
1384+ 9317 C9               ret
1385+ 9318
1386+ 9318 A7           Compara_cositas_H4 and a
1387+ 9319 28 11            jr z,1F
1388+ 931B FE FD            cp $fd
1389+ 931D 28 0D            jr z,1F
1390+ 931F FE FE            cp $fe
1391+ 9321 28 09            jr z,1F
1392+ 9323 FE FF            cp $ff
1393+ 9325 28 05            jr z,1F
1394+ 9327 FE 01            cp $01
1395+ 9329 28 01            jr z,1F
1396+ 932B              ;    cp $02
1397+ 932B              ;    jr z,1F
1398+ 932B              ;    cp $03
1399+ 932B              ;    jr z,1F
1400+ 932B C0               ret nz
1401+ 932C 04           1 inc b
1402+ 932D C9               ret
1403+ 932E
1404+ 932E A7           Compara_cositas_L4 and a
1405+ 932F 28 0D            jr z,1F
1406+ 9331              ;    cp $fd
1407+ 9331              ;    jr z,1F
1408+ 9331 FE FE            cp $fe
1409+ 9333 28 09            jr z,1F
1410+ 9335 FE FF            cp $ff
1411+ 9337 28 05            jr z,1F
1412+ 9339 FE 01            cp $01
1413+ 933B 28 01            jr z,1F
1414+ 933D              ;    cp $02
1415+ 933D              ;    jr z,1F
1416+ 933D              ;    cp $03
1417+ 933D              ;    jr z,1F
1418+ 933D C0               ret nz
1419+ 933E 04           1 inc b
1420+ 933F C9               ret
# file closed: Disparo.asm
1646  9340              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9340              ; ******************************************************************************************************************************************************************************************
   2+ 9340              ;
   3+ 9340              ; 26/06/23
   4+ 9340              ;
   5+ 9340              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9340
   7+ 9340 CD 24 96     Draw call Prepara_draw
   8+ 9343 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9344 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9345 28 05        	jr z,2F
  11+ 9347
  12+ 9347 3A DB 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 934A 18 0C        	jr 1F
  14+ 934C
  15+ 934C 2A D9 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 934F 22 C9 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9352 CD E1 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9355              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9355 CD 84 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9358
  21+ 9358 3A F1 88     1 ld a,(Ctrl_0)
  22+ 935B CB 6F        	bit 5,a
  23+ 935D 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 935F
  25+ 935F CD 77 93     	call Comprueba_limite_horizontal
  26+ 9362 CD 07 94     	call Comprueba_limite_vertical
  27+ 9365
  28+ 9365              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9365              ; -----------------------
  30+ 9365              ; -----------------------
  31+ 9365              ; -----------------------
  32+ 9365
  33+ 9365 CD 54 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9368 CD 8B 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 936B CD EA 95     	call Define_rutina_de_impresion
  36+ 936E
  37+ 936E 3A F1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9371 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9373 32 F1 88     	ld (Ctrl_0),a
  40+ 9376
  41+ 9376 C9           	ret
  42+ 9377
  43+ 9377              ; *******************************************************************************************************************************************************************************************
  44+ 9377              ;	21/01/23
  45+ 9377              ;
  46+ 9377              ; 	Comprueba_limite_horizontal.
  47+ 9377              ;
  48+ 9377              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9377              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9377              ;
  51+ 9377              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9377              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9377              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9377              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9377
  56+ 9377
  57+ 9377
  58+ 9377 3A F1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 937A CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 937C 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 937E E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9380 32 F1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9383 18 09            jr 6F
  64+ 9385 CB 5F        1 bit 3,a
  65+ 9387 28 0A            jr z,2F
  66+ 9389 E6 F7            and $f7
  67+ 938B 32 F1 88         ld (Ctrl_0),a
  68+ 938E CD E1 94     6 call Inicializacion
  69+ 9391 18 5B            jr 5F
  70+ 9393 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9394
  72+ 9394              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9394              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9394
  75+ 9394 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9395 2A FF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9398 CD 43 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 939B 67           	ld h,a
  79+ 939C EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 939D CD 43 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93A0 67           	ld h,a
  82+ 93A1 A7           	and a
  83+ 93A2 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93A4 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93A5 3A DB 88     	ld a,(Cuad_objeto)
  86+ 93A8 FE 02        	cp 2
  87+ 93AA 38 1E        	jr c,3F
  88+ 93AC 28 1C        	jr z,3F
  89+ 93AE 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93AF 28 23            jr z,7F
  91+ 93B1 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93B3 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93B5 E1           	pop hl
  94+ 93B6
  95+ 93B6              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93B6              ; _para indicar con E="2" en caso necesario.
  97+ 93B6
  98+ 93B6 E5               push hl
  99+ 93B7 C5               push bc
 100+ 93B8 CD 43 99     	call calcula_tercio
 101+ 93BB FE 01        	cp 1
 102+ 93BD 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93BF CD EF 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93C2 28 26            jr z,9F
 105+ 93C4 38 24            jr c,9F
 106+ 93C6 1E 00        11 ld e,0
 107+ 93C8 18 22            jr 8F
 108+ 93CA 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93CB 28 07        	jr z, 7F
 110+ 93CD 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93CF 1E 00         	ld e,0
 112+ 93D1 E1           	pop hl
 113+ 93D2 18 04        	jr 4F
 114+ 93D4 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93D6 18 15            jr 10F
 116+ 93D8
 117+ 93D8              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93D8              ; _para indicar con E="2" en caso necesario.
 119+ 93D8
 120+ 93D8 E5           4 push hl
 121+ 93D9 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93DA CD 43 99     	call calcula_tercio
 123+ 93DD FE 01        	cp 1
 124+ 93DF 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93E1 CD EF 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93E4 28 04            jr z,9F
 127+ 93E6 30 02            jr nc,9F
 128+ 93E8 18 02        	jr 8F
 129+ 93EA 1E 02        9 ld e,2
 130+ 93EC C1           8 pop bc
 131+ 93ED E1           10 pop hl
 132+ 93EE C9           5 ret
 133+ 93EF
 134+ 93EF              ; --------------------
 135+ 93EF              ;
 136+ 93EF              ; 25/08/22
 137+ 93EF
 138+ 93EF CD 43 99     Comprueba_centro call calcula_tercio
 139+ 93F2 67               ld h,a
 140+ 93F3 08           	ex af,af
 141+ 93F4 FE 02        	cp 2
 142+ 93F6 38 07        	jr c,1F
 143+ 93F8 28 05        	jr z,1F
 144+ 93FA 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93FD 18 03        	jr 2F
 146+ 93FF 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9402 08           2 ex af,af
 148+ 9403 A7               and a
 149+ 9404 ED 42            sbc hl,bc
 150+ 9406 C9               ret
 151+ 9407
 152+ 9407              ; *********************************************************************************************************************************************************************************************
 153+ 9407              ;
 154+ 9407              ;   16/8/22
 155+ 9407              ;
 156+ 9407              ;	Comprueba_limite_vertical
 157+ 9407              ;
 158+ 9407              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9407              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9407              ;
 161+ 9407
 162+ 9407 2A C9 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 940A 7D           	ld a,l
 164+ 940B E6 1F        	and $1F
 165+ 940D 57           	ld d,a
 166+ 940E 3A 01 89     	ld a,(Limite_vertical)
 167+ 9411 BA           	cp d 											; Límite - Posición.
 168+ 9412 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9413 3A DB 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9416 CB 47        	bit 0,a
 171+ 9418 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 941A
 173+ 941A              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 941A
 175+ 941A 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 941B 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 941D
 178+ 941D              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 941D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 941D
 181+ 941D 3A CD 88         ld a,(Coordenada_X)
 182+ 9420 16 0F            ld d,Centro_izquierda
 183+ 9422 A7               and a
 184+ 9423 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9424 28 1E            jr z,3F
 186+ 9426 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9428              ;                                                    ; _salimos sin modificar nada.
 188+ 9428 18 0E            jr 2F
 189+ 942A 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 942B 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 942D
 192+ 942D              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 942D              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 942D
 195+ 942D 3A CD 88         ld a,(Coordenada_X)
 196+ 9430 16 10            ld d,Centro_derecha
 197+ 9432 A7               and a
 198+ 9433 92               sub d
 199+ 9434 28 0E            jr z,3F
 200+ 9436 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9438              ;                                                    ; _salimos sin modificar nada.
 202+ 9438 CB 43        2 bit 0,e
 203+ 943A 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 943C C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 943D CD D1 94         call Modificaccionne
 206+ 9440 C1           	pop bc
 207+ 9441 CD E1 94         call Inicializacion
 208+ 9444 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9445
 210+ 9445              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9445
 212+ 9445 C5           4 push bc
 213+ 9446 01 C8 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9449 0A           	ld a,(bc)
 215+ 944A 3D           	dec a
 216+ 944B 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 944C 7D           	ld a,l
 218+ 944D 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 944E CB 47        	bit 0,a
 220+ 9450 28 03        	jr z,5F
 221+ 9452 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9453 18 2E        	jr 7F
 223+ 9455
 224+ 9455              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9455
 226+ 9455 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9456 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9457 3A F1 88     	ld a,(Ctrl_0)
 229+ 945A CB 4F        	bit 1,a
 230+ 945C 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 945E F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 945F
 233+ 945F              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 945F
 235+ 945F 1C               inc e
 236+ 9460 1D               dec e
 237+ 9461 20 07            jr nz,12F
 238+ 9463 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9464 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9465 22 C9 88     	ld (Posicion_actual),hl
 241+ 9468 18 44        13 jr 9F
 242+ 946A CB 43        12 bit 0,e
 243+ 946C 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 946E              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 946E C1           	pop bc
 246+ 946F 18 D3        	jr 3B
 247+ 9471 80           14 add b
 248+ 9472 6F               ld l,a
 249+ 9473 22 C9 88     	ld (Posicion_actual),hl
 250+ 9476 CD D1 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9479 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 947B E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 947D 32 F1 88         ld (Ctrl_0),a
 254+ 9480 F1           	pop af
 255+ 9481 18 2B        	jr 9F
 256+ 9483
 257+ 9483              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9483
 259+ 9483 F5           7 push af
 260+ 9484 3A F1 88     	ld a,(Ctrl_0)
 261+ 9487 CB 47        	bit 0,a
 262+ 9489 20 1D        	jr nz,8F
 263+ 948B F1           	pop af
 264+ 948C
 265+ 948C              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 948C
 267+ 948C 1C           	inc e
 268+ 948D 1D               dec e
 269+ 948E 20 07            jr nz,10F
 270+ 9490 90           	sub b
 271+ 9491 6F               ld l,a
 272+ 9492 22 C9 88     	ld (Posicion_actual),hl
 273+ 9495 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9497              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9497 CB 43        10 bit 0,e
 276+ 9499 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 949B              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 949B C1           	pop bc
 279+ 949C 18 A6        	jr 3B
 280+ 949E 90           16 sub b
 281+ 949F 6F               ld l,a
 282+ 94A0 22 C9 88     	ld (Posicion_actual),hl
 283+ 94A3 CD D1 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94A6 18 06            jr 9F
 285+ 94A8 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94AA 32 F1 88         ld (Ctrl_0),a
 287+ 94AD F1           	pop af
 288+ 94AE C1           9 pop bc
 289+ 94AF 1E 00        	ld e,0
 290+ 94B1 CD E1 94         call Inicializacion
 291+ 94B4 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94B5 08           	ex af,af
 293+ 94B6 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94B7 18 8B            jr 3B
 295+ 94B9
 296+ 94B9              ; --------------------
 297+ 94B9
 298+ 94B9 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94BB CD 3F 96     1 call PreviousScan
 300+ 94BE 10 FB            djnz 1B
 301+ 94C0 22 C9 88     	ld (Posicion_actual),hl
 302+ 94C3 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94C4 C9           	ret
 304+ 94C5
 305+ 94C5              ; --------------------
 306+ 94C5
 307+ 94C5 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94C7 CD 30 96     1 call NextScan
 309+ 94CA 10 FB            djnz 1B
 310+ 94CC 22 C9 88     	ld (Posicion_actual),hl
 311+ 94CF AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94D0 C9           	ret
 313+ 94D1
 314+ 94D1              ; --------------------
 315+ 94D1              ;
 316+ 94D1              ;	22/01/23
 317+ 94D1              ;
 318+ 94D1              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94D1              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94D1              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94D1
 322+ 94D1
 323+ 94D1              Modificaccionne
 324+ 94D1
 325+ 94D1 3A DB 88     	ld a,(Cuad_objeto)
 326+ 94D4 FE 02        	cp 2
 327+ 94D6 CC B9 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94D9 DC B9 94         call c,Modifica_Pos_actual
 329+ 94DC C8           	ret z
 330+ 94DD CD C5 94         call Modifica_Pos_actual2
 331+ 94E0 C9               ret
 332+ 94E1
 333+ 94E1              ; *************************************************************************************************************************************************************************************************
 334+ 94E1              ;
 335+ 94E1              ;	13/8/22
 336+ 94E1              ;
 337+ 94E1              ;	Inicializacion
 338+ 94E1              ;
 339+ 94E1              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94E1              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94E1              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94E1              ;
 343+ 94E1              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94E1              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94E1              ;	_ desaparece/aparece.
 346+ 94E1
 347+ 94E1              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94E1              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94E1              ;
 350+ 94E1              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94E1              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94E1              ; 		   [E] ="0"
 353+ 94E1
 354+ 94E1              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94E1
 356+ 94E1 CD 43 99     Inicializacion call calcula_tercio
 357+ 94E4 28 36        	jr z,primit
 358+ 94E6 E6 02        	and 2
 359+ 94E8 20 07        	jr nz,segmit
 360+ 94EA 7D           	ld a,l
 361+ 94EB FE 7F        	cp $7f
 362+ 94ED 38 2D        	jr c,primit
 363+ 94EF 28 2B        	jr z,primit
 364+ 94F1 CD 4E 95     segmit call column
 365+ 94F4 38 13        	jr c,tercuad
 366+ 94F6 3E 04        cuarcuad ld a,4
 367+ 94F8 32 DB 88     	ld (Cuad_objeto),a
 368+ 94FB 21 20 48     	ld hl,$4820
 369+ 94FE 22 FF 88     	ld (Limite_horizontal),hl
 370+ 9501 21 01 89     	ld hl,Limite_vertical
 371+ 9504 36 0D        	ld (hl),$0d
 372+ 9506 08           	ex af,af
 373+ 9507 18 3C        	jr 1F
 374+ 9509              tercuad
 375+ 9509 3E 03        	ld a,3
 376+ 950B 32 DB 88     	ld (Cuad_objeto),a
 377+ 950E 21 20 48     	ld hl,$4820
 378+ 9511 22 FF 88     	ld (Limite_horizontal),hl
 379+ 9514 21 01 89     	ld hl,Limite_vertical
 380+ 9517 36 12        	ld (hl),$12
 381+ 9519 08           	ex af,af
 382+ 951A 18 29        	jr 1F
 383+ 951C CD 4E 95     primit call column
 384+ 951F 38 13        	jr c, primcuad
 385+ 9521              segcuad
 386+ 9521 3E 02        	ld a,2
 387+ 9523 32 DB 88     	ld (Cuad_objeto),a
 388+ 9526 21 C0 4F     	ld hl,$4fc0
 389+ 9529 22 FF 88     	ld (Limite_horizontal),hl
 390+ 952C 21 01 89     	ld hl,Limite_vertical
 391+ 952F 36 0D        	ld (hl),$0d
 392+ 9531 08           	ex af,af
 393+ 9532 18 11        	jr 1F
 394+ 9534              primcuad
 395+ 9534 3E 01        	ld a,1
 396+ 9536 32 DB 88     	ld (Cuad_objeto),a
 397+ 9539 21 C0 4F     	ld hl,$4fc0
 398+ 953C 22 FF 88     	ld (Limite_horizontal),hl
 399+ 953F 21 01 89     	ld hl,Limite_vertical
 400+ 9542 36 12        	ld (hl),$12
 401+ 9544 08           	ex af,af
 402+ 9545 CD CE 9C     1 call Genera_coordenadas
 403+ 9548 21 F1 88     	ld hl,Ctrl_0
 404+ 954B CB EE        	set 5,(hl)
 405+ 954D C9           	ret
 406+ 954E
 407+ 954E              ; ------------------------------------------------------------------------------------------------------------------
 408+ 954E
 409+ 954E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 954E              ;
 411+ 954E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 954E
 413+ 954E 7D           column ld a,l
 414+ 954F E6 1F        	and $1f
 415+ 9551 FE 10         	cp $10
 416+ 9553 C9            	ret
 417+ 9554
 418+ 9554              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9554              ;
 420+ 9554              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9554              ;
 422+ 9554              ; 14/12/22
 423+ 9554              ;
 424+ 9554              ;	Modifica: A y BC.
 425+ 9554
 426+ 9554 3A DB 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9557 E6 01        	and 1
 428+ 9559 28 17        	jr z,1F
 429+ 955B
 430+ 955B              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 955B
 432+ 955B 3A CD 88     	ld a,(Coordenada_X)
 433+ 955E 47           	ld b,a
 434+ 955F 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9560 79           	ld a,c
 436+ 9561 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9562 38 08        	jr c,2F
 438+ 9564 47           	ld b,a
 439+ 9565 79           	ld a,c
 440+ 9566 90           	sub b
 441+ 9567 32 FE 88     	ld (Columnas),a
 442+ 956A 18 1B        	jr 4F
 443+ 956C 79           2 ld a,c
 444+ 956D 32 FE 88     	ld (Columnas),a
 445+ 9570 18 15        	jr 4F
 446+ 9572
 447+ 9572              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9572
 449+ 9572 3A CD 88     1 ld a,(Coordenada_X)
 450+ 9575 81           	add c
 451+ 9576 3D           	dec a
 452+ 9577 D6 1F        	sub $1f
 453+ 9579 38 08        	jr c,3F
 454+ 957B 47           	ld b,a
 455+ 957C 79           	ld a,c
 456+ 957D 90           	sub b
 457+ 957E 32 FE 88     	ld (Columnas),a
 458+ 9581 18 04        	jr 4F
 459+ 9583 79           3 ld a,c
 460+ 9584 32 FE 88     	ld (Columnas),a
 461+ 9587 D9           4 exx
 462+ 9588 4F           	ld c,a
 463+ 9589 D9           	exx
 464+ 958A C9            ret
 465+ 958B
 466+ 958B              ; --------------------------------------------------------------------------------------------------------------------
 467+ 958B              ;
 468+ 958B              ;   19/7/23
 469+ 958B              ;
 470+ 958B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 958B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 958B              ;
 473+ 958B              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 958B              ;			HL e IY Contienen (Puntero_objeto).
 475+ 958B              ;
 476+ 958B              ;	DESTRUYE: HL,B Y A.
 477+ 958B
 478+ 958B 3A DB 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 958E FE 02        	cp 2
 480+ 9590 38 18        	jr c,1F
 481+ 9592 28 16        	jr z,1F
 482+ 9594 E6 01        	and 1
 483+ 9596 28 0D        	jr z,3F
 484+ 9598
 485+ 9598              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9598
 487+ 9598 CD DE 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 959B
 489+ 959B 7D           9 ld a,l
 490+ 959C E6 1F        	and $1f
 491+ 959E 28 2A        	jr z,7F
 492+ 95A0 2B           	dec hl
 493+ 95A1 10 F8        	djnz 9B
 494+ 95A3 18 25        	jr 7F
 495+ 95A5
 496+ 95A5              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95A5
 498+ 95A5 2A C9 88     3 ld hl,(Posicion_actual)
 499+ 95A8 18 20        	jr 7F
 500+ 95AA
 501+ 95AA 28 14        1 jr z,2F
 502+ 95AC
 503+ 95AC              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95AC
 505+ 95AC CD DE 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95AF
 507+ 95AF 7D           4 ld a,l
 508+ 95B0 E6 1F        	and $1f
 509+ 95B2 28 03        	jr z,6F
 510+ 95B4 2B           	dec hl
 511+ 95B5 10 F8        	djnz 4B
 512+ 95B7 06 0F        6 ld b,15
 513+ 95B9 CD 3F 96     5 call PreviousScan
 514+ 95BC 10 FB        	djnz 5B
 515+ 95BE 18 0A        	jr 7F
 516+ 95C0
 517+ 95C0              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95C0
 519+ 95C0 CD DE 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95C3 06 0F        	ld b,15
 521+ 95C5 CD 3F 96     8 call PreviousScan
 522+ 95C8 10 FB        	djnz 8B
 523+ 95CA
 524+ 95CA E5           7 push hl
 525+ 95CB DD E1        	pop ix
 526+ 95CD
 527+ 95CD 2A CB 88     	ld hl,(Puntero_objeto)
 528+ 95D0 E5           	push hl
 529+ 95D1 FD E1        	pop iy
 530+ 95D3
 531+ 95D3              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95D3
 533+ 95D3 3A F1 88     	ld a,(Ctrl_0)
 534+ 95D6 CB 77        	bit 6,a
 535+ 95D8 C8           	ret z
 536+ 95D9
 537+ 95D9              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95D9              ; _ entidad / Amadeus´.
 539+ 95D9
 540+ 95D9 DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95DD
 542+ 95DD C9           	ret
 543+ 95DE
 544+ 95DE              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95DE              ;
 546+ 95DE              ;	2/1/23
 547+ 95DE              ;
 548+ 95DE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95DE              ;
 550+ 95DE              ;	Tras esta rutina tenemos:
 551+ 95DE              ;
 552+ 95DE              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95DE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95DE              ;
 555+ 95DE              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95DE
 557+ 95DE 2A C9 88     Operandos ld hl,(Posicion_actual)
 558+ 95E1 3A FE 88     	ld a,(Columnas)
 559+ 95E4 3D           	dec a
 560+ 95E5 20 01        	jr nz,1F
 561+ 95E7 3C           	inc a
 562+ 95E8 47           1 ld b,a
 563+ 95E9 C9           	ret
 564+ 95EA
 565+ 95EA              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95EA              ;
 567+ 95EA              ;	3/1/23
 568+ 95EA              ;
 569+ 95EA              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95EA              ;
 571+ 95EA              ;	Destruye: A,B,HL y DE.
 572+ 95EA
 573+ 95EA              Define_rutina_de_impresion
 574+ 95EA
 575+ 95EA 3A C8 88     	ld a,(Columns)
 576+ 95ED 47           	ld b,a
 577+ 95EE 3A FE 88     	ld a,(Columnas)
 578+ 95F1 B8           	cp b
 579+ 95F2 20 0D        	jr nz,2f
 580+ 95F4
 581+ 95F4              ;	La entidad se imprime entera.
 582+ 95F4
 583+ 95F4 21 13 97     	ld hl, Indice_entidades_completas
 584+ 95F7 E6 01        	and 1
 585+ 95F9 28 02        	jr z,1F
 586+ 95FB
 587+ 95FB 23           	inc hl
 588+ 95FC 23           	inc hl
 589+ 95FD
 590+ 95FD CD 83 8C     1 call Extrae_address
 591+ 9600 C9           	ret		;	ret
 592+ 9601
 593+ 9601              ;	La entidad no se imprime entera en pantalla.
 594+ 9601
 595+ 9601 3A DB 88     2 ld a,(Cuad_objeto)
 596+ 9604 E6 01        	and 1
 597+ 9606 28 17        	jr z,3F
 598+ 9608
 599+ 9608              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9608
 601+ 9608 21 17 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 960B 3A C8 88     4 ld a,(Columns)
 603+ 960E E6 01        	and 1
 604+ 9610 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9612
 606+ 9612 23           	inc hl
 607+ 9613 23           	inc hl
 608+ 9614
 609+ 9614 3A FE 88     	ld a,(Columnas)
 610+ 9617 E6 01        	and 1
 611+ 9619 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 961B
 613+ 961B 23           	inc hl
 614+ 961C 23           	inc hl
 615+ 961D
 616+ 961D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 961F
 618+ 961F 21 1D 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9622 18 E7        	jr 4B
 620+ 9624
 621+ 9624              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9624              ;
 623+ 9624              ;	Prepara_draw
 624+ 9624              ;
 625+ 9624              ;	Es una rutina de carga.
 626+ 9624              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9624              ;
 628+ 9624              ;	FUNCIONAMIENTO:
 629+ 9624              ;
 630+ 9624              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9624              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9624              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9624              ;
 634+ 9624              ;	DESTRUYE:
 635+ 9624              ;
 636+ 9624              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9624
 638+ 9624 21 C7 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9627 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9628 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9629 4E           	ld c,(hl)
 642+ 962A 2A C9 88     	ld hl,(Posicion_actual)
 643+ 962D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 962F C9           	ret
 645+ 9630
 646+ 9630              ;----------------------------------------------------------------------------------------------------------------
 647+ 9630              ;
 648+ 9630              ;	5/08/22
 649+ 9630              ;
 650+ 9630              ;   NextScan.
 651+ 9630              ;
 652+ 9630              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9630              ;
 654+ 9630              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9630              ;
 656+ 9630              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9630              ;
 658+ 9630              ;       DESTRUIDOS: AF y HL !!!
 659+ 9630              ;
 660+ 9630              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9630              ;
 662+ 9630
 663+ 9630 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9631 7C               ld a,h
 665+ 9632 E6 07            and 7
 666+ 9634 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9635
 668+ 9635 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9636 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9638 6F               ld l,a
 671+ 9639 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 963A
 673+ 963A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 963B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 963D 67               ld h,a
 676+ 963E C9               ret
 677+ 963F
 678+ 963F              ;----------------------------------------------------------------------------------------------------------------
 679+ 963F              ;
 680+ 963F              ;	5/08/22
 681+ 963F              ;
 682+ 963F              ;   PreviousScan.
 683+ 963F              ;
 684+ 963F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 963F              ;
 686+ 963F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 963F              ;
 688+ 963F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 963F              ;
 690+ 963F              ;       DESTRUIDOS: AF y HL !!!
 691+ 963F              ;
 692+ 963F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 963F              ;
 694+ 963F
 695+ 963F 7C           PreviousScan ld a,h
 696+ 9640 25               dec h               ; Dec H.
 697+ 9641 E6 07            and 7
 698+ 9643 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9644
 700+ 9644 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9645 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9647 6F               ld l,a
 703+ 9648 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9649
 705+ 9649 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 964A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 964C 67               ld h,a
 708+ 964D C9               ret
 709+ 964E
 710+ 964E              ; -----------------------------------------------------------------------------------
 711+ 964E              ;
 712+ 964E              ;	31/7/23
 713+ 964E              ;
 714+ 964E              ;	Rutina principal de pintado de entidades.
 715+ 964E              ;	Extrae la foto del frame, (entidades).
 716+ 964E
 717+ 964E              Extrae_foto_entidades
 718+ 964E
 719+ 964E 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9651 7E           	ld a,(hl)
 721+ 9652 A7           	and a
 722+ 9653 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9654
 724+ 9654              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9654
 726+ 9654 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9657 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9658 C8           	ret z
 729+ 9659
 730+ 9659              ; -----------------------------------
 731+ 9659
 732+ 9659 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 965D 31 00 70     	ld sp,Album_de_fotos
 734+ 9660
 735+ 9660 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9662 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9663 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9664
 739+ 9664 ED 73 17 89  	ld (Stack_2),sp
 740+ 9668 ED 7B 15 89  	ld sp,(Stack)
 741+ 966C
 742+ 966C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 966C
 744+ 966C 3E CD        	ld a,$cd
 745+ 966E 32 76 96     	ld (Imprime),a
 746+ 9671 EB           	ex de,hl
 747+ 9672 22 77 96     	ld (Imprime+1),hl
 748+ 9675 EB           	ex de,hl
 749+ 9676
 750+ 9676              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9676
 752+ 9676 00 00 00     Imprime db 0,0,0
 753+ 9679
 754+ 9679 ED 73 15 89  	ld (Stack),sp
 755+ 967D
 756+ 967D 3A 10 89     	ld a,(Numero_de_malotes)
 757+ 9680 3D           	dec a
 758+ 9681 28 09        	jr z,1F
 759+ 9683 32 10 89      	ld (Numero_de_malotes),a
 760+ 9686
 761+ 9686 ED 7B 17 89  	ld sp,(Stack_2)
 762+ 968A 18 D4        	jr 2B
 763+ 968C
 764+ 968C AF           1 xor a
 765+ 968D 32 17 89     	ld (Stack_2),a
 766+ 9690
 767+ 9690 C9           	ret
 768+ 9691
 769+ 9691              ; -----------------------------------------------------------------------------------
 770+ 9691              ;
 771+ 9691              ;	28/2/23
 772+ 9691              ;
 773+ 9691              ;	Pinta los disparos generados.
 774+ 9691
 775+ 9691              Extrae_foto_disparos
 776+ 9691
 777+ 9691 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9694 7E               ld a,(hl)
 779+ 9695 A7               and a
 780+ 9696 C8               ret z
 781+ 9697
 782+ 9697 3A 3E 89     	ld a,(Numero_de_disparotes)
 783+ 969A A7           	and a
 784+ 969B C8           	ret z
 785+ 969C ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 96A0 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 96A3
 788+ 96A3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 96A5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 96A6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 96A7
 792+ 96A7 ED 73 17 89  	ld (Stack_2),sp
 793+ 96AB ED 7B 15 89  	ld sp,(Stack)
 794+ 96AF
 795+ 96AF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96AF
 797+ 96AF 3E CD        	ld a,$cd
 798+ 96B1 32 B9 96     	ld (Imprime2),a
 799+ 96B4 EB           	ex de,hl
 800+ 96B5 22 BA 96     	ld (Imprime2+1),hl
 801+ 96B8 EB           	ex de,hl
 802+ 96B9
 803+ 96B9              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96B9
 805+ 96B9 00 00 00     Imprime2 db 0,0,0
 806+ 96BC
 807+ 96BC 3A 3E 89     	ld a,(Numero_de_disparotes)
 808+ 96BF 3D           	dec a
 809+ 96C0 28 09        	jr z,1F
 810+ 96C2 32 3E 89      	ld (Numero_de_disparotes),a
 811+ 96C5
 812+ 96C5 ED 7B 17 89  	ld sp,(Stack_2)
 813+ 96C9 18 D8        	jr 2B
 814+ 96CB
 815+ 96CB AF           1 xor a
 816+ 96CC 32 17 89     	ld (Stack_2),a
 817+ 96CF C9           	ret
 818+ 96D0
 819+ 96D0              ; -----------------------------------------------------------------------------------
 820+ 96D0              ;
 821+ 96D0              ;	4/9/23
 822+ 96D0              ;
 823+ 96D0              ;	Rutina principal de pintado de Amadeus.
 824+ 96D0              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96D0
 826+ 96D0 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96D3 7E           	ld a,(hl)
 828+ 96D4 A7           	and a
 829+ 96D5 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96D6
 831+ 96D6 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96D9 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96DA C8           	ret z
 834+ 96DB
 835+ 96DB              ; -----------------------------------
 836+ 96DB
 837+ 96DB ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96DF 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96E2
 840+ 96E2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96E4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96E5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96E6
 844+ 96E6 ED 73 17 89  	ld (Stack_2),sp
 845+ 96EA ED 7B 15 89  	ld sp,(Stack)
 846+ 96EE
 847+ 96EE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96EE
 849+ 96EE 3E CD        	ld a,$cd
 850+ 96F0 32 F8 96     	ld (Imprime_Amadeus),a
 851+ 96F3 EB           	ex de,hl
 852+ 96F4 22 F9 96     	ld (Imprime_Amadeus+1),hl
 853+ 96F7 EB           	ex de,hl
 854+ 96F8
 855+ 96F8              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96F8
 857+ 96F8 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96FB
 859+ 96FB ED 73 15 89  	ld (Stack),sp
 860+ 96FF
 861+ 96FF 3A 10 89     	ld a,(Numero_de_malotes)
 862+ 9702 3D           	dec a
 863+ 9703 28 09        	jr z,1F
 864+ 9705 32 10 89      	ld (Numero_de_malotes),a
 865+ 9708
 866+ 9708 ED 7B 17 89  	ld sp,(Stack_2)
 867+ 970C 18 D4        	jr 2B
 868+ 970E
 869+ 970E AF           1 xor a
 870+ 970F 32 17 89     	ld (Stack_2),a
 871+ 9712
 872+ 9712 C9           	ret
# file closed: Draw_XOR.asm
1647  9713              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9713              ;   índices de Rutinas de impresión.
   2+ 9713
   3+ 9713 23 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9715 50 97            defw Pinta_Amadeus_3x2
   5+ 9717
   6+ 9717 A6 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9719 46 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 971B FA 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 971D
  10+ 971D D0 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 971F D4 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9721 88 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9723
  14+ 9723
  15+ 9723              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9723              ;
  17+ 9723              ;   12/12/22
  18+ 9723              ;
  19+ 9723              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9723              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9723              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9723              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9723              ;
  24+ 9723              ;   Modifica: DE y HL.
  25+ 9723
  26+ 9723 ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9727 FD F9        	ld sp,iy
  28+ 9729 06 10            ld b,16
  29+ 972B D1           1 pop de
  30+ 972C 7B               ld a,e
  31+ 972D AE               xor (hl)
  32+ 972E 77           	ld (hl),a
  33+ 972F 23           	inc hl
  34+ 9730 7A               ld a,d
  35+ 9731 AE               xor (hl)
  36+ 9732 77           	ld (hl),a
  37+ 9733 2B           	dec hl
  38+ 9734 24           	inc h
  39+ 9735 7C               ld a,h
  40+ 9736 E6 07            and 7
  41+ 9738 20 0A            jr nz,2F
  42+ 973A 7D               ld a,l
  43+ 973B C6 20            add a,$20
  44+ 973D 6F               ld l,a
  45+ 973E 38 04            jr c,2F
  46+ 9740 7C               ld a,h
  47+ 9741 D6 08            sub 8
  48+ 9743 67               ld h,a
  49+ 9744 7C           2 ld a,h
  50+ 9745 FE 58            cp $58
  51+ 9747 28 02            jr z,3F
  52+ 9749 10 E0            djnz 1B
  53+ 974B ED 7B 15 89  3 ld sp,(Stack)
  54+ 974F C9           	ret
  55+ 9750
  56+ 9750 ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9754 FD F9        	ld sp,iy
  58+ 9756 06 08            ld b,8
  59+ 9758 D1           1 pop de
  60+ 9759 7B               ld a,e
  61+ 975A AE               xor (hl)
  62+ 975B 77           	ld (hl),a
  63+ 975C 23           	inc hl
  64+ 975D 7A               ld a,d
  65+ 975E AE               xor (hl)
  66+ 975F 77           	ld (hl),a
  67+ 9760 23           	inc hl
  68+ 9761 D1           	pop de
  69+ 9762 7B               ld a,e
  70+ 9763 AE               xor (hl)
  71+ 9764 77           	ld (hl),a
  72+ 9765 2B           	dec hl
  73+ 9766 2B           	dec hl
  74+ 9767 24           	inc h
  75+ 9768 7C               ld a,h
  76+ 9769 E6 07            and 7
  77+ 976B 20 0A            jr nz,2F
  78+ 976D 7D               ld a,l
  79+ 976E C6 20            add a,$20
  80+ 9770 6F               ld l,a
  81+ 9771 38 04            jr c,2F
  82+ 9773 7C               ld a,h
  83+ 9774 D6 08            sub 8
  84+ 9776 67               ld h,a
  85+ 9777 7C           2 ld a,h
  86+ 9778 FE 58            cp $58
  87+ 977A 28 25            jr z,4F
  88+ 977C 7A               ld a,d
  89+ 977D AE               xor (hl)
  90+ 977E 77               ld (hl),a
  91+ 977F D1           	pop de
  92+ 9780 23           	inc hl
  93+ 9781 7B               ld a,e
  94+ 9782 AE               xor (hl)
  95+ 9783 77           	ld (hl),a
  96+ 9784 23           	inc hl
  97+ 9785 7A               ld a,d
  98+ 9786 AE               xor (hl)
  99+ 9787 77           	ld (hl),a
 100+ 9788 2B           	dec hl
 101+ 9789 2B           	dec hl
 102+ 978A 24           	inc h
 103+ 978B 7C               ld a,h
 104+ 978C E6 07            and 7
 105+ 978E 20 0A            jr nz,3F
 106+ 9790 7D               ld a,l
 107+ 9791 C6 20            add a,$20
 108+ 9793 6F               ld l,a
 109+ 9794 38 04            jr c,3F
 110+ 9796 7C               ld a,h
 111+ 9797 D6 08            sub 8
 112+ 9799 67               ld h,a
 113+ 979A 7C           3 ld a,h
 114+ 979B FE 58            cp $58
 115+ 979D 28 02            jr z,4F
 116+ 979F 10 B7            djnz 1B
 117+ 97A1 ED 7B 15 89  4 ld sp,(Stack)
 118+ 97A5 C9           	ret
 119+ 97A6
 120+ 97A6              ; ---------------------------------------------------
 121+ 97A6
 122+ 97A6 ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97AA FD F9        	ld sp,iy
 124+ 97AC
 125+ 97AC              ; >>>
 126+ 97AC
 127+ 97AC 06 10            ld b,16
 128+ 97AE D1           1 pop de
 129+ 97AF 7A           	ld a,d
 130+ 97B0 AE           	xor (hl)
 131+ 97B1 77           	ld (hl),a
 132+ 97B2 24           	inc h
 133+ 97B3 7C               ld a,h
 134+ 97B4 E6 07            and 7
 135+ 97B6 20 0C            jr nz,2F
 136+ 97B8 7D               ld a,l
 137+ 97B9 C6 20            add a,$20
 138+ 97BB 6F               ld l,a
 139+ 97BC 38 06            jr c,2F
 140+ 97BE 7C               ld a,h
 141+ 97BF D6 08            sub 8
 142+ 97C1 67               ld h,a
 143+ 97C2 18 00            jr 2F
 144+ 97C4 7C           2 ld a,h
 145+ 97C5 FE 58            cp $58
 146+ 97C7 28 02            jr z,3F
 147+ 97C9 10 E3            djnz 1B
 148+ 97CB ED 7B 15 89  3 ld sp,(Stack)
 149+ 97CF C9           	ret
 150+ 97D0
 151+ 97D0 ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97D4 FD F9        	ld sp,iy
 153+ 97D6
 154+ 97D6              ; >>>
 155+ 97D6
 156+ 97D6 06 10            ld b,16
 157+ 97D8 D1           1 pop de
 158+ 97D9 7B           	ld a,e
 159+ 97DA AE           	xor (hl)
 160+ 97DB 77           	ld (hl),a
 161+ 97DC 24           	inc h
 162+ 97DD 7C               ld a,h
 163+ 97DE E6 07            and 7
 164+ 97E0 20 0C            jr nz,2F
 165+ 97E2 7D               ld a,l
 166+ 97E3 C6 20            add a,$20
 167+ 97E5 6F               ld l,a
 168+ 97E6 38 06            jr c,2F
 169+ 97E8 7C               ld a,h
 170+ 97E9 D6 08            sub 8
 171+ 97EB 67               ld h,a
 172+ 97EC 18 00            jr 2F
 173+ 97EE 7C           2 ld a,h
 174+ 97EF FE 58            cp $58
 175+ 97F1 28 02            jr z,3F
 176+ 97F3 10 E3            djnz 1B
 177+ 97F5 ED 7B 15 89  3 ld sp,(Stack)
 178+ 97F9 C9           	ret
 179+ 97FA
 180+ 97FA              ; ---------------------------------------------------
 181+ 97FA
 182+ 97FA ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97FE FD F9        	ld sp,iy
 184+ 9800 06 08            ld b,8
 185+ 9802 D1           1 pop de
 186+ 9803 7A           	ld a,d
 187+ 9804 AE           	xor (hl)
 188+ 9805 77           	ld (hl),a
 189+ 9806 23           	inc hl
 190+ 9807 D1           	pop de
 191+ 9808 7B           	ld a,e
 192+ 9809 AE           	xor (hl)
 193+ 980A 77           	ld (hl),a
 194+ 980B 2B           	dec hl
 195+ 980C 24            	inc h
 196+ 980D 7C               ld a,h
 197+ 980E E6 07            and 7
 198+ 9810 20 0A            jr nz,2F
 199+ 9812 7D               ld a,l
 200+ 9813 C6 20            add a,$20
 201+ 9815 6F               ld l,a
 202+ 9816 38 04            jr c,2F
 203+ 9818 7C               ld a,h
 204+ 9819 D6 08            sub 8
 205+ 981B 67               ld h,a
 206+ 981C 7C           2 ld a,h
 207+ 981D FE 58            cp $58
 208+ 981F 28 20            jr z,4F
 209+ 9821 D1               pop de
 210+ 9822 7B           	ld a,e
 211+ 9823 AE           	xor (hl)
 212+ 9824 77           	ld (hl),a
 213+ 9825 23           	inc hl
 214+ 9826 7A           	ld a,d
 215+ 9827 AE           	xor (hl)
 216+ 9828 77           	ld (hl),a
 217+ 9829 2B           	dec hl
 218+ 982A 24           	inc h
 219+ 982B 7C               ld a,h
 220+ 982C E6 07            and 7
 221+ 982E 20 0A            jr nz,3F
 222+ 9830 7D               ld a,l
 223+ 9831 C6 20            add a,$20
 224+ 9833 6F               ld l,a
 225+ 9834 38 04            jr c,3F
 226+ 9836 7C               ld a,h
 227+ 9837 D6 08            sub 8
 228+ 9839 67               ld h,a
 229+ 983A 7C           3 ld a,h
 230+ 983B FE 58            cp $58
 231+ 983D 28 02            jr z,4F
 232+ 983F 10 C1            djnz 1B
 233+ 9841 ED 7B 15 89  4 ld sp,(Stack)
 234+ 9845 C9           	ret
 235+ 9846
 236+ 9846 ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 984A FD F9        	ld sp,iy
 238+ 984C 06 08            ld b,8
 239+ 984E D1           1 pop de
 240+ 984F D1           	pop de
 241+ 9850 7B           	ld a,e
 242+ 9851 AE           	xor (hl)
 243+ 9852 77           	ld (hl),a
 244+ 9853 24            	inc h
 245+ 9854 7C               ld a,h
 246+ 9855 E6 07            and 7
 247+ 9857 20 0A            jr nz,2F
 248+ 9859 7D               ld a,l
 249+ 985A C6 20            add a,$20
 250+ 985C 6F               ld l,a
 251+ 985D 38 04            jr c,2F
 252+ 985F 7C               ld a,h
 253+ 9860 D6 08            sub 8
 254+ 9862 67               ld h,a
 255+ 9863 7C           2 ld a,h
 256+ 9864 FE 58            cp $58
 257+ 9866 28 1B            jr z,4F
 258+ 9868 D1               pop de
 259+ 9869 7A           	ld a,d
 260+ 986A AE           	xor (hl)
 261+ 986B 77           	ld (hl),a
 262+ 986C 24           	inc h
 263+ 986D 7C               ld a,h
 264+ 986E E6 07            and 7
 265+ 9870 20 0A            jr nz,3F
 266+ 9872 7D               ld a,l
 267+ 9873 C6 20            add a,$20
 268+ 9875 6F               ld l,a
 269+ 9876 38 04            jr c,3F
 270+ 9878 7C               ld a,h
 271+ 9879 D6 08            sub 8
 272+ 987B 67               ld h,a
 273+ 987C 7C           3 ld a,h
 274+ 987D FE 58            cp $58
 275+ 987F 28 02            jr z,4F
 276+ 9881 10 CB            djnz 1B
 277+ 9883 ED 7B 15 89  4 ld sp,(Stack)
 278+ 9887 C9           	ret
 279+ 9888
 280+ 9888 ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 988C FD F9        	ld sp,iy
 282+ 988E 06 08            ld b,8
 283+ 9890 D1           1 pop de
 284+ 9891 7B           	ld a,e
 285+ 9892 AE           	xor (hl)
 286+ 9893 77           	ld (hl),a
 287+ 9894 23           	inc hl
 288+ 9895 7A           	ld a,d
 289+ 9896 AE           	xor (hl)
 290+ 9897 77           	ld (hl),a
 291+ 9898 2B           	dec hl
 292+ 9899 24             	inc h
 293+ 989A 7C               ld a,h
 294+ 989B E6 07            and 7
 295+ 989D 20 0A            jr nz,2F
 296+ 989F 7D               ld a,l
 297+ 98A0 C6 20            add a,$20
 298+ 98A2 6F               ld l,a
 299+ 98A3 38 04            jr c,2F
 300+ 98A5 7C               ld a,h
 301+ 98A6 D6 08            sub 8
 302+ 98A8 67               ld h,a
 303+ 98A9 7C           2 ld a,h
 304+ 98AA FE 58            cp $58
 305+ 98AC 28 21            jr z,4F
 306+ 98AE D1               pop de
 307+ 98AF 7A           	ld a,d
 308+ 98B0 AE           	xor (hl)
 309+ 98B1 77           	ld (hl),a
 310+ 98B2 23           	inc hl
 311+ 98B3 D1               pop de
 312+ 98B4 7B           	ld a,e
 313+ 98B5 AE           	xor (hl)
 314+ 98B6 77           	ld (hl),a
 315+ 98B7 2B           	dec hl
 316+ 98B8 24           	inc h
 317+ 98B9 7C               ld a,h
 318+ 98BA E6 07            and 7
 319+ 98BC 20 0A            jr nz,3F
 320+ 98BE 7D               ld a,l
 321+ 98BF C6 20            add a,$20
 322+ 98C1 6F               ld l,a
 323+ 98C2 38 04            jr c,3F
 324+ 98C4 7C               ld a,h
 325+ 98C5 D6 08            sub 8
 326+ 98C7 67               ld h,a
 327+ 98C8 7C           3 ld a,h
 328+ 98C9 FE 58            cp $58
 329+ 98CB 28 02            jr z,4F
 330+ 98CD 10 C1            djnz 1B
 331+ 98CF ED 7B 15 89  4 ld sp,(Stack)
 332+ 98D3 C9           	ret
 333+ 98D4
 334+ 98D4 ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98D8 FD F9        	ld sp,iy
 336+ 98DA 06 08            ld b,8
 337+ 98DC D1           1 pop de
 338+ 98DD 7B           	ld a,e
 339+ 98DE AE           	xor (hl)
 340+ 98DF 77           	ld (hl),a
 341+ 98E0 24            	inc h
 342+ 98E1 7C               ld a,h
 343+ 98E2 E6 07            and 7
 344+ 98E4 20 0A            jr nz,2F
 345+ 98E6 7D               ld a,l
 346+ 98E7 C6 20            add a,$20
 347+ 98E9 6F               ld l,a
 348+ 98EA 38 04            jr c,2F
 349+ 98EC 7C               ld a,h
 350+ 98ED D6 08            sub 8
 351+ 98EF 67               ld h,a
 352+ 98F0 7C           2 ld a,h
 353+ 98F1 FE 58            cp $58
 354+ 98F3 28 1C            jr z,4F
 355+ 98F5 D1               pop de
 356+ 98F6 7A           	ld a,d
 357+ 98F7 AE           	xor (hl)
 358+ 98F8 77           	ld (hl),a
 359+ 98F9 24           	inc h
 360+ 98FA 7C               ld a,h
 361+ 98FB E6 07            and 7
 362+ 98FD 20 0A            jr nz,3F
 363+ 98FF 7D               ld a,l
 364+ 9900 C6 20            add a,$20
 365+ 9902 6F               ld l,a
 366+ 9903 38 04            jr c,3F
 367+ 9905 7C               ld a,h
 368+ 9906 D6 08            sub 8
 369+ 9908 67               ld h,a
 370+ 9909 7C           3 ld a,h
 371+ 990A FE 58            cp $58
 372+ 990C 28 03            jr z,4F
 373+ 990E D1               pop de
 374+ 990F 10 CB            djnz 1B
 375+ 9911 ED 7B 15 89  4 ld sp,(Stack)
 376+ 9915 C9           	ret
 377+ 9916
 378+ 9916              ; ---------------------------------------------------
 379+ 9916              ;
 380+ 9916              ;   27/02/23
 381+ 9916              ;
 382+ 9916              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9916              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9916              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9916
 386+ 9916 ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 991A FD F9            ld sp,iy
 388+ 991C 06 03            ld b,3
 389+ 991E D1           1 pop de
 390+ 991F 7B               ld a,e
 391+ 9920 AE               xor (hl)
 392+ 9921 77               ld (hl),a
 393+ 9922 23               inc hl
 394+ 9923 7A               ld a,d
 395+ 9924 AE               xor (hl)
 396+ 9925 77               ld (hl),a
 397+ 9926 2B               dec hl
 398+ 9927
 399+ 9927 24               inc h
 400+ 9928 7C               ld a,h
 401+ 9929 E6 07            and 7
 402+ 992B 20 0A            jr nz,2F
 403+ 992D 7D               ld a,l
 404+ 992E C6 20            add a,$20
 405+ 9930 6F               ld l,a
 406+ 9931 38 04            jr c,2F
 407+ 9933 7C               ld a,h
 408+ 9934 D6 08            sub 8
 409+ 9936 67               ld h,a
 410+ 9937 7C           2 ld a,h
 411+ 9938 FE 58            cp $58
 412+ 993A 28 02            jr z,3F
 413+ 993C
 414+ 993C 10 E0            djnz 1B
 415+ 993E ED 7B 15 89  3 ld sp,(Stack)
 416+ 9942 C9               ret
 417+ 9943
# file closed: Rutinas_de_impresion_sprites.asm
1648  9943              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9943              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9943              ;
   3+ 9943              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9943              ;
   5+ 9943              ; *****************************************************************************************************************************************************************************************
   6+ 9943              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9943
   8+ 9943 7C           calcula_tercio ld a,h
   9+ 9944 E6 18        	and $18
  10+ 9946 CB 2F        	sra a
  11+ 9948 CB 2F        	sra a
  12+ 994A CB 2F        	sra a
  13+ 994C C9           	ret
  14+ 994D
# file closed: calcula_tercio.asm
1649  994D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 994D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 994D              ;
   3+ 994D              ;
   4+ 994D              ;	CLS.
   5+ 994D              ;
   6+ 994D              ;	Limpia la pantalla y define sus atributos.
   7+ 994D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 994D              ;
   9+ 994D              ;	COLORES: 0 ..... NEGRO
  10+ 994D              ;    		 1 ..... AZUL
  11+ 994D              ; 			 2 ..... ROJO
  12+ 994D              ;			 3 ..... MAGENTA
  13+ 994D              ; 			 4 ..... VERDE
  14+ 994D              ; 			 5 ..... CIAN
  15+ 994D              ;			 6 ..... AMARILLO
  16+ 994D              ; 			 7 ..... BLANCO
  17+ 994D              ;
  18+ 994D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 994D              ;
  20+ 994D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 994D
  22+ 994D
  23+ 994D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9950 11 01 40     	LD DE,$4001
  25+ 9953 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9956 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9958 ED B0        	LDIR
  28+ 995A 01 FF 02     	LD BC,767
  29+ 995D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 995E ED B0        	LDIR
  31+ 9960 C9           	ret
  32+ 9961
# file closed: Cls.asm
1650  9961              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9961              ; ******************************************************************************************************************************************************************************************
   2+ 9961              ;
   3+ 9961              ;   20/05/23
   4+ 9961              ;
   5+ 9961              ;	Recompone_posicion_inicio
   6+ 9961              ;
   7+ 9961              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9961              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9961              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9961              ;	_ a una u otra rutina.
  11+ 9961
  12+ 9961              Recompone_posicion_inicio
  13+ 9961
  14+ 9961 2A D9 88     	ld hl,(Posicion_inicio)
  15+ 9964 7D           	ld a,l
  16+ 9965 E6 1F        	and $1f
  17+ 9967 28 16        	jr z,1F
  18+ 9969
  19+ 9969 FE 1F        	cp $1f
  20+ 996B 28 0D        	jr z,3F
  21+ 996D
  22+ 996D 21 02 89     	ld hl,Ctrl_2
  23+ 9970 CB C6        	set 0,(hl)
  24+ 9972 2A CB 88     	ld hl,(Puntero_objeto)
  25+ 9975 22 05 89     	ld (Repone_puntero_objeto),hl
  26+ 9978 18 08        	jr 2F
  27+ 997A
  28+ 997A CD 1B 9B     3 call Mov_left
  29+ 997D 18 03        	jr 2F
  30+ 997F
  31+ 997F CD FD 99     1 call Mov_right
  32+ 9982 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9985 22 CB 88     	ld (Puntero_objeto),hl
  34+ 9988 C9           	ret
  35+ 9989
  36+ 9989              ; ******************************************************************************************************************************************************************************************
  37+ 9989              ;
  38+ 9989              ;   27/05/23
  39+ 9989              ;
  40+ 9989              ;	Mov_down
  41+ 9989              ;
  42+ 9989              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9989              ;
  44+ 9989              ;
  45+ 9989              Mov_down
  46+ 9989
  47+ 9989 CD EB 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 998C              ;																	; _ repone (Puntero_objeto).
  49+ 998C 21 F1 88     	ld hl,Ctrl_0
  50+ 998F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9991              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9991              ; 																	; _ en el caso de que no lo haya.
  53+ 9991 3A DF 88     	ld a,(Vel_down)
  54+ 9994 47           	ld b,a
  55+ 9995 2A C9 88         ld hl,(Posicion_actual)
  56+ 9998 CD 43 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 999B E6 02        	and 2
  58+ 999D 28 0F        	jr z,1F
  59+ 999F
  60+ 999F              ; Nos encontramos en el último tercio de pantalla.
  61+ 999F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 999F
  63+ 999F 7C           	ld a,h
  64+ 99A0 FE 57        	cp $57
  65+ 99A2 20 0A        	jr nz,1F
  66+ 99A4
  67+ 99A4 7D           	ld a,l
  68+ 99A5 C6 20        	add $20
  69+ 99A7 30 05        	jr nc,1F
  70+ 99A9
  71+ 99A9              ; ------------------------------
  72+ 99A9              ;	call Reaparece_arriba
  73+ 99A9 CD A8 9C     	call Reinicio
  74+ 99AC              ; ------------------------------
  75+ 99AC
  76+ 99AC 18 08        	jr 3F
  77+ 99AE CD 30 96     1 call NextScan
  78+ 99B1 22 C9 88     	ld (Posicion_actual),hl
  79+ 99B4 10 E2            djnz 2B
  80+ 99B6 CD CE 9C     3 call Genera_coordenadas
  81+ 99B9 C9           	ret
  82+ 99BA
  83+ 99BA              ; ******************************************************************************************************************************************************************************************
  84+ 99BA              ;
  85+ 99BA              ;   27/05/23
  86+ 99BA              ;
  87+ 99BA              ;	Mov_up
  88+ 99BA              ;
  89+ 99BA              ; 	Mueve el Sprite hacia arriba.
  90+ 99BA              ;
  91+ 99BA              ;
  92+ 99BA              Mov_up
  93+ 99BA
  94+ 99BA CD EB 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99BD              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99BD 21 F1 88     	ld hl,Ctrl_0
  97+ 99C0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99C2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99C2              ; 																		; _ en el caso de que no lo haya.
 100+ 99C2 3A DE 88     	ld a,(Vel_up)
 101+ 99C5 47           	ld b,a
 102+ 99C6 2A C9 88     	ld hl,(Posicion_actual)
 103+ 99C9 CD 43 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99CC A7           	and a
 105+ 99CD 20 10        	jr nz,1F
 106+ 99CF
 107+ 99CF              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99CF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99CF
 110+ 99CF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99D0 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99D2 20 0B            jr nz,1F
 113+ 99D4 7D               ld a,l
 114+ 99D5 D6 20            sub $20
 115+ 99D7 30 06            jr nc,1F
 116+ 99D9 25               dec h
 117+ 99DA
 118+ 99DA              ; -----------------------------
 119+ 99DA CD 89 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99DD              ;	call Reinicio
 121+ 99DD              ; -----------------------------
 122+ 99DD
 123+ 99DD 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99DF CD 3F 96     1 call PreviousScan
 125+ 99E2 22 C9 88     	ld (Posicion_actual),hl
 126+ 99E5 10 E2            djnz 3B
 127+ 99E7 CD CE 9C     2 call Genera_coordenadas
 128+ 99EA C9           	ret
 129+ 99EB
 130+ 99EB              ; -----------------------------
 131+ 99EB              ;
 132+ 99EB              ;	27/5/23
 133+ 99EB              ;
 134+ 99EB              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99EB              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99EB              ;
 137+ 99EB              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99EB              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99EB              ;
 140+ 99EB              ;	Modifica: A y (Puntero_objeto).
 141+ 99EB
 142+ 99EB 3A 02 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99EE CB 47        	bit 0,a
 144+ 99F0 C8           	ret z
 145+ 99F1 CB 87        	res 0,a
 146+ 99F3 32 02 89     	ld (Ctrl_2),a
 147+ 99F6 2A 05 89     	ld hl,(Repone_puntero_objeto)
 148+ 99F9 22 CB 88     	ld (Puntero_objeto),hl
 149+ 99FC C9           	ret
 150+ 99FD
 151+ 99FD              ; ******************************************************************************************************************************************************************************************
 152+ 99FD              ;
 153+ 99FD              ;	19/10/22
 154+ 99FD              ;
 155+ 99FD              ;	Mov_right.
 156+ 99FD              ;
 157+ 99FD              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99FD              ;
 159+ 99FD
 160+ 99FD 21 F1 88     Mov_right ld hl,Ctrl_0
 161+ 9A00 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A02              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A02              ; 																	; _ en el caso de que no lo haya.
 164+ 9A02 3A F1 88     	ld a,(Ctrl_0)
 165+ 9A05 CB 77        	bit 6,a
 166+ 9A07 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A09
 168+ 9A09 CD 37 9C     	call Stop_Amadeus_right
 169+ 9A0C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A0D 18 4D        	jr 8F
 171+ 9A0F
 172+ 9A0F 3A CD 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A12 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A14 20 46        	jr nz,8F
 175+ 9A16
 176+ 9A16 3A CF 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A19 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A1A 28 40        	jr z,8F
 179+ 9A1C
 180+ 9A1C              ; ---------- ---------- ----------
 181+ 9A1C              ;
 182+ 9A1C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A1C
 184+ 9A1C 3A DD 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A1F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A21 28 11        	jr z,1F
 187+ 9A23 38 06        	jr c,6F
 188+ 9A25 FE 04        	cp 4
 189+ 9A27 28 14        	jr z,7F
 190+ 9A29 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A2B
 192+ 9A2B              ; ---------- ---------- ----------
 193+ 9A2B              ;
 194+ 9A2B              ; Perfiles de velocidad
 195+ 9A2B              ;
 196+ 9A2B
 197+ 9A2B 3A CF 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A2E FE FE        	cp $fe
 199+ 9A30 20 2A        	jr nz,8F
 200+ 9A32 18 10        	jr 3F
 201+ 9A34 3A CF 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A37 FE FD        	cp $fd
 203+ 9A39 20 21        	jr nz,8F
 204+ 9A3B 18 07        	jr 3F
 205+ 9A3D 3A CF 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A40 FE FB        	cp $fb
 207+ 9A42 20 18        	jr nz,8F
 208+ 9A44
 209+ 9A44              ; ---------- ---------- ----------
 210+ 9A44
 211+ 9A44              3
 212+ 9A44 CD 77 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A47              ;	call Reinicio
 214+ 9A47
 215+ 9A47              ; ---------- ---------- ----------
 216+ 9A47              ;
 217+ 9A47              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A47
 219+ 9A47 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A49 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A4A CD 63 9A     	call DESPLZ_DER
 222+ 9A4D C1           	pop bc
 223+ 9A4E 10 F9        	djnz 5B
 224+ 9A50 2A C9 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A53 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A54 22 C9 88     	ld (Posicion_actual),hl
 227+ 9A57 CD CE 9C     	call Genera_coordenadas
 228+ 9A5A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A5C
 230+ 9A5C              ; ---------- ---------- ----------
 231+ 9A5C
 232+ 9A5C 2A C9 88     8 ld hl,(Posicion_actual)
 233+ 9A5F CD 63 9A     	call DESPLZ_DER
 234+ 9A62 C9           2 ret
 235+ 9A63
 236+ 9A63              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A63              ;
 238+ 9A63              ;	22/9/22
 239+ 9A63              ;
 240+ 9A63
 241+ 9A63 CD 72 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A66 CD BE 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A69 CD E7 9A         call Ciclo_completo
 244+ 9A6C 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A6F CB FE        	set 7,(hl)
 246+ 9A71 C9           	ret
 247+ 9A72
 248+ 9A72              ; ******************************************************************************************************************************************************************************************
 249+ 9A72              ;	15/02/23
 250+ 9A72              ;
 251+ 9A72
 252+ 9A72 3A DD 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A75 47           	ld b,a
 254+ 9A76 2A D5 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A79 23           1 inc hl
 256+ 9A7A 23           	inc hl
 257+ 9A7B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A7D 22 D5 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A80 CD 83 8C     	call Extrae_address
 260+ 9A83 22 CB 88     	ld (Puntero_objeto),hl
 261+ 9A86
 262+ 9A86              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A86
 264+ 9A86              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A86              ; Cuántos movimientos hemos hecho ??
 266+ 9A86              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A86
 268+ 9A86 2A D1 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A89 EB           	ex de,hl
 270+ 9A8A A7           	and a
 271+ 9A8B ED 52        	sbc hl,de
 272+ 9A8D CB 3D        	srl l
 273+ 9A8F 3E 08        6 ld a,8
 274+ 9A91 95           	sub l
 275+ 9A92 30 1E        	jr nc,3F
 276+ 9A94
 277+ 9A94              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A94              ; B="0".
 279+ 9A94
 280+ 9A94 04           4 inc b
 281+ 9A95 3C           	inc a
 282+ 9A96 20 FC        	jr nz,4B
 283+ 9A98 78           	ld a,b
 284+ 9A99 08           	ex af,af
 285+ 9A9A 2A D1 88     	ld hl,(Indice_Sprite_der)
 286+ 9A9D 23           5 inc hl
 287+ 9A9E 23           	inc hl
 288+ 9A9F 10 FC        	djnz 5B
 289+ 9AA1 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AA4 CD 83 8C     	call Extrae_address
 291+ 9AA7 22 CB 88     	ld (Puntero_objeto),hl
 292+ 9AAA
 293+ 9AAA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AAA              ; _(Posicion_actual).
 295+ 9AAA
 296+ 9AAA 21 C9 88     	ld hl,Posicion_actual
 297+ 9AAD 34           	inc (hl)
 298+ 9AAE 08               ex af,af
 299+ 9AAF 6F           	ld l,a
 300+ 9AB0 18 DD        	jr 6B
 301+ 9AB2
 302+ 9AB2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AB2
 304+ 9AB2 47           3 ld b,a
 305+ 9AB3 2A D3 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AB6 23           2 inc hl
 307+ 9AB7 23           	inc hl
 308+ 9AB8 10 FC        	djnz 2B
 309+ 9ABA 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9ABD C9           8 ret
 311+ 9ABE
 312+ 9ABE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9ABE              ;
 314+ 9ABE              ;	24/7/22
 315+ 9ABE              ;
 316+ 9ABE              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9ABE              ;
 318+ 9ABE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9ABE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9ABE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9ABE
 322+ 9ABE 3A CF 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AC1 A7           	and a
 324+ 9AC2 20 1F        	jr nz,1F
 325+ 9AC4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AC6 32 CF 88         ld (CTRL_DESPLZ),a
 327+ 9AC9
 328+ 9AC9 21 C8 88     	ld hl,Columns
 329+ 9ACC 34           	inc (hl)
 330+ 9ACD 3A DB 88     	ld a,(Cuad_objeto)
 331+ 9AD0 E6 01        	and 1
 332+ 9AD2 28 0F        	jr z,1F
 333+ 9AD4 2A C9 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AD7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AD8 22 C9 88     	ld (Posicion_actual),hl
 336+ 9ADB CD CE 9C     	call Genera_coordenadas
 337+ 9ADE CD 43 9C     	call Inc_CTRL_DESPLZ
 338+ 9AE1 18 03        	jr 2F
 339+ 9AE3 CD 43 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AE6 C9           2 ret
 341+ 9AE7
 342+ 9AE7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AE7              ;
 344+ 9AE7              ;	24/7/22
 345+ 9AE7              ;
 346+ 9AE7              ;	Ciclo_completo.
 347+ 9AE7              ;
 348+ 9AE7              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AE7              ;
 350+ 9AE7              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AE7              ; 	Decrementamos (Columns).
 352+ 9AE7              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AE7              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AE7
 355+ 9AE7
 356+ 9AE7 3A CF 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AEA FE FF        	cp $ff
 358+ 9AEC 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AEE E6 F0        	and $f0
 360+ 9AF0 20 28        	jr nz,3F
 361+ 9AF2
 362+ 9AF2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AF2
 364+ 9AF2 3A CF 88     	ld a,(CTRL_DESPLZ)
 365+ 9AF5 47           	ld b,a
 366+ 9AF6 3E F8        	ld a,$f8
 367+ 9AF8 80           	add b
 368+ 9AF9 32 CF 88     	ld (CTRL_DESPLZ),a
 369+ 9AFC 18 1C        	jr 3F
 370+ 9AFE 21 C8 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B01 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B02 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B03 32 CF 88     	ld (CTRL_DESPLZ),a
 374+ 9B06 3A DB 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B09 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B0B 20 0A        	jr nz,2F
 377+ 9B0D 2A C9 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B10 23           	inc hl
 379+ 9B11 22 C9 88     	ld (Posicion_actual),hl
 380+ 9B14 CD CE 9C     	call Genera_coordenadas
 381+ 9B17
 382+ 9B17              ; Inicia el puntero de Sprite.
 383+ 9B17
 384+ 9B17 CD 9A 8C     2 call Inicia_puntero_objeto_der
 385+ 9B1A C9           3 ret
 386+ 9B1B
 387+ 9B1B              ; ******************************************************************************************************************************************************************************************
 388+ 9B1B              ;
 389+ 9B1B              ;	15/02/23
 390+ 9B1B              ;
 391+ 9B1B              ;	Mov_left.
 392+ 9B1B              ;
 393+ 9B1B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B1B              ;
 395+ 9B1B              Mov_left
 396+ 9B1B
 397+ 9B1B 21 F1 88     	ld hl,Ctrl_0
 398+ 9B1E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B20              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B20              ; 																	; _ en el caso de que no lo haya.
 401+ 9B20 3A F1 88     	ld a,(Ctrl_0)
 402+ 9B23 CB 77        	bit 6,a
 403+ 9B25 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B27
 405+ 9B27 CD 3D 9C     	call Stop_Amadeus_left
 406+ 9B2A C8           	ret z
 407+ 9B2B 20 4A        	jr nz,8F
 408+ 9B2D
 409+ 9B2D 3A CD 88     11 ld a,(Coordenada_X)
 410+ 9B30 A7           	and a
 411+ 9B31 20 44        	jr nz,8F
 412+ 9B33
 413+ 9B33 3A CF 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B36 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B37 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B39
 417+ 9B39              ; ---------- ---------- ----------
 418+ 9B39
 419+ 9B39 3A DC 88     	ld a,(Vel_left)
 420+ 9B3C FE 02        	cp 2
 421+ 9B3E 28 0F        	jr z,1F
 422+ 9B40 38 04        	jr c,6F
 423+ 9B42 FE 04        	cp 4
 424+ 9B44 28 12        	jr z,7F
 425+ 9B46
 426+ 9B46              ; ---------- ---------- ----------
 427+ 9B46
 428+ 9B46 3A CF 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B49 FE F8        	cp $f8
 430+ 9B4B 20 2A        	jr nz,8F
 431+ 9B4D 18 10        	jr 4F
 432+ 9B4F 3A CF 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B52 FE F9        	cp $f9
 434+ 9B54 20 21        	jr nz,8F
 435+ 9B56 18 07        	jr 4F
 436+ 9B58 3A CF 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B5B FE FB        	cp $fb
 438+ 9B5D 20 18        	jr nz,8F
 439+ 9B5F
 440+ 9B5F              ; ---------- ---------- ----------
 441+ 9B5F
 442+ 9B5F              4
 443+ 9B5F CD 65 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B62              ;	call Reinicio
 445+ 9B62
 446+ 9B62              ; ---------- ---------- ----------
 447+ 9B62
 448+ 9B62 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B64 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B65
 451+ 9B65              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B65              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B65
 454+ 9B65 CD 7E 9B     	call DESPLZ_IZQ
 455+ 9B68 C1           	pop bc
 456+ 9B69 10 F9        	djnz 5B
 457+ 9B6B 2A C9 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B6E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B6F 22 C9 88     	ld (Posicion_actual),hl
 460+ 9B72 CD CE 9C     	call Genera_coordenadas
 461+ 9B75 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B77
 463+ 9B77              ; ---------- ---------- ----------
 464+ 9B77
 465+ 9B77              ; Movemos, no hay recolocación.
 466+ 9B77
 467+ 9B77 2A C9 88     8 ld hl,(Posicion_actual)
 468+ 9B7A CD 7E 9B     	call DESPLZ_IZQ
 469+ 9B7D C9           2 ret
 470+ 9B7E
 471+ 9B7E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B7E              ;
 473+ 9B7E              ;	22/9/22
 474+ 9B7E
 475+ 9B7E              DESPLZ_IZQ
 476+ 9B7E
 477+ 9B7E CD 8D 9B     	call Desplaza_izquierda
 478+ 9B81 CD D9 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B84 CD 01 9C     	call Ciclo_completo_2
 480+ 9B87 21 F1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B8A CB BE        	res 7,(hl)
 482+ 9B8C C9           	ret
 483+ 9B8D
 484+ 9B8D              Desplaza_izquierda
 485+ 9B8D
 486+ 9B8D 3A DC 88     	ld a,(Vel_left)
 487+ 9B90 47           	ld b,a
 488+ 9B91 2A D7 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B94 23           1 inc hl
 490+ 9B95 23           	inc hl
 491+ 9B96 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B98 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B9B CD 83 8C     	call Extrae_address
 494+ 9B9E 22 CB 88     	ld (Puntero_objeto),hl
 495+ 9BA1
 496+ 9BA1              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BA1
 498+ 9BA1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BA1              ; Cuántos movimientos hemos hecho ??
 500+ 9BA1              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BA1
 502+ 9BA1 2A D3 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BA4 EB           	ex de,hl
 504+ 9BA5 A7           	and a
 505+ 9BA6 ED 52        	sbc hl,de
 506+ 9BA8 CB 3D        	srl l
 507+ 9BAA 3E 08        6 ld a,8
 508+ 9BAC 95           	sub l
 509+ 9BAD 30 1E        	jr nc,3F
 510+ 9BAF
 511+ 9BAF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BAF              ; B="0".
 513+ 9BAF
 514+ 9BAF 04           4 inc b
 515+ 9BB0 3C           	inc a
 516+ 9BB1 20 FC        	jr nz,4B
 517+ 9BB3 78           	ld a,b
 518+ 9BB4 08           	ex af,af
 519+ 9BB5 2A D3 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BB8 23           5 inc hl
 521+ 9BB9 23           	inc hl
 522+ 9BBA 10 FC        	djnz 5B
 523+ 9BBC 22 D7 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BBF CD 83 8C     	call Extrae_address
 525+ 9BC2 22 CB 88     	ld (Puntero_objeto),hl
 526+ 9BC5
 527+ 9BC5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BC5              ; _(Posicion_actual).
 529+ 9BC5
 530+ 9BC5 21 C9 88     	ld hl,Posicion_actual
 531+ 9BC8 35           	dec (hl)
 532+ 9BC9 08           	ex af,af
 533+ 9BCA 6F           	ld l,a
 534+ 9BCB 18 DD        	jr 6B
 535+ 9BCD
 536+ 9BCD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BCD
 538+ 9BCD 47           3 ld b,a
 539+ 9BCE 2A D1 88     	ld hl,(Indice_Sprite_der)
 540+ 9BD1 23           2 inc hl
 541+ 9BD2 23           	inc hl
 542+ 9BD3 10 FC        	djnz 2B
 543+ 9BD5 22 D5 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BD8 C9           8 ret
 545+ 9BD9
 546+ 9BD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BD9              ;
 548+ 9BD9              ;	modifica_parametros_1er_DESPLZ
 549+ 9BD9              ;
 550+ 9BD9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BD9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BD9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BD9
 554+ 9BD9 3A CF 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BDC A7           	and a
 556+ 9BDD 20 1E        	jr nz,1F
 557+ 9BDF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BE0 32 CF 88         ld (CTRL_DESPLZ),a
 559+ 9BE3 21 C8 88     	ld hl,Columns
 560+ 9BE6 34           	inc (hl)
 561+ 9BE7 3A DB 88     	ld a,(Cuad_objeto)
 562+ 9BEA E6 01        	and 1
 563+ 9BEC 20 0F        	jr nz,1F
 564+ 9BEE 2A C9 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BF1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BF2 22 C9 88     	ld (Posicion_actual),hl
 567+ 9BF5 CD CE 9C     	call Genera_coordenadas
 568+ 9BF8 CD 54 9C     	call Dec_CTRL_DESPLZ
 569+ 9BFB 18 03        	jr 2F
 570+ 9BFD CD 54 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C00 C9           2 ret
 572+ 9C01
 573+ 9C01              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C01
 575+ 9C01 3A CF 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C04 FE F7        	cp $f7
 577+ 9C06 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C08 30 2C        	jr nc,3F
 579+ 9C0A
 580+ 9C0A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C0A
 582+ 9C0A 06 00        	ld b,0
 583+ 9C0C 04           4 inc b
 584+ 9C0D 3C           	inc a
 585+ 9C0E FE F7        	cp $f7
 586+ 9C10 20 FA        	jr nz,4B
 587+ 9C12 3E FF        	ld a,$ff
 588+ 9C14 90           	sub b
 589+ 9C15 32 CF 88     	ld (CTRL_DESPLZ),a
 590+ 9C18 18 1C        	jr 3F
 591+ 9C1A
 592+ 9C1A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C1A
 594+ 9C1A 21 C8 88     1 ld hl,Columns
 595+ 9C1D 35           	dec (hl)
 596+ 9C1E AF           	xor a
 597+ 9C1F 32 CF 88     	ld (CTRL_DESPLZ),a
 598+ 9C22 3A DB 88     	ld a,(Cuad_objeto)
 599+ 9C25 E6 01        	and 1
 600+ 9C27 28 0A        	jr z,2F
 601+ 9C29 2A C9 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C2C 2B           	dec hl
 603+ 9C2D 22 C9 88     	ld (Posicion_actual),hl
 604+ 9C30 CD CE 9C     	call Genera_coordenadas
 605+ 9C33
 606+ 9C33              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C33
 608+ 9C33 CD AD 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C36 C9           3 ret
 610+ 9C37
 611+ 9C37              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C37              ;
 613+ 9C37              ;	19/10/22
 614+ 9C37              ;
 615+ 9C37              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C37              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C37
 618+ 9C37 3A CD 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C3A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C3C C9           	ret
 621+ 9C3D
 622+ 9C3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C3D              ;
 624+ 9C3D              ;	19/10/22
 625+ 9C3D              ;
 626+ 9C3D              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C3D              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C3D
 629+ 9C3D 3A CD 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C40 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C42 C9           	ret
 632+ 9C43
 633+ 9C43              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C43              ;
 635+ 9C43              ;	24/7/22
 636+ 9C43              ;
 637+ 9C43              ;	Inc_CTRL_DESPLZ
 638+ 9C43              ;
 639+ 9C43              ;
 640+ 9C43              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C43
 642+ 9C43 21 CF 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C46 3A DD 88     	ld a,(Vel_right)
 644+ 9C49 A7           	and a
 645+ 9C4A 28 06        	jr z,1F
 646+ 9C4C 47           	ld b,a
 647+ 9C4D 34           3 inc (hl)
 648+ 9C4E 10 FD        	djnz 3B
 649+ 9C50 18 01        	jr 2F
 650+ 9C52 34           1 inc (hl)
 651+ 9C53 C9           2 ret
 652+ 9C54
 653+ 9C54              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C54              ;
 655+ 9C54              ;	5/2/23
 656+ 9C54              ;
 657+ 9C54              ;	Dec_CTRL_DESPLZ
 658+ 9C54              ;
 659+ 9C54              ;
 660+ 9C54              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C54
 662+ 9C54 21 CF 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C57 3A DC 88     	ld a,(Vel_left)
 664+ 9C5A A7           	and a
 665+ 9C5B 28 06        	jr z,1F
 666+ 9C5D 47           	ld b,a
 667+ 9C5E 35           3 dec (hl)
 668+ 9C5F 10 FD        	djnz 3B
 669+ 9C61 18 01        	jr 2F
 670+ 9C63 35           1 dec (hl)
 671+ 9C64 C9           2 ret
 672+ 9C65
 673+ 9C65              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C65
 675+ 9C65 2A C9 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C68 01 1F 00     	ld bc,31
 677+ 9C6B A7           	and a
 678+ 9C6C ED 4A        	adc hl,bc
 679+ 9C6E 22 C9 88     	ld (Posicion_actual),hl
 680+ 9C71 21 F1 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C74 CB C6        	set 0,(hl)
 682+ 9C76 C9           	ret
 683+ 9C77
 684+ 9C77              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C77
 686+ 9C77 2A C9 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C7A 01 1F 00     	ld bc,31
 688+ 9C7D A7           	and a
 689+ 9C7E ED 42        	sbc hl,bc
 690+ 9C80 22 C9 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C83 21 F1 88     	ld hl,Ctrl_0
 692+ 9C86 CB CE        	set 1,(hl)
 693+ 9C88 C9           	ret
 694+ 9C89
 695+ 9C89              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C89
 697+ 9C89 24           Reaparece_abajo inc h
 698+ 9C8A 01 E0 17     	ld bc,$17e0
 699+ 9C8D A7           	and a
 700+ 9C8E ED 4A        	adc hl,bc
 701+ 9C90 22 C9 88     	ld (Posicion_actual),hl
 702+ 9C93 21 F1 88     	ld hl,Ctrl_0
 703+ 9C96 CB D6        	set 2,(hl)
 704+ 9C98 C9           	ret
 705+ 9C99
 706+ 9C99              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C99
 708+ 9C99 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C9C A7           	and a
 710+ 9C9D ED 42        	sbc hl,bc
 711+ 9C9F 22 C9 88     	ld (Posicion_actual),hl
 712+ 9CA2 21 F1 88     	ld hl,Ctrl_0
 713+ 9CA5 CB DE        	set 3,(hl)
 714+ 9CA7 C9           	ret
 715+ 9CA8
 716+ 9CA8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CA8              ;
 718+ 9CA8              ;	15/07/23
 719+ 9CA8
 720+ 9CA8              Reinicio
 721+ 9CA8
 722+ 9CA8              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CA8
 724+ 9CA8 AF           	xor a
 725+ 9CA9 21 F6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CAC CD CA 9C     	call Limpia_contenido_hl
 727+ 9CAF
 728+ 9CAF 21 C9 88     	ld hl,Posicion_actual
 729+ 9CB2 CD CA 9C     	call Limpia_contenido_hl
 730+ 9CB5
 731+ 9CB5 CD FA 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CB8 CD 84 9F     	call Inicia_Puntero_mov
 733+ 9CBB
 734+ 9CBB 21 F8 88     	ld hl,Incrementa_puntero
 735+ 9CBE 06 05        	ld b,5
 736+ 9CC0 77           1 ld (hl),a
 737+ 9CC1 23           	inc hl
 738+ 9CC2 10 FC        	djnz 1B
 739+ 9CC4
 740+ 9CC4 21 02 89     	ld hl,Ctrl_2
 741+ 9CC7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CC9
 743+ 9CC9 C9           	ret
 744+ 9CCA
 745+ 9CCA 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CCB 23           	inc hl
 747+ 9CCC 77           	ld (hl),a
 748+ 9CCD C9           	ret
 749+ 9CCE
 750+ 9CCE
# file closed: Direcciones.asm
1651  9CCE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CCE              ; ------------------------------------------------------------------------
   2+ 9CCE              ;
   3+ 9CCE              ;	02/04/23
   4+ 9CCE              ;
   5+ 9CCE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CCE              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CCE              ;
   8+ 9CCE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CCE              ;
  10+ 9CCE              ;	Modifica: A,BC y DE.
  11+ 9CCE
  12+ 9CCE C5           Genera_coordenadas push bc
  13+ 9CCF E5           	push hl
  14+ 9CD0 D5           	push de
  15+ 9CD1
  16+ 9CD1 2A C9 88     	ld hl,(Posicion_actual)
  17+ 9CD4
  18+ 9CD4 7D           	ld a,l
  19+ 9CD5 E6 1F        	and $1f
  20+ 9CD7 32 CD 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CDA
  22+ 9CDA CD 43 99     	call calcula_tercio
  23+ 9CDD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CDE
  25+ 9CDE 1E 00        	ld e,0
  26+ 9CE0 7D           	ld a,l
  27+ 9CE1 E6 E0        	and $e0
  28+ 9CE3 28 01        	jr z,1F
  29+ 9CE5 04           	inc b
  30+ 9CE6
  31+ 9CE6 04           1 inc b
  32+ 9CE7 05           	dec b
  33+ 9CE8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CEA              ;														; _ , salimos.
  35+ 9CEA 1C           3 inc e
  36+ 9CEB D6 20        	sub 32
  37+ 9CED 20 FB        	jr nz,3B
  38+ 9CEF 10 F5        	djnz 1B
  39+ 9CF1
  40+ 9CF1 7B           2 ld a,e
  41+ 9CF2 32 CE 88     	ld (Coordenada_y),a
  42+ 9CF5
  43+ 9CF5 D1           	pop de
  44+ 9CF6 E1           	pop hl
  45+ 9CF7 C1           	pop bc
  46+ 9CF8
  47+ 9CF8 C9           	ret
  48+ 9CF9
  49+ 9CF9              ; ------------------------------------------------------------------------
  50+ 9CF9              ;	28/05/23
  51+ 9CF9              ;
  52+ 9CF9              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CF9              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CF9              ;
  55+ 9CF9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CF9              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CF9              ;
  58+ 9CF9              ;		DE="$120d"
  59+ 9CF9              ;
  60+ 9CF9              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CF9              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CF9              ;
  63+ 9CF9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CF9
  65+ 9CF9              ;	Modifica: A,BC y DE.
  66+ 9CF9
  67+ 9CF9
  68+ 9CF9              Genera_coordenadas_disparo
  69+ 9CF9
  70+ 9CF9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CF9
  72+ 9CF9 7D           	ld a,l
  73+ 9CFA E6 1F        	and $1f
  74+ 9CFC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CFD CD 43 99     	call calcula_tercio
  76+ 9D00 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D01 1E 00        	ld e,0
  78+ 9D03 7D           	ld a,l
  79+ 9D04 E6 E0        	and $e0
  80+ 9D06 28 01        	jr z,1F
  81+ 9D08 04           	inc b
  82+ 9D09 1C           1 inc e
  83+ 9D0A D6 20        	sub 32
  84+ 9D0C 20 FB        	jr nz,1B
  85+ 9D0E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D10 C9           	ret
  87+ 9D11
# file closed: Genera_coordenadas.asm
1652  9D11              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D11              ; Relojes y temporizaciones.
   2+ 9D11
   3+ 9D11              ; ------------------------------------------------------
   4+ 9D11              ;
   5+ 9D11              ;	16/7/23
   6+ 9D11              ;
   7+ 9D11              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D11              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D11              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D11              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D11              ;
  12+ 9D11              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D11              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D11
  15+ 9D11              ; Disparo_entidad db 1
  16+ 9D11              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D11              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D11
  19+ 9D11              Habilita_disparos
  20+ 9D11
  21+ 9D11 7E           	ld a,(hl)
  22+ 9D12 A7           	and a
  23+ 9D13 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D14
  25+ 9D14 EB           	ex de,hl
  26+ 9D15
  27+ 9D15 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D16 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D17
  30+ 9D17              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D17
  32+ 9D17 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D18 7E           	ld a,(hl)
  34+ 9D19 23           	inc hl
  35+ 9D1A 77           	ld (hl),a
  36+ 9D1B
  37+ 9D1B EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D1C 3E 01        	ld a,1
  39+ 9D1E 77           	ld (hl),a
  40+ 9D1F C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1653  9D20              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D20
   2+ 9D20
   3+ 9D20              ;   07/07/23
   4+ 9D20              ;
   5+ 9D20              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D20              ;
   7+ 9D20              ;   Codificación:
   8+ 9D20              ;
   9+ 9D20              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D20              ;
  11+ 9D20              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D20              ;
  13+ 9D20              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D20              ;
  15+ 9D20              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D20              ;
  17+ 9D20              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D20              ;                               ..... %01000010 Vel_up 4
  19+ 9D20              ;                                               Vel_down 2
  20+ 9D20              ;                               ..... $42
  21+ 9D20              ;
  22+ 9D20              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D20              ;
  24+ 9D20              ;                               ..... %01000010 Vel_left 4
  25+ 9D20              ;                                               Vel_right 2
  26+ 9D20              ;                               ..... $42
  27+ 9D20              ;
  28+ 9D20              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D20              ;
  30+ 9D20              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D20              ;
  32+ 9D20              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D20              ;
  34+ 9D20              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D20              ;                                     $53
  36+ 9D20              ;
  37+ 9D20              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D20              ;
  39+ 9D20              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D20              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D20              ;
  42+ 9D20              ;                       Arriba ..... $81
  43+ 9D20              ;                       Arriba - izquierda ..... $a1
  44+ 9D20              ;                       Arriba - derecha ..... $91
  45+ 9D20              ;
  46+ 9D20              ;                       Abajo ..... $41
  47+ 9D20              ;                       Abajo - izquierda ..... $61
  48+ 9D20              ;                       Abajo - derecha ..... $51
  49+ 9D20              ;
  50+ 9D20              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D20              ;
  52+ 9D20              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D20              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D20              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D20              ;
  56+ 9D20              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D20              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D20              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D20              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D20              ;
  61+ 9D20              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D20              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D20              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D20              ;
  65+ 9D20              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D20              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D20              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D20              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D20
  70+ 9D20              ; ----- ----- ----- ----- -----
  71+ 9D20
  72+ 9D20 4C 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D22 54 9D            defw F_1
  74+ 9D24 5E 9D            defw F_2
  75+ 9D26 68 9D            defw Codo_abajo_derecha
  76+ 9D28 9C 9D            defw Derecha_y_subiendo
  77+ 9D2A A6 9D            defw Derecha_y_subiendo_1
  78+ 9D2C B0 9D            defw F_3
  79+ 9D2E BA 9D            defw F_4
  80+ 9D30 C4 9D            defw Derecha_y_bajando
  81+ 9D32 CE 9D            defw Derecha_y_bajando_1
  82+ 9D34 D8 9D            defw Derecha_y_bajando_2
  83+ 9D36 E2 9D            defw Codo_derecha_abajo
  84+ 9D38 12 9E            defw Codo_abajo_izq.
  85+ 9D3A 46 9E            defw Izquierda_y_subiendo
  86+ 9D3C 50 9E            defw Izquierda_y_subiendo_1
  87+ 9D3E 5A 9E            defw F_5
  88+ 9D40 64 9E            defw F_6
  89+ 9D42 6E 9E            defw Izquierda_y_bajando
  90+ 9D44 78 9E            defw Izquierda_y_bajando_1
  91+ 9D46 82 9E            defw Izquierda_y_bajando_2
  92+ 9D48 8C 9E            defw Codo_izquierda_abajo
  93+ 9D4A 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D4C
  95+ 9D4C 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D50 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D54
  98+ 9D54 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D58 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D5C 08 00
 100+ 9D5E 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D62 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D66 0F FE
 102+ 9D68
 103+ 9D68 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D6C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D74 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D7C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D80 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D84 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D88 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D8C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D90 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D94 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D98 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D9C
 117+ 9D9C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DA0 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DA4 06 00
 119+ 9DA6
 120+ 9DA6 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DAA 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DAE 02 00
 122+ 9DB0
 123+ 9DB0 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DB4 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DB8 04 00
 125+ 9DBA 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DBE 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DC2 08 00
 127+ 9DC4
 128+ 9DC4 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DC8 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DCC 02 00
 130+ 9DCE
 131+ 9DCE 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DD2 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DD6 06 00
 133+ 9DD8
 134+ 9DD8 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DDC 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DE0 06 00
 136+ 9DE2
 137+ 9DE2              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DE2
 139+ 9DE2 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DE6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DEA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DEE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DF2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DF6 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DFA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DFE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E02 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E06 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E0A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E0E 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E12
 152+ 9E12 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E16 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E1A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E1E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E22 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E26 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E2A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E2E 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E32 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E36 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E3A 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E3E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E42 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E46
 166+ 9E46 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E4A 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E4E 06 00
 168+ 9E50
 169+ 9E50 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E54 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E58 02 00
 171+ 9E5A
 172+ 9E5A 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E5E 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E62 04 00
 174+ 9E64 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E68 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E6C 08 00
 176+ 9E6E
 177+ 9E6E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E72 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E76 02 00
 179+ 9E78
 180+ 9E78 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E7C 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E80 06 00
 182+ 9E82
 183+ 9E82 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E86 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E8A 06 00
 185+ 9E8C
 186+ 9E8C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E90 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E94 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E98 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E9C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EA0 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EA4 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EA8 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EAC 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EB0 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EB4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EB8 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EBC
 199+ 9EBC              ; ----- ----- ----- ----- -----
 200+ 9EBC              ;
 201+ 9EBC              ;   27/06/23
 202+ 9EBC
 203+ 9EBC              Movimiento
 204+ 9EBC
 205+ 9EBC              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EBC
 207+ 9EBC              ;    ld hl,(Posicion_actual)
 208+ 9EBC
 209+ 9EBC 3A 02 89         ld a,(Ctrl_2)
 210+ 9EBF CB 57            bit 2,a
 211+ 9EC1 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EC3
 213+ 9EC3 2A F4 88         ld hl,(Puntero_mov)
 214+ 9EC6 7E               ld a,(hl)
 215+ 9EC7
 216+ 9EC7              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EC7
 218+ 9EC7              Inicia_desplazamiento.
 219+ 9EC7
 220+ 9EC7              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EC7
 222+ 9EC7 CD BB 9F         call Ajusta_velocidad_desplazamiento
 223+ 9ECA
 224+ 9ECA              ; Iniciamos (Repetimos_mov).
 225+ 9ECA
 226+ 9ECA 7E               ld a,(hl)
 227+ 9ECB E6 0F            and $0f
 228+ 9ECD 32 FA 88         ld (Repetimos_desplazamiento),a
 229+ 9ED0 32 FB 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9ED3
 231+ 9ED3              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9ED3
 233+ 9ED3 23               inc hl
 234+ 9ED4 7E               ld a,(hl)
 235+ 9ED5 32 FD 88         ld (Cola_de_desplazamiento),a
 236+ 9ED8 2B               dec hl
 237+ 9ED9
 238+ 9ED9 21 02 89         ld hl,Ctrl_2
 239+ 9EDC CB D6            set 2,(hl)
 240+ 9EDE
 241+ 9EDE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EDE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EDE
 244+ 9EDE              Desplazamiento_iniciado
 245+ 9EDE
 246+ 9EDE CD 8F 9F         call Aplica_desplazamiento
 247+ 9EE1
 248+ 9EE1 3A 02 89         ld a,(Ctrl_2)
 249+ 9EE4 CB 67            bit 4,a
 250+ 9EE6 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EE7
 252+ 9EE7 21 FA 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EEA 35               dec (hl)
 254+ 9EEB C0               ret nz
 255+ 9EEC
 256+ 9EEC              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EEC              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EEC              ; Analiza (Cola_de_desplazamiento).
 259+ 9EEC
 260+ 9EEC 3A FD 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EEF A7               and a
 262+ 9EF0 CC E4 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EF3 28 30            jr z,Reinicia_el_movimiento
 264+ 9EF5
 265+ 9EF5 FE FF            cp $ff
 266+ 9EF7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EF9
 268+ 9EF9 FE FE            cp $fe
 269+ 9EFB CC 68 9F         call z,Fijamos_bucle
 270+ 9EFE 28 25            jr z,Reinicia_el_movimiento
 271+ 9F00
 272+ 9F00 FE FD            cp $fd
 273+ 9F02 20 11            jr nz,1F
 274+ 9F04
 275+ 9F04              ; ---
 276+ 9F04              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F04
 278+ 9F04 3A 02 89         ld a,(Ctrl_2)
 279+ 9F07 CB 5F            bit 3,a
 280+ 9F09 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F0B
 282+ 9F0B              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F0B
 284+ 9F0B 21 02 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F0E CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F10
 287+ 9F10 CD 79 9F         call Inicia_Repetimos_movimiento
 288+ 9F13 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F15              ; ---
 290+ 9F15
 291+ 9F15 FE 01        1 cp 1
 292+ 9F17 CA 52 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F1A
 294+ 9F1A 3D               dec a
 295+ 9F1B 32 FD 88         ld (Cola_de_desplazamiento),a
 296+ 9F1E
 297+ 9F1E 3A FB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F21 32 FA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F24              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F24 C9               ret
 301+ 9F25
 302+ 9F25              Reinicia_el_movimiento
 303+ 9F25
 304+ 9F25 3A 02 89         ld a,(Ctrl_2)
 305+ 9F28 CB 5F            bit 3,a
 306+ 9F2A 28 1B            jr z,2F
 307+ 9F2C
 308+ 9F2C              ; (Cola_de_desplazamiento)="254".
 309+ 9F2C
 310+ 9F2C 21 FC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F2F 35               dec (hl)
 312+ 9F30 20 15            jr nz,2F
 313+ 9F32
 314+ 9F32              ; Fin de las repeticiones del último movimiento.
 315+ 9F32
 316+ 9F32 21 02 89         ld hl,Ctrl_2
 317+ 9F35 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F37
 319+ 9F37 2A F4 88         ld hl,(Puntero_mov)
 320+ 9F3A 23               inc hl
 321+ 9F3B 23               inc hl
 322+ 9F3C 23               inc hl
 323+ 9F3D 22 F4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F40              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F40 7E               ld a,(hl)
 326+ 9F41 32 FD 88         ld (Cola_de_desplazamiento),a
 327+ 9F44
 328+ 9F44 C3 EC 9E         jp Cola
 329+ 9F47
 330+ 9F47 CD 84 9F     2 call Inicia_Puntero_mov
 331+ 9F4A
 332+ 9F4A 21 02 89         ld hl,Ctrl_2
 333+ 9F4D CB 96            res 2,(hl)
 334+ 9F4F
 335+ 9F4F C3 BC 9E         jp Movimiento
 336+ 9F52
 337+ 9F52              Siguiente_desplazamiento
 338+ 9F52
 339+ 9F52              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F52              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F52
 342+ 9F52 21 02 89         ld hl,Ctrl_2
 343+ 9F55 CB 96            res 2,(hl)
 344+ 9F57
 345+ 9F57 2A F4 88         ld hl,(Puntero_mov)
 346+ 9F5A 23               inc hl
 347+ 9F5B 23               inc hl
 348+ 9F5C 22 F4 88         ld (Puntero_mov),hl
 349+ 9F5F
 350+ 9F5F 7E               ld a,(hl)
 351+ 9F60 A7               and a
 352+ 9F61 CC E4 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F64 CA 25 9F         jp z,Reinicia_el_movimiento
 354+ 9F67
 355+ 9F67 C9               ret
 356+ 9F68              ; Subrutinas -----------------------------------------
 357+ 9F68              ; ---------- --------- --------- ---------- ----------
 358+ 9F68              ;
 359+ 9F68              ;   24/07/23
 360+ 9F68              ;
 361+ 9F68              ;   Fijamos_bucle
 362+ 9F68              ;
 363+ 9F68              ;
 364+ 9F68
 365+ 9F68              Fijamos_bucle
 366+ 9F68
 367+ 9F68 3A F8 88         ld a,(Incrementa_puntero)
 368+ 9F6B 3C               inc a
 369+ 9F6C 32 F9 88         ld (Incrementa_puntero_backup),a
 370+ 9F6F
 371+ 9F6F CD E4 9F         call Incrementa_Puntero_indice_mov
 372+ 9F72 2A F2 88         ld hl,(Puntero_indice_mov)
 373+ 9F75 22 F6 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F78 C9               ret
 375+ 9F79
 376+ 9F79              ; ---------- --------- --------- ---------- ----------
 377+ 9F79              ;
 378+ 9F79              ;   07/7/23
 379+ 9F79              ;
 380+ 9F79              ;   Inicia_Repetimos_movimiento
 381+ 9F79              ;
 382+ 9F79              ;
 383+ 9F79
 384+ 9F79              Inicia_Repetimos_movimiento
 385+ 9F79
 386+ 9F79              ; Iniciamos (Repetimos_movimiento).
 387+ 9F79
 388+ 9F79 DD 2A F4 88      ld ix,(Puntero_mov)
 389+ 9F7D DD 7E 02         ld a,(ix+2)
 390+ 9F80 32 FC 88         ld (Repetimos_movimiento),a
 391+ 9F83
 392+ 9F83 C9               ret
 393+ 9F84
 394+ 9F84              ; ---------- --------- --------- ---------- ----------
 395+ 9F84              ;
 396+ 9F84              ;   26/6/23
 397+ 9F84              ;
 398+ 9F84              ;   Inicia_Puntero_mov
 399+ 9F84              ;
 400+ 9F84              ;
 401+ 9F84
 402+ 9F84 2A F2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F87 5E               ld e,(hl)
 404+ 9F88 23               inc hl
 405+ 9F89 56               ld d,(hl)
 406+ 9F8A EB               ex de,hl
 407+ 9F8B 22 F4 88         ld (Puntero_mov),hl
 408+ 9F8E C9               ret
 409+ 9F8F
 410+ 9F8F              ; ---------- --------- --------- ---------- ----------
 411+ 9F8F              ;
 412+ 9F8F              ;   27/06/23
 413+ 9F8F              ;
 414+ 9F8F              ;   Aplica_movimiento.
 415+ 9F8F
 416+ 9F8F              Aplica_desplazamiento
 417+ 9F8F
 418+ 9F8F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F8F
 420+ 9F8F 2A F4 88         ld hl, (Puntero_mov)
 421+ 9F92
 422+ 9F92 7E               ld a,(hl)
 423+ 9F93 E6 F0            and $f0
 424+ 9F95 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F96
 426+ 9F96 CB 7E            bit 7,(hl)
 427+ 9F98 28 03            jr z,1F
 428+ 9F9A CD BA 99         call Mov_up
 429+ 9F9D 2A F4 88     1 ld hl, (Puntero_mov)
 430+ 9FA0 CB 76            bit 6,(hl)
 431+ 9FA2 28 03            jr z,2F
 432+ 9FA4 CD 89 99         call Mov_down
 433+ 9FA7 2A F4 88     2 ld hl, (Puntero_mov)
 434+ 9FAA CB 6E            bit 5,(hl)
 435+ 9FAC 28 03            jr z,3F
 436+ 9FAE CD 1B 9B         call Mov_left
 437+ 9FB1 2A F4 88     3 ld hl, (Puntero_mov)
 438+ 9FB4 CB 66            bit 4,(hl)
 439+ 9FB6 C8               ret z
 440+ 9FB7 CD FD 99         call Mov_right
 441+ 9FBA C9               ret
 442+ 9FBB
 443+ 9FBB              ; ---------- --------- --------- ---------- ----------
 444+ 9FBB              ;
 445+ 9FBB              ;   26/06/23
 446+ 9FBB              ;
 447+ 9FBB              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FBB
 449+ 9FBB              Ajusta_velocidad_desplazamiento
 450+ 9FBB
 451+ 9FBB              ; 1er byte de la cadena de movimiento.
 452+ 9FBB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FBB
 454+ 9FBB CD D9 9F         call Extrae_nibble_alto
 455+ 9FBE
 456+ 9FBE 32 DE 88         ld (Vel_up),a
 457+ 9FC1 79               ld a,c
 458+ 9FC2 E6 0F            and $0f
 459+ 9FC4 32 DF 88         ld (Vel_down),a
 460+ 9FC7
 461+ 9FC7              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FC7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FC7
 464+ 9FC7 23               inc hl
 465+ 9FC8 CD D9 9F         call Extrae_nibble_alto
 466+ 9FCB
 467+ 9FCB 32 DC 88         ld (Vel_left),a
 468+ 9FCE 79               ld a,c
 469+ 9FCF E6 0F            and $0f
 470+ 9FD1 32 DD 88         ld (Vel_right),a
 471+ 9FD4
 472+ 9FD4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FD4
 474+ 9FD4 23               inc hl
 475+ 9FD5 22 F4 88         ld (Puntero_mov),hl
 476+ 9FD8 C9               ret
 477+ 9FD9
 478+ 9FD9 06 04        Extrae_nibble_alto ld b,4
 479+ 9FDB 7E               ld a,(hl)
 480+ 9FDC 4F               ld c,a
 481+ 9FDD E6 F0            and $f0
 482+ 9FDF CB 3F        1 srl a
 483+ 9FE1 10 FC            djnz 1B
 484+ 9FE3 C9               ret
 485+ 9FE4
 486+ 9FE4              ; ---------- --------- --------- ---------- ----------
 487+ 9FE4              ;
 488+ 9FE4              ;   5/7/23
 489+ 9FE4              ;
 490+ 9FE4              ;   Incrementa_Puntero_indice_mov
 491+ 9FE4
 492+ 9FE4              Incrementa_Puntero_indice_mov
 493+ 9FE4
 494+ 9FE4 21 F8 88         ld hl,Incrementa_puntero
 495+ 9FE7 34               inc (hl)
 496+ 9FE8
 497+ 9FE8 2A F2 88         ld hl,(Puntero_indice_mov)
 498+ 9FEB 01 02 00         ld bc,2
 499+ 9FEE A7               and a
 500+ 9FEF 09               add hl,bc
 501+ 9FF0 22 F2 88         ld (Puntero_indice_mov),hl
 502+ 9FF3
 503+ 9FF3 7E               ld a,(hl)
 504+ 9FF4 A7               and a
 505+ 9FF5
 506+ 9FF5              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FF5
 508+ 9FF5              ;    jr z,$
 509+ 9FF5
 510+ 9FF5              ;! Reinicia el Patrón de movimiento.
 511+ 9FF5
 512+ 9FF5 CC FA 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FF8
 514+ 9FF8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FF9
 516+ 9FF9 C9               ret
 517+ 9FFA
 518+ 9FFA
 519+ 9FFA              ; ---------- --------- --------- ---------- ----------
 520+ 9FFA              ;
 521+ 9FFA              ;   24/07/23
 522+ 9FFA              ;
 523+ 9FFA              ;   Inicializa_Puntero_indice_mov
 524+ 9FFA
 525+ 9FFA              Inicializa_Puntero_indice_mov
 526+ 9FFA
 527+ 9FFA              ; Existe etiqueta de bucle principal???
 528+ 9FFA
 529+ 9FFA 2A F6 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FFD 24               inc h
 531+ 9FFE 25               dec h
 532+ 9FFF 28 05            jr z,2F
 533+ A001
 534+ A001 22 F2 88         ld (Puntero_indice_mov),hl
 535+ A004 18 14            jr 3F
 536+ A006
 537+ A006              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A006
 539+ A006 3A F8 88     2 ld a,(Incrementa_puntero)
 540+ A009 47               ld b,a
 541+ A00A
 542+ A00A 2A F2 88         ld hl,(Puntero_indice_mov)
 543+ A00D 2B           1 dec hl
 544+ A00E 2B               dec hl
 545+ A00F 10 FC            djnz 1B
 546+ A011 22 F2 88         ld (Puntero_indice_mov),hl
 547+ A014
 548+ A014 AF               xor a
 549+ A015 32 F8 88         ld (Incrementa_puntero),a
 550+ A018 18 06            jr 4F
 551+ A01A
 552+ A01A 3A F9 88     3 ld a,(Incrementa_puntero_backup)
 553+ A01D 32 F8 88         ld (Incrementa_puntero),a
 554+ A020 C9           4 ret
 555+ A021
 556+ A021
 557+ A021
# file closed: Patrones_de_mov.asm
1654  A021              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A021              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A021              ;
   3+ A021              ;	4/9/23
   4+ A021              ;
   5+ A021              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A021
   7+ A021              ;	ADC HL,SP	LD (addr),SP
   8+ A021              ;	ADD HL,SP	LD SP,(addr)
   9+ A021              ;	ADD IX,SP	LD SP,nn
  10+ A021              ; 	ADD IY,SP	LD SP,HL
  11+ A021              ;				LD SP,IX
  12+ A021              ;	DEC SP		LD SP,IY
  13+ A021
  14+ A021              ;	EX (SP),HL
  15+ A021              ;	EX (SP),IX
  16+ A021              ;	EX (SP),IY
  17+ A021
  18+ A021              ;	INC SP
  19+ A021
  20+ A021                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E7 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 04 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A F1 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 04 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 1D 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A F1 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 23 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 15 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 1B 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 15 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   19/10/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ; En 1er lugar consultamos el bit_4 de (Semaforo).
 127+ 72EC              ; Nos indica si existe algún album vacío.
 128+ 72EC
 129+ 72EC 3A 3D 89         ld a,(Semaforo)
 130+ 72EF CB 67            bit 4,a
 131+ 72F1 28 28            jr z,7F
 132+ 72F3
 133+ 72F3 CB A7            res 4,a
 134+ 72F5 32 3D 89         ld (Semaforo),a
 135+ 72F8
 136+ 72F8              ; Album_de_fots_2 o Album_de_fotos_1 está vacío.
 137+ 72F8              ; Album_de_fotos_2 ???
 138+ 72F8
 139+ 72F8 CB 7F            bit 7,a                         ; bit_7 ="1". Indica que Album_de_fotos_2 está vacío.
 140+ 72FA 28 0F            jr z,8F                         ; Hay que "ordenar los álbumes". Volcamos Album_de_fotos_3 a Album_de_fotos_2.
 141+ 72FC
 142+ 72FC
 143+ 72FC              ; Rellena Album_de_fotos_2
 144+ 72FC
 145+ 72FC CB BF            res 7,a
 146+ 72FE CB EF            set 5,a                         ; El bit_5 indica que el álbum ha sido reestructurado.
 147+ 7300 32 3D 89         ld (Semaforo),a
 148+ 7303
 149+ 7303 CD D8 73         call Album3_a_Album2
 150+ 7306 CD 28 74         call Actualiza_punteros_de_albumes
 151+ 7309
 152+ 7309 18 10            jr 7F
 153+ 730B
 154+ 730B              ; Album_de_fotos_1 está vacío.
 155+ 730B
 156+ 730B              8
 157+ 730B CB B7            res 6,a
 158+ 730D CB EF            set 5,a
 159+ 730F 32 3D 89         ld (Semaforo),a
 160+ 7312
 161+ 7312 3A 52 89         ld a,(Contador_de_frames_2)
 162+ 7315 08               ex af,af'
 163+ 7316 3A 51 89         ld a,(Contador_de_frames)
 164+ 7319 18 FE            jr $
 165+ 731B
 166+ 731B              ; #############################################################3
 167+ 731B
 168+ 731B              ;   En 1er lugar limpiamos el FRAME pintado.
 169+ 731B              ;   Vaciamos Album_de_fotos.
 170+ 731B
 171+ 731B              ;   Album_de_fotos. Contiene datos ???
 172+ 731B
 173+ 731B 21 01 70     7 ld hl,Album_de_fotos+1
 174+ 731E 7E               ld a,(hl)
 175+ 731F A7               and a
 176+ 7320 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 177+ 7322
 178+ 7322              ;   Hemos impreso Album_de_fotos. Limpiamos el álbum y actualizamos (End_Snapshot).
 179+ 7322
 180+ 7322 2A 1F 89         ld hl,(End_Snapshot)
 181+ 7325 01 00 70         ld bc,Album_de_fotos
 182+ 7328 11 01 70         ld de,Album_de_fotos+1
 183+ 732B AF               xor a
 184+ 732C 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 185+ 732D
 186+ 732D CD FF 73         call Limpia_album
 187+ 7330
 188+ 7330 21 00 00         ld hl,0
 189+ 7333 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 190+ 7336
 191+ 7336              ; ----- ----- ----- -----
 192+ 7336
 193+ 7336              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 194+ 7336              ;   Album_de_fotos_1. Contiene un frame completo ???
 195+ 7336
 196+ 7336 3A 3D 89     3 ld a,(Semaforo)
 197+ 7339 CB 4F            bit 1,a
 198+ 733B 20 08            jr nz,4F
 199+ 733D
 200+ 733D              ;   Album_de_fotos_1 no está completo.
 201+ 733D
 202+ 733D 21 3D 89         ld hl,Semaforo
 203+ 7340 CB E6            set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 204+ 7342 CB 8E            res 1,(hl)
 205+ 7344 C9               ret                         ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 206+ 7345
 207+ 7345              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 208+ 7345
 209+ 7345 21 55 70     4 ld hl,Album_de_fotos_1+1
 210+ 7348 7E               ld a,(hl)
 211+ 7349 A7               and a
 212+ 734A 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 213+ 734C
 214+ 734C              ; ----- ----- ----- -----
 215+ 734C              ; ----- ----- ----- -----
 216+ 734C
 217+ 734C              ;   Album_de_fotos_1 Contiene un frame completo que hay que volcar en Album_de_fotos.
 218+ 734C              ;   Actualiza (End_Snapshot).
 219+ 734C
 220+ 734C 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 221+ 734F 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 222+ 7352 11 00 70         ld de,Album_de_fotos        ; Destino.
 223+ 7355
 224+ 7355 CD FF 73         call Limpia_album
 225+ 7358
 226+ 7358              ;   Calculamos (End_Snapshot)
 227+ 7358
 228+ 7358 A7               and a
 229+ 7359 ED 4A            adc hl,bc
 230+ 735B 22 1F 89         ld (End_Snapshot),hl
 231+ 735E
 232+ 735E              ;   Limpiamos Album_de_fotos_1.
 233+ 735E
 234+ 735E 2A 25 89         ld hl,(End_Snapshot_1)
 235+ 7361 01 54 70         ld bc,Album_de_fotos_1
 236+ 7364 11 55 70         ld de,Album_de_fotos_1+1
 237+ 7367 AF               xor a
 238+ 7368 02               ld (bc),a
 239+ 7369
 240+ 7369 CD FF 73         call Limpia_album
 241+ 736C
 242+ 736C 21 00 00         ld hl,0
 243+ 736F 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 244+ 7372
 245+ 7372              ; ----- ----- ----- -----
 246+ 7372
 247+ 7372              ;   Album_de_fotos_2. Contiene Frame completo ???
 248+ 7372
 249+ 7372 3A 3D 89     1 ld a,(Semaforo)
 250+ 7375 CB 57            bit 2,a
 251+ 7377 20 17            jr nz,5F
 252+ 7379
 253+ 7379              ;   Album_de_fotos_2 no está completo.
 254+ 7379
 255+ 7379              ;   Ha sido reestructurado ???
 256+ 7379
 257+ 7379               ;! Debuggggg
 258+ 7379
 259+ 7379 3A 52 89         ld a,(Contador_de_frames_2)
 260+ 737C 08               ex af,af'
 261+ 737D 3A 51 89         ld a,(Contador_de_frames)
 262+ 7380 18 FE            jr $
 263+ 7382
 264+ 7382 3A 3D 89         ld a,(Semaforo)
 265+ 7385 CB 6F            bit 5,a
 266+ 7387 C0               ret nz
 267+ 7388
 268+ 7388 21 3D 89         ld hl,Semaforo
 269+ 738B CB E6            set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 270+ 738D CB F6            set 6,(hl)
 271+ 738F C9               ret
 272+ 7390
 273+ 7390              ;   Album_de_fotos_2 contiene un FRAME completo. Datos ???.
 274+ 7390
 275+ 7390 21 A9 70     5 ld hl,Album_de_fotos_2+1
 276+ 7393 7E               ld a,(hl)
 277+ 7394 A7               and a
 278+ 7395 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 279+ 7397
 280+ 7397              ; ----- ----- ----- -----
 281+ 7397              ; ----- ----- ----- -----
 282+ 7397              ; ----- ----- ----- -----
 283+ 7397
 284+ 7397              ;   Album_de_fotos_2 contiene un frame completo.
 285+ 7397              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 286+ 7397
 287+ 7397 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 288+ 739A 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 289+ 739D 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 290+ 73A0
 291+ 73A0 CD FF 73         call Limpia_album
 292+ 73A3
 293+ 73A3              ;   Actualizamos (End_Snapshot_1):
 294+ 73A3
 295+ 73A3 A7               and a
 296+ 73A4 ED 4A            adc hl,bc
 297+ 73A6 22 25 89         ld (End_Snapshot_1),hl
 298+ 73A9
 299+ 73A9              ;   Limpiamos Album_de_fotos_2.
 300+ 73A9
 301+ 73A9 2A 29 89         ld hl,(End_Snapshot_2)
 302+ 73AC 01 A8 70         ld bc,Album_de_fotos_2
 303+ 73AF 11 A9 70         ld de,Album_de_fotos_2+1
 304+ 73B2 AF               xor a
 305+ 73B3 02               ld (bc),a
 306+ 73B4
 307+ 73B4 CD FF 73         call Limpia_album
 308+ 73B7
 309+ 73B7 21 00 00         ld hl,0
 310+ 73BA 22 29 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 311+ 73BD
 312+ 73BD              ; ----- ----- ----- -----
 313+ 73BD
 314+ 73BD              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 315+ 73BD              ;   Album_de_fotos_3. Contiene un frame completo ???
 316+ 73BD
 317+ 73BD 3A 3D 89     2 ld a,(Semaforo)
 318+ 73C0 CB 5F            bit 3,a
 319+ 73C2 20 0E            jr nz,6F
 320+ 73C4
 321+ 73C4              ;   Album_de_fotos_3 no está completo.
 322+ 73C4
 323+ 73C4              ;   Ha sido reestructurado ???
 324+ 73C4
 325+ 73C4 3A 3D 89         ld a,(Semaforo)
 326+ 73C7 CB 6F            bit 5,a
 327+ 73C9 C0               ret nz
 328+ 73CA
 329+ 73CA 21 3D 89         ld hl,Semaforo
 330+ 73CD CB E6            set 4,(hl)                  ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 331+ 73CF CB FE            set 7,(hl)                  ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 332+ 73D1 C9               ret
 333+ 73D2
 334+ 73D2              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 335+ 73D2
 336+ 73D2 21 FD 70     6 ld hl,Album_de_fotos_3+1
 337+ 73D5 7E               ld a,(hl)
 338+ 73D6 A7               and a
 339+ 73D7 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 340+ 73D8
 341+ 73D8              ; ----- ----- ----- -----
 342+ 73D8              ; ----- ----- ----- -----
 343+ 73D8              ; ----- ----- ----- -----
 344+ 73D8
 345+ 73D8              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 346+ 73D8
 347+ 73D8 2A 2D 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 348+ 73DB 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 349+ 73DE 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 350+ 73E1
 351+ 73E1 CD FF 73         call Limpia_album
 352+ 73E4
 353+ 73E4              ;   Actualizamos (End_Snapshot_2):
 354+ 73E4
 355+ 73E4 A7               and a
 356+ 73E5 ED 4A            adc hl,bc
 357+ 73E7 22 29 89         ld (End_Snapshot_2),hl
 358+ 73EA
 359+ 73EA              ;   Limpiamos Album_de_fotos_3.
 360+ 73EA
 361+ 73EA 2A 2D 89         ld hl,(End_Snapshot_3)
 362+ 73ED 01 FC 70         ld bc,Album_de_fotos_3
 363+ 73F0 11 FD 70         ld de,Album_de_fotos_3+1
 364+ 73F3 AF               xor a
 365+ 73F4 02               ld (bc),a
 366+ 73F5
 367+ 73F5 CD FF 73         call Limpia_album
 368+ 73F8
 369+ 73F8              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 370+ 73F8              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 371+ 73F8
 372+ 73F8 21 00 00         ld hl,0
 373+ 73FB 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 374+ 73FE
 375+ 73FE C9               ret
 376+ 73FF
 377+ 73FF              ; ----------------------------------------------------
 378+ 73FF              ;
 379+ 73FF              ;   10/8/23
 380+ 73FF              ;
 381+ 73FF              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 382+ 73FF              ;
 383+ 73FF              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 384+ 73FF              ;           BC ..... Dirección de inicio del álbum.
 385+ 73FF              ;           DE ..... Dirección de inicio del álbum. +1
 386+ 73FF
 387+ 73FF              ;    ld hl,(End_Snapshot)
 388+ 73FF              ;    ld bc,Album_de_fotos
 389+ 73FF              ;    ld de,Album_de_fotos+1
 390+ 73FF
 391+ 73FF              ;   MODIFICA: A,HL,BC y DE.
 392+ 73FF
 393+ 73FF              Limpia_album
 394+ 73FF D5               push de                     ; Guardo DESTINO.
 395+ 7400 C5               push bc                     ; Guardo ORIGEN.
 396+ 7401 ED 42            sbc hl,bc
 397+ 7403 4D               ld c,l
 398+ 7404 44               ld b,h
 399+ 7405 E1               pop hl
 400+ 7406 C5               push bc
 401+ 7407 ED B0            ldir
 402+ 7409 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 403+ 740A E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 404+ 740B C9               ret                         ; _ a otro).
 405+ 740C              ;
 406+ 740C
 407+ 740C              ; -----------------------------------------------
 408+ 740C              ;
 409+ 740C              ;   13/10/23
 410+ 740C
 411+ 740C              Actualiza_semaforo
 412+ 740C
 413+ 740C              ; Está activo el bit "Album_de_fotos" ???
 414+ 740C
 415+ 740C 3A 3D 89         ld a,(Semaforo)
 416+ 740F CB 47            bit 0,a
 417+ 7411 20 04            jr nz,1F
 418+ 7413 CB C7            set 0,a                     ; Album_de_fotos COMPLETO.
 419+ 7415 18 0D            jr 2F
 420+ 7417 CB 4F        1 bit 1,a
 421+ 7419 20 04            jr nz,3F
 422+ 741B CB CF            set 1,a                      ; Album_de_fotos_1 COMPLETO.
 423+ 741D 18 05            jr 2F
 424+ 741F CB 57        3 bit 2,a
 425+ 7421 C0               ret nz
 426+ 7422 CB D7            set 2,a                      ; Album_de_fotos_2 COMPLETO.
 427+ 7424 32 3D 89     2 ld (Semaforo),a
 428+ 7427 C9               ret
 429+ 7428
 430+ 7428              ; --------------------------------------------------------------------------------------------
 431+ 7428              ;
 432+ 7428              ;   20/10/23
 433+ 7428
 434+ 7428              Actualiza_punteros_de_albumes
 435+ 7428
 436+ 7428 2A 31 89         ld hl,(Puntero_indice_album_de_fotos)
 437+ 742B 2B               dec hl
 438+ 742C 2B               dec hl
 439+ 742D 22 31 89         ld (Puntero_indice_album_de_fotos),hl
 440+ 7430
 441+ 7430 2A 35 89         ld hl,(Puntero_indice_End_Snapshot)
 442+ 7433 2B               dec hl
 443+ 7434 2B               dec hl
 444+ 7435 22 35 89         ld (Puntero_indice_End_Snapshot),hl
 445+ 7438 CD 83 8C         call Extrae_address
 446+ 743B 22 39 89         ld (Puntero_de_End_Snapshot),hl
 447+ 743E
 448+ 743E CD 83 8C         call Extrae_address
 449+ 7441 22 1B 89         ld (Stack_snapshot),hl
 450+ 7444
 451+ 7444 CD 48 74         call Actualiza_semaforo_2
 452+ 7447
 453+ 7447 C9              ret
 454+ 7448
 455+ 7448              ; --------------------------------------------------------------------------------------------
 456+ 7448              ;
 457+ 7448              ;   20/10/23
 458+ 7448
 459+ 7448              Actualiza_semaforo_2
 460+ 7448
 461+ 7448 3A 3D 89         ld a,(Semaforo)
 462+ 744B CB 5F            bit 3,a
 463+ 744D 28 04            jr z,2F
 464+ 744F CB 9F            res 3,a
 465+ 7451 18 0D            jr 1F
 466+ 7453 CB 57        2 bit 2,a
 467+ 7455 28 04            jr z,3F
 468+ 7457 CB 97            res 2,a
 469+ 7459 18 05            jr 1F
 470+ 745B CB 4F        3 bit 1,a
 471+ 745D C8               ret z
 472+ 745E CB 8F            res 1,a
 473+ 7460 32 3D 89     1 ld (Semaforo),a
 474+ 7463 C9               ret
 475+ 7464
# file closed: Guarda_foto_registros.asm
1655  7464
1656  7464              	SAVESNA "Pruebas.sna", START
1657  7464
1658  7464
1659  7464
1660  7464
# file closed: Banco_de_pruebas.asm
