# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1C 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15
  44  AA15              ;! Debuggggggggggggggggggg
  45  AA15
  46  AA15 3A 56 89     	ld a,(Contador_de_frames_2)
  47  AA18 FE 01        	cp 1
  48  AA1A 20 0A        	jr nz,1F
  49  AA1C 08           	ex af,af
  50  AA1D 3A 55 89     	ld a,(Contador_de_frames)
  51  AA20 FE 5B        	cp $5b	;	$55 ok. 7 entidades en pantalla.
  52  AA22 28 FE        	jr z,$
  53  AA24 30 FE        	jr nc,$
  54  AA26
  55  AA26 CD 15 8E     1 call Pinta_entidades
  56  AA29              ;	call Pinta_Amadeus
  57  AA29 CD E9 8D     	call Gestiona_entidades
  58  AA2C              ;	call Gestiona_Amadeus
  59  AA2C
  60  AA2C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA2C
  62  AA2C CD 22 8E     	call Actualiza_relojes
  63  AA2F
  64  AA2F              ;	call Recupera_parametros_DRAW
  65  AA2F
  66  AA2F              ;! Debuggg
  67  AA2F
  68  AA2F FD E1        	pop iy
  69  AA31 DD E1        	pop ix
  70  AA33 F1           	pop af
  71  AA34 C1           	pop bc
  72  AA35 D1           	pop de
  73  AA36 E1           	pop hl
  74  AA37 D9           	exx
  75  AA38 C1           	pop bc
  76  AA39 D1           	pop de
  77  AA3A E1           	pop hl
  78  AA3B 08           	ex af,af'
  79  AA3C F1           	pop af
  80  AA3D 08           	ex af,af'
  81  AA3E D9           	exx
  82  AA3F
  83  AA3F ED 7B 1C 89  	ld sp,(Stack_3)
  84  AA43
  85  AA43 FB           	ei
  86  AA44 C9           	ret
  87  AA45
  88  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  89  AA45
  90  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 22 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 28 89        	defw End_Snapshot_1
 267+ 8500 2C 89        	defw End_Snapshot_2
 268+ 8502 30 89        	defw End_Snapshot_3
 269+ 8504 24 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 2A 89        	defw End_Snapshot_disparos_1
 271+ 8508 2E 89        	defw End_Snapshot_disparos_2
 272+ 850A 32 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  91  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C              ;
  95+ 858C              ;	Índice de cajas de entidades.
  96+ 858C
  97+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 858C
  99+ 858C DD 85        	defw Caja_1
 100+ 858E 1C 86        	defw Caja_2
 101+ 8590 5B 86        	defw Caja_3
 102+ 8592 9A 86        	defw Caja_4
 103+ 8594 D9 86        	defw Caja_5
 104+ 8596 18 87        	defw Caja_6
 105+ 8598 57 87        	defw Caja_7
 106+ 859A
 107+ 859A 00 00        	defw 0
 108+ 859C 00 00        	defw 0
 109+ 859E
 110+ 859E              ; ---------- ---------- ---------- ---------- ----------
 111+ 859E
 112+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 114+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 85A7
 117+ 85A7 05           	db %00000101									; (Attr).
 118+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 85AC
 121+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 85B0
 124+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 85B2 04           	db 4 											; (Cuad_objeto).
 126+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 85B7
 128+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 85B8
 130+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 85BE
 132+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 133+ 85C0 00 00        	defw 0											;	" " " " " " "
 134+ 85C2 00 00        	defw 0											;	" " " " " " "
 135+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85C8
 137+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85CA
 139+ 85CA 00           	db 0											; (Autoriza_movimiento).
 140+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85CF 00 00
 141+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85D4
 143+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85D7
 146+ 85D7 00           	db 0 											; (Columnas).
 147+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85DD
 150+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85DD
 152+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85DF 00 00        	defw 0											; (Posicion_actual).
 154+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85E6
 157+ 85E6 00           	db %00000000 									; (Attr).
 158+ 85E7
 159+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85EF
 164+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85F1 00           	db 0											; (Cuad_objeto).
 166+ 85F2
 167+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85F6
 169+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85F7
 171+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85FD
 173+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00        	defw 0											;	" " " " " " "
 176+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 8607
 178+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 8609
 180+ 8609 00           	db 0											; (Autoriza_movimiento).
 181+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 860E 00 00
 182+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 8613
 184+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 186+ 8616
 187+ 8616 00           	db 0 											; (Columnas).
 188+ 8617 00 00        	defw 0											; (Limite_horizontal).
 189+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 861C
 191+ 861C              ; ---------- ---------- ---------- ---------- ----------
 192+ 861C
 193+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 861E 00 00        	defw 0											; (Posicion_actual).
 195+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8625
 198+ 8625 00           	db %00000000 									; (Attr).
 199+ 8626
 200+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 862E
 205+ 862E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8630 00           	db 0											; (Cuad_objeto).
 207+ 8631
 208+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8635
 210+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8636
 212+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 863C
 214+ 863C 00 00        	db 0,0											; Variables_de_pintado
 215+ 863E 00 00        	defw 0											;	" " " " " " "
 216+ 8640 00 00        	defw 0											;	" " " " " " "
 217+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8646
 219+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8648
 221+ 8648 00           	db 0											; (Autoriza_movimiento).
 222+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 864D 00 00
 223+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8652
 225+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8655
 228+ 8655 00           	db 0 											; (Columnas).
 229+ 8656 00 00        	defw 0											; (Limite_horizontal).
 230+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 865B
 232+ 865B              ; ---------- ---------- ---------- ---------- ----------
 233+ 865B
 234+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 865D 00 00        	defw 0											; (Posicion_actual).
 236+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8664
 239+ 8664 00           	db %00000000 									; (Attr).
 240+ 8665
 241+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 866D
 246+ 866D 00 00        	defw 0											; (Posicion_inicio).
 247+ 866F 00           	db 0											; (Cuad_objeto).
 248+ 8670
 249+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8674
 251+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8675
 253+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 867B
 255+ 867B 00 00        	db 0,0											; Variables_de_pintado
 256+ 867D 00 00        	defw 0											;	" " " " " " "
 257+ 867F 00 00        	defw 0											;	" " " " " " "
 258+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8685
 260+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8687
 262+ 8687 00           	db 0											; (Autoriza_movimiento).
 263+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 868C 00 00
 264+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8691
 266+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8694
 269+ 8694 00           	db 0 											; (Columnas).
 270+ 8695 00 00        	defw 0											; (Limite_horizontal).
 271+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 869A
 273+ 869A              ; ---------- ---------- ---------- ---------- ----------
 274+ 869A
 275+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 869C 00 00        	defw 0											; (Posicion_actual).
 277+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 86A3
 280+ 86A3 00           	db %00000000 									; (Attr).
 281+ 86A4
 282+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 86AC
 287+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 288+ 86AE 00           	db 0											; (Cuad_objeto).
 289+ 86AF
 290+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 86B3
 292+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 86B4
 294+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 86BA
 296+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 297+ 86BC 00 00        	defw 0											;	" " " " " " "
 298+ 86BE 00 00        	defw 0											;	" " " " " " "
 299+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86C4
 301+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86C6
 303+ 86C6 00           	db 0											; (Autoriza_movimiento).
 304+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86CB 00 00
 305+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86D0
 307+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86D3
 310+ 86D3 00           	db 0 											; (Columnas).
 311+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86D9
 314+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86D9
 316+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86DB 00 00        	defw 0											; (Posicion_actual).
 318+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86E2
 321+ 86E2 00           	db %00000000 									; (Attr).
 322+ 86E3
 323+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86EB
 328+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86ED 00           	db 0											; (Cuad_objeto).
 330+ 86EE
 331+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86F2
 333+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86F3
 335+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86F9
 337+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86FB 00 00        	defw 0											;	" " " " " " "
 339+ 86FD 00 00        	defw 0											;	" " " " " " "
 340+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 8703
 342+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 8705
 344+ 8705 00           	db 0											; (Autoriza_movimiento).
 345+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 870A 00 00
 346+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 870F
 348+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 350+ 8712
 351+ 8712 00           	db 0 											; (Columnas).
 352+ 8713 00 00        	defw 0											; (Limite_horizontal).
 353+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 8718
 355+ 8718              ; ---------- ---------- ---------- ---------- ----------
 356+ 8718
 357+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 871A 00 00        	defw 0											; (Posicion_actual).
 359+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 360+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8721
 362+ 8721 00           	db %00000000 									; (Attr).
 363+ 8722
 364+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 872A
 369+ 872A 00 00        	defw 0											; (Posicion_inicio).
 370+ 872C 00           	db 0											; (Cuad_objeto).
 371+ 872D
 372+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8731
 374+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8732
 376+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8738
 378+ 8738 00 00        	db 0,0											; Variables_de_pintado
 379+ 873A 00 00        	defw 0											;	" " " " " " "
 380+ 873C 00 00        	defw 0											;	" " " " " " "
 381+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8742
 383+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8744
 385+ 8744 00           	db 0											; (Autoriza_movimiento).
 386+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8749 00 00
 387+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 874E
 389+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8751
 392+ 8751 00           	db 0 											; (Columnas).
 393+ 8752 00 00        	defw 0											; (Limite_horizontal).
 394+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8757
 396+ 8757              ; ---------- ---------- ---------- ---------- ----------
 397+ 8757
 398+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8759 00 00        	defw 0											; (Posicion_actual).
 400+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8760
 403+ 8760 00           	db %00000000 									; (Attr).
 404+ 8761
 405+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8769
 410+ 8769 00 00        	defw 0											; (Posicion_inicio).
 411+ 876B 00           	db 0											; (Cuad_objeto).
 412+ 876C
 413+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8770
 415+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8771
 417+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8777
 419+ 8777 00 00        	db 0,0											; Variables_de_pintado
 420+ 8779 00 00        	defw 0											;	" " " " " " "
 421+ 877B 00 00        	defw 0											;	" " " " " " "
 422+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8781
 424+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8783
 426+ 8783 00           	db 0											; (Autoriza_movimiento).
 427+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8788 00 00
 428+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 878D
 430+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8790
 433+ 8790 00           	db 0 											; (Columnas).
 434+ 8791 00 00        	defw 0											; (Limite_horizontal).
 435+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8796
 437+ 8796              ; -------------------------------------------------------------------------------------
 438+ 8796              ;
 439+ 8796              ;	20/05/23
 440+ 8796              ;
 441+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8796              ;
 443+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8796
 448+ 8796              Indice_de_entidades
 449+ 8796
 450+ 8796 9A 87        	defw Entidad_1
 451+ 8798 AA 87        	defw Entidad_2
 452+ 879A
 453+ 879A              ;	BADSAT, (Satélite malvado).
 454+ 879A
 455+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 879C 04           	db %00000100									; (Attr).
 457+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 87A3 01           	db 1											; (Cuad_objeto).
 461+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 87A8 1C 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 87AA
 464+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 87AC 02           	db %00000010									; (Attr).
 466+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 87B3 01           	db 1											; (Cuad_objeto).
 470+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 87B8 1C 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 87BA
# file closed: Cajas_y_disparos.asm
  92  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC D0 87        	defw Nivel_2
   7+ 87BE DD 87        	defw Nivel_3
   8+ 87C0 ED 87        	defw Nivel_4
   9+ 87C2 FF 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1
  19+ 87CD 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 87D5 01 02
  22+ 87D7 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87DB 01 02
  23+ 87DD 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 03 01 01 01  	db 3,1,1,1,1
  26+ 87EC 01
  27+ 87ED 11           Nivel_4 db 17									; Nº de entidades.
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 04 01 01 01  	db 4,1,1,1,1
  30+ 87FC 01
  31+ 87FD 02 03        	db 2,3
  32+ 87FF 14           Nivel_5 db 20									; Nº de entidades.
  33+ 8800 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  35+ 880E 01
  36+ 880F 05 01 01 01  	db 5,1,1,1,1
  36+ 8813 01
  37+ 8814
  38+ 8814              ;---------------------------------------------------------------------------------------------------------------
  39+ 8814              ;
  40+ 8814              ;   3/9/23
  41+ 8814              ;
  42+ 8814              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8814              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8814              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8814              ;	_en la caja DRAW correspondiente.
  46+ 8814              ;
  47+ 8814              ;	MODIFICA: HL,DE y A.
  48+ 8814              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8814
  50+ 8814              Inicializa_Punteros_de_nivel
  51+ 8814
  52+ 8814 21 BA 87     	ld hl,Indice_de_niveles
  53+ 8817 22 61 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 881A CD 8C 8C     	call Extrae_address
  55+ 881D 7E           	ld a,(hl)
  56+ 881E 32 10 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  57+ 8821 23           	inc hl
  58+ 8822 22 63 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  59+ 8825 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  60+ 8826
  61+ 8826              ;---------------------------------------------------------------------------------------------------------------
  62+ 8826              ;
  63+ 8826              ;   13/5/23
  64+ 8826              ;
  65+ 8826              ;	Destruye A,BC,HL,DE
  66+ 8826
  67+ 8826              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8826              ;	_del juego.
  69+ 8826
  70+ 8826              Prepara_cajas
  71+ 8826
  72+ 8826              ; Preparamos los punteros de las cajas.
  73+ 8826
  74+ 8826 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8829 CD 8C 8C     	call Extrae_address
  76+ 882C CD 69 88     	call Avanza_caja
  77+ 882F
  78+ 882F CD AD 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8832
  80+ 8832 2A 63 89     	ld hl,(Datos_de_nivel)
  81+ 8835
  82+ 8835              ; HL está en los datos del nivel correspondiente.
  83+ 8835              ; B actuará como contador de cajas.
  84+ 8835
  85+ 8835 C5           1 push bc
  86+ 8836
  87+ 8836 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8837 CD 5A 88     	call PreparaBC
  89+ 883A
  90+ 883A 21 96 87     	ld hl,Indice_de_entidades
  91+ 883D CD 62 88     	call SBC_HL_con_BC_y_Extrae
  92+ 8840 22 16 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8843
  94+ 8843 CD 73 88     	call Datos_de_entidad_a_caja
  95+ 8846
  96+ 8846 2A 0E 89     	ld hl,(Indice_restore_caja)
  97+ 8849 CD 8C 8C     	call Extrae_address
  98+ 884C CD 69 88     	call Avanza_caja
  99+ 884F
 100+ 884F 2A 63 89     	ld hl,(Datos_de_nivel)
 101+ 8852 23           	inc hl
 102+ 8853 22 63 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8856
 104+ 8856 C1           	pop bc
 105+ 8857 10 DC        	djnz 1B
 106+ 8859 C9           	ret
 107+ 885A
 108+ 885A CB 27        PreparaBC sla a
 109+ 885C D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 885E 4F           	ld c,a
 111+ 885F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8861 C9           	ret
 113+ 8862
 114+ 8862 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8863 ED 4A        	adc hl,bc
 116+ 8865 CD 8C 8C     	call Extrae_address
 117+ 8868 C9           	ret
 118+ 8869
 119+ 8869 22 0A 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 886C 13           	inc de
 121+ 886D 13           	inc de
 122+ 886E EB           	ex de,hl
 123+ 886F 22 0E 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8872 C9           	ret
 125+ 8873
 126+ 8873              Datos_de_entidad_a_caja
 127+ 8873
 128+ 8873              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8873
 130+ 8873
 131+ 8873 ED 5B 0A 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8877
 133+ 8877 01 02 00     	ld bc,2
 134+ 887A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 887C
 136+ 887C 01 07 00     	ld bc,7
 137+ 887F CD A7 88     	call Situa_DE
 138+ 8882
 139+ 8882 01 05 00     	ld bc,5
 140+ 8885 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8887
 142+ 8887 01 04 00     	ld bc,4
 143+ 888A CD A7 88     	call Situa_DE
 144+ 888D
 145+ 888D 01 07 00     	ld bc,7
 146+ 8890 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8892
 148+ 8892 01 12 00     	ld bc,18
 149+ 8895 CD A7 88     	call Situa_DE
 150+ 8898
 151+ 8898 01 02 00     	ld bc,2
 152+ 889B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 889D
 154+ 889D              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 889D              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 889D
 157+ 889D 01 0F 00     	ld bc,15									; *****
 158+ 88A0 CD A7 88     	call Situa_DE
 159+ 88A3
 160+ 88A3 3E 03        	ld a,3
 161+ 88A5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 88A6
 163+ 88A6 C9           	ret
 164+ 88A7
 165+ 88A7 EB           Situa_DE ex de,hl
 166+ 88A8 A7           	and a
 167+ 88A9 ED 4A        	adc hl,bc
 168+ 88AB EB           	ex de,hl
 169+ 88AC C9           	ret
 170+ 88AD
 171+ 88AD              ;---------------------------------------------------------------------------------------------------------------
 172+ 88AD              ;
 173+ 88AD              ;	21/5/23
 174+ 88AD              ;
 175+ 88AD              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 88AD              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 88AD              ;
 178+ 88AD              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 88AD              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 88AD              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 88AD              ;
 182+ 88AD              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 88AD              ;	MODIFICA: A y B.
 184+ 88AD              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 88AD
 186+ 88AD              Admin_num_entidades
 187+ 88AD
 188+ 88AD              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 88AD
 190+ 88AD 3A 10 89     	ld a,(Numero_de_entidades)
 191+ 88B0 A7           	and a
 192+ 88B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 88B1              ;	jr z,$
 194+ 88B1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 88B1
 196+ 88B1 20 03        	jr nz,3F
 197+ 88B3
 198+ 88B3              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 88B3
 200+ 88B3 CD 14 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 88B6
 202+ 88B6 3A 10 89     3 ld a,(Numero_de_entidades)
 203+ 88B9 FE 0A        	cp 10
 204+ 88BB 38 08        	jr c,1F
 205+ 88BD
 206+ 88BD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 88BD              ; Actualizamos variables.
 208+ 88BD
 209+ 88BD 3E 0A        	ld a,10
 210+ 88BF 32 11 89     	ld (Numero_parcial_de_entidades),a
 211+ 88C2 47           	ld b,a
 212+ 88C3 18 04        	jr 2F
 213+ 88C5
 214+ 88C5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 88C5              ; (Numero_de_entidades)="0".
 216+ 88C5
 217+ 88C5 32 11 89     1 ld (Numero_parcial_de_entidades),a
 218+ 88C8 47           	ld b,a
 219+ 88C9 C9           2 ret
# file closed: Niveles.asm
  93  88CA
  94  88CA              ; ******************************************************************************************************************************************************************************************
  95  88CA              ; Constantes.
  96  88CA              ; ******************************************************************************************************************************************************************************************
  97  88CA              ;
  98  88CA              ; 10/11/23
  99  88CA
 100  88CA              ;
 101  88CA              ; Constantes generales.
 102  88CA              ;
 103  88CA
 104  88CA              Sprite_vacio equ $f000
 105  88CA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 106  88CA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 107  88CA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 108  88CA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 109  88CA
 110  88CA              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 111  88CA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 112  88CA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 113  88CA              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 114  88CA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 115  88CA              ;
 116  88CA              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 117  88CA              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 118  88CA              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 119  88CA              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 120  88CA              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 121  88CA              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 122  88CA
 123  88CA              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 124  88CA              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 125  88CA
 126  88CA
 127  88CA
 128  88CA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 129  88CA
 130  88CA              ; ******************************************************************************************************************************************************************************************
 131  88CA              ; Variables.
 132  88CA              ; ******************************************************************************************************************************************************************************************
 133  88CA              ;
 134  88CA              ; 10/11//23
 135  88CA              ;
 136  88CA              ; Variables de DRAW. (Motor principal).
 137  88CA              ;
 138  88CA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 139  88CA
 140  88CA 00           Filas db 0												; Filas. [DRAW]
 141  88CB 00           Columns db 0  											; Nº de columnas. [DRAW]
 142  88CC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 143  88CE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 144  88D0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 145  88D1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 146  88D2
 147  88D2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 148  88D2
 149  88D2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 150  88D3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 151  88D3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 152  88D3 00           Attr db 0												; Atributos de la entidad:
 153  88D4
 154  88D4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 155  88D4              ;
 156  88D4              ;	COLORES: 0 ..... NEGRO
 157  88D4              ;    		 1 ..... AZUL
 158  88D4              ; 			 2 ..... ROJO
 159  88D4              ;			 3 ..... MAGENTA
 160  88D4              ; 			 4 ..... VERDE
 161  88D4              ; 			 5 ..... CIAN
 162  88D4              ;			 6 ..... AMARILLO
 163  88D4              ; 			 7 ..... BLANCO
 164  88D4
 165  88D4 00 00        Indice_Sprite_der defw 0
 166  88D6 00 00        Indice_Sprite_izq defw 0
 167  88D8 00 00        Puntero_DESPLZ_der defw 0
 168  88DA 00 00        Puntero_DESPLZ_izq defw 0
 169  88DC
 170  88DC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 171  88DE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 172  88DF
 173  88DF              ; Variables de objeto. (Características).
 174  88DF
 175  88DF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 176  88E0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 177  88E1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 178  88E2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 179  88E3
 180  88E3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 181  88E4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 182  88E4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 183  88E4 00 00 00...  Variables_de_borrado ds 6
 184  88EA
 185  88EA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 186  88EC 00 00        	defw 0
 187  88EE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 188  88F0 00 00 00 00  	db 0,0,0,0
 189  88F4
 190  88F4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 191  88F4
 192  88F4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 193  88F5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 194  88F5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 195  88F5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 196  88F5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 197  88F5              ;
 198  88F5              ; 														DESCRIPCIÖN:
 199  88F5              ;
 200  88F5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 201  88F5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 202  88F5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 203  88F5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 204  88F5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 205  88F5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 206  88F5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 207  88F5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 208  88F5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 209  88F5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 210  88F5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 211  88F5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 212  88F5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 213  88F5              ;
 214  88F5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 215  88F5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 216  88F5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 217  88F5
 218  88F5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 219  88F5
 220  88F5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 221  88F7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 222  88F9 00 00        Puntero_indice_mov_bucle defw 0							;
 223  88FB              ;
 224  88FB              ;
 225  88FB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 226  88FC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 227  88FC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 228  88FC 00           Incrementa_puntero_backup db 0
 229  88FD 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 230  88FE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 231  88FE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 232  88FF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 233  8900 00           Cola_de_desplazamiento db 0								; Este byte indica:
 234  8901              ;
 235  8901              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 236  8901              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 237  8901              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 238  8901              ;
 239  8901              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 240  8901              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 241  8901              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 242  8901              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 243  8901              ;
 244  8901              ;														;	"$ff" ..... Bucle infinito de repetición.
 245  8901              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 246  8901              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 247  8901
 248  8901
 249  8901              ; Variables de funcionamiento. [DRAW].
 250  8901
 251  8901 00           Columnas db 0
 252  8902 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 253  8904              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 254  8904 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 255  8905
 256  8905              ; variables de control general.
 257  8905
 258  8905 00           Ctrl_2 db 0
 259  8906              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 260  8906              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 261  8906              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 262  8906              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 263  8906              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 264  8906              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 265  8906              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 266  8906              ;
 267  8906              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 268  8906              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 269  8906              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 270  8906              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 271  8906              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 272  8906
 273  8906 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 274  8907
 275  8907              ;! 61 Bytes por entidad.
 276  8907
 277  8907              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 278  8907              ;					         		---------;      ;---------
 279  8907
 280  8907
 281  8907              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 282  8907
 283  8907 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 284  8908
 285  8908              ;														DESCRIPCIÓN:
 286  8908              ;
 287  8908              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 288  8908              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 289  8908              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 290  8908              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 291  8908              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 292  8908              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 293  8908
 294  8908              ;														BIT 3, Recarga de nueva oleada.
 295  8908              ;														BIT 4, Recarga de nueva oleada.
 296  8908              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 297  8908              ;														BIT 6, **** Frame completo.
 298  8908              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 299  8908
 300  8908 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 301  890A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 302  890A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 303  890A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 304  890A
 305  890A              ; Gestión de ENTIDADES y CAJAS.
 306  890A
 307  890A 00 00        Puntero_store_caja defw 0
 308  890C 00 00        Puntero_restore_caja defw 0
 309  890E 00 00        Indice_restore_caja defw 0
 310  8910 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 311  8911 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 312  8912 00           Entidades_en_curso db 0									; ..... ..... .....
 313  8913 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 314  8914              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 315  8914              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 316  8914              ;														; _ (Numero_de_malotes)="0".
 317  8914 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 318  8916 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 319  8918              ;														; _ puntero (Indice_entidades).
 320  8918
 321  8918
 322  8918              ;---------------------------------------------------------------------------------------------------------------
 323  8918              ;
 324  8918              ;	8/11/23
 325  8918              ;
 326  8918              ;	Álbumes.
 327  8918
 328  8918 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 329  891A              ;														; _variable para almacenar lo posición del puntero_
 330  891A              ; 														; _de pila, SP.
 331  891A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 332  891C              ;														; La utiliza la rutina [Extrae_foto_registros].
 333  891C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 334  891E 00 00        Stack_snapshot defw 0
 335  8920 00 00        Stack_snapshot_disparos defw 0
 336  8922
 337  8922 00 00        End_Snapshot defw 0
 338  8924              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 339  8924 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 340  8926              ;														; _el snapshot de los registros del siguiente disparo.
 341  8926              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 342  8926 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 343  8928 00 00        End_Snapshot_1 defw 0
 344  892A 00 00        End_Snapshot_disparos_1 defw 0
 345  892C 00 00        End_Snapshot_2 defw 0
 346  892E 00 00        End_Snapshot_disparos_2 defw 0
 347  8930 00 00        End_Snapshot_3 defw 0
 348  8932 00 00        End_Snapshot_disparos_3 defw 0
 349  8934
 350  8934 00 00        Puntero_indice_album_de_fotos defw 0
 351  8936 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 352  8938
 353  8938 00 00        Puntero_indice_End_Snapshot defw 0
 354  893A 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 355  893C 00 00        Puntero_de_End_Snapshot defw 0
 356  893E 00 00        Puntero_de_End_Snapshot_disparos defw 0
 357  8940
 358  8940 F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 359  8941              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 360  8941
 361  8941 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 362  8942              ;
 363  8942              ;														DESCRIPCIÓN:
 364  8942              ;
 365  8942              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 366  8942              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 367  8942              ;																_ álbum. También indica que "hay recolocación" antes de ejecutar la "cascada de álbumes". El tipo de recolocación lo definen_
 368  8942              ;																_ los bits 1 y 2.
 369  8942              ;														BIT 1, Indica que la recolocación de álbumes será de Album3_a_Album2, (siempre que Álbum_3 contenga un FRAME completo).
 370  8942              ;														BIT 2, Indica que la recolocación de álbumes será de Album2_a_Album1, (siempre que álbum_2 contenga un FRAME completo).
 371  8942              ;																Nota: En el caso de que al hacer la recolocación, nos encontremos con que el álbum donante sigue incompleto, saltaremos_
 372  8942              ;																	_ a ejecutar la "Casacada" de álbumes para limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 373  8942              ;														BIT 3, Existe DOBLE RECOLOCACIÓN. Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Siempre que Album_de_fotos_3 contenga un FRAME completo,_
 374  8942              ;																_ pasaremos Album3_a_Album2 y Album2_a_Album1. También modificaremos los punteros y los situaremos al comienzo de Album_de_fotos_2.
 375  8942              ;																_ En el caso de que al hacer la DOBLE RECOLOCACIÓN, Album_de_fotos_3 esté incompleto, saltaremos a ejecutar la "Casacada" de álbumes para_
 376  8942              ;																_ limpiar Album_de_fotos y posteriormente salir para seguir completando el FRAME incompleto.
 377  8942              ;														BIT 4, Buffer vacío !!!. Album_de_fotos está vacío y no podemos volcar Album_de_fotos_1. Está incompleto.
 378  8942              ;																_ El siguiente FRAME no se imprime, NO HAY CUADRO.
 379  8942
 380  8942              ;---------------------------------------------------------------------------------------------------------------
 381  8942
 382  8942              ; Gestión de Disparos.
 383  8942
 384  8942 00           Numero_de_disparotes db 0
 385  8943 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 386  8945 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 387  8947 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 388  8948              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 389  8948              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 390  8948 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 391  894A              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 392  894A              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 393  894A              ;														; _produzca colisión.
 394  894A 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 395  894C              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 396  894C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 397  894F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 398  894F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 399  8952              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 400  8952 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 401  8954 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 402  8955
 403  8955              ;---------------------------------------------------------------------------------------------------------------
 404  8955
 405  8955              ; Relojes y temporizaciones.
 406  8955
 407  8955 00           Contador_de_frames db 0
 408  8956 00           Contador_de_frames_2 db 0
 409  8957
 410  8957 04           Clock_explosion db 4
 411  8958 1E           Clock_Entidades_en_curso db 30
 412  8959 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 413  895A              ;														; Repite la oleada de entidades.
 414  895A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 415  895B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 416  895C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 417  895D
 418  895D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 419  895E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 420  895F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 421  8960
 422  8960              ;---------------------------------------------------------------------------------------------------------------
 423  8960
 424  8960              ; Gestión de NIVELES.
 425  8960
 426  8960 00           Nivel db 0												; Nivel actual del juego.
 427  8961 00 00        Puntero_indice_NIVELES defw 0
 428  8963 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 429  8965              ; 														; _ que definen el NIVEL.
 430  8965              ; Y todo comienza aquí .....
 431  8965              ;
 432  8965              ; Rutina principal *************************************************************************************************************************************************************************
 433  8965              ;
 434  8965              ;	14/11/22
 435  8965
 436  8965              START
 437  8965
 438  8965 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 439  8968 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 440  896A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 441  896C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 442  896E F3           	DI
 443  896F
 444  896F 3E 07        	ld a,%00000111
 445  8971 CD 49 99     	call Cls
 446  8974
 447  8974 CD 65 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 448  8977
 449  8977              ; INICIALIZACIÓN.
 450  8977
 451  8977 CD 14 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 452  897A CD 26 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 453  897D CD 8A 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 454  8980              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 455  8980 CD A0 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 456  8983              ;													     ; _ malotes antes de guardar ninguna foto.
 457  8983              ; ----------
 458  8983
 459  8983 CD 15 8D     	call Restore_entidad
 460  8986
 461  8986 21 11 89     	ld hl,Numero_parcial_de_entidades
 462  8989 46           	ld b,(hl)
 463  898A 04           	inc b
 464  898B 05           	dec b
 465  898C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 466  898E
 467  898E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 468  898E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 469  898E              ;	Pintamos el resto de entidades:
 470  898E
 471  898E              ;	INICIA ENTIDADES !!!!!
 472  898E
 473  898E C5           1 push bc  												; Guardo el contador de entidades.
 474  898F CD 5A 8B     	call Inicia_entidad
 475  8992 C1           	pop bc
 476  8993 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 477  8995
 478  8995              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 479  8995              ; (Esto se dá cuando se inicia una nueva oleada).
 480  8995
 481  8995 3A 07 89     	ld a,(Ctrl_1)
 482  8998 CB 5F        	bit 3,a
 483  899A 20 00        	jr nz,5F											; Loop
 484  899C
 485  899C              ; 	INICIA AMADEUS !!!!!
 486  899C
 487  899C              3
 488  899C
 489  899C              ;	call Restore_Amadeus
 490  899C              ;	call Inicia_Puntero_objeto
 491  899C              ;	call Draw
 492  899C              ;	call Guarda_foto_registros
 493  899C              ;	call Guarda_datos_de_borrado_Amadeus
 494  899C
 495  899C              ;	ld de,Amadeus_db
 496  899C              ;	call Store_Amadeus
 497  899C
 498  899C              ; 	INICIA DISPAROS !!!!!
 499  899C
 500  899C              ;	call Inicia_Puntero_Disparo_Entidades
 501  899C              ;	call Inicia_Puntero_Disparo_Amadeus
 502  899C
 503  899C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 504  899C
 505  899C CD 8A 8B     5 call Inicia_punteros_de_cajas
 506  899F CD 15 8D     	call Restore_entidad
 507  89A2
 508  89A2 3A 07 89     	ld a,(Ctrl_1)
 509  89A5 CB 5F        	bit 3,a
 510  89A7 28 07        	jr z,6F
 511  89A9
 512  89A9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 513  89A9
 514  89A9 21 07 89     	ld hl,Ctrl_1
 515  89AC CB 9E        	res 3,(hl)
 516  89AE 18 03        	jr Main
 517  89B0
 518  89B0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 519  89B0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 520  89B0              ; _ para situarnos en el siguiente album.
 521  89B0
 522  89B0 CD D1 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 523  89B3
 524  89B3
 525  89B3              ; ------------------------------------
 526  89B3
 527  89B3              Main
 528  89B3              ;
 529  89B3              ;	12/11/23
 530  89B3
 531  89B3              ; Aparece nueva entidad ???
 532  89B3
 533  89B3              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 534  89B3              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 535  89B3              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 536  89B3              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 537  89B3              ;														; _un 2º bloque.
 538  89B3
 539  89B3 3A 58 89     	ld a,(Clock_Entidades_en_curso)
 540  89B6 47           	ld b,a
 541  89B7 3A 55 89     	ld a,(Contador_de_frames)
 542  89BA B8           	cp b
 543  89BB 28 07        	jr z,21F
 544  89BD
 545  89BD              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 546  89BD              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 547  89BD              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 548  89BD              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 549  89BD
 550  89BD 3C           	inc a
 551  89BE B8           	cp b
 552  89BF 20 1B        	jr nz,13F
 553  89C1
 554  89C1 32 55 89     	ld (Contador_de_frames),a
 555  89C4
 556  89C4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 557  89C4              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 558  89C4
 559  89C4 3A 11 89     21 ld a,(Numero_parcial_de_entidades)
 560  89C7 47           	ld b,a
 561  89C8 3A 12 89     	ld a,(Entidades_en_curso)
 562  89CB B8           	cp b
 563  89CC 28 0E        	jr z,13F
 564  89CE 30 0C        	jr nc,13F
 565  89D0
 566  89D0              ; --- --- --- --- ---
 567  89D0
 568  89D0 3C           	inc a
 569  89D1 32 12 89     	ld (Entidades_en_curso),a
 570  89D4
 571  89D4              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 572  89D4
 573  89D4 3A 58 89     	ld a,(Clock_Entidades_en_curso)
 574  89D7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 575  89D7              ;! _ IMPREDECIBLE !!!!
 576  89D7 C6 32        	add 50
 577  89D9 32 58 89     	ld (Clock_Entidades_en_curso),a
 578  89DC
 579  89DC              ; -------------------------------------------------------------------------------------------------------------
 580  89DC
 581  89DC              ; Habilita disparos.
 582  89DC
 583  89DC 21 5A 89     13 ld hl,Disparo_Amadeus
 584  89DF 11 5C 89     	ld de,CLOCK_repone_disparo_Amadeus
 585  89E2 CD 0D 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 586  89E5
 587  89E5 21 5D 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 588  89E8 11 5F 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 589  89EB CD 0D 9D     	call Habilita_disparos
 590  89EE
 591  89EE              ; COLISIONES.
 592  89EE
 593  89EE CD 1E 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 594  89F1
 595  89F1              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 596  89F1              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 597  89F1              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 598  89F1
 599  89F1 AF           	xor a
 600  89F2 32 47 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 601  89F5
 602  89F5 CD 8A 8B     	call Inicia_punteros_de_cajas
 603  89F8 CD 15 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 604  89FB              ; 														; _ en DRAW.
 605  89FB 3A CA 88     	ld a,(Filas)
 606  89FE A7           	and a
 607  89FF 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 608  8A01 CD 27 8D     	call Incrementa_punteros_de_cajas
 609  8A04 18 F2        	jr 12B
 610  8A06
 611  8A06              ; ---------------------------------------------------------------------------------------
 612  8A06
 613  8A06 3A 11 89     10 ld a,(Numero_parcial_de_entidades)
 614  8A09 47               ld b,a
 615  8A0A A7           	and a
 616  8A0B 20 14        	jr nz,11F
 617  8A0D
 618  8A0D 21 07 89     	ld hl,Ctrl_1
 619  8A10 CB 66        	bit 4,(hl)
 620  8A12 C2 9F 8A     	jp nz,16F
 621  8A15
 622  8A15              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 623  8A15
 624  8A15 21 07 89     	ld hl,Ctrl_1
 625  8A18 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 626  8A1A
 627  8A1A 3A 55 89     	ld a,(Contador_de_frames)
 628  8A1D 3C           	inc a
 629  8A1E 32 59 89     	ld (Activa_recarga_cajas),a
 630  8A21
 631  8A21              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 632  8A21
 633  8A21 3A 12 89     11 ld a,(Entidades_en_curso)
 634  8A24 A7           	and a
 635  8A25 CA 9F 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 636  8A28 47           	ld b,a												; No hay entidades que gestionar.
 637  8A29
 638  8A29              ; Código que ejecutamos con cada entidad:
 639  8A29              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 640  8A29
 641  8A29 C5           15 push bc 												; Nº de entidades en curso.
 642  8A2A
 643  8A2A              ; Impacto ???
 644  8A2A
 645  8A2A 3A E3 88     	ld a,(Impacto)
 646  8A2D A7           	and a
 647  8A2E 28 32        	jr z,8F
 648  8A30
 649  8A30              ; Hay Impacto en esta entidad.
 650  8A30
 651  8A30 21 57 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 652  8A33 35           	dec (hl)
 653  8A34 20 63        	jr nz,17F
 654  8A36
 655  8A36              ;! Velocidad de la animación de la explosión.
 656  8A36
 657  8A36 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 658  8A38              ;														; _,(velocidad de la explosión).
 659  8A38
 660  8A38              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 661  8A38 18 FE        	jr $
 662  8A3A
 663  8A3A CD D6 8D     	call Repone_datos_de_borrado
 664  8A3D CD 2E 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 665  8A40
 666  8A40
 667  8A40              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 668  8A40
 669  8A40 3A 05 89     	ld a,(Ctrl_2)
 670  8A43 CB 4F        	bit 1,a
 671  8A45 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 672  8A47
 673  8A47              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 674  8A47
 675  8A47 3A D2 88     	ld a,(CTRL_DESPLZ)
 676  8A4A A7           	and a
 677  8A4B 20 08        	jr nz,18F
 678  8A4D
 679  8A4D 21 84 84     	ld hl,Indice_Explosion_2x2-2
 680  8A50 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 681  8A53 18 06        	jr 19F
 682  8A55
 683  8A55 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 684  8A58 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 685  8A5B
 686  8A5B 21 05 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 687  8A5E CB CE        	set 1,(hl)
 688  8A60 18 22        	jr 7F
 689  8A62
 690  8A62              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 691  8A62              ; _con las coordenadas de la entidad almacenada en DRAW.
 692  8A62
 693  8A62 3A 07 89     8 ld a,(Ctrl_1)
 694  8A65 CB 57        	bit 2,a
 695  8A67 28 1B        	jr z,7F
 696  8A69
 697  8A69 2A 4A 89     	ld hl,(Coordenadas_disparo_certero)
 698  8A6C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 699  8A6D              ;														; E contiene la coordenada_X del disparo.
 700  8A6D 2A D0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 701  8A70              ;														; H FILA, (Coordenada_y de la entidad).
 702  8A70 A7           	and a
 703  8A71 ED 52        	sbc hl,de
 704  8A73
 705  8A73 CD 55 92     	call Determina_resultado_comparativa
 706  8A76
 707  8A76 78           	ld a,b
 708  8A77 A7           	and a
 709  8A78 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 710  8A7A
 711  8A7A              ; ----- ----- -----
 712  8A7A
 713  8A7A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 714  8A7C 32 E3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 715  8A7F
 716  8A7F 21 07 89     	ld hl,Ctrl_1
 717  8A82 CB 96        	res 2,(hl)
 718  8A84
 719  8A84 CD F6 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 720  8A87
 721  8A87 3A F4 88     	ld a,(Ctrl_0)
 722  8A8A CB 67        	bit 4,a
 723  8A8C 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 724  8A8E
 725  8A8E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 726  8A8E              ; [[[
 727  8A8E CD B0 8D     	call Detecta_disparo_entidad
 728  8A91              ; ]]]
 729  8A91 CD 6B 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 730  8A94              ;	call Guarda_datos_de_borrado
 731  8A94
 732  8A94 21 F4 88     	ld hl,Ctrl_0
 733  8A97 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 734  8A99
 735  8A99 CD DA 8C     17 call Store_Restore_cajas
 736  8A9C
 737  8A9C C1           	pop bc
 738  8A9D 10 8A        	djnz 15B
 739  8A9F
 740  8A9F              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 741  8A9F              ; Hemos gestionado todas las unidades.
 742  8A9F              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 743  8A9F
 744  8A9F              ;	ld hl,Ctrl_1
 745  8A9F              ;	res 2,(hl)
 746  8A9F
 747  8A9F CD D1 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 748  8AA2              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 749  8AA2
 750  8AA2              ; ----------------------------------------
 751  8AA2
 752  8AA2 3A 07 89     	ld a,(Ctrl_1) 										; Existe Loop?
 753  8AA5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 754  8AA7 CA B3 89     	jp z,Main
 755  8AAA
 756  8AAA              ; RECARGA DE NUEVA OLEADA.
 757  8AAA
 758  8AAA 3A 55 89     	ld a,(Contador_de_frames)
 759  8AAD 47           	ld b,a
 760  8AAE 3A 59 89     	ld a,(Activa_recarga_cajas)
 761  8AB1 B8           	cp b
 762  8AB2 28 08        	jr z,20F
 763  8AB4
 764  8AB4 21 07 89     	ld hl,Ctrl_1
 765  8AB7 CB E6        	set 4,(hl)
 766  8AB9 C3 B3 89     	jp Main
 767  8ABC
 768  8ABC 21 07 89     20 ld hl,Ctrl_1
 769  8ABF CB A6        	res 4,(hl)
 770  8AC1
 771  8AC1 3A 55 89     	ld a,(Contador_de_frames)
 772  8AC4
 773  8AC4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 774  8AC4              ;! _ IMPREDECIBLE !!!!
 775  8AC4
 776  8AC4 C6 0A        	add 10
 777  8AC6 32 58 89     	ld (Clock_Entidades_en_curso),a
 778  8AC9
 779  8AC9 C3 7A 89     	jp 4B
 780  8ACC
 781  8ACC C9           	ret
 782  8ACD
 783  8ACD              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 784  8ACD
 785  8ACD              Gestiona_Amadeus
 786  8ACD
 787  8ACD 3E 04            ld a,4
 788  8ACF D3 FE        	out ($fe),a											; Azul.
 789  8AD1
 790  8AD1 CD 3C 8D     	call Restore_Amadeus
 791  8AD4
 792  8AD4              ;! Activa/desactiva impacto con Amadeus.
 793  8AD4
 794  8AD4 3A E3 88     	ld a,(Impacto)
 795  8AD7 A7           	and a
 796  8AD8 20 FE        	jr nz,$
 797  8ADA
 798  8ADA CD 47 8B     	call Mov_Amadeus
 799  8ADD
 800  8ADD 3A F4 88     	ld a,(Ctrl_0)
 801  8AE0 CB 67        	bit 4,a
 802  8AE2 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 803  8AE4
 804  8AE4 CD 6B 8B     	call Guarda_foto_entidad_a_pintar
 805  8AE7 CD B6 8D     	call Guarda_datos_de_borrado_Amadeus
 806  8AEA
 807  8AEA 21 F4 88     14 ld hl,Ctrl_0
 808  8AED CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 809  8AEF
 810  8AEF 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 811  8AF2 CD 4E 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 812  8AF5
 813  8AF5              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 814  8AF5
 815  8AF5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 816  8AF5
 817  8AF5              ;	call Calcula_numero_de_disparotes
 818  8AF5
 819  8AF5 C9           	ret
 820  8AF6
 821  8AF6              ; --------------------------------------------------------------------------------------------------------------
 822  8AF6              ;
 823  8AF6              ;	27/05/23
 824  8AF6
 825  8AF6              Mov_obj
 826  8AF6
 827  8AF6 3A 05 89     	ld a,(Ctrl_2)
 828  8AF9 CB 4F        	bit 1,a
 829  8AFB 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 830  8AFD
 831  8AFD              ; Explosión:
 832  8AFD
 833  8AFD 3A 06 89     	ld a,(Frames_explosion)
 834  8B00 A7           	and a
 835  8B01 20 11        	jr nz,4F
 836  8B03
 837  8B03              ; Una alimaña menos!!!!!!!!!1
 838  8B03
 839  8B03 CD 57 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 840  8B06 21 11 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 841  8B09 35           	dec (hl)
 842  8B0A 21 12 89     	ld hl,Entidades_en_curso
 843  8B0D 35           	dec (hl)
 844  8B0E 21 10 89     	ld hl,Numero_de_entidades
 845  8B11 35           	dec (hl)
 846  8B12 18 32        	jr 3F
 847  8B14
 848  8B14              ; -----
 849  8B14
 850  8B14              ;	`Movemos´ la explosión.
 851  8B14
 852  8B14 2A D8 88     4 ld hl,(Puntero_DESPLZ_der)
 853  8B17 23           	inc hl
 854  8B18 23           	inc hl
 855  8B19 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 856  8B1C CD 8C 8C     	call Extrae_address
 857  8B1F 22 CE 88     	ld (Puntero_objeto),hl
 858  8B22
 859  8B22 21 06 89     	ld hl,Frames_explosion
 860  8B25 35           	dec (hl)
 861  8B26
 862  8B26              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 863  8B26 18 1E        	jr 3F
 864  8B28
 865  8B28 AF           2 xor a
 866  8B29 32 F4 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 867  8B2C
 868  8B2C              ; Movemos Entidades malignas.
 869  8B2C
 870  8B2C CD B8 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 871  8B2F
 872  8B2F 3A F4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 873  8B32 CB 67        	bit 4,a
 874  8B34 C8           	ret z
 875  8B35
 876  8B35              ; Ha habido desplazamiento de la entidad maligna.
 877  8B35              ; Ha llegado a zona de AMADEUS ???
 878  8B35
 879  8B35 3A D1 88     	ld a,(Coordenada_y)
 880  8B38 FE 14        	cp $14
 881  8B3A D4 E3 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 882  8B3D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 883  8B3D              ; ---------
 884  8B3D
 885  8B3D CD 72 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 886  8B40 CD D6 8D     	call Repone_datos_de_borrado
 887  8B43 CD 2E 8C     	call Limpia_Variables_de_borrado
 888  8B46
 889  8B46 C9           3 ret													; _de la misma.
 890  8B47
 891  8B47              ; --------------------------------------------------------------------------------------------------------------
 892  8B47              ;
 893  8B47              ;	29/1/23
 894  8B47
 895  8B47              Mov_Amadeus
 896  8B47
 897  8B47 CD 79 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 898  8B4A
 899  8B4A 3A F4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 900  8B4D CB 67        	bit 4,a
 901  8B4F C8           	ret z
 902  8B50
 903  8B50              ; ---------
 904  8B50
 905  8B50 CD 72 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 906  8B53 CD C6 8D     	call Repone_datos_de_borrado_Amadeus
 907  8B56 CD 2E 8C     	call Limpia_Variables_de_borrado
 908  8B59
 909  8B59 C9           	ret
 910  8B5A
 911  8B5A              ; -----------------------------------------------------------------------------------
 912  8B5A              ;
 913  8B5A              ;	01/11/23
 914  8B5A
 915  8B5A CD 92 8C     Inicia_entidad	call Inicia_Puntero_objeto
 916  8B5D CD 5D 99     	call Recompone_posicion_inicio
 917  8B60 CD 3C 93     	call Draw
 918  8B63 CD A0 7F     	call Guarda_foto_registros
 919  8B66 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 920  8B67              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 921  8B67 CD DA 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 922  8B6A C9           	ret
 923  8B6B
 924  8B6B              ; --------------------------------------------------------------------------------------------------------------
 925  8B6B              ;
 926  8B6B              ;	31/08/23
 927  8B6B              ;
 928  8B6B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 929  8B6B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 930  8B6B
 931  8B6B              Guarda_foto_entidad_a_pintar
 932  8B6B
 933  8B6B              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 934  8B6B
 935  8B6B CD 3C 93     	call Draw
 936  8B6E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 937  8B71 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 938  8B72
 939  8B72              ; --------------------------------------------------------------------------------------------------------------
 940  8B72              ;
 941  8B72              ;	19/9/23
 942  8B72
 943  8B72 21 CA 88     Prepara_var_pintado ld hl,Filas
 944  8B75 11 EA 88     	ld de,Variables_de_pintado
 945  8B78 01 08 00     	ld bc,8
 946  8B7B ED B0        	ldir
 947  8B7D C9           	ret
 948  8B7E
 949  8B7E              ; --------------------------------------------------------------------------------------------------------------
 950  8B7E
 951  8B7E 21 EA 88     Repone_pintar ld hl,Variables_de_pintado
 952  8B81 11 CA 88     	ld de,Filas
 953  8B84 01 08 00     	ld bc,8
 954  8B87 ED B0        	ldir
 955  8B89 C9           	ret
 956  8B8A
 957  8B8A              ; *************************************************************************************************************************************************************
 958  8B8A              ;
 959  8B8A              ; 8/1/23
 960  8B8A              ;
 961  8B8A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 962  8B8A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 963  8B8A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 964  8B8A
 965  8B8A              ; Destruye HL y DE !!!!!
 966  8B8A
 967  8B8A              Inicia_punteros_de_cajas
 968  8B8A
 969  8B8A 21 8C 85     	ld hl,Indice_de_cajas
 970  8B8D CD 8C 8C         call Extrae_address
 971  8B90 22 0A 89         ld (Puntero_store_caja),hl
 972  8B93 21 8E 85     	ld hl,Indice_de_cajas+2
 973  8B96 22 0E 89     	ld (Indice_restore_caja),hl
 974  8B99 CD 8C 8C     	call Extrae_address
 975  8B9C 22 0C 89     	ld (Puntero_restore_caja),hl
 976  8B9F C9               ret
 977  8BA0
 978  8BA0              ; ---------------------------------------------------------------
 979  8BA0              ;
 980  8BA0              ;	9/8/23
 981  8BA0              ;
 982  8BA0              ;	Inicialización y gestión de álbumes de fotos y cajas.
 983  8BA0
 984  8BA0              Inicia_punteros_de_albumes_y_malotes
 985  8BA0
 986  8BA0 21 EC 84     	ld hl,Indice_album_de_fotos
 987  8BA3 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
 988  8BA6 CD 8C 8C     	call Extrae_address
 989  8BA9 22 1E 89     	ld (Stack_snapshot),hl
 990  8BAC
 991  8BAC 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 992  8BAF 22 36 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 993  8BB2 CD 8C 8C     	call Extrae_address
 994  8BB5 22 20 89     	ld (Stack_snapshot_disparos),hl
 995  8BB8
 996  8BB8 21 FC 84     	ld hl,Indice_End_Snapshot
 997  8BBB 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
 998  8BBE CD 8C 8C     	call Extrae_address
 999  8BC1 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
1000  8BC4
1001  8BC4 21 04 85     	ld hl,Indice_End_Snapshot_disparos
1002  8BC7 22 3A 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
1003  8BCA CD 8C 8C     	call Extrae_address
1004  8BCD 22 3E 89     	ld (Puntero_de_End_Snapshot_disparos),hl
1005  8BD0
1006  8BD0 C9           	ret
1007  8BD1
1008  8BD1              ;	23/10/23
1009  8BD1
1010  8BD1              Avanza_puntero_de_album_de_fotos_de_entidades
1011  8BD1
1012  8BD1              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
1013  8BD1
1014  8BD1              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
1015  8BD1              ; Estamos en el último álbum del índice???.
1016  8BD1              ;
1017  8BD1 2A 34 89     	ld hl,(Puntero_indice_album_de_fotos)
1018  8BD4 01 F2 84     	ld bc,Indice_album_de_fotos+6
1019  8BD7 A7           	and a
1020  8BD8 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
1021  8BDA 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
1022  8BDC
1023  8BDC              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
1024  8BDC              ; Actualizamos (Semaforo).
1025  8BDC
1026  8BDC 21 40 89     	ld hl,Semaforo
1027  8BDF CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
1028  8BE1
1029  8BE1              ; Inicia con el buffer de video completo !!!
1030  8BE1
1031  8BE1 FB           	ei
1032  8BE2 76           	halt
1033  8BE3 C9           	ret
1034  8BE4
1035  8BE4 2A 34 89     1 ld hl,(Puntero_indice_album_de_fotos)
1036  8BE7 23           	inc hl
1037  8BE8 23           	inc hl
1038  8BE9 22 34 89     	ld (Puntero_indice_album_de_fotos),hl
1039  8BEC CD 8C 8C     	call Extrae_address
1040  8BEF 22 1E 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1041  8BF2
1042  8BF2 2A 38 89     	ld hl,(Puntero_indice_End_Snapshot)
1043  8BF5 23           	inc hl
1044  8BF6 23           	inc hl
1045  8BF7 22 38 89     	ld (Puntero_indice_End_Snapshot),hl
1046  8BFA CD 8C 8C     	call Extrae_address
1047  8BFD 22 3C 89     	ld (Puntero_de_End_Snapshot),hl
1048  8C00
1049  8C00 21 40 89     	ld hl,Semaforo
1050  8C03 CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1051  8C05
1052  8C05 C9           	ret
1053  8C06
1054  8C06              ; *************************************************************************************************************************************************************
1055  8C06              ;
1056  8C06              ; 8/1/23
1057  8C06              ;
1058  8C06              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1059  8C06
1060  8C06 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1061  8C09 22 43 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1062  8C0C C9           	ret
1063  8C0D 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1064  8C10 22 45 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1065  8C13 C9           	ret
1066  8C14
1067  8C14              ; -------------------------------------------------------------------------------------------------------------
1068  8C14              ;
1069  8C14              ; 21/9/23
1070  8C14              ;
1071  8C14
1072  8C14              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1073  8C14
1074  8C14              Limpia_album_Amadeus
1075  8C14
1076  8C14 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1077  8C17 7E           	ld a,(hl)
1078  8C18 A7           	and a
1079  8C19 C8           	ret z
1080  8C1A
1081  8C1A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1082  8C1D 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1083  8C20 01 0B 00     	ld bc,11
1084  8C23 AF           	xor a
1085  8C24 77           	ld (hl),a
1086  8C25 ED B0        	ldir
1087  8C27
1088  8C27 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1089  8C2A 22 26 89     	ld (End_Snapshot_Amadeus),hl
1090  8C2D
1091  8C2D C9           	ret
1092  8C2E
1093  8C2E 21 E4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1094  8C31 11 E5 88     	ld de,Variables_de_borrado+1
1095  8C34 01 05 00     	ld bc,5
1096  8C37 AF           	xor a
1097  8C38 77           	ld (hl),a
1098  8C39 ED B0        	ldir
1099  8C3B C9           	ret
1100  8C3C
1101  8C3C              ; -------------------------------------------------------------------------------------------------------------
1102  8C3C              ;
1103  8C3C              ; 8/9/23
1104  8C3C              ;
1105  8C3C
1106  8C3C              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1107  8C3C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1108  8C3C
1109  8C3C              Calcula_numero_de_malotes
1110  8C3C
1111  8C3C 21 00 70     	ld hl,Album_de_fotos
1112  8C3F EB           	ex de,hl
1113  8C40 2A 22 89     	ld hl,(End_Snapshot)
1114  8C43
1115  8C43 7C           	ld a,h
1116  8C44 A7           	and a
1117  8C45 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1118  8C47
1119  8C47 06 00        4 ld b,0
1120  8C49 7D           	ld a,l
1121  8C4A 93           	sub e
1122  8C4B 28 07        	jr z,1F
1123  8C4D
1124  8C4D              ; Nº de malotes no es "0".
1125  8C4D
1126  8C4D D6 06        2 sub 6
1127  8C4F 04           	inc b
1128  8C50 A7           	and a
1129  8C51 20 FA        	jr nz,2B
1130  8C53 78           	ld a,b
1131  8C54
1132  8C54 32 13 89     1 ld (Numero_de_malotes),a
1133  8C57 C9           	ret
1134  8C58
1135  8C58              ; -------------------------------------------------------------------------------------------------------------
1136  8C58              ;
1137  8C58              ; 8/9/23
1138  8C58              ;
1139  8C58
1140  8C58              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1141  8C58              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1142  8C58
1143  8C58              Calcula_malotes_Amadeus
1144  8C58
1145  8C58 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1146  8C5B EB           	ex de,hl
1147  8C5C 2A 26 89     	ld hl,(End_Snapshot_Amadeus)
1148  8C5F
1149  8C5F 7C           	ld a,h
1150  8C60 A7           	and a
1151  8C61 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1152  8C63
1153  8C63 06 00        	ld b,0
1154  8C65 7D           	ld a,l
1155  8C66 93           	sub e
1156  8C67 28 07        	jr z,1F
1157  8C69
1158  8C69              ; Nº de malotes no es "0".
1159  8C69
1160  8C69 D6 06        2 sub 6
1161  8C6B 04           	inc b
1162  8C6C A7           	and a
1163  8C6D 20 FA        	jr nz,2B
1164  8C6F 78           	ld a,b
1165  8C70
1166  8C70 32 13 89     1 ld (Numero_de_malotes),a
1167  8C73 C9           	ret
1168  8C74
1169  8C74              ; -------------------------------------------------------------------------------------------------------------
1170  8C74              ;
1171  8C74              ; 28/2/23
1172  8C74              ;
1173  8C74
1174  8C74              Calcula_numero_de_disparotes
1175  8C74
1176  8C74 21 50 71     	ld hl,Album_de_fotos_disparos
1177  8C77 EB           	ex de,hl
1178  8C78 2A 3E 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1179  8C7B
1180  8C7B 06 00        	ld b,0
1181  8C7D 7D           	ld a,l
1182  8C7E 93           	sub e
1183  8C7F 28 07        	jr z,1F
1184  8C81
1185  8C81              ; Nº de malotes no es "0".
1186  8C81
1187  8C81 D6 06        2 sub 6
1188  8C83 04           	inc b
1189  8C84 A7           	and a
1190  8C85 20 FA        	jr nz,2B
1191  8C87 78           	ld a,b
1192  8C88
1193  8C88 32 42 89     1 ld (Numero_de_disparotes),a
1194  8C8B C9           	ret
1195  8C8C
1196  8C8C              ; *************************************************************************************************************************************************************
1197  8C8C              ;
1198  8C8C              ; 20/10/22
1199  8C8C              ;
1200  8C8C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1201  8C8C              ;
1202  8C8C              ; Destruye el puntero y DE !!!!!
1203  8C8C
1204  8C8C 5E           Extrae_address ld e,(hl)
1205  8C8D 23           	inc hl
1206  8C8E 56           	ld d,(hl)
1207  8C8F 2B           	dec hl
1208  8C90 EB           	ex de,hl
1209  8C91 C9           	ret
1210  8C92
1211  8C92              ; *************************************************************************************************************************************************************
1212  8C92              ;
1213  8C92              ;	7/2/23
1214  8C92              ;
1215  8C92              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1216  8C92              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1217  8C92              ;
1218  8C92              ;   Destruye HL y BC !!!!!,
1219  8C92              ;
1220  8C92              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1221  8C92              ;					"0" ..... Izquierda.
1222  8C92
1223  8C92              Inicia_Puntero_objeto
1224  8C92
1225  8C92 3A DE 88     	ld a,(Cuad_objeto)
1226  8C95 E6 01        	and 1
1227  8C97 F5           	push af
1228  8C98 CC B6 8C     	call z,Inicia_puntero_objeto_izq
1229  8C9B F1           	pop af
1230  8C9C 28 2B        	jr z,1F
1231  8C9E CD A3 8C     	call Inicia_puntero_objeto_der
1232  8CA1 18 26        	jr 1F
1233  8CA3
1234  8CA3              ; Arrancamos desde la parte izquierda de la pantalla.
1235  8CA3              ; Iniciamos (Indice_Sprite_der).
1236  8CA3
1237  8CA3 2A D4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1238  8CA6 22 D8 88     	ld (Puntero_DESPLZ_der),hl
1239  8CA9 CD 8C 8C     	call Extrae_address
1240  8CAC 22 CE 88     	ld (Puntero_objeto),hl
1241  8CAF
1242  8CAF 2A D6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1243  8CB2 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
1244  8CB5 C9           	ret
1245  8CB6
1246  8CB6              ; Arrancamos desde la parte derecha de la pantalla.
1247  8CB6              ; Iniciamos (Indice_Sprite_izq).
1248  8CB6
1249  8CB6 2A D6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1250  8CB9 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
1251  8CBC CD 8C 8C     	call Extrae_address
1252  8CBF 22 CE 88     	ld (Puntero_objeto),hl
1253  8CC2
1254  8CC2 2A D4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1255  8CC5 22 D8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1256  8CC8 C9           	ret
1257  8CC9
1258  8CC9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1259  8CC9
1260  8CC9 21 40 83     1 ld hl,Amadeus
1261  8CCC ED 4B CE 88  	ld bc,(Puntero_objeto)
1262  8CD0 B7 ED 42     	sub hl,bc
1263  8CD3 C0           	ret nz
1264  8CD4 21 F4 88     	ld hl,Ctrl_0
1265  8CD7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1266  8CD9 C9           	ret 												; _de nuestra nave en los extremos.
1267  8CDA
1268  8CDA              ; *************************************************************************************************************************************************************
1269  8CDA              ;
1270  8CDA              ;	14/5/23
1271  8CDA              ;
1272  8CDA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1273  8CDA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1274  8CDA
1275  8CDA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1276  8CDA              ;	_de la 2ª y 3ª entidad respectivamente.
1277  8CDA
1278  8CDA              Store_Restore_cajas
1279  8CDA
1280  8CDA E5           	push hl
1281  8CDB D5           	push de
1282  8CDC C5            	push bc
1283  8CDD
1284  8CDD              ;	STORE !!!!!
1285  8CDD              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1286  8CDD
1287  8CDD 21 CA 88     	ld hl,Filas
1288  8CE0 ED 5B 0A 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1289  8CE4 01 3D 00     	ld bc,61
1290  8CE7 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1291  8CE9
1292  8CE9              ; 	Entidad_sospechosa. 20/4/23
1293  8CE9
1294  8CE9 3A E3 88     	ld a,(Impacto)
1295  8CEC A7           	and a
1296  8CED 28 0C        	jr z,1F
1297  8CEF
1298  8CEF 2A 0A 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1299  8CF2 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1300  8CF5 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1301  8CF6 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1302  8CF8 22 48 89     	ld (Entidad_sospechosa_de_colision),hl
1303  8CFB
1304  8CFB              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1305  8CFB
1306  8CFB 2A 0C 89     1 ld hl,(Puntero_restore_caja)
1307  8CFE 7E           	ld a,(hl)
1308  8CFF A7           	and a
1309  8D00 F5           	push af
1310  8D01 28 08        	jr z,2F
1311  8D03
1312  8D03 11 CA 88     	ld de,Filas
1313  8D06 01 3D 00     	ld bc,61
1314  8D09 ED B0        	ldir
1315  8D0B
1316  8D0B CD 27 8D     2 call Incrementa_punteros_de_cajas
1317  8D0E
1318  8D0E F1           	pop af
1319  8D0F 28 EA        	jr z,1B
1320  8D11
1321  8D11 C1           	pop bc
1322  8D12 D1           	pop de
1323  8D13 E1           	pop hl
1324  8D14
1325  8D14 C9           	ret
1326  8D15
1327  8D15              ; **************************************************************************************************
1328  8D15              ;
1329  8D15              ;	12/05/23
1330  8D15              ;
1331  8D15              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1332  8D15
1333  8D15 E5           Restore_entidad push hl
1334  8D16 D5           	push de
1335  8D17 C5            	push bc
1336  8D18
1337  8D18 2A 0A 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1338  8D1B 11 CA 88     	ld de,Filas
1339  8D1E 01 3D 00     	ld bc,61
1340  8D21 ED B0        	ldir
1341  8D23
1342  8D23 C1           	pop bc
1343  8D24 D1           	pop de
1344  8D25 E1           	pop hl
1345  8D26 C9           	ret
1346  8D27
1347  8D27              ; **************************************************************************************************
1348  8D27              ;
1349  8D27              ;	08/05/23
1350  8D27              ;
1351  8D27              ;	Incrementamos los dos punteros de entidades. (+1).
1352  8D27
1353  8D27              Incrementa_punteros_de_cajas
1354  8D27
1355  8D27 2A 0C 89     	ld hl,(Puntero_restore_caja)
1356  8D2A 22 0A 89     	ld (Puntero_store_caja),hl
1357  8D2D 2A 0E 89     	ld hl,(Indice_restore_caja)
1358  8D30 23           	inc hl
1359  8D31 23           	inc hl
1360  8D32 22 0E 89     	ld (Indice_restore_caja),hl
1361  8D35 CD 8C 8C         call Extrae_address
1362  8D38 22 0C 89         ld (Puntero_restore_caja),hl
1363  8D3B C9               ret
1364  8D3C
1365  8D3C              ; **************************************************************************************************
1366  8D3C              ;
1367  8D3C              ;	25/01/23
1368  8D3C              ;
1369  8D3C              ;	Restore_Amadeus
1370  8D3C              ;
1371  8D3C              ;	Cargamos en DRAW los parámetros de Amadeus.
1372  8D3C              ;
1373  8D3C
1374  8D3C E5           Restore_Amadeus	push hl
1375  8D3D D5           	push de
1376  8D3E C5            	push bc
1377  8D3F 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1378  8D42 11 CA 88     	ld de,Filas
1379  8D45 01 3D 00     	ld bc,61
1380  8D48 ED B0        	ldir
1381  8D4A C1           	pop bc
1382  8D4B D1           	pop de
1383  8D4C E1           	pop hl
1384  8D4D C9           	ret
1385  8D4E
1386  8D4E              ; *************************************************************************************************************************************************************
1387  8D4E              ;
1388  8D4E              ;	29/04/23
1389  8D4E              ;
1390  8D4E              ;	Store_Amadeus
1391  8D4E              ;
1392  8D4E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1393  8D4E              ;
1394  8D4E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1395  8D4E              ;
1396  8D4E              ;	DESTRUYE: HL y BC y DE.
1397  8D4E
1398  8D4E 21 CA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1399  8D51 01 3D 00     	ld bc,61
1400  8D54 ED B0        	ldir
1401  8D56 C9           	ret
1402  8D57
1403  8D57              ; -----------------------------------------------------------
1404  8D57              ;
1405  8D57              ;	27/04/23
1406  8D57              ;
1407  8D57              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1408  8D57              ;
1409  8D57              ;	Destruye: HL,BC,DE,A
1410  8D57
1411  8D57 21 CA 88     Borra_datos_entidad ld hl,Filas
1412  8D5A 01 3C 00     	ld bc,60
1413  8D5D AF           	xor a
1414  8D5E 77           	ld (hl),a
1415  8D5F 11 CB 88     	ld de,Filas+1
1416  8D62 ED B0        	ldir
1417  8D64 C9           	ret
1418  8D65
1419  8D65              ; -----------------------------------------------------------
1420  8D65
1421  8D65              ; Teclado.
1422  8D65
1423  8D65 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1424  8D67 DB FE        	in a,($fe)
1425  8D69 E6 01        	and $01
1426  8D6B 28 02        	jr z,1f
1427  8D6D 18 F6        	jr Pulsa_ENTER
1428  8D6F C9           1 ret
1429  8D70
1430  8D70              ; **************************************************************************************************
1431  8D70              ;
1432  8D70              ; Temporización.
1433  8D70
1434  8D70              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1435  8D70              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1436  8D70              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1437  8D70              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1438  8D70
1439  8D70              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1440  8D70              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1441  8D70              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1442  8D70
1443  8D70              ; A partir de $4f61 no hace falta DELAY.
1444  8D70
1445  8D70              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1446  8D70
1447  8D70 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1448  8D73 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1449  8D74 78           	LD A,B
1450  8D75 A7           	AND A
1451  8D76 20 FB        	JR NZ,wait
1452  8D78 C9           	RET
1453  8D79
1454  8D79              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1455  8D79              ;
1456  8D79              ;	5/3/23
1457  8D79              ;
1458  8D79              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1459  8D79
1460  8D79              Movimiento_Amadeus
1461  8D79
1462  8D79              ; Disparo.
1463  8D79
1464  8D79 3A 5A 89     	ld a,(Disparo_Amadeus)
1465  8D7C A7           	and a
1466  8D7D 20 02        	jr nz,1F
1467  8D7F 18 15        	jr 2F
1468  8D81
1469  8D81 3E F7        1 ld a,$f7													; "5" para disparar.
1470  8D83 DB FE        	in a,($fe)
1471  8D85 E6 10        	and $10
1472  8D87
1473  8D87 F5           	push af
1474  8D88 CC 46 8E     	call z,Genera_disparo
1475  8D8B F1           	pop af
1476  8D8C 20 08        	jr nz,2F
1477  8D8E
1478  8D8E 3A 5A 89     	ld a,(Disparo_Amadeus)
1479  8D91 EE 01        	xor 1
1480  8D93 32 5A 89     	ld (Disparo_Amadeus),a
1481  8D96
1482  8D96 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1483  8D98 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1484  8D9A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1485  8D9C CC 17 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1486  8D9F
1487  8D9F 3E F7        	ld a,$f7
1488  8DA1 DB FE        	in a,($fe)
1489  8DA3 E6 01        	and $01
1490  8DA5 C8           	ret z
1491  8DA6
1492  8DA6 3E F7        	ld a,$f7
1493  8DA8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1494  8DAA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1495  8DAC CC F9 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1496  8DAF C9           	ret
1497  8DB0
1498  8DB0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1499  8DB0              ;
1500  8DB0              ;	Rutina provisional para que los malotes cagen balas.
1501  8DB0
1502  8DB0              Detecta_disparo_entidad
1503  8DB0
1504  8DB0 3A 5D 89     	ld a,(Disparo_entidad)
1505  8DB3 A7           	and a
1506  8DB4 C8           	ret z
1507  8DB5
1508  8DB5              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1509  8DB5
1510  8DB5              ;	ld a,$7f				; Detecta SPACE.
1511  8DB5              ;	in a,($fe)
1512  8DB5              ;	and 1
1513  8DB5              ;	ret nz
1514  8DB5
1515  8DB5              ;	call Genera_disparo
1516  8DB5 C9           	ret
1517  8DB6
1518  8DB6              ; ----------------------------------------------------------------------
1519  8DB6              ;
1520  8DB6              ;	8/9/23
1521  8DB6
1522  8DB6 2A 26 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1523  8DB9 2B            	dec hl
1524  8DBA 7E           	ld a,(hl)
1525  8DBB A7           	and a
1526  8DBC C8           	ret z										; Salimos si es álbum está vacío.
1527  8DBD
1528  8DBD 11 E9 88     	ld de,Variables_de_borrado+5
1529  8DC0 01 06 00     	ld bc,6
1530  8DC3 ED B8        	lddr
1531  8DC5 C9           	ret
1532  8DC6
1533  8DC6              ; ----------------------------------------------------------------------
1534  8DC6              ;
1535  8DC6              ;	9/9/23
1536  8DC6
1537  8DC6              Repone_datos_de_borrado_Amadeus
1538  8DC6
1539  8DC6 21 E4 88     	ld hl,Variables_de_borrado
1540  8DC9 11 A0 72     	ld de,Album_de_fotos_Amadeus
1541  8DCC 01 06 00     	ld bc,6
1542  8DCF ED B0        	ldir
1543  8DD1
1544  8DD1 EB           	ex de,hl
1545  8DD2 22 26 89     	ld (End_Snapshot_Amadeus),hl
1546  8DD5
1547  8DD5 C9           	ret
1548  8DD6
1549  8DD6              ; ----------------------------------------------------------------------
1550  8DD6              ;
1551  8DD6              ;	27/10/23
1552  8DD6              ;
1553  8DD6
1554  8DD6              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1555  8DD6              ;	_ Album_de_fotos correspondiente.
1556  8DD6
1557  8DD6              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1558  8DD6              ;	_ durante el proceso de escritura.
1559  8DD6
1560  8DD6              Repone_datos_de_borrado
1561  8DD6
1562  8DD6 F3           	di
1563  8DD7 ED 5B 1E 89  	ld de,(Stack_snapshot)
1564  8DDB 21 E4 88     	ld hl,Variables_de_borrado
1565  8DDE 01 06 00     	ld bc,6
1566  8DE1 ED B0        	ldir
1567  8DE3 FB           	ei
1568  8DE4
1569  8DE4 EB           	ex de,hl
1570  8DE5 22 1E 89     	ld (Stack_snapshot),hl
1571  8DE8
1572  8DE8 C9           	ret
1573  8DE9
1574  8DE9              ; ----------------------------------------------------------------------
1575  8DE9              ;
1576  8DE9              ;	11/8/23
1577  8DE9
1578  8DE9              Gestiona_entidades
1579  8DE9
1580  8DE9              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1581  8DE9
1582  8DE9 3A 40 89     	ld a,(Semaforo)
1583  8DEC CB 47        	bit 0,a
1584  8DEE 28 FE        	jr z,$												;! STOP el buffer está vacío.
1585  8DF0 C8           	ret z
1586  8DF1
1587  8DF1              ;	call Extrae_foto_disparos
1588  8DF1              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1589  8DF1
1590  8DF1 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1591  8DF4
1592  8DF4              ;	BUFFER vacío ??????
1593  8DF4              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1594  8DF4
1595  8DF4 3A 41 89     	ld a,(Ctrl_Semaforo)
1596  8DF7 CB 67        	bit 4,a
1597  8DF9 28 05        	jr z,1F
1598  8DFB
1599  8DFB              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1600  8DFB
1601  8DFB AF           	xor a
1602  8DFC 32 41 89     	ld (Ctrl_Semaforo),a
1603  8DFF C9           	ret
1604  8E00
1605  8E00 CB 47        1 bit 0,a
1606  8E02 C0           	ret nz
1607  8E03
1608  8E03              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1609  8E03              ; Nos situamos al comienzo del último álbum.
1610  8E03
1611  8E03 CD 46 73     	call Modifica_Stack_snapshot
1612  8E06
1613  8E06 C9           	ret
1614  8E07
1615  8E07              ; -----------------------------------------------------------------------------------
1616  8E07
1617  8E07              Pinta_Amadeus
1618  8E07
1619  8E07 3E 06        	ld a,6
1620  8E09 D3 FE            out ($fe),a										; Amarillo
1621  8E0B
1622  8E0B CD 58 8C        	call Calcula_malotes_Amadeus
1623  8E0E CD CC 96     	call Extrae_foto_Amadeus
1624  8E11 CD 14 8C     	call Limpia_album_Amadeus
1625  8E14
1626  8E14 C9           	ret
1627  8E15
1628  8E15              Pinta_entidades
1629  8E15
1630  8E15 3A 40 89     	ld a,(Semaforo)
1631  8E18 CB 47        	bit 0,a
1632  8E1A C8           	ret z
1633  8E1B
1634  8E1B              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1635  8E1B
1636  8E1B CD 3C 8C     	call Calcula_numero_de_malotes
1637  8E1E CD 4A 96     	call Extrae_foto_entidades
1638  8E21
1639  8E21 C9           	ret
1640  8E22
1641  8E22              ; -----------------------------------------------------------------------------------
1642  8E22              ;
1643  8E22              ;	12/11/23
1644  8E22              ;
1645  8E22              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1646  8E22
1647  8E22              Actualiza_relojes
1648  8E22
1649  8E22 21 55 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1650  8E25 34           	inc (hl)
1651  8E26
1652  8E26 34           	inc (hl)
1653  8E27 35           	dec (hl)
1654  8E28 C0           	ret nz
1655  8E29
1656  8E29 21 56 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1657  8E2C 34           	inc (hl)
1658  8E2D C9           	ret
1659  8E2E
1660  8E2E              ; ---------------------------------------------------------------
1661  8E2E              ;
1662  8E2E              ;	27/9/23
1663  8E2E
1664  8E2E              Guarda_parametros_DRAW
1665  8E2E
1666  8E2E 21 CA 88     	ld hl,Filas
1667  8E31 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1668  8E34 01 3D 00     	ld bc,61
1669  8E37 ED B0        	ldir
1670  8E39 C9           	ret
1671  8E3A
1672  8E3A              Recupera_parametros_DRAW
1673  8E3A
1674  8E3A 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1675  8E3D 11 CA 88     	ld de,Filas
1676  8E40 01 3D 00     	ld bc,61
1677  8E43 ED B0        	ldir
1678  8E45 C9           	ret
1679  8E46
1680  8E46              ; ---------------------------------------------------------------
1681  8E46
1682  8E46              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E46              ; ******************************************************************************************************************************************************************************************
   2+ 8E46              ;
   3+ 8E46              ;   21/07/23
   4+ 8E46              ;
   5+ 8E46              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E46              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E46              ;
   8+ 8E46              ;
   9+ 8E46              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E46              ;
  11+ 8E46              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E46              ;               _ hacen las entidades hacia abajo.
  13+ 8E46              ;
  14+ 8E46              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E46              ;
  16+ 8E46              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E46              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E46              ;
  19+ 8E46              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E46              ;           _ la bala.
  21+ 8E46              ;
  22+ 8E46              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E46              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E46              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E46              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E46              ;           _ en el momento de generarse la bala)).
  27+ 8E46
  28+ 8E46              Genera_disparo
  29+ 8E46
  30+ 8E46              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E46              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E46              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E46              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E46              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E46              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E46              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E46
  38+ 8E46              ; Exclusiones:
  39+ 8E46
  40+ 8E46 3A E2 88         ld a,(Vel_down)
  41+ 8E49 47               ld b,a
  42+ 8E4A 3A 54 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E4D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E4E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E4F 3A 01 89         ld a,(Columnas)
  46+ 8E52 47               ld b,a
  47+ 8E53 3A CB 88         ld a,(Columns)
  48+ 8E56 B8               cp b
  49+ 8E57 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E58
  51+ 8E58              ; ----- ----- -----
  52+ 8E58
  53+ 8E58 3A F4 88         ld a,(Ctrl_0)
  54+ 8E5B CB 77            bit 6,a
  55+ 8E5D 20 06            jr nz,14F
  56+ 8E5F
  57+ 8E5F 3A D1 88         ld a,(Coordenada_y)
  58+ 8E62 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E64 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E65
  61+ 8E65 21 00 80     14 ld hl,Indice_disparo
  62+ 8E68 3A D2 88         ld a,(CTRL_DESPLZ)
  63+ 8E6B 4F               ld c,a
  64+ 8E6C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E6E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E6E              ;                                            ""        ""       "f9", B="1"
  67+ 8E6E              ;                                            ""        ""       "fb", B="2"
  68+ 8E6E              ;                                            ""        ""       "fb", B="3"
  69+ 8E6E A7               and a
  70+ 8E6F 28 10            jr z,1F
  71+ 8E71 E6 01            and 1
  72+ 8E73 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E74
  74+ 8E74 79               ld a,c
  75+ 8E75 16 F9            ld d,$f9
  76+ 8E77 23           2 inc hl
  77+ 8E78 23               inc hl
  78+ 8E79 04               inc b
  79+ 8E7A BA               cp d
  80+ 8E7B 28 04            jr z,1F
  81+ 8E7D 14               inc d
  82+ 8E7E 14               inc d
  83+ 8E7F 18 F6            jr 2B
  84+ 8E81
  85+ 8E81 CD 8C 8C     1 call Extrae_address
  86+ 8E84 E5               push hl
  87+ 8E85 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E87 DD 21 12 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E8B
  90+ 8E8B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E8B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E8B
  93+ 8E8B 3A F4 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E8E CB 77            bit 6,a
  95+ 8E90 20 04            jr nz,19F
  96+ 8E92
  97+ 8E92 AF               xor a
  98+ 8E93 32 5D 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E96
 100+ 8E96 3A DE 88     19 ld a,(Cuad_objeto)
 101+ 8E99 FE 02            cp 2
 102+ 8E9B 38 66            jr c,3F
 103+ 8E9D 28 64            jr z,3F
 104+ 8E9F
 105+ 8E9F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E9F
 107+ 8E9F E6 01            and 1
 108+ 8EA1 28 30            jr z,4F
 109+ 8EA3
 110+ 8EA3              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EA3              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EA3              ;
 113+ 8EA3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EA3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EA3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EA3
 117+ 8EA3 2A CC 88     	ld hl,(Posicion_actual)
 118+ 8EA6
 119+ 8EA6              ;   Amadeus o entidad ???.
 120+ 8EA6
 121+ 8EA6 3A F4 88         ld a,(Ctrl_0)
 122+ 8EA9 CB 77            bit 6,a
 123+ 8EAB 28 0A            jr z,8F
 124+ 8EAD
 125+ 8EAD              ; 	Dispara Amadeus.
 126+ 8EAD
 127+ 8EAD 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EAF CD 3B 96         call PreviousScan
 129+ 8EB2 CD 3B 96         call PreviousScan
 130+ 8EB5
 131+ 8EB5              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EB5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EB5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EB5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EB5
 136+ 8EB5 18 11            jr 10F
 137+ 8EB7
 138+ 8EB7              ; 	Dispara Entidad.
 139+ 8EB7
 140+ 8EB7 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EBA              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EBA
 143+ 8EBA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EBA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EBA
 146+ 8EBA C5               push bc
 147+ 8EBB 06 10            ld b,16
 148+ 8EBD CD 2C 96     9 call NextScan
 149+ 8EC0 10 FB            djnz 9B
 150+ 8EC2 C1               pop bc
 151+ 8EC3 CD 2D 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EC6 18 06            jr 17F
 153+ 8EC8
 154+ 8EC8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EC8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EC8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EC8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EC8
 159+ 8EC8 CD 2D 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8ECB CD A2 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8ECE              ;                                                      ; _al generar el disparo.
 162+ 8ECE
 163+ 8ECE              ; 	LLegados a este punto tendremos:
 164+ 8ECE              ;
 165+ 8ECE              ;       Puntero_objeto_disparo en IY.
 166+ 8ECE              ;       Rutinas_de_impresion en IX.
 167+ 8ECE              ;       Puntero_de_impresion en HL.
 168+ 8ECE              ;       Impacto/Dirección en BC.
 169+ 8ECE
 170+ 8ECE CD 35 8F     17 call Almacena_disparo
 171+ 8ED1 18 52            jr 6F                                             ; RET.
 172+ 8ED3
 173+ 8ED3              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8ED3              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8ED3              ;
 176+ 8ED3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8ED3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8ED3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8ED3
 180+ 8ED3 2A CC 88     4 ld hl,(Posicion_actual)
 181+ 8ED6
 182+ 8ED6              ;   Amadeus o entidad ???.
 183+ 8ED6
 184+ 8ED6 3A F4 88         ld a,(Ctrl_0)
 185+ 8ED9 CB 77            bit 6,a
 186+ 8EDB 28 0A            jr z,11F
 187+ 8EDD
 188+ 8EDD              ; 	Dispara Amadeus.
 189+ 8EDD
 190+ 8EDD 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EDF CD 3B 96         call PreviousScan
 192+ 8EE2 CD 3B 96         call PreviousScan
 193+ 8EE5
 194+ 8EE5              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EE5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EE5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EE5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EE5
 199+ 8EE5 18 11            jr 13F
 200+ 8EE7
 201+ 8EE7              ; 	Dispara Entidad.
 202+ 8EE7
 203+ 8EE7 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EEA              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EEA
 206+ 8EEA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EEA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EEA
 209+ 8EEA C5               push bc
 210+ 8EEB 06 10            ld b,16
 211+ 8EED CD 2C 96     12 call NextScan
 212+ 8EF0 10 FB            djnz 12B
 213+ 8EF2 C1               pop bc
 214+ 8EF3
 215+ 8EF3 CD 26 8F         call Ajusta_disparo_parte_derecha
 216+ 8EF6 18 06            jr 18F
 217+ 8EF8
 218+ 8EF8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EF8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EF8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EF8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EF8
 223+ 8EF8 CD 26 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EFB CD A2 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EFE              ;                                                       ; _al generar el disparo.
 226+ 8EFE
 227+ 8EFE              ; LLegados a este punto tendremos:
 228+ 8EFE              ;
 229+ 8EFE              ;       Puntero_objeto_disparo en IY.
 230+ 8EFE              ;       Rutinas_de_impresion en IX.
 231+ 8EFE              ;       Puntero_de_impresion en HL.
 232+ 8EFE              ;       Impacto/Dirección en BC.
 233+ 8EFE
 234+ 8EFE CD 35 8F     18 call Almacena_disparo
 235+ 8F01 18 22            jr 6F                                               ; RET.
 236+ 8F03
 237+ 8F03              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F03
 239+ 8F03 28 11        3 jr z,5F
 240+ 8F05
 241+ 8F05              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F05              ;
 243+ 8F05              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F05              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F05              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F05              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F05
 248+ 8F05              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F05              ;	   ""        ""       "f9", B="1"
 250+ 8F05              ;	   ""        ""       "fb", B="2"
 251+ 8F05              ; 	   ""        ""       "fb", B="3"
 252+ 8F05
 253+ 8F05 2A CC 88     	ld hl,(Posicion_actual)
 254+ 8F08 CD 2C 96     	call NextScan
 255+ 8F0B
 256+ 8F0B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F0B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F0B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F0B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F0B
 261+ 8F0B CD 2D 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F0E
 263+ 8F0E              ; 	No se produce impacto. B="$80"
 264+ 8F0E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F0E
 266+ 8F0E 01 80 80         ld bc,$8080
 267+ 8F11
 268+ 8F11              ; 	LLegados a este punto tendremos:
 269+ 8F11              ;
 270+ 8F11              ;       Puntero_objeto_disparo en IY.
 271+ 8F11              ;       Rutinas_de_impresion en IX.
 272+ 8F11              ;       Puntero_de_impresion en HL.
 273+ 8F11              ;       Impacto/Dirección en BC.
 274+ 8F11
 275+ 8F11 CD 35 8F         call Almacena_disparo
 276+ 8F14 18 0F            jr 6F                                           ; RET.
 277+ 8F16
 278+ 8F16              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F16              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F16              ;
 281+ 8F16              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F16              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F16              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F16              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F16
 286+ 8F16 2A CC 88     5 ld hl,(Posicion_actual)
 287+ 8F19 CD 2C 96     	call NextScan
 288+ 8F1C
 289+ 8F1C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F1C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F1C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F1C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F1C
 294+ 8F1C CD 26 8F         call Ajusta_disparo_parte_derecha
 295+ 8F1F
 296+ 8F1F              ; 	No se produce impacto. B="$80"
 297+ 8F1F              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F1F
 299+ 8F1F 01 80 80     15 ld bc,$8080
 300+ 8F22
 301+ 8F22              ; 	LLegados a este punto tendremos:
 302+ 8F22              ;
 303+ 8F22              ;       Puntero_objeto_disparo en IY.
 304+ 8F22              ;       Rutinas_de_impresion en IX.
 305+ 8F22              ;       Puntero_de_impresion en HL.
 306+ 8F22              ;       Impacto/Dirección en BC.
 307+ 8F22
 308+ 8F22 CD 35 8F         call Almacena_disparo
 309+ 8F25
 310+ 8F25 C9           6 ret
 311+ 8F26
 312+ 8F26              ; ----------------------------------------------------------------
 313+ 8F26              ;
 314+ 8F26              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F26              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F26              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F26
 318+ 8F26 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F27 FE 02            cp 2
 320+ 8F29 38 01            jr c,1F
 321+ 8F2B 23               inc hl
 322+ 8F2C C9           1 ret
 323+ 8F2D
 324+ 8F2D 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F2E FE 01        	cp 1
 326+ 8F30 20 01        	jr nz,1F
 327+ 8F32 2B           	dec hl
 328+ 8F33 2B           1 dec hl
 329+ 8F34 C9               ret
 330+ 8F35
 331+ 8F35              ; ----------------------------------------------------------------
 332+ 8F35              ;
 333+ 8F35              ;   25/02/23
 334+ 8F35              ;
 335+ 8F35              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F35              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F35              ;
 338+ 8F35              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F35              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F35
 341+ 8F35              Almacena_disparo
 342+ 8F35
 343+ 8F35 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F36 F1               pop af
 345+ 8F37 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F38
 347+ 8F38 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F39 E6 01            and 1
 349+ 8F3B 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F3D              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F3D              ; 	Dispara AMADEUS.
 352+ 8F3D
 353+ 8F3D              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F3D              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F3D              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F3D              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F3D
 358+ 8F3D C5               push bc
 359+ 8F3E 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F41 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F44 A7               and a
 362+ 8F45 ED 42            sbc hl,bc
 363+ 8F47 CC 0D 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F4A C1               pop bc
 365+ 8F4B 28 54            jr z,4F
 366+ 8F4D
 367+ 8F4D 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F50 23               inc hl
 369+ 8F51 23               inc hl
 370+ 8F52 22 45 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F55              ;                                                   ; _ Disparo_(+1).
 372+ 8F55 18 18            jr 2F
 373+ 8F57
 374+ 8F57              ; Dispara una entidad.
 375+ 8F57
 376+ 8F57 C5           1 push bc
 377+ 8F58 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F5B 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F5E A7               and a
 380+ 8F5F ED 42            sbc hl,bc
 381+ 8F61 CC 06 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F64 C1               pop bc
 383+ 8F65 28 3A            jr z,4F
 384+ 8F67
 385+ 8F67 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F6A 23               inc hl
 387+ 8F6B 23               inc hl
 388+ 8F6C 22 43 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F6F              ;                                                   ; _ Disparo_(+1).
 390+ 8F6F CD 8C 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F72              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F72              ;
 393+ 8F72              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F72              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F72              ;                                                     Puntero_de_impresion en HL.
 396+ 8F72              ;                                                     Impacto/Dirección en BC.
 397+ 8F72
 398+ 8F72 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F73 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F74 23               inc hl                                          ; _ al siguiente.
 401+ 8F75 A7               and a
 402+ 8F76 20 C0            jr nz,3B
 403+ 8F78
 404+ 8F78 08               ex af,af
 405+ 8F79 ED 73 18 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F7D F9               ld sp,hl
 407+ 8F7E
 408+ 8F7E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F80 F5               push af                                         ; Puntero de impresión.
 410+ 8F81 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F83 C5               push bc                                         ; Control.
 412+ 8F84
 413+ 8F84 ED 7B 18 89      ld sp,(Stack)
 414+ 8F88
 415+ 8F88              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F88
 417+ 8F88 21 07 89     	ld hl,Ctrl_1
 418+ 8F8B CB C6        	set 0,(hl)
 419+ 8F8D
 420+ 8F8D DD E5        	push ix
 421+ 8F8F E1               pop hl
 422+ 8F90 F5               push af
 423+ 8F91 DD E1            pop ix
 424+ 8F93
 425+ 8F93 CD A0 7F     	call Guarda_foto_registros
 426+ 8F96
 427+ 8F96 21 07 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F99 CB 86        	res 0,(hl)
 429+ 8F9B
 430+ 8F9B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F9B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F9B
 433+ 8F9B CD 0D 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F9E CD 06 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FA1
 436+ 8FA1 C9           4 ret
 437+ 8FA2
 438+ 8FA2              ; ----------------------------------------------------------------
 439+ 8FA2              ;
 440+ 8FA2              ;   4/3/23
 441+ 8FA2              ;
 442+ 8FA2              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FA2              ;   _ al generarse el disparo.
 444+ 8FA2              ;
 445+ 8FA2              ;       "$80" ..... No se produce colisión.
 446+ 8FA2              ;       "$81" ..... Se produce colisión.
 447+ 8FA2              ;
 448+ 8FA2              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FA2              ;         _ que forman el disparo.
 450+ 8FA2
 451+ 8FA2
 452+ 8FA2              Comprueba_Colision
 453+ 8FA2
 454+ 8FA2              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FA2
 456+ 8FA2 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FA4 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FA5
 459+ 8FA5 CD DB 8F         call Modifica_H_Velocidad_disparo
 460+ 8FA8
 461+ 8FA8 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FA9 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FAB 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FAD
 465+ 8FAD 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FAF CD CB 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FB2
 468+ 8FB2 7B               ld a,e
 469+ 8FB3 E6 01            and 1
 470+ 8FB5 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FB7              ;                                                  ; _ para activar IMPACTO.
 472+ 8FB7 E1               pop hl
 473+ 8FB8 E5               push hl
 474+ 8FB9 CD 2C 96         call NextScan
 475+ 8FBC
 476+ 8FBC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FBD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FBF 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FC1              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FC1 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FC3 CD CB 8F         call Bucle_2
 482+ 8FC6
 483+ 8FC6 43           1 ld b,e
 484+ 8FC7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FC8 FD E1            pop iy
 486+ 8FCA C9               ret
 487+ 8FCB
 488+ 8FCB              ; ---------- ----------
 489+ 8FCB
 490+ 8FCB 06 02        Bucle_2 ld b,2
 491+ 8FCD FD 7E 00     2 ld a,(iy)
 492+ 8FD0 A6               and (hl)
 493+ 8FD1 28 02            jr z,1F
 494+ 8FD3 1E 81            ld e,$81
 495+ 8FD5 23           1 inc hl
 496+ 8FD6 FD 23            inc iy
 497+ 8FD8 10 F3            djnz 2B
 498+ 8FDA C9               ret
 499+ 8FDB
 500+ 8FDB              ; ---------- ----------
 501+ 8FDB              ;
 502+ 8FDB              ;   21/7/23
 503+ 8FDB
 504+ 8FDB              Modifica_H_Velocidad_disparo
 505+ 8FDB
 506+ 8FDB 3A 54 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FDE FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FE0 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FE1 24               inc h
 510+ 8FE2
 511+ 8FE2 C9               ret
 512+ 8FE3
 513+ 8FE3              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FE3              ;
 515+ 8FE3              ;   11/04/23
 516+ 8FE3              ;
 517+ 8FE3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FE3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FE3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FE3              ;
 521+ 8FE3              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FE3
 523+ 8FE3              Compara_coordenadas_X
 524+ 8FE3
 525+ 8FE3              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FE3              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FE3
 528+ 8FE3              ; Preparamos registros:
 529+ 8FE3
 530+ 8FE3 21 D0 88         ld hl,Filas+6
 531+ 8FE6 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FE7 23               inc hl
 533+ 8FE8 23               inc hl
 534+ 8FE9 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FEA 43               ld b,e
 536+ 8FEB
 537+ 8FEB 21 DE 88         ld hl,Filas+20
 538+ 8FEE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FEF 21 4F 89         ld hl,Coordenadas_X_Entidad
 540+ 8FF2 CD 0E 92         call Guarda_coordenadas_X
 541+ 8FF5
 542+ 8FF5              ; Preparamos registros:
 543+ 8FF5
 544+ 8FF5 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FF8 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FF9 23               inc hl
 547+ 8FFA 23               inc hl
 548+ 8FFB 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FFC 7B               ld a,e
 550+ 8FFD 08               ex af,af'
 551+ 8FFE 21 B2 85         ld hl,Amadeus_db+20
 552+ 9001 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9002 21 4C 89         ld hl,Coordenadas_X_Amadeus
 554+ 9005 CD 0E 92         call Guarda_coordenadas_X
 555+ 9008
 556+ 9008              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9008              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9008
 559+ 9008 04               inc b
 560+ 9009 05               dec b
 561+ 900A 28 04            jr z,1F
 562+ 900C 06 03            ld b,3
 563+ 900E 18 02            jr 2F
 564+ 9010 06 02        1 ld b,2
 565+ 9012 08           2 ex af,af'
 566+ 9013 3C               inc a
 567+ 9014 3D               dec a
 568+ 9015 28 04            jr z,5F
 569+ 9017 0E 03            ld c,3
 570+ 9019 18 02            jr 6F
 571+ 901B 0E 02        5 ld c,2
 572+ 901D 79           6 ld a,c
 573+ 901E 08               ex af,af'
 574+ 901F 11 4F 89         ld de,Coordenadas_X_Entidad
 575+ 9022 1A           4 ld a,(de)
 576+ 9023 21 4C 89         ld hl,Coordenadas_X_Amadeus
 577+ 9026 BE           3 cp (hl)
 578+ 9027 28 0E            jr z,7F
 579+ 9029 23               inc hl
 580+ 902A 0D               dec c
 581+ 902B 20 F9            jr nz,3B
 582+ 902D 13               inc de
 583+ 902E 08               ex af,af'
 584+ 902F 4F               ld c,a
 585+ 9030 08               ex af,af'
 586+ 9031 10 EF            djnz 4B
 587+ 9033
 588+ 9033              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9033
 590+ 9033 CD 4A 92     8 call Limpia_Coordenadas_X
 591+ 9036 C9               ret
 592+ 9037
 593+ 9037 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9039 32 E3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 903C 21 47 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 903F CB D6            set 2,(hl)
 597+ 9041 18 F0            jr 8B
 598+ 9043
 599+ 9043              ; -----------------------------------------------------------------------
 600+ 9043              ;
 601+ 9043              ;   17/04/23
 602+ 9043              ;
 603+ 9043
 604+ 9043              Detecta_colision_nave_entidad
 605+ 9043
 606+ 9043              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9043
 608+ 9043 2A CC 88         ld hl,(Posicion_actual)
 609+ 9046 CD 87 95         call Calcula_puntero_de_impresion
 610+ 9049
 611+ 9049              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9049              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9049
 614+ 9049 DD E5            push ix
 615+ 904B E1               pop hl
 616+ 904C E5               push hl
 617+ 904D
 618+ 904D              ; ----- ----- -----
 619+ 904D 1E 00            ld e,0                                         ; Indica impacto.
 620+ 904F 06 0A            ld b,10
 621+ 9051 CD 81 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9054 7B               ld a,e
 623+ 9055 FE 05            cp 5
 624+ 9057 38 0E            jr c,3F
 625+ 9059
 626+ 9059              ; LLegados a este punto:
 627+ 9059              ;
 628+ 9059              ;   HAY COLISIÓN !!!!!.
 629+ 9059              ;
 630+ 9059              ;   .db (Impacto) de Amadeus a "1".
 631+ 9059              ;   SET el bit3 de (Impacto2).
 632+ 9059              ;
 633+ 9059              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9059
 635+ 9059 21 B7 85         ld hl,Amadeus_db+25
 636+ 905C 36 01            ld (hl),1
 637+ 905E 21 47 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9061 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9063 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9065 18 18            jr 1F
 641+ 9067
 642+ 9067              ; -----
 643+ 9067
 644+ 9067 E1           3 pop hl
 645+ 9068 CD 2C 96         call NextScan
 646+ 906B E5               push hl
 647+ 906C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 906D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 906F 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9071 30 0C            jr nc,1F
 651+ 9073              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9073 10 DC            djnz 2B
 653+ 9075
 654+ 9075              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9075
 656+ 9075              ; LLegados a este punto:
 657+ 9075              ;
 658+ 9075              ;   NO HAY COLISIÓN !!!!!.
 659+ 9075              ;
 660+ 9075              ;   .db (Impacto) de Amadeus a "0".
 661+ 9075              ;   RES el bit2 de (Impacto2).
 662+ 9075              ;
 663+ 9075              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9075              ;   Lo colocamos a "0".
 665+ 9075
 666+ 9075 21 47 89         ld hl,Impacto2
 667+ 9078 CB 96            res 2,(hl)
 668+ 907A 2A 48 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 907D 36 00            ld (hl),0
 670+ 907F
 671+ 907F E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9080 C9               ret
 673+ 9081
 674+ 9081               ; ---------- ----------
 675+ 9081
 676+ 9081 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 9082 3A CB 88         ld a,(Columns)
 678+ 9085 47               ld b,a
 679+ 9086 FD 7E 00     2 ld a,(iy)
 680+ 9089 BE               cp (hl)
 681+ 908A 28 01            jr z,1F
 682+ 908C
 683+ 908C 1C               inc e
 684+ 908D
 685+ 908D 23           1 inc hl
 686+ 908E FD 23            inc iy
 687+ 9090 10 F4            djnz 2B
 688+ 9092 C1               pop bc
 689+ 9093 C9               ret
 690+ 9094
 691+ 9094              ; -------------------------------------------------------------------------------------------------------------
 692+ 9094              ;
 693+ 9094              ;   13/03/23
 694+ 9094              ;
 695+ 9094              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9094              ;
 697+ 9094              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9094
 699+ 9094 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9097 7E               ld a,(hl)
 701+ 9098 A7               and a
 702+ 9099 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 909A
 704+ 909A 44               ld b,h
 705+ 909B 4D               ld c,l
 706+ 909C 2A 20 89         ld hl,(Stack_snapshot_disparos)
 707+ 909F E5               push hl
 708+ 90A0 A7               and a
 709+ 90A1 ED 42            sbc hl,bc
 710+ 90A3 E5               push hl
 711+ 90A4 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90A5
 713+ 90A5 E1               pop hl
 714+ 90A6 54               ld d,h
 715+ 90A7 5D               ld e,l
 716+ 90A8 1B               dec de
 717+ 90A9 ED B8            lddr                                                ; Limpiamos.
 718+ 90AB
 719+ 90AB 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90AE 22 20 89         ld (Stack_snapshot_disparos),hl
 721+ 90B1
 722+ 90B1 C9               ret
 723+ 90B2
 724+ 90B2              ; -------------------------------------------------------------------------------------------------------------
 725+ 90B2              ;
 726+ 90B2              ;   18/07/23
 727+ 90B2              ;
 728+ 90B2
 729+ 90B2              Motor_de_disparos
 730+ 90B2
 731+ 90B2              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90B2
 733+ 90B2 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90B5 2A 45 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90B8
 736+ 90B8 CD 8C 8C     2 call Extrae_address
 737+ 90BB 7E               ld a,(hl)
 738+ 90BC A7               and a
 739+ 90BD 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90BF
 741+ 90BF              ; ----- ----- ----- ----- ----- -----
 742+ 90BF
 743+ 90BF C5               push bc
 744+ 90C0 CD 84 91         call foto_disparo_a_borrar
 745+ 90C3
 746+ 90C3              ; Existe colisión con este disparo???
 747+ 90C3
 748+ 90C3 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90C4 7E               ld a,(hl)
 750+ 90C5 2B               dec hl
 751+ 90C6 E6 01            and 1
 752+ 90C8 28 1D            jr z,9F
 753+ 90CA
 754+ 90CA              ;   En este punto:
 755+ 90CA              ;
 756+ 90CA              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90CA              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90CA              ;   _con la entidad).
 759+ 90CA              ;
 760+ 90CA              ;   Disparo_2A defw 0                                ; Control.
 761+ 90CA              ;    defw 0                                          ; Puntero objeto.
 762+ 90CA              ;    defw 0                                          ; Puntero de impresión.
 763+ 90CA              ;    defw 0                                          ; Rutina de impresión.
 764+ 90CA
 765+ 90CA E5               push hl
 766+ 90CB
 767+ 90CB 06 04            ld b,4
 768+ 90CD 23           19 inc hl
 769+ 90CE 10 FD            djnz 19B
 770+ 90D0
 771+ 90D0 CD 8C 8C         call Extrae_address
 772+ 90D3 CD F5 9C         call Genera_coordenadas_disparo
 773+ 90D6
 774+ 90D6              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90D6
 776+ 90D6 21 4A 89         ld hl,Coordenadas_disparo_certero
 777+ 90D9 72               ld (hl),d
 778+ 90DA 23               inc hl
 779+ 90DB 73               ld (hl),e
 780+ 90DC
 781+ 90DC              ; Elimino el disparo de la base de datos.
 782+ 90DC
 783+ 90DC E1               pop hl
 784+ 90DD CD 03 92         call Elimina_disparo_de_base_de_datos
 785+ 90E0 21 47 89         ld hl,Impacto2
 786+ 90E3 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90E5
 788+ 90E5 18 06            jr 11F
 789+ 90E7
 790+ 90E7 CD AD 91     9 call Mueve_disparo
 791+ 90EA CD 84 91         call foto_disparo_a_borrar
 792+ 90ED
 793+ 90ED C1           11 pop bc
 794+ 90EE 18 04            jr 7F
 795+ 90F0
 796+ 90F0              ; ----- ----- ----- ----- ----- -----
 797+ 90F0
 798+ 90F0 ED 42        1 sbc hl,bc
 799+ 90F2 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90F4
 801+ 90F4 2A 45 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90F7 23               inc hl
 803+ 90F8 23               inc hl
 804+ 90F9 22 45 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90FC 18 BA            jr 2B
 806+ 90FE
 807+ 90FE CD 0D 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9101              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9101
 810+ 9101              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9101
 812+ 9101 01 8A 85         ld bc,Disparo_11
 813+ 9104 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9107
 815+ 9107 CD 8C 8C     5 call Extrae_address
 816+ 910A 7E               ld a,(hl)
 817+ 910B A7               and a
 818+ 910C 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 910E
 820+ 910E              ; ----- ----- ----- ----- ----- -----
 821+ 910E
 822+ 910E C5               push bc
 823+ 910F CD 84 91         call foto_disparo_a_borrar
 824+ 9112
 825+ 9112              ; Existe colisión con este disparo???
 826+ 9112
 827+ 9112 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9113 7E               ld a,(hl)
 829+ 9114 2B               dec hl
 830+ 9115 E6 01            and 1
 831+ 9117 28 4D            jr z,10F
 832+ 9119
 833+ 9119              ;! La colisión se produce con Amadeus???
 834+ 9119              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9119
 836+ 9119 E5               push hl
 837+ 911A
 838+ 911A 06 04            ld b,4
 839+ 911C 23           16 inc hl
 840+ 911D 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 911F
 842+ 911F CD 8C 8C         call Extrae_address
 843+ 9122 CD F5 9C         call Genera_coordenadas_disparo
 844+ 9125
 845+ 9125 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9126 FE 16            cp $16
 847+ 9128 38 2A            jr c,15F
 848+ 912A
 849+ 912A
 850+ 912A              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 912A
 852+ 912A D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 912B
 854+ 912B              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 912B
 856+ 912B
 857+ 912B 2A 52 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 912E
 859+ 912E              ; Coordenada X de Amadeus en D.
 860+ 912E
 861+ 912E 7D               ld a,l
 862+ 912F E6 1F            and $1F
 863+ 9131 57               ld d,a
 864+ 9132
 865+ 9132 21 A6 85         ld hl,Amadeus_db+8
 866+ 9135 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9136
 868+ 9136 21 4C 89         ld hl,Coordenadas_X_Amadeus
 869+ 9139 CD 0E 92         call Guarda_coordenadas_X
 870+ 913C
 871+ 913C D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 913D
 873+ 913D              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 913D
 875+ 913D 06 02            ld b,2
 876+ 913F C5           20 push bc
 877+ 9140
 878+ 9140 06 03            ld b,3
 879+ 9142 21 4C 89         ld hl,Coordenadas_X_Amadeus
 880+ 9145 7E           18 ld a,(hl)
 881+ 9146 BA               cp d
 882+ 9147 20 04            jr nz,17F
 883+ 9149
 884+ 9149              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9149
 886+ 9149 C1               pop bc
 887+ 914A E1               pop hl
 888+ 914B 18 0D            jr 14F
 889+ 914D
 890+ 914D 23           17 inc hl
 891+ 914E 10 F5            djnz 18B
 892+ 9150
 893+ 9150 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9151
 895+ 9151 C1               pop bc
 896+ 9152 10 EB            djnz 20B
 897+ 9154
 898+ 9154
 899+ 9154              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9154              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9154
 902+ 9154 E1           15 pop hl
 903+ 9155 23               inc hl
 904+ 9156 35               dec (hl)
 905+ 9157 2B               dec hl
 906+ 9158 18 0C            jr 10F
 907+ 915A
 908+ 915A              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 915A              ; _ almacén de coordenadas_X de Amadeus.
 910+ 915A
 911+ 915A E5           14 push hl
 912+ 915B CD 03 92         call Elimina_disparo_de_base_de_datos
 913+ 915E 21 47 89         ld hl,Impacto2
 914+ 9161 CB CE            set 1,(hl)
 915+ 9163 E1               pop hl
 916+ 9164 18 06            jr 12F
 917+ 9166
 918+ 9166              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9166
 920+ 9166 CD AD 91     10 call Mueve_disparo
 921+ 9169 CD 84 91         call foto_disparo_a_borrar
 922+ 916C C1           12 pop bc
 923+ 916D
 924+ 916D 18 04            jr 8F
 925+ 916F
 926+ 916F              ; ----- ----- ----- ----- ----- -----
 927+ 916F
 928+ 916F ED 42        4 sbc hl,bc
 929+ 9171 28 0A            jr z,6F
 930+ 9173
 931+ 9173 2A 43 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9176 23               inc hl
 933+ 9177 23               inc hl
 934+ 9178 22 43 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 917B 18 8A            jr 5B
 936+ 917D
 937+ 917D CD 06 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9180 CD 4A 92         call Limpia_Coordenadas_X
 939+ 9183 C9               ret
 940+ 9184
 941+ 9184              ; ------------------------------------------------------------------
 942+ 9184
 943+ 9184              foto_disparo_a_borrar
 944+ 9184
 945+ 9184 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9185 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9186 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9187
 949+ 9187 E5               push hl
 950+ 9188 23               inc hl
 951+ 9189 23               inc hl
 952+ 918A ED 73 18 89      ld (Stack),sp
 953+ 918E F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 918F FD E1            pop iy
 955+ 9191 DD E1            pop ix
 956+ 9193 E1               pop hl
 957+ 9194 ED 7B 18 89      ld sp,(Stack)
 958+ 9198 3A 07 89         ld a,(Ctrl_1)
 959+ 919B CB C7            set 0,a
 960+ 919D 32 07 89         ld (Ctrl_1),a
 961+ 91A0 CD A0 7F         call Guarda_foto_registros
 962+ 91A3 3A 07 89         ld a,(Ctrl_1)
 963+ 91A6 CB 87            res 0,a
 964+ 91A8 32 07 89         ld (Ctrl_1),a
 965+ 91AB E1               pop hl
 966+ 91AC C9               ret
 967+ 91AD
 968+ 91AD              ;---------------------------------------------------
 969+ 91AD              ;
 970+ 91AD              ;   18/07/23
 971+ 91AD              ;
 972+ 91AD
 973+ 91AD              Mueve_disparo
 974+ 91AD
 975+ 91AD              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91AD              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91AD              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91AD
 979+ 91AD E5               push hl
 980+ 91AE
 981+ 91AE 7E               ld a,(hl)
 982+ 91AF
 983+ 91AF 06 04            ld b,4
 984+ 91B1 23           1 inc hl
 985+ 91B2 10 FD            djnz 1B
 986+ 91B4
 987+ 91B4              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91B4
 989+ 91B4 CD 8C 8C         call Extrae_address
 990+ 91B7
 991+ 91B7 E6 01            and 1
 992+ 91B9 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91BB
 994+ 91BB              ; Disparo hacia arriba, (Amadeus).
 995+ 91BB
 996+ 91BB              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91BB              ; _ de la dificultad.
 998+ 91BB
 999+ 91BB CD 3B 96         call PreviousScan
1000+ 91BE CD 3B 96         call PreviousScan
1001+ 91C1 CD 3B 96         call PreviousScan
1002+ 91C4 CD 3B 96         call PreviousScan
1003+ 91C7
1004+ 91C7              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91C7
1006+ 91C7 7C               ld a,h
1007+ 91C8 FE 40            cp $40
1008+ 91CA 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91CC
1010+ 91CC              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91CC
1012+ 91CC EB               ex de,hl
1013+ 91CD 06 04            ld b,4
1014+ 91CF 2B           6 dec hl
1015+ 91D0 10 FD            djnz 6B
1016+ 91D2
1017+ 91D2 CD 03 92         call Elimina_disparo_de_base_de_datos
1018+ 91D5 E1               pop hl
1019+ 91D6 18 10            jr 7F
1020+ 91D8
1021+ 91D8              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91D8              ; HL contiene el puntero de impresión del disparo.
1023+ 91D8              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91D8
1025+ 91D8 D5           3 push de
1026+ 91D9 C5               push bc
1027+ 91DA
1028+ 91DA CD A2 8F         call Comprueba_Colision
1029+ 91DD
1030+ 91DD              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91DD
1032+ 91DD 78               ld a,b
1033+ 91DE
1034+ 91DE C1               pop bc
1035+ 91DF D1               pop de
1036+ 91E0
1037+ 91E0 EB               ex de,hl
1038+ 91E1
1039+ 91E1 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91E2 23               inc hl                                      ; _ movimiento.
1041+ 91E3 72               ld (hl),d
1042+ 91E4
1043+ 91E4 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91E5
1045+ 91E5 23               inc hl                                      ; _ en curso.
1046+ 91E6 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91E7 2B               dec hl
1048+ 91E8
1049+ 91E8 C9           7 ret
1050+ 91E9
1051+ 91E9              ; Disparo hacia abajo, (Entidad).
1052+ 91E9
1053+ 91E9 3A 54 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91EC 47               ld b,a
1055+ 91ED
1056+ 91ED CD 2C 96     4 call NextScan
1057+ 91F0 10 FB            djnz 4B
1058+ 91F2
1059+ 91F2              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91F2
1061+ 91F2 7C               ld a,h
1062+ 91F3 FE 58            cp $58
1063+ 91F5 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91F7
1065+ 91F7 EB               ex de,hl
1066+ 91F8 06 04            ld b,4
1067+ 91FA 2B           5 dec hl
1068+ 91FB 10 FD            djnz 5B
1069+ 91FD
1070+ 91FD CD 03 92         call Elimina_disparo_de_base_de_datos
1071+ 9200 E1               pop hl
1072+ 9201 18 E5            jr 7B
1073+ 9203
1074+ 9203              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9203
1076+ 9203 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9206 AF               xor a
1078+ 9207 77               ld (hl),a
1079+ 9208 54               ld d,h
1080+ 9209 5D               ld e,l
1081+ 920A 13               inc de
1082+ 920B ED B0            ldir
1083+ 920D C9               ret
1084+ 920E
1085+ 920E              ; -----------------------------------------------------------------
1086+ 920E              ;
1087+ 920E              ;   19/7/23
1088+ 920E              ;
1089+ 920E              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 920E              ;
1091+ 920E              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 920E              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 920E              ;
1094+ 920E              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 920E              ;
1096+ 920E              ;   INPUTS:
1097+ 920E              ;
1098+ 920E              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 920E              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 920E
1101+ 920E              ;   MODIFICA: A, HL, BC y DE.
1102+ 920E
1103+ 920E              Guarda_coordenadas_X
1104+ 920E
1105+ 920E 7B               ld a,e
1106+ 920F A7               and a
1107+ 9210 20 04            jr nz,1F
1108+ 9212
1109+ 9212 06 02            ld b,2
1110+ 9214 18 02            jr 2F
1111+ 9216
1112+ 9216 06 03        1 ld b,3
1113+ 9218 72           2 ld (hl),d
1114+ 9219 23               inc hl
1115+ 921A 14               inc d
1116+ 921B 10 FB            djnz 2B
1117+ 921D
1118+ 921D C9               ret
1119+ 921E
1120+ 921E              ; -----------------------------------------------------------------
1121+ 921E              ;
1122+ 921E              ;   12/04/23
1123+ 921E              ;
1124+ 921E
1125+ 921E 3A 47 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9221 A7               and a
1127+ 9222 C8               ret z
1128+ 9223
1129+ 9223 FE 04            cp 4
1130+ 9225 20 09            jr nz,1F
1131+ 9227
1132+ 9227
1133+ 9227              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9227
1135+ 9227 CD 43 90         call Detecta_colision_nave_entidad
1136+ 922A
1137+ 922A 21 47 89         ld hl,Impacto2
1138+ 922D CB 5E            bit 3,(hl)
1139+ 922F C0               ret nz                                               ; Existe colisión, RET.
1140+ 9230
1141+ 9230              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9230              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9230
1144+ 9230 21 47 89     1 ld hl,Impacto2
1145+ 9233 CB 4E            bit 1,(hl)
1146+ 9235 28 07            jr z,2F
1147+ 9237
1148+ 9237 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 923A 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 923C 18 0B            jr 3F
1151+ 923E
1152+ 923E 21 47 89     2 ld hl,Impacto2
1153+ 9241 CB 46            bit 0,(hl)
1154+ 9243 C8               ret z
1155+ 9244
1156+ 9244              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9244
1158+ 9244 21 07 89         ld hl,Ctrl_1
1159+ 9247 CB D6            set 2,(hl)
1160+ 9249
1161+ 9249 C9           3 ret
1162+ 924A
1163+ 924A              ; -----------------------------------------------------------------
1164+ 924A              ;
1165+ 924A              ;   19/7/23
1166+ 924A              ;
1167+ 924A              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 924A
1169+ 924A AF           Limpia_Coordenadas_X xor a
1170+ 924B 06 06            ld b,6
1171+ 924D 21 4C 89         ld hl,Coordenadas_X_Amadeus
1172+ 9250 77           1 ld (hl),a
1173+ 9251 23               inc hl
1174+ 9252 10 FC            djnz 1B
1175+ 9254 C9               ret
1176+ 9255
1177+ 9255              ; -----------------------------------------------------------------
1178+ 9255              ;
1179+ 9255              ;   25/04/23
1180+ 9255              ;
1181+ 9255
1182+ 9255              Determina_resultado_comparativa
1183+ 9255
1184+ 9255              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9255              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9255              ;
1187+ 9255              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9255              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9255              ;
1190+ 9255              ;   SBC HL,DE
1191+ 9255
1192+ 9255              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9255              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9255
1195+ 9255              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9255              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9255
1198+ 9255
1199+ 9255 3A DE 88         ld a,(Cuad_objeto)
1200+ 9258 FE 02            cp 2
1201+ 925A 28 26            jr z,2F
1202+ 925C 38 24            jr c,2F
1203+ 925E
1204+ 925E              ; Cuadrantes 3º y 4º
1205+ 925E
1206+ 925E E6 01            and 1
1207+ 9260 28 10            jr z,4F
1208+ 9262
1209+ 9262              ; Cuadrante 3º
1210+ 9262
1211+ 9262 7C               ld a,h
1212+ 9263 06 00            ld b,0
1213+ 9265
1214+ 9265 CD F0 92         call Compara_cositas_H3
1215+ 9268
1216+ 9268 04               inc b
1217+ 9269 05               dec b
1218+ 926A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 926B
1220+ 926B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 926C 06 00            ld b,0
1222+ 926E
1223+ 926E CD 02 93         call Compara_cositas_L3
1224+ 9271 C9               ret
1225+ 9272
1226+ 9272              ; Cuadrante 4º
1227+ 9272
1228+ 9272 7C           4 ld a,h
1229+ 9273 06 00            ld b,0
1230+ 9275
1231+ 9275 CD 14 93         call Compara_cositas_H4
1232+ 9278
1233+ 9278 04               inc b
1234+ 9279 05               dec b
1235+ 927A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 927B
1237+ 927B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 927C 06 00            ld b,0
1239+ 927E
1240+ 927E CD 2A 93         call Compara_cositas_L4
1241+ 9281 C9               ret
1242+ 9282
1243+ 9282              ; Cuadrantes 1º y 2º.
1244+ 9282
1245+ 9282 28 10        2 jr z,3F
1246+ 9284
1247+ 9284              ; 1er Cuadrante
1248+ 9284
1249+ 9284 7C               ld a,h
1250+ 9285 06 00            ld b,0
1251+ 9287
1252+ 9287 CD C8 92         call Compara_cositas_H1
1253+ 928A
1254+ 928A 04               inc b
1255+ 928B 05               dec b
1256+ 928C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 928D
1258+ 928D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 928E 06 00            ld b,0
1260+ 9290
1261+ 9290 CD DE 92         call Compara_cositas_L1
1262+ 9293 C9               ret
1263+ 9294
1264+ 9294
1265+ 9294              ; 2º Cuadrante
1266+ 9294
1267+ 9294 7C           3 ld a,h
1268+ 9295 06 00            ld b,0
1269+ 9297
1270+ 9297 CD A4 92         call Compara_cositas_H2
1271+ 929A
1272+ 929A 04               inc b
1273+ 929B 05               dec b
1274+ 929C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 929D
1276+ 929D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 929E 06 00            ld b,0
1278+ 92A0
1279+ 92A0 CD B6 92         call Compara_cositas_L2
1280+ 92A3 C9               ret
1281+ 92A4
1282+ 92A4 A7           Compara_cositas_H2 and a
1283+ 92A5 28 0D            jr z,1F
1284+ 92A7              ;    cp $fd
1285+ 92A7              ;    jr z,1F
1286+ 92A7              ;    cp $fe
1287+ 92A7              ;    jr z,1F
1288+ 92A7 FE FF            cp $ff
1289+ 92A9 28 09            jr z,1F
1290+ 92AB FE 01            cp $01
1291+ 92AD 28 05            jr z,1F
1292+ 92AF FE 02            cp $02
1293+ 92B1 28 01            jr z,1F
1294+ 92B3 C0               ret nz
1295+ 92B4 04           1 inc b
1296+ 92B5 C9               ret
1297+ 92B6
1298+ 92B6 A7           Compara_cositas_L2 and a
1299+ 92B7 28 0D            jr z,1F
1300+ 92B9              ;    cp $fd
1301+ 92B9              ;    jr z,1F
1302+ 92B9 FE FE            cp $fe
1303+ 92BB 28 09            jr z,1F
1304+ 92BD FE FF            cp $ff
1305+ 92BF 28 05            jr z,1F
1306+ 92C1 FE 01            cp $01
1307+ 92C3 28 01            jr z,1F
1308+ 92C5              ;    cp $02
1309+ 92C5              ;    jr z,1F
1310+ 92C5 C0               ret nz
1311+ 92C6 04           1 inc b
1312+ 92C7 C9               ret
1313+ 92C8
1314+ 92C8 A7           Compara_cositas_H1 and a
1315+ 92C9 28 11            jr z,1F
1316+ 92CB              ;    cp $fd
1317+ 92CB              ;    jr z,1F
1318+ 92CB              ;    cp $fe
1319+ 92CB              ;    jr z,1F
1320+ 92CB FE FF            cp $ff
1321+ 92CD 28 0D            jr z,1F
1322+ 92CF FE 01            cp $01
1323+ 92D1 28 09            jr z,1F
1324+ 92D3 FE 02            cp $02
1325+ 92D5 28 05            jr z,1F
1326+ 92D7 FE 03            cp $03
1327+ 92D9 28 01            jr z,1F
1328+ 92DB C0               ret nz
1329+ 92DC 04           1 inc b
1330+ 92DD C9               ret
1331+ 92DE
1332+ 92DE A7           Compara_cositas_L1 and a
1333+ 92DF 28 0D            jr z,1F
1334+ 92E1              ;    cp $fd
1335+ 92E1              ;    jr z,1F
1336+ 92E1              ;    cp $fe
1337+ 92E1              ;    jr z,1F
1338+ 92E1              ;    cp $ff
1339+ 92E1              ;    jr z,1F
1340+ 92E1 FE 01            cp $01
1341+ 92E3 28 09            jr z,1F
1342+ 92E5 FE 02            cp $02
1343+ 92E7 28 05            jr z,1F
1344+ 92E9 FE 03            cp $03
1345+ 92EB 28 01            jr z,1F
1346+ 92ED C0               ret nz
1347+ 92EE 04           1 inc b
1348+ 92EF C9               ret
1349+ 92F0
1350+ 92F0 A7           Compara_cositas_H3 and a
1351+ 92F1 28 0D            jr z,1F
1352+ 92F3              ;    cp $fd
1353+ 92F3              ;    jr z,1F
1354+ 92F3 FE FE            cp $fe
1355+ 92F5 28 09            jr z,1F
1356+ 92F7 FE FF            cp $ff
1357+ 92F9 28 05            jr z,1F
1358+ 92FB FE 01            cp $01
1359+ 92FD 28 01            jr z,1F
1360+ 92FF              ;    cp $02
1361+ 92FF              ;    jr z,1F
1362+ 92FF              ;    cp $03
1363+ 92FF              ;    jr z,1F
1364+ 92FF C0               ret nz
1365+ 9300 04           1 inc b
1366+ 9301 C9               ret
1367+ 9302
1368+ 9302 A7           Compara_cositas_L3 and a
1369+ 9303 28 0D            jr z,1F
1370+ 9305              ;    cp $fd
1371+ 9305              ;    jr z,1F
1372+ 9305              ;    cp $fe
1373+ 9305              ;    jr z,1F
1374+ 9305              ;    cp $ff
1375+ 9305              ;    jr z,1F
1376+ 9305 FE 01            cp $01
1377+ 9307 28 09            jr z,1F
1378+ 9309 FE 02            cp $02
1379+ 930B 28 05            jr z,1F
1380+ 930D FE 03            cp $03
1381+ 930F 28 01            jr z,1F
1382+ 9311 C0               ret nz
1383+ 9312 04           1 inc b
1384+ 9313 C9               ret
1385+ 9314
1386+ 9314 A7           Compara_cositas_H4 and a
1387+ 9315 28 11            jr z,1F
1388+ 9317 FE FD            cp $fd
1389+ 9319 28 0D            jr z,1F
1390+ 931B FE FE            cp $fe
1391+ 931D 28 09            jr z,1F
1392+ 931F FE FF            cp $ff
1393+ 9321 28 05            jr z,1F
1394+ 9323 FE 01            cp $01
1395+ 9325 28 01            jr z,1F
1396+ 9327              ;    cp $02
1397+ 9327              ;    jr z,1F
1398+ 9327              ;    cp $03
1399+ 9327              ;    jr z,1F
1400+ 9327 C0               ret nz
1401+ 9328 04           1 inc b
1402+ 9329 C9               ret
1403+ 932A
1404+ 932A A7           Compara_cositas_L4 and a
1405+ 932B 28 0D            jr z,1F
1406+ 932D              ;    cp $fd
1407+ 932D              ;    jr z,1F
1408+ 932D FE FE            cp $fe
1409+ 932F 28 09            jr z,1F
1410+ 9331 FE FF            cp $ff
1411+ 9333 28 05            jr z,1F
1412+ 9335 FE 01            cp $01
1413+ 9337 28 01            jr z,1F
1414+ 9339              ;    cp $02
1415+ 9339              ;    jr z,1F
1416+ 9339              ;    cp $03
1417+ 9339              ;    jr z,1F
1418+ 9339 C0               ret nz
1419+ 933A 04           1 inc b
1420+ 933B C9               ret
# file closed: Disparo.asm
1683  933C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 933C              ; ******************************************************************************************************************************************************************************************
   2+ 933C              ;
   3+ 933C              ; 26/06/23
   4+ 933C              ;
   5+ 933C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 933C
   7+ 933C CD 20 96     Draw call Prepara_draw
   8+ 933F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9340 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9341 28 05        	jr z,2F
  11+ 9343
  12+ 9343 3A DE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9346 18 0C        	jr 1F
  14+ 9348
  15+ 9348 2A DC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 934B 22 CC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 934E CD DD 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9351              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9351 CD 80 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9354
  21+ 9354 3A F4 88     1 ld a,(Ctrl_0)
  22+ 9357 CB 6F        	bit 5,a
  23+ 9359 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 935B
  25+ 935B CD 73 93     	call Comprueba_limite_horizontal
  26+ 935E CD 03 94     	call Comprueba_limite_vertical
  27+ 9361
  28+ 9361              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9361              ; -----------------------
  30+ 9361              ; -----------------------
  31+ 9361              ; -----------------------
  32+ 9361
  33+ 9361 CD 50 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9364 CD 87 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9367 CD E6 95     	call Define_rutina_de_impresion
  36+ 936A
  37+ 936A 3A F4 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 936D CB AF        	res 5,a											; _a ser de utilidad.
  39+ 936F 32 F4 88     	ld (Ctrl_0),a
  40+ 9372
  41+ 9372 C9           	ret
  42+ 9373
  43+ 9373              ; *******************************************************************************************************************************************************************************************
  44+ 9373              ;	21/01/23
  45+ 9373              ;
  46+ 9373              ; 	Comprueba_limite_horizontal.
  47+ 9373              ;
  48+ 9373              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9373              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9373              ;
  51+ 9373              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9373              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9373              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9373              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9373
  56+ 9373
  57+ 9373
  58+ 9373 3A F4 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9376 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9378 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 937A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 937C 32 F4 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 937F 18 09            jr 6F
  64+ 9381 CB 5F        1 bit 3,a
  65+ 9383 28 0A            jr z,2F
  66+ 9385 E6 F7            and $f7
  67+ 9387 32 F4 88         ld (Ctrl_0),a
  68+ 938A CD DD 94     6 call Inicializacion
  69+ 938D 18 5B            jr 5F
  70+ 938F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9390
  72+ 9390              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9390              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9390
  75+ 9390 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9391 2A 02 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9394 CD 3F 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9397 67           	ld h,a
  79+ 9398 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9399 CD 3F 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 939C 67           	ld h,a
  82+ 939D A7           	and a
  83+ 939E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93A0 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93A1 3A DE 88     	ld a,(Cuad_objeto)
  86+ 93A4 FE 02        	cp 2
  87+ 93A6 38 1E        	jr c,3F
  88+ 93A8 28 1C        	jr z,3F
  89+ 93AA 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93AB 28 23            jr z,7F
  91+ 93AD 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93AF 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93B1 E1           	pop hl
  94+ 93B2
  95+ 93B2              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93B2              ; _para indicar con E="2" en caso necesario.
  97+ 93B2
  98+ 93B2 E5               push hl
  99+ 93B3 C5               push bc
 100+ 93B4 CD 3F 99     	call calcula_tercio
 101+ 93B7 FE 01        	cp 1
 102+ 93B9 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93BB CD EB 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93BE 28 26            jr z,9F
 105+ 93C0 38 24            jr c,9F
 106+ 93C2 1E 00        11 ld e,0
 107+ 93C4 18 22            jr 8F
 108+ 93C6 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93C7 28 07        	jr z, 7F
 110+ 93C9 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93CB 1E 00         	ld e,0
 112+ 93CD E1           	pop hl
 113+ 93CE 18 04        	jr 4F
 114+ 93D0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93D2 18 15            jr 10F
 116+ 93D4
 117+ 93D4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93D4              ; _para indicar con E="2" en caso necesario.
 119+ 93D4
 120+ 93D4 E5           4 push hl
 121+ 93D5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93D6 CD 3F 99     	call calcula_tercio
 123+ 93D9 FE 01        	cp 1
 124+ 93DB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93DD CD EB 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93E0 28 04            jr z,9F
 127+ 93E2 30 02            jr nc,9F
 128+ 93E4 18 02        	jr 8F
 129+ 93E6 1E 02        9 ld e,2
 130+ 93E8 C1           8 pop bc
 131+ 93E9 E1           10 pop hl
 132+ 93EA C9           5 ret
 133+ 93EB
 134+ 93EB              ; --------------------
 135+ 93EB              ;
 136+ 93EB              ; 25/08/22
 137+ 93EB
 138+ 93EB CD 3F 99     Comprueba_centro call calcula_tercio
 139+ 93EE 67               ld h,a
 140+ 93EF 08           	ex af,af
 141+ 93F0 FE 02        	cp 2
 142+ 93F2 38 07        	jr c,1F
 143+ 93F4 28 05        	jr z,1F
 144+ 93F6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93F9 18 03        	jr 2F
 146+ 93FB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93FE 08           2 ex af,af
 148+ 93FF A7               and a
 149+ 9400 ED 42            sbc hl,bc
 150+ 9402 C9               ret
 151+ 9403
 152+ 9403              ; *********************************************************************************************************************************************************************************************
 153+ 9403              ;
 154+ 9403              ;   16/8/22
 155+ 9403              ;
 156+ 9403              ;	Comprueba_limite_vertical
 157+ 9403              ;
 158+ 9403              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9403              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9403              ;
 161+ 9403
 162+ 9403 2A CC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9406 7D           	ld a,l
 164+ 9407 E6 1F        	and $1F
 165+ 9409 57           	ld d,a
 166+ 940A 3A 04 89     	ld a,(Limite_vertical)
 167+ 940D BA           	cp d 											; Límite - Posición.
 168+ 940E 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 940F 3A DE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9412 CB 47        	bit 0,a
 171+ 9414 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9416
 173+ 9416              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9416
 175+ 9416 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9417 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9419
 178+ 9419              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9419              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9419
 181+ 9419 3A D0 88         ld a,(Coordenada_X)
 182+ 941C 16 0F            ld d,Centro_izquierda
 183+ 941E A7               and a
 184+ 941F 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9420 28 1E            jr z,3F
 186+ 9422 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9424              ;                                                    ; _salimos sin modificar nada.
 188+ 9424 18 0E            jr 2F
 189+ 9426 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9427 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9429
 192+ 9429              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9429              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9429
 195+ 9429 3A D0 88         ld a,(Coordenada_X)
 196+ 942C 16 10            ld d,Centro_derecha
 197+ 942E A7               and a
 198+ 942F 92               sub d
 199+ 9430 28 0E            jr z,3F
 200+ 9432 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9434              ;                                                    ; _salimos sin modificar nada.
 202+ 9434 CB 43        2 bit 0,e
 203+ 9436 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9438 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9439 CD CD 94         call Modificaccionne
 206+ 943C C1           	pop bc
 207+ 943D CD DD 94         call Inicializacion
 208+ 9440 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9441
 210+ 9441              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9441
 212+ 9441 C5           4 push bc
 213+ 9442 01 CB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9445 0A           	ld a,(bc)
 215+ 9446 3D           	dec a
 216+ 9447 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9448 7D           	ld a,l
 218+ 9449 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 944A CB 47        	bit 0,a
 220+ 944C 28 03        	jr z,5F
 221+ 944E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 944F 18 2E        	jr 7F
 223+ 9451
 224+ 9451              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9451
 226+ 9451 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9452 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9453 3A F4 88     	ld a,(Ctrl_0)
 229+ 9456 CB 4F        	bit 1,a
 230+ 9458 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 945A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 945B
 233+ 945B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 945B
 235+ 945B 1C               inc e
 236+ 945C 1D               dec e
 237+ 945D 20 07            jr nz,12F
 238+ 945F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9460 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9461 22 CC 88     	ld (Posicion_actual),hl
 241+ 9464 18 44        13 jr 9F
 242+ 9466 CB 43        12 bit 0,e
 243+ 9468 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 946A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 946A C1           	pop bc
 246+ 946B 18 D3        	jr 3B
 247+ 946D 80           14 add b
 248+ 946E 6F               ld l,a
 249+ 946F 22 CC 88     	ld (Posicion_actual),hl
 250+ 9472 CD CD 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9475 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9477 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9479 32 F4 88         ld (Ctrl_0),a
 254+ 947C F1           	pop af
 255+ 947D 18 2B        	jr 9F
 256+ 947F
 257+ 947F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 947F
 259+ 947F F5           7 push af
 260+ 9480 3A F4 88     	ld a,(Ctrl_0)
 261+ 9483 CB 47        	bit 0,a
 262+ 9485 20 1D        	jr nz,8F
 263+ 9487 F1           	pop af
 264+ 9488
 265+ 9488              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9488
 267+ 9488 1C           	inc e
 268+ 9489 1D               dec e
 269+ 948A 20 07            jr nz,10F
 270+ 948C 90           	sub b
 271+ 948D 6F               ld l,a
 272+ 948E 22 CC 88     	ld (Posicion_actual),hl
 273+ 9491 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9493              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9493 CB 43        10 bit 0,e
 276+ 9495 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9497              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9497 C1           	pop bc
 279+ 9498 18 A6        	jr 3B
 280+ 949A 90           16 sub b
 281+ 949B 6F               ld l,a
 282+ 949C 22 CC 88     	ld (Posicion_actual),hl
 283+ 949F CD CD 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94A2 18 06            jr 9F
 285+ 94A4 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94A6 32 F4 88         ld (Ctrl_0),a
 287+ 94A9 F1           	pop af
 288+ 94AA C1           9 pop bc
 289+ 94AB 1E 00        	ld e,0
 290+ 94AD CD DD 94         call Inicializacion
 291+ 94B0 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94B1 08           	ex af,af
 293+ 94B2 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94B3 18 8B            jr 3B
 295+ 94B5
 296+ 94B5              ; --------------------
 297+ 94B5
 298+ 94B5 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94B7 CD 3B 96     1 call PreviousScan
 300+ 94BA 10 FB            djnz 1B
 301+ 94BC 22 CC 88     	ld (Posicion_actual),hl
 302+ 94BF AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94C0 C9           	ret
 304+ 94C1
 305+ 94C1              ; --------------------
 306+ 94C1
 307+ 94C1 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94C3 CD 2C 96     1 call NextScan
 309+ 94C6 10 FB            djnz 1B
 310+ 94C8 22 CC 88     	ld (Posicion_actual),hl
 311+ 94CB AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94CC C9           	ret
 313+ 94CD
 314+ 94CD              ; --------------------
 315+ 94CD              ;
 316+ 94CD              ;	22/01/23
 317+ 94CD              ;
 318+ 94CD              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94CD              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94CD              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94CD
 322+ 94CD
 323+ 94CD              Modificaccionne
 324+ 94CD
 325+ 94CD 3A DE 88     	ld a,(Cuad_objeto)
 326+ 94D0 FE 02        	cp 2
 327+ 94D2 CC B5 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94D5 DC B5 94         call c,Modifica_Pos_actual
 329+ 94D8 C8           	ret z
 330+ 94D9 CD C1 94         call Modifica_Pos_actual2
 331+ 94DC C9               ret
 332+ 94DD
 333+ 94DD              ; *************************************************************************************************************************************************************************************************
 334+ 94DD              ;
 335+ 94DD              ;	13/8/22
 336+ 94DD              ;
 337+ 94DD              ;	Inicializacion
 338+ 94DD              ;
 339+ 94DD              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94DD              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94DD              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94DD              ;
 343+ 94DD              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94DD              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94DD              ;	_ desaparece/aparece.
 346+ 94DD
 347+ 94DD              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94DD              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94DD              ;
 350+ 94DD              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94DD              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94DD              ; 		   [E] ="0"
 353+ 94DD
 354+ 94DD              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94DD
 356+ 94DD CD 3F 99     Inicializacion call calcula_tercio
 357+ 94E0 28 36        	jr z,primit
 358+ 94E2 E6 02        	and 2
 359+ 94E4 20 07        	jr nz,segmit
 360+ 94E6 7D           	ld a,l
 361+ 94E7 FE 7F        	cp $7f
 362+ 94E9 38 2D        	jr c,primit
 363+ 94EB 28 2B        	jr z,primit
 364+ 94ED CD 4A 95     segmit call column
 365+ 94F0 38 13        	jr c,tercuad
 366+ 94F2 3E 04        cuarcuad ld a,4
 367+ 94F4 32 DE 88     	ld (Cuad_objeto),a
 368+ 94F7 21 20 48     	ld hl,$4820
 369+ 94FA 22 02 89     	ld (Limite_horizontal),hl
 370+ 94FD 21 04 89     	ld hl,Limite_vertical
 371+ 9500 36 0D        	ld (hl),$0d
 372+ 9502 08           	ex af,af
 373+ 9503 18 3C        	jr 1F
 374+ 9505              tercuad
 375+ 9505 3E 03        	ld a,3
 376+ 9507 32 DE 88     	ld (Cuad_objeto),a
 377+ 950A 21 20 48     	ld hl,$4820
 378+ 950D 22 02 89     	ld (Limite_horizontal),hl
 379+ 9510 21 04 89     	ld hl,Limite_vertical
 380+ 9513 36 12        	ld (hl),$12
 381+ 9515 08           	ex af,af
 382+ 9516 18 29        	jr 1F
 383+ 9518 CD 4A 95     primit call column
 384+ 951B 38 13        	jr c, primcuad
 385+ 951D              segcuad
 386+ 951D 3E 02        	ld a,2
 387+ 951F 32 DE 88     	ld (Cuad_objeto),a
 388+ 9522 21 C0 4F     	ld hl,$4fc0
 389+ 9525 22 02 89     	ld (Limite_horizontal),hl
 390+ 9528 21 04 89     	ld hl,Limite_vertical
 391+ 952B 36 0D        	ld (hl),$0d
 392+ 952D 08           	ex af,af
 393+ 952E 18 11        	jr 1F
 394+ 9530              primcuad
 395+ 9530 3E 01        	ld a,1
 396+ 9532 32 DE 88     	ld (Cuad_objeto),a
 397+ 9535 21 C0 4F     	ld hl,$4fc0
 398+ 9538 22 02 89     	ld (Limite_horizontal),hl
 399+ 953B 21 04 89     	ld hl,Limite_vertical
 400+ 953E 36 12        	ld (hl),$12
 401+ 9540 08           	ex af,af
 402+ 9541 CD CA 9C     1 call Genera_coordenadas
 403+ 9544 21 F4 88     	ld hl,Ctrl_0
 404+ 9547 CB EE        	set 5,(hl)
 405+ 9549 C9           	ret
 406+ 954A
 407+ 954A              ; ------------------------------------------------------------------------------------------------------------------
 408+ 954A
 409+ 954A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 954A              ;
 411+ 954A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 954A
 413+ 954A 7D           column ld a,l
 414+ 954B E6 1F        	and $1f
 415+ 954D FE 10         	cp $10
 416+ 954F C9            	ret
 417+ 9550
 418+ 9550              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9550              ;
 420+ 9550              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9550              ;
 422+ 9550              ; 14/12/22
 423+ 9550              ;
 424+ 9550              ;	Modifica: A y BC.
 425+ 9550
 426+ 9550 3A DE 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9553 E6 01        	and 1
 428+ 9555 28 17        	jr z,1F
 429+ 9557
 430+ 9557              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9557
 432+ 9557 3A D0 88     	ld a,(Coordenada_X)
 433+ 955A 47           	ld b,a
 434+ 955B 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 955C 79           	ld a,c
 436+ 955D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 955E 38 08        	jr c,2F
 438+ 9560 47           	ld b,a
 439+ 9561 79           	ld a,c
 440+ 9562 90           	sub b
 441+ 9563 32 01 89     	ld (Columnas),a
 442+ 9566 18 1B        	jr 4F
 443+ 9568 79           2 ld a,c
 444+ 9569 32 01 89     	ld (Columnas),a
 445+ 956C 18 15        	jr 4F
 446+ 956E
 447+ 956E              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 956E
 449+ 956E 3A D0 88     1 ld a,(Coordenada_X)
 450+ 9571 81           	add c
 451+ 9572 3D           	dec a
 452+ 9573 D6 1F        	sub $1f
 453+ 9575 38 08        	jr c,3F
 454+ 9577 47           	ld b,a
 455+ 9578 79           	ld a,c
 456+ 9579 90           	sub b
 457+ 957A 32 01 89     	ld (Columnas),a
 458+ 957D 18 04        	jr 4F
 459+ 957F 79           3 ld a,c
 460+ 9580 32 01 89     	ld (Columnas),a
 461+ 9583 D9           4 exx
 462+ 9584 4F           	ld c,a
 463+ 9585 D9           	exx
 464+ 9586 C9            ret
 465+ 9587
 466+ 9587              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9587              ;
 468+ 9587              ;   19/7/23
 469+ 9587              ;
 470+ 9587              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9587              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9587              ;
 473+ 9587              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9587              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9587              ;
 476+ 9587              ;	DESTRUYE: HL,B Y A.
 477+ 9587
 478+ 9587 3A DE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 958A FE 02        	cp 2
 480+ 958C 38 18        	jr c,1F
 481+ 958E 28 16        	jr z,1F
 482+ 9590 E6 01        	and 1
 483+ 9592 28 0D        	jr z,3F
 484+ 9594
 485+ 9594              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9594
 487+ 9594 CD DA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9597
 489+ 9597 7D           9 ld a,l
 490+ 9598 E6 1F        	and $1f
 491+ 959A 28 2A        	jr z,7F
 492+ 959C 2B           	dec hl
 493+ 959D 10 F8        	djnz 9B
 494+ 959F 18 25        	jr 7F
 495+ 95A1
 496+ 95A1              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95A1
 498+ 95A1 2A CC 88     3 ld hl,(Posicion_actual)
 499+ 95A4 18 20        	jr 7F
 500+ 95A6
 501+ 95A6 28 14        1 jr z,2F
 502+ 95A8
 503+ 95A8              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95A8
 505+ 95A8 CD DA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95AB
 507+ 95AB 7D           4 ld a,l
 508+ 95AC E6 1F        	and $1f
 509+ 95AE 28 03        	jr z,6F
 510+ 95B0 2B           	dec hl
 511+ 95B1 10 F8        	djnz 4B
 512+ 95B3 06 0F        6 ld b,15
 513+ 95B5 CD 3B 96     5 call PreviousScan
 514+ 95B8 10 FB        	djnz 5B
 515+ 95BA 18 0A        	jr 7F
 516+ 95BC
 517+ 95BC              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95BC
 519+ 95BC CD DA 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95BF 06 0F        	ld b,15
 521+ 95C1 CD 3B 96     8 call PreviousScan
 522+ 95C4 10 FB        	djnz 8B
 523+ 95C6
 524+ 95C6 E5           7 push hl
 525+ 95C7 DD E1        	pop ix
 526+ 95C9
 527+ 95C9 2A CE 88     	ld hl,(Puntero_objeto)
 528+ 95CC E5           	push hl
 529+ 95CD FD E1        	pop iy
 530+ 95CF
 531+ 95CF              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95CF
 533+ 95CF 3A F4 88     	ld a,(Ctrl_0)
 534+ 95D2 CB 77        	bit 6,a
 535+ 95D4 C8           	ret z
 536+ 95D5
 537+ 95D5              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95D5              ; _ entidad / Amadeus´.
 539+ 95D5
 540+ 95D5 DD 22 52 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95D9
 542+ 95D9 C9           	ret
 543+ 95DA
 544+ 95DA              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95DA              ;
 546+ 95DA              ;	2/1/23
 547+ 95DA              ;
 548+ 95DA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95DA              ;
 550+ 95DA              ;	Tras esta rutina tenemos:
 551+ 95DA              ;
 552+ 95DA              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95DA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95DA              ;
 555+ 95DA              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95DA
 557+ 95DA 2A CC 88     Operandos ld hl,(Posicion_actual)
 558+ 95DD 3A 01 89     	ld a,(Columnas)
 559+ 95E0 3D           	dec a
 560+ 95E1 20 01        	jr nz,1F
 561+ 95E3 3C           	inc a
 562+ 95E4 47           1 ld b,a
 563+ 95E5 C9           	ret
 564+ 95E6
 565+ 95E6              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95E6              ;
 567+ 95E6              ;	3/1/23
 568+ 95E6              ;
 569+ 95E6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95E6              ;
 571+ 95E6              ;	Destruye: A,B,HL y DE.
 572+ 95E6
 573+ 95E6              Define_rutina_de_impresion
 574+ 95E6
 575+ 95E6 3A CB 88     	ld a,(Columns)
 576+ 95E9 47           	ld b,a
 577+ 95EA 3A 01 89     	ld a,(Columnas)
 578+ 95ED B8           	cp b
 579+ 95EE 20 0D        	jr nz,2f
 580+ 95F0
 581+ 95F0              ;	La entidad se imprime entera.
 582+ 95F0
 583+ 95F0 21 0F 97     	ld hl, Indice_entidades_completas
 584+ 95F3 E6 01        	and 1
 585+ 95F5 28 02        	jr z,1F
 586+ 95F7
 587+ 95F7 23           	inc hl
 588+ 95F8 23           	inc hl
 589+ 95F9
 590+ 95F9 CD 8C 8C     1 call Extrae_address
 591+ 95FC C9           	ret		;	ret
 592+ 95FD
 593+ 95FD              ;	La entidad no se imprime entera en pantalla.
 594+ 95FD
 595+ 95FD 3A DE 88     2 ld a,(Cuad_objeto)
 596+ 9600 E6 01        	and 1
 597+ 9602 28 17        	jr z,3F
 598+ 9604
 599+ 9604              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9604
 601+ 9604 21 13 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9607 3A CB 88     4 ld a,(Columns)
 603+ 960A E6 01        	and 1
 604+ 960C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 960E
 606+ 960E 23           	inc hl
 607+ 960F 23           	inc hl
 608+ 9610
 609+ 9610 3A 01 89     	ld a,(Columnas)
 610+ 9613 E6 01        	and 1
 611+ 9615 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9617
 613+ 9617 23           	inc hl
 614+ 9618 23           	inc hl
 615+ 9619
 616+ 9619 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 961B
 618+ 961B 21 19 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 961E 18 E7        	jr 4B
 620+ 9620
 621+ 9620              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9620              ;
 623+ 9620              ;	Prepara_draw
 624+ 9620              ;
 625+ 9620              ;	Es una rutina de carga.
 626+ 9620              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9620              ;
 628+ 9620              ;	FUNCIONAMIENTO:
 629+ 9620              ;
 630+ 9620              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9620              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9620              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9620              ;
 634+ 9620              ;	DESTRUYE:
 635+ 9620              ;
 636+ 9620              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9620
 638+ 9620 21 CA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9623 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9624 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9625 4E           	ld c,(hl)
 642+ 9626 2A CC 88     	ld hl,(Posicion_actual)
 643+ 9629 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 962B C9           	ret
 645+ 962C
 646+ 962C              ;----------------------------------------------------------------------------------------------------------------
 647+ 962C              ;
 648+ 962C              ;	5/08/22
 649+ 962C              ;
 650+ 962C              ;   NextScan.
 651+ 962C              ;
 652+ 962C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 962C              ;
 654+ 962C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 962C              ;
 656+ 962C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 962C              ;
 658+ 962C              ;       DESTRUIDOS: AF y HL !!!
 659+ 962C              ;
 660+ 962C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 962C              ;
 662+ 962C
 663+ 962C 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 962D 7C               ld a,h
 665+ 962E E6 07            and 7
 666+ 9630 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9631
 668+ 9631 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9632 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9634 6F               ld l,a
 671+ 9635 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9636
 673+ 9636 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9637 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9639 67               ld h,a
 676+ 963A C9               ret
 677+ 963B
 678+ 963B              ;----------------------------------------------------------------------------------------------------------------
 679+ 963B              ;
 680+ 963B              ;	5/08/22
 681+ 963B              ;
 682+ 963B              ;   PreviousScan.
 683+ 963B              ;
 684+ 963B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 963B              ;
 686+ 963B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 963B              ;
 688+ 963B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 963B              ;
 690+ 963B              ;       DESTRUIDOS: AF y HL !!!
 691+ 963B              ;
 692+ 963B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 963B              ;
 694+ 963B
 695+ 963B 7C           PreviousScan ld a,h
 696+ 963C 25               dec h               ; Dec H.
 697+ 963D E6 07            and 7
 698+ 963F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9640
 700+ 9640 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9641 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9643 6F               ld l,a
 703+ 9644 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9645
 705+ 9645 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9646 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9648 67               ld h,a
 708+ 9649 C9               ret
 709+ 964A
 710+ 964A              ; -----------------------------------------------------------------------------------
 711+ 964A              ;
 712+ 964A              ;	31/7/23
 713+ 964A              ;
 714+ 964A              ;	Rutina principal de pintado de entidades.
 715+ 964A              ;	Extrae la foto del frame, (entidades).
 716+ 964A
 717+ 964A              Extrae_foto_entidades
 718+ 964A
 719+ 964A 21 01 70     	ld hl,Album_de_fotos+1
 720+ 964D 7E           	ld a,(hl)
 721+ 964E A7           	and a
 722+ 964F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9650
 724+ 9650              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9650
 726+ 9650 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9653 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 9654 C8           	ret z
 729+ 9655
 730+ 9655              ; -----------------------------------
 731+ 9655
 732+ 9655 ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9659 31 00 70     	ld sp,Album_de_fotos
 734+ 965C
 735+ 965C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 965E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 965F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9660
 739+ 9660 ED 73 1A 89  	ld (Stack_2),sp
 740+ 9664 ED 7B 18 89  	ld sp,(Stack)
 741+ 9668
 742+ 9668              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9668
 744+ 9668 3E CD        	ld a,$cd
 745+ 966A 32 72 96     	ld (Imprime),a
 746+ 966D EB           	ex de,hl
 747+ 966E 22 73 96     	ld (Imprime+1),hl
 748+ 9671 EB           	ex de,hl
 749+ 9672
 750+ 9672              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9672
 752+ 9672 00 00 00     Imprime db 0,0,0
 753+ 9675
 754+ 9675 ED 73 18 89  	ld (Stack),sp
 755+ 9679
 756+ 9679 3A 13 89     	ld a,(Numero_de_malotes)
 757+ 967C 3D           	dec a
 758+ 967D 28 09        	jr z,1F
 759+ 967F 32 13 89      	ld (Numero_de_malotes),a
 760+ 9682
 761+ 9682 ED 7B 1A 89  	ld sp,(Stack_2)
 762+ 9686 18 D4        	jr 2B
 763+ 9688
 764+ 9688 AF           1 xor a
 765+ 9689 32 1A 89     	ld (Stack_2),a
 766+ 968C
 767+ 968C C9           	ret
 768+ 968D
 769+ 968D              ; -----------------------------------------------------------------------------------
 770+ 968D              ;
 771+ 968D              ;	28/2/23
 772+ 968D              ;
 773+ 968D              ;	Pinta los disparos generados.
 774+ 968D
 775+ 968D              Extrae_foto_disparos
 776+ 968D
 777+ 968D 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9690 7E               ld a,(hl)
 779+ 9691 A7               and a
 780+ 9692 C8               ret z
 781+ 9693
 782+ 9693 3A 42 89     	ld a,(Numero_de_disparotes)
 783+ 9696 A7           	and a
 784+ 9697 C8           	ret z
 785+ 9698 ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 969C 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 969F
 788+ 969F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 96A1 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 96A2 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 96A3
 792+ 96A3 ED 73 1A 89  	ld (Stack_2),sp
 793+ 96A7 ED 7B 18 89  	ld sp,(Stack)
 794+ 96AB
 795+ 96AB              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96AB
 797+ 96AB 3E CD        	ld a,$cd
 798+ 96AD 32 B5 96     	ld (Imprime2),a
 799+ 96B0 EB           	ex de,hl
 800+ 96B1 22 B6 96     	ld (Imprime2+1),hl
 801+ 96B4 EB           	ex de,hl
 802+ 96B5
 803+ 96B5              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96B5
 805+ 96B5 00 00 00     Imprime2 db 0,0,0
 806+ 96B8
 807+ 96B8 3A 42 89     	ld a,(Numero_de_disparotes)
 808+ 96BB 3D           	dec a
 809+ 96BC 28 09        	jr z,1F
 810+ 96BE 32 42 89      	ld (Numero_de_disparotes),a
 811+ 96C1
 812+ 96C1 ED 7B 1A 89  	ld sp,(Stack_2)
 813+ 96C5 18 D8        	jr 2B
 814+ 96C7
 815+ 96C7 AF           1 xor a
 816+ 96C8 32 1A 89     	ld (Stack_2),a
 817+ 96CB C9           	ret
 818+ 96CC
 819+ 96CC              ; -----------------------------------------------------------------------------------
 820+ 96CC              ;
 821+ 96CC              ;	4/9/23
 822+ 96CC              ;
 823+ 96CC              ;	Rutina principal de pintado de Amadeus.
 824+ 96CC              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96CC
 826+ 96CC 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96CF 7E           	ld a,(hl)
 828+ 96D0 A7           	and a
 829+ 96D1 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96D2
 831+ 96D2 3A 13 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96D5 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96D6 C8           	ret z
 834+ 96D7
 835+ 96D7              ; -----------------------------------
 836+ 96D7
 837+ 96D7 ED 73 18 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96DB 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96DE
 840+ 96DE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96E0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96E1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96E2
 844+ 96E2 ED 73 1A 89  	ld (Stack_2),sp
 845+ 96E6 ED 7B 18 89  	ld sp,(Stack)
 846+ 96EA
 847+ 96EA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96EA
 849+ 96EA 3E CD        	ld a,$cd
 850+ 96EC 32 F4 96     	ld (Imprime_Amadeus),a
 851+ 96EF EB           	ex de,hl
 852+ 96F0 22 F5 96     	ld (Imprime_Amadeus+1),hl
 853+ 96F3 EB           	ex de,hl
 854+ 96F4
 855+ 96F4              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96F4
 857+ 96F4 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96F7
 859+ 96F7 ED 73 18 89  	ld (Stack),sp
 860+ 96FB
 861+ 96FB 3A 13 89     	ld a,(Numero_de_malotes)
 862+ 96FE 3D           	dec a
 863+ 96FF 28 09        	jr z,1F
 864+ 9701 32 13 89      	ld (Numero_de_malotes),a
 865+ 9704
 866+ 9704 ED 7B 1A 89  	ld sp,(Stack_2)
 867+ 9708 18 D4        	jr 2B
 868+ 970A
 869+ 970A AF           1 xor a
 870+ 970B 32 1A 89     	ld (Stack_2),a
 871+ 970E
 872+ 970E C9           	ret
# file closed: Draw_XOR.asm
1684  970F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 970F              ;   índices de Rutinas de impresión.
   2+ 970F
   3+ 970F 1F 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9711 4C 97            defw Pinta_Amadeus_3x2
   5+ 9713
   6+ 9713 A2 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9715 42 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9717 F6 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9719
  10+ 9719 CC 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 971B D0 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 971D 84 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 971F
  14+ 971F
  15+ 971F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 971F              ;
  17+ 971F              ;   12/12/22
  18+ 971F              ;
  19+ 971F              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 971F              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 971F              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 971F              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 971F              ;
  24+ 971F              ;   Modifica: DE y HL.
  25+ 971F
  26+ 971F ED 73 18 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9723 FD F9        	ld sp,iy
  28+ 9725 06 10            ld b,16
  29+ 9727 D1           1 pop de
  30+ 9728 7B               ld a,e
  31+ 9729 AE               xor (hl)
  32+ 972A 77           	ld (hl),a
  33+ 972B 23           	inc hl
  34+ 972C 7A               ld a,d
  35+ 972D AE               xor (hl)
  36+ 972E 77           	ld (hl),a
  37+ 972F 2B           	dec hl
  38+ 9730 24           	inc h
  39+ 9731 7C               ld a,h
  40+ 9732 E6 07            and 7
  41+ 9734 20 0A            jr nz,2F
  42+ 9736 7D               ld a,l
  43+ 9737 C6 20            add a,$20
  44+ 9739 6F               ld l,a
  45+ 973A 38 04            jr c,2F
  46+ 973C 7C               ld a,h
  47+ 973D D6 08            sub 8
  48+ 973F 67               ld h,a
  49+ 9740 7C           2 ld a,h
  50+ 9741 FE 58            cp $58
  51+ 9743 28 02            jr z,3F
  52+ 9745 10 E0            djnz 1B
  53+ 9747 ED 7B 18 89  3 ld sp,(Stack)
  54+ 974B C9           	ret
  55+ 974C
  56+ 974C ED 73 18 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9750 FD F9        	ld sp,iy
  58+ 9752 06 08            ld b,8
  59+ 9754 D1           1 pop de
  60+ 9755 7B               ld a,e
  61+ 9756 AE               xor (hl)
  62+ 9757 77           	ld (hl),a
  63+ 9758 23           	inc hl
  64+ 9759 7A               ld a,d
  65+ 975A AE               xor (hl)
  66+ 975B 77           	ld (hl),a
  67+ 975C 23           	inc hl
  68+ 975D D1           	pop de
  69+ 975E 7B               ld a,e
  70+ 975F AE               xor (hl)
  71+ 9760 77           	ld (hl),a
  72+ 9761 2B           	dec hl
  73+ 9762 2B           	dec hl
  74+ 9763 24           	inc h
  75+ 9764 7C               ld a,h
  76+ 9765 E6 07            and 7
  77+ 9767 20 0A            jr nz,2F
  78+ 9769 7D               ld a,l
  79+ 976A C6 20            add a,$20
  80+ 976C 6F               ld l,a
  81+ 976D 38 04            jr c,2F
  82+ 976F 7C               ld a,h
  83+ 9770 D6 08            sub 8
  84+ 9772 67               ld h,a
  85+ 9773 7C           2 ld a,h
  86+ 9774 FE 58            cp $58
  87+ 9776 28 25            jr z,4F
  88+ 9778 7A               ld a,d
  89+ 9779 AE               xor (hl)
  90+ 977A 77               ld (hl),a
  91+ 977B D1           	pop de
  92+ 977C 23           	inc hl
  93+ 977D 7B               ld a,e
  94+ 977E AE               xor (hl)
  95+ 977F 77           	ld (hl),a
  96+ 9780 23           	inc hl
  97+ 9781 7A               ld a,d
  98+ 9782 AE               xor (hl)
  99+ 9783 77           	ld (hl),a
 100+ 9784 2B           	dec hl
 101+ 9785 2B           	dec hl
 102+ 9786 24           	inc h
 103+ 9787 7C               ld a,h
 104+ 9788 E6 07            and 7
 105+ 978A 20 0A            jr nz,3F
 106+ 978C 7D               ld a,l
 107+ 978D C6 20            add a,$20
 108+ 978F 6F               ld l,a
 109+ 9790 38 04            jr c,3F
 110+ 9792 7C               ld a,h
 111+ 9793 D6 08            sub 8
 112+ 9795 67               ld h,a
 113+ 9796 7C           3 ld a,h
 114+ 9797 FE 58            cp $58
 115+ 9799 28 02            jr z,4F
 116+ 979B 10 B7            djnz 1B
 117+ 979D ED 7B 18 89  4 ld sp,(Stack)
 118+ 97A1 C9           	ret
 119+ 97A2
 120+ 97A2              ; ---------------------------------------------------
 121+ 97A2
 122+ 97A2 ED 73 18 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97A6 FD F9        	ld sp,iy
 124+ 97A8
 125+ 97A8              ; >>>
 126+ 97A8
 127+ 97A8 06 10            ld b,16
 128+ 97AA D1           1 pop de
 129+ 97AB 7A           	ld a,d
 130+ 97AC AE           	xor (hl)
 131+ 97AD 77           	ld (hl),a
 132+ 97AE 24           	inc h
 133+ 97AF 7C               ld a,h
 134+ 97B0 E6 07            and 7
 135+ 97B2 20 0C            jr nz,2F
 136+ 97B4 7D               ld a,l
 137+ 97B5 C6 20            add a,$20
 138+ 97B7 6F               ld l,a
 139+ 97B8 38 06            jr c,2F
 140+ 97BA 7C               ld a,h
 141+ 97BB D6 08            sub 8
 142+ 97BD 67               ld h,a
 143+ 97BE 18 00            jr 2F
 144+ 97C0 7C           2 ld a,h
 145+ 97C1 FE 58            cp $58
 146+ 97C3 28 02            jr z,3F
 147+ 97C5 10 E3            djnz 1B
 148+ 97C7 ED 7B 18 89  3 ld sp,(Stack)
 149+ 97CB C9           	ret
 150+ 97CC
 151+ 97CC ED 73 18 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97D0 FD F9        	ld sp,iy
 153+ 97D2
 154+ 97D2              ; >>>
 155+ 97D2
 156+ 97D2 06 10            ld b,16
 157+ 97D4 D1           1 pop de
 158+ 97D5 7B           	ld a,e
 159+ 97D6 AE           	xor (hl)
 160+ 97D7 77           	ld (hl),a
 161+ 97D8 24           	inc h
 162+ 97D9 7C               ld a,h
 163+ 97DA E6 07            and 7
 164+ 97DC 20 0C            jr nz,2F
 165+ 97DE 7D               ld a,l
 166+ 97DF C6 20            add a,$20
 167+ 97E1 6F               ld l,a
 168+ 97E2 38 06            jr c,2F
 169+ 97E4 7C               ld a,h
 170+ 97E5 D6 08            sub 8
 171+ 97E7 67               ld h,a
 172+ 97E8 18 00            jr 2F
 173+ 97EA 7C           2 ld a,h
 174+ 97EB FE 58            cp $58
 175+ 97ED 28 02            jr z,3F
 176+ 97EF 10 E3            djnz 1B
 177+ 97F1 ED 7B 18 89  3 ld sp,(Stack)
 178+ 97F5 C9           	ret
 179+ 97F6
 180+ 97F6              ; ---------------------------------------------------
 181+ 97F6
 182+ 97F6 ED 73 18 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97FA FD F9        	ld sp,iy
 184+ 97FC 06 08            ld b,8
 185+ 97FE D1           1 pop de
 186+ 97FF 7A           	ld a,d
 187+ 9800 AE           	xor (hl)
 188+ 9801 77           	ld (hl),a
 189+ 9802 23           	inc hl
 190+ 9803 D1           	pop de
 191+ 9804 7B           	ld a,e
 192+ 9805 AE           	xor (hl)
 193+ 9806 77           	ld (hl),a
 194+ 9807 2B           	dec hl
 195+ 9808 24            	inc h
 196+ 9809 7C               ld a,h
 197+ 980A E6 07            and 7
 198+ 980C 20 0A            jr nz,2F
 199+ 980E 7D               ld a,l
 200+ 980F C6 20            add a,$20
 201+ 9811 6F               ld l,a
 202+ 9812 38 04            jr c,2F
 203+ 9814 7C               ld a,h
 204+ 9815 D6 08            sub 8
 205+ 9817 67               ld h,a
 206+ 9818 7C           2 ld a,h
 207+ 9819 FE 58            cp $58
 208+ 981B 28 20            jr z,4F
 209+ 981D D1               pop de
 210+ 981E 7B           	ld a,e
 211+ 981F AE           	xor (hl)
 212+ 9820 77           	ld (hl),a
 213+ 9821 23           	inc hl
 214+ 9822 7A           	ld a,d
 215+ 9823 AE           	xor (hl)
 216+ 9824 77           	ld (hl),a
 217+ 9825 2B           	dec hl
 218+ 9826 24           	inc h
 219+ 9827 7C               ld a,h
 220+ 9828 E6 07            and 7
 221+ 982A 20 0A            jr nz,3F
 222+ 982C 7D               ld a,l
 223+ 982D C6 20            add a,$20
 224+ 982F 6F               ld l,a
 225+ 9830 38 04            jr c,3F
 226+ 9832 7C               ld a,h
 227+ 9833 D6 08            sub 8
 228+ 9835 67               ld h,a
 229+ 9836 7C           3 ld a,h
 230+ 9837 FE 58            cp $58
 231+ 9839 28 02            jr z,4F
 232+ 983B 10 C1            djnz 1B
 233+ 983D ED 7B 18 89  4 ld sp,(Stack)
 234+ 9841 C9           	ret
 235+ 9842
 236+ 9842 ED 73 18 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9846 FD F9        	ld sp,iy
 238+ 9848 06 08            ld b,8
 239+ 984A D1           1 pop de
 240+ 984B D1           	pop de
 241+ 984C 7B           	ld a,e
 242+ 984D AE           	xor (hl)
 243+ 984E 77           	ld (hl),a
 244+ 984F 24            	inc h
 245+ 9850 7C               ld a,h
 246+ 9851 E6 07            and 7
 247+ 9853 20 0A            jr nz,2F
 248+ 9855 7D               ld a,l
 249+ 9856 C6 20            add a,$20
 250+ 9858 6F               ld l,a
 251+ 9859 38 04            jr c,2F
 252+ 985B 7C               ld a,h
 253+ 985C D6 08            sub 8
 254+ 985E 67               ld h,a
 255+ 985F 7C           2 ld a,h
 256+ 9860 FE 58            cp $58
 257+ 9862 28 1B            jr z,4F
 258+ 9864 D1               pop de
 259+ 9865 7A           	ld a,d
 260+ 9866 AE           	xor (hl)
 261+ 9867 77           	ld (hl),a
 262+ 9868 24           	inc h
 263+ 9869 7C               ld a,h
 264+ 986A E6 07            and 7
 265+ 986C 20 0A            jr nz,3F
 266+ 986E 7D               ld a,l
 267+ 986F C6 20            add a,$20
 268+ 9871 6F               ld l,a
 269+ 9872 38 04            jr c,3F
 270+ 9874 7C               ld a,h
 271+ 9875 D6 08            sub 8
 272+ 9877 67               ld h,a
 273+ 9878 7C           3 ld a,h
 274+ 9879 FE 58            cp $58
 275+ 987B 28 02            jr z,4F
 276+ 987D 10 CB            djnz 1B
 277+ 987F ED 7B 18 89  4 ld sp,(Stack)
 278+ 9883 C9           	ret
 279+ 9884
 280+ 9884 ED 73 18 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9888 FD F9        	ld sp,iy
 282+ 988A 06 08            ld b,8
 283+ 988C D1           1 pop de
 284+ 988D 7B           	ld a,e
 285+ 988E AE           	xor (hl)
 286+ 988F 77           	ld (hl),a
 287+ 9890 23           	inc hl
 288+ 9891 7A           	ld a,d
 289+ 9892 AE           	xor (hl)
 290+ 9893 77           	ld (hl),a
 291+ 9894 2B           	dec hl
 292+ 9895 24             	inc h
 293+ 9896 7C               ld a,h
 294+ 9897 E6 07            and 7
 295+ 9899 20 0A            jr nz,2F
 296+ 989B 7D               ld a,l
 297+ 989C C6 20            add a,$20
 298+ 989E 6F               ld l,a
 299+ 989F 38 04            jr c,2F
 300+ 98A1 7C               ld a,h
 301+ 98A2 D6 08            sub 8
 302+ 98A4 67               ld h,a
 303+ 98A5 7C           2 ld a,h
 304+ 98A6 FE 58            cp $58
 305+ 98A8 28 21            jr z,4F
 306+ 98AA D1               pop de
 307+ 98AB 7A           	ld a,d
 308+ 98AC AE           	xor (hl)
 309+ 98AD 77           	ld (hl),a
 310+ 98AE 23           	inc hl
 311+ 98AF D1               pop de
 312+ 98B0 7B           	ld a,e
 313+ 98B1 AE           	xor (hl)
 314+ 98B2 77           	ld (hl),a
 315+ 98B3 2B           	dec hl
 316+ 98B4 24           	inc h
 317+ 98B5 7C               ld a,h
 318+ 98B6 E6 07            and 7
 319+ 98B8 20 0A            jr nz,3F
 320+ 98BA 7D               ld a,l
 321+ 98BB C6 20            add a,$20
 322+ 98BD 6F               ld l,a
 323+ 98BE 38 04            jr c,3F
 324+ 98C0 7C               ld a,h
 325+ 98C1 D6 08            sub 8
 326+ 98C3 67               ld h,a
 327+ 98C4 7C           3 ld a,h
 328+ 98C5 FE 58            cp $58
 329+ 98C7 28 02            jr z,4F
 330+ 98C9 10 C1            djnz 1B
 331+ 98CB ED 7B 18 89  4 ld sp,(Stack)
 332+ 98CF C9           	ret
 333+ 98D0
 334+ 98D0 ED 73 18 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98D4 FD F9        	ld sp,iy
 336+ 98D6 06 08            ld b,8
 337+ 98D8 D1           1 pop de
 338+ 98D9 7B           	ld a,e
 339+ 98DA AE           	xor (hl)
 340+ 98DB 77           	ld (hl),a
 341+ 98DC 24            	inc h
 342+ 98DD 7C               ld a,h
 343+ 98DE E6 07            and 7
 344+ 98E0 20 0A            jr nz,2F
 345+ 98E2 7D               ld a,l
 346+ 98E3 C6 20            add a,$20
 347+ 98E5 6F               ld l,a
 348+ 98E6 38 04            jr c,2F
 349+ 98E8 7C               ld a,h
 350+ 98E9 D6 08            sub 8
 351+ 98EB 67               ld h,a
 352+ 98EC 7C           2 ld a,h
 353+ 98ED FE 58            cp $58
 354+ 98EF 28 1C            jr z,4F
 355+ 98F1 D1               pop de
 356+ 98F2 7A           	ld a,d
 357+ 98F3 AE           	xor (hl)
 358+ 98F4 77           	ld (hl),a
 359+ 98F5 24           	inc h
 360+ 98F6 7C               ld a,h
 361+ 98F7 E6 07            and 7
 362+ 98F9 20 0A            jr nz,3F
 363+ 98FB 7D               ld a,l
 364+ 98FC C6 20            add a,$20
 365+ 98FE 6F               ld l,a
 366+ 98FF 38 04            jr c,3F
 367+ 9901 7C               ld a,h
 368+ 9902 D6 08            sub 8
 369+ 9904 67               ld h,a
 370+ 9905 7C           3 ld a,h
 371+ 9906 FE 58            cp $58
 372+ 9908 28 03            jr z,4F
 373+ 990A D1               pop de
 374+ 990B 10 CB            djnz 1B
 375+ 990D ED 7B 18 89  4 ld sp,(Stack)
 376+ 9911 C9           	ret
 377+ 9912
 378+ 9912              ; ---------------------------------------------------
 379+ 9912              ;
 380+ 9912              ;   27/02/23
 381+ 9912              ;
 382+ 9912              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9912              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9912              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9912
 386+ 9912 ED 73 18 89  Pinta_Disparo ld (Stack),sp
 387+ 9916 FD F9            ld sp,iy
 388+ 9918 06 03            ld b,3
 389+ 991A D1           1 pop de
 390+ 991B 7B               ld a,e
 391+ 991C AE               xor (hl)
 392+ 991D 77               ld (hl),a
 393+ 991E 23               inc hl
 394+ 991F 7A               ld a,d
 395+ 9920 AE               xor (hl)
 396+ 9921 77               ld (hl),a
 397+ 9922 2B               dec hl
 398+ 9923
 399+ 9923 24               inc h
 400+ 9924 7C               ld a,h
 401+ 9925 E6 07            and 7
 402+ 9927 20 0A            jr nz,2F
 403+ 9929 7D               ld a,l
 404+ 992A C6 20            add a,$20
 405+ 992C 6F               ld l,a
 406+ 992D 38 04            jr c,2F
 407+ 992F 7C               ld a,h
 408+ 9930 D6 08            sub 8
 409+ 9932 67               ld h,a
 410+ 9933 7C           2 ld a,h
 411+ 9934 FE 58            cp $58
 412+ 9936 28 02            jr z,3F
 413+ 9938
 414+ 9938 10 E0            djnz 1B
 415+ 993A ED 7B 18 89  3 ld sp,(Stack)
 416+ 993E C9               ret
 417+ 993F
# file closed: Rutinas_de_impresion_sprites.asm
1685  993F              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 993F              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 993F              ;
   3+ 993F              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 993F              ;
   5+ 993F              ; *****************************************************************************************************************************************************************************************
   6+ 993F              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 993F
   8+ 993F 7C           calcula_tercio ld a,h
   9+ 9940 E6 18        	and $18
  10+ 9942 CB 2F        	sra a
  11+ 9944 CB 2F        	sra a
  12+ 9946 CB 2F        	sra a
  13+ 9948 C9           	ret
  14+ 9949
# file closed: calcula_tercio.asm
1686  9949              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9949              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9949              ;
   3+ 9949              ;
   4+ 9949              ;	CLS.
   5+ 9949              ;
   6+ 9949              ;	Limpia la pantalla y define sus atributos.
   7+ 9949              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9949              ;
   9+ 9949              ;	COLORES: 0 ..... NEGRO
  10+ 9949              ;    		 1 ..... AZUL
  11+ 9949              ; 			 2 ..... ROJO
  12+ 9949              ;			 3 ..... MAGENTA
  13+ 9949              ; 			 4 ..... VERDE
  14+ 9949              ; 			 5 ..... CIAN
  15+ 9949              ;			 6 ..... AMARILLO
  16+ 9949              ; 			 7 ..... BLANCO
  17+ 9949              ;
  18+ 9949              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9949              ;
  20+ 9949              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9949
  22+ 9949
  23+ 9949 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 994C 11 01 40     	LD DE,$4001
  25+ 994F 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9952 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9954 ED B0        	LDIR
  28+ 9956 01 FF 02     	LD BC,767
  29+ 9959 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 995A ED B0        	LDIR
  31+ 995C C9           	ret
  32+ 995D
# file closed: Cls.asm
1687  995D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 995D              ; ******************************************************************************************************************************************************************************************
   2+ 995D              ;
   3+ 995D              ;   20/05/23
   4+ 995D              ;
   5+ 995D              ;	Recompone_posicion_inicio
   6+ 995D              ;
   7+ 995D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 995D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 995D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 995D              ;	_ a una u otra rutina.
  11+ 995D
  12+ 995D              Recompone_posicion_inicio
  13+ 995D
  14+ 995D 2A DC 88     	ld hl,(Posicion_inicio)
  15+ 9960 7D           	ld a,l
  16+ 9961 E6 1F        	and $1f
  17+ 9963 28 16        	jr z,1F
  18+ 9965
  19+ 9965 FE 1F        	cp $1f
  20+ 9967 28 0D        	jr z,3F
  21+ 9969
  22+ 9969 21 05 89     	ld hl,Ctrl_2
  23+ 996C CB C6        	set 0,(hl)
  24+ 996E 2A CE 88     	ld hl,(Puntero_objeto)
  25+ 9971 22 08 89     	ld (Repone_puntero_objeto),hl
  26+ 9974 18 08        	jr 2F
  27+ 9976
  28+ 9976 CD 17 9B     3 call Mov_left
  29+ 9979 18 03        	jr 2F
  30+ 997B
  31+ 997B CD F9 99     1 call Mov_right
  32+ 997E 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9981 22 CE 88     	ld (Puntero_objeto),hl
  34+ 9984 C9           	ret
  35+ 9985
  36+ 9985              ; ******************************************************************************************************************************************************************************************
  37+ 9985              ;
  38+ 9985              ;   27/05/23
  39+ 9985              ;
  40+ 9985              ;	Mov_down
  41+ 9985              ;
  42+ 9985              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9985              ;
  44+ 9985              ;
  45+ 9985              Mov_down
  46+ 9985
  47+ 9985 CD E7 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9988              ;																	; _ repone (Puntero_objeto).
  49+ 9988 21 F4 88     	ld hl,Ctrl_0
  50+ 998B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 998D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 998D              ; 																	; _ en el caso de que no lo haya.
  53+ 998D 3A E2 88     	ld a,(Vel_down)
  54+ 9990 47           	ld b,a
  55+ 9991 2A CC 88         ld hl,(Posicion_actual)
  56+ 9994 CD 3F 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9997 E6 02        	and 2
  58+ 9999 28 0F        	jr z,1F
  59+ 999B
  60+ 999B              ; Nos encontramos en el último tercio de pantalla.
  61+ 999B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 999B
  63+ 999B 7C           	ld a,h
  64+ 999C FE 57        	cp $57
  65+ 999E 20 0A        	jr nz,1F
  66+ 99A0
  67+ 99A0 7D           	ld a,l
  68+ 99A1 C6 20        	add $20
  69+ 99A3 30 05        	jr nc,1F
  70+ 99A5
  71+ 99A5              ; ------------------------------
  72+ 99A5              ;	call Reaparece_arriba
  73+ 99A5 CD A4 9C     	call Reinicio
  74+ 99A8              ; ------------------------------
  75+ 99A8
  76+ 99A8 18 08        	jr 3F
  77+ 99AA CD 2C 96     1 call NextScan
  78+ 99AD 22 CC 88     	ld (Posicion_actual),hl
  79+ 99B0 10 E2            djnz 2B
  80+ 99B2 CD CA 9C     3 call Genera_coordenadas
  81+ 99B5 C9           	ret
  82+ 99B6
  83+ 99B6              ; ******************************************************************************************************************************************************************************************
  84+ 99B6              ;
  85+ 99B6              ;   27/05/23
  86+ 99B6              ;
  87+ 99B6              ;	Mov_up
  88+ 99B6              ;
  89+ 99B6              ; 	Mueve el Sprite hacia arriba.
  90+ 99B6              ;
  91+ 99B6              ;
  92+ 99B6              Mov_up
  93+ 99B6
  94+ 99B6 CD E7 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99B9              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99B9 21 F4 88     	ld hl,Ctrl_0
  97+ 99BC CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99BE              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99BE              ; 																		; _ en el caso de que no lo haya.
 100+ 99BE 3A E1 88     	ld a,(Vel_up)
 101+ 99C1 47           	ld b,a
 102+ 99C2 2A CC 88     	ld hl,(Posicion_actual)
 103+ 99C5 CD 3F 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99C8 A7           	and a
 105+ 99C9 20 10        	jr nz,1F
 106+ 99CB
 107+ 99CB              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99CB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99CB
 110+ 99CB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99CC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99CE 20 0B            jr nz,1F
 113+ 99D0 7D               ld a,l
 114+ 99D1 D6 20            sub $20
 115+ 99D3 30 06            jr nc,1F
 116+ 99D5 25               dec h
 117+ 99D6
 118+ 99D6              ; -----------------------------
 119+ 99D6 CD 85 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99D9              ;	call Reinicio
 121+ 99D9              ; -----------------------------
 122+ 99D9
 123+ 99D9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99DB CD 3B 96     1 call PreviousScan
 125+ 99DE 22 CC 88     	ld (Posicion_actual),hl
 126+ 99E1 10 E2            djnz 3B
 127+ 99E3 CD CA 9C     2 call Genera_coordenadas
 128+ 99E6 C9           	ret
 129+ 99E7
 130+ 99E7              ; -----------------------------
 131+ 99E7              ;
 132+ 99E7              ;	27/5/23
 133+ 99E7              ;
 134+ 99E7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99E7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99E7              ;
 137+ 99E7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99E7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99E7              ;
 140+ 99E7              ;	Modifica: A y (Puntero_objeto).
 141+ 99E7
 142+ 99E7 3A 05 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99EA CB 47        	bit 0,a
 144+ 99EC C8           	ret z
 145+ 99ED CB 87        	res 0,a
 146+ 99EF 32 05 89     	ld (Ctrl_2),a
 147+ 99F2 2A 08 89     	ld hl,(Repone_puntero_objeto)
 148+ 99F5 22 CE 88     	ld (Puntero_objeto),hl
 149+ 99F8 C9           	ret
 150+ 99F9
 151+ 99F9              ; ******************************************************************************************************************************************************************************************
 152+ 99F9              ;
 153+ 99F9              ;	19/10/22
 154+ 99F9              ;
 155+ 99F9              ;	Mov_right.
 156+ 99F9              ;
 157+ 99F9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99F9              ;
 159+ 99F9
 160+ 99F9 21 F4 88     Mov_right ld hl,Ctrl_0
 161+ 99FC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99FE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99FE              ; 																	; _ en el caso de que no lo haya.
 164+ 99FE 3A F4 88     	ld a,(Ctrl_0)
 165+ 9A01 CB 77        	bit 6,a
 166+ 9A03 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A05
 168+ 9A05 CD 33 9C     	call Stop_Amadeus_right
 169+ 9A08 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A09 18 4D        	jr 8F
 171+ 9A0B
 172+ 9A0B 3A D0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A0E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A10 20 46        	jr nz,8F
 175+ 9A12
 176+ 9A12 3A D2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A15 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A16 28 40        	jr z,8F
 179+ 9A18
 180+ 9A18              ; ---------- ---------- ----------
 181+ 9A18              ;
 182+ 9A18              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A18
 184+ 9A18 3A E0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A1B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A1D 28 11        	jr z,1F
 187+ 9A1F 38 06        	jr c,6F
 188+ 9A21 FE 04        	cp 4
 189+ 9A23 28 14        	jr z,7F
 190+ 9A25 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A27
 192+ 9A27              ; ---------- ---------- ----------
 193+ 9A27              ;
 194+ 9A27              ; Perfiles de velocidad
 195+ 9A27              ;
 196+ 9A27
 197+ 9A27 3A D2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A2A FE FE        	cp $fe
 199+ 9A2C 20 2A        	jr nz,8F
 200+ 9A2E 18 10        	jr 3F
 201+ 9A30 3A D2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A33 FE FD        	cp $fd
 203+ 9A35 20 21        	jr nz,8F
 204+ 9A37 18 07        	jr 3F
 205+ 9A39 3A D2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A3C FE FB        	cp $fb
 207+ 9A3E 20 18        	jr nz,8F
 208+ 9A40
 209+ 9A40              ; ---------- ---------- ----------
 210+ 9A40
 211+ 9A40              3
 212+ 9A40 CD 73 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A43              ;	call Reinicio
 214+ 9A43
 215+ 9A43              ; ---------- ---------- ----------
 216+ 9A43              ;
 217+ 9A43              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A43
 219+ 9A43 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A45 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A46 CD 5F 9A     	call DESPLZ_DER
 222+ 9A49 C1           	pop bc
 223+ 9A4A 10 F9        	djnz 5B
 224+ 9A4C 2A CC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A4F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A50 22 CC 88     	ld (Posicion_actual),hl
 227+ 9A53 CD CA 9C     	call Genera_coordenadas
 228+ 9A56 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A58
 230+ 9A58              ; ---------- ---------- ----------
 231+ 9A58
 232+ 9A58 2A CC 88     8 ld hl,(Posicion_actual)
 233+ 9A5B CD 5F 9A     	call DESPLZ_DER
 234+ 9A5E C9           2 ret
 235+ 9A5F
 236+ 9A5F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A5F              ;
 238+ 9A5F              ;	22/9/22
 239+ 9A5F              ;
 240+ 9A5F
 241+ 9A5F CD 6E 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A62 CD BA 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A65 CD E3 9A         call Ciclo_completo
 244+ 9A68 21 F4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A6B CB FE        	set 7,(hl)
 246+ 9A6D C9           	ret
 247+ 9A6E
 248+ 9A6E              ; ******************************************************************************************************************************************************************************************
 249+ 9A6E              ;	15/02/23
 250+ 9A6E              ;
 251+ 9A6E
 252+ 9A6E 3A E0 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A71 47           	ld b,a
 254+ 9A72 2A D8 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A75 23           1 inc hl
 256+ 9A76 23           	inc hl
 257+ 9A77 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A79 22 D8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A7C CD 8C 8C     	call Extrae_address
 260+ 9A7F 22 CE 88     	ld (Puntero_objeto),hl
 261+ 9A82
 262+ 9A82              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A82
 264+ 9A82              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A82              ; Cuántos movimientos hemos hecho ??
 266+ 9A82              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A82
 268+ 9A82 2A D4 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A85 EB           	ex de,hl
 270+ 9A86 A7           	and a
 271+ 9A87 ED 52        	sbc hl,de
 272+ 9A89 CB 3D        	srl l
 273+ 9A8B 3E 08        6 ld a,8
 274+ 9A8D 95           	sub l
 275+ 9A8E 30 1E        	jr nc,3F
 276+ 9A90
 277+ 9A90              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A90              ; B="0".
 279+ 9A90
 280+ 9A90 04           4 inc b
 281+ 9A91 3C           	inc a
 282+ 9A92 20 FC        	jr nz,4B
 283+ 9A94 78           	ld a,b
 284+ 9A95 08           	ex af,af
 285+ 9A96 2A D4 88     	ld hl,(Indice_Sprite_der)
 286+ 9A99 23           5 inc hl
 287+ 9A9A 23           	inc hl
 288+ 9A9B 10 FC        	djnz 5B
 289+ 9A9D 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AA0 CD 8C 8C     	call Extrae_address
 291+ 9AA3 22 CE 88     	ld (Puntero_objeto),hl
 292+ 9AA6
 293+ 9AA6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AA6              ; _(Posicion_actual).
 295+ 9AA6
 296+ 9AA6 21 CC 88     	ld hl,Posicion_actual
 297+ 9AA9 34           	inc (hl)
 298+ 9AAA 08               ex af,af
 299+ 9AAB 6F           	ld l,a
 300+ 9AAC 18 DD        	jr 6B
 301+ 9AAE
 302+ 9AAE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AAE
 304+ 9AAE 47           3 ld b,a
 305+ 9AAF 2A D6 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AB2 23           2 inc hl
 307+ 9AB3 23           	inc hl
 308+ 9AB4 10 FC        	djnz 2B
 309+ 9AB6 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AB9 C9           8 ret
 311+ 9ABA
 312+ 9ABA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9ABA              ;
 314+ 9ABA              ;	24/7/22
 315+ 9ABA              ;
 316+ 9ABA              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9ABA              ;
 318+ 9ABA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9ABA              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9ABA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9ABA
 322+ 9ABA 3A D2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9ABD A7           	and a
 324+ 9ABE 20 1F        	jr nz,1F
 325+ 9AC0 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AC2 32 D2 88         ld (CTRL_DESPLZ),a
 327+ 9AC5
 328+ 9AC5 21 CB 88     	ld hl,Columns
 329+ 9AC8 34           	inc (hl)
 330+ 9AC9 3A DE 88     	ld a,(Cuad_objeto)
 331+ 9ACC E6 01        	and 1
 332+ 9ACE 28 0F        	jr z,1F
 333+ 9AD0 2A CC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AD3 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AD4 22 CC 88     	ld (Posicion_actual),hl
 336+ 9AD7 CD CA 9C     	call Genera_coordenadas
 337+ 9ADA CD 3F 9C     	call Inc_CTRL_DESPLZ
 338+ 9ADD 18 03        	jr 2F
 339+ 9ADF CD 3F 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AE2 C9           2 ret
 341+ 9AE3
 342+ 9AE3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AE3              ;
 344+ 9AE3              ;	24/7/22
 345+ 9AE3              ;
 346+ 9AE3              ;	Ciclo_completo.
 347+ 9AE3              ;
 348+ 9AE3              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AE3              ;
 350+ 9AE3              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AE3              ; 	Decrementamos (Columns).
 352+ 9AE3              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AE3              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AE3
 355+ 9AE3
 356+ 9AE3 3A D2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AE6 FE FF        	cp $ff
 358+ 9AE8 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AEA E6 F0        	and $f0
 360+ 9AEC 20 28        	jr nz,3F
 361+ 9AEE
 362+ 9AEE              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AEE
 364+ 9AEE 3A D2 88     	ld a,(CTRL_DESPLZ)
 365+ 9AF1 47           	ld b,a
 366+ 9AF2 3E F8        	ld a,$f8
 367+ 9AF4 80           	add b
 368+ 9AF5 32 D2 88     	ld (CTRL_DESPLZ),a
 369+ 9AF8 18 1C        	jr 3F
 370+ 9AFA 21 CB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AFD 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AFE AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AFF 32 D2 88     	ld (CTRL_DESPLZ),a
 374+ 9B02 3A DE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B05 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B07 20 0A        	jr nz,2F
 377+ 9B09 2A CC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B0C 23           	inc hl
 379+ 9B0D 22 CC 88     	ld (Posicion_actual),hl
 380+ 9B10 CD CA 9C     	call Genera_coordenadas
 381+ 9B13
 382+ 9B13              ; Inicia el puntero de Sprite.
 383+ 9B13
 384+ 9B13 CD A3 8C     2 call Inicia_puntero_objeto_der
 385+ 9B16 C9           3 ret
 386+ 9B17
 387+ 9B17              ; ******************************************************************************************************************************************************************************************
 388+ 9B17              ;
 389+ 9B17              ;	15/02/23
 390+ 9B17              ;
 391+ 9B17              ;	Mov_left.
 392+ 9B17              ;
 393+ 9B17              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B17              ;
 395+ 9B17              Mov_left
 396+ 9B17
 397+ 9B17 21 F4 88     	ld hl,Ctrl_0
 398+ 9B1A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B1C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B1C              ; 																	; _ en el caso de que no lo haya.
 401+ 9B1C 3A F4 88     	ld a,(Ctrl_0)
 402+ 9B1F CB 77        	bit 6,a
 403+ 9B21 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B23
 405+ 9B23 CD 39 9C     	call Stop_Amadeus_left
 406+ 9B26 C8           	ret z
 407+ 9B27 20 4A        	jr nz,8F
 408+ 9B29
 409+ 9B29 3A D0 88     11 ld a,(Coordenada_X)
 410+ 9B2C A7           	and a
 411+ 9B2D 20 44        	jr nz,8F
 412+ 9B2F
 413+ 9B2F 3A D2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B32 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B33 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B35
 417+ 9B35              ; ---------- ---------- ----------
 418+ 9B35
 419+ 9B35 3A DF 88     	ld a,(Vel_left)
 420+ 9B38 FE 02        	cp 2
 421+ 9B3A 28 0F        	jr z,1F
 422+ 9B3C 38 04        	jr c,6F
 423+ 9B3E FE 04        	cp 4
 424+ 9B40 28 12        	jr z,7F
 425+ 9B42
 426+ 9B42              ; ---------- ---------- ----------
 427+ 9B42
 428+ 9B42 3A D2 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B45 FE F8        	cp $f8
 430+ 9B47 20 2A        	jr nz,8F
 431+ 9B49 18 10        	jr 4F
 432+ 9B4B 3A D2 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B4E FE F9        	cp $f9
 434+ 9B50 20 21        	jr nz,8F
 435+ 9B52 18 07        	jr 4F
 436+ 9B54 3A D2 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B57 FE FB        	cp $fb
 438+ 9B59 20 18        	jr nz,8F
 439+ 9B5B
 440+ 9B5B              ; ---------- ---------- ----------
 441+ 9B5B
 442+ 9B5B              4
 443+ 9B5B CD 61 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B5E              ;	call Reinicio
 445+ 9B5E
 446+ 9B5E              ; ---------- ---------- ----------
 447+ 9B5E
 448+ 9B5E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B60 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B61
 451+ 9B61              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B61              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B61
 454+ 9B61 CD 7A 9B     	call DESPLZ_IZQ
 455+ 9B64 C1           	pop bc
 456+ 9B65 10 F9        	djnz 5B
 457+ 9B67 2A CC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B6A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B6B 22 CC 88     	ld (Posicion_actual),hl
 460+ 9B6E CD CA 9C     	call Genera_coordenadas
 461+ 9B71 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B73
 463+ 9B73              ; ---------- ---------- ----------
 464+ 9B73
 465+ 9B73              ; Movemos, no hay recolocación.
 466+ 9B73
 467+ 9B73 2A CC 88     8 ld hl,(Posicion_actual)
 468+ 9B76 CD 7A 9B     	call DESPLZ_IZQ
 469+ 9B79 C9           2 ret
 470+ 9B7A
 471+ 9B7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B7A              ;
 473+ 9B7A              ;	22/9/22
 474+ 9B7A
 475+ 9B7A              DESPLZ_IZQ
 476+ 9B7A
 477+ 9B7A CD 89 9B     	call Desplaza_izquierda
 478+ 9B7D CD D5 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B80 CD FD 9B     	call Ciclo_completo_2
 480+ 9B83 21 F4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B86 CB BE        	res 7,(hl)
 482+ 9B88 C9           	ret
 483+ 9B89
 484+ 9B89              Desplaza_izquierda
 485+ 9B89
 486+ 9B89 3A DF 88     	ld a,(Vel_left)
 487+ 9B8C 47           	ld b,a
 488+ 9B8D 2A DA 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B90 23           1 inc hl
 490+ 9B91 23           	inc hl
 491+ 9B92 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B94 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B97 CD 8C 8C     	call Extrae_address
 494+ 9B9A 22 CE 88     	ld (Puntero_objeto),hl
 495+ 9B9D
 496+ 9B9D              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B9D
 498+ 9B9D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B9D              ; Cuántos movimientos hemos hecho ??
 500+ 9B9D              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B9D
 502+ 9B9D 2A D6 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BA0 EB           	ex de,hl
 504+ 9BA1 A7           	and a
 505+ 9BA2 ED 52        	sbc hl,de
 506+ 9BA4 CB 3D        	srl l
 507+ 9BA6 3E 08        6 ld a,8
 508+ 9BA8 95           	sub l
 509+ 9BA9 30 1E        	jr nc,3F
 510+ 9BAB
 511+ 9BAB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BAB              ; B="0".
 513+ 9BAB
 514+ 9BAB 04           4 inc b
 515+ 9BAC 3C           	inc a
 516+ 9BAD 20 FC        	jr nz,4B
 517+ 9BAF 78           	ld a,b
 518+ 9BB0 08           	ex af,af
 519+ 9BB1 2A D6 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BB4 23           5 inc hl
 521+ 9BB5 23           	inc hl
 522+ 9BB6 10 FC        	djnz 5B
 523+ 9BB8 22 DA 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BBB CD 8C 8C     	call Extrae_address
 525+ 9BBE 22 CE 88     	ld (Puntero_objeto),hl
 526+ 9BC1
 527+ 9BC1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BC1              ; _(Posicion_actual).
 529+ 9BC1
 530+ 9BC1 21 CC 88     	ld hl,Posicion_actual
 531+ 9BC4 35           	dec (hl)
 532+ 9BC5 08           	ex af,af
 533+ 9BC6 6F           	ld l,a
 534+ 9BC7 18 DD        	jr 6B
 535+ 9BC9
 536+ 9BC9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BC9
 538+ 9BC9 47           3 ld b,a
 539+ 9BCA 2A D4 88     	ld hl,(Indice_Sprite_der)
 540+ 9BCD 23           2 inc hl
 541+ 9BCE 23           	inc hl
 542+ 9BCF 10 FC        	djnz 2B
 543+ 9BD1 22 D8 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BD4 C9           8 ret
 545+ 9BD5
 546+ 9BD5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BD5              ;
 548+ 9BD5              ;	modifica_parametros_1er_DESPLZ
 549+ 9BD5              ;
 550+ 9BD5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BD5              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BD5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BD5
 554+ 9BD5 3A D2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BD8 A7           	and a
 556+ 9BD9 20 1E        	jr nz,1F
 557+ 9BDB 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BDC 32 D2 88         ld (CTRL_DESPLZ),a
 559+ 9BDF 21 CB 88     	ld hl,Columns
 560+ 9BE2 34           	inc (hl)
 561+ 9BE3 3A DE 88     	ld a,(Cuad_objeto)
 562+ 9BE6 E6 01        	and 1
 563+ 9BE8 20 0F        	jr nz,1F
 564+ 9BEA 2A CC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BED 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BEE 22 CC 88     	ld (Posicion_actual),hl
 567+ 9BF1 CD CA 9C     	call Genera_coordenadas
 568+ 9BF4 CD 50 9C     	call Dec_CTRL_DESPLZ
 569+ 9BF7 18 03        	jr 2F
 570+ 9BF9 CD 50 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BFC C9           2 ret
 572+ 9BFD
 573+ 9BFD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BFD
 575+ 9BFD 3A D2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C00 FE F7        	cp $f7
 577+ 9C02 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C04 30 2C        	jr nc,3F
 579+ 9C06
 580+ 9C06              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C06
 582+ 9C06 06 00        	ld b,0
 583+ 9C08 04           4 inc b
 584+ 9C09 3C           	inc a
 585+ 9C0A FE F7        	cp $f7
 586+ 9C0C 20 FA        	jr nz,4B
 587+ 9C0E 3E FF        	ld a,$ff
 588+ 9C10 90           	sub b
 589+ 9C11 32 D2 88     	ld (CTRL_DESPLZ),a
 590+ 9C14 18 1C        	jr 3F
 591+ 9C16
 592+ 9C16              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C16
 594+ 9C16 21 CB 88     1 ld hl,Columns
 595+ 9C19 35           	dec (hl)
 596+ 9C1A AF           	xor a
 597+ 9C1B 32 D2 88     	ld (CTRL_DESPLZ),a
 598+ 9C1E 3A DE 88     	ld a,(Cuad_objeto)
 599+ 9C21 E6 01        	and 1
 600+ 9C23 28 0A        	jr z,2F
 601+ 9C25 2A CC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C28 2B           	dec hl
 603+ 9C29 22 CC 88     	ld (Posicion_actual),hl
 604+ 9C2C CD CA 9C     	call Genera_coordenadas
 605+ 9C2F
 606+ 9C2F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C2F
 608+ 9C2F CD B6 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C32 C9           3 ret
 610+ 9C33
 611+ 9C33              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C33              ;
 613+ 9C33              ;	19/10/22
 614+ 9C33              ;
 615+ 9C33              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C33              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C33
 618+ 9C33 3A D0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C36 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C38 C9           	ret
 621+ 9C39
 622+ 9C39              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C39              ;
 624+ 9C39              ;	19/10/22
 625+ 9C39              ;
 626+ 9C39              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C39              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C39
 629+ 9C39 3A D0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C3C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C3E C9           	ret
 632+ 9C3F
 633+ 9C3F              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C3F              ;
 635+ 9C3F              ;	24/7/22
 636+ 9C3F              ;
 637+ 9C3F              ;	Inc_CTRL_DESPLZ
 638+ 9C3F              ;
 639+ 9C3F              ;
 640+ 9C3F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C3F
 642+ 9C3F 21 D2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C42 3A E0 88     	ld a,(Vel_right)
 644+ 9C45 A7           	and a
 645+ 9C46 28 06        	jr z,1F
 646+ 9C48 47           	ld b,a
 647+ 9C49 34           3 inc (hl)
 648+ 9C4A 10 FD        	djnz 3B
 649+ 9C4C 18 01        	jr 2F
 650+ 9C4E 34           1 inc (hl)
 651+ 9C4F C9           2 ret
 652+ 9C50
 653+ 9C50              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C50              ;
 655+ 9C50              ;	5/2/23
 656+ 9C50              ;
 657+ 9C50              ;	Dec_CTRL_DESPLZ
 658+ 9C50              ;
 659+ 9C50              ;
 660+ 9C50              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C50
 662+ 9C50 21 D2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C53 3A DF 88     	ld a,(Vel_left)
 664+ 9C56 A7           	and a
 665+ 9C57 28 06        	jr z,1F
 666+ 9C59 47           	ld b,a
 667+ 9C5A 35           3 dec (hl)
 668+ 9C5B 10 FD        	djnz 3B
 669+ 9C5D 18 01        	jr 2F
 670+ 9C5F 35           1 dec (hl)
 671+ 9C60 C9           2 ret
 672+ 9C61
 673+ 9C61              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C61
 675+ 9C61 2A CC 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C64 01 1F 00     	ld bc,31
 677+ 9C67 A7           	and a
 678+ 9C68 ED 4A        	adc hl,bc
 679+ 9C6A 22 CC 88     	ld (Posicion_actual),hl
 680+ 9C6D 21 F4 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C70 CB C6        	set 0,(hl)
 682+ 9C72 C9           	ret
 683+ 9C73
 684+ 9C73              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C73
 686+ 9C73 2A CC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C76 01 1F 00     	ld bc,31
 688+ 9C79 A7           	and a
 689+ 9C7A ED 42        	sbc hl,bc
 690+ 9C7C 22 CC 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C7F 21 F4 88     	ld hl,Ctrl_0
 692+ 9C82 CB CE        	set 1,(hl)
 693+ 9C84 C9           	ret
 694+ 9C85
 695+ 9C85              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C85
 697+ 9C85 24           Reaparece_abajo inc h
 698+ 9C86 01 E0 17     	ld bc,$17e0
 699+ 9C89 A7           	and a
 700+ 9C8A ED 4A        	adc hl,bc
 701+ 9C8C 22 CC 88     	ld (Posicion_actual),hl
 702+ 9C8F 21 F4 88     	ld hl,Ctrl_0
 703+ 9C92 CB D6        	set 2,(hl)
 704+ 9C94 C9           	ret
 705+ 9C95
 706+ 9C95              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C95
 708+ 9C95 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C98 A7           	and a
 710+ 9C99 ED 42        	sbc hl,bc
 711+ 9C9B 22 CC 88     	ld (Posicion_actual),hl
 712+ 9C9E 21 F4 88     	ld hl,Ctrl_0
 713+ 9CA1 CB DE        	set 3,(hl)
 714+ 9CA3 C9           	ret
 715+ 9CA4
 716+ 9CA4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CA4              ;
 718+ 9CA4              ;	15/07/23
 719+ 9CA4
 720+ 9CA4              Reinicio
 721+ 9CA4
 722+ 9CA4              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CA4
 724+ 9CA4 AF           	xor a
 725+ 9CA5 21 F9 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CA8 CD C6 9C     	call Limpia_contenido_hl
 727+ 9CAB
 728+ 9CAB 21 CC 88     	ld hl,Posicion_actual
 729+ 9CAE CD C6 9C     	call Limpia_contenido_hl
 730+ 9CB1
 731+ 9CB1 CD F6 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CB4 CD 80 9F     	call Inicia_Puntero_mov
 733+ 9CB7
 734+ 9CB7 21 FB 88     	ld hl,Incrementa_puntero
 735+ 9CBA 06 05        	ld b,5
 736+ 9CBC 77           1 ld (hl),a
 737+ 9CBD 23           	inc hl
 738+ 9CBE 10 FC        	djnz 1B
 739+ 9CC0
 740+ 9CC0 21 05 89     	ld hl,Ctrl_2
 741+ 9CC3 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CC5
 743+ 9CC5 C9           	ret
 744+ 9CC6
 745+ 9CC6 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CC7 23           	inc hl
 747+ 9CC8 77           	ld (hl),a
 748+ 9CC9 C9           	ret
 749+ 9CCA
 750+ 9CCA
# file closed: Direcciones.asm
1688  9CCA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CCA              ; ------------------------------------------------------------------------
   2+ 9CCA              ;
   3+ 9CCA              ;	02/04/23
   4+ 9CCA              ;
   5+ 9CCA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CCA              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CCA              ;
   8+ 9CCA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CCA              ;
  10+ 9CCA              ;	Modifica: A,BC y DE.
  11+ 9CCA
  12+ 9CCA C5           Genera_coordenadas push bc
  13+ 9CCB E5           	push hl
  14+ 9CCC D5           	push de
  15+ 9CCD
  16+ 9CCD 2A CC 88     	ld hl,(Posicion_actual)
  17+ 9CD0
  18+ 9CD0 7D           	ld a,l
  19+ 9CD1 E6 1F        	and $1f
  20+ 9CD3 32 D0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CD6
  22+ 9CD6 CD 3F 99     	call calcula_tercio
  23+ 9CD9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CDA
  25+ 9CDA 1E 00        	ld e,0
  26+ 9CDC 7D           	ld a,l
  27+ 9CDD E6 E0        	and $e0
  28+ 9CDF 28 01        	jr z,1F
  29+ 9CE1 04           	inc b
  30+ 9CE2
  31+ 9CE2 04           1 inc b
  32+ 9CE3 05           	dec b
  33+ 9CE4 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CE6              ;														; _ , salimos.
  35+ 9CE6 1C           3 inc e
  36+ 9CE7 D6 20        	sub 32
  37+ 9CE9 20 FB        	jr nz,3B
  38+ 9CEB 10 F5        	djnz 1B
  39+ 9CED
  40+ 9CED 7B           2 ld a,e
  41+ 9CEE 32 D1 88     	ld (Coordenada_y),a
  42+ 9CF1
  43+ 9CF1 D1           	pop de
  44+ 9CF2 E1           	pop hl
  45+ 9CF3 C1           	pop bc
  46+ 9CF4
  47+ 9CF4 C9           	ret
  48+ 9CF5
  49+ 9CF5              ; ------------------------------------------------------------------------
  50+ 9CF5              ;	28/05/23
  51+ 9CF5              ;
  52+ 9CF5              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CF5              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CF5              ;
  55+ 9CF5              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CF5              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CF5              ;
  58+ 9CF5              ;		DE="$120d"
  59+ 9CF5              ;
  60+ 9CF5              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CF5              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CF5              ;
  63+ 9CF5              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CF5
  65+ 9CF5              ;	Modifica: A,BC y DE.
  66+ 9CF5
  67+ 9CF5
  68+ 9CF5              Genera_coordenadas_disparo
  69+ 9CF5
  70+ 9CF5              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CF5
  72+ 9CF5 7D           	ld a,l
  73+ 9CF6 E6 1F        	and $1f
  74+ 9CF8 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CF9 CD 3F 99     	call calcula_tercio
  76+ 9CFC 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CFD 1E 00        	ld e,0
  78+ 9CFF 7D           	ld a,l
  79+ 9D00 E6 E0        	and $e0
  80+ 9D02 28 01        	jr z,1F
  81+ 9D04 04           	inc b
  82+ 9D05 1C           1 inc e
  83+ 9D06 D6 20        	sub 32
  84+ 9D08 20 FB        	jr nz,1B
  85+ 9D0A 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D0C C9           	ret
  87+ 9D0D
# file closed: Genera_coordenadas.asm
1689  9D0D              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D0D              ; Relojes y temporizaciones.
   2+ 9D0D
   3+ 9D0D              ; ------------------------------------------------------
   4+ 9D0D              ;
   5+ 9D0D              ;	16/7/23
   6+ 9D0D              ;
   7+ 9D0D              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D0D              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D0D              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D0D              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D0D              ;
  12+ 9D0D              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D0D              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D0D
  15+ 9D0D              ; Disparo_entidad db 1
  16+ 9D0D              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D0D              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D0D
  19+ 9D0D              Habilita_disparos
  20+ 9D0D
  21+ 9D0D 7E           	ld a,(hl)
  22+ 9D0E A7           	and a
  23+ 9D0F C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D10
  25+ 9D10 EB           	ex de,hl
  26+ 9D11
  27+ 9D11 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D12 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D13
  30+ 9D13              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D13
  32+ 9D13 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D14 7E           	ld a,(hl)
  34+ 9D15 23           	inc hl
  35+ 9D16 77           	ld (hl),a
  36+ 9D17
  37+ 9D17 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D18 3E 01        	ld a,1
  39+ 9D1A 77           	ld (hl),a
  40+ 9D1B C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1690  9D1C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D1C
   2+ 9D1C
   3+ 9D1C              ;   07/07/23
   4+ 9D1C              ;
   5+ 9D1C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D1C              ;
   7+ 9D1C              ;   Codificación:
   8+ 9D1C              ;
   9+ 9D1C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D1C              ;
  11+ 9D1C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D1C              ;
  13+ 9D1C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D1C              ;
  15+ 9D1C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D1C              ;
  17+ 9D1C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D1C              ;                               ..... %01000010 Vel_up 4
  19+ 9D1C              ;                                               Vel_down 2
  20+ 9D1C              ;                               ..... $42
  21+ 9D1C              ;
  22+ 9D1C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D1C              ;
  24+ 9D1C              ;                               ..... %01000010 Vel_left 4
  25+ 9D1C              ;                                               Vel_right 2
  26+ 9D1C              ;                               ..... $42
  27+ 9D1C              ;
  28+ 9D1C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D1C              ;
  30+ 9D1C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D1C              ;
  32+ 9D1C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D1C              ;
  34+ 9D1C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D1C              ;                                     $53
  36+ 9D1C              ;
  37+ 9D1C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D1C              ;
  39+ 9D1C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D1C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D1C              ;
  42+ 9D1C              ;                       Arriba ..... $81
  43+ 9D1C              ;                       Arriba - izquierda ..... $a1
  44+ 9D1C              ;                       Arriba - derecha ..... $91
  45+ 9D1C              ;
  46+ 9D1C              ;                       Abajo ..... $41
  47+ 9D1C              ;                       Abajo - izquierda ..... $61
  48+ 9D1C              ;                       Abajo - derecha ..... $51
  49+ 9D1C              ;
  50+ 9D1C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D1C              ;
  52+ 9D1C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D1C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D1C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D1C              ;
  56+ 9D1C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D1C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D1C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D1C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D1C              ;
  61+ 9D1C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D1C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D1C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D1C              ;
  65+ 9D1C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D1C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D1C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D1C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D1C
  70+ 9D1C              ; ----- ----- ----- ----- -----
  71+ 9D1C
  72+ 9D1C 48 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D1E 50 9D            defw F_1
  74+ 9D20 5A 9D            defw F_2
  75+ 9D22 64 9D            defw Codo_abajo_derecha
  76+ 9D24 98 9D            defw Derecha_y_subiendo
  77+ 9D26 A2 9D            defw Derecha_y_subiendo_1
  78+ 9D28 AC 9D            defw F_3
  79+ 9D2A B6 9D            defw F_4
  80+ 9D2C C0 9D            defw Derecha_y_bajando
  81+ 9D2E CA 9D            defw Derecha_y_bajando_1
  82+ 9D30 D4 9D            defw Derecha_y_bajando_2
  83+ 9D32 DE 9D            defw Codo_derecha_abajo
  84+ 9D34 0E 9E            defw Codo_abajo_izq.
  85+ 9D36 42 9E            defw Izquierda_y_subiendo
  86+ 9D38 4C 9E            defw Izquierda_y_subiendo_1
  87+ 9D3A 56 9E            defw F_5
  88+ 9D3C 60 9E            defw F_6
  89+ 9D3E 6A 9E            defw Izquierda_y_bajando
  90+ 9D40 74 9E            defw Izquierda_y_bajando_1
  91+ 9D42 7E 9E            defw Izquierda_y_bajando_2
  92+ 9D44 88 9E            defw Codo_izquierda_abajo
  93+ 9D46 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D48
  95+ 9D48 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D4C 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D50
  98+ 9D50 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D54 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D58 08 00
 100+ 9D5A 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D5E 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D62 0F FE
 102+ 9D64
 103+ 9D64 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D68 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D6C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D70 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D74 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D78 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D7C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D80 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D84 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D88 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D8C 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D90 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D94 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D98
 117+ 9D98 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D9C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DA0 06 00
 119+ 9DA2
 120+ 9DA2 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DA6 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DAA 02 00
 122+ 9DAC
 123+ 9DAC 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DB0 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DB4 04 00
 125+ 9DB6 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DBA 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DBE 08 00
 127+ 9DC0
 128+ 9DC0 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DC4 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DC8 02 00
 130+ 9DCA
 131+ 9DCA 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DCE 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DD2 06 00
 133+ 9DD4
 134+ 9DD4 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DD8 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DDC 06 00
 136+ 9DDE
 137+ 9DDE              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DDE
 139+ 9DDE 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DE2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DE6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DEA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DF2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DFA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DFE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E02 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E06 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E0A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E0E
 152+ 9E0E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E12 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E16 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E1A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E1E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E22 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E26 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E2A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E2E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E32 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E36 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E3A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E3E 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E42
 166+ 9E42 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E46 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E4A 06 00
 168+ 9E4C
 169+ 9E4C 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E50 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E54 02 00
 171+ 9E56
 172+ 9E56 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E5A 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E5E 04 00
 174+ 9E60 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E64 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E68 08 00
 176+ 9E6A
 177+ 9E6A 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E6E 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E72 02 00
 179+ 9E74
 180+ 9E74 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E78 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E7C 06 00
 182+ 9E7E
 183+ 9E7E 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E82 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E86 06 00
 185+ 9E88
 186+ 9E88 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E8C 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E90 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E94 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E98 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E9C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EA0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EA4 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EA8 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EAC 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EB0 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EB4 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EB8
 199+ 9EB8              ; ----- ----- ----- ----- -----
 200+ 9EB8              ;
 201+ 9EB8              ;   27/06/23
 202+ 9EB8
 203+ 9EB8              Movimiento
 204+ 9EB8
 205+ 9EB8              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EB8
 207+ 9EB8              ;    ld hl,(Posicion_actual)
 208+ 9EB8
 209+ 9EB8 3A 05 89         ld a,(Ctrl_2)
 210+ 9EBB CB 57            bit 2,a
 211+ 9EBD 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EBF
 213+ 9EBF 2A F7 88         ld hl,(Puntero_mov)
 214+ 9EC2 7E               ld a,(hl)
 215+ 9EC3
 216+ 9EC3              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EC3
 218+ 9EC3              Inicia_desplazamiento.
 219+ 9EC3
 220+ 9EC3              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EC3
 222+ 9EC3 CD B7 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EC6
 224+ 9EC6              ; Iniciamos (Repetimos_mov).
 225+ 9EC6
 226+ 9EC6 7E               ld a,(hl)
 227+ 9EC7 E6 0F            and $0f
 228+ 9EC9 32 FD 88         ld (Repetimos_desplazamiento),a
 229+ 9ECC 32 FE 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9ECF
 231+ 9ECF              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9ECF
 233+ 9ECF 23               inc hl
 234+ 9ED0 7E               ld a,(hl)
 235+ 9ED1 32 00 89         ld (Cola_de_desplazamiento),a
 236+ 9ED4 2B               dec hl
 237+ 9ED5
 238+ 9ED5 21 05 89         ld hl,Ctrl_2
 239+ 9ED8 CB D6            set 2,(hl)
 240+ 9EDA
 241+ 9EDA              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EDA              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EDA
 244+ 9EDA              Desplazamiento_iniciado
 245+ 9EDA
 246+ 9EDA CD 8B 9F         call Aplica_desplazamiento
 247+ 9EDD
 248+ 9EDD 3A 05 89         ld a,(Ctrl_2)
 249+ 9EE0 CB 67            bit 4,a
 250+ 9EE2 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EE3
 252+ 9EE3 21 FD 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EE6 35               dec (hl)
 254+ 9EE7 C0               ret nz
 255+ 9EE8
 256+ 9EE8              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EE8              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EE8              ; Analiza (Cola_de_desplazamiento).
 259+ 9EE8
 260+ 9EE8 3A 00 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EEB A7               and a
 262+ 9EEC CC E0 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EEF 28 30            jr z,Reinicia_el_movimiento
 264+ 9EF1
 265+ 9EF1 FE FF            cp $ff
 266+ 9EF3 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EF5
 268+ 9EF5 FE FE            cp $fe
 269+ 9EF7 CC 64 9F         call z,Fijamos_bucle
 270+ 9EFA 28 25            jr z,Reinicia_el_movimiento
 271+ 9EFC
 272+ 9EFC FE FD            cp $fd
 273+ 9EFE 20 11            jr nz,1F
 274+ 9F00
 275+ 9F00              ; ---
 276+ 9F00              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F00
 278+ 9F00 3A 05 89         ld a,(Ctrl_2)
 279+ 9F03 CB 5F            bit 3,a
 280+ 9F05 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F07
 282+ 9F07              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F07
 284+ 9F07 21 05 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F0A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F0C
 287+ 9F0C CD 75 9F         call Inicia_Repetimos_movimiento
 288+ 9F0F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F11              ; ---
 290+ 9F11
 291+ 9F11 FE 01        1 cp 1
 292+ 9F13 CA 4E 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F16
 294+ 9F16 3D               dec a
 295+ 9F17 32 00 89         ld (Cola_de_desplazamiento),a
 296+ 9F1A
 297+ 9F1A 3A FE 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F1D 32 FD 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F20              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F20 C9               ret
 301+ 9F21
 302+ 9F21              Reinicia_el_movimiento
 303+ 9F21
 304+ 9F21 3A 05 89         ld a,(Ctrl_2)
 305+ 9F24 CB 5F            bit 3,a
 306+ 9F26 28 1B            jr z,2F
 307+ 9F28
 308+ 9F28              ; (Cola_de_desplazamiento)="254".
 309+ 9F28
 310+ 9F28 21 FF 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F2B 35               dec (hl)
 312+ 9F2C 20 15            jr nz,2F
 313+ 9F2E
 314+ 9F2E              ; Fin de las repeticiones del último movimiento.
 315+ 9F2E
 316+ 9F2E 21 05 89         ld hl,Ctrl_2
 317+ 9F31 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F33
 319+ 9F33 2A F7 88         ld hl,(Puntero_mov)
 320+ 9F36 23               inc hl
 321+ 9F37 23               inc hl
 322+ 9F38 23               inc hl
 323+ 9F39 22 F7 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F3C              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F3C 7E               ld a,(hl)
 326+ 9F3D 32 00 89         ld (Cola_de_desplazamiento),a
 327+ 9F40
 328+ 9F40 C3 E8 9E         jp Cola
 329+ 9F43
 330+ 9F43 CD 80 9F     2 call Inicia_Puntero_mov
 331+ 9F46
 332+ 9F46 21 05 89         ld hl,Ctrl_2
 333+ 9F49 CB 96            res 2,(hl)
 334+ 9F4B
 335+ 9F4B C3 B8 9E         jp Movimiento
 336+ 9F4E
 337+ 9F4E              Siguiente_desplazamiento
 338+ 9F4E
 339+ 9F4E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F4E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F4E
 342+ 9F4E 21 05 89         ld hl,Ctrl_2
 343+ 9F51 CB 96            res 2,(hl)
 344+ 9F53
 345+ 9F53 2A F7 88         ld hl,(Puntero_mov)
 346+ 9F56 23               inc hl
 347+ 9F57 23               inc hl
 348+ 9F58 22 F7 88         ld (Puntero_mov),hl
 349+ 9F5B
 350+ 9F5B 7E               ld a,(hl)
 351+ 9F5C A7               and a
 352+ 9F5D CC E0 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F60 CA 21 9F         jp z,Reinicia_el_movimiento
 354+ 9F63
 355+ 9F63 C9               ret
 356+ 9F64              ; Subrutinas -----------------------------------------
 357+ 9F64              ; ---------- --------- --------- ---------- ----------
 358+ 9F64              ;
 359+ 9F64              ;   24/07/23
 360+ 9F64              ;
 361+ 9F64              ;   Fijamos_bucle
 362+ 9F64              ;
 363+ 9F64              ;
 364+ 9F64
 365+ 9F64              Fijamos_bucle
 366+ 9F64
 367+ 9F64 3A FB 88         ld a,(Incrementa_puntero)
 368+ 9F67 3C               inc a
 369+ 9F68 32 FC 88         ld (Incrementa_puntero_backup),a
 370+ 9F6B
 371+ 9F6B CD E0 9F         call Incrementa_Puntero_indice_mov
 372+ 9F6E 2A F5 88         ld hl,(Puntero_indice_mov)
 373+ 9F71 22 F9 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F74 C9               ret
 375+ 9F75
 376+ 9F75              ; ---------- --------- --------- ---------- ----------
 377+ 9F75              ;
 378+ 9F75              ;   07/7/23
 379+ 9F75              ;
 380+ 9F75              ;   Inicia_Repetimos_movimiento
 381+ 9F75              ;
 382+ 9F75              ;
 383+ 9F75
 384+ 9F75              Inicia_Repetimos_movimiento
 385+ 9F75
 386+ 9F75              ; Iniciamos (Repetimos_movimiento).
 387+ 9F75
 388+ 9F75 DD 2A F7 88      ld ix,(Puntero_mov)
 389+ 9F79 DD 7E 02         ld a,(ix+2)
 390+ 9F7C 32 FF 88         ld (Repetimos_movimiento),a
 391+ 9F7F
 392+ 9F7F C9               ret
 393+ 9F80
 394+ 9F80              ; ---------- --------- --------- ---------- ----------
 395+ 9F80              ;
 396+ 9F80              ;   26/6/23
 397+ 9F80              ;
 398+ 9F80              ;   Inicia_Puntero_mov
 399+ 9F80              ;
 400+ 9F80              ;
 401+ 9F80
 402+ 9F80 2A F5 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F83 5E               ld e,(hl)
 404+ 9F84 23               inc hl
 405+ 9F85 56               ld d,(hl)
 406+ 9F86 EB               ex de,hl
 407+ 9F87 22 F7 88         ld (Puntero_mov),hl
 408+ 9F8A C9               ret
 409+ 9F8B
 410+ 9F8B              ; ---------- --------- --------- ---------- ----------
 411+ 9F8B              ;
 412+ 9F8B              ;   27/06/23
 413+ 9F8B              ;
 414+ 9F8B              ;   Aplica_movimiento.
 415+ 9F8B
 416+ 9F8B              Aplica_desplazamiento
 417+ 9F8B
 418+ 9F8B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F8B
 420+ 9F8B 2A F7 88         ld hl, (Puntero_mov)
 421+ 9F8E
 422+ 9F8E 7E               ld a,(hl)
 423+ 9F8F E6 F0            and $f0
 424+ 9F91 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F92
 426+ 9F92 CB 7E            bit 7,(hl)
 427+ 9F94 28 03            jr z,1F
 428+ 9F96 CD B6 99         call Mov_up
 429+ 9F99 2A F7 88     1 ld hl, (Puntero_mov)
 430+ 9F9C CB 76            bit 6,(hl)
 431+ 9F9E 28 03            jr z,2F
 432+ 9FA0 CD 85 99         call Mov_down
 433+ 9FA3 2A F7 88     2 ld hl, (Puntero_mov)
 434+ 9FA6 CB 6E            bit 5,(hl)
 435+ 9FA8 28 03            jr z,3F
 436+ 9FAA CD 17 9B         call Mov_left
 437+ 9FAD 2A F7 88     3 ld hl, (Puntero_mov)
 438+ 9FB0 CB 66            bit 4,(hl)
 439+ 9FB2 C8               ret z
 440+ 9FB3 CD F9 99         call Mov_right
 441+ 9FB6 C9               ret
 442+ 9FB7
 443+ 9FB7              ; ---------- --------- --------- ---------- ----------
 444+ 9FB7              ;
 445+ 9FB7              ;   26/06/23
 446+ 9FB7              ;
 447+ 9FB7              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FB7
 449+ 9FB7              Ajusta_velocidad_desplazamiento
 450+ 9FB7
 451+ 9FB7              ; 1er byte de la cadena de movimiento.
 452+ 9FB7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FB7
 454+ 9FB7 CD D5 9F         call Extrae_nibble_alto
 455+ 9FBA
 456+ 9FBA 32 E1 88         ld (Vel_up),a
 457+ 9FBD 79               ld a,c
 458+ 9FBE E6 0F            and $0f
 459+ 9FC0 32 E2 88         ld (Vel_down),a
 460+ 9FC3
 461+ 9FC3              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FC3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FC3
 464+ 9FC3 23               inc hl
 465+ 9FC4 CD D5 9F         call Extrae_nibble_alto
 466+ 9FC7
 467+ 9FC7 32 DF 88         ld (Vel_left),a
 468+ 9FCA 79               ld a,c
 469+ 9FCB E6 0F            and $0f
 470+ 9FCD 32 E0 88         ld (Vel_right),a
 471+ 9FD0
 472+ 9FD0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FD0
 474+ 9FD0 23               inc hl
 475+ 9FD1 22 F7 88         ld (Puntero_mov),hl
 476+ 9FD4 C9               ret
 477+ 9FD5
 478+ 9FD5 06 04        Extrae_nibble_alto ld b,4
 479+ 9FD7 7E               ld a,(hl)
 480+ 9FD8 4F               ld c,a
 481+ 9FD9 E6 F0            and $f0
 482+ 9FDB CB 3F        1 srl a
 483+ 9FDD 10 FC            djnz 1B
 484+ 9FDF C9               ret
 485+ 9FE0
 486+ 9FE0              ; ---------- --------- --------- ---------- ----------
 487+ 9FE0              ;
 488+ 9FE0              ;   5/7/23
 489+ 9FE0              ;
 490+ 9FE0              ;   Incrementa_Puntero_indice_mov
 491+ 9FE0
 492+ 9FE0              Incrementa_Puntero_indice_mov
 493+ 9FE0
 494+ 9FE0 21 FB 88         ld hl,Incrementa_puntero
 495+ 9FE3 34               inc (hl)
 496+ 9FE4
 497+ 9FE4 2A F5 88         ld hl,(Puntero_indice_mov)
 498+ 9FE7 01 02 00         ld bc,2
 499+ 9FEA A7               and a
 500+ 9FEB 09               add hl,bc
 501+ 9FEC 22 F5 88         ld (Puntero_indice_mov),hl
 502+ 9FEF
 503+ 9FEF 7E               ld a,(hl)
 504+ 9FF0 A7               and a
 505+ 9FF1
 506+ 9FF1              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FF1
 508+ 9FF1              ;    jr z,$
 509+ 9FF1
 510+ 9FF1              ;! Reinicia el Patrón de movimiento.
 511+ 9FF1
 512+ 9FF1 CC F6 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FF4
 514+ 9FF4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FF5
 516+ 9FF5 C9               ret
 517+ 9FF6
 518+ 9FF6
 519+ 9FF6              ; ---------- --------- --------- ---------- ----------
 520+ 9FF6              ;
 521+ 9FF6              ;   24/07/23
 522+ 9FF6              ;
 523+ 9FF6              ;   Inicializa_Puntero_indice_mov
 524+ 9FF6
 525+ 9FF6              Inicializa_Puntero_indice_mov
 526+ 9FF6
 527+ 9FF6              ; Existe etiqueta de bucle principal???
 528+ 9FF6
 529+ 9FF6 2A F9 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FF9 24               inc h
 531+ 9FFA 25               dec h
 532+ 9FFB 28 05            jr z,2F
 533+ 9FFD
 534+ 9FFD 22 F5 88         ld (Puntero_indice_mov),hl
 535+ A000 18 14            jr 3F
 536+ A002
 537+ A002              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A002
 539+ A002 3A FB 88     2 ld a,(Incrementa_puntero)
 540+ A005 47               ld b,a
 541+ A006
 542+ A006 2A F5 88         ld hl,(Puntero_indice_mov)
 543+ A009 2B           1 dec hl
 544+ A00A 2B               dec hl
 545+ A00B 10 FC            djnz 1B
 546+ A00D 22 F5 88         ld (Puntero_indice_mov),hl
 547+ A010
 548+ A010 AF               xor a
 549+ A011 32 FB 88         ld (Incrementa_puntero),a
 550+ A014 18 06            jr 4F
 551+ A016
 552+ A016 3A FC 88     3 ld a,(Incrementa_puntero_backup)
 553+ A019 32 FB 88         ld (Incrementa_puntero),a
 554+ A01C C9           4 ret
 555+ A01D
 556+ A01D
 557+ A01D
# file closed: Patrones_de_mov.asm
1691  A01D              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A01D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A01D              ;
   3+ A01D              ;	27/10/23
   4+ A01D              ;
   5+ A01D              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A01D
   7+ A01D              ;	ADC HL,SP	LD (addr),SP
   8+ A01D              ;	ADD HL,SP	LD SP,(addr)
   9+ A01D              ;	ADD IX,SP	LD SP,nn
  10+ A01D              ; 	ADD IY,SP	LD SP,HL
  11+ A01D              ;				LD SP,IX
  12+ A01D              ;	DEC SP		LD SP,IY
  13+ A01D
  14+ A01D              ;	EX (SP),HL
  15+ A01D              ;	EX (SP),IX
  16+ A01D              ;	EX (SP),IY
  17+ A01D
  18+ A01D              ;	INC SP
  19+ A01D
  20+ A01D                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 18 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 EA 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 07 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 20 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F4 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 26 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1E 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 07 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 20 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F4 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 26 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 18 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1E 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 18 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 3C 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   8/11/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72ec
 129+ 72EC
 130+ 72EC              Gestiona_albumes_de_fotos ; 14
 131+ 72EC
 132+ 72EC              ;! Recolocacion.
 133+ 72EC
 134+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 135+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 136+ 72EC
 137+ 72EC 3A 41 89         ld a,(Ctrl_Semaforo)
 138+ 72EF CB 47            bit 0,a
 139+ 72F1 28 62            jr z,7F
 140+ 72F3
 141+ 72F3              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 142+ 72F3
 143+ 72F3 CB 5F            bit 3,a
 144+ 72F5 28 1E            jr z,13F
 145+ 72F7
 146+ 72F7
 147+ 72F7              ; DOBLE RECOLOCACIÓN. ----------- ------------ -----------
 148+ 72F7
 149+ 72F7              ; Album_de_fotos_1 y Album_de_fotos_2 están vacío pero ... Está Album_de_fotos_3 completo ???
 150+ 72F7
 151+ 72F7 3A 40 89         ld a,(Semaforo)
 152+ 72FA CB 5F            bit 3,a
 153+ 72FC 28 57            jr z,7F                     ;   No podemos hacer la doble recolocación!!! Album_de_fotos_3 está incompleto.
 154+ 72FE
 155+ 72FE              ; Volcamos Álbum_3 a Álbum_2
 156+ 72FE              ;    ""    Álbum_2 a Álbum_1
 157+ 72FE              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 158+ 72FE              ; Actualizamos (Semaforo)
 159+ 72FE              ; Inicializamos (Ctrl_Semaforo)
 160+ 72FE              ; Saltamos a 7F.
 161+ 72FE
 162+ 72FE CD D2 73         call Album3_a_Album2
 163+ 7301 CD F9 73         call Album2_a_Album1
 164+ 7304 CD 54 74         call Actualiza_punteros_de_albumes
 165+ 7307 CD 46 73         call Modifica_Stack_snapshot
 166+ 730A 21 40 89     	ld hl,Semaforo
 167+ 730D CB 0E        	rrc (hl)
 168+ 730F AF               xor a
 169+ 7310 32 41 89         ld (Ctrl_Semaforo),a
 170+ 7313 18 40            jr 7F
 171+ 7315
 172+ 7315              ; ------------ ---------------- ------------
 173+ 7315
 174+ 7315              ;   RECOLOCACIÓN SIMPLE.
 175+ 7315
 176+ 7315              ;   Album3_a_Album2 ?????
 177+ 7315
 178+ 7315 CB 4F        13 bit 1,a
 179+ 7317 20 0A            jr nz,10F
 180+ 7319
 181+ 7319              ;   Álbum_1 vacío.
 182+ 7319
 183+ 7319              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 184+ 7319
 185+ 7319 3A 40 89         ld a,(Semaforo)
 186+ 731C CB 57            bit 2,a
 187+ 731E 28 35            jr z,7F                      ; No puede haber recolocación. Album_de_fotos_2 está incompleto.
 188+ 7320
 189+ 7320 CD F9 73         call Album2_a_Album1
 190+ 7323
 191+ 7323              ; Album3_a_Album2 !!!
 192+ 7323
 193+ 7323              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 194+ 7323
 195+ 7323 3A 40 89     10 ld a,(Semaforo)
 196+ 7326 CB 5F            bit 3,a
 197+ 7328 20 0B            jr nz,11F
 198+ 732A
 199+ 732A              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 200+ 732A              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 201+ 732A
 202+ 732A 21 41 89         ld hl,Ctrl_Semaforo
 203+ 732D CB DE            set 3,(hl)
 204+ 732F CB 86            res 0,(hl)
 205+ 7331 CB 96            res 2,(hl)
 206+ 7333 18 20            jr 7F
 207+ 7335
 208+ 7335              ; Album_de_fotos_3 contiene un FRAME completo.
 209+ 7335              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 210+ 7335
 211+ 7335 CD D2 73     11 call Album3_a_Album2     ;   X-X-X-0
 212+ 7338 CD 46 73         call Modifica_Stack_snapshot
 213+ 733B
 214+ 733B 21 41 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 215+ 733E CB 86            res 0,(hl)
 216+ 7340 CB 8E            res 1,(hl)
 217+ 7342 CB 96            res 2,(hl)
 218+ 7344 18 0F            jr 7F
 219+ 7346
 220+ 7346 2A 34 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 221+ 7349 CD 8C 8C     	call Extrae_address
 222+ 734C 22 1E 89     	ld (Stack_snapshot),hl
 223+ 734F 21 40 89     	ld hl,Semaforo
 224+ 7352 CB 0E        	rrc (hl)
 225+ 7354 C9               ret
 226+ 7355
 227+ 7355              ; #############################################################3
 228+ 7355
 229+ 7355              ;   En 1er lugar limpiamos el FRAME pintado.
 230+ 7355              ;   Vaciamos Album_de_fotos.
 231+ 7355
 232+ 7355              ;   Album_de_fotos. Contiene datos ???
 233+ 7355
 234+ 7355              ;! Cascada.
 235+ 7355
 236+ 7355 21 01 70     7 ld hl,Album_de_fotos+1
 237+ 7358 7E               ld a,(hl)
 238+ 7359 A7               and a
 239+ 735A 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 240+ 735C
 241+ 735C              ;   Hemos impreso Album_de_fotos.
 242+ 735C              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 243+ 735C
 244+ 735C 2A 22 89         ld hl,(End_Snapshot)
 245+ 735F 01 00 70         ld bc,Album_de_fotos
 246+ 7362 11 01 70         ld de,Album_de_fotos+1
 247+ 7365 AF               xor a
 248+ 7366 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 249+ 7367
 250+ 7367 CD 47 74         call Limpia_album
 251+ 736A
 252+ 736A 21 00 00         ld hl,0
 253+ 736D 22 22 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 254+ 7370
 255+ 7370              ; ----- ----- ----- -----
 256+ 7370
 257+ 7370              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 258+ 7370              ;   Album_de_fotos_1. Contiene un frame completo ???
 259+ 7370
 260+ 7370 3A 40 89     3 ld a,(Semaforo)
 261+ 7373 CB 4F            bit 1,a
 262+ 7375 20 06            jr nz,4F
 263+ 7377
 264+ 7377              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 265+ 7377              ;! Album_de_fotos_1 está incompleto.
 266+ 7377
 267+ 7377 21 41 89         ld hl,Ctrl_Semaforo
 268+ 737A CB E6            set 4,(hl)
 269+ 737C C9               ret
 270+ 737D
 271+ 737D              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 272+ 737D
 273+ 737D 21 55 70     4 ld hl,Album_de_fotos_1+1
 274+ 7380 7E               ld a,(hl)
 275+ 7381 A7               and a
 276+ 7382 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 277+ 7384
 278+ 7384              ; ----- ----- ----- -----
 279+ 7384              ; ----- ----- ----- -----
 280+ 7384
 281+ 7384 CD 20 74         call Album1_a_Album
 282+ 7387
 283+ 7387              ;   Album_de_fotos_2.
 284+ 7387
 285+ 7387 3A 41 89     1 ld a,(Ctrl_Semaforo)
 286+ 738A CB 5F            bit 3,a
 287+ 738C 20 36            jr nz,8F
 288+ 738E
 289+ 738E              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 290+ 738E              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 291+ 738E              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 292+ 738E
 293+ 738E              ;   Contiene Frame completo ???
 294+ 738E
 295+ 738E 3A 40 89     12 ld a,(Semaforo)
 296+ 7391 CB 57            bit 2,a
 297+ 7393 20 13            jr nz,5F
 298+ 7395
 299+ 7395              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 300+ 7395
 301+ 7395 21 A9 70         ld hl,Album_de_fotos_2+1
 302+ 7398 7E               ld a,(hl)
 303+ 7399 A7               and a
 304+ 739A 20 04            jr nz,9F
 305+ 739C
 306+ 739C              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 307+ 739C              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 308+ 739C
 309+ 739C CD 54 74         call Actualiza_punteros_de_albumes
 310+ 739F C9               ret
 311+ 73A0
 312+ 73A0              ;   Album_de_fotos_2 no está completo pero contiene datos.
 313+ 73A0
 314+ 73A0 21 41 89     9 ld hl,Ctrl_Semaforo
 315+ 73A3 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 316+ 73A5 CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 317+ 73A7 C9               ret
 318+ 73A8
 319+ 73A8 21 A9 70     5 ld hl,Album_de_fotos_2+1
 320+ 73AB 7E               ld a,(hl)
 321+ 73AC A7               and a
 322+ 73AD 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 323+ 73AF
 324+ 73AF              ; ----- ----- ----- -----
 325+ 73AF              ; ----- ----- ----- -----
 326+ 73AF              ; ----- ----- ----- -----
 327+ 73AF
 328+ 73AF              ;   Album_de_fotos_2 contiene un frame completo.
 329+ 73AF              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 330+ 73AF
 331+ 73AF CD F9 73         call Album2_a_Album1
 332+ 73B2
 333+ 73B2              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 334+ 73B2              ;   Album_de_fotos_3. Contiene un frame completo ???
 335+ 73B2
 336+ 73B2 3A 40 89     2 ld a,(Semaforo)
 337+ 73B5 CB 5F            bit 3,a
 338+ 73B7 20 13            jr nz,6F
 339+ 73B9
 340+ 73B9              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 341+ 73B9
 342+ 73B9 21 FD 70         ld hl,Album_de_fotos_3+1
 343+ 73BC 7E               ld a,(hl)
 344+ 73BD A7               and a
 345+ 73BE 20 04            jr nz,8F
 346+ 73C0
 347+ 73C0              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 348+ 73C0              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 349+ 73C0
 350+ 73C0 CD 54 74         call Actualiza_punteros_de_albumes
 351+ 73C3 C9               ret
 352+ 73C4
 353+ 73C4              ;   Album_de_fotos_3 no está completo.
 354+ 73C4
 355+ 73C4 21 41 89     8 ld hl,Ctrl_Semaforo
 356+ 73C7 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 357+ 73C9 CB CE            set 1,(hl)
 358+ 73CB C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 359+ 73CC
 360+ 73CC              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 361+ 73CC
 362+ 73CC 21 FD 70     6 ld hl,Album_de_fotos_3+1
 363+ 73CF 7E               ld a,(hl)
 364+ 73D0 A7               and a
 365+ 73D1 C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 366+ 73D2
 367+ 73D2              ; ----- ----- ----- -----
 368+ 73D2              ; ----- ----- ----- -----
 369+ 73D2              ; ----- ----- ----- -----
 370+ 73D2
 371+ 73D2 2A 30 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 372+ 73D5 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 373+ 73D8 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 374+ 73DB
 375+ 73DB CD 47 74         call Limpia_album
 376+ 73DE
 377+ 73DE              ;   Actualizamos (End_Snapshot_2):
 378+ 73DE
 379+ 73DE A7               and a
 380+ 73DF ED 4A            adc hl,bc
 381+ 73E1 22 2C 89         ld (End_Snapshot_2),hl
 382+ 73E4
 383+ 73E4              ;   Limpiamos Album_de_fotos_3.
 384+ 73E4
 385+ 73E4 2A 30 89         ld hl,(End_Snapshot_3)
 386+ 73E7 01 FC 70         ld bc,Album_de_fotos_3
 387+ 73EA 11 FD 70         ld de,Album_de_fotos_3+1
 388+ 73ED AF               xor a
 389+ 73EE 02               ld (bc),a
 390+ 73EF CD 47 74         call Limpia_album
 391+ 73F2
 392+ 73F2              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 393+ 73F2              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 394+ 73F2
 395+ 73F2 21 00 00         ld hl,0
 396+ 73F5 22 30 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 397+ 73F8
 398+ 73F8 C9               ret
 399+ 73F9
 400+ 73F9 2A 2C 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 401+ 73FC 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 402+ 73FF 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 403+ 7402 CD 47 74         call Limpia_album
 404+ 7405
 405+ 7405              ;   Actualizamos (End_Snapshot_1):
 406+ 7405
 407+ 7405 A7               and a
 408+ 7406 ED 4A            adc hl,bc
 409+ 7408 22 28 89         ld (End_Snapshot_1),hl
 410+ 740B
 411+ 740B              ;   Limpiamos Album_de_fotos_2.
 412+ 740B
 413+ 740B 2A 2C 89         ld hl,(End_Snapshot_2)
 414+ 740E 01 A8 70         ld bc,Album_de_fotos_2
 415+ 7411 11 A9 70         ld de,Album_de_fotos_2+1
 416+ 7414 AF               xor a
 417+ 7415 02               ld (bc),a
 418+ 7416 CD 47 74         call Limpia_album
 419+ 7419 21 00 00         ld hl,0
 420+ 741C 22 2C 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 421+ 741F C9               ret
 422+ 7420
 423+ 7420
 424+ 7420 2A 28 89     Album1_a_Album ld hl,(End_Snapshot_1)      ; Final, (origen).
 425+ 7423 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 426+ 7426 11 00 70         ld de,Album_de_fotos        ; Destino.
 427+ 7429
 428+ 7429 CD 47 74         call Limpia_album
 429+ 742C
 430+ 742C              ;   Calculamos (End_Snapshot)
 431+ 742C
 432+ 742C A7               and a
 433+ 742D ED 4A            adc hl,bc
 434+ 742F 22 22 89         ld (End_Snapshot),hl
 435+ 7432
 436+ 7432              ;   Limpiamos Album_de_fotos_1.
 437+ 7432
 438+ 7432 2A 28 89         ld hl,(End_Snapshot_1)
 439+ 7435 01 54 70         ld bc,Album_de_fotos_1
 440+ 7438 11 55 70         ld de,Album_de_fotos_1+1
 441+ 743B AF               xor a
 442+ 743C 02               ld (bc),a
 443+ 743D
 444+ 743D CD 47 74         call Limpia_album
 445+ 7440
 446+ 7440 21 00 00         ld hl,0
 447+ 7443 22 28 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 448+ 7446 C9               ret
 449+ 7447
 450+ 7447              ; ----------------------------------------------------
 451+ 7447              ;
 452+ 7447              ;   10/8/23
 453+ 7447              ;
 454+ 7447              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 455+ 7447              ;
 456+ 7447              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 457+ 7447              ;           BC ..... Dirección de inicio del álbum.
 458+ 7447              ;           DE ..... Dirección de inicio del álbum. +1
 459+ 7447
 460+ 7447              ;    ld hl,(End_Snapshot)
 461+ 7447              ;    ld bc,Album_de_fotos
 462+ 7447              ;    ld de,Album_de_fotos+1
 463+ 7447
 464+ 7447              ;   MODIFICA: A,HL,BC y DE.
 465+ 7447
 466+ 7447              Limpia_album
 467+ 7447 D5               push de                     ; Guardo DESTINO.
 468+ 7448 C5               push bc                     ; Guardo ORIGEN.
 469+ 7449 ED 42            sbc hl,bc
 470+ 744B 4D               ld c,l
 471+ 744C 44               ld b,h
 472+ 744D E1               pop hl
 473+ 744E C5               push bc
 474+ 744F ED B0            ldir
 475+ 7451 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 476+ 7452 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 477+ 7453 C9               ret                         ; _ a otro).
 478+ 7454
 479+ 7454              ; --------------------------------------------------------------------------------------------
 480+ 7454              ;
 481+ 7454              ;   20/10/23
 482+ 7454
 483+ 7454              ;
 484+ 7454
 485+ 7454              Actualiza_punteros_de_albumes
 486+ 7454
 487+ 7454 2A 34 89         ld hl,(Puntero_indice_album_de_fotos)
 488+ 7457 2B               dec hl
 489+ 7458 2B               dec hl
 490+ 7459 22 34 89         ld (Puntero_indice_album_de_fotos),hl
 491+ 745C
 492+ 745C 2A 38 89         ld hl,(Puntero_indice_End_Snapshot)
 493+ 745F 2B               dec hl
 494+ 7460 2B               dec hl
 495+ 7461 22 38 89         ld (Puntero_indice_End_Snapshot),hl
 496+ 7464 CD 8C 8C         call Extrae_address
 497+ 7467 22 3C 89         ld (Puntero_de_End_Snapshot),hl
 498+ 746A
 499+ 746A C9               ret
 500+ 746B
# file closed: Guarda_foto_registros.asm
1692  746B
1693  746B              	SAVESNA "Pruebas.sna", START
1694  746B
1695  746B
1696  746B
1697  746B
# file closed: Banco_de_pruebas.asm
