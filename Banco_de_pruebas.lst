# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 8C 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 9C 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD AC 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 96 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B 8C 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC 97 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C5 85        	defw Caja_2
 110+ 8574 D2 85        	defw Caja_3
 111+ 8576 DF 85        	defw Caja_4
 112+ 8578 EC 85        	defw Caja_5
 113+ 857A F9 85        	defw Caja_6
 114+ 857C 06 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8
 152+ 85B8              ; Cada caja tiene 19 bytes !!!
 153+ 85B8
 154+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 155+ 85BA 00           	db %00000000										; (Attr).
 156+ 85BB 00           	db 0												; (Cuad_objeto).
 157+ 85BC 00           	db 0												; (Impacto).
 158+ 85BD 00 00        	defw 0												; (Puntero_de_impresion).
 159+ 85BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 160+ 85C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 161+ 85C3 00           	db 0												; (Ctrl_0).
 162+ 85C4 00           	db 0												; (Ctrl_2).
 163+ 85C5
 164+ 85C5              ; ---------- ---------- ---------- ---------- ----------
 165+ 85C5
 166+ 85C5 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 167+ 85C7 00           	db %00000000										; (Attr).
 168+ 85C8 00           	db 0												; (Cuad_objeto).
 169+ 85C9 00           	db 0												; (Impacto).
 170+ 85CA 00 00        	defw 0												; (Puntero_de_impresion).
 171+ 85CC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 172+ 85CE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 173+ 85D0 00           	db 0												; (Ctrl_0).
 174+ 85D1 00           	db 0												; (Ctrl_2).
 175+ 85D2
 176+ 85D2              ; ---------- ---------- ---------- ---------- ----------
 177+ 85D2
 178+ 85D2 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 179+ 85D4 00           	db %00000000										; (Attr).
 180+ 85D5 00           	db 0												; (Cuad_objeto).
 181+ 85D6 00           	db 0												; (Impacto).
 182+ 85D7 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 85D9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 85DB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 85DD 00           	db 0												; (Ctrl_0).
 186+ 85DE 00           	db 0												; (Ctrl_2).
 187+ 85DF
 188+ 85DF              ; ---------- ---------- ---------- ---------- ----------
 189+ 85DF
 190+ 85DF 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 191+ 85E1 00           	db %00000000										; (Attr).
 192+ 85E2 00           	db 0												; (Cuad_objeto).
 193+ 85E3 00           	db 0												; (Impacto).
 194+ 85E4 00 00        	defw 0												; (Puntero_de_impresion).
 195+ 85E6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 196+ 85E8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 197+ 85EA 00           	db 0												; (Ctrl_0).
 198+ 85EB 00           	db 0												; (Ctrl_2).
 199+ 85EC
 200+ 85EC              ; ---------- ---------- ---------- ---------- ----------
 201+ 85EC
 202+ 85EC 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 203+ 85EE 00           	db %00000000										; (Attr).
 204+ 85EF 00           	db 0												; (Cuad_objeto).
 205+ 85F0 00           	db 0												; (Impacto).
 206+ 85F1 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 85F3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 85F5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 85F7 00           	db 0												; (Ctrl_0).
 210+ 85F8 00           	db 0												; (Ctrl_2).
 211+ 85F9
 212+ 85F9              ; ---------- ---------- ---------- ---------- ----------
 213+ 85F9
 214+ 85F9 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 215+ 85FB 00           	db %00000000										; (Attr).
 216+ 85FC 00           	db 0												; (Cuad_objeto).
 217+ 85FD 00           	db 0												; (Impacto).
 218+ 85FE 00 00        	defw 0												; (Puntero_de_impresion).
 219+ 8600 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 220+ 8602 00 00        	defw 0 												; (Contador_de_mov_masticados).
 221+ 8604 00           	db 0												; (Ctrl_0).
 222+ 8605 00           	db 0												; (Ctrl_2).
 223+ 8606
 224+ 8606              ; ---------- ---------- ---------- ---------- ----------
 225+ 8606
 226+ 8606 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 227+ 8608 00           	db %00000000										; (Attr).
 228+ 8609 00           	db 0												; (Cuad_objeto).
 229+ 860A 00           	db 0												; (Impacto).
 230+ 860B 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 860D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 860F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 8611 00           	db 0												; (Ctrl_0).
 234+ 8612 00           	db 0												; (Ctrl_2).
 235+ 8613
 236+ 8613              ; -------------------------------------------------------------------------------------
 237+ 8613              ;
 238+ 8613              ;	11/1/24
 239+ 8613              ;
 240+ 8613              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 241+ 8613              ;
 242+ 8613              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 243+ 8613              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 244+ 8613              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 245+ 8613              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 246+ 8613
 247+ 8613              Indice_de_definiciones_de_entidades
 248+ 8613
 249+ 8613 17 86        	defw Entidad_1
 250+ 8615 24 86        	defw Entidad_2
 251+ 8617
 252+ 8617              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 253+ 8617
 254+ 8617              ;	BADSAT, (Satélite malvado).
 255+ 8617
 256+ 8617 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 257+ 861A 04           	db %00000100										; (Attr).
 258+ 861B A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 259+ 861D 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 260+ 861F 03 40        	defw $4003                                      	; (Posicion_inicio).
 261+ 8621 01           	db 1												; (Cuad_objeto).
 262+ 8622 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 263+ 8624
 264+ 8624 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 265+ 8627 02           	db %00000010										; (Attr).
 266+ 8628 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 267+ 862A 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 268+ 862C 40 50        	defw $5040                                      	; (Posicion_inicio).
 269+ 862E 01           	db 1												; (Cuad_objeto).
 270+ 862F 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 271+ 8631
# file closed: Cajas_y_disparos.asm
 105  8631              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8631              ; 19/1/24
   2+ 8631
   3+ 8631              Indice_de_niveles
   4+ 8631
   5+ 8631 39 86        	defw Nivel_1
   6+ 8633 3F 86        	defw Nivel_2
   7+ 8635
   8+ 8635              ;	...
   9+ 8635              ;	...
  10+ 8635              ;	+ Niveles ...
  11+ 8635
  12+ 8635 00 00        	defw 0
  13+ 8637 00 00        	defw 0
  14+ 8639
  15+ 8639 01           Nivel_1 db 1									; Nº de entidades.
  16+ 863A 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 863E 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 863F
  19+ 863F 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8640 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8644 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8648 01 02
  22+ 864A 02 01 01 01  	db 2,1,1,1,1,2
  22+ 864E 01 02
  23+ 8650
  24+ 8650              ;---------------------------------------------------------------------------------------------------------------
  25+ 8650              ;
  26+ 8650              ;   19/1/24
  27+ 8650              ;
  28+ 8650              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8650              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8650              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8650              ;	_ de la 1ª entidad del Nivel.
  32+ 8650              ;
  33+ 8650              ;	MODIFICA: HL,DE y A.
  34+ 8650              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8650
  36+ 8650              Inicializa_Nivel
  37+ 8650
  38+ 8650 2A B5 87     	ld hl,(Puntero_indice_NIVELES)
  39+ 8653 CD 40 8B     	call Extrae_address
  40+ 8656 7E           	ld a,(hl)
  41+ 8657 32 80 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 865A 23           	inc hl
  43+ 865B CD 65 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 865E 22 B7 87     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 8661 CD 6E 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8664 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8665
  48+ 8665              ; ----------------------
  49+ 8665
  50+ 8665 11 5F 87     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8668 01 04 00     	ld bc,4
  52+ 866B ED B0        	ldir
  53+ 866D C9           	ret
  54+ 866E
  55+ 866E 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 866F CD C3 86         call Calcula_salto_en_BC
  57+ 8672 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 8675 A7               and a
  59+ 8676 ED 4A            adc hl,bc
  60+ 8678 CD 40 8B         call Extrae_address
  61+ 867B 22 6B 87         ld (Puntero_indice_mov),hl
  62+ 867E C9               ret
  63+ 867F
  64+ 867F              ;---------------------------------------------------------------------------------------------------------------
  65+ 867F              ;
  66+ 867F              ;   5/1/24
  67+ 867F              ;
  68+ 867F              ;	Destruye A,BC,HL,DE
  69+ 867F
  70+ 867F              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 867F              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 867F
  73+ 867F              Prepara_cajas_de_entidades
  74+ 867F
  75+ 867F              ; Preparamos los punteros de las cajas de entidades:
  76+ 867F
  77+ 867F 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  78+ 8682 CD 40 8B     	call Extrae_address
  79+ 8685 CD D5 86     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  80+ 8688              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  81+ 8688 CD 18 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  82+ 868B
  83+ 868B              Tipo_de_entidad
  84+ 868B
  85+ 868B 2A B7 87     	ld hl,(Datos_de_nivel)
  86+ 868E 7E           	ld a,(hl)
  87+ 868F 3D           	dec a
  88+ 8690 20 FE        	jr nz,$														; STOP si no es una entidad de tipo 1.
  89+ 8692
  90+ 8692 21 97 87     	ld hl,Ctrl_4
  91+ 8695 CB 46        	bit 0,(hl)
  92+ 8697 20 FE        	jr nz,$														; STOP si ya hemos generado todos los movimientos masticados de una entidad Tipo 1.
  93+ 8699 CB E6        	set 4,(hl)													; FLAG que indica que hemos completado todos los movimientos masticados de una entidad tipo 1.
  94+ 869B
  95+ 869B              ;	La 1ª entidad del Nivel es una Entidad de tipo 1.
  96+ 869B              ;	Vamos a cargar la definición de una entidad de tipo 1 en DRAW para poder generar todos sus movimientos masticados.
  97+ 869B
  98+ 869B 2A B7 87     	ld hl,(Datos_de_nivel)
  99+ 869E
 100+ 869E              ; En este punto:
 101+ 869E              ;
 102+ 869E              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 103+ 869E              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 104+ 869E
 105+ 869E C5           1 push bc 												; Guardo el nº de cajas a rellenar.
 106+ 869F
 107+ 869F 7E           	ld a,(hl)											; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 108+ 86A0 CD C3 86     	call Calcula_salto_en_BC							; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 109+ 86A3
 110+ 86A3 21 13 86     	ld hl,Indice_de_definiciones_de_entidades
 111+ 86A6 CD CB 86     	call Situa_en_datos_de_definicion					; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 112+ 86A9              ;
 113+ 86A9 CD DF 86     	call Definicion_de_entidad_a_bandeja_DRAW			; Vuelca los datos de la definición en DRAW.
 114+ 86AC CD BE 89     	call Construye_movimientos_masticados_entidad
 115+ 86AF
 116+ 86AF              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 117+ 86AF              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 118+ 86AF              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 119+ 86AF              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 120+ 86AF              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 121+ 86AF
 122+ 86AF CD 13 8A     	call Cargamos_registros_con_mov_masticado
 123+ 86B2 CD 16 71     	call Guarda_foto_registros
 124+ 86B5 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 125+ 86B6
 126+ 86B6              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 127+ 86B6              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 128+ 86B6
 129+ 86B6              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 130+ 86B6
 131+ 86B6 18 FE        	jr $
 132+ 86B8
 133+ 86B8 2A 52 87     	ld hl,(Puntero_de_impresion)
 134+ 86BB CD 4E 9B     	call Genera_coordenadas
 135+ 86BE
 136+ 86BE CD 7C 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 137+ 86C1 C9           	ret
 138+ 86C2
 139+ 86C2              ;	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
 140+ 86C2              ;	call Extrae_address
 141+ 86C2              ;	call Avanza_caja_de_entidades
 142+ 86C2
 143+ 86C2              ;	ld hl,(Datos_de_nivel)
 144+ 86C2              ;	inc hl
 145+ 86C2              ;	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 146+ 86C2
 147+ 86C2              ;	pop bc
 148+ 86C2              ;	djnz 1B
 149+ 86C2
 150+ 86C2 C9           	ret
 151+ 86C3
 152+ 86C3              ;	------------------------------------------------------------------------------------
 153+ 86C3              ;
 154+ 86C3              ;	12/01/24
 155+ 86C3              ;
 156+ 86C3              ;	INPUTS:	A contiene el (Tipo) de entidad.
 157+ 86C3              ;
 158+ 86C3              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 159+ 86C3              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 160+ 86C3
 161+ 86C3 CB 27        Calcula_salto_en_BC sla a
 162+ 86C5 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 163+ 86C7 4F           	ld c,a
 164+ 86C8 06 00        	ld b,0
 165+ 86CA C9           	ret
 166+ 86CB
 167+ 86CB              ; ------------------------------------------------------------------
 168+ 86CB              ;
 169+ 86CB              ;	19/1/24
 170+ 86CB              ;
 171+ 86CB              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 172+ 86CB              ;	Actualiza (Datos_de_entidad) con esa dirección.
 173+ 86CB
 174+ 86CB A7           Situa_en_datos_de_definicion and a
 175+ 86CC ED 4A        	adc hl,bc
 176+ 86CE CD 40 8B     	call Extrae_address
 177+ 86D1 22 86 87         ld (Datos_de_entidad),hl
 178+ 86D4 C9           	ret
 179+ 86D5
 180+ 86D5              ; ------------------------------------------------------------------
 181+ 86D5
 182+ 86D5 22 7A 87     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 183+ 86D8 13           	inc de
 184+ 86D9 13           	inc de
 185+ 86DA EB           	ex de,hl
 186+ 86DB 22 7E 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 187+ 86DE C9           	ret
 188+ 86DF
 189+ 86DF              ; ----------------------------------------------------------------------------------------------------------
 190+ 86DF              ;
 191+ 86DF              ;	19/1/24
 192+ 86DF              ;
 193+ 86DF              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 194+ 86DF              ;	_ de entidad.
 195+ 86DF              ;
 196+ 86DF              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 197+ 86DF              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 198+ 86DF              ;
 199+ 86DF              ;	MODIFICA: HL,DE y BC
 200+ 86DF
 201+ 86DF
 202+ 86DF              Definicion_de_entidad_a_bandeja_DRAW
 203+ 86DF
 204+ 86DF 11 35 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 205+ 86E2
 206+ 86E2 01 03 00     	ld bc,3
 207+ 86E5 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 208+ 86E7              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 209+ 86E7 01 07 00     	ld bc,7
 210+ 86EA CD 12 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 211+ 86ED
 212+ 86ED 01 05 00     	ld bc,5
 213+ 86F0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 214+ 86F2              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 215+ 86F2 01 04 00     	ld bc,4
 216+ 86F5 CD 12 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 217+ 86F8
 218+ 86F8 01 03 00     	ld bc,3
 219+ 86FB ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 220+ 86FD              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 221+ 86FD
 222+ 86FD 01 09 00     	ld bc,9
 223+ 8700 CD 12 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 224+ 8703
 225+ 8703 01 02 00     	ld bc,2
 226+ 8706 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 227+ 8708
 228+ 8708 01 08 00     	ld bc,8
 229+ 870B CD 12 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 230+ 870E
 231+ 870E 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 232+ 8710 12           	ld (de),a 									; Vuelco (Frames_explosion).
 233+ 8711
 234+ 8711 C9           	ret
 235+ 8712
 236+ 8712              ; ---------- -------------- ----------------
 237+ 8712
 238+ 8712 EB           Situa_DE ex de,hl
 239+ 8713 A7           	and a
 240+ 8714 ED 4A        	adc hl,bc
 241+ 8716 EB           	ex de,hl
 242+ 8717 C9           	ret
 243+ 8718
 244+ 8718              ;---------------------------------------------------------------------------------------------------------------
 245+ 8718              ;
 246+ 8718              ;	5/1/24
 247+ 8718              ;
 248+ 8718              ;	INICIALIZA (Numero_parcial_de_entidades).
 249+ 8718              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 250+ 8718              ;
 251+ 8718              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 252+ 8718              ;
 253+ 8718              ;	(Numero_parcial_de_entidades)="7".
 254+ 8718              ;
 255+ 8718              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 256+ 8718              ;
 257+ 8718              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 258+ 8718              ;
 259+ 8718              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 260+ 8718              ;	MODIFICA: A y B.
 261+ 8718              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 262+ 8718
 263+ 8718              Inicializa_Numero_parcial_de_entidades
 264+ 8718
 265+ 8718              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 266+ 8718
 267+ 8718 3A 80 87     	ld a,(Numero_de_entidades)
 268+ 871B A7           	and a
 269+ 871C
 270+ 871C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 271+ 871C              ;	jr z,$
 272+ 871C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 273+ 871C
 274+ 871C 20 03        	jr nz,3F
 275+ 871E
 276+ 871E              ; ---------- ---------- ----------
 277+ 871E
 278+ 871E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 279+ 871E              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 280+ 871E
 281+ 871E CD 50 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 282+ 8721
 283+ 8721              ; ---------- ---------- ----------
 284+ 8721
 285+ 8721 3A 80 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 286+ 8724 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 287+ 8726 38 08        	jr c,1F
 288+ 8728
 289+ 8728              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 290+ 8728              ; Actualizamos variables.
 291+ 8728
 292+ 8728 3E 07        	ld a,7
 293+ 872A 32 81 87     	ld (Numero_parcial_de_entidades),a
 294+ 872D 47           	ld b,a
 295+ 872E 18 04        	jr 2F
 296+ 8730
 297+ 8730              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 298+ 8730              ; (Numero_de_entidades)="0".
 299+ 8730
 300+ 8730 32 81 87     1 ld (Numero_parcial_de_entidades),a
 301+ 8733 47           	ld b,a
 302+ 8734 C9           2 ret
# file closed: Niveles.asm
 106  8735
 107  8735              ; ******************************************************************************************************************************************************************************************
 108  8735              ; Constantes.
 109  8735              ; ******************************************************************************************************************************************************************************************
 110  8735              ;
 111  8735              ; 25/12/23
 112  8735
 113  8735              ;
 114  8735              ; Constantes.
 115  8735              ;
 116  8735
 117  8735              Sprite_vacio equ $f000
 118  8735              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8735              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8735              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8735              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8735
 123  8735              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8735              ;														;
 125  8735              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  8735
 127  8735              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  8735              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  8735              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  8735              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  8735              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  8735
 133  8735              ;														; 55 Bytes.
 134  8735              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  8735              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  8735
 137  8735              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  8735
 139  8735              ; ******************************************************************************************************************************************************************************************
 140  8735              ; Variables.
 141  8735              ; ******************************************************************************************************************************************************************************************
 142  8735              ;
 143  8735              ; 18/01/24
 144  8735              ;
 145  8735              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  8735              ;
 147  8735
 148  8735              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 149  8735
 150  8735 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  8736              ;															- Patrón de movimiento.
 152  8736              ;															- Aspecto
 153  8736 00           Filas db 0												; Filas. [DRAW]
 154  8737 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  8738 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  873A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  873C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  873D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  873E
 160  873E              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  873E
 162  873E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  873F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  873F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  873F 00           Attr db 0												; Atributos de la entidad:
 166  8740
 167  8740              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  8740              ;
 169  8740              ;	COLORES: 0 ..... NEGRO
 170  8740              ;    		 1 ..... AZUL
 171  8740              ; 			 2 ..... ROJO
 172  8740              ;			 3 ..... MAGENTA
 173  8740              ; 			 4 ..... VERDE
 174  8740              ; 			 5 ..... CIAN
 175  8740              ;			 6 ..... AMARILLO
 176  8740              ; 			 7 ..... BLANCO
 177  8740
 178  8740 00 00        Indice_Sprite_der defw 0
 179  8742 00 00        Indice_Sprite_izq defw 0
 180  8744 00 00        Puntero_DESPLZ_der defw 0
 181  8746 00 00        Puntero_DESPLZ_izq defw 0
 182  8748
 183  8748 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  874A 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  874B
 186  874B              ; Variables de objeto. (Características).
 187  874B
 188  874B 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  874C              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  874C              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  874C 00 00 00...  Variables_de_borrado ds 6
 192  8752
 193  8752 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  8754              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  8754
 196  8754 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  8756
 198  8756              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  8756              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  8756
 201  8756 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  8758              ;														; _palabras que componen el "movimiento_masticado".
 203  8758
 204  8758              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  8758
 206  8758 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  8759              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  8759              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  8759              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  8759              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  8759              ;
 212  8759              ; 														DESCRIPCIÖN:
 213  8759              ;
 214  8759              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  8759              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  8759              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  8759              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  8759              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  8759              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  8759              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  8759              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  8759              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  8759              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  8759              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  8759              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  8759              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  8759              ;
 228  8759              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  8759              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  8759              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  8759
 232  8759              ; Variables de funcionamiento. [DRAW].
 233  8759
 234  8759 00           Columnas db 0
 235  875A 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  875C              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  875C 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  875D
 239  875D              ; variables de control general.
 240  875D
 241  875D 00           Ctrl_2 db 0
 242  875E              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  875E              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  875E              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  875E              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  875E              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  875E              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  875E              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  875E              ;
 250  875E              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  875E              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  875E              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  875E              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  875E              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  875E              ;														BIT 4, ???
 256  875E              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  875E
 258  875E 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  875F
 260  875F              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  875F
 262  875F              ;					         		---------;      ;---------
 263  875F
 264  875F              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  875F
 266  875F              Perfiles_de_velocidad
 267  875F
 268  875F 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  8760 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  8761 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  8762 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  8763
 273  8763              ; Contadores de 16 bits.
 274  8763
 275  8763 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  8765 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  8767 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  8769 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  876B
 280  876B              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  876B
 282  876B 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  876D 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  876F 00 00        Puntero_indice_mov_bucle defw 0							;
 285  8771              ;
 286  8771              ;
 287  8771 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  8772              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  8772              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  8772 00           Incrementa_puntero_backup db 0
 291  8773 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  8774              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  8774 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  8775 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  8776 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  8777              ;
 297  8777              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  8777              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  8777              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  8777              ;
 301  8777              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  8777              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  8777              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  8777              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  8777              ;
 306  8777              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  8777              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  8777              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  8777              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  8777
 311  8777 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  8778
 313  8778              ;														DESCRIPCIÓN:
 314  8778              ;
 315  8778              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  8778              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  8778              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  8778              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  8778              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  8778              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  8778
 322  8778              ;														BIT 3, Recarga de nueva oleada.
 323  8778              ;														BIT 4, Recarga de nueva oleada.
 324  8778              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  8778              ;														BIT 6, **** Frame completo.
 326  8778              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  8778
 328  8778 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  877A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  877A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  877A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  877A
 333  877A              ; Gestión de ENTIDADES y CAJAS.
 334  877A
 335  877A 00 00        Puntero_store_caja defw 0
 336  877C 00 00        Puntero_restore_caja defw 0
 337  877E 00 00        Indice_restore_caja defw 0
 338  8780 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  8781 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  8782 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8783 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8784              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8784              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8784              ;														; _ (Numero_de_malotes)="0".
 345  8784 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  8786 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  8788              ;														; _ puntero (Indice_entidades).
 348  8788
 349  8788              ;---------------------------------------------------------------------------------------------------------------
 350  8788              ;
 351  8788              ;	11/01/24
 352  8788              ;
 353  8788              ;	Álbumes.
 354  8788
 355  8788 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  878A              ;														; _variable para almacenar lo posición del puntero_
 357  878A              ; 														; _de pila, SP.
 358  878A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  878C              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  878C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  878E 00 70        Stack_snapshot defw Album_de_fotos
 362  8790 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  8792
 364  8792              ;End_Snapshot defw Album_de_fotos
 365  8792              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  8792 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  8794              ;														; _el snapshot de los registros del siguiente disparo.
 368  8794              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  8794 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  8796
 371  8796 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  8797              ;
 373  8797              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  8797              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  8797              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  8797
 377  8797 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 378  8798              ;
 379  8798              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 380  8798
 381  8798              ; Gestión de Disparos.
 382  8798
 383  8798 00           Numero_de_disparotes db 0
 384  8799 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 385  879B 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 386  879D 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 387  879E              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 388  879E              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 389  879E 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 390  87A0              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 391  87A0              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 392  87A0              ;														; _produzca colisión.
 393  87A0 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 394  87A2              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 395  87A2 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 396  87A5              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 397  87A5 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 398  87A8              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 399  87A8 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 400  87A9
 401  87A9              ;---------------------------------------------------------------------------------------------------------------
 402  87A9
 403  87A9              ; Relojes y temporizaciones.
 404  87A9
 405  87A9 00           Contador_de_frames db 0
 406  87AA 00           Contador_de_frames_2 db 0
 407  87AB
 408  87AB 04           Clock_explosion db 4
 409  87AC 14           Clock_Entidades_en_curso db 20
 410  87AD 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 411  87AE              ;														; Repite la oleada de entidades.
 412  87AE 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 413  87AF 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 414  87B0 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 415  87B1
 416  87B1 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 417  87B2 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 418  87B3 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 419  87B4
 420  87B4              ;---------------------------------------------------------------------------------------------------------------
 421  87B4
 422  87B4              ; Gestión de NIVELES.
 423  87B4
 424  87B4 00           Nivel db 0												; Nivel actual del juego.
 425  87B5 00 00        Puntero_indice_NIVELES defw 0
 426  87B7 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 427  87B9              ; 														; _ que definen el NIVEL.
 428  87B9              ; Y todo comienza aquí .....
 429  87B9              ;
 430  87B9              ; 	INICIO  *************************************************************************************************************************************************************************
 431  87B9              ;
 432  87B9              ;	5/1/24
 433  87B9
 434  87B9              START
 435  87B9
 436  87B9 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 437  87BC 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 438  87BE ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 439  87C0 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 440  87C2 F3           	DI
 441  87C3
 442  87C3 3E 07        	ld a,%00000111
 443  87C5 CD C0 97     	call Cls
 444  87C8 CD 0B 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 445  87CB
 446  87CB              ; INICIALIZACIÓN.
 447  87CB
 448  87CB              ;	Inicializa 1er Nivel.
 449  87CB
 450  87CB 21 31 86     	ld hl,Indice_de_niveles
 451  87CE 22 B5 87     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 452  87D1 CD 50 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 453  87D4              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 454  87D4              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 455  87D4              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 456  87D4
 457  87D4 CD 7F 86     4 call Prepara_cajas_de_entidades
 458  87D7
 459  87D7 CD A8 8A     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 460  87DA              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 461  87DA CD BB 8B     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 462  87DD
 463  87DD 21 81 87     	ld hl,Numero_parcial_de_entidades
 464  87E0 46           	ld b,(hl)
 465  87E1              ;	inc b
 466  87E1              ;	dec b
 467  87E1              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 468  87E1
 469  87E1              ;	INICIA ENTIDADES !!!!!
 470  87E1
 471  87E1              ;1 push bc  												; Guardo el contador de entidades.
 472  87E1              ;	call Inicia_entidad
 473  87E1
 474  87E1              ;	pop bc
 475  87E1              ;	djnz 1B  											; Decremento el contador de entidades.
 476  87E1
 477  87E1              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 478  87E1              ; (Esto se dá cuando se inicia una nueva oleada).
 479  87E1
 480  87E1              ;	ld a,(Ctrl_1)
 481  87E1              ;	bit 3,a
 482  87E1              ;	jr nz,5F											; Loop
 483  87E1
 484  87E1              ; 	INICIA AMADEUS !!!!!
 485  87E1
 486  87E1              ;3 call Restore_Amadeus
 487  87E1              ;	call Inicia_Puntero_objeto
 488  87E1              ;	call Draw
 489  87E1
 490  87E1              ;	call Guarda_movimiento_masticado	;! Provisional
 491  87E1
 492  87E1              ;	call Guarda_foto_registros
 493  87E1              ;	call Guarda_datos_de_borrado_Amadeus
 494  87E1
 495  87E1              ;	ld de,Amadeus_db
 496  87E1              ;	call Store_Amadeus
 497  87E1
 498  87E1              ; 	INICIA DISPAROS !!!!!
 499  87E1
 500  87E1              ;	call Inicia_Puntero_Disparo_Entidades
 501  87E1              ;	call Inicia_Puntero_Disparo_Amadeus
 502  87E1
 503  87E1              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 504  87E1
 505  87E1 CD A8 8A     5 call Inicia_punteros_de_cajas
 506  87E4 CD BB 8B     	call Restore_entidad
 507  87E7
 508  87E7 3A 77 87     	ld a,(Ctrl_1)
 509  87EA CB 5F        	bit 3,a
 510  87EC 28 07        	jr z,6F
 511  87EE
 512  87EE              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 513  87EE
 514  87EE 21 77 87     	ld hl,Ctrl_1
 515  87F1 CB 9E        	res 3,(hl)
 516  87F3 18 07        	jr Main
 517  87F5
 518  87F5              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 519  87F5
 520  87F5 21 96 87     6 ld hl,Ctrl_3
 521  87F8 CB C6        	set 0,(hl)											; Frame completo.
 522  87FA FB           	ei
 523  87FB 76           	halt
 524  87FC
 525  87FC              ; ------------------------------------
 526  87FC
 527  87FC              Main
 528  87FC              ;
 529  87FC              ;	11/12/23
 530  87FC
 531  87FC              ; Aparece nueva entidad ???
 532  87FC
 533  87FC              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 534  87FC              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 535  87FC              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 536  87FC              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 537  87FC              ;														; _un 2º bloque.
 538  87FC
 539  87FC 3E 01        	ld a,1
 540  87FE D3 FE        	out ($fe),a
 541  8800
 542  8800 3A AC 87     	ld a,(Clock_Entidades_en_curso)
 543  8803 47           	ld b,a
 544  8804 3A A9 87     	ld a,(Contador_de_frames)
 545  8807 B8           	cp b
 546  8808 20 18        	jr nz,13F
 547  880A
 548  880A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 549  880A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 550  880A
 551  880A 3A 81 87     21 ld a,(Numero_parcial_de_entidades)
 552  880D 47           	ld b,a
 553  880E 3A 82 87     	ld a,(Entidades_en_curso)
 554  8811 B8           	cp b
 555  8812 28 0E        	jr z,13F
 556  8814 30 0C        	jr nc,13F
 557  8816
 558  8816 3C           	inc a
 559  8817 32 82 87     	ld (Entidades_en_curso),a
 560  881A
 561  881A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 562  881A
 563  881A 3A AC 87     	ld a,(Clock_Entidades_en_curso)
 564  881D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 565  881D              ;! _ IMPREDECIBLE !!!!
 566  881D C6 64        	add 100
 567  881F 32 AC 87     	ld (Clock_Entidades_en_curso),a
 568  8822
 569  8822              ; -------------------------------------------------------------------------------------------------------------
 570  8822
 571  8822              ; Habilita disparos.
 572  8822
 573  8822 21 AE 87     13 ld hl,Disparo_Amadeus
 574  8825 11 B0 87     	ld de,CLOCK_repone_disparo_Amadeus
 575  8828 CD 88 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 576  882B
 577  882B 21 B1 87     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 578  882E 11 B3 87     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 579  8831 CD 88 9B     	call Habilita_disparos
 580  8834
 581  8834              ; COLISIONES.
 582  8834
 583  8834 CD AA 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 584  8837
 585  8837              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 586  8837              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 587  8837              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 588  8837
 589  8837 AF           	xor a
 590  8838 32 9D 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 591  883B
 592  883B CD A8 8A     	call Inicia_punteros_de_cajas
 593  883E CD BB 8B     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 594  8841              ; 														; _ en DRAW.
 595  8841 3A 36 87     	ld a,(Filas)
 596  8844 A7           	and a
 597  8845 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 598  8847 CD CD 8B     	call Incrementa_punteros_de_cajas
 599  884A 18 F2        	jr 12B
 600  884C
 601  884C              ; ---------------------------------------------------------------------------------------
 602  884C
 603  884C 3A 81 87     10 ld a,(Numero_parcial_de_entidades)
 604  884F 47               ld b,a
 605  8850 A7           	and a
 606  8851 20 14        	jr nz,11F
 607  8853
 608  8853 21 77 87     	ld hl,Ctrl_1
 609  8856 CB 66        	bit 4,(hl)
 610  8858 C2 00 89     	jp nz,16F
 611  885B
 612  885B              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 613  885B
 614  885B 21 77 87     	ld hl,Ctrl_1
 615  885E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 616  8860
 617  8860 3A A9 87     	ld a,(Contador_de_frames)
 618  8863 3C           	inc a
 619  8864 32 AD 87     	ld (Activa_recarga_cajas),a
 620  8867
 621  8867              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 622  8867
 623  8867 3A 82 87     11 ld a,(Entidades_en_curso)
 624  886A A7           	and a
 625  886B CA 00 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 626  886E 47           	ld b,a												; No hay entidades que gestionar.
 627  886F
 628  886F              ; ( Código que ejecutamos con cada entidad: ).
 629  886F
 630  886F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 631  886F
 632  886F C5           15 push bc 												; Nº de entidades en curso.
 633  8870
 634  8870              ; Existe "Entidad_guía" ???.
 635  8870              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 636  8870
 637  8870 3A 96 87     	ld a,(Ctrl_3)
 638  8873 CB 4F        	bit 1,a
 639  8875 20 11        	jr nz,22F
 640  8877
 641  8877              ; Almacén de "Movimientos_masticados" lleno ???
 642  8877              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 643  8877              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 644  8877
 645  8877 3A 96 87     	ld a,(Ctrl_3)
 646  887A CB 5F        	bit 3,a
 647  887C 20 0A        	jr nz,22F
 648  887E
 649  887E              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 650  887E
 651  887E 21 5D 87     	ld hl,Ctrl_2
 652  8881 CB EE        	set 5,(hl)
 653  8883 21 96 87     	ld hl,Ctrl_3
 654  8886 CB CE        	set 1,(hl)
 655  8888
 656  8888              ; Impacto ???
 657  8888
 658  8888 3A 4B 87     22 ld a,(Impacto)
 659  888B A7           	and a
 660  888C 28 31        	jr z,8F
 661  888E
 662  888E              ; Hay Impacto en esta entidad.
 663  888E
 664  888E 21 AB 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 665  8891 35           	dec (hl)
 666  8892 C2 F3 88     	jp nz,17F
 667  8895
 668  8895              ;! Velocidad de la animación de la explosión.
 669  8895
 670  8895 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 671  8897              ;														; _,(velocidad de la explosión).
 672  8897              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 673  8897
 674  8897 CD 7F 8C     	call Repone_datos_de_borrado
 675  889A CD E6 8A     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 676  889D
 677  889D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 678  889D
 679  889D 3A 5D 87     	ld a,(Ctrl_2)
 680  88A0 CB 4F        	bit 1,a
 681  88A2 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 682  88A4
 683  88A4              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 684  88A4
 685  88A4 3A 3E 87     	ld a,(CTRL_DESPLZ)
 686  88A7 A7           	and a
 687  88A8 20 08        	jr nz,18F
 688  88AA
 689  88AA 21 84 84     	ld hl,Indice_Explosion_2x2-2
 690  88AD 22 44 87     	ld (Puntero_DESPLZ_der),hl
 691  88B0 18 06        	jr 19F
 692  88B2
 693  88B2 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 694  88B5 22 44 87     	ld (Puntero_DESPLZ_der),hl
 695  88B8
 696  88B8 21 5D 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 697  88BB CB CE        	set 1,(hl)
 698  88BD 18 22        	jr 7F
 699  88BF
 700  88BF              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 701  88BF              ; _con las coordenadas de la entidad almacenada en DRAW.
 702  88BF
 703  88BF 3A 77 87     8 ld a,(Ctrl_1)
 704  88C2 CB 57        	bit 2,a
 705  88C4 28 1B        	jr z,7F
 706  88C6
 707  88C6 2A A0 87     	ld hl,(Coordenadas_disparo_certero)
 708  88C9 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 709  88CA              ;														; E contiene la coordenada_X del disparo.
 710  88CA 2A 3C 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 711  88CD              ;														; H FILA, (Coordenada_y de la entidad).
 712  88CD A7           	and a
 713  88CE ED 52        	sbc hl,de
 714  88D0
 715  88D0 CD C3 90     	call Determina_resultado_comparativa
 716  88D3
 717  88D3 78           	ld a,b
 718  88D4 A7           	and a
 719  88D5 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 720  88D7
 721  88D7              ; ----- ----- -----
 722  88D7
 723  88D7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 724  88D9 32 4B 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 725  88DC
 726  88DC 21 77 87     	ld hl,Ctrl_1
 727  88DF CB 96        	res 2,(hl)
 728  88E1
 729  88E1 CD 51 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 730  88E4
 731  88E4 3A 58 87     	ld a,(Ctrl_0)
 732  88E7 CB 67        	bit 4,a
 733  88E9 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 734  88EB
 735  88EB              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 736  88EB              ; [[[
 737  88EB              ;	call Detecta_disparo_entidad
 738  88EB              ; ]]]
 739  88EB
 740  88EB CD 29 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 741  88EE
 742  88EE 21 58 87     	ld hl,Ctrl_0
 743  88F1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 744  88F3
 745  88F3 CD 7C 8B     17 call Store_Restore_cajas
 746  88F6
 747  88F6 C1           	pop bc
 748  88F7
 749  88F7 05           	dec b
 750  88F8 C2 6F 88     	jp nz,15B
 751  88FB
 752  88FB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 753  88FB              ; Hemos gestionado todas las unidades.
 754  88FB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 755  88FB
 756  88FB 21 77 87     	ld hl,Ctrl_1
 757  88FE CB 96        	res 2,(hl)
 758  8900
 759  8900 21 96 87     16 ld hl,Ctrl_3
 760  8903 CB C6        	set 0,(hl)											; Frame completo.
 761  8905
 762  8905 AF           	xor a
 763  8906 D3 FE        	out ($fe),a
 764  8908
 765  8908 FB           	ei
 766  8909 76           	halt
 767  890A
 768  890A              ; ----------------------------------------
 769  890A
 770  890A 3A 77 87     	ld a,(Ctrl_1) 										; Existe Loop?
 771  890D CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 772  890F CA FC 87     	jp z,Main
 773  8912
 774  8912              ; RECARGA DE NUEVA OLEADA.
 775  8912
 776  8912 3A A9 87     	ld a,(Contador_de_frames)
 777  8915 47           	ld b,a
 778  8916 3A AD 87     	ld a,(Activa_recarga_cajas)
 779  8919 B8           	cp b
 780  891A 28 08        	jr z,20F
 781  891C
 782  891C 21 77 87     	ld hl,Ctrl_1
 783  891F CB E6        	set 4,(hl)
 784  8921 C3 FC 87     	jp Main
 785  8924
 786  8924 21 77 87     20 ld hl,Ctrl_1
 787  8927 CB A6        	res 4,(hl)
 788  8929
 789  8929 3A A9 87     	ld a,(Contador_de_frames)
 790  892C
 791  892C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 792  892C              ;! _ IMPREDECIBLE !!!!
 793  892C
 794  892C C6 0A        	add 10
 795  892E 32 AC 87     	ld (Clock_Entidades_en_curso),a
 796  8931
 797  8931 C3 D4 87     	jp 4B
 798  8934
 799  8934 C9           	ret
 800  8935
 801  8935              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 802  8935              ;
 803  8935              ;	16/11/23
 804  8935
 805  8935              Gestiona_Amadeus
 806  8935
 807  8935              ;! Activa/desactiva impacto con Amadeus.
 808  8935
 809  8935              ;	ld a,(Impacto)
 810  8935              ;	and a
 811  8935              ;	jr nz,2F
 812  8935
 813  8935 CD AE 89     	call Mov_Amadeus
 814  8938
 815  8938 3A 58 87     2 ld a,(Ctrl_0)
 816  893B CB 67        	bit 4,a
 817  893D 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 818  893F
 819  893F CD 29 8A     	call Guarda_foto_entidad_a_pintar
 820  8942 CD 5F 8C     	call Guarda_datos_de_borrado_Amadeus
 821  8945
 822  8945 21 58 87     1 ld hl,Ctrl_0
 823  8948 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 824  894A
 825  894A CD 4E 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 826  894D
 827  894D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 828  894D
 829  894D CD 28 8B     	call Calcula_numero_de_disparotes
 830  8950
 831  8950 C9           	ret
 832  8951
 833  8951              ; --------------------------------------------------------------------------------------------------------------
 834  8951              ;
 835  8951              ;	15/12/23
 836  8951
 837  8951              Mov_obj
 838  8951
 839  8951 3A 5D 87     	ld a,(Ctrl_2)
 840  8954 CB 4F        	bit 1,a
 841  8956 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 842  8958
 843  8958              ; Explosión:
 844  8958
 845  8958 3A 5E 87     	ld a,(Frames_explosion)
 846  895B A7           	and a
 847  895C 20 1D        	jr nz,4F
 848  895E
 849  895E              ;!  Una alimaña menos!!!!!!!!!1
 850  895E
 851  895E              ; Se trataba de una Entidad_guía ???
 852  895E
 853  895E 3A 5D 87     	ld a,(Ctrl_2)
 854  8961 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 855  8963 28 05        	jr z,5F
 856  8965
 857  8965 21 96 87     	ld hl,Ctrl_3
 858  8968 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 859  896A
 860  896A              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 861  896A              ;!! _generado puede ser distinto, (aletoriedad).
 862  896A
 863  896A CD FD 8B     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 864  896D 21 81 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 865  8970 35           	dec (hl)
 866  8971 21 82 87     	ld hl,Entidades_en_curso
 867  8974 35           	dec (hl)
 868  8975 21 80 87     	ld hl,Numero_de_entidades
 869  8978 35           	dec (hl)
 870  8979 18 32        	jr 3F
 871  897B
 872  897B              ; -----
 873  897B
 874  897B              ;	`Movemos´ la explosión.
 875  897B
 876  897B 2A 44 87     4 ld hl,(Puntero_DESPLZ_der)
 877  897E 23           	inc hl
 878  897F 23           	inc hl
 879  8980 22 44 87     	ld (Puntero_DESPLZ_der),hl
 880  8983 CD 40 8B     	call Extrae_address
 881  8986 22 3A 87     	ld (Puntero_objeto),hl
 882  8989
 883  8989 21 5E 87     	ld hl,Frames_explosion
 884  898C 35           	dec (hl)
 885  898D
 886  898D 21 58 87     	ld hl,Ctrl_0
 887  8990 CB E6        	set 4,(hl)
 888  8992
 889  8992 18 19        	jr 3F
 890  8994
 891  8994              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 892  8994
 893  8994 AF           2 xor a
 894  8995 32 58 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 895  8998
 896  8998              ; Movemos Entidades malignas.
 897  8998              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 898  8998
 899  8998              ;	ld a,(Ctrl_2)
 900  8998              ;	bit 5,a
 901  8998              ;	jr nz,8F
 902  8998
 903  8998              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 904  8998              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 905  8998              ;	jr 7F
 906  8998
 907  8998              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 908  8998
 909  8998              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 910  8998              ;	bit 4,a
 911  8998              ;	ret z
 912  8998
 913  8998              ; Ha habido desplazamiento de la entidad maligna.
 914  8998              ; Ha llegado a zona de AMADEUS ???
 915  8998
 916  8998 3A 3D 87     7 ld a,(Coordenada_y)
 917  899B FE 14        	cp $14
 918  899D 38 08        	jr c,1F
 919  899F
 920  899F              ; ---------
 921  899F
 922  899F              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 923  899F              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 924  899F
 925  899F F3           	di
 926  89A0 CD 73 8E     	call Genera_coordenadas_X
 927  89A3 CD AF 8E     	call Compara_coordenadas_X
 928  89A6 FB           	ei
 929  89A7
 930  89A7              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 931  89A7
 932  89A7              ; ---------
 933  89A7
 934  89A7              1
 935  89A7
 936  89A7              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 937  89A7 CD 7F 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 938  89AA CD E6 8A     	call Limpia_Variables_de_borrado
 939  89AD
 940  89AD C9           3 ret
 941  89AE
 942  89AE              ; --------------------------------------------------------------------------------------------------------------
 943  89AE              ;
 944  89AE              ;	29/1/23
 945  89AE
 946  89AE              Mov_Amadeus
 947  89AE
 948  89AE              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 949  89AE
 950  89AE CD 78 98     	call Mov_right
 951  89B1
 952  89B1 3A 58 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 953  89B4 CB 67        	bit 4,a
 954  89B6 C8           	ret z
 955  89B7
 956  89B7              ; ---------
 957  89B7
 958  89B7              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 959  89B7 CD 6F 8C     	call Repone_datos_de_borrado_Amadeus
 960  89BA CD E6 8A     	call Limpia_Variables_de_borrado
 961  89BD
 962  89BD C9           	ret
 963  89BE
 964  89BE              ; -----------------------------------------------------------------------------------
 965  89BE              ;
 966  89BE              ;	20/01/24
 967  89BE              ;
 968  89BE              ;
 969  89BE
 970  89BE              Construye_movimientos_masticados_entidad
 971  89BE
 972  89BE 2A 54 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 973  89C1 E5           	push hl
 974  89C2
 975  89C2 CD 06 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 976  89C5              ;															; _ el (Contador_de_mov_masticados).
 977  89C5 CD 46 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 978  89C8              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 979  89C8 CD D4 97     	call Recompone_posicion_inicio
 980  89CB
 981  89CB CD AA 91     1 call Draw
 982  89CE CD EA 89     	call Guarda_movimiento_masticado
 983  89D1 CD 33 9D     	call Movimiento
 984  89D4
 985  89D4 3A 96 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 986  89D7 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
 987  89D9 28 F0        	jr z,1B
 988  89DB
 989  89DB              ;	Hemos completado el almacén de movimientos masticados de la entidad.
 990  89DB              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
 991  89DB
 992  89DB E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
 993  89DC 22 54 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
 994  89DF
 995  89DF
 996  89DF              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 997  89DF
 998  89DF CD A4 9E     	call Situa_en_Contador_general_de_mov_masticados
 999  89E2
1000  89E2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1001  89E2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1002  89E2
1003  89E2 ED 4B 56 87  	ld bc,(Contador_de_mov_masticados)
1004  89E6 71           	ld (hl),c
1005  89E7 23           	inc hl
1006  89E8 70           	ld (hl),b
1007  89E9
1008  89E9 C9           	ret
1009  89EA
1010  89EA              ; -----------------------------------------------------------------------------------
1011  89EA              ;
1012  89EA              ;	28/12/23
1013  89EA              ;
1014  89EA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1015  89EA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1016  89EA
1017  89EA              Guarda_movimiento_masticado
1018  89EA
1019  89EA ED 73 88 87  	ld (Stack),sp
1020  89EE ED 7B 54 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1021  89F2
1022  89F2 E5           	push hl
1023  89F3 DD E5            push ix
1024  89F5 FD E5            push iy
1025  89F7
1026  89F7 ED 7B 88 87      ld sp,(Stack)
1027  89FB
1028  89FB              ;    push hl
1029  89FB
1030  89FB 2A 56 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1031  89FE 23           	inc hl
1032  89FF 22 56 87     	ld (Contador_de_mov_masticados),hl
1033  8A02
1034  8A02              ;	pop hl
1035  8A02
1036  8A02 CD 06 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1037  8A05              ;															; _ el (Contador_de_mov_masticados).
1038  8A05 C9               ret
1039  8A06
1040  8A06              ; --------------------------------------------------------------------------------------------------------------
1041  8A06              ;
1042  8A06              ;	12/1/24
1043  8A06              ;
1044  8A06              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1045  8A06
1046  8A06              Actualiza_Puntero_de_almacen_de_mov_masticados
1047  8A06
1048  8A06              ;	push hl
1049  8A06              ;	push bc
1050  8A06
1051  8A06 2A 54 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1052  8A09 01 06 00     	ld bc,6
1053  8A0C A7           	and a
1054  8A0D ED 4A        	adc hl,bc
1055  8A0F 22 54 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1056  8A12
1057  8A12              ;	pop bc
1058  8A12              ;	pop hl
1059  8A12
1060  8A12 C9           	ret
1061  8A13
1062  8A13              ; --------------------------------------------------------------------------------------------------------------
1063  8A13              ;
1064  8A13              ;	15/01/24
1065  8A13              ;
1066  8A13              ;	Cargamos los registros_
1067  8A13              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1068  8A13              ;
1069  8A13              ;	HL contiene la dirección de la rutina de impresión.
1070  8A13              ;	IX contiene el puntero de impresión.
1071  8A13              ;	IY contiene (Puntero_objeto).
1072  8A13
1073  8A13
1074  8A13 ED 73 88 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1075  8A17 ED 7B 54 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1076  8A1B
1077  8A1B FD E1        	pop iy
1078  8A1D DD E1        	pop ix
1079  8A1F E1           	pop hl
1080  8A20
1081  8A20 ED 73 54 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1082  8A24
1083  8A24 ED 7B 88 87  	ld sp,(Stack)
1084  8A28
1085  8A28 C9           	ret
1086  8A29
1087  8A29              ; --------------------------------------------------------------------------------------------------------------
1088  8A29              ;
1089  8A29              ;	28/12/23
1090  8A29              ;
1091  8A29              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1092  8A29              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1093  8A29
1094  8A29              Guarda_foto_entidad_a_pintar
1095  8A29
1096  8A29 3A 58 87     	ld a,(Ctrl_0)
1097  8A2C CB 77        	bit 6,a
1098  8A2E 28 0A        	jr z,5F
1099  8A30
1100  8A30              ; Guarda la foto de Amadeus.
1101  8A30
1102  8A30 CD AA 91     	call Draw
1103  8A33
1104  8A33 CD EA 89     	call Guarda_movimiento_masticado	;! Provisional
1105  8A36
1106  8A36 CD 16 71     	call Guarda_foto_registros
1107  8A39
1108  8A39              ;	di
1109  8A39              ;	jr $
1110  8A39              ;	ei
1111  8A39
1112  8A39 C9           	ret
1113  8A3A
1114  8A3A              ; ENTIDADES!
1115  8A3A              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1116  8A3A
1117  8A3A 3A 96 87     5 ld a,(Ctrl_3)
1118  8A3D CB 5F        	bit 3,a
1119  8A3F 28 04        	jr z,1F
1120  8A41
1121  8A41              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1122  8A41
1123  8A41 CD 7C 8A     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1124  8A44 C9           	ret
1125  8A45
1126  8A45              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1127  8A45
1128  8A45 3A 96 87     1 ld a,(Ctrl_3)
1129  8A48 CB 57        	bit 2,a
1130  8A4A 20 10        	jr nz,6F
1131  8A4C
1132  8A4C              ; Entidad guía o fantasma ???
1133  8A4C
1134  8A4C 3A 5D 87     	ld a,(Ctrl_2)
1135  8A4F CB 6F        	bit 5,a
1136  8A51 20 10        	jr nz,3F
1137  8A53
1138  8A53              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1139  8A53
1140  8A53 18 EC        	jr 4B
1141  8A55
1142  8A55              ; ENTIDAD_GUÍA:
1143  8A55              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1144  8A55              ; _guardando "movimientos_masticados".
1145  8A55
1146  8A55 3A 96 87     2 ld a,(Ctrl_3)
1147  8A58 CB 57        	bit 2,a
1148  8A5A 28 07        	jr z,3F
1149  8A5C
1150  8A5C              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1151  8A5C              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1152  8A5C
1153  8A5C CB 97        6 res 2,a
1154  8A5E CB DF        	set 3,a
1155  8A60 32 96 87     	ld (Ctrl_3),a
1156  8A63
1157  8A63
1158  8A63              ;	Esto sólo lo ejecuta una entidad guía.
1159  8A63
1160  8A63 CD AA 91     3 	call Draw
1161  8A66 CD EA 89     	call Guarda_movimiento_masticado
1162  8A69 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1163  8A6C
1164  8A6C              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1165  8A6C              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1166  8A6C
1167  8A6C CD 70 8A     	call Convierte_guia_en_fantasma
1168  8A6F C9           	ret
1169  8A70
1170  8A70              ; --------------------------------------------------------------------------------------------------------------
1171  8A70              ;
1172  8A70              ;	28/12/23
1173  8A70              ;
1174  8A70
1175  8A70 3A 96 87     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1176  8A73 CB 5F        	bit 3,a
1177  8A75 C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1178  8A76
1179  8A76              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1180  8A76
1181  8A76 21 5D 87     	ld hl,Ctrl_2
1182  8A79 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1183  8A7B
1184  8A7B C9           	ret
1185  8A7C
1186  8A7C              ; --------------------------------------------------------------------------------------------------------------
1187  8A7C              ;
1188  8A7C              ;	21/12/23
1189  8A7C              ;
1190  8A7C              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1191  8A7C              ;
1192  8A7C              ;		IY contiene (Puntero_objeto).
1193  8A7C              ;		IX contiene el puntero de impresión.
1194  8A7C              ;		HL contiene la dirección de la rutina de impresión.
1195  8A7C              ;
1196  8A7C              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1197  8A7C              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1198  8A7C              ;	Decrementa el (Contador_de_mov_masticados)
1199  8A7C              ;
1200  8A7C              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1201  8A7C              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1202  8A7C              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1203  8A7C
1204  8A7C
1205  8A7C ED 73 88 87  Prepara_registros_con_mov_masticados ld (Stack),sp
1206  8A80 ED 7B 54 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1207  8A84
1208  8A84 FD E1        	pop iy
1209  8A86 DD E1        	pop ix
1210  8A88 E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1211  8A89
1212  8A89 ED 73 54 87  	ld (Puntero_de_almacen_de_mov_masticados),sp
1213  8A8D ED 7B 88 87  	ld sp,(Stack)
1214  8A91
1215  8A91 CD 16 71     	call Guarda_foto_registros
1216  8A94
1217  8A94 E5           	push hl
1218  8A95
1219  8A95 2A 56 87     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1220  8A98 23           	inc hl
1221  8A99 22 56 87     	ld (Contador_de_mov_masticados),hl
1222  8A9C
1223  8A9C              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1224  8A9C
1225  8A9C ED 4B 63 87  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1226  8AA0 A7           	and a
1227  8AA1 ED 42        	sbc hl,bc
1228  8AA3 CC 70 8A     	call z,Convierte_guia_en_fantasma
1229  8AA6
1230  8AA6 E1           	pop hl
1231  8AA7
1232  8AA7 C9           	ret
1233  8AA8
1234  8AA8              ; --------------------------------------------------------------------------------------------------------------
1235  8AA8              ;
1236  8AA8              ;	19/9/23
1237  8AA8
1238  8AA8              ;Prepara_var_pintado
1239  8AA8
1240  8AA8              ;	ld hl,Filas
1241  8AA8              ;	ld de,Variables_de_pintado
1242  8AA8              ;	ld bc,8
1243  8AA8              ;	ldir
1244  8AA8              ;	ret
1245  8AA8
1246  8AA8              ; --------------------------------------------------------------------------------------------------------------
1247  8AA8
1248  8AA8              ;Repone_pintar
1249  8AA8
1250  8AA8              ;	ld hl,Variables_de_pintado
1251  8AA8              ;	ld de,Filas
1252  8AA8              ;	ld bc,8
1253  8AA8              ;	ldir
1254  8AA8              ;	ret
1255  8AA8
1256  8AA8              ; *************************************************************************************************************************************************************
1257  8AA8              ;
1258  8AA8              ; 8/1/23
1259  8AA8              ;
1260  8AA8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1261  8AA8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1262  8AA8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1263  8AA8
1264  8AA8              ; Destruye HL y DE !!!!!
1265  8AA8
1266  8AA8              Inicia_punteros_de_cajas
1267  8AA8
1268  8AA8 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1269  8AAB CD 40 8B         call Extrae_address
1270  8AAE 22 7A 87         ld (Puntero_store_caja),hl
1271  8AB1 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1272  8AB4 22 7E 87     	ld (Indice_restore_caja),hl
1273  8AB7 CD 40 8B     	call Extrae_address
1274  8ABA 22 7C 87     	ld (Puntero_restore_caja),hl
1275  8ABD C9               ret
1276  8ABE
1277  8ABE              ; *************************************************************************************************************************************************************
1278  8ABE              ;
1279  8ABE              ; 8/1/23
1280  8ABE              ;
1281  8ABE              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1282  8ABE
1283  8ABE 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1284  8AC1 22 99 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1285  8AC4 C9           	ret
1286  8AC5 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1287  8AC8 22 9B 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1288  8ACB C9           	ret
1289  8ACC
1290  8ACC              ; -------------------------------------------------------------------------------------------------------------
1291  8ACC              ;
1292  8ACC              ; 21/9/23
1293  8ACC              ;
1294  8ACC
1295  8ACC              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1296  8ACC
1297  8ACC              Limpia_album_Amadeus
1298  8ACC
1299  8ACC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1300  8ACF 7E           	ld a,(hl)
1301  8AD0 A7           	and a
1302  8AD1 C8           	ret z
1303  8AD2
1304  8AD2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1305  8AD5 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1306  8AD8 01 0B 00     	ld bc,11
1307  8ADB AF           	xor a
1308  8ADC 77           	ld (hl),a
1309  8ADD ED B0        	ldir
1310  8ADF
1311  8ADF 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1312  8AE2 22 94 87     	ld (End_Snapshot_Amadeus),hl
1313  8AE5
1314  8AE5 C9           	ret
1315  8AE6
1316  8AE6 21 4C 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1317  8AE9 11 4D 87     	ld de,Variables_de_borrado+1
1318  8AEC 01 05 00     	ld bc,5
1319  8AEF AF           	xor a
1320  8AF0 77           	ld (hl),a
1321  8AF1 ED B0        	ldir
1322  8AF3 C9           	ret
1323  8AF4
1324  8AF4              ; -------------------------------------------------------------------------------------------------------------
1325  8AF4              ;
1326  8AF4              ; 8/9/23
1327  8AF4              ;
1328  8AF4
1329  8AF4              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1330  8AF4              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1331  8AF4
1332  8AF4              Calcula_numero_de_malotes
1333  8AF4
1334  8AF4 21 00 70     	ld hl,Album_de_fotos
1335  8AF7 EB           	ex de,hl
1336  8AF8 2A 8E 87     	ld hl,(Stack_snapshot)
1337  8AFB
1338  8AFB 06 00        	ld b,0
1339  8AFD 7D           	ld a,l
1340  8AFE 93           	sub e
1341  8AFF 28 07        	jr z,1F
1342  8B01
1343  8B01              ; Nº de malotes no es "0".
1344  8B01
1345  8B01 D6 06        2 sub 6
1346  8B03 04           	inc b
1347  8B04 A7           	and a
1348  8B05 20 FA        	jr nz,2B
1349  8B07 78           	ld a,b
1350  8B08
1351  8B08 32 83 87     1 ld (Numero_de_malotes),a
1352  8B0B C9           	ret
1353  8B0C
1354  8B0C              ; -------------------------------------------------------------------------------------------------------------
1355  8B0C              ;
1356  8B0C              ; 8/9/23
1357  8B0C              ;
1358  8B0C
1359  8B0C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1360  8B0C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1361  8B0C
1362  8B0C              Calcula_malotes_Amadeus
1363  8B0C
1364  8B0C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1365  8B0F EB           	ex de,hl
1366  8B10 2A 94 87     	ld hl,(End_Snapshot_Amadeus)
1367  8B13
1368  8B13 7C           	ld a,h
1369  8B14 A7           	and a
1370  8B15 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1371  8B17
1372  8B17 06 00        	ld b,0
1373  8B19 7D           	ld a,l
1374  8B1A 93           	sub e
1375  8B1B 28 07        	jr z,1F
1376  8B1D
1377  8B1D              ; Nº de malotes no es "0".
1378  8B1D
1379  8B1D D6 06        2 sub 6
1380  8B1F 04           	inc b
1381  8B20 A7           	and a
1382  8B21 20 FA        	jr nz,2B
1383  8B23 78           	ld a,b
1384  8B24
1385  8B24 32 83 87     1 ld (Numero_de_malotes),a
1386  8B27 C9           	ret
1387  8B28
1388  8B28              ; -------------------------------------------------------------------------------------------------------------
1389  8B28              ;
1390  8B28              ; 28/2/23
1391  8B28              ;
1392  8B28
1393  8B28              Calcula_numero_de_disparotes
1394  8B28
1395  8B28 21 56 70     	ld hl,Album_de_fotos_disparos
1396  8B2B EB           	ex de,hl
1397  8B2C 2A 92 87     	ld hl,(End_Snapshot_disparos)
1398  8B2F
1399  8B2F 06 00        	ld b,0
1400  8B31 7D           	ld a,l
1401  8B32 93           	sub e
1402  8B33 28 07        	jr z,1F
1403  8B35
1404  8B35              ; Nº de malotes no es "0".
1405  8B35
1406  8B35 D6 06        2 sub 6
1407  8B37 04           	inc b
1408  8B38 A7           	and a
1409  8B39 20 FA        	jr nz,2B
1410  8B3B 78           	ld a,b
1411  8B3C
1412  8B3C 32 98 87     1 ld (Numero_de_disparotes),a
1413  8B3F C9           	ret
1414  8B40
1415  8B40              ; *************************************************************************************************************************************************************
1416  8B40              ;
1417  8B40              ; 20/10/22
1418  8B40              ;
1419  8B40              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1420  8B40              ;
1421  8B40              ; Destruye el puntero y DE !!!!!
1422  8B40
1423  8B40 5E           Extrae_address ld e,(hl)
1424  8B41 23           	inc hl
1425  8B42 56           	ld d,(hl)
1426  8B43 2B           	dec hl
1427  8B44 EB           	ex de,hl
1428  8B45 C9           	ret
1429  8B46
1430  8B46              ; *************************************************************************************************************************************************************
1431  8B46              ;
1432  8B46              ;	20/1/24
1433  8B46              ;
1434  8B46              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1435  8B46              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1436  8B46              ;
1437  8B46              ;   Destruye HL y BC !!!!!,
1438  8B46              ;
1439  8B46              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1440  8B46              ;					"0" ..... Izquierda.
1441  8B46
1442  8B46              Inicia_Puntero_objeto
1443  8B46
1444  8B46 3A 4A 87     	ld a,(Cuad_objeto)
1445  8B49 E6 01        	and 1
1446  8B4B F5           	push af
1447  8B4C CC 69 8B     	call z,Inicia_puntero_objeto_izq
1448  8B4F F1           	pop af
1449  8B50 28 4C        	jr z,1F
1450  8B52 CD 56 8B     	call Inicia_puntero_objeto_der
1451  8B55 C9           	ret
1452  8B56
1453  8B56              ; Arrancamos desde la parte izquierda de la pantalla.
1454  8B56              ; Iniciamos (Indice_Sprite_der).
1455  8B56
1456  8B56 2A 40 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1457  8B59 22 44 87     	ld (Puntero_DESPLZ_der),hl
1458  8B5C CD 40 8B     	call Extrae_address
1459  8B5F 22 3A 87     	ld (Puntero_objeto),hl
1460  8B62
1461  8B62 2A 42 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1462  8B65 22 46 87     	ld (Puntero_DESPLZ_izq),hl
1463  8B68 C9           	ret
1464  8B69
1465  8B69              ; Arrancamos desde la parte derecha de la pantalla.
1466  8B69              ; Iniciamos (Indice_Sprite_izq).
1467  8B69
1468  8B69 2A 42 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1469  8B6C 22 46 87     	ld (Puntero_DESPLZ_izq),hl
1470  8B6F CD 40 8B     	call Extrae_address
1471  8B72 22 3A 87     	ld (Puntero_objeto),hl
1472  8B75
1473  8B75 2A 40 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1474  8B78 22 44 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1475  8B7B C9           	ret
1476  8B7C
1477  8B7C              ; *************************************************************************************************************************************************************
1478  8B7C              ;
1479  8B7C              ;	21/12/23
1480  8B7C              ;
1481  8B7C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1482  8B7C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1483  8B7C
1484  8B7C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1485  8B7C              ;	_de la 2ª y 3ª entidad respectivamente.
1486  8B7C
1487  8B7C              Store_Restore_cajas
1488  8B7C
1489  8B7C              ;	push hl
1490  8B7C              ;	push de
1491  8B7C              ; 	push bc
1492  8B7C
1493  8B7C              ;	STORE !!!!!
1494  8B7C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1495  8B7C
1496  8B7C
1497  8B7C F3           	di
1498  8B7D 21 35 87     	ld hl,Variables_DRAW
1499  8B80 ED 5B 7A 87  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1500  8B84 01 2A 00     	ld bc,42
1501  8B87 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1502  8B89 FB           	ei
1503  8B8A
1504  8B8A 18 FE        	jr $
1505  8B8C
1506  8B8C              ; 	Entidad_sospechosa. 20/4/23
1507  8B8C
1508  8B8C 3A 4B 87     	ld a,(Impacto)
1509  8B8F A7           	and a
1510  8B90 28 0C        	jr z,1F
1511  8B92
1512  8B92 2A 7A 87     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1513  8B95 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1514  8B98 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1515  8B99 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1516  8B9B 22 9E 87     	ld (Entidad_sospechosa_de_colision),hl
1517  8B9E
1518  8B9E              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1519  8B9E
1520  8B9E 2A 7C 87     1 ld hl,(Puntero_restore_caja)
1521  8BA1 7E           	ld a,(hl)
1522  8BA2 A7           	and a
1523  8BA3 F5           	push af
1524  8BA4 28 0E        	jr z,2F
1525  8BA6
1526  8BA6 F3           	di
1527  8BA7 18 FE        	jr $
1528  8BA9 FB           	ei
1529  8BAA
1530  8BAA F3           	di
1531  8BAB 11 35 87     	ld de,Variables_DRAW
1532  8BAE 01 2A 00     	ld bc,42
1533  8BB1 ED B0        	ldir
1534  8BB3 FB           	ei
1535  8BB4
1536  8BB4 CD CD 8B     2 call Incrementa_punteros_de_cajas
1537  8BB7
1538  8BB7 F1           	pop af
1539  8BB8 28 E4        	jr z,1B
1540  8BBA
1541  8BBA              ;	pop bc
1542  8BBA              ;	pop de
1543  8BBA              ;	pop hl
1544  8BBA
1545  8BBA C9           	ret
1546  8BBB
1547  8BBB              ; **************************************************************************************************
1548  8BBB              ;
1549  8BBB              ;	21/12/23
1550  8BBB              ;
1551  8BBB              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1552  8BBB
1553  8BBB E5           Restore_entidad push hl
1554  8BBC D5           	push de
1555  8BBD C5            	push bc
1556  8BBE
1557  8BBE 2A 7A 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1558  8BC1 11 35 87     	ld de,Variables_DRAW
1559  8BC4 01 2A 00     	ld bc,42
1560  8BC7 ED B0        	ldir
1561  8BC9
1562  8BC9 C1           	pop bc
1563  8BCA D1           	pop de
1564  8BCB E1           	pop hl
1565  8BCC C9           	ret
1566  8BCD
1567  8BCD              ; **************************************************************************************************
1568  8BCD              ;
1569  8BCD              ;	08/05/23
1570  8BCD              ;
1571  8BCD              ;	Incrementamos los dos punteros de entidades. (+1).
1572  8BCD
1573  8BCD              Incrementa_punteros_de_cajas
1574  8BCD
1575  8BCD 2A 7C 87     	ld hl,(Puntero_restore_caja)
1576  8BD0 22 7A 87     	ld (Puntero_store_caja),hl
1577  8BD3 2A 7E 87     	ld hl,(Indice_restore_caja)
1578  8BD6 23           	inc hl
1579  8BD7 23           	inc hl
1580  8BD8 22 7E 87     	ld (Indice_restore_caja),hl
1581  8BDB CD 40 8B         call Extrae_address
1582  8BDE 22 7C 87         ld (Puntero_restore_caja),hl
1583  8BE1 C9               ret
1584  8BE2
1585  8BE2              ; **************************************************************************************************
1586  8BE2              ;
1587  8BE2              ;	21/12/23
1588  8BE2              ;
1589  8BE2              ;	Restore_Amadeus
1590  8BE2              ;
1591  8BE2              ;	Cargamos en DRAW los parámetros de Amadeus.
1592  8BE2              ;
1593  8BE2
1594  8BE2 E5           Restore_Amadeus	push hl
1595  8BE3 D5           	push de
1596  8BE4 C5            	push bc
1597  8BE5 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1598  8BE8 11 35 87     	ld de,Variables_DRAW
1599  8BEB 01 2A 00     	ld bc,42
1600  8BEE ED B0        	ldir
1601  8BF0 C1           	pop bc
1602  8BF1 D1           	pop de
1603  8BF2 E1           	pop hl
1604  8BF3 C9           	ret
1605  8BF4
1606  8BF4              ; *************************************************************************************************************************************************************
1607  8BF4              ;
1608  8BF4              ;	21/12/23
1609  8BF4              ;
1610  8BF4              ;	Store_Amadeus
1611  8BF4              ;
1612  8BF4              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1613  8BF4              ;
1614  8BF4              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1615  8BF4              ;
1616  8BF4              ;	DESTRUYE: HL y BC y DE.
1617  8BF4
1618  8BF4 21 35 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1619  8BF7 01 2A 00     	ld bc,42
1620  8BFA ED B0        	ldir
1621  8BFC C9           	ret
1622  8BFD
1623  8BFD              ; -----------------------------------------------------------
1624  8BFD              ;
1625  8BFD              ;	21/12/23
1626  8BFD              ;
1627  8BFD              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1628  8BFD              ;
1629  8BFD              ;	Destruye: HL,BC,DE,A
1630  8BFD
1631  8BFD 21 35 87     Borra_datos_entidad ld hl,Variables_DRAW
1632  8C00 01 29 00     	ld bc,41
1633  8C03 AF           	xor a
1634  8C04 77           	ld (hl),a
1635  8C05 11 36 87     	ld de,Variables_DRAW+1
1636  8C08 ED B0        	ldir
1637  8C0A C9           	ret
1638  8C0B
1639  8C0B              ; -----------------------------------------------------------
1640  8C0B
1641  8C0B              ; Teclado.
1642  8C0B
1643  8C0B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1644  8C0D DB FE        	in a,($fe)
1645  8C0F E6 01        	and $01
1646  8C11 28 02        	jr z,1f
1647  8C13 18 F6        	jr Pulsa_ENTER
1648  8C15 C9           1 ret
1649  8C16
1650  8C16              ; **************************************************************************************************
1651  8C16              ;
1652  8C16              ; Temporización.
1653  8C16
1654  8C16              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1655  8C16              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1656  8C16              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1657  8C16              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1658  8C16
1659  8C16              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1660  8C16              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1661  8C16              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1662  8C16
1663  8C16              ; A partir de $4f61 no hace falta DELAY.
1664  8C16
1665  8C16              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1666  8C16
1667  8C16 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1668  8C19 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1669  8C1A 78           	LD A,B
1670  8C1B A7           	AND A
1671  8C1C 20 FB        	JR NZ,wait
1672  8C1E C9           	RET
1673  8C1F
1674  8C1F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1675  8C1F              ;
1676  8C1F              ;	5/3/23
1677  8C1F              ;
1678  8C1F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1679  8C1F
1680  8C1F              Movimiento_Amadeus
1681  8C1F
1682  8C1F              ; Disparo.
1683  8C1F
1684  8C1F 3A AE 87     	ld a,(Disparo_Amadeus)
1685  8C22 A7           	and a
1686  8C23 20 02        	jr nz,1F
1687  8C25 18 15        	jr 2F
1688  8C27
1689  8C27 3E F7        1 ld a,$f7													; "5" para disparar.
1690  8C29 DB FE        	in a,($fe)
1691  8C2B E6 10        	and $10
1692  8C2D
1693  8C2D F5           	push af
1694  8C2E CC D6 8C     	call z,Genera_disparo
1695  8C31 F1           	pop af
1696  8C32 20 08        	jr nz,2F
1697  8C34
1698  8C34 3A AE 87     	ld a,(Disparo_Amadeus)
1699  8C37 EE 01        	xor 1
1700  8C39 32 AE 87     	ld (Disparo_Amadeus),a
1701  8C3C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1702  8C3E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1703  8C40 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1704  8C42 CC 9B 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1705  8C45
1706  8C45 3E F7        	ld a,$f7
1707  8C47 DB FE        	in a,($fe)
1708  8C49 E6 01        	and $01
1709  8C4B C8           	ret z
1710  8C4C
1711  8C4C 3E F7        	ld a,$f7
1712  8C4E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1713  8C50 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1714  8C52 CC 78 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1715  8C55 C9           	ret
1716  8C56
1717  8C56              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1718  8C56              ;
1719  8C56              ;	Rutina provisional para que los malotes cagen balas.
1720  8C56
1721  8C56              Detecta_disparo_entidad
1722  8C56
1723  8C56 3A B1 87     	ld a,(Disparo_entidad)
1724  8C59 A7           	and a
1725  8C5A C8           	ret z
1726  8C5B
1727  8C5B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1728  8C5B
1729  8C5B              ;	ld a,$7f				; Detecta SPACE.
1730  8C5B              ;	in a,($fe)
1731  8C5B              ;	and 1
1732  8C5B              ;	ret nz
1733  8C5B
1734  8C5B CD D6 8C     	call Genera_disparo
1735  8C5E C9           	ret
1736  8C5F
1737  8C5F              ; ----------------------------------------------------------------------
1738  8C5F              ;
1739  8C5F              ;	8/9/23
1740  8C5F
1741  8C5F 2A 94 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1742  8C62 2B            	dec hl
1743  8C63 7E           	ld a,(hl)
1744  8C64 A7           	and a
1745  8C65 C8           	ret z										; Salimos si es álbum está vacío.
1746  8C66
1747  8C66 11 51 87     	ld de,Variables_de_borrado+5
1748  8C69 01 06 00     	ld bc,6
1749  8C6C ED B8        	lddr
1750  8C6E C9           	ret
1751  8C6F
1752  8C6F              ; ----------------------------------------------------------------------
1753  8C6F              ;
1754  8C6F              ;	9/9/23
1755  8C6F
1756  8C6F              Repone_datos_de_borrado_Amadeus
1757  8C6F
1758  8C6F 21 4C 87     	ld hl,Variables_de_borrado
1759  8C72 11 AC 70     	ld de,Album_de_fotos_Amadeus
1760  8C75 01 06 00     	ld bc,6
1761  8C78 ED B0        	ldir
1762  8C7A
1763  8C7A EB           	ex de,hl
1764  8C7B 22 94 87     	ld (End_Snapshot_Amadeus),hl
1765  8C7E
1766  8C7E C9           	ret
1767  8C7F
1768  8C7F              ; ----------------------------------------------------------------------
1769  8C7F              ;
1770  8C7F              ;	27/10/23
1771  8C7F              ;
1772  8C7F
1773  8C7F              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1774  8C7F              ;	_ Album_de_fotos correspondiente.
1775  8C7F
1776  8C7F              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1777  8C7F              ;	_ durante el proceso de escritura.
1778  8C7F
1779  8C7F              Repone_datos_de_borrado
1780  8C7F
1781  8C7F F3           	di
1782  8C80 ED 5B 8E 87  	ld de,(Stack_snapshot)
1783  8C84 21 4C 87     	ld hl,Variables_de_borrado
1784  8C87 01 06 00     	ld bc,6
1785  8C8A ED B0        	ldir
1786  8C8C FB           	ei
1787  8C8D
1788  8C8D EB           	ex de,hl
1789  8C8E 22 8E 87     	ld (Stack_snapshot),hl
1790  8C91
1791  8C91 C9           	ret
1792  8C92
1793  8C92              ; --------------------------------------------------------------------------------------
1794  8C92
1795  8C92              Pinta_Amadeus
1796  8C92
1797  8C92 CD 0C 8B        	call Calcula_malotes_Amadeus
1798  8C95 CD 43 95     	call Extrae_foto_Amadeus
1799  8C98 CD CC 8A     	call Limpia_album_Amadeus
1800  8C9B
1801  8C9B C9           	ret
1802  8C9C
1803  8C9C              Pinta_entidades
1804  8C9C
1805  8C9C              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1806  8C9C
1807  8C9C 3A 96 87     	ld a,(Ctrl_3)
1808  8C9F CB 47        	bit 0,a
1809  8CA1 C8           	ret z
1810  8CA2
1811  8CA2 CD F4 8A     	call Calcula_numero_de_malotes
1812  8CA5 CD C1 94     	call Extrae_foto_entidades
1813  8CA8 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1814  8CAB
1815  8CAB C9           	ret
1816  8CAC
1817  8CAC              ; -----------------------------------------------------------------------------------
1818  8CAC              ;
1819  8CAC              ;	10/12/23
1820  8CAC              ;
1821  8CAC              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1822  8CAC
1823  8CAC              Actualiza_relojes
1824  8CAC
1825  8CAC 3A 96 87     	ld a,(Ctrl_3)
1826  8CAF CB 47        	bit 0,a
1827  8CB1 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1828  8CB2
1829  8CB2 21 A9 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1830  8CB5 34           	inc (hl)
1831  8CB6
1832  8CB6 34           	inc (hl)
1833  8CB7 35           	dec (hl)
1834  8CB8 C0           	ret nz
1835  8CB9
1836  8CB9 21 AA 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1837  8CBC 34           	inc (hl)
1838  8CBD C9           	ret
1839  8CBE
1840  8CBE              ; ---------------------------------------------------------------
1841  8CBE              ;
1842  8CBE              ;	21/12/23
1843  8CBE
1844  8CBE              Guarda_parametros_DRAW
1845  8CBE
1846  8CBE 21 35 87     	ld hl,Variables_DRAW
1847  8CC1 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1848  8CC4 01 2A 00     	ld bc,42
1849  8CC7 ED B0        	ldir
1850  8CC9 C9           	ret
1851  8CCA
1852  8CCA              Recupera_parametros_DRAW
1853  8CCA
1854  8CCA 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1855  8CCD 11 35 87     	ld de,Variables_DRAW
1856  8CD0 01 2A 00     	ld bc,42
1857  8CD3 ED B0        	ldir
1858  8CD5 C9           	ret
1859  8CD6
1860  8CD6              ; ---------------------------------------------------------------
1861  8CD6
1862  8CD6              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8CD6              ; ******************************************************************************************************************************************************************************************
   2+ 8CD6              ;
   3+ 8CD6              ;   21/07/23
   4+ 8CD6              ;
   5+ 8CD6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8CD6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8CD6              ;
   8+ 8CD6              ;
   9+ 8CD6              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8CD6              ;
  11+ 8CD6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8CD6              ;               _ hacen las entidades hacia abajo.
  13+ 8CD6              ;
  14+ 8CD6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8CD6              ;
  16+ 8CD6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8CD6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8CD6              ;
  19+ 8CD6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8CD6              ;           _ la bala.
  21+ 8CD6              ;
  22+ 8CD6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8CD6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8CD6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8CD6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8CD6              ;           _ en el momento de generarse la bala)).
  27+ 8CD6
  28+ 8CD6              Genera_disparo
  29+ 8CD6
  30+ 8CD6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8CD6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8CD6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8CD6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8CD6              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8CD6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8CD6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8CD6
  38+ 8CD6              ; Exclusiones:
  39+ 8CD6
  40+ 8CD6 3A 62 87         ld a,(Vel_down)
  41+ 8CD9 47               ld b,a
  42+ 8CDA 3A A8 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8CDD B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8CDE D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8CDF 3A 59 87         ld a,(Columnas)
  46+ 8CE2 47               ld b,a
  47+ 8CE3 3A 37 87         ld a,(Columns)
  48+ 8CE6 B8               cp b
  49+ 8CE7 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8CE8
  51+ 8CE8              ; ----- ----- -----
  52+ 8CE8
  53+ 8CE8 3A 58 87         ld a,(Ctrl_0)
  54+ 8CEB CB 77            bit 6,a
  55+ 8CED 20 06            jr nz,14F
  56+ 8CEF
  57+ 8CEF 3A 3D 87         ld a,(Coordenada_y)
  58+ 8CF2 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8CF4 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8CF5
  61+ 8CF5 21 00 80     14 ld hl,Indice_disparo
  62+ 8CF8 3A 3E 87         ld a,(CTRL_DESPLZ)
  63+ 8CFB 4F               ld c,a
  64+ 8CFC 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8CFE              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8CFE              ;                                            ""        ""       "f9", B="1"
  67+ 8CFE              ;                                            ""        ""       "fb", B="2"
  68+ 8CFE              ;                                            ""        ""       "fb", B="3"
  69+ 8CFE A7               and a
  70+ 8CFF 28 10            jr z,1F
  71+ 8D01 E6 01            and 1
  72+ 8D03 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D04
  74+ 8D04 79               ld a,c
  75+ 8D05 16 F9            ld d,$f9
  76+ 8D07 23           2 inc hl
  77+ 8D08 23               inc hl
  78+ 8D09 04               inc b
  79+ 8D0A BA               cp d
  80+ 8D0B 28 04            jr z,1F
  81+ 8D0D 14               inc d
  82+ 8D0E 14               inc d
  83+ 8D0F 18 F6            jr 2B
  84+ 8D11
  85+ 8D11 CD 40 8B     1 call Extrae_address
  86+ 8D14 E5               push hl
  87+ 8D15 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D17 DD 21 89 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D1B
  90+ 8D1B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D1B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D1B
  93+ 8D1B 3A 58 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D1E CB 77            bit 6,a
  95+ 8D20 20 04            jr nz,19F
  96+ 8D22
  97+ 8D22 AF               xor a
  98+ 8D23 32 B1 87         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D26
 100+ 8D26 3A 4A 87     19 ld a,(Cuad_objeto)
 101+ 8D29 FE 02            cp 2
 102+ 8D2B 38 66            jr c,3F
 103+ 8D2D 28 64            jr z,3F
 104+ 8D2F
 105+ 8D2F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D2F
 107+ 8D2F E6 01            and 1
 108+ 8D31 28 30            jr z,4F
 109+ 8D33
 110+ 8D33              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D33              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D33              ;
 113+ 8D33              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D33              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D33              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D33
 117+ 8D33 2A 38 87     	ld hl,(Posicion_actual)
 118+ 8D36
 119+ 8D36              ;   Amadeus o entidad ???.
 120+ 8D36
 121+ 8D36 3A 58 87         ld a,(Ctrl_0)
 122+ 8D39 CB 77            bit 6,a
 123+ 8D3B 28 0A            jr z,8F
 124+ 8D3D
 125+ 8D3D              ; 	Dispara Amadeus.
 126+ 8D3D
 127+ 8D3D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D3F CD B2 94         call PreviousScan
 129+ 8D42 CD B2 94         call PreviousScan
 130+ 8D45
 131+ 8D45              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D45              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D45              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D45              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D45
 136+ 8D45 18 11            jr 10F
 137+ 8D47
 138+ 8D47              ; 	Dispara Entidad.
 139+ 8D47
 140+ 8D47 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D4A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D4A
 143+ 8D4A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D4A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D4A
 146+ 8D4A C5               push bc
 147+ 8D4B 06 10            ld b,16
 148+ 8D4D CD A3 94     9 call NextScan
 149+ 8D50 10 FB            djnz 9B
 150+ 8D52 C1               pop bc
 151+ 8D53 CD BD 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D56 18 06            jr 17F
 153+ 8D58
 154+ 8D58              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D58              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D58              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D58              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D58
 159+ 8D58 CD BD 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D5B CD 32 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D5E              ;                                                      ; _al generar el disparo.
 162+ 8D5E
 163+ 8D5E              ; 	LLegados a este punto tendremos:
 164+ 8D5E              ;
 165+ 8D5E              ;       Puntero_objeto_disparo en IY.
 166+ 8D5E              ;       Rutinas_de_impresion en IX.
 167+ 8D5E              ;       Puntero_de_impresion en HL.
 168+ 8D5E              ;       Impacto/Dirección en BC.
 169+ 8D5E
 170+ 8D5E CD C5 8D     17 call Almacena_disparo
 171+ 8D61 18 52            jr 6F                                             ; RET.
 172+ 8D63
 173+ 8D63              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D63              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D63              ;
 176+ 8D63              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D63              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D63              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D63
 180+ 8D63 2A 38 87     4 ld hl,(Posicion_actual)
 181+ 8D66
 182+ 8D66              ;   Amadeus o entidad ???.
 183+ 8D66
 184+ 8D66 3A 58 87         ld a,(Ctrl_0)
 185+ 8D69 CB 77            bit 6,a
 186+ 8D6B 28 0A            jr z,11F
 187+ 8D6D
 188+ 8D6D              ; 	Dispara Amadeus.
 189+ 8D6D
 190+ 8D6D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D6F CD B2 94         call PreviousScan
 192+ 8D72 CD B2 94         call PreviousScan
 193+ 8D75
 194+ 8D75              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8D75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8D75              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8D75              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8D75
 199+ 8D75 18 11            jr 13F
 200+ 8D77
 201+ 8D77              ; 	Dispara Entidad.
 202+ 8D77
 203+ 8D77 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8D7A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8D7A
 206+ 8D7A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8D7A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8D7A
 209+ 8D7A C5               push bc
 210+ 8D7B 06 10            ld b,16
 211+ 8D7D CD A3 94     12 call NextScan
 212+ 8D80 10 FB            djnz 12B
 213+ 8D82 C1               pop bc
 214+ 8D83
 215+ 8D83 CD B6 8D         call Ajusta_disparo_parte_derecha
 216+ 8D86 18 06            jr 18F
 217+ 8D88
 218+ 8D88              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8D88              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8D88              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8D88              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8D88
 223+ 8D88 CD B6 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8D8B CD 32 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8D8E              ;                                                       ; _al generar el disparo.
 226+ 8D8E
 227+ 8D8E              ; LLegados a este punto tendremos:
 228+ 8D8E              ;
 229+ 8D8E              ;       Puntero_objeto_disparo en IY.
 230+ 8D8E              ;       Rutinas_de_impresion en IX.
 231+ 8D8E              ;       Puntero_de_impresion en HL.
 232+ 8D8E              ;       Impacto/Dirección en BC.
 233+ 8D8E
 234+ 8D8E CD C5 8D     18 call Almacena_disparo
 235+ 8D91 18 22            jr 6F                                               ; RET.
 236+ 8D93
 237+ 8D93              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8D93
 239+ 8D93 28 11        3 jr z,5F
 240+ 8D95
 241+ 8D95              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8D95              ;
 243+ 8D95              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8D95              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8D95              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8D95              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8D95
 248+ 8D95              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8D95              ;	   ""        ""       "f9", B="1"
 250+ 8D95              ;	   ""        ""       "fb", B="2"
 251+ 8D95              ; 	   ""        ""       "fb", B="3"
 252+ 8D95
 253+ 8D95 2A 38 87     	ld hl,(Posicion_actual)
 254+ 8D98 CD A3 94     	call NextScan
 255+ 8D9B
 256+ 8D9B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8D9B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8D9B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8D9B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8D9B
 261+ 8D9B CD BD 8D         call Ajusta_disparo_parte_izquierda
 262+ 8D9E
 263+ 8D9E              ; 	No se produce impacto. B="$80"
 264+ 8D9E              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8D9E
 266+ 8D9E 01 80 80         ld bc,$8080
 267+ 8DA1
 268+ 8DA1              ; 	LLegados a este punto tendremos:
 269+ 8DA1              ;
 270+ 8DA1              ;       Puntero_objeto_disparo en IY.
 271+ 8DA1              ;       Rutinas_de_impresion en IX.
 272+ 8DA1              ;       Puntero_de_impresion en HL.
 273+ 8DA1              ;       Impacto/Dirección en BC.
 274+ 8DA1
 275+ 8DA1 CD C5 8D         call Almacena_disparo
 276+ 8DA4 18 0F            jr 6F                                           ; RET.
 277+ 8DA6
 278+ 8DA6              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DA6              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DA6              ;
 281+ 8DA6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DA6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DA6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DA6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DA6
 286+ 8DA6 2A 38 87     5 ld hl,(Posicion_actual)
 287+ 8DA9 CD A3 94     	call NextScan
 288+ 8DAC
 289+ 8DAC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DAC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DAC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DAC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DAC
 294+ 8DAC CD B6 8D         call Ajusta_disparo_parte_derecha
 295+ 8DAF
 296+ 8DAF              ; 	No se produce impacto. B="$80"
 297+ 8DAF              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DAF
 299+ 8DAF 01 80 80     15 ld bc,$8080
 300+ 8DB2
 301+ 8DB2              ; 	LLegados a este punto tendremos:
 302+ 8DB2              ;
 303+ 8DB2              ;       Puntero_objeto_disparo en IY.
 304+ 8DB2              ;       Rutinas_de_impresion en IX.
 305+ 8DB2              ;       Puntero_de_impresion en HL.
 306+ 8DB2              ;       Impacto/Dirección en BC.
 307+ 8DB2
 308+ 8DB2 CD C5 8D         call Almacena_disparo
 309+ 8DB5
 310+ 8DB5 C9           6 ret
 311+ 8DB6
 312+ 8DB6              ; ----------------------------------------------------------------
 313+ 8DB6              ;
 314+ 8DB6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DB6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DB6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DB6
 318+ 8DB6 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DB7 FE 02            cp 2
 320+ 8DB9 38 01            jr c,1F
 321+ 8DBB 23               inc hl
 322+ 8DBC C9           1 ret
 323+ 8DBD
 324+ 8DBD 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8DBE FE 01        	cp 1
 326+ 8DC0 20 01        	jr nz,1F
 327+ 8DC2 2B           	dec hl
 328+ 8DC3 2B           1 dec hl
 329+ 8DC4 C9               ret
 330+ 8DC5
 331+ 8DC5              ; ----------------------------------------------------------------
 332+ 8DC5              ;
 333+ 8DC5              ;   25/02/23
 334+ 8DC5              ;
 335+ 8DC5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8DC5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8DC5              ;
 338+ 8DC5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8DC5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8DC5
 341+ 8DC5              Almacena_disparo
 342+ 8DC5
 343+ 8DC5 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8DC6 F1               pop af
 345+ 8DC7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8DC8
 347+ 8DC8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8DC9 E6 01            and 1
 349+ 8DCB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8DCD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8DCD              ; 	Dispara AMADEUS.
 352+ 8DCD
 353+ 8DCD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8DCD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8DCD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8DCD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8DCD
 358+ 8DCD C5               push bc
 359+ 8DCE 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8DD1 2A 9B 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8DD4 A7               and a
 362+ 8DD5 ED 42            sbc hl,bc
 363+ 8DD7 CC C5 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8DDA C1               pop bc
 365+ 8DDB 28 54            jr z,4F
 366+ 8DDD
 367+ 8DDD 2A 9B 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8DE0 23               inc hl
 369+ 8DE1 23               inc hl
 370+ 8DE2 22 9B 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8DE5              ;                                                   ; _ Disparo_(+1).
 372+ 8DE5 18 18            jr 2F
 373+ 8DE7
 374+ 8DE7              ; Dispara una entidad.
 375+ 8DE7
 376+ 8DE7 C5           1 push bc
 377+ 8DE8 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8DEB 2A 99 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8DEE A7               and a
 380+ 8DEF ED 42            sbc hl,bc
 381+ 8DF1 CC BE 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8DF4 C1               pop bc
 383+ 8DF5 28 3A            jr z,4F
 384+ 8DF7
 385+ 8DF7 2A 99 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8DFA 23               inc hl
 387+ 8DFB 23               inc hl
 388+ 8DFC 22 99 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8DFF              ;                                                   ; _ Disparo_(+1).
 390+ 8DFF CD 40 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E02              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E02              ;
 393+ 8E02              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E02              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E02              ;                                                     Puntero_de_impresion en HL.
 396+ 8E02              ;                                                     Impacto/Dirección en BC.
 397+ 8E02
 398+ 8E02 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E03 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E04 23               inc hl                                          ; _ al siguiente.
 401+ 8E05 A7               and a
 402+ 8E06 20 C0            jr nz,3B
 403+ 8E08
 404+ 8E08 08               ex af,af
 405+ 8E09 ED 73 88 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E0D F9               ld sp,hl
 407+ 8E0E
 408+ 8E0E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E10 F5               push af                                         ; Puntero de impresión.
 410+ 8E11 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E13 C5               push bc                                         ; Control.
 412+ 8E14
 413+ 8E14 ED 7B 88 87      ld sp,(Stack)
 414+ 8E18
 415+ 8E18              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E18
 417+ 8E18 21 77 87     	ld hl,Ctrl_1
 418+ 8E1B CB C6        	set 0,(hl)
 419+ 8E1D
 420+ 8E1D DD E5        	push ix
 421+ 8E1F E1               pop hl
 422+ 8E20 F5               push af
 423+ 8E21 DD E1            pop ix
 424+ 8E23
 425+ 8E23 CD 16 71     	call Guarda_foto_registros
 426+ 8E26
 427+ 8E26 21 77 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E29 CB 86        	res 0,(hl)
 429+ 8E2B
 430+ 8E2B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E2B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E2B
 433+ 8E2B CD C5 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E2E CD BE 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8E31
 436+ 8E31 C9           4 ret
 437+ 8E32
 438+ 8E32              ; ----------------------------------------------------------------
 439+ 8E32              ;
 440+ 8E32              ;   4/3/23
 441+ 8E32              ;
 442+ 8E32              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E32              ;   _ al generarse el disparo.
 444+ 8E32              ;
 445+ 8E32              ;       "$80" ..... No se produce colisión.
 446+ 8E32              ;       "$81" ..... Se produce colisión.
 447+ 8E32              ;
 448+ 8E32              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E32              ;         _ que forman el disparo.
 450+ 8E32
 451+ 8E32
 452+ 8E32              Comprueba_Colision
 453+ 8E32
 454+ 8E32              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E32
 456+ 8E32 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E34 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E35
 459+ 8E35 CD 6B 8E         call Modifica_H_Velocidad_disparo
 460+ 8E38
 461+ 8E38 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E39 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E3B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E3D
 465+ 8E3D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E3F CD 5B 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E42
 468+ 8E42 7B               ld a,e
 469+ 8E43 E6 01            and 1
 470+ 8E45 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E47              ;                                                  ; _ para activar IMPACTO.
 472+ 8E47 E1               pop hl
 473+ 8E48 E5               push hl
 474+ 8E49 CD A3 94         call NextScan
 475+ 8E4C
 476+ 8E4C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E4D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E4F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E51              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E51 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E53 CD 5B 8E         call Bucle_2
 482+ 8E56
 483+ 8E56 43           1 ld b,e
 484+ 8E57 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E58 FD E1            pop iy
 486+ 8E5A C9               ret
 487+ 8E5B
 488+ 8E5B              ; ---------- ----------
 489+ 8E5B
 490+ 8E5B 06 02        Bucle_2 ld b,2
 491+ 8E5D FD 7E 00     2 ld a,(iy)
 492+ 8E60 A6               and (hl)
 493+ 8E61 28 02            jr z,1F
 494+ 8E63 1E 81            ld e,$81
 495+ 8E65 23           1 inc hl
 496+ 8E66 FD 23            inc iy
 497+ 8E68 10 F3            djnz 2B
 498+ 8E6A C9               ret
 499+ 8E6B
 500+ 8E6B              ; ---------- ----------
 501+ 8E6B              ;
 502+ 8E6B              ;   21/7/23
 503+ 8E6B
 504+ 8E6B              Modifica_H_Velocidad_disparo
 505+ 8E6B
 506+ 8E6B 3A A8 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E6E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8E70 D0               ret nc                                         ; _ incrementamos H.
 509+ 8E71 24               inc h
 510+ 8E72
 511+ 8E72 C9               ret
 512+ 8E73
 513+ 8E73              ; -------------------------------------------------------------------------------------------------------------
 514+ 8E73              ;
 515+ 8E73              ;   04/12/23
 516+ 8E73              ;
 517+ 8E73              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8E73              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8E73              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8E73              ;
 521+ 8E73              ;   MODIFICA: HL,DE,B y A.
 522+ 8E73
 523+ 8E73              Genera_coordenadas_X
 524+ 8E73
 525+ 8E73              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8E73              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8E73
 528+ 8E73              ;   Limpiamos almacenes.
 529+ 8E73
 530+ 8E73 CD A4 8E         call Limpia_Coordenadas_X
 531+ 8E76
 532+ 8E76              ;   Almacenamos coordenadas X.
 533+ 8E76
 534+ 8E76              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8E76
 536+ 8E76 2A 52 87         ld hl,(Puntero_de_impresion)
 537+ 8E79 11 A5 87         ld de,Coordenadas_X_Entidad
 538+ 8E7C 06 02            ld b,2
 539+ 8E7E
 540+ 8E7E 3A 3E 87         ld a,(CTRL_DESPLZ)
 541+ 8E81 A7               and a
 542+ 8E82 28 01            jr z,1F
 543+ 8E84 04               inc b
 544+ 8E85
 545+ 8E85 CD 9B 8E     1 call Guarda_coordenadas_X
 546+ 8E88
 547+ 8E88              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8E88
 549+ 8E88 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8E8B 11 A2 87         ld de,Coordenadas_X_Amadeus
 551+ 8E8E 06 02            ld b,2
 552+ 8E90
 553+ 8E90 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8E93 A7               and a
 555+ 8E94 28 01            jr z,2F
 556+ 8E96 04               inc b
 557+ 8E97
 558+ 8E97 CD 9B 8E     2 call Guarda_coordenadas_X
 559+ 8E9A
 560+ 8E9A              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8E9A
 562+ 8E9A C9               ret
 563+ 8E9B
 564+ 8E9B              ; ----- ----- ----- ----- -----
 565+ 8E9B
 566+ 8E9B 7D           Guarda_coordenadas_X  ld a,l
 567+ 8E9C E6 1F            and $1f
 568+ 8E9E 12           1 ld (de),a
 569+ 8E9F 3C               inc a
 570+ 8EA0 13               inc de
 571+ 8EA1 10 FB            djnz 1B
 572+ 8EA3 C9               ret
 573+ 8EA4
 574+ 8EA4 AF           Limpia_Coordenadas_X xor a
 575+ 8EA5 06 06            ld b,6
 576+ 8EA7 21 A2 87         ld hl,Coordenadas_X_Amadeus
 577+ 8EAA 77           1 ld (hl),a
 578+ 8EAB 23               inc hl
 579+ 8EAC 10 FC            djnz 1B
 580+ 8EAE C9               ret
 581+ 8EAF
 582+ 8EAF              ; ----- ----- ----- ----- -----
 583+ 8EAF
 584+ 8EAF              Compara_coordenadas_X
 585+ 8EAF
 586+ 8EAF 06 03            ld b,3
 587+ 8EB1 11 A7 87         ld de,Coordenadas_X_Entidad+2
 588+ 8EB4
 589+ 8EB4 1A               ld a,(de)
 590+ 8EB5 A7               and a
 591+ 8EB6 20 01            jr nz,2F
 592+ 8EB8 05               dec b
 593+ 8EB9
 594+ 8EB9 1B           2 dec de
 595+ 8EBA 1B               dec de
 596+ 8EBB 21 A2 87         ld hl,Coordenadas_X_Amadeus
 597+ 8EBE
 598+ 8EBE D5           1 push de
 599+ 8EBF E5               push hl
 600+ 8EC0 C5               push bc
 601+ 8EC1
 602+ 8EC1 CD CB 8E         call Comparando
 603+ 8EC4
 604+ 8EC4 C1               pop bc
 605+ 8EC5 E1               pop hl
 606+ 8EC6 D1               pop de
 607+ 8EC7
 608+ 8EC7 13               inc de
 609+ 8EC8 10 F4            djnz 1B
 610+ 8ECA
 611+ 8ECA C9               ret
 612+ 8ECB
 613+ 8ECB              ; ----- ----- ----- ----- -----
 614+ 8ECB              ;
 615+ 8ECB              ;   4/12/23
 616+ 8ECB              ;
 617+ 8ECB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8ECB
 619+ 8ECB 06 03        Comparando ld b,3
 620+ 8ECD 1A               ld a,(de)
 621+ 8ECE 4E           2 ld c,(hl)
 622+ 8ECF B9               cp c
 623+ 8ED0 28 04            jr z,1F
 624+ 8ED2 23               inc hl
 625+ 8ED3 10 F9            djnz 2B
 626+ 8ED5 C9               ret
 627+ 8ED6
 628+ 8ED6 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8ED8 32 4B 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8EDB 21 9D 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8EDE CB D6            set 2,(hl)
 632+ 8EE0 C9               ret
 633+ 8EE1
 634+ 8EE1              ; -----------------------------------------------------------------------
 635+ 8EE1              ;
 636+ 8EE1              ;   7/12/23
 637+ 8EE1              ;
 638+ 8EE1
 639+ 8EE1              Detecta_colision_nave_entidad
 640+ 8EE1
 641+ 8EE1              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8EE1
 643+ 8EE1 FD 2A 3A 87      ld iy,(Puntero_objeto)
 644+ 8EE5 2A 52 87         ld hl,(Puntero_de_impresion)
 645+ 8EE8
 646+ 8EE8 E5               push hl
 647+ 8EE9
 648+ 8EE9              ; ----- ----- -----
 649+ 8EE9 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8EEB 06 0A            ld b,10
 651+ 8EED CD 1D 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8EF0 7B               ld a,e
 653+ 8EF1 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8EF3 38 0E            jr c,3F
 655+ 8EF5
 656+ 8EF5              ; LLegados a este punto:
 657+ 8EF5              ;
 658+ 8EF5              ;   HAY COLISIÓN !!!!!.
 659+ 8EF5              ;
 660+ 8EF5              ;   .db (Impacto) de Amadeus a "1".
 661+ 8EF5              ;   SET el bit3 de (Impacto2).
 662+ 8EF5              ;
 663+ 8EF5              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8EF5
 665+ 8EF5 21 4B 87         ld hl,Impacto
 666+ 8EF8 36 01            ld (hl),1
 667+ 8EFA 21 9D 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8EFD CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8EFF CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F01
 671+ 8F01 18 18            jr 1F
 672+ 8F03
 673+ 8F03              ; -----
 674+ 8F03
 675+ 8F03 E1           3 pop hl
 676+ 8F04 CD A3 94         call NextScan
 677+ 8F07 E5               push hl
 678+ 8F08 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F09 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F0B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F0D 30 0C            jr nc,1F
 682+ 8F0F              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F0F 10 DC            djnz 2B
 684+ 8F11
 685+ 8F11              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F11
 687+ 8F11              ; LLegados a este punto:
 688+ 8F11              ;
 689+ 8F11              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F11              ;
 691+ 8F11              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F11              ;   RES el bit2 de (Impacto2).
 693+ 8F11              ;
 694+ 8F11              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F11              ;   Lo colocamos a "0".
 696+ 8F11
 697+ 8F11 21 9D 87         ld hl,Impacto2
 698+ 8F14 CB 96            res 2,(hl)
 699+ 8F16 2A 9E 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F19 36 00            ld (hl),0
 701+ 8F1B
 702+ 8F1B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F1C C9               ret
 704+ 8F1D
 705+ 8F1D               ; ---------- ----------
 706+ 8F1D
 707+ 8F1D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F1E 3A 37 87         ld a,(Columns)
 709+ 8F21 47               ld b,a
 710+ 8F22 FD 7E 00     2 ld a,(iy)
 711+ 8F25 BE               cp (hl)
 712+ 8F26 28 01            jr z,1F
 713+ 8F28
 714+ 8F28 1C               inc e
 715+ 8F29
 716+ 8F29 23           1 inc hl
 717+ 8F2A FD 23            inc iy
 718+ 8F2C 10 F4            djnz 2B
 719+ 8F2E C1               pop bc
 720+ 8F2F C9               ret
 721+ 8F30
 722+ 8F30              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F30              ;
 724+ 8F30              ;   13/03/23
 725+ 8F30              ;
 726+ 8F30              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F30              ;
 728+ 8F30              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F30
 730+ 8F30 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F33 7E               ld a,(hl)
 732+ 8F34 A7               and a
 733+ 8F35 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F36
 735+ 8F36 44               ld b,h
 736+ 8F37 4D               ld c,l
 737+ 8F38 2A 90 87         ld hl,(Stack_snapshot_disparos)
 738+ 8F3B E5               push hl
 739+ 8F3C A7               and a
 740+ 8F3D ED 42            sbc hl,bc
 741+ 8F3F E5               push hl
 742+ 8F40 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F41
 744+ 8F41 E1               pop hl
 745+ 8F42 54               ld d,h
 746+ 8F43 5D               ld e,l
 747+ 8F44 1B               dec de
 748+ 8F45 ED B8            lddr                                                ; Limpiamos.
 749+ 8F47
 750+ 8F47 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F4A 22 90 87         ld (Stack_snapshot_disparos),hl
 752+ 8F4D
 753+ 8F4D C9               ret
 754+ 8F4E
 755+ 8F4E              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F4E              ;
 757+ 8F4E              ;   18/07/23
 758+ 8F4E              ;
 759+ 8F4E
 760+ 8F4E              Motor_de_disparos
 761+ 8F4E
 762+ 8F4E              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F4E
 764+ 8F4E 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F51 2A 9B 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F54
 767+ 8F54 CD 40 8B     2 call Extrae_address
 768+ 8F57 7E               ld a,(hl)
 769+ 8F58 A7               and a
 770+ 8F59 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F5B
 772+ 8F5B              ; ----- ----- ----- ----- ----- -----
 773+ 8F5B
 774+ 8F5B C5               push bc
 775+ 8F5C CD 20 90         call foto_disparo_a_borrar
 776+ 8F5F
 777+ 8F5F              ; Existe colisión con este disparo???
 778+ 8F5F
 779+ 8F5F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F60 7E               ld a,(hl)
 781+ 8F61 2B               dec hl
 782+ 8F62 E6 01            and 1
 783+ 8F64 28 1D            jr z,9F
 784+ 8F66
 785+ 8F66              ;   En este punto:
 786+ 8F66              ;
 787+ 8F66              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F66              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F66              ;   _con la entidad).
 790+ 8F66              ;
 791+ 8F66              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F66              ;    defw 0                                          ; Puntero objeto.
 793+ 8F66              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F66              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F66
 796+ 8F66 E5               push hl
 797+ 8F67
 798+ 8F67 06 04            ld b,4
 799+ 8F69 23           19 inc hl
 800+ 8F6A 10 FD            djnz 19B
 801+ 8F6C
 802+ 8F6C CD 40 8B         call Extrae_address
 803+ 8F6F CD 70 9B         call Genera_coordenadas_disparo
 804+ 8F72
 805+ 8F72              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8F72
 807+ 8F72 21 A0 87         ld hl,Coordenadas_disparo_certero
 808+ 8F75 72               ld (hl),d
 809+ 8F76 23               inc hl
 810+ 8F77 73               ld (hl),e
 811+ 8F78
 812+ 8F78              ; Elimino el disparo de la base de datos.
 813+ 8F78
 814+ 8F78 E1               pop hl
 815+ 8F79 CD 9F 90         call Elimina_disparo_de_base_de_datos
 816+ 8F7C 21 9D 87         ld hl,Impacto2
 817+ 8F7F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8F81
 819+ 8F81 18 06            jr 11F
 820+ 8F83
 821+ 8F83 CD 49 90     9 call Mueve_disparo
 822+ 8F86 CD 20 90         call foto_disparo_a_borrar
 823+ 8F89
 824+ 8F89 C1           11 pop bc
 825+ 8F8A 18 04            jr 7F
 826+ 8F8C
 827+ 8F8C              ; ----- ----- ----- ----- ----- -----
 828+ 8F8C
 829+ 8F8C ED 42        1 sbc hl,bc
 830+ 8F8E 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8F90
 832+ 8F90 2A 9B 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8F93 23               inc hl
 834+ 8F94 23               inc hl
 835+ 8F95 22 9B 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8F98 18 BA            jr 2B
 837+ 8F9A
 838+ 8F9A CD C5 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8F9D              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8F9D
 841+ 8F9D              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8F9D
 843+ 8F9D 01 6E 85         ld bc,Disparo_11
 844+ 8FA0 2A 99 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FA3
 846+ 8FA3 CD 40 8B     5 call Extrae_address
 847+ 8FA6 7E               ld a,(hl)
 848+ 8FA7 A7               and a
 849+ 8FA8 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FAA
 851+ 8FAA              ; ----- ----- ----- ----- ----- -----
 852+ 8FAA
 853+ 8FAA C5               push bc
 854+ 8FAB CD 20 90         call foto_disparo_a_borrar
 855+ 8FAE
 856+ 8FAE              ; Existe colisión con este disparo???
 857+ 8FAE
 858+ 8FAE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FAF 7E               ld a,(hl)
 860+ 8FB0 2B               dec hl
 861+ 8FB1 E6 01            and 1
 862+ 8FB3 28 4D            jr z,10F
 863+ 8FB5
 864+ 8FB5              ;! La colisión se produce con Amadeus???
 865+ 8FB5              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FB5
 867+ 8FB5 E5               push hl
 868+ 8FB6
 869+ 8FB6 06 04            ld b,4
 870+ 8FB8 23           16 inc hl
 871+ 8FB9 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FBB
 873+ 8FBB CD 40 8B         call Extrae_address
 874+ 8FBE CD 70 9B         call Genera_coordenadas_disparo
 875+ 8FC1
 876+ 8FC1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8FC2 FE 16            cp $16
 878+ 8FC4 38 2A            jr c,15F
 879+ 8FC6
 880+ 8FC6
 881+ 8FC6              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8FC6
 883+ 8FC6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8FC7
 885+ 8FC7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8FC7
 887+ 8FC7 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8FCA
 889+ 8FCA              ; Coordenada X de Amadeus en D.
 890+ 8FCA
 891+ 8FCA 7D               ld a,l
 892+ 8FCB E6 1F            and $1F
 893+ 8FCD 57               ld d,a
 894+ 8FCE
 895+ 8FCE 21 8A 85         ld hl,Amadeus_db+8
 896+ 8FD1 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8FD2
 898+ 8FD2 21 A2 87         ld hl,Coordenadas_X_Amadeus
 899+ 8FD5 CD 9B 8E         call Guarda_coordenadas_X
 900+ 8FD8
 901+ 8FD8 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8FD9
 903+ 8FD9              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8FD9
 905+ 8FD9 06 02            ld b,2
 906+ 8FDB C5           20 push bc
 907+ 8FDC
 908+ 8FDC 06 03            ld b,3
 909+ 8FDE 21 A2 87         ld hl,Coordenadas_X_Amadeus
 910+ 8FE1 7E           18 ld a,(hl)
 911+ 8FE2 BA               cp d
 912+ 8FE3 20 04            jr nz,17F
 913+ 8FE5
 914+ 8FE5              ;! Colisión Amadeus !!!!!!!!!!
 915+ 8FE5
 916+ 8FE5 C1               pop bc
 917+ 8FE6 E1               pop hl
 918+ 8FE7 18 0D            jr 14F
 919+ 8FE9
 920+ 8FE9 23           17 inc hl
 921+ 8FEA 10 F5            djnz 18B
 922+ 8FEC
 923+ 8FEC 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 8FED
 925+ 8FED C1               pop bc
 926+ 8FEE 10 EB            djnz 20B
 927+ 8FF0
 928+ 8FF0
 929+ 8FF0              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 8FF0              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 8FF0
 932+ 8FF0 E1           15 pop hl
 933+ 8FF1 23               inc hl
 934+ 8FF2 35               dec (hl)
 935+ 8FF3 2B               dec hl
 936+ 8FF4 18 0C            jr 10F
 937+ 8FF6
 938+ 8FF6              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 8FF6              ; _ almacén de coordenadas_X de Amadeus.
 940+ 8FF6
 941+ 8FF6 E5           14 push hl
 942+ 8FF7 CD 9F 90         call Elimina_disparo_de_base_de_datos
 943+ 8FFA 21 9D 87         ld hl,Impacto2
 944+ 8FFD CB CE            set 1,(hl)
 945+ 8FFF E1               pop hl
 946+ 9000 18 06            jr 12F
 947+ 9002
 948+ 9002              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9002
 950+ 9002 CD 49 90     10 call Mueve_disparo
 951+ 9005 CD 20 90         call foto_disparo_a_borrar
 952+ 9008 C1           12 pop bc
 953+ 9009
 954+ 9009 18 04            jr 8F
 955+ 900B
 956+ 900B              ; ----- ----- ----- ----- ----- -----
 957+ 900B
 958+ 900B ED 42        4 sbc hl,bc
 959+ 900D 28 0A            jr z,6F
 960+ 900F
 961+ 900F 2A 99 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9012 23               inc hl
 963+ 9013 23               inc hl
 964+ 9014 22 99 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9017 18 8A            jr 5B
 966+ 9019
 967+ 9019 CD BE 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 901C CD A4 8E         call Limpia_Coordenadas_X
 969+ 901F C9               ret
 970+ 9020
 971+ 9020              ; ------------------------------------------------------------------
 972+ 9020
 973+ 9020              foto_disparo_a_borrar
 974+ 9020
 975+ 9020 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9021 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9022 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9023
 979+ 9023 E5               push hl
 980+ 9024 23               inc hl
 981+ 9025 23               inc hl
 982+ 9026 ED 73 88 87      ld (Stack),sp
 983+ 902A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 902B FD E1            pop iy
 985+ 902D DD E1            pop ix
 986+ 902F E1               pop hl
 987+ 9030 ED 7B 88 87      ld sp,(Stack)
 988+ 9034 3A 77 87         ld a,(Ctrl_1)
 989+ 9037 CB C7            set 0,a
 990+ 9039 32 77 87         ld (Ctrl_1),a
 991+ 903C CD 16 71         call Guarda_foto_registros
 992+ 903F 3A 77 87         ld a,(Ctrl_1)
 993+ 9042 CB 87            res 0,a
 994+ 9044 32 77 87         ld (Ctrl_1),a
 995+ 9047 E1               pop hl
 996+ 9048 C9               ret
 997+ 9049
 998+ 9049              ;---------------------------------------------------
 999+ 9049              ;
1000+ 9049              ;   18/07/23
1001+ 9049              ;
1002+ 9049
1003+ 9049              Mueve_disparo
1004+ 9049
1005+ 9049              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9049              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9049              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9049
1009+ 9049 E5               push hl
1010+ 904A
1011+ 904A 7E               ld a,(hl)
1012+ 904B
1013+ 904B 06 04            ld b,4
1014+ 904D 23           1 inc hl
1015+ 904E 10 FD            djnz 1B
1016+ 9050
1017+ 9050              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9050
1019+ 9050 CD 40 8B         call Extrae_address
1020+ 9053
1021+ 9053 E6 01            and 1
1022+ 9055 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9057
1024+ 9057              ; Disparo hacia arriba, (Amadeus).
1025+ 9057
1026+ 9057              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9057              ; _ de la dificultad.
1028+ 9057
1029+ 9057 CD B2 94         call PreviousScan
1030+ 905A CD B2 94         call PreviousScan
1031+ 905D CD B2 94         call PreviousScan
1032+ 9060 CD B2 94         call PreviousScan
1033+ 9063
1034+ 9063              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9063
1036+ 9063 7C               ld a,h
1037+ 9064 FE 40            cp $40
1038+ 9066 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9068
1040+ 9068              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9068
1042+ 9068 EB               ex de,hl
1043+ 9069 06 04            ld b,4
1044+ 906B 2B           6 dec hl
1045+ 906C 10 FD            djnz 6B
1046+ 906E
1047+ 906E CD 9F 90         call Elimina_disparo_de_base_de_datos
1048+ 9071 E1               pop hl
1049+ 9072 18 10            jr 7F
1050+ 9074
1051+ 9074              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9074              ; HL contiene el puntero de impresión del disparo.
1053+ 9074              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9074
1055+ 9074 D5           3 push de
1056+ 9075 C5               push bc
1057+ 9076
1058+ 9076 CD 32 8E         call Comprueba_Colision
1059+ 9079
1060+ 9079              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9079
1062+ 9079 78               ld a,b
1063+ 907A
1064+ 907A C1               pop bc
1065+ 907B D1               pop de
1066+ 907C
1067+ 907C EB               ex de,hl
1068+ 907D
1069+ 907D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 907E 23               inc hl                                      ; _ movimiento.
1071+ 907F 72               ld (hl),d
1072+ 9080
1073+ 9080 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9081
1075+ 9081 23               inc hl                                      ; _ en curso.
1076+ 9082 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9083 2B               dec hl
1078+ 9084
1079+ 9084 C9           7 ret
1080+ 9085
1081+ 9085              ; Disparo hacia abajo, (Entidad).
1082+ 9085
1083+ 9085 3A A8 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 9088 47               ld b,a
1085+ 9089
1086+ 9089 CD A3 94     4 call NextScan
1087+ 908C 10 FB            djnz 4B
1088+ 908E
1089+ 908E              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 908E
1091+ 908E 7C               ld a,h
1092+ 908F FE 58            cp $58
1093+ 9091 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9093
1095+ 9093 EB               ex de,hl
1096+ 9094 06 04            ld b,4
1097+ 9096 2B           5 dec hl
1098+ 9097 10 FD            djnz 5B
1099+ 9099
1100+ 9099 CD 9F 90         call Elimina_disparo_de_base_de_datos
1101+ 909C E1               pop hl
1102+ 909D 18 E5            jr 7B
1103+ 909F
1104+ 909F              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 909F
1106+ 909F 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90A2 AF               xor a
1108+ 90A3 77               ld (hl),a
1109+ 90A4 54               ld d,h
1110+ 90A5 5D               ld e,l
1111+ 90A6 13               inc de
1112+ 90A7 ED B0            ldir
1113+ 90A9 C9               ret
1114+ 90AA
1115+ 90AA              ; -----------------------------------------------------------------
1116+ 90AA              ;
1117+ 90AA              ;   7/12/23
1118+ 90AA              ;
1119+ 90AA
1120+ 90AA 3A 9D 87     Selector_de_impactos ld a,(Impacto2)
1121+ 90AD A7               and a
1122+ 90AE C8               ret z
1123+ 90AF
1124+ 90AF              ; Analizamos si hay impacto por disparos.
1125+ 90AF
1126+ 90AF              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90AF
1128+ 90AF CB 4F            bit 1,a
1129+ 90B1 28 07            jr z,1F
1130+ 90B3
1131+ 90B3 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90B6 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90B8 18 08            jr 2F
1134+ 90BA
1135+ 90BA CB 47        1 bit 0,a
1136+ 90BC C8               ret z
1137+ 90BD
1138+ 90BD              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90BD
1140+ 90BD 21 77 87         ld hl,Ctrl_1
1141+ 90C0 CB D6            set 2,(hl)
1142+ 90C2
1143+ 90C2 C9           2 ret
1144+ 90C3
1145+ 90C3              ; -----------------------------------------------------------------
1146+ 90C3              ;
1147+ 90C3              ;   25/04/23
1148+ 90C3              ;
1149+ 90C3
1150+ 90C3              Determina_resultado_comparativa
1151+ 90C3
1152+ 90C3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 90C3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 90C3              ;
1155+ 90C3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 90C3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 90C3              ;
1158+ 90C3              ;   SBC HL,DE
1159+ 90C3
1160+ 90C3              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 90C3              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 90C3
1163+ 90C3              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 90C3              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 90C3
1166+ 90C3
1167+ 90C3 3A 4A 87         ld a,(Cuad_objeto)
1168+ 90C6 FE 02            cp 2
1169+ 90C8 28 26            jr z,2F
1170+ 90CA 38 24            jr c,2F
1171+ 90CC
1172+ 90CC              ; Cuadrantes 3º y 4º
1173+ 90CC
1174+ 90CC E6 01            and 1
1175+ 90CE 28 10            jr z,4F
1176+ 90D0
1177+ 90D0              ; Cuadrante 3º
1178+ 90D0
1179+ 90D0 7C               ld a,h
1180+ 90D1 06 00            ld b,0
1181+ 90D3
1182+ 90D3 CD 5E 91         call Compara_cositas_H3
1183+ 90D6
1184+ 90D6 04               inc b
1185+ 90D7 05               dec b
1186+ 90D8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 90D9
1188+ 90D9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 90DA 06 00            ld b,0
1190+ 90DC
1191+ 90DC CD 70 91         call Compara_cositas_L3
1192+ 90DF C9               ret
1193+ 90E0
1194+ 90E0              ; Cuadrante 4º
1195+ 90E0
1196+ 90E0 7C           4 ld a,h
1197+ 90E1 06 00            ld b,0
1198+ 90E3
1199+ 90E3 CD 82 91         call Compara_cositas_H4
1200+ 90E6
1201+ 90E6 04               inc b
1202+ 90E7 05               dec b
1203+ 90E8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 90E9
1205+ 90E9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 90EA 06 00            ld b,0
1207+ 90EC
1208+ 90EC CD 98 91         call Compara_cositas_L4
1209+ 90EF C9               ret
1210+ 90F0
1211+ 90F0              ; Cuadrantes 1º y 2º.
1212+ 90F0
1213+ 90F0 28 10        2 jr z,3F
1214+ 90F2
1215+ 90F2              ; 1er Cuadrante
1216+ 90F2
1217+ 90F2 7C               ld a,h
1218+ 90F3 06 00            ld b,0
1219+ 90F5
1220+ 90F5 CD 36 91         call Compara_cositas_H1
1221+ 90F8
1222+ 90F8 04               inc b
1223+ 90F9 05               dec b
1224+ 90FA C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 90FB
1226+ 90FB 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 90FC 06 00            ld b,0
1228+ 90FE
1229+ 90FE CD 4C 91         call Compara_cositas_L1
1230+ 9101 C9               ret
1231+ 9102
1232+ 9102
1233+ 9102              ; 2º Cuadrante
1234+ 9102
1235+ 9102 7C           3 ld a,h
1236+ 9103 06 00            ld b,0
1237+ 9105
1238+ 9105 CD 12 91         call Compara_cositas_H2
1239+ 9108
1240+ 9108 04               inc b
1241+ 9109 05               dec b
1242+ 910A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 910B
1244+ 910B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 910C 06 00            ld b,0
1246+ 910E
1247+ 910E CD 24 91         call Compara_cositas_L2
1248+ 9111 C9               ret
1249+ 9112
1250+ 9112 A7           Compara_cositas_H2 and a
1251+ 9113 28 0D            jr z,1F
1252+ 9115              ;    cp $fd
1253+ 9115              ;    jr z,1F
1254+ 9115              ;    cp $fe
1255+ 9115              ;    jr z,1F
1256+ 9115 FE FF            cp $ff
1257+ 9117 28 09            jr z,1F
1258+ 9119 FE 01            cp $01
1259+ 911B 28 05            jr z,1F
1260+ 911D FE 02            cp $02
1261+ 911F 28 01            jr z,1F
1262+ 9121 C0               ret nz
1263+ 9122 04           1 inc b
1264+ 9123 C9               ret
1265+ 9124
1266+ 9124 A7           Compara_cositas_L2 and a
1267+ 9125 28 0D            jr z,1F
1268+ 9127              ;    cp $fd
1269+ 9127              ;    jr z,1F
1270+ 9127 FE FE            cp $fe
1271+ 9129 28 09            jr z,1F
1272+ 912B FE FF            cp $ff
1273+ 912D 28 05            jr z,1F
1274+ 912F FE 01            cp $01
1275+ 9131 28 01            jr z,1F
1276+ 9133              ;    cp $02
1277+ 9133              ;    jr z,1F
1278+ 9133 C0               ret nz
1279+ 9134 04           1 inc b
1280+ 9135 C9               ret
1281+ 9136
1282+ 9136 A7           Compara_cositas_H1 and a
1283+ 9137 28 11            jr z,1F
1284+ 9139              ;    cp $fd
1285+ 9139              ;    jr z,1F
1286+ 9139              ;    cp $fe
1287+ 9139              ;    jr z,1F
1288+ 9139 FE FF            cp $ff
1289+ 913B 28 0D            jr z,1F
1290+ 913D FE 01            cp $01
1291+ 913F 28 09            jr z,1F
1292+ 9141 FE 02            cp $02
1293+ 9143 28 05            jr z,1F
1294+ 9145 FE 03            cp $03
1295+ 9147 28 01            jr z,1F
1296+ 9149 C0               ret nz
1297+ 914A 04           1 inc b
1298+ 914B C9               ret
1299+ 914C
1300+ 914C A7           Compara_cositas_L1 and a
1301+ 914D 28 0D            jr z,1F
1302+ 914F              ;    cp $fd
1303+ 914F              ;    jr z,1F
1304+ 914F              ;    cp $fe
1305+ 914F              ;    jr z,1F
1306+ 914F              ;    cp $ff
1307+ 914F              ;    jr z,1F
1308+ 914F FE 01            cp $01
1309+ 9151 28 09            jr z,1F
1310+ 9153 FE 02            cp $02
1311+ 9155 28 05            jr z,1F
1312+ 9157 FE 03            cp $03
1313+ 9159 28 01            jr z,1F
1314+ 915B C0               ret nz
1315+ 915C 04           1 inc b
1316+ 915D C9               ret
1317+ 915E
1318+ 915E A7           Compara_cositas_H3 and a
1319+ 915F 28 0D            jr z,1F
1320+ 9161              ;    cp $fd
1321+ 9161              ;    jr z,1F
1322+ 9161 FE FE            cp $fe
1323+ 9163 28 09            jr z,1F
1324+ 9165 FE FF            cp $ff
1325+ 9167 28 05            jr z,1F
1326+ 9169 FE 01            cp $01
1327+ 916B 28 01            jr z,1F
1328+ 916D              ;    cp $02
1329+ 916D              ;    jr z,1F
1330+ 916D              ;    cp $03
1331+ 916D              ;    jr z,1F
1332+ 916D C0               ret nz
1333+ 916E 04           1 inc b
1334+ 916F C9               ret
1335+ 9170
1336+ 9170 A7           Compara_cositas_L3 and a
1337+ 9171 28 0D            jr z,1F
1338+ 9173              ;    cp $fd
1339+ 9173              ;    jr z,1F
1340+ 9173              ;    cp $fe
1341+ 9173              ;    jr z,1F
1342+ 9173              ;    cp $ff
1343+ 9173              ;    jr z,1F
1344+ 9173 FE 01            cp $01
1345+ 9175 28 09            jr z,1F
1346+ 9177 FE 02            cp $02
1347+ 9179 28 05            jr z,1F
1348+ 917B FE 03            cp $03
1349+ 917D 28 01            jr z,1F
1350+ 917F C0               ret nz
1351+ 9180 04           1 inc b
1352+ 9181 C9               ret
1353+ 9182
1354+ 9182 A7           Compara_cositas_H4 and a
1355+ 9183 28 11            jr z,1F
1356+ 9185 FE FD            cp $fd
1357+ 9187 28 0D            jr z,1F
1358+ 9189 FE FE            cp $fe
1359+ 918B 28 09            jr z,1F
1360+ 918D FE FF            cp $ff
1361+ 918F 28 05            jr z,1F
1362+ 9191 FE 01            cp $01
1363+ 9193 28 01            jr z,1F
1364+ 9195              ;    cp $02
1365+ 9195              ;    jr z,1F
1366+ 9195              ;    cp $03
1367+ 9195              ;    jr z,1F
1368+ 9195 C0               ret nz
1369+ 9196 04           1 inc b
1370+ 9197 C9               ret
1371+ 9198
1372+ 9198 A7           Compara_cositas_L4 and a
1373+ 9199 28 0D            jr z,1F
1374+ 919B              ;    cp $fd
1375+ 919B              ;    jr z,1F
1376+ 919B FE FE            cp $fe
1377+ 919D 28 09            jr z,1F
1378+ 919F FE FF            cp $ff
1379+ 91A1 28 05            jr z,1F
1380+ 91A3 FE 01            cp $01
1381+ 91A5 28 01            jr z,1F
1382+ 91A7              ;    cp $02
1383+ 91A7              ;    jr z,1F
1384+ 91A7              ;    cp $03
1385+ 91A7              ;    jr z,1F
1386+ 91A7 C0               ret nz
1387+ 91A8 04           1 inc b
1388+ 91A9 C9               ret
# file closed: Disparo.asm
1863  91AA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91AA              ; ******************************************************************************************************************************************************************************************
   2+ 91AA              ;
   3+ 91AA              ; 26/06/23
   4+ 91AA              ;
   5+ 91AA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91AA
   7+ 91AA              Draw
   8+ 91AA
   9+ 91AA CD 97 94     	call Prepara_draw
  10+ 91AD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91AE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91AF 28 05        	jr z,2F
  13+ 91B1
  14+ 91B1 3A 4A 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91B4 18 0C        	jr 1F
  16+ 91B6
  17+ 91B6 2A 48 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91B9 22 38 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91BC CD 4B 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 91BF              ;													; _la esquina superior izquierda de la pantalla.
  21+ 91BF
  22+ 91BF CD 01 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 91C2
  24+ 91C2 3A 58 87     1 ld a,(Ctrl_0)
  25+ 91C5 CB 6F        	bit 5,a
  26+ 91C7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 91C9
  28+ 91C9 CD E1 91     	call Comprueba_limite_horizontal
  29+ 91CC CD 71 92     	call Comprueba_limite_vertical
  30+ 91CF
  31+ 91CF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 91CF              ; -----------------------
  33+ 91CF              ; -----------------------
  34+ 91CF              ; -----------------------
  35+ 91CF
  36+ 91CF CD C7 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 91D2 CD FE 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 91D5 CD 5D 94     	call Define_rutina_de_impresion
  39+ 91D8
  40+ 91D8 3A 58 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 91DB CB AF        	res 5,a											; _a ser de utilidad.
  42+ 91DD 32 58 87     	ld (Ctrl_0),a
  43+ 91E0
  44+ 91E0 C9           	ret
  45+ 91E1
  46+ 91E1              ; *******************************************************************************************************************************************************************************************
  47+ 91E1              ;	21/01/23
  48+ 91E1              ;
  49+ 91E1              ; 	Comprueba_limite_horizontal.
  50+ 91E1              ;
  51+ 91E1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 91E1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 91E1              ;
  54+ 91E1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 91E1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 91E1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 91E1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 91E1
  59+ 91E1
  60+ 91E1
  61+ 91E1 3A 58 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 91E4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 91E6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 91E8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 91EA 32 58 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 91ED 18 09            jr 6F
  67+ 91EF CB 5F        1 bit 3,a
  68+ 91F1 28 0A            jr z,2F
  69+ 91F3 E6 F7            and $f7
  70+ 91F5 32 58 87         ld (Ctrl_0),a
  71+ 91F8 CD 4B 93     6 call Inicializacion
  72+ 91FB 18 5B            jr 5F
  73+ 91FD E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 91FE
  75+ 91FE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 91FE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 91FE
  78+ 91FE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 91FF 2A 5A 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9202 CD B6 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9205 67           	ld h,a
  82+ 9206 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9207 CD B6 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 920A 67           	ld h,a
  85+ 920B A7           	and a
  86+ 920C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 920E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 920F 3A 4A 87     	ld a,(Cuad_objeto)
  89+ 9212 FE 02        	cp 2
  90+ 9214 38 1E        	jr c,3F
  91+ 9216 28 1C        	jr z,3F
  92+ 9218 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9219 28 23            jr z,7F
  94+ 921B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 921D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 921F E1           	pop hl
  97+ 9220
  98+ 9220              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9220              ; _para indicar con E="2" en caso necesario.
 100+ 9220
 101+ 9220 E5               push hl
 102+ 9221 C5               push bc
 103+ 9222 CD B6 97     	call calcula_tercio
 104+ 9225 FE 01        	cp 1
 105+ 9227 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9229 CD 59 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 922C 28 26            jr z,9F
 108+ 922E 38 24            jr c,9F
 109+ 9230 1E 00        11 ld e,0
 110+ 9232 18 22            jr 8F
 111+ 9234 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9235 28 07        	jr z, 7F
 113+ 9237 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9239 1E 00         	ld e,0
 115+ 923B E1           	pop hl
 116+ 923C 18 04        	jr 4F
 117+ 923E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9240 18 15            jr 10F
 119+ 9242
 120+ 9242              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9242              ; _para indicar con E="2" en caso necesario.
 122+ 9242
 123+ 9242 E5           4 push hl
 124+ 9243 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9244 CD B6 97     	call calcula_tercio
 126+ 9247 FE 01        	cp 1
 127+ 9249 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 924B CD 59 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 924E 28 04            jr z,9F
 130+ 9250 30 02            jr nc,9F
 131+ 9252 18 02        	jr 8F
 132+ 9254 1E 02        9 ld e,2
 133+ 9256 C1           8 pop bc
 134+ 9257 E1           10 pop hl
 135+ 9258 C9           5 ret
 136+ 9259
 137+ 9259              ; --------------------
 138+ 9259              ;
 139+ 9259              ; 25/08/22
 140+ 9259
 141+ 9259 CD B6 97     Comprueba_centro call calcula_tercio
 142+ 925C 67               ld h,a
 143+ 925D 08           	ex af,af
 144+ 925E FE 02        	cp 2
 145+ 9260 38 07        	jr c,1F
 146+ 9262 28 05        	jr z,1F
 147+ 9264 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9267 18 03        	jr 2F
 149+ 9269 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 926C 08           2 ex af,af
 151+ 926D A7               and a
 152+ 926E ED 42            sbc hl,bc
 153+ 9270 C9               ret
 154+ 9271
 155+ 9271              ; *********************************************************************************************************************************************************************************************
 156+ 9271              ;
 157+ 9271              ;   16/8/22
 158+ 9271              ;
 159+ 9271              ;	Comprueba_limite_vertical
 160+ 9271              ;
 161+ 9271              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 9271              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 9271              ;
 164+ 9271
 165+ 9271 2A 38 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 9274 7D           	ld a,l
 167+ 9275 E6 1F        	and $1F
 168+ 9277 57           	ld d,a
 169+ 9278 3A 5C 87     	ld a,(Limite_vertical)
 170+ 927B BA           	cp d 											; Límite - Posición.
 171+ 927C 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 927D 3A 4A 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9280 CB 47        	bit 0,a
 174+ 9282 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 9284
 176+ 9284              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 9284
 178+ 9284 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 9285 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9287
 181+ 9287              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9287              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9287
 184+ 9287 3A 3C 87         ld a,(Coordenada_X)
 185+ 928A 16 0F            ld d,Centro_izquierda
 186+ 928C A7               and a
 187+ 928D 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 928E 28 1E            jr z,3F
 189+ 9290 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 9292              ;                                                    ; _salimos sin modificar nada.
 191+ 9292 18 0E            jr 2F
 192+ 9294 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 9295 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9297
 195+ 9297              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9297              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9297
 198+ 9297 3A 3C 87         ld a,(Coordenada_X)
 199+ 929A 16 10            ld d,Centro_derecha
 200+ 929C A7               and a
 201+ 929D 92               sub d
 202+ 929E 28 0E            jr z,3F
 203+ 92A0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92A2              ;                                                    ; _salimos sin modificar nada.
 205+ 92A2 CB 43        2 bit 0,e
 206+ 92A4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92A6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92A7 CD 3B 93         call Modificaccionne
 209+ 92AA C1           	pop bc
 210+ 92AB CD 4B 93         call Inicializacion
 211+ 92AE C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92AF
 213+ 92AF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92AF
 215+ 92AF C5           4 push bc
 216+ 92B0 01 37 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 92B3 0A           	ld a,(bc)
 218+ 92B4 3D           	dec a
 219+ 92B5 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 92B6 7D           	ld a,l
 221+ 92B7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 92B8 CB 47        	bit 0,a
 223+ 92BA 28 03        	jr z,5F
 224+ 92BC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 92BD 18 2E        	jr 7F
 226+ 92BF
 227+ 92BF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 92BF
 229+ 92BF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 92C0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 92C1 3A 58 87     	ld a,(Ctrl_0)
 232+ 92C4 CB 4F        	bit 1,a
 233+ 92C6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 92C8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 92C9
 236+ 92C9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 92C9
 238+ 92C9 1C               inc e
 239+ 92CA 1D               dec e
 240+ 92CB 20 07            jr nz,12F
 241+ 92CD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 92CE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 92CF 22 38 87     	ld (Posicion_actual),hl
 244+ 92D2 18 44        13 jr 9F
 245+ 92D4 CB 43        12 bit 0,e
 246+ 92D6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 92D8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 92D8 C1           	pop bc
 249+ 92D9 18 D3        	jr 3B
 250+ 92DB 80           14 add b
 251+ 92DC 6F               ld l,a
 252+ 92DD 22 38 87     	ld (Posicion_actual),hl
 253+ 92E0 CD 3B 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 92E3 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 92E5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 92E7 32 58 87         ld (Ctrl_0),a
 257+ 92EA F1           	pop af
 258+ 92EB 18 2B        	jr 9F
 259+ 92ED
 260+ 92ED              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 92ED
 262+ 92ED F5           7 push af
 263+ 92EE 3A 58 87     	ld a,(Ctrl_0)
 264+ 92F1 CB 47        	bit 0,a
 265+ 92F3 20 1D        	jr nz,8F
 266+ 92F5 F1           	pop af
 267+ 92F6
 268+ 92F6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 92F6
 270+ 92F6 1C           	inc e
 271+ 92F7 1D               dec e
 272+ 92F8 20 07            jr nz,10F
 273+ 92FA 90           	sub b
 274+ 92FB 6F               ld l,a
 275+ 92FC 22 38 87     	ld (Posicion_actual),hl
 276+ 92FF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9301              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9301 CB 43        10 bit 0,e
 279+ 9303 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9305              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9305 C1           	pop bc
 282+ 9306 18 A6        	jr 3B
 283+ 9308 90           16 sub b
 284+ 9309 6F               ld l,a
 285+ 930A 22 38 87     	ld (Posicion_actual),hl
 286+ 930D CD 3B 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9310 18 06            jr 9F
 288+ 9312 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9314 32 58 87         ld (Ctrl_0),a
 290+ 9317 F1           	pop af
 291+ 9318 C1           9 pop bc
 292+ 9319 1E 00        	ld e,0
 293+ 931B CD 4B 93         call Inicializacion
 294+ 931E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 931F 08           	ex af,af
 296+ 9320 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9321 18 8B            jr 3B
 298+ 9323
 299+ 9323              ; --------------------
 300+ 9323
 301+ 9323 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9325 CD B2 94     1 call PreviousScan
 303+ 9328 10 FB            djnz 1B
 304+ 932A 22 38 87     	ld (Posicion_actual),hl
 305+ 932D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 932E C9           	ret
 307+ 932F
 308+ 932F              ; --------------------
 309+ 932F
 310+ 932F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9331 CD A3 94     1 call NextScan
 312+ 9334 10 FB            djnz 1B
 313+ 9336 22 38 87     	ld (Posicion_actual),hl
 314+ 9339 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 933A C9           	ret
 316+ 933B
 317+ 933B              ; --------------------
 318+ 933B              ;
 319+ 933B              ;	22/01/23
 320+ 933B              ;
 321+ 933B              ;	E="1". Hemos cambiado de cuadrante.
 322+ 933B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 933B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 933B
 325+ 933B
 326+ 933B              Modificaccionne
 327+ 933B
 328+ 933B 3A 4A 87     	ld a,(Cuad_objeto)
 329+ 933E FE 02        	cp 2
 330+ 9340 CC 23 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9343 DC 23 93         call c,Modifica_Pos_actual
 332+ 9346 C8           	ret z
 333+ 9347 CD 2F 93         call Modifica_Pos_actual2
 334+ 934A C9               ret
 335+ 934B
 336+ 934B              ; *************************************************************************************************************************************************************************************************
 337+ 934B              ;
 338+ 934B              ;	13/8/22
 339+ 934B              ;
 340+ 934B              ;	Inicializacion
 341+ 934B              ;
 342+ 934B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 934B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 934B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 934B              ;
 346+ 934B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 934B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 934B              ;	_ desaparece/aparece.
 349+ 934B
 350+ 934B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 934B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 934B              ;
 353+ 934B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 934B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 934B              ; 		   [E] ="0"
 356+ 934B
 357+ 934B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 934B
 359+ 934B CD B6 97     Inicializacion call calcula_tercio
 360+ 934E 28 36        	jr z,primit
 361+ 9350 E6 02        	and 2
 362+ 9352 20 07        	jr nz,segmit
 363+ 9354 7D           	ld a,l
 364+ 9355 FE 7F        	cp $7f
 365+ 9357 38 2D        	jr c,primit
 366+ 9359 28 2B        	jr z,primit
 367+ 935B CD C1 93     segmit call column
 368+ 935E 38 13        	jr c,tercuad
 369+ 9360 3E 04        cuarcuad ld a,4
 370+ 9362 32 4A 87     	ld (Cuad_objeto),a
 371+ 9365 21 20 48     	ld hl,$4820
 372+ 9368 22 5A 87     	ld (Limite_horizontal),hl
 373+ 936B 21 5C 87     	ld hl,Limite_vertical
 374+ 936E 36 0D        	ld (hl),$0d
 375+ 9370 08           	ex af,af
 376+ 9371 18 3C        	jr 1F
 377+ 9373              tercuad
 378+ 9373 3E 03        	ld a,3
 379+ 9375 32 4A 87     	ld (Cuad_objeto),a
 380+ 9378 21 20 48     	ld hl,$4820
 381+ 937B 22 5A 87     	ld (Limite_horizontal),hl
 382+ 937E 21 5C 87     	ld hl,Limite_vertical
 383+ 9381 36 12        	ld (hl),$12
 384+ 9383 08           	ex af,af
 385+ 9384 18 29        	jr 1F
 386+ 9386 CD C1 93     primit call column
 387+ 9389 38 13        	jr c, primcuad
 388+ 938B              segcuad
 389+ 938B 3E 02        	ld a,2
 390+ 938D 32 4A 87     	ld (Cuad_objeto),a
 391+ 9390 21 C0 4F     	ld hl,$4fc0
 392+ 9393 22 5A 87     	ld (Limite_horizontal),hl
 393+ 9396 21 5C 87     	ld hl,Limite_vertical
 394+ 9399 36 0D        	ld (hl),$0d
 395+ 939B 08           	ex af,af
 396+ 939C 18 11        	jr 1F
 397+ 939E              primcuad
 398+ 939E 3E 01        	ld a,1
 399+ 93A0 32 4A 87     	ld (Cuad_objeto),a
 400+ 93A3 21 C0 4F     	ld hl,$4fc0
 401+ 93A6 22 5A 87     	ld (Limite_horizontal),hl
 402+ 93A9 21 5C 87     	ld hl,Limite_vertical
 403+ 93AC 36 12        	ld (hl),$12
 404+ 93AE 08           	ex af,af
 405+ 93AF
 406+ 93AF C5           1 push bc
 407+ 93B0 E5           	push hl
 408+ 93B1 D5           	push de
 409+ 93B2
 410+ 93B2 2A 38 87     	ld hl,(Posicion_actual)
 411+ 93B5 CD 4E 9B     	call Genera_coordenadas
 412+ 93B8
 413+ 93B8 D1           	pop de
 414+ 93B9 E1           	pop hl
 415+ 93BA C1           	pop bc
 416+ 93BB
 417+ 93BB 21 58 87     	ld hl,Ctrl_0
 418+ 93BE CB EE        	set 5,(hl)
 419+ 93C0 C9           	ret
 420+ 93C1
 421+ 93C1              ; ------------------------------------------------------------------------------------------------------------------
 422+ 93C1
 423+ 93C1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 93C1              ;
 425+ 93C1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 93C1
 427+ 93C1 7D           column ld a,l
 428+ 93C2 E6 1F        	and $1f
 429+ 93C4 FE 10         	cp $10
 430+ 93C6 C9            	ret
 431+ 93C7
 432+ 93C7              ; --------------------------------------------------------------------------------------------------------------------
 433+ 93C7              ;
 434+ 93C7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 93C7              ;
 436+ 93C7              ; 14/12/22
 437+ 93C7              ;
 438+ 93C7              ;	Modifica: A y BC.
 439+ 93C7
 440+ 93C7 3A 4A 87     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 93CA E6 01        	and 1
 442+ 93CC 28 17        	jr z,1F
 443+ 93CE
 444+ 93CE              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 93CE
 446+ 93CE 3A 3C 87     	ld a,(Coordenada_X)
 447+ 93D1 47           	ld b,a
 448+ 93D2 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 93D3 79           	ld a,c
 450+ 93D4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 93D5 38 08        	jr c,2F
 452+ 93D7 47           	ld b,a
 453+ 93D8 79           	ld a,c
 454+ 93D9 90           	sub b
 455+ 93DA 32 59 87     	ld (Columnas),a
 456+ 93DD 18 1B        	jr 4F
 457+ 93DF 79           2 ld a,c
 458+ 93E0 32 59 87     	ld (Columnas),a
 459+ 93E3 18 15        	jr 4F
 460+ 93E5
 461+ 93E5              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 93E5
 463+ 93E5 3A 3C 87     1 ld a,(Coordenada_X)
 464+ 93E8 81           	add c
 465+ 93E9 3D           	dec a
 466+ 93EA D6 1F        	sub $1f
 467+ 93EC 38 08        	jr c,3F
 468+ 93EE 47           	ld b,a
 469+ 93EF 79           	ld a,c
 470+ 93F0 90           	sub b
 471+ 93F1 32 59 87     	ld (Columnas),a
 472+ 93F4 18 04        	jr 4F
 473+ 93F6 79           3 ld a,c
 474+ 93F7 32 59 87     	ld (Columnas),a
 475+ 93FA D9           4 exx
 476+ 93FB 4F           	ld c,a
 477+ 93FC D9           	exx
 478+ 93FD C9            ret
 479+ 93FE
 480+ 93FE              ; --------------------------------------------------------------------------------------------------------------------
 481+ 93FE              ;
 482+ 93FE              ;   19/7/23
 483+ 93FE              ;
 484+ 93FE              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 93FE              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 93FE              ;
 487+ 93FE              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 93FE              ;			HL e IY Contienen (Puntero_objeto).
 489+ 93FE              ;
 490+ 93FE              ;	DESTRUYE: HL,B Y A.
 491+ 93FE
 492+ 93FE 3A 4A 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9401 FE 02        	cp 2
 494+ 9403 38 18        	jr c,1F
 495+ 9405 28 16        	jr z,1F
 496+ 9407 E6 01        	and 1
 497+ 9409 28 0D        	jr z,3F
 498+ 940B
 499+ 940B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 940B
 501+ 940B CD 51 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 940E
 503+ 940E 7D           9 ld a,l
 504+ 940F E6 1F        	and $1f
 505+ 9411 28 2A        	jr z,7F
 506+ 9413 2B           	dec hl
 507+ 9414 10 F8        	djnz 9B
 508+ 9416 18 25        	jr 7F
 509+ 9418
 510+ 9418              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9418
 512+ 9418 2A 38 87     3 ld hl,(Posicion_actual)
 513+ 941B 18 20        	jr 7F
 514+ 941D
 515+ 941D 28 14        1 jr z,2F
 516+ 941F
 517+ 941F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 941F
 519+ 941F CD 51 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9422
 521+ 9422 7D           4 ld a,l
 522+ 9423 E6 1F        	and $1f
 523+ 9425 28 03        	jr z,6F
 524+ 9427 2B           	dec hl
 525+ 9428 10 F8        	djnz 4B
 526+ 942A 06 0F        6 ld b,15
 527+ 942C CD B2 94     5 call PreviousScan
 528+ 942F 10 FB        	djnz 5B
 529+ 9431 18 0A        	jr 7F
 530+ 9433
 531+ 9433              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9433
 533+ 9433 CD 51 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9436 06 0F        	ld b,15
 535+ 9438 CD B2 94     8 call PreviousScan
 536+ 943B 10 FB        	djnz 8B
 537+ 943D
 538+ 943D E5           7 push hl
 539+ 943E DD E1        	pop ix
 540+ 9440
 541+ 9440 2A 3A 87     	ld hl,(Puntero_objeto)
 542+ 9443 E5           	push hl
 543+ 9444 FD E1        	pop iy
 544+ 9446
 545+ 9446              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9446
 547+ 9446 3A 58 87     	ld a,(Ctrl_0)
 548+ 9449 CB 77        	bit 6,a
 549+ 944B C8           	ret z
 550+ 944C
 551+ 944C              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 944C              ; _ entidad / Amadeus´.
 553+ 944C
 554+ 944C DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 9450
 556+ 9450 C9           	ret
 557+ 9451
 558+ 9451              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9451              ;
 560+ 9451              ;	2/1/23
 561+ 9451              ;
 562+ 9451              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9451              ;
 564+ 9451              ;	Tras esta rutina tenemos:
 565+ 9451              ;
 566+ 9451              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9451              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9451              ;
 569+ 9451              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9451
 571+ 9451 2A 38 87     Operandos ld hl,(Posicion_actual)
 572+ 9454 3A 59 87     	ld a,(Columnas)
 573+ 9457 3D           	dec a
 574+ 9458 20 01        	jr nz,1F
 575+ 945A 3C           	inc a
 576+ 945B 47           1 ld b,a
 577+ 945C C9           	ret
 578+ 945D
 579+ 945D              ; --------------------------------------------------------------------------------------------------------------------
 580+ 945D              ;
 581+ 945D              ;	3/1/23
 582+ 945D              ;
 583+ 945D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 945D              ;
 585+ 945D              ;	Destruye: A,B,HL y DE.
 586+ 945D
 587+ 945D              Define_rutina_de_impresion
 588+ 945D
 589+ 945D 3A 37 87     	ld a,(Columns)
 590+ 9460 47           	ld b,a
 591+ 9461 3A 59 87     	ld a,(Columnas)
 592+ 9464 B8           	cp b
 593+ 9465 20 0D        	jr nz,2f
 594+ 9467
 595+ 9467              ;	La entidad se imprime entera.
 596+ 9467
 597+ 9467 21 86 95     	ld hl, Indice_entidades_completas
 598+ 946A E6 01        	and 1
 599+ 946C 28 02        	jr z,1F
 600+ 946E
 601+ 946E 23           	inc hl
 602+ 946F 23           	inc hl
 603+ 9470
 604+ 9470 CD 40 8B     1 call Extrae_address
 605+ 9473 C9           	ret		;	ret
 606+ 9474
 607+ 9474              ;	La entidad no se imprime entera en pantalla.
 608+ 9474
 609+ 9474 3A 4A 87     2 ld a,(Cuad_objeto)
 610+ 9477 E6 01        	and 1
 611+ 9479 28 17        	jr z,3F
 612+ 947B
 613+ 947B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 947B
 615+ 947B 21 8A 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 947E 3A 37 87     4 ld a,(Columns)
 617+ 9481 E6 01        	and 1
 618+ 9483 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 9485
 620+ 9485 23           	inc hl
 621+ 9486 23           	inc hl
 622+ 9487
 623+ 9487 3A 59 87     	ld a,(Columnas)
 624+ 948A E6 01        	and 1
 625+ 948C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 948E
 627+ 948E 23           	inc hl
 628+ 948F 23           	inc hl
 629+ 9490
 630+ 9490 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 9492
 632+ 9492 21 90 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 9495 18 E7        	jr 4B
 634+ 9497
 635+ 9497              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9497              ;
 637+ 9497              ;	Prepara_draw
 638+ 9497              ;
 639+ 9497              ;	Es una rutina de carga.
 640+ 9497              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9497              ;
 642+ 9497              ;	FUNCIONAMIENTO:
 643+ 9497              ;
 644+ 9497              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9497              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9497              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9497              ;
 648+ 9497              ;	DESTRUYE:
 649+ 9497              ;
 650+ 9497              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9497
 652+ 9497 21 36 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 949A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 949B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 949C 4E           	ld c,(hl)
 656+ 949D 2A 38 87     	ld hl,(Posicion_actual)
 657+ 94A0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94A2 C9           	ret
 659+ 94A3
 660+ 94A3              ;----------------------------------------------------------------------------------------------------------------
 661+ 94A3              ;
 662+ 94A3              ;	5/08/22
 663+ 94A3              ;
 664+ 94A3              ;   NextScan.
 665+ 94A3              ;
 666+ 94A3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94A3              ;
 668+ 94A3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94A3              ;
 670+ 94A3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94A3              ;
 672+ 94A3              ;       DESTRUIDOS: AF y HL !!!
 673+ 94A3              ;
 674+ 94A3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94A3              ;
 676+ 94A3
 677+ 94A3 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 94A4 7C               ld a,h
 679+ 94A5 E6 07            and 7
 680+ 94A7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 94A8
 682+ 94A8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 94A9 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 94AB 6F               ld l,a
 685+ 94AC D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 94AD
 687+ 94AD 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 94AE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 94B0 67               ld h,a
 690+ 94B1 C9               ret
 691+ 94B2
 692+ 94B2              ;----------------------------------------------------------------------------------------------------------------
 693+ 94B2              ;
 694+ 94B2              ;	5/08/22
 695+ 94B2              ;
 696+ 94B2              ;   PreviousScan.
 697+ 94B2              ;
 698+ 94B2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 94B2              ;
 700+ 94B2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 94B2              ;
 702+ 94B2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 94B2              ;
 704+ 94B2              ;       DESTRUIDOS: AF y HL !!!
 705+ 94B2              ;
 706+ 94B2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 94B2              ;
 708+ 94B2
 709+ 94B2 7C           PreviousScan ld a,h
 710+ 94B3 25               dec h               ; Dec H.
 711+ 94B4 E6 07            and 7
 712+ 94B6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 94B7
 714+ 94B7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 94B8 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 94BA 6F               ld l,a
 717+ 94BB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 94BC
 719+ 94BC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 94BD C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 94BF 67               ld h,a
 722+ 94C0 C9               ret
 723+ 94C1
 724+ 94C1              ; -----------------------------------------------------------------------------------
 725+ 94C1              ;
 726+ 94C1              ;	31/7/23
 727+ 94C1              ;
 728+ 94C1              ;	Rutina principal de pintado de entidades.
 729+ 94C1              ;	Extrae la foto del frame, (entidades).
 730+ 94C1
 731+ 94C1              Extrae_foto_entidades
 732+ 94C1
 733+ 94C1 21 01 70     	ld hl,Album_de_fotos+1
 734+ 94C4 7E           	ld a,(hl)
 735+ 94C5 A7           	and a
 736+ 94C6 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 94C7
 738+ 94C7              ;	No hay datos, (entidades para pintar en este frame).
 739+ 94C7
 740+ 94C7 3A 83 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 94CA A7           	and a
 742+ 94CB C8           	ret z
 743+ 94CC
 744+ 94CC              ; -----------------------------------
 745+ 94CC
 746+ 94CC ED 73 88 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 94D0 31 00 70     	ld sp,Album_de_fotos
 748+ 94D3
 749+ 94D3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 94D5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 94D6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 94D7
 753+ 94D7 ED 73 8A 87  	ld (Stack_2),sp
 754+ 94DB ED 7B 88 87  	ld sp,(Stack)
 755+ 94DF
 756+ 94DF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 94DF
 758+ 94DF 3E CD        	ld a,$cd
 759+ 94E1 32 E9 94     	ld (Imprime),a
 760+ 94E4 EB           	ex de,hl
 761+ 94E5 22 EA 94     	ld (Imprime+1),hl
 762+ 94E8 EB           	ex de,hl
 763+ 94E9
 764+ 94E9              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 94E9
 766+ 94E9 00 00 00     Imprime db 0,0,0
 767+ 94EC
 768+ 94EC ED 73 88 87  	ld (Stack),sp
 769+ 94F0
 770+ 94F0 3A 83 87     	ld a,(Numero_de_malotes)
 771+ 94F3 3D           	dec a
 772+ 94F4 28 09        	jr z,1F
 773+ 94F6 32 83 87      	ld (Numero_de_malotes),a
 774+ 94F9
 775+ 94F9 ED 7B 8A 87  	ld sp,(Stack_2)
 776+ 94FD 18 D4        	jr 2B
 777+ 94FF
 778+ 94FF AF           1 xor a
 779+ 9500 32 8A 87     	ld (Stack_2),a
 780+ 9503
 781+ 9503 C9           	ret
 782+ 9504
 783+ 9504              ; -----------------------------------------------------------------------------------
 784+ 9504              ;
 785+ 9504              ;	28/2/23
 786+ 9504              ;
 787+ 9504              ;	Pinta los disparos generados.
 788+ 9504
 789+ 9504              Extrae_foto_disparos
 790+ 9504
 791+ 9504 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9507 7E               ld a,(hl)
 793+ 9508 A7               and a
 794+ 9509 C8               ret z
 795+ 950A
 796+ 950A 3A 98 87     	ld a,(Numero_de_disparotes)
 797+ 950D A7           	and a
 798+ 950E C8           	ret z
 799+ 950F ED 73 88 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9513 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9516
 802+ 9516 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9518 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9519 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 951A
 806+ 951A ED 73 8A 87  	ld (Stack_2),sp
 807+ 951E ED 7B 88 87  	ld sp,(Stack)
 808+ 9522
 809+ 9522              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9522
 811+ 9522 3E CD        	ld a,$cd
 812+ 9524 32 2C 95     	ld (Imprime2),a
 813+ 9527 EB           	ex de,hl
 814+ 9528 22 2D 95     	ld (Imprime2+1),hl
 815+ 952B EB           	ex de,hl
 816+ 952C
 817+ 952C              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 952C
 819+ 952C 00 00 00     Imprime2 db 0,0,0
 820+ 952F
 821+ 952F 3A 98 87     	ld a,(Numero_de_disparotes)
 822+ 9532 3D           	dec a
 823+ 9533 28 09        	jr z,1F
 824+ 9535 32 98 87      	ld (Numero_de_disparotes),a
 825+ 9538
 826+ 9538 ED 7B 8A 87  	ld sp,(Stack_2)
 827+ 953C 18 D8        	jr 2B
 828+ 953E
 829+ 953E AF           1 xor a
 830+ 953F 32 8A 87     	ld (Stack_2),a
 831+ 9542 C9           	ret
 832+ 9543
 833+ 9543              ; -----------------------------------------------------------------------------------
 834+ 9543              ;
 835+ 9543              ;	4/9/23
 836+ 9543              ;
 837+ 9543              ;	Rutina principal de pintado de Amadeus.
 838+ 9543              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9543
 840+ 9543 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9546 7E           	ld a,(hl)
 842+ 9547 A7           	and a
 843+ 9548 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9549
 845+ 9549 3A 83 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 954C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 954D C8           	ret z
 848+ 954E
 849+ 954E              ; -----------------------------------
 850+ 954E
 851+ 954E ED 73 88 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9552 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 9555
 854+ 9555 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9557 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9558 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9559
 858+ 9559 ED 73 8A 87  	ld (Stack_2),sp
 859+ 955D ED 7B 88 87  	ld sp,(Stack)
 860+ 9561
 861+ 9561              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9561
 863+ 9561 3E CD        	ld a,$cd
 864+ 9563 32 6B 95     	ld (Imprime_Amadeus),a
 865+ 9566 EB           	ex de,hl
 866+ 9567 22 6C 95     	ld (Imprime_Amadeus+1),hl
 867+ 956A EB           	ex de,hl
 868+ 956B
 869+ 956B              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 956B
 871+ 956B 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 956E
 873+ 956E ED 73 88 87  	ld (Stack),sp
 874+ 9572
 875+ 9572 3A 83 87     	ld a,(Numero_de_malotes)
 876+ 9575 3D           	dec a
 877+ 9576 28 09        	jr z,1F
 878+ 9578 32 83 87      	ld (Numero_de_malotes),a
 879+ 957B
 880+ 957B ED 7B 8A 87  	ld sp,(Stack_2)
 881+ 957F 18 D4        	jr 2B
 882+ 9581
 883+ 9581 AF           1 xor a
 884+ 9582 32 8A 87     	ld (Stack_2),a
 885+ 9585
 886+ 9585 C9           	ret
# file closed: Draw_XOR.asm
1864  9586              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9586              ;   índices de Rutinas de impresión.
   2+ 9586
   3+ 9586 96 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9588 C3 95            defw Pinta_Amadeus_3x2
   5+ 958A
   6+ 958A 19 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 958C B9 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 958E 6D 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9590
  10+ 9590 43 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9592 47 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9594 FB 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9596
  14+ 9596
  15+ 9596              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9596              ;
  17+ 9596              ;   12/12/22
  18+ 9596              ;
  19+ 9596              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9596              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9596              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9596              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9596              ;
  24+ 9596              ;   Modifica: DE y HL.
  25+ 9596
  26+ 9596 ED 73 88 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 959A FD F9        	ld sp,iy
  28+ 959C 06 10            ld b,16
  29+ 959E D1           1 pop de
  30+ 959F 7B               ld a,e
  31+ 95A0 AE               xor (hl)
  32+ 95A1 77           	ld (hl),a
  33+ 95A2 23           	inc hl
  34+ 95A3 7A               ld a,d
  35+ 95A4 AE               xor (hl)
  36+ 95A5 77           	ld (hl),a
  37+ 95A6 2B           	dec hl
  38+ 95A7 24           	inc h
  39+ 95A8 7C               ld a,h
  40+ 95A9 E6 07            and 7
  41+ 95AB 20 0A            jr nz,2F
  42+ 95AD 7D               ld a,l
  43+ 95AE C6 20            add a,$20
  44+ 95B0 6F               ld l,a
  45+ 95B1 38 04            jr c,2F
  46+ 95B3 7C               ld a,h
  47+ 95B4 D6 08            sub 8
  48+ 95B6 67               ld h,a
  49+ 95B7 7C           2 ld a,h
  50+ 95B8 FE 58            cp $58
  51+ 95BA 28 02            jr z,3F
  52+ 95BC 10 E0            djnz 1B
  53+ 95BE ED 7B 88 87  3 ld sp,(Stack)
  54+ 95C2 C9           	ret
  55+ 95C3
  56+ 95C3 ED 73 88 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95C7 FD F9        	ld sp,iy
  58+ 95C9 06 08            ld b,8
  59+ 95CB D1           1 pop de
  60+ 95CC 7B               ld a,e
  61+ 95CD AE               xor (hl)
  62+ 95CE 77           	ld (hl),a
  63+ 95CF 23           	inc hl
  64+ 95D0 7A               ld a,d
  65+ 95D1 AE               xor (hl)
  66+ 95D2 77           	ld (hl),a
  67+ 95D3 23           	inc hl
  68+ 95D4 D1           	pop de
  69+ 95D5 7B               ld a,e
  70+ 95D6 AE               xor (hl)
  71+ 95D7 77           	ld (hl),a
  72+ 95D8 2B           	dec hl
  73+ 95D9 2B           	dec hl
  74+ 95DA 24           	inc h
  75+ 95DB 7C               ld a,h
  76+ 95DC E6 07            and 7
  77+ 95DE 20 0A            jr nz,2F
  78+ 95E0 7D               ld a,l
  79+ 95E1 C6 20            add a,$20
  80+ 95E3 6F               ld l,a
  81+ 95E4 38 04            jr c,2F
  82+ 95E6 7C               ld a,h
  83+ 95E7 D6 08            sub 8
  84+ 95E9 67               ld h,a
  85+ 95EA 7C           2 ld a,h
  86+ 95EB FE 58            cp $58
  87+ 95ED 28 25            jr z,4F
  88+ 95EF 7A               ld a,d
  89+ 95F0 AE               xor (hl)
  90+ 95F1 77               ld (hl),a
  91+ 95F2 D1           	pop de
  92+ 95F3 23           	inc hl
  93+ 95F4 7B               ld a,e
  94+ 95F5 AE               xor (hl)
  95+ 95F6 77           	ld (hl),a
  96+ 95F7 23           	inc hl
  97+ 95F8 7A               ld a,d
  98+ 95F9 AE               xor (hl)
  99+ 95FA 77           	ld (hl),a
 100+ 95FB 2B           	dec hl
 101+ 95FC 2B           	dec hl
 102+ 95FD 24           	inc h
 103+ 95FE 7C               ld a,h
 104+ 95FF E6 07            and 7
 105+ 9601 20 0A            jr nz,3F
 106+ 9603 7D               ld a,l
 107+ 9604 C6 20            add a,$20
 108+ 9606 6F               ld l,a
 109+ 9607 38 04            jr c,3F
 110+ 9609 7C               ld a,h
 111+ 960A D6 08            sub 8
 112+ 960C 67               ld h,a
 113+ 960D 7C           3 ld a,h
 114+ 960E FE 58            cp $58
 115+ 9610 28 02            jr z,4F
 116+ 9612 10 B7            djnz 1B
 117+ 9614 ED 7B 88 87  4 ld sp,(Stack)
 118+ 9618 C9           	ret
 119+ 9619
 120+ 9619              ; ---------------------------------------------------
 121+ 9619
 122+ 9619 ED 73 88 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 961D FD F9        	ld sp,iy
 124+ 961F
 125+ 961F              ; >>>
 126+ 961F
 127+ 961F 06 10            ld b,16
 128+ 9621 D1           1 pop de
 129+ 9622 7A           	ld a,d
 130+ 9623 AE           	xor (hl)
 131+ 9624 77           	ld (hl),a
 132+ 9625 24           	inc h
 133+ 9626 7C               ld a,h
 134+ 9627 E6 07            and 7
 135+ 9629 20 0C            jr nz,2F
 136+ 962B 7D               ld a,l
 137+ 962C C6 20            add a,$20
 138+ 962E 6F               ld l,a
 139+ 962F 38 06            jr c,2F
 140+ 9631 7C               ld a,h
 141+ 9632 D6 08            sub 8
 142+ 9634 67               ld h,a
 143+ 9635 18 00            jr 2F
 144+ 9637 7C           2 ld a,h
 145+ 9638 FE 58            cp $58
 146+ 963A 28 02            jr z,3F
 147+ 963C 10 E3            djnz 1B
 148+ 963E ED 7B 88 87  3 ld sp,(Stack)
 149+ 9642 C9           	ret
 150+ 9643
 151+ 9643 ED 73 88 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9647 FD F9        	ld sp,iy
 153+ 9649
 154+ 9649              ; >>>
 155+ 9649
 156+ 9649 06 10            ld b,16
 157+ 964B D1           1 pop de
 158+ 964C 7B           	ld a,e
 159+ 964D AE           	xor (hl)
 160+ 964E 77           	ld (hl),a
 161+ 964F 24           	inc h
 162+ 9650 7C               ld a,h
 163+ 9651 E6 07            and 7
 164+ 9653 20 0C            jr nz,2F
 165+ 9655 7D               ld a,l
 166+ 9656 C6 20            add a,$20
 167+ 9658 6F               ld l,a
 168+ 9659 38 06            jr c,2F
 169+ 965B 7C               ld a,h
 170+ 965C D6 08            sub 8
 171+ 965E 67               ld h,a
 172+ 965F 18 00            jr 2F
 173+ 9661 7C           2 ld a,h
 174+ 9662 FE 58            cp $58
 175+ 9664 28 02            jr z,3F
 176+ 9666 10 E3            djnz 1B
 177+ 9668 ED 7B 88 87  3 ld sp,(Stack)
 178+ 966C C9           	ret
 179+ 966D
 180+ 966D              ; ---------------------------------------------------
 181+ 966D
 182+ 966D ED 73 88 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9671 FD F9        	ld sp,iy
 184+ 9673 06 08            ld b,8
 185+ 9675 D1           1 pop de
 186+ 9676 7A           	ld a,d
 187+ 9677 AE           	xor (hl)
 188+ 9678 77           	ld (hl),a
 189+ 9679 23           	inc hl
 190+ 967A D1           	pop de
 191+ 967B 7B           	ld a,e
 192+ 967C AE           	xor (hl)
 193+ 967D 77           	ld (hl),a
 194+ 967E 2B           	dec hl
 195+ 967F 24            	inc h
 196+ 9680 7C               ld a,h
 197+ 9681 E6 07            and 7
 198+ 9683 20 0A            jr nz,2F
 199+ 9685 7D               ld a,l
 200+ 9686 C6 20            add a,$20
 201+ 9688 6F               ld l,a
 202+ 9689 38 04            jr c,2F
 203+ 968B 7C               ld a,h
 204+ 968C D6 08            sub 8
 205+ 968E 67               ld h,a
 206+ 968F 7C           2 ld a,h
 207+ 9690 FE 58            cp $58
 208+ 9692 28 20            jr z,4F
 209+ 9694 D1               pop de
 210+ 9695 7B           	ld a,e
 211+ 9696 AE           	xor (hl)
 212+ 9697 77           	ld (hl),a
 213+ 9698 23           	inc hl
 214+ 9699 7A           	ld a,d
 215+ 969A AE           	xor (hl)
 216+ 969B 77           	ld (hl),a
 217+ 969C 2B           	dec hl
 218+ 969D 24           	inc h
 219+ 969E 7C               ld a,h
 220+ 969F E6 07            and 7
 221+ 96A1 20 0A            jr nz,3F
 222+ 96A3 7D               ld a,l
 223+ 96A4 C6 20            add a,$20
 224+ 96A6 6F               ld l,a
 225+ 96A7 38 04            jr c,3F
 226+ 96A9 7C               ld a,h
 227+ 96AA D6 08            sub 8
 228+ 96AC 67               ld h,a
 229+ 96AD 7C           3 ld a,h
 230+ 96AE FE 58            cp $58
 231+ 96B0 28 02            jr z,4F
 232+ 96B2 10 C1            djnz 1B
 233+ 96B4 ED 7B 88 87  4 ld sp,(Stack)
 234+ 96B8 C9           	ret
 235+ 96B9
 236+ 96B9 ED 73 88 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96BD FD F9        	ld sp,iy
 238+ 96BF 06 08            ld b,8
 239+ 96C1 D1           1 pop de
 240+ 96C2 D1           	pop de
 241+ 96C3 7B           	ld a,e
 242+ 96C4 AE           	xor (hl)
 243+ 96C5 77           	ld (hl),a
 244+ 96C6 24            	inc h
 245+ 96C7 7C               ld a,h
 246+ 96C8 E6 07            and 7
 247+ 96CA 20 0A            jr nz,2F
 248+ 96CC 7D               ld a,l
 249+ 96CD C6 20            add a,$20
 250+ 96CF 6F               ld l,a
 251+ 96D0 38 04            jr c,2F
 252+ 96D2 7C               ld a,h
 253+ 96D3 D6 08            sub 8
 254+ 96D5 67               ld h,a
 255+ 96D6 7C           2 ld a,h
 256+ 96D7 FE 58            cp $58
 257+ 96D9 28 1B            jr z,4F
 258+ 96DB D1               pop de
 259+ 96DC 7A           	ld a,d
 260+ 96DD AE           	xor (hl)
 261+ 96DE 77           	ld (hl),a
 262+ 96DF 24           	inc h
 263+ 96E0 7C               ld a,h
 264+ 96E1 E6 07            and 7
 265+ 96E3 20 0A            jr nz,3F
 266+ 96E5 7D               ld a,l
 267+ 96E6 C6 20            add a,$20
 268+ 96E8 6F               ld l,a
 269+ 96E9 38 04            jr c,3F
 270+ 96EB 7C               ld a,h
 271+ 96EC D6 08            sub 8
 272+ 96EE 67               ld h,a
 273+ 96EF 7C           3 ld a,h
 274+ 96F0 FE 58            cp $58
 275+ 96F2 28 02            jr z,4F
 276+ 96F4 10 CB            djnz 1B
 277+ 96F6 ED 7B 88 87  4 ld sp,(Stack)
 278+ 96FA C9           	ret
 279+ 96FB
 280+ 96FB ED 73 88 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 96FF FD F9        	ld sp,iy
 282+ 9701 06 08            ld b,8
 283+ 9703 D1           1 pop de
 284+ 9704 7B           	ld a,e
 285+ 9705 AE           	xor (hl)
 286+ 9706 77           	ld (hl),a
 287+ 9707 23           	inc hl
 288+ 9708 7A           	ld a,d
 289+ 9709 AE           	xor (hl)
 290+ 970A 77           	ld (hl),a
 291+ 970B 2B           	dec hl
 292+ 970C 24             	inc h
 293+ 970D 7C               ld a,h
 294+ 970E E6 07            and 7
 295+ 9710 20 0A            jr nz,2F
 296+ 9712 7D               ld a,l
 297+ 9713 C6 20            add a,$20
 298+ 9715 6F               ld l,a
 299+ 9716 38 04            jr c,2F
 300+ 9718 7C               ld a,h
 301+ 9719 D6 08            sub 8
 302+ 971B 67               ld h,a
 303+ 971C 7C           2 ld a,h
 304+ 971D FE 58            cp $58
 305+ 971F 28 21            jr z,4F
 306+ 9721 D1               pop de
 307+ 9722 7A           	ld a,d
 308+ 9723 AE           	xor (hl)
 309+ 9724 77           	ld (hl),a
 310+ 9725 23           	inc hl
 311+ 9726 D1               pop de
 312+ 9727 7B           	ld a,e
 313+ 9728 AE           	xor (hl)
 314+ 9729 77           	ld (hl),a
 315+ 972A 2B           	dec hl
 316+ 972B 24           	inc h
 317+ 972C 7C               ld a,h
 318+ 972D E6 07            and 7
 319+ 972F 20 0A            jr nz,3F
 320+ 9731 7D               ld a,l
 321+ 9732 C6 20            add a,$20
 322+ 9734 6F               ld l,a
 323+ 9735 38 04            jr c,3F
 324+ 9737 7C               ld a,h
 325+ 9738 D6 08            sub 8
 326+ 973A 67               ld h,a
 327+ 973B 7C           3 ld a,h
 328+ 973C FE 58            cp $58
 329+ 973E 28 02            jr z,4F
 330+ 9740 10 C1            djnz 1B
 331+ 9742 ED 7B 88 87  4 ld sp,(Stack)
 332+ 9746 C9           	ret
 333+ 9747
 334+ 9747 ED 73 88 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 974B FD F9        	ld sp,iy
 336+ 974D 06 08            ld b,8
 337+ 974F D1           1 pop de
 338+ 9750 7B           	ld a,e
 339+ 9751 AE           	xor (hl)
 340+ 9752 77           	ld (hl),a
 341+ 9753 24            	inc h
 342+ 9754 7C               ld a,h
 343+ 9755 E6 07            and 7
 344+ 9757 20 0A            jr nz,2F
 345+ 9759 7D               ld a,l
 346+ 975A C6 20            add a,$20
 347+ 975C 6F               ld l,a
 348+ 975D 38 04            jr c,2F
 349+ 975F 7C               ld a,h
 350+ 9760 D6 08            sub 8
 351+ 9762 67               ld h,a
 352+ 9763 7C           2 ld a,h
 353+ 9764 FE 58            cp $58
 354+ 9766 28 1C            jr z,4F
 355+ 9768 D1               pop de
 356+ 9769 7A           	ld a,d
 357+ 976A AE           	xor (hl)
 358+ 976B 77           	ld (hl),a
 359+ 976C 24           	inc h
 360+ 976D 7C               ld a,h
 361+ 976E E6 07            and 7
 362+ 9770 20 0A            jr nz,3F
 363+ 9772 7D               ld a,l
 364+ 9773 C6 20            add a,$20
 365+ 9775 6F               ld l,a
 366+ 9776 38 04            jr c,3F
 367+ 9778 7C               ld a,h
 368+ 9779 D6 08            sub 8
 369+ 977B 67               ld h,a
 370+ 977C 7C           3 ld a,h
 371+ 977D FE 58            cp $58
 372+ 977F 28 03            jr z,4F
 373+ 9781 D1               pop de
 374+ 9782 10 CB            djnz 1B
 375+ 9784 ED 7B 88 87  4 ld sp,(Stack)
 376+ 9788 C9           	ret
 377+ 9789
 378+ 9789              ; ---------------------------------------------------
 379+ 9789              ;
 380+ 9789              ;   27/02/23
 381+ 9789              ;
 382+ 9789              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9789              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9789              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9789
 386+ 9789 ED 73 88 87  Pinta_Disparo ld (Stack),sp
 387+ 978D FD F9            ld sp,iy
 388+ 978F 06 03            ld b,3
 389+ 9791 D1           1 pop de
 390+ 9792 7B               ld a,e
 391+ 9793 AE               xor (hl)
 392+ 9794 77               ld (hl),a
 393+ 9795 23               inc hl
 394+ 9796 7A               ld a,d
 395+ 9797 AE               xor (hl)
 396+ 9798 77               ld (hl),a
 397+ 9799 2B               dec hl
 398+ 979A
 399+ 979A 24               inc h
 400+ 979B 7C               ld a,h
 401+ 979C E6 07            and 7
 402+ 979E 20 0A            jr nz,2F
 403+ 97A0 7D               ld a,l
 404+ 97A1 C6 20            add a,$20
 405+ 97A3 6F               ld l,a
 406+ 97A4 38 04            jr c,2F
 407+ 97A6 7C               ld a,h
 408+ 97A7 D6 08            sub 8
 409+ 97A9 67               ld h,a
 410+ 97AA 7C           2 ld a,h
 411+ 97AB FE 58            cp $58
 412+ 97AD 28 02            jr z,3F
 413+ 97AF
 414+ 97AF 10 E0            djnz 1B
 415+ 97B1 ED 7B 88 87  3 ld sp,(Stack)
 416+ 97B5 C9               ret
 417+ 97B6
# file closed: Rutinas_de_impresion_sprites.asm
1865  97B6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97B6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97B6              ;
   3+ 97B6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97B6              ;
   5+ 97B6              ; *****************************************************************************************************************************************************************************************
   6+ 97B6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97B6
   8+ 97B6 7C           calcula_tercio ld a,h
   9+ 97B7 E6 18        	and $18
  10+ 97B9 CB 2F        	sra a
  11+ 97BB CB 2F        	sra a
  12+ 97BD CB 2F        	sra a
  13+ 97BF C9           	ret
  14+ 97C0
# file closed: calcula_tercio.asm
1866  97C0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97C0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97C0              ;
   3+ 97C0              ;
   4+ 97C0              ;	CLS.
   5+ 97C0              ;
   6+ 97C0              ;	Limpia la pantalla y define sus atributos.
   7+ 97C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97C0              ;
   9+ 97C0              ;	COLORES: 0 ..... NEGRO
  10+ 97C0              ;    		 1 ..... AZUL
  11+ 97C0              ; 			 2 ..... ROJO
  12+ 97C0              ;			 3 ..... MAGENTA
  13+ 97C0              ; 			 4 ..... VERDE
  14+ 97C0              ; 			 5 ..... CIAN
  15+ 97C0              ;			 6 ..... AMARILLO
  16+ 97C0              ; 			 7 ..... BLANCO
  17+ 97C0              ;
  18+ 97C0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97C0              ;
  20+ 97C0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97C0
  22+ 97C0
  23+ 97C0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97C3 11 01 40     	LD DE,$4001
  25+ 97C6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97C9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97CB ED B0        	LDIR
  28+ 97CD 01 FF 02     	LD BC,767
  29+ 97D0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 97D1 ED B0        	LDIR
  31+ 97D3 C9           	ret
  32+ 97D4
# file closed: Cls.asm
1867  97D4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 97D4
   2+ 97D4              ; ******************************************************************************************************************************************************************************************
   3+ 97D4              ;
   4+ 97D4              ;   20/05/23
   5+ 97D4              ;
   6+ 97D4              ;	Recompone_posicion_inicio
   7+ 97D4              ;
   8+ 97D4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 97D4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 97D4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 97D4              ;	_ a una u otra rutina.
  12+ 97D4
  13+ 97D4              Recompone_posicion_inicio
  14+ 97D4
  15+ 97D4 2A 48 87     	ld hl,(Posicion_inicio)
  16+ 97D7 7D           	ld a,l
  17+ 97D8 E6 1F        	and $1f
  18+ 97DA 28 16        	jr z,1F
  19+ 97DC
  20+ 97DC FE 1F        	cp $1f
  21+ 97DE 28 0D        	jr z,3F
  22+ 97E0
  23+ 97E0 21 5D 87     	ld hl,Ctrl_2
  24+ 97E3 CB C6        	set 0,(hl)
  25+ 97E5 2A 3A 87     	ld hl,(Puntero_objeto)
  26+ 97E8 22 78 87     	ld (Repone_puntero_objeto),hl
  27+ 97EB 18 08        	jr 2F
  28+ 97ED
  29+ 97ED CD 9B 99     3 call Mov_left
  30+ 97F0 18 03        	jr 2F
  31+ 97F2
  32+ 97F2 CD 78 98     1 call Mov_right
  33+ 97F5 21 00 F0     2 ld hl,Sprite_vacio
  34+ 97F8 22 3A 87     	ld (Puntero_objeto),hl
  35+ 97FB C9           	ret
  36+ 97FC
  37+ 97FC              ; ******************************************************************************************************************************************************************************************
  38+ 97FC              ;
  39+ 97FC              ;   27/05/23
  40+ 97FC              ;
  41+ 97FC              ;	Mov_down
  42+ 97FC              ;
  43+ 97FC              ; 	Mueve el Sprite X px hacia abajo.
  44+ 97FC              ;
  45+ 97FC              ;
  46+ 97FC              Mov_down
  47+ 97FC
  48+ 97FC CD 66 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 97FF              ;																	; _ repone (Puntero_objeto).
  50+ 97FF 21 58 87     	ld hl,Ctrl_0
  51+ 9802 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9804              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9804              ; 																	; _ en el caso de que no lo haya.
  54+ 9804 3A 62 87     	ld a,(Vel_down)
  55+ 9807 47           	ld b,a
  56+ 9808 2A 38 87         ld hl,(Posicion_actual)
  57+ 980B CD B6 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 980E E6 02        	and 2
  59+ 9810 28 17        	jr z,1F
  60+ 9812
  61+ 9812              ; Nos encontramos en el último tercio de pantalla.
  62+ 9812              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9812
  64+ 9812 7C           	ld a,h
  65+ 9813 FE 57        	cp $57
  66+ 9815 20 12        	jr nz,1F
  67+ 9817
  68+ 9817 7D           	ld a,l
  69+ 9818 C6 20        	add $20
  70+ 981A 30 0D        	jr nc,1F
  71+ 981C
  72+ 981C              ; ------------------------------
  73+ 981C              ;
  74+ 981C              ;	12/01/24
  75+ 981C
  76+ 981C              ;	call Reaparece_arriba
  77+ 981C CD 28 9B     	call Reinicio
  78+ 981F
  79+ 981F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 981F
  81+ 981F 3A 96 87     	ld a,(Ctrl_3)
  82+ 9822 CB CF        	set 1,a
  83+ 9824 32 96 87     	ld (Ctrl_3),a
  84+ 9827
  85+ 9827 18 08        	jr 3F
  86+ 9829              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9829              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9829              ; ------------------------------
  89+ 9829
  90+ 9829 CD A3 94     1 call NextScan
  91+ 982C 22 38 87     	ld (Posicion_actual),hl
  92+ 982F 10 DA            djnz 2B
  93+ 9831 CD 4E 9B     3 call Genera_coordenadas
  94+ 9834 C9           	ret
  95+ 9835
  96+ 9835              ; ******************************************************************************************************************************************************************************************
  97+ 9835              ;
  98+ 9835              ;   27/05/23
  99+ 9835              ;
 100+ 9835              ;	Mov_up
 101+ 9835              ;
 102+ 9835              ; 	Mueve el Sprite hacia arriba.
 103+ 9835              ;
 104+ 9835              ;
 105+ 9835              Mov_up
 106+ 9835
 107+ 9835 CD 66 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9838              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9838 21 58 87     	ld hl,Ctrl_0
 110+ 983B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 983D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 983D              ; 																		; _ en el caso de que no lo haya.
 113+ 983D 3A 61 87     	ld a,(Vel_up)
 114+ 9840 47           	ld b,a
 115+ 9841 2A 38 87     	ld hl,(Posicion_actual)
 116+ 9844 CD B6 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9847 A7           	and a
 118+ 9848 20 10        	jr nz,1F
 119+ 984A
 120+ 984A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 984A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 984A
 123+ 984A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 984B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 984D 20 0B            jr nz,1F
 126+ 984F 7D               ld a,l
 127+ 9850 D6 20            sub $20
 128+ 9852 30 06            jr nc,1F
 129+ 9854 25               dec h
 130+ 9855
 131+ 9855              ; -----------------------------
 132+ 9855 CD 09 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9858              ;	call Reinicio
 134+ 9858              ; -----------------------------
 135+ 9858
 136+ 9858 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 985A CD B2 94     1 call PreviousScan
 138+ 985D 22 38 87     	ld (Posicion_actual),hl
 139+ 9860 10 E2            djnz 3B
 140+ 9862 CD 4E 9B     2 call Genera_coordenadas
 141+ 9865 C9           	ret
 142+ 9866
 143+ 9866              ; -----------------------------
 144+ 9866              ;
 145+ 9866              ;	27/5/23
 146+ 9866              ;
 147+ 9866              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9866              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9866              ;
 150+ 9866              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9866              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9866              ;
 153+ 9866              ;	Modifica: A y (Puntero_objeto).
 154+ 9866
 155+ 9866 3A 5D 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9869 CB 47        	bit 0,a
 157+ 986B C8           	ret z
 158+ 986C CB 87        	res 0,a
 159+ 986E 32 5D 87     	ld (Ctrl_2),a
 160+ 9871 2A 78 87     	ld hl,(Repone_puntero_objeto)
 161+ 9874 22 3A 87     	ld (Puntero_objeto),hl
 162+ 9877 C9           	ret
 163+ 9878
 164+ 9878              ; ******************************************************************************************************************************************************************************************
 165+ 9878              ;
 166+ 9878              ;	19/10/22
 167+ 9878              ;
 168+ 9878              ;	Mov_right.
 169+ 9878              ;
 170+ 9878              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9878              ;
 172+ 9878
 173+ 9878 3A 58 87     Mov_right ld a,(Ctrl_0)
 174+ 987B CB 77        	bit 6,a
 175+ 987D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 987F
 177+ 987F CD B7 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9882 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9883
 180+ 9883 21 58 87     	ld hl,Ctrl_0
 181+ 9886 CB E6        	set 4,(hl)
 182+ 9888 18 52        	jr 8F
 183+ 988A
 184+ 988A 21 58 87     10 ld hl,Ctrl_0
 185+ 988D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 988F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 988F              ; 																	; _ en el caso de que no lo haya.
 188+ 988F 3A 3C 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9892 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9894 20 46        	jr nz,8F
 191+ 9896
 192+ 9896 3A 3E 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9899 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 989A 28 40        	jr z,8F
 195+ 989C
 196+ 989C              ; ---------- ---------- ----------
 197+ 989C              ;
 198+ 989C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 989C
 200+ 989C 3A 60 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 989F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98A1 28 11        	jr z,1F
 203+ 98A3 38 06        	jr c,6F
 204+ 98A5 FE 04        	cp 4
 205+ 98A7 28 14        	jr z,7F
 206+ 98A9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98AB
 208+ 98AB              ; ---------- ---------- ----------
 209+ 98AB              ;
 210+ 98AB              ; Perfiles de velocidad
 211+ 98AB              ;
 212+ 98AB
 213+ 98AB 3A 3E 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98AE FE FE        	cp $fe
 215+ 98B0 20 2A        	jr nz,8F
 216+ 98B2 18 10        	jr 3F
 217+ 98B4 3A 3E 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98B7 FE FD        	cp $fd
 219+ 98B9 20 21        	jr nz,8F
 220+ 98BB 18 07        	jr 3F
 221+ 98BD 3A 3E 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 98C0 FE FB        	cp $fb
 223+ 98C2 20 18        	jr nz,8F
 224+ 98C4
 225+ 98C4              ; ---------- ---------- ----------
 226+ 98C4
 227+ 98C4              3
 228+ 98C4 CD F7 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 98C7              ;	call Reinicio
 230+ 98C7
 231+ 98C7              ; ---------- ---------- ----------
 232+ 98C7              ;
 233+ 98C7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 98C7
 235+ 98C7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 98C9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 98CA CD E3 98     	call DESPLZ_DER
 238+ 98CD C1           	pop bc
 239+ 98CE 10 F9        	djnz 5B
 240+ 98D0 2A 38 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 98D3 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 98D4 22 38 87     	ld (Posicion_actual),hl
 243+ 98D7 CD 4E 9B     	call Genera_coordenadas
 244+ 98DA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 98DC
 246+ 98DC              ; ---------- ---------- ----------
 247+ 98DC
 248+ 98DC 2A 38 87     8 ld hl,(Posicion_actual)
 249+ 98DF CD E3 98     	call DESPLZ_DER
 250+ 98E2 C9           2 ret
 251+ 98E3
 252+ 98E3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 98E3              ;
 254+ 98E3              ;	22/9/22
 255+ 98E3              ;
 256+ 98E3
 257+ 98E3 CD F2 98     DESPLZ_DER call Desplaza_derecha
 258+ 98E6 CD 3E 99         call modifica_parametros_1er_DESPLZ_2
 259+ 98E9 CD 67 99         call Ciclo_completo
 260+ 98EC 21 58 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 98EF CB FE        	set 7,(hl)
 262+ 98F1 C9           	ret
 263+ 98F2
 264+ 98F2              ; ******************************************************************************************************************************************************************************************
 265+ 98F2              ;	15/02/23
 266+ 98F2              ;
 267+ 98F2
 268+ 98F2 3A 60 87     Desplaza_derecha ld a,(Vel_right)
 269+ 98F5 47           	ld b,a
 270+ 98F6 2A 44 87     	ld hl,(Puntero_DESPLZ_der)
 271+ 98F9 23           1 inc hl
 272+ 98FA 23           	inc hl
 273+ 98FB 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 98FD 22 44 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9900 CD 40 8B     	call Extrae_address
 276+ 9903 22 3A 87     	ld (Puntero_objeto),hl
 277+ 9906
 278+ 9906              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9906
 280+ 9906              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9906              ; Cuántos movimientos hemos hecho ??
 282+ 9906              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9906
 284+ 9906 2A 40 87     7 ld hl,(Indice_Sprite_der)
 285+ 9909 EB           	ex de,hl
 286+ 990A A7           	and a
 287+ 990B ED 52        	sbc hl,de
 288+ 990D CB 3D        	srl l
 289+ 990F 3E 08        6 ld a,8
 290+ 9911 95           	sub l
 291+ 9912 30 1E        	jr nc,3F
 292+ 9914
 293+ 9914              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9914              ; B="0".
 295+ 9914
 296+ 9914 04           4 inc b
 297+ 9915 3C           	inc a
 298+ 9916 20 FC        	jr nz,4B
 299+ 9918 78           	ld a,b
 300+ 9919 08           	ex af,af
 301+ 991A 2A 40 87     	ld hl,(Indice_Sprite_der)
 302+ 991D 23           5 inc hl
 303+ 991E 23           	inc hl
 304+ 991F 10 FC        	djnz 5B
 305+ 9921 22 44 87     	ld (Puntero_DESPLZ_der),hl
 306+ 9924 CD 40 8B     	call Extrae_address
 307+ 9927 22 3A 87     	ld (Puntero_objeto),hl
 308+ 992A
 309+ 992A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 992A              ; _(Posicion_actual).
 311+ 992A
 312+ 992A 21 38 87     	ld hl,Posicion_actual
 313+ 992D 34           	inc (hl)
 314+ 992E 08               ex af,af
 315+ 992F 6F           	ld l,a
 316+ 9930 18 DD        	jr 6B
 317+ 9932
 318+ 9932              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9932
 320+ 9932 47           3 ld b,a
 321+ 9933 2A 42 87     	ld hl,(Indice_Sprite_izq)
 322+ 9936 23           2 inc hl
 323+ 9937 23           	inc hl
 324+ 9938 10 FC        	djnz 2B
 325+ 993A 22 46 87     	ld (Puntero_DESPLZ_izq),hl
 326+ 993D C9           8 ret
 327+ 993E
 328+ 993E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 993E              ;
 330+ 993E              ;	24/7/22
 331+ 993E              ;
 332+ 993E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 993E              ;
 334+ 993E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 993E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 993E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 993E
 338+ 993E 3A 3E 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9941 A7           	and a
 340+ 9942 20 1F        	jr nz,1F
 341+ 9944 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9946 32 3E 87         ld (CTRL_DESPLZ),a
 343+ 9949
 344+ 9949 21 37 87     	ld hl,Columns
 345+ 994C 34           	inc (hl)
 346+ 994D 3A 4A 87     	ld a,(Cuad_objeto)
 347+ 9950 E6 01        	and 1
 348+ 9952 28 0F        	jr z,1F
 349+ 9954 2A 38 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9957 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9958 22 38 87     	ld (Posicion_actual),hl
 352+ 995B CD 4E 9B     	call Genera_coordenadas
 353+ 995E CD C3 9A     	call Inc_CTRL_DESPLZ
 354+ 9961 18 03        	jr 2F
 355+ 9963 CD C3 9A     1 call Inc_CTRL_DESPLZ
 356+ 9966 C9           2 ret
 357+ 9967
 358+ 9967              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9967              ;
 360+ 9967              ;	24/7/22
 361+ 9967              ;
 362+ 9967              ;	Ciclo_completo.
 363+ 9967              ;
 364+ 9967              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9967              ;
 366+ 9967              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9967              ; 	Decrementamos (Columns).
 368+ 9967              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9967              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9967
 371+ 9967
 372+ 9967 3A 3E 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 996A FE FF        	cp $ff
 374+ 996C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 996E E6 F0        	and $f0
 376+ 9970 20 28        	jr nz,3F
 377+ 9972
 378+ 9972              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9972
 380+ 9972 3A 3E 87     	ld a,(CTRL_DESPLZ)
 381+ 9975 47           	ld b,a
 382+ 9976 3E F8        	ld a,$f8
 383+ 9978 80           	add b
 384+ 9979 32 3E 87     	ld (CTRL_DESPLZ),a
 385+ 997C 18 1C        	jr 3F
 386+ 997E 21 37 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9981 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9982 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9983 32 3E 87     	ld (CTRL_DESPLZ),a
 390+ 9986 3A 4A 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9989 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 998B 20 0A        	jr nz,2F
 393+ 998D 2A 38 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9990 23           	inc hl
 395+ 9991 22 38 87     	ld (Posicion_actual),hl
 396+ 9994 CD 4E 9B     	call Genera_coordenadas
 397+ 9997
 398+ 9997              ; Inicia el puntero de Sprite.
 399+ 9997
 400+ 9997 CD 56 8B     2 call Inicia_puntero_objeto_der
 401+ 999A C9           3 ret
 402+ 999B
 403+ 999B              ; ******************************************************************************************************************************************************************************************
 404+ 999B              ;
 405+ 999B              ;	15/02/23
 406+ 999B              ;
 407+ 999B              ;	Mov_left.
 408+ 999B              ;
 409+ 999B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 999B              ;
 411+ 999B              Mov_left
 412+ 999B
 413+ 999B 21 58 87     	ld hl,Ctrl_0
 414+ 999E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99A0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99A0              ; 																	; _ en el caso de que no lo haya.
 417+ 99A0 3A 58 87     	ld a,(Ctrl_0)
 418+ 99A3 CB 77        	bit 6,a
 419+ 99A5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99A7
 421+ 99A7 CD BD 9A     	call Stop_Amadeus_left
 422+ 99AA C8           	ret z
 423+ 99AB 20 4A        	jr nz,8F
 424+ 99AD
 425+ 99AD 3A 3C 87     11 ld a,(Coordenada_X)
 426+ 99B0 A7           	and a
 427+ 99B1 20 44        	jr nz,8F
 428+ 99B3
 429+ 99B3 3A 3E 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99B6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99B7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99B9
 433+ 99B9              ; ---------- ---------- ----------
 434+ 99B9
 435+ 99B9 3A 5F 87     	ld a,(Vel_left)
 436+ 99BC FE 02        	cp 2
 437+ 99BE 28 0F        	jr z,1F
 438+ 99C0 38 04        	jr c,6F
 439+ 99C2 FE 04        	cp 4
 440+ 99C4 28 12        	jr z,7F
 441+ 99C6
 442+ 99C6              ; ---------- ---------- ----------
 443+ 99C6
 444+ 99C6 3A 3E 87     6 ld a,(CTRL_DESPLZ)
 445+ 99C9 FE F8        	cp $f8
 446+ 99CB 20 2A        	jr nz,8F
 447+ 99CD 18 10        	jr 4F
 448+ 99CF 3A 3E 87     1 ld a,(CTRL_DESPLZ)
 449+ 99D2 FE F9        	cp $f9
 450+ 99D4 20 21        	jr nz,8F
 451+ 99D6 18 07        	jr 4F
 452+ 99D8 3A 3E 87     7 ld a,(CTRL_DESPLZ)
 453+ 99DB FE FB        	cp $fb
 454+ 99DD 20 18        	jr nz,8F
 455+ 99DF
 456+ 99DF              ; ---------- ---------- ----------
 457+ 99DF
 458+ 99DF              4
 459+ 99DF CD E5 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 99E2              ;	call Reinicio
 461+ 99E2
 462+ 99E2              ; ---------- ---------- ----------
 463+ 99E2
 464+ 99E2 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 99E4 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 99E5
 467+ 99E5              ;	ld hl,(Indice_Sprite_izq)
 468+ 99E5              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 99E5
 470+ 99E5 CD FE 99     	call DESPLZ_IZQ
 471+ 99E8 C1           	pop bc
 472+ 99E9 10 F9        	djnz 5B
 473+ 99EB 2A 38 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 99EE 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 99EF 22 38 87     	ld (Posicion_actual),hl
 476+ 99F2 CD 4E 9B     	call Genera_coordenadas
 477+ 99F5 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 99F7
 479+ 99F7              ; ---------- ---------- ----------
 480+ 99F7
 481+ 99F7              ; Movemos, no hay recolocación.
 482+ 99F7
 483+ 99F7 2A 38 87     8 ld hl,(Posicion_actual)
 484+ 99FA CD FE 99     	call DESPLZ_IZQ
 485+ 99FD C9           2 ret
 486+ 99FE
 487+ 99FE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 99FE              ;
 489+ 99FE              ;	22/9/22
 490+ 99FE
 491+ 99FE              DESPLZ_IZQ
 492+ 99FE
 493+ 99FE CD 0D 9A     	call Desplaza_izquierda
 494+ 9A01 CD 59 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A04 CD 81 9A     	call Ciclo_completo_2
 496+ 9A07 21 58 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A0A CB BE        	res 7,(hl)
 498+ 9A0C C9           	ret
 499+ 9A0D
 500+ 9A0D              Desplaza_izquierda
 501+ 9A0D
 502+ 9A0D 3A 5F 87     	ld a,(Vel_left)
 503+ 9A10 47           	ld b,a
 504+ 9A11 2A 46 87     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A14 23           1 inc hl
 506+ 9A15 23           	inc hl
 507+ 9A16 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A18 22 46 87     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A1B CD 40 8B     	call Extrae_address
 510+ 9A1E 22 3A 87     	ld (Puntero_objeto),hl
 511+ 9A21
 512+ 9A21              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A21
 514+ 9A21              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A21              ; Cuántos movimientos hemos hecho ??
 516+ 9A21              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A21
 518+ 9A21 2A 42 87     7 ld hl,(Indice_Sprite_izq)
 519+ 9A24 EB           	ex de,hl
 520+ 9A25 A7           	and a
 521+ 9A26 ED 52        	sbc hl,de
 522+ 9A28 CB 3D        	srl l
 523+ 9A2A 3E 08        6 ld a,8
 524+ 9A2C 95           	sub l
 525+ 9A2D 30 1E        	jr nc,3F
 526+ 9A2F
 527+ 9A2F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A2F              ; B="0".
 529+ 9A2F
 530+ 9A2F 04           4 inc b
 531+ 9A30 3C           	inc a
 532+ 9A31 20 FC        	jr nz,4B
 533+ 9A33 78           	ld a,b
 534+ 9A34 08           	ex af,af
 535+ 9A35 2A 42 87     	ld hl,(Indice_Sprite_izq)
 536+ 9A38 23           5 inc hl
 537+ 9A39 23           	inc hl
 538+ 9A3A 10 FC        	djnz 5B
 539+ 9A3C 22 46 87     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A3F CD 40 8B     	call Extrae_address
 541+ 9A42 22 3A 87     	ld (Puntero_objeto),hl
 542+ 9A45
 543+ 9A45              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A45              ; _(Posicion_actual).
 545+ 9A45
 546+ 9A45 21 38 87     	ld hl,Posicion_actual
 547+ 9A48 35           	dec (hl)
 548+ 9A49 08           	ex af,af
 549+ 9A4A 6F           	ld l,a
 550+ 9A4B 18 DD        	jr 6B
 551+ 9A4D
 552+ 9A4D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A4D
 554+ 9A4D 47           3 ld b,a
 555+ 9A4E 2A 40 87     	ld hl,(Indice_Sprite_der)
 556+ 9A51 23           2 inc hl
 557+ 9A52 23           	inc hl
 558+ 9A53 10 FC        	djnz 2B
 559+ 9A55 22 44 87     	ld (Puntero_DESPLZ_der),hl
 560+ 9A58 C9           8 ret
 561+ 9A59
 562+ 9A59              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A59              ;
 564+ 9A59              ;	modifica_parametros_1er_DESPLZ
 565+ 9A59              ;
 566+ 9A59              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A59              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A59              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A59
 570+ 9A59 3A 3E 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A5C A7           	and a
 572+ 9A5D 20 1E        	jr nz,1F
 573+ 9A5F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A60 32 3E 87         ld (CTRL_DESPLZ),a
 575+ 9A63 21 37 87     	ld hl,Columns
 576+ 9A66 34           	inc (hl)
 577+ 9A67 3A 4A 87     	ld a,(Cuad_objeto)
 578+ 9A6A E6 01        	and 1
 579+ 9A6C 20 0F        	jr nz,1F
 580+ 9A6E 2A 38 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9A71 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9A72 22 38 87     	ld (Posicion_actual),hl
 583+ 9A75 CD 4E 9B     	call Genera_coordenadas
 584+ 9A78 CD D4 9A     	call Dec_CTRL_DESPLZ
 585+ 9A7B 18 03        	jr 2F
 586+ 9A7D CD D4 9A     1 call Dec_CTRL_DESPLZ
 587+ 9A80 C9           2 ret
 588+ 9A81
 589+ 9A81              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9A81
 591+ 9A81 3A 3E 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9A84 FE F7        	cp $f7
 593+ 9A86 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9A88 30 2C        	jr nc,3F
 595+ 9A8A
 596+ 9A8A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9A8A
 598+ 9A8A 06 00        	ld b,0
 599+ 9A8C 04           4 inc b
 600+ 9A8D 3C           	inc a
 601+ 9A8E FE F7        	cp $f7
 602+ 9A90 20 FA        	jr nz,4B
 603+ 9A92 3E FF        	ld a,$ff
 604+ 9A94 90           	sub b
 605+ 9A95 32 3E 87     	ld (CTRL_DESPLZ),a
 606+ 9A98 18 1C        	jr 3F
 607+ 9A9A
 608+ 9A9A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9A9A
 610+ 9A9A 21 37 87     1 ld hl,Columns
 611+ 9A9D 35           	dec (hl)
 612+ 9A9E AF           	xor a
 613+ 9A9F 32 3E 87     	ld (CTRL_DESPLZ),a
 614+ 9AA2 3A 4A 87     	ld a,(Cuad_objeto)
 615+ 9AA5 E6 01        	and 1
 616+ 9AA7 28 0A        	jr z,2F
 617+ 9AA9 2A 38 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9AAC 2B           	dec hl
 619+ 9AAD 22 38 87     	ld (Posicion_actual),hl
 620+ 9AB0 CD 4E 9B     	call Genera_coordenadas
 621+ 9AB3
 622+ 9AB3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9AB3
 624+ 9AB3 CD 69 8B     2 call Inicia_puntero_objeto_izq
 625+ 9AB6 C9           3 ret
 626+ 9AB7
 627+ 9AB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9AB7              ;
 629+ 9AB7              ;	19/10/22
 630+ 9AB7              ;
 631+ 9AB7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9AB7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9AB7
 634+ 9AB7 3A 3C 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9ABA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9ABC C9           	ret
 637+ 9ABD
 638+ 9ABD              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9ABD              ;
 640+ 9ABD              ;	19/10/22
 641+ 9ABD              ;
 642+ 9ABD              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9ABD              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9ABD
 645+ 9ABD 3A 3C 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9AC0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9AC2 C9           	ret
 648+ 9AC3
 649+ 9AC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9AC3              ;
 651+ 9AC3              ;	24/7/22
 652+ 9AC3              ;
 653+ 9AC3              ;	Inc_CTRL_DESPLZ
 654+ 9AC3              ;
 655+ 9AC3              ;
 656+ 9AC3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9AC3
 658+ 9AC3 21 3E 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9AC6 3A 60 87     	ld a,(Vel_right)
 660+ 9AC9 A7           	and a
 661+ 9ACA 28 06        	jr z,1F
 662+ 9ACC 47           	ld b,a
 663+ 9ACD 34           3 inc (hl)
 664+ 9ACE 10 FD        	djnz 3B
 665+ 9AD0 18 01        	jr 2F
 666+ 9AD2 34           1 inc (hl)
 667+ 9AD3 C9           2 ret
 668+ 9AD4
 669+ 9AD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9AD4              ;
 671+ 9AD4              ;	5/2/23
 672+ 9AD4              ;
 673+ 9AD4              ;	Dec_CTRL_DESPLZ
 674+ 9AD4              ;
 675+ 9AD4              ;
 676+ 9AD4              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9AD4
 678+ 9AD4 21 3E 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9AD7 3A 5F 87     	ld a,(Vel_left)
 680+ 9ADA A7           	and a
 681+ 9ADB 28 06        	jr z,1F
 682+ 9ADD 47           	ld b,a
 683+ 9ADE 35           3 dec (hl)
 684+ 9ADF 10 FD        	djnz 3B
 685+ 9AE1 18 01        	jr 2F
 686+ 9AE3 35           1 dec (hl)
 687+ 9AE4 C9           2 ret
 688+ 9AE5
 689+ 9AE5              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9AE5
 691+ 9AE5 2A 38 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9AE8 01 1F 00     	ld bc,31
 693+ 9AEB A7           	and a
 694+ 9AEC ED 4A        	adc hl,bc
 695+ 9AEE 22 38 87     	ld (Posicion_actual),hl
 696+ 9AF1 21 58 87     	ld hl,Ctrl_0														; $xxx1
 697+ 9AF4 CB C6        	set 0,(hl)
 698+ 9AF6 C9           	ret
 699+ 9AF7
 700+ 9AF7              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9AF7
 702+ 9AF7 2A 38 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9AFA 01 1F 00     	ld bc,31
 704+ 9AFD A7           	and a
 705+ 9AFE ED 42        	sbc hl,bc
 706+ 9B00 22 38 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B03 21 58 87     	ld hl,Ctrl_0
 708+ 9B06 CB CE        	set 1,(hl)
 709+ 9B08 C9           	ret
 710+ 9B09
 711+ 9B09              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B09
 713+ 9B09 24           Reaparece_abajo inc h
 714+ 9B0A 01 E0 17     	ld bc,$17e0
 715+ 9B0D A7           	and a
 716+ 9B0E ED 4A        	adc hl,bc
 717+ 9B10 22 38 87     	ld (Posicion_actual),hl
 718+ 9B13 21 58 87     	ld hl,Ctrl_0
 719+ 9B16 CB D6        	set 2,(hl)
 720+ 9B18 C9           	ret
 721+ 9B19
 722+ 9B19              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B19
 724+ 9B19 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B1C A7           	and a
 726+ 9B1D ED 42        	sbc hl,bc
 727+ 9B1F 22 38 87     	ld (Posicion_actual),hl
 728+ 9B22 21 58 87     	ld hl,Ctrl_0
 729+ 9B25 CB DE        	set 3,(hl)
 730+ 9B27 C9           	ret
 731+ 9B28
 732+ 9B28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B28              ;
 734+ 9B28              ;	15/07/23
 735+ 9B28
 736+ 9B28              Reinicio
 737+ 9B28
 738+ 9B28              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B28
 740+ 9B28 AF           	xor a
 741+ 9B29 21 6F 87     	ld hl,Puntero_indice_mov_bucle
 742+ 9B2C CD 4A 9B     	call Limpia_contenido_hl
 743+ 9B2F
 744+ 9B2F 21 38 87     	ld hl,Posicion_actual
 745+ 9B32 CD 4A 9B     	call Limpia_contenido_hl
 746+ 9B35
 747+ 9B35 CD 6E 86     	call Inicializa_Puntero_indice_mov
 748+ 9B38 CD 01 9E     	call Inicia_Puntero_mov
 749+ 9B3B
 750+ 9B3B 21 71 87     	ld hl,Incrementa_puntero
 751+ 9B3E 06 05        	ld b,5
 752+ 9B40 77           1 ld (hl),a
 753+ 9B41 23           	inc hl
 754+ 9B42 10 FC        	djnz 1B
 755+ 9B44
 756+ 9B44 21 5D 87     	ld hl,Ctrl_2
 757+ 9B47 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B49
 759+ 9B49 C9           	ret
 760+ 9B4A
 761+ 9B4A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B4B 23           	inc hl
 763+ 9B4C 77           	ld (hl),a
 764+ 9B4D C9           	ret
 765+ 9B4E
 766+ 9B4E
# file closed: Direcciones.asm
1868  9B4E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B4E              ; ------------------------------------------------------------------------
   2+ 9B4E              ;
   3+ 9B4E              ;	20/1/24
   4+ 9B4E              ;
   5+ 9B4E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B4E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B4E              ;
   8+ 9B4E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B4E              ;
  10+ 9B4E              ;	Modifica: A,BC y DE.
  11+ 9B4E
  12+ 9B4E 7D           Genera_coordenadas ld a,l
  13+ 9B4F E6 1F        	and $1f
  14+ 9B51 32 3C 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B54
  16+ 9B54 CD B6 97     	call calcula_tercio
  17+ 9B57 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  18+ 9B58
  19+ 9B58 1E 00        	ld e,0
  20+ 9B5A 7D           	ld a,l
  21+ 9B5B E6 E0        	and $e0
  22+ 9B5D 28 01        	jr z,1F
  23+ 9B5F 04           	inc b
  24+ 9B60
  25+ 9B60 04           1 inc b
  26+ 9B61 05           	dec b
  27+ 9B62 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  28+ 9B64              ;														; _ , salimos.
  29+ 9B64 1C           3 inc e
  30+ 9B65 D6 20        	sub 32
  31+ 9B67 20 FB        	jr nz,3B
  32+ 9B69 10 F5        	djnz 1B
  33+ 9B6B
  34+ 9B6B 7B           2 ld a,e
  35+ 9B6C 32 3D 87     	ld (Coordenada_y),a
  36+ 9B6F
  37+ 9B6F C9           	ret
  38+ 9B70
  39+ 9B70              ; ------------------------------------------------------------------------
  40+ 9B70              ;	28/05/23
  41+ 9B70              ;
  42+ 9B70              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  43+ 9B70              ;	Fila superior "0", Columna izquierda "0".
  44+ 9B70              ;
  45+ 9B70              ;	Input: HL contendrá la posición del proyectil en pantalla.
  46+ 9B70              ;	Output: DE contendrá las coordenadas del disparo:
  47+ 9B70              ;
  48+ 9B70              ;		DE="$120d"
  49+ 9B70              ;
  50+ 9B70              ;		D, (Coordenada_X), Columnas, $12
  51+ 9B70              ;		E, (Coordenada_y), Filas, $0d
  52+ 9B70              ;
  53+ 9B70              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  54+ 9B70
  55+ 9B70              ;	Modifica: A,BC y DE.
  56+ 9B70
  57+ 9B70
  58+ 9B70              Genera_coordenadas_disparo
  59+ 9B70
  60+ 9B70              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  61+ 9B70
  62+ 9B70 7D           	ld a,l
  63+ 9B71 E6 1F        	and $1f
  64+ 9B73 57           	ld d,a 												; Columnas en D. Coordenada_X.
  65+ 9B74 CD B6 97     	call calcula_tercio
  66+ 9B77 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  67+ 9B78 1E 00        	ld e,0
  68+ 9B7A 7D           	ld a,l
  69+ 9B7B E6 E0        	and $e0
  70+ 9B7D 28 01        	jr z,1F
  71+ 9B7F 04           	inc b
  72+ 9B80 1C           1 inc e
  73+ 9B81 D6 20        	sub 32
  74+ 9B83 20 FB        	jr nz,1B
  75+ 9B85 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  76+ 9B87 C9           	ret
  77+ 9B88
# file closed: Genera_coordenadas.asm
1869  9B88              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9B88              ; Relojes y temporizaciones.
   2+ 9B88
   3+ 9B88              ; ------------------------------------------------------
   4+ 9B88              ;
   5+ 9B88              ;	16/7/23
   6+ 9B88              ;
   7+ 9B88              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9B88              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9B88              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9B88              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9B88              ;
  12+ 9B88              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9B88              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9B88
  15+ 9B88              ; Disparo_entidad db 1
  16+ 9B88              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9B88              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9B88
  19+ 9B88              Habilita_disparos
  20+ 9B88
  21+ 9B88 7E           	ld a,(hl)
  22+ 9B89 A7           	and a
  23+ 9B8A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9B8B
  25+ 9B8B EB           	ex de,hl
  26+ 9B8C
  27+ 9B8C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9B8D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9B8E
  30+ 9B8E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9B8E
  32+ 9B8E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9B8F 7E           	ld a,(hl)
  34+ 9B90 23           	inc hl
  35+ 9B91 77           	ld (hl),a
  36+ 9B92
  37+ 9B92 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9B93 3E 01        	ld a,1
  39+ 9B95 77           	ld (hl),a
  40+ 9B96 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1870  9B97              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B97
   2+ 9B97
   3+ 9B97              ;   07/07/23
   4+ 9B97              ;
   5+ 9B97              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B97              ;
   7+ 9B97              ;   Codificación:
   8+ 9B97              ;
   9+ 9B97              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9B97              ;
  11+ 9B97              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9B97              ;
  13+ 9B97              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9B97              ;
  15+ 9B97              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9B97              ;
  17+ 9B97              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9B97              ;                               ..... %01000010 Vel_up 4
  19+ 9B97              ;                                               Vel_down 2
  20+ 9B97              ;                               ..... $42
  21+ 9B97              ;
  22+ 9B97              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9B97              ;
  24+ 9B97              ;                               ..... %01000010 Vel_left 4
  25+ 9B97              ;                                               Vel_right 2
  26+ 9B97              ;                               ..... $42
  27+ 9B97              ;
  28+ 9B97              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9B97              ;
  30+ 9B97              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9B97              ;
  32+ 9B97              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9B97              ;
  34+ 9B97              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9B97              ;                                     $53
  36+ 9B97              ;
  37+ 9B97              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9B97              ;
  39+ 9B97              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9B97              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9B97              ;
  42+ 9B97              ;                       Arriba ..... $81
  43+ 9B97              ;                       Arriba - izquierda ..... $a1
  44+ 9B97              ;                       Arriba - derecha ..... $91
  45+ 9B97              ;
  46+ 9B97              ;                       Abajo ..... $41
  47+ 9B97              ;                       Abajo - izquierda ..... $61
  48+ 9B97              ;                       Abajo - derecha ..... $51
  49+ 9B97              ;
  50+ 9B97              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9B97              ;
  52+ 9B97              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9B97              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9B97              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9B97              ;
  56+ 9B97              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9B97              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9B97              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9B97              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9B97              ;
  61+ 9B97              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9B97              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9B97              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9B97              ;
  65+ 9B97              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9B97              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9B97              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9B97              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9B97
  70+ 9B97              ; ----- ----- ----- ----- -----
  71+ 9B97
  72+ 9B97 C3 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9B99 CB 9B            defw F_1
  74+ 9B9B D5 9B            defw F_2
  75+ 9B9D DF 9B            defw Codo_abajo_derecha
  76+ 9B9F 13 9C            defw Derecha_y_subiendo
  77+ 9BA1 1D 9C            defw Derecha_y_subiendo_1
  78+ 9BA3 27 9C            defw F_3
  79+ 9BA5 31 9C            defw F_4
  80+ 9BA7 3B 9C            defw Derecha_y_bajando
  81+ 9BA9 45 9C            defw Derecha_y_bajando_1
  82+ 9BAB 4F 9C            defw Derecha_y_bajando_2
  83+ 9BAD 59 9C            defw Codo_derecha_abajo
  84+ 9BAF 89 9C            defw Codo_abajo_izq.
  85+ 9BB1 BD 9C            defw Izquierda_y_subiendo
  86+ 9BB3 C7 9C            defw Izquierda_y_subiendo_1
  87+ 9BB5 D1 9C            defw F_5
  88+ 9BB7 DB 9C            defw F_6
  89+ 9BB9 E5 9C            defw Izquierda_y_bajando
  90+ 9BBB EF 9C            defw Izquierda_y_bajando_1
  91+ 9BBD F9 9C            defw Izquierda_y_bajando_2
  92+ 9BBF 03 9D            defw Codo_izquierda_abajo
  93+ 9BC1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9BC3
  95+ 9BC3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9BC7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9BCB
  98+ 9BCB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9BCF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9BD3 08 00
 100+ 9BD5 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9BD9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9BDD 0F FE
 102+ 9BDF
 103+ 9BDF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9BE3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9BE7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9BEB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9BEF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9BF3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9BF7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9BFB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9BFF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C03 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C07 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C0B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C0F 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C13
 117+ 9C13 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C17 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C1B 06 00
 119+ 9C1D
 120+ 9C1D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C21 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C25 02 00
 122+ 9C27
 123+ 9C27 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C2B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C2F 04 00
 125+ 9C31 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C35 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C39 08 00
 127+ 9C3B
 128+ 9C3B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C3F 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C43 02 00
 130+ 9C45
 131+ 9C45 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C49 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C4D 06 00
 133+ 9C4F
 134+ 9C4F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C53 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C57 06 00
 136+ 9C59
 137+ 9C59              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C59
 139+ 9C59 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C5D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C61 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9C65 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9C69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9C6D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9C71 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9C75 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9C79 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9C7D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9C81 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9C85 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9C89
 152+ 9C89 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9C8D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9C91 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9C95 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9C99 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9C9D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CA1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CA5 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9CA9 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9CAD 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9CB1 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9CB5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9CB9 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9CBD
 166+ 9CBD 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9CC1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9CC5 06 00
 168+ 9CC7
 169+ 9CC7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9CCB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9CCF 02 00
 171+ 9CD1
 172+ 9CD1 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9CD5 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9CD9 04 00
 174+ 9CDB 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9CDF 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9CE3 08 00
 176+ 9CE5
 177+ 9CE5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9CE9 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9CED 02 00
 179+ 9CEF
 180+ 9CEF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9CF3 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9CF7 06 00
 182+ 9CF9
 183+ 9CF9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9CFD 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D01 06 00
 185+ 9D03
 186+ 9D03 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D07 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D0B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D0F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D13 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D17 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D1B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D1F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D23 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D27 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D2B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D2F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D33
 199+ 9D33              ; ----- ----- ----- ----- -----
 200+ 9D33              ;
 201+ 9D33              ;   28/12/23
 202+ 9D33
 203+ 9D33              Movimiento
 204+ 9D33
 205+ 9D33              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D33
 207+ 9D33 3A 5D 87         ld a,(Ctrl_2)
 208+ 9D36 CB 57            bit 2,a
 209+ 9D38 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D3A
 211+ 9D3A 2A 6D 87         ld hl,(Puntero_mov)
 212+ 9D3D 7E               ld a,(hl)
 213+ 9D3E
 214+ 9D3E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D3E
 216+ 9D3E              Inicia_desplazamiento.
 217+ 9D3E
 218+ 9D3E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D3E
 220+ 9D3E CD 3E 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D41
 222+ 9D41              ; Iniciamos (Repetimos_mov).
 223+ 9D41
 224+ 9D41 7E               ld a,(hl)
 225+ 9D42 E6 0F            and $0f
 226+ 9D44 32 73 87         ld (Repetimos_desplazamiento),a
 227+ 9D47 32 74 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9D4A
 229+ 9D4A              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D4A
 231+ 9D4A 23               inc hl
 232+ 9D4B 7E               ld a,(hl)
 233+ 9D4C 32 76 87         ld (Cola_de_desplazamiento),a
 234+ 9D4F 2B               dec hl
 235+ 9D50
 236+ 9D50 21 5D 87         ld hl,Ctrl_2
 237+ 9D53 CB D6            set 2,(hl)
 238+ 9D55
 239+ 9D55              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D55              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D55
 242+ 9D55              Desplazamiento_iniciado
 243+ 9D55
 244+ 9D55 CD 0C 9E         call Aplica_desplazamiento
 245+ 9D58
 246+ 9D58              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D58
 248+ 9D58 3A 96 87         ld a,(Ctrl_3)
 249+ 9D5B CB 57            bit 2,a
 250+ 9D5D C0               ret nz
 251+ 9D5E
 252+ 9D5E 3A 5D 87         ld a,(Ctrl_2)
 253+ 9D61 CB 67            bit 4,a
 254+ 9D63 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9D64
 256+ 9D64 21 73 87     3 ld hl,Repetimos_desplazamiento
 257+ 9D67 35               dec (hl)
 258+ 9D68 C0               ret nz
 259+ 9D69
 260+ 9D69              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9D69              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9D69              ; Analiza (Cola_de_desplazamiento).
 263+ 9D69
 264+ 9D69 3A 76 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9D6C A7               and a
 266+ 9D6D CC 67 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9D70 28 30            jr z,Reinicia_el_movimiento
 268+ 9D72
 269+ 9D72 FE FF            cp $ff
 270+ 9D74 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9D76
 272+ 9D76 FE FE            cp $fe
 273+ 9D78 CC E5 9D         call z,Fijamos_bucle
 274+ 9D7B 28 25            jr z,Reinicia_el_movimiento
 275+ 9D7D
 276+ 9D7D FE FD            cp $fd
 277+ 9D7F 20 11            jr nz,1F
 278+ 9D81
 279+ 9D81              ; ---
 280+ 9D81              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9D81
 282+ 9D81 3A 5D 87         ld a,(Ctrl_2)
 283+ 9D84 CB 5F            bit 3,a
 284+ 9D86 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9D88
 286+ 9D88              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9D88
 288+ 9D88 21 5D 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9D8B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9D8D
 291+ 9D8D CD F6 9D         call Inicia_Repetimos_movimiento
 292+ 9D90 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9D92              ; ---
 294+ 9D92
 295+ 9D92 FE 01        1 cp 1
 296+ 9D94 CA CF 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9D97
 298+ 9D97 3D               dec a
 299+ 9D98 32 76 87         ld (Cola_de_desplazamiento),a
 300+ 9D9B
 301+ 9D9B 3A 74 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9D9E 32 73 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DA1              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DA1 C9               ret
 305+ 9DA2
 306+ 9DA2              Reinicia_el_movimiento
 307+ 9DA2
 308+ 9DA2 3A 5D 87         ld a,(Ctrl_2)
 309+ 9DA5 CB 5F            bit 3,a
 310+ 9DA7 28 1B            jr z,2F
 311+ 9DA9
 312+ 9DA9              ; (Cola_de_desplazamiento)="254".
 313+ 9DA9
 314+ 9DA9 21 75 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9DAC 35               dec (hl)
 316+ 9DAD 20 15            jr nz,2F
 317+ 9DAF
 318+ 9DAF              ; Fin de las repeticiones del último movimiento.
 319+ 9DAF
 320+ 9DAF 21 5D 87         ld hl,Ctrl_2
 321+ 9DB2 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9DB4
 323+ 9DB4 2A 6D 87         ld hl,(Puntero_mov)
 324+ 9DB7 23               inc hl
 325+ 9DB8 23               inc hl
 326+ 9DB9 23               inc hl
 327+ 9DBA 22 6D 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9DBD              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9DBD 7E               ld a,(hl)
 330+ 9DBE 32 76 87         ld (Cola_de_desplazamiento),a
 331+ 9DC1
 332+ 9DC1 C3 69 9D         jp Cola
 333+ 9DC4
 334+ 9DC4 CD 01 9E     2 call Inicia_Puntero_mov
 335+ 9DC7
 336+ 9DC7 21 5D 87         ld hl,Ctrl_2
 337+ 9DCA CB 96            res 2,(hl)
 338+ 9DCC
 339+ 9DCC C3 33 9D         jp Movimiento
 340+ 9DCF
 341+ 9DCF              Siguiente_desplazamiento
 342+ 9DCF
 343+ 9DCF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9DCF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9DCF
 346+ 9DCF 21 5D 87         ld hl,Ctrl_2
 347+ 9DD2 CB 96            res 2,(hl)
 348+ 9DD4
 349+ 9DD4 2A 6D 87         ld hl,(Puntero_mov)
 350+ 9DD7 23               inc hl
 351+ 9DD8 23               inc hl
 352+ 9DD9 22 6D 87         ld (Puntero_mov),hl
 353+ 9DDC
 354+ 9DDC 7E               ld a,(hl)
 355+ 9DDD A7               and a
 356+ 9DDE CC 67 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9DE1 CA A2 9D         jp z,Reinicia_el_movimiento
 358+ 9DE4
 359+ 9DE4 C9               ret
 360+ 9DE5
 361+ 9DE5              ; Subrutinas -----------------------------------------
 362+ 9DE5              ; ---------- --------- --------- ---------- ----------
 363+ 9DE5              ;
 364+ 9DE5              ;   24/07/23
 365+ 9DE5              ;
 366+ 9DE5              ;   Fijamos_bucle
 367+ 9DE5              ;
 368+ 9DE5              ;
 369+ 9DE5
 370+ 9DE5              Fijamos_bucle
 371+ 9DE5
 372+ 9DE5 3A 71 87         ld a,(Incrementa_puntero)
 373+ 9DE8 3C               inc a
 374+ 9DE9 32 72 87         ld (Incrementa_puntero_backup),a
 375+ 9DEC
 376+ 9DEC CD 67 9E         call Incrementa_Puntero_indice_mov
 377+ 9DEF 2A 6B 87         ld hl,(Puntero_indice_mov)
 378+ 9DF2 22 6F 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9DF5 C9               ret
 380+ 9DF6
 381+ 9DF6              ; ---------- --------- --------- ---------- ----------
 382+ 9DF6              ;
 383+ 9DF6              ;   07/7/23
 384+ 9DF6              ;
 385+ 9DF6              ;   Inicia_Repetimos_movimiento
 386+ 9DF6              ;
 387+ 9DF6              ;
 388+ 9DF6
 389+ 9DF6              Inicia_Repetimos_movimiento
 390+ 9DF6
 391+ 9DF6              ; Iniciamos (Repetimos_movimiento).
 392+ 9DF6
 393+ 9DF6 DD 2A 6D 87      ld ix,(Puntero_mov)
 394+ 9DFA DD 7E 02         ld a,(ix+2)
 395+ 9DFD 32 75 87         ld (Repetimos_movimiento),a
 396+ 9E00
 397+ 9E00 C9               ret
 398+ 9E01
 399+ 9E01              ; ---------- --------- --------- ---------- ----------
 400+ 9E01              ;
 401+ 9E01              ;   26/6/23
 402+ 9E01              ;
 403+ 9E01              ;   Inicia_Puntero_mov
 404+ 9E01              ;
 405+ 9E01              ;
 406+ 9E01
 407+ 9E01 2A 6B 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E04 5E               ld e,(hl)
 409+ 9E05 23               inc hl
 410+ 9E06 56               ld d,(hl)
 411+ 9E07 EB               ex de,hl
 412+ 9E08 22 6D 87         ld (Puntero_mov),hl
 413+ 9E0B C9               ret
 414+ 9E0C
 415+ 9E0C              ; ---------- --------- --------- ---------- ----------
 416+ 9E0C              ;
 417+ 9E0C              ;   27/06/23
 418+ 9E0C              ;
 419+ 9E0C              ;   Aplica_movimiento.
 420+ 9E0C
 421+ 9E0C              Aplica_desplazamiento
 422+ 9E0C
 423+ 9E0C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E0C
 425+ 9E0C 2A 6D 87         ld hl, (Puntero_mov)
 426+ 9E0F
 427+ 9E0F 7E               ld a,(hl)
 428+ 9E10 E6 F0            and $f0
 429+ 9E12 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E13
 431+ 9E13 CB 7E            bit 7,(hl)
 432+ 9E15 28 03            jr z,1F
 433+ 9E17 CD 35 98         call Mov_up
 434+ 9E1A 2A 6D 87     1 ld hl, (Puntero_mov)
 435+ 9E1D CB 76            bit 6,(hl)
 436+ 9E1F 28 09            jr z,2F
 437+ 9E21 CD FC 97         call Mov_down
 438+ 9E24
 439+ 9E24              ; Se ha aplicado reinicio ???
 440+ 9E24              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E24
 442+ 9E24 3A 96 87         ld a,(Ctrl_3)
 443+ 9E27 CB 57            bit 2,a
 444+ 9E29 C0               ret nz
 445+ 9E2A
 446+ 9E2A 2A 6D 87     2 ld hl, (Puntero_mov)
 447+ 9E2D CB 6E            bit 5,(hl)
 448+ 9E2F 28 03            jr z,3F
 449+ 9E31 CD 9B 99         call Mov_left
 450+ 9E34 2A 6D 87     3 ld hl, (Puntero_mov)
 451+ 9E37 CB 66            bit 4,(hl)
 452+ 9E39 C8               ret z
 453+ 9E3A CD 78 98         call Mov_right
 454+ 9E3D C9               ret
 455+ 9E3E
 456+ 9E3E              ; ---------- --------- --------- ---------- ----------
 457+ 9E3E              ;
 458+ 9E3E              ;   26/06/23
 459+ 9E3E              ;
 460+ 9E3E              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E3E
 462+ 9E3E              Ajusta_velocidad_desplazamiento
 463+ 9E3E
 464+ 9E3E              ; 1er byte de la cadena de movimiento.
 465+ 9E3E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E3E
 467+ 9E3E CD 5C 9E         call Extrae_nibble_alto
 468+ 9E41
 469+ 9E41 32 61 87         ld (Vel_up),a
 470+ 9E44 79               ld a,c
 471+ 9E45 E6 0F            and $0f
 472+ 9E47 32 62 87         ld (Vel_down),a
 473+ 9E4A
 474+ 9E4A              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E4A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E4A
 477+ 9E4A 23               inc hl
 478+ 9E4B CD 5C 9E         call Extrae_nibble_alto
 479+ 9E4E
 480+ 9E4E 32 5F 87         ld (Vel_left),a
 481+ 9E51 79               ld a,c
 482+ 9E52 E6 0F            and $0f
 483+ 9E54 32 60 87         ld (Vel_right),a
 484+ 9E57
 485+ 9E57              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E57
 487+ 9E57 23               inc hl
 488+ 9E58 22 6D 87         ld (Puntero_mov),hl
 489+ 9E5B C9               ret
 490+ 9E5C
 491+ 9E5C 06 04        Extrae_nibble_alto ld b,4
 492+ 9E5E 7E               ld a,(hl)
 493+ 9E5F 4F               ld c,a
 494+ 9E60 E6 F0            and $f0
 495+ 9E62 CB 3F        1 srl a
 496+ 9E64 10 FC            djnz 1B
 497+ 9E66 C9               ret
 498+ 9E67
 499+ 9E67              ; ---------- --------- --------- ---------- ----------
 500+ 9E67              ;
 501+ 9E67              ;   5/7/23
 502+ 9E67              ;
 503+ 9E67              ;   Incrementa_Puntero_indice_mov
 504+ 9E67
 505+ 9E67              Incrementa_Puntero_indice_mov
 506+ 9E67
 507+ 9E67 21 71 87         ld hl,Incrementa_puntero
 508+ 9E6A 34               inc (hl)
 509+ 9E6B
 510+ 9E6B 2A 6B 87         ld hl,(Puntero_indice_mov)
 511+ 9E6E 01 02 00         ld bc,2
 512+ 9E71 A7               and a
 513+ 9E72 09               add hl,bc
 514+ 9E73 22 6B 87         ld (Puntero_indice_mov),hl
 515+ 9E76
 516+ 9E76 7E               ld a,(hl)
 517+ 9E77 A7               and a
 518+ 9E78
 519+ 9E78              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9E78
 521+ 9E78              ;    jr z,$
 522+ 9E78
 523+ 9E78              ;! Reinicia el Patrón de movimiento.
 524+ 9E78
 525+ 9E78 CC 7D 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9E7B
 527+ 9E7B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9E7C
 529+ 9E7C C9               ret
 530+ 9E7D
 531+ 9E7D              ; ---------- --------- --------- ---------- ----------
 532+ 9E7D              ;
 533+ 9E7D              ;   15/01/24
 534+ 9E7D              ;
 535+ 9E7D              ;   Inicializa_Puntero_indice_mov
 536+ 9E7D
 537+ 9E7D              Inicializa_Puntero_indice_mov_2
 538+ 9E7D
 539+ 9E7D              ; Existe etiqueta de bucle principal???
 540+ 9E7D
 541+ 9E7D 2A 6F 87         ld hl,(Puntero_indice_mov_bucle)
 542+ 9E80 24               inc h
 543+ 9E81 25               dec h
 544+ 9E82 28 05            jr z,2F
 545+ 9E84
 546+ 9E84 22 6B 87         ld (Puntero_indice_mov),hl
 547+ 9E87 18 14            jr 3F
 548+ 9E89
 549+ 9E89              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9E89
 551+ 9E89 3A 71 87     2 ld a,(Incrementa_puntero)
 552+ 9E8C 47               ld b,a
 553+ 9E8D
 554+ 9E8D 2A 6B 87         ld hl,(Puntero_indice_mov)
 555+ 9E90 2B           1 dec hl
 556+ 9E91 2B               dec hl
 557+ 9E92 10 FC            djnz 1B
 558+ 9E94 22 6B 87         ld (Puntero_indice_mov),hl
 559+ 9E97
 560+ 9E97 AF               xor a
 561+ 9E98 32 71 87         ld (Incrementa_puntero),a
 562+ 9E9B 18 06            jr 4F
 563+ 9E9D
 564+ 9E9D 3A 72 87     3 ld a,(Incrementa_puntero_backup)
 565+ 9EA0 32 71 87         ld (Incrementa_puntero),a
 566+ 9EA3 C9           4 ret
 567+ 9EA4
 568+ 9EA4 3A 35 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 569+ 9EA7 CD C3 86         call Calcula_salto_en_BC
 570+ 9EAA 21 63 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 571+ 9EAD A7               and a
 572+ 9EAE ED 4A            adc hl,bc
 573+ 9EB0 C9               ret
 574+ 9EB1
 575+ 9EB1
# file closed: Patrones_de_mov.asm
1871  9EB1              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EB1              ;
   3+ 9EB1              ;	12/12/23
   4+ 9EB1              ;
   5+ 9EB1              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EB1
   7+ 9EB1              ;	ADC HL,SP	LD (addr),SP
   8+ 9EB1              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EB1              ;	ADD IX,SP	LD SP,nn
  10+ 9EB1              ; 	ADD IY,SP	LD SP,HL
  11+ 9EB1              ;				LD SP,IX
  12+ 9EB1              ;	DEC SP		LD SP,IY
  13+ 9EB1
  14+ 9EB1              ;	EX (SP),HL
  15+ 9EB1              ;	EX (SP),IX
  16+ 9EB1              ;	EX (SP),IY
  17+ 9EB1
  18+ 9EB1              ;	INC SP
  19+ 9EB1
  20+ 9EB1                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 88 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 52 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 54 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 77 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 90 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 58 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 94 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 8E 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 77 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 90 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 58 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 94 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 88 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 8E 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 88 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 8E 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 8E 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1872  718B
1873  718B              	SAVESNA "Pruebas.sna", START
1874  718B
1875  718B
1876  718B
1877  718B
# file closed: Banco_de_pruebas.asm
