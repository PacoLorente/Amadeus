# file opened: Banco_de_Pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15              ; Pintamos Amadeus.
  44  AA15
  45  AA15 CD 2E 8E     	call Pinta_entidades
  46  AA18              ;	call Pinta_Amadeus
  47  AA18 CD D9 8D     	call Gestiona_entidades
  48  AA1B              ;	call Gestiona_Amadeus
  49  AA1B
  50  AA1B              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  51  AA1B
  52  AA1B CD 3F 8E     	call Actualiza_relojes
  53  AA1E
  54  AA1E              ;	call Recupera_parametros_DRAW
  55  AA1E
  56  AA1E              ;! Debuggg
  57  AA1E              ;	ld a,(Contador_de_frames_2)
  58  AA1E              ;	cp 1
  59  AA1E              ;	jr nz,1F
  60  AA1E              ;	ld a,(Contador_de_frames)
  61  AA1E              ;	cp $50	; $56 Último frame que no falla.
  62  AA1E              ;	jr z,$
  63  AA1E              ;	jr nc,$
  64  AA1E
  65  AA1E              ;! Debuggg
  66  AA1E
  67  AA1E FD E1        1 pop iy
  68  AA20 DD E1        	pop ix
  69  AA22 F1           	pop af
  70  AA23 C1           	pop bc
  71  AA24 D1           	pop de
  72  AA25 E1           	pop hl
  73  AA26 D9           	exx
  74  AA27 C1           	pop bc
  75  AA28 D1           	pop de
  76  AA29 E1           	pop hl
  77  AA2A 08           	ex af,af'
  78  AA2B F1           	pop af
  79  AA2C 08           	ex af,af'
  80  AA2D D9           	exx
  81  AA2E
  82  AA2E ED 7B 19 89  	ld sp,(Stack_3)
  83  AA32
  84  AA32 FB           	ei
  85  AA33 ED 4D        	reti
  86  AA35
  87  AA35              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  88  AA35
  89  AA35              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA35              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA35              ;
   3+ AA35              ;	17/02/23
   4+ AA35              ;
   5+ AA35              ;	Sprites e índices.
   6+ AA35
   7+ AA35              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  90  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 3B 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 3B 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  91  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CC 87        	defw Nivel_2
   7+ 87BE D9 87        	defw Nivel_3
   8+ 87C0 E9 87        	defw Nivel_4
   9+ 87C2 FB 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87C9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D1 01 02
  21+ 87D3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D7 01 02
  22+ 87D9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DE 01
  24+ 87DF 03 01 01 01  	db 3,1,1,1,1
  24+ 87E3 01
  25+ 87E4 03 01 01 01  	db 3,1,1,1,1
  25+ 87E8 01
  26+ 87E9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EE 01
  28+ 87EF 04 01 01 01  	db 4,1,1,1,1
  28+ 87F3 01
  29+ 87F4 04 01 01 01  	db 4,1,1,1,1
  29+ 87F8 01
  30+ 87F9 02 03        	db 2,3
  31+ 87FB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8800 01
  33+ 8801 05 01 01 01  	db 5,1,1,1,1
  33+ 8805 01
  34+ 8806 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880A 01
  35+ 880B 05 01 01 01  	db 5,1,1,1,1
  35+ 880F 01
  36+ 8810
  37+ 8810              ;---------------------------------------------------------------------------------------------------------------
  38+ 8810              ;
  39+ 8810              ;   3/9/23
  40+ 8810              ;
  41+ 8810              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8810              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8810              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8810              ;	_en la caja DRAW correspondiente.
  45+ 8810              ;
  46+ 8810              ;	MODIFICA: HL,DE y A.
  47+ 8810              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8810
  49+ 8810              Inicializa_Punteros_de_nivel
  50+ 8810
  51+ 8810 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8813 22 5D 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8816 CD 7E 8C     	call Extrae_address
  54+ 8819 7E           	ld a,(hl)
  55+ 881A 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881D 23           	inc hl
  57+ 881E 22 5F 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8821 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8822
  60+ 8822              ;---------------------------------------------------------------------------------------------------------------
  61+ 8822              ;
  62+ 8822              ;   13/5/23
  63+ 8822              ;
  64+ 8822              ;	Destruye A,BC,HL,DE
  65+ 8822
  66+ 8822              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8822              ;	_del juego.
  68+ 8822
  69+ 8822              Prepara_cajas
  70+ 8822
  71+ 8822              ; Preparamos los punteros de las cajas.
  72+ 8822
  73+ 8822 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8825 CD 7E 8C     	call Extrae_address
  75+ 8828 CD 65 88     	call Avanza_caja
  76+ 882B
  77+ 882B CD A9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882E
  79+ 882E 2A 5F 89     	ld hl,(Datos_de_nivel)
  80+ 8831
  81+ 8831              ; HL está en los datos del nivel correspondiente.
  82+ 8831              ; B actuará como contador de cajas.
  83+ 8831
  84+ 8831 C5           1 push bc
  85+ 8832
  86+ 8832 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8833 CD 56 88     	call PreparaBC
  88+ 8836
  89+ 8836 21 96 87     	ld hl,Indice_de_entidades
  90+ 8839 CD 5E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883C 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883F
  93+ 883F CD 6F 88     	call Datos_de_entidad_a_caja
  94+ 8842
  95+ 8842 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8845 CD 7E 8C     	call Extrae_address
  97+ 8848 CD 65 88     	call Avanza_caja
  98+ 884B
  99+ 884B 2A 5F 89     	ld hl,(Datos_de_nivel)
 100+ 884E 23           	inc hl
 101+ 884F 22 5F 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8852
 103+ 8852 C1           	pop bc
 104+ 8853 10 DC        	djnz 1B
 105+ 8855 C9           	ret
 106+ 8856
 107+ 8856 CB 27        PreparaBC sla a
 108+ 8858 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885A 4F           	ld c,a
 110+ 885B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885D C9           	ret
 112+ 885E
 113+ 885E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885F ED 4A        	adc hl,bc
 115+ 8861 CD 7E 8C     	call Extrae_address
 116+ 8864 C9           	ret
 117+ 8865
 118+ 8865 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8868 13           	inc de
 120+ 8869 13           	inc de
 121+ 886A EB           	ex de,hl
 122+ 886B 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886E C9           	ret
 124+ 886F
 125+ 886F              Datos_de_entidad_a_caja
 126+ 886F
 127+ 886F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886F
 129+ 886F
 130+ 886F ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8873
 132+ 8873 01 02 00     	ld bc,2
 133+ 8876 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8878
 135+ 8878 01 07 00     	ld bc,7
 136+ 887B CD A3 88     	call Situa_DE
 137+ 887E
 138+ 887E 01 05 00     	ld bc,5
 139+ 8881 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8883
 141+ 8883 01 04 00     	ld bc,4
 142+ 8886 CD A3 88     	call Situa_DE
 143+ 8889
 144+ 8889 01 07 00     	ld bc,7
 145+ 888C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888E
 147+ 888E 01 12 00     	ld bc,18
 148+ 8891 CD A3 88     	call Situa_DE
 149+ 8894
 150+ 8894 01 02 00     	ld bc,2
 151+ 8897 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8899
 153+ 8899              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8899              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8899
 156+ 8899 01 0F 00     	ld bc,15									; *****
 157+ 889C CD A3 88     	call Situa_DE
 158+ 889F
 159+ 889F 3E 03        	ld a,3
 160+ 88A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A2
 162+ 88A2 C9           	ret
 163+ 88A3
 164+ 88A3 EB           Situa_DE ex de,hl
 165+ 88A4 A7           	and a
 166+ 88A5 ED 4A        	adc hl,bc
 167+ 88A7 EB           	ex de,hl
 168+ 88A8 C9           	ret
 169+ 88A9
 170+ 88A9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A9              ;
 172+ 88A9              ;	21/5/23
 173+ 88A9              ;
 174+ 88A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A9              ;
 177+ 88A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A9              ;
 181+ 88A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A9              ;	MODIFICA: A y B.
 183+ 88A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A9
 185+ 88A9              Admin_num_entidades
 186+ 88A9
 187+ 88A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A9
 189+ 88A9 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AC A7           	and a
 191+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AD              ;	jr z,$
 193+ 88AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AD
 195+ 88AD 20 03        	jr nz,3F
 196+ 88AF
 197+ 88AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AF
 199+ 88AF CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B2
 201+ 88B2 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B5 FE 0A        	cp 10
 203+ 88B7 38 08        	jr c,1F
 204+ 88B9
 205+ 88B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B9              ; Actualizamos variables.
 207+ 88B9
 208+ 88B9 3E 0A        	ld a,10
 209+ 88BB 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BE 47           	ld b,a
 211+ 88BF 18 04        	jr 2F
 212+ 88C1
 213+ 88C1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C1              ; (Numero_de_entidades)="0".
 215+ 88C1
 216+ 88C1 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C4 47           	ld b,a
 218+ 88C5 C9           2 ret
# file closed: Niveles.asm
  92  88C6
  93  88C6              ; ******************************************************************************************************************************************************************************************
  94  88C6              ; Constantes.
  95  88C6              ; ******************************************************************************************************************************************************************************************
  96  88C6              ;
  97  88C6              ; 4/9/23
  98  88C6              ;
  99  88C6              ; Constantes generales.
 100  88C6              ;
 101  88C6
 102  88C6              Sprite_vacio equ $f000
 103  88C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 104  88C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 105  88C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 106  88C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 107  88C6
 108  88C6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 109  88C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 110  88C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 111  88C6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 112  88C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 113  88C6              ;
 114  88C6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 115  88C6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 116  88C6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 117  88C6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 118  88C6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 119  88C6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 120  88C6
 121  88C6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 122  88C6              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 123  88C6
 124  88C6
 125  88C6
 126  88C6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88C6
 128  88C6              ; ******************************************************************************************************************************************************************************************
 129  88C6              ; Variables.
 130  88C6              ; ******************************************************************************************************************************************************************************************
 131  88C6              ;
 132  88C6              ; 28/07/23
 133  88C6              ;
 134  88C6              ; Variables de DRAW. (Motor principal).
 135  88C6              ;
 136  88C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88C6
 138  88C6 00           Filas db 0												; Filas. [DRAW]
 139  88C7 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88CE
 145  88CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88CE
 147  88CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88CF 00           Attr db 0												; Atributos de la entidad:
 151  88D0
 152  88D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88D0              ;
 154  88D0              ;	COLORES: 0 ..... NEGRO
 155  88D0              ;    		 1 ..... AZUL
 156  88D0              ; 			 2 ..... ROJO
 157  88D0              ;			 3 ..... MAGENTA
 158  88D0              ; 			 4 ..... VERDE
 159  88D0              ; 			 5 ..... CIAN
 160  88D0              ;			 6 ..... AMARILLO
 161  88D0              ; 			 7 ..... BLANCO
 162  88D0
 163  88D0 00 00        Indice_Sprite_der defw 0
 164  88D2 00 00        Indice_Sprite_izq defw 0
 165  88D4 00 00        Puntero_DESPLZ_der defw 0
 166  88D6 00 00        Puntero_DESPLZ_izq defw 0
 167  88D8
 168  88D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88DB
 171  88DB              ; Variables de objeto. (Características).
 172  88DB
 173  88DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88DF
 178  88DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88E0 00 00 00...  Variables_de_borrado ds 6
 182  88E6
 183  88E6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88E8 00 00        	defw 0
 185  88EA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88EC 00 00 00 00  	db 0,0,0,0
 187  88F0
 188  88F0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88F0
 190  88F0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88F1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88F1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88F1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88F1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88F1              ;
 196  88F1              ; 														DESCRIPCIÖN:
 197  88F1              ;
 198  88F1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88F1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88F1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88F1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88F1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88F1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88F1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88F1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88F1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88F1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88F1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88F1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88F1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88F1              ;
 212  88F1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88F1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88F1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88F1
 216  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88F1
 218  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88F7              ;
 222  88F7              ;
 223  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88F8 00           Incrementa_puntero_backup db 0
 227  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88FD              ;
 233  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88FD              ;
 237  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88FD              ;
 242  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88FD
 246  88FD
 247  88FD              ; Variables de funcionamiento. [DRAW].
 248  88FD
 249  88FD 00           Columnas db 0
 250  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8901
 254  8901              ; variables de control general.
 255  8901
 256  8901 00           Ctrl_2 db 0
 257  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  8902              ;
 265  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  8902
 271  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  8903
 273  8903              ;! 61 Bytes por entidad.
 274  8903
 275  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  8903              ;					         		---------;      ;---------
 277  8903
 278  8903
 279  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  8903
 281  8903 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  8904
 283  8904              ;														DESCRIPCIÓN:
 284  8904              ;
 285  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  8904
 292  8904              ;														BIT 3, Recarga de nueva oleada.
 293  8904              ;														BIT 4, Recarga de nueva oleada.
 294  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 295  8904              ;														BIT 6, **** Frame completo.
 296  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  8904
 298  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  8906
 303  8906 00           Ctrl_3 db 0												; Byte de control de propósito general.
 304  8907
 305  8907              ;														DESCRIPCIÓN:
 306  8907              ;
 307  8907              ;														BIT 0,
 308  8907
 309  8907              ; Gestión de ENTIDADES y CAJAS.
 310  8907
 311  8907 00 00        Puntero_store_caja defw 0
 312  8909 00 00        Puntero_restore_caja defw 0
 313  890B 00 00        Indice_restore_caja defw 0
 314  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 315  890E 00           Numero_parcial_de_entidades db 0
 316  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 317  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 318  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 319  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 320  8911              ;														; _ (Numero_de_malotes)="0".
 321  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 322  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 323  8915              ;														; _ puntero (Indice_entidades).
 324  8915
 325  8915
 326  8915              ;---------------------------------------------------------------------------------------------------------------
 327  8915              ;
 328  8915              ;	2/9/23
 329  8915              ;
 330  8915              ;	Álbumes.
 331  8915
 332  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 333  8917              ;														; _variable para almacenar lo posición del puntero_
 334  8917              ; 														; _de pila, SP.
 335  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 336  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 337  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 338  891B 00 00        Stack_snapshot defw 0
 339  891D 00 00        Stack_snapshot_disparos defw 0
 340  891F
 341  891F 00 00        End_Snapshot defw 0
 342  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 343  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 344  8923              ;														; _el snapshot de los registros del siguiente disparo.
 345  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 346  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 347  8925 00 00        End_Snapshot_1 defw 0
 348  8927 00 00        End_Snapshot_disparos_1 defw 0
 349  8929 00 00        End_Snapshot_2 defw 0
 350  892B 00 00        End_Snapshot_disparos_2 defw 0
 351  892D 00 00        End_Snapshot_3 defw 0
 352  892F 00 00        End_Snapshot_disparos_3 defw 0
 353  8931
 354  8931 00 00        Puntero_indice_album_de_fotos defw 0
 355  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 356  8935
 357  8935 00 00        Puntero_indice_End_Snapshot defw 0
 358  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 359  8939 00 00        Puntero_de_End_Snapshot defw 0
 360  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 361  893D
 362  893D 00           Semaforo_de_albumes_de_entidades db 0
 363  893E
 364  893E              ;---------------------------------------------------------------------------------------------------------------
 365  893E
 366  893E              ; Gestión de Disparos.
 367  893E
 368  893E 00           Numero_de_disparotes db 0
 369  893F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 370  8941 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 371  8943 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 372  8944              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 373  8944              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 374  8944 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 375  8946              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 376  8946              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 377  8946              ;														; _produzca colisión.
 378  8946 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 379  8948              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 380  8948 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 381  894B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 382  894B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 383  894E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 384  894E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 385  8950 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 386  8951
 387  8951              ;---------------------------------------------------------------------------------------------------------------
 388  8951
 389  8951              ; Relojes y temporizaciones.
 390  8951
 391  8951 00           Contador_de_frames db 0
 392  8952 00           Contador_de_frames_2 db 0
 393  8953
 394  8953 04           Clock_explosion db 4
 395  8954 1E           Clock_Entidades_en_curso db 30
 396  8955 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 397  8956              ;														; Repite la oleada de entidades.
 398  8956 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 399  8957 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 400  8958 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 401  8959
 402  8959 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 403  895A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 404  895B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 405  895C
 406  895C              ;---------------------------------------------------------------------------------------------------------------
 407  895C
 408  895C              ; Gestión de NIVELES.
 409  895C
 410  895C 00           Nivel db 0												; Nivel actual del juego.
 411  895D 00 00        Puntero_indice_NIVELES defw 0
 412  895F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 413  8961              ; 														; _ que definen el NIVEL.
 414  8961              ; Y todo comienza aquí .....
 415  8961              ;
 416  8961              ; Rutina principal *************************************************************************************************************************************************************************
 417  8961              ;
 418  8961              ;	14/11/22
 419  8961
 420  8961              START
 421  8961
 422  8961 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 423  8964 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 424  8966 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 425  8968 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 426  896A F3           	DI
 427  896B
 428  896B 3E 07        	ld a,%00000111
 429  896D CD 68 99     	call Cls
 430  8970
 431  8970 CD 57 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 432  8973
 433  8973              ; INICIALIZACIÓN.
 434  8973
 435  8973 CD 10 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 436  8976
 437  8976 CD 22 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 438  8979
 439  8979 CD 7F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 440  897C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 441  897C CD 95 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 442  897F              ;													     ; _ malotes antes de guardar ninguna foto.
 443  897F              ; ----------
 444  897F
 445  897F CD 07 8D     	call Restore_entidad
 446  8982
 447  8982 21 0E 89     	ld hl,Numero_parcial_de_entidades
 448  8985 46           	ld b,(hl)
 449  8986 04           	inc b
 450  8987 05           	dec b
 451  8988 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 452  898A
 453  898A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 454  898A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 455  898A              ;	Pintamos el resto de entidades:
 456  898A
 457  898A              ;	INICIA ENTIDADES !!!!!
 458  898A
 459  898A C5           1 push bc  												; Guardo el contador de entidades.
 460  898B CD 50 8B     	call Inicia_entidad
 461  898E C1           	pop bc
 462  898F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 463  8991
 464  8991              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 465  8991              ; (Esto se dá cuando se inicia una nueva oleada).
 466  8991
 467  8991 3A 03 89     	ld a,(Ctrl_1)
 468  8994 CB 5F        	bit 3,a
 469  8996 20 00        	jr nz,5F											; Loop
 470  8998
 471  8998              ; 	INICIA AMADEUS !!!!!
 472  8998
 473  8998              3
 474  8998
 475  8998              ;	call Restore_Amadeus
 476  8998              ;	call Inicia_Puntero_objeto
 477  8998              ;	call Draw
 478  8998              ;	call Guarda_foto_registros
 479  8998              ;	call Guarda_datos_de_borrado_Amadeus
 480  8998
 481  8998              ;	ld de,Amadeus_db
 482  8998              ;	call Store_Amadeus
 483  8998
 484  8998              ; 	INICIA DISPAROS !!!!!
 485  8998
 486  8998              ;	call Inicia_Puntero_Disparo_Entidades
 487  8998              ;	call Inicia_Puntero_Disparo_Amadeus
 488  8998
 489  8998              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 490  8998
 491  8998 CD 7F 8B     5 call Inicia_punteros_de_cajas
 492  899B CD 07 8D     	call Restore_entidad
 493  899E
 494  899E 3A 03 89     	ld a,(Ctrl_1)
 495  89A1 CB 5F        	bit 3,a
 496  89A3 28 07        	jr z,6F
 497  89A5
 498  89A5              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 499  89A5
 500  89A5 21 03 89     	ld hl,Ctrl_1
 501  89A8 CB 9E        	res 3,(hl)
 502  89AA 18 03        	jr Main
 503  89AC
 504  89AC
 505  89AC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 506  89AC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 507  89AC              ; _ para situarnos en el siguiente album.
 508  89AC
 509  89AC CD C6 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 510  89AF
 511  89AF
 512  89AF              ; ------------------------------------
 513  89AF
 514  89AF              Main
 515  89AF              ;
 516  89AF              ;	3/8/23
 517  89AF
 518  89AF FB            	ei
 519  89B0
 520  89B0 3A 54 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 521  89B3 47           	ld b,a
 522  89B4 3A 51 89     	ld a,(Contador_de_frames)
 523  89B7 B8           	cp b
 524  89B8 20 18        	jr nz,13F
 525  89BA
 526  89BA 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 527  89BD 47           	ld b,a
 528  89BE 3A 0F 89     	ld a,(Entidades_en_curso)
 529  89C1 B8           	cp b
 530  89C2 28 0E        	jr z,13F
 531  89C4 30 0C        	jr nc,13F
 532  89C6
 533  89C6 3C           	inc a
 534  89C7 32 0F 89     	ld (Entidades_en_curso),a
 535  89CA
 536  89CA 3A 54 89     	ld a,(Clock_Entidades_en_curso)
 537  89CD
 538  89CD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 539  89CD              ;! _ IMPREDECIBLE !!!!
 540  89CD
 541  89CD C6 64        	add 100
 542  89CF 32 54 89     	ld (Clock_Entidades_en_curso),a
 543  89D2
 544  89D2              ; Habilita disparos.
 545  89D2
 546  89D2 21 56 89     13 ld hl,Disparo_Amadeus
 547  89D5 11 58 89     	ld de,CLOCK_repone_disparo_Amadeus
 548  89D8 CD 2C 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 549  89DB
 550  89DB 21 59 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 551  89DE 11 5B 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 552  89E1 CD 2C 9D     	call Habilita_disparos
 553  89E4
 554  89E4              ; COLISIONES.
 555  89E4
 556  89E4 CD 3D 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 557  89E7
 558  89E7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 559  89E7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 560  89E7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 561  89E7
 562  89E7 AF           	xor a
 563  89E8 32 43 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 564  89EB
 565  89EB CD 7F 8B     	call Inicia_punteros_de_cajas
 566  89EE CD 07 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 567  89F1              ; 														; _ en DRAW.
 568  89F1 3A C6 88     	ld a,(Filas)
 569  89F4 A7           	and a
 570  89F5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 571  89F7 CD 19 8D     	call Incrementa_punteros_de_cajas
 572  89FA 18 F2        	jr 12B
 573  89FC
 574  89FC              ; ---------------------------------------------------------------------------------------
 575  89FC
 576  89FC 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 577  89FF 47               ld b,a
 578  8A00 A7           	and a
 579  8A01 20 14        	jr nz,11F
 580  8A03
 581  8A03 21 03 89     	ld hl,Ctrl_1
 582  8A06 CB 66        	bit 4,(hl)
 583  8A08 C2 95 8A     	jp nz,16F
 584  8A0B
 585  8A0B 21 03 89     	ld hl,Ctrl_1
 586  8A0E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 587  8A10
 588  8A10 3A 51 89     	ld a,(Contador_de_frames)
 589  8A13 3C           	inc a
 590  8A14 32 55 89     	ld (Activa_recarga_cajas),a
 591  8A17
 592  8A17              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 593  8A17
 594  8A17 3A 0F 89     11 ld a,(Entidades_en_curso)
 595  8A1A A7           	and a
 596  8A1B CA 95 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 597  8A1E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 598  8A1F
 599  8A1F              ; Código que ejecutamos con cada entidad:
 600  8A1F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 601  8A1F
 602  8A1F C5           15 push bc 												; Nº de entidades en curso.
 603  8A20
 604  8A20              ; Impacto ???
 605  8A20
 606  8A20 3A DF 88     	ld a,(Impacto)
 607  8A23 A7           	and a
 608  8A24 28 32        	jr z,8F
 609  8A26
 610  8A26              ; Hay Impacto en esta entidad.
 611  8A26
 612  8A26 21 53 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 613  8A29 35           	dec (hl)
 614  8A2A 20 63        	jr nz,17F
 615  8A2C
 616  8A2C              ;! Velocidad de la animación de la explosión.
 617  8A2C
 618  8A2C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 619  8A2E              ;														; _,(velocidad de la explosión).
 620  8A2E
 621  8A2E              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 622  8A2E 18 FE        	jr $
 623  8A30
 624  8A30 CD C8 8D     	call Repone_datos_de_borrado
 625  8A33 CD 20 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 626  8A36
 627  8A36
 628  8A36              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 629  8A36
 630  8A36 3A 01 89     	ld a,(Ctrl_2)
 631  8A39 CB 4F        	bit 1,a
 632  8A3B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 633  8A3D
 634  8A3D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 635  8A3D
 636  8A3D 3A CE 88     	ld a,(CTRL_DESPLZ)
 637  8A40 A7           	and a
 638  8A41 20 08        	jr nz,18F
 639  8A43
 640  8A43 21 84 84     	ld hl,Indice_Explosion_2x2-2
 641  8A46 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 642  8A49 18 06        	jr 19F
 643  8A4B
 644  8A4B 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 645  8A4E 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 646  8A51
 647  8A51 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 648  8A54 CB CE        	set 1,(hl)
 649  8A56 18 22        	jr 7F
 650  8A58
 651  8A58              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 652  8A58              ; _con las coordenadas de la entidad almacenada en DRAW.
 653  8A58
 654  8A58 3A 03 89     8 ld a,(Ctrl_1)
 655  8A5B CB 57        	bit 2,a
 656  8A5D 28 1B        	jr z,7F
 657  8A5F
 658  8A5F 2A 46 89     	ld hl,(Coordenadas_disparo_certero)
 659  8A62 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 660  8A63              ;														; E contiene la coordenada_X del disparo.
 661  8A63 2A CC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 662  8A66              ;														; H FILA, (Coordenada_y de la entidad).
 663  8A66 A7           	and a
 664  8A67 ED 52        	sbc hl,de
 665  8A69
 666  8A69 CD 74 92     	call Determina_resultado_comparativa
 667  8A6C
 668  8A6C 78           	ld a,b
 669  8A6D A7           	and a
 670  8A6E 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 671  8A70
 672  8A70              ; ----- ----- -----
 673  8A70
 674  8A70 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 675  8A72 32 DF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 676  8A75
 677  8A75 21 03 89     	ld hl,Ctrl_1
 678  8A78 CB 96        	res 2,(hl)
 679  8A7A
 680  8A7A CD EC 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 681  8A7D
 682  8A7D 3A F0 88     	ld a,(Ctrl_0)
 683  8A80 CB 67        	bit 4,a
 684  8A82 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 685  8A84
 686  8A84              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 687  8A84              ; [[[
 688  8A84 CD A2 8D     	call Detecta_disparo_entidad
 689  8A87              ; ]]]
 690  8A87
 691  8A87 CD 60 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 692  8A8A              ;	call Guarda_datos_de_borrado
 693  8A8A
 694  8A8A 21 F0 88     	ld hl,Ctrl_0
 695  8A8D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 696  8A8F
 697  8A8F CD CC 8C     17 call Store_Restore_cajas
 698  8A92
 699  8A92 C1           	pop bc
 700  8A93 10 8A        	djnz 15B
 701  8A95
 702  8A95              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 703  8A95              ; Hemos gestionado todas las unidades.
 704  8A95              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 705  8A95
 706  8A95              ;	ld hl,Ctrl_1
 707  8A95              ;	res 2,(hl)
 708  8A95
 709  8A95 CD C6 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 710  8A98              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 711  8A98              ; ----------------------------------------
 712  8A98
 713  8A98 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 714  8A9B CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 715  8A9D CA AF 89     	jp z,Main
 716  8AA0
 717  8AA0 3A 51 89     	ld a,(Contador_de_frames)
 718  8AA3 47           	ld b,a
 719  8AA4 3A 55 89     	ld a,(Activa_recarga_cajas)
 720  8AA7 B8           	cp b
 721  8AA8 28 08        	jr z,20F
 722  8AAA
 723  8AAA 21 03 89     	ld hl,Ctrl_1
 724  8AAD CB E6        	set 4,(hl)
 725  8AAF C3 AF 89     	jp Main
 726  8AB2
 727  8AB2 21 03 89     20 ld hl,Ctrl_1
 728  8AB5 CB A6        	res 4,(hl)
 729  8AB7
 730  8AB7 3A 51 89     	ld a,(Contador_de_frames)
 731  8ABA
 732  8ABA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 733  8ABA              ;! _ IMPREDECIBLE !!!!
 734  8ABA
 735  8ABA C6 0A        	add 10
 736  8ABC 32 54 89     	ld (Clock_Entidades_en_curso),a
 737  8ABF
 738  8ABF C3 76 89     	jp 4B
 739  8AC2
 740  8AC2 C9           	ret
 741  8AC3
 742  8AC3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 743  8AC3
 744  8AC3              Gestiona_Amadeus
 745  8AC3
 746  8AC3 3E 04            ld a,4
 747  8AC5 D3 FE        	out ($fe),a											; Azul.
 748  8AC7
 749  8AC7 CD 2E 8D     	call Restore_Amadeus
 750  8ACA
 751  8ACA              ;! Activa/desactiva impacto con Amadeus.
 752  8ACA
 753  8ACA 3A DF 88     	ld a,(Impacto)
 754  8ACD A7           	and a
 755  8ACE 20 FE        	jr nz,$
 756  8AD0
 757  8AD0 CD 3D 8B     	call Mov_Amadeus
 758  8AD3
 759  8AD3 3A F0 88     	ld a,(Ctrl_0)
 760  8AD6 CB 67        	bit 4,a
 761  8AD8 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 762  8ADA
 763  8ADA CD 60 8B     	call Guarda_foto_entidad_a_pintar
 764  8ADD CD A8 8D     	call Guarda_datos_de_borrado_Amadeus
 765  8AE0
 766  8AE0 21 F0 88     14 ld hl,Ctrl_0
 767  8AE3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 768  8AE5
 769  8AE5 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 770  8AE8 CD 40 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 771  8AEB
 772  8AEB              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 773  8AEB
 774  8AEB              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 775  8AEB
 776  8AEB              ;	call Calcula_numero_de_disparotes
 777  8AEB
 778  8AEB C9           	ret
 779  8AEC
 780  8AEC              ; --------------------------------------------------------------------------------------------------------------
 781  8AEC              ;
 782  8AEC              ;	27/05/23
 783  8AEC
 784  8AEC              Mov_obj
 785  8AEC
 786  8AEC 3A 01 89     	ld a,(Ctrl_2)
 787  8AEF CB 4F        	bit 1,a
 788  8AF1 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 789  8AF3
 790  8AF3              ; Explosión:
 791  8AF3
 792  8AF3 3A 02 89     	ld a,(Frames_explosion)
 793  8AF6 A7           	and a
 794  8AF7 20 11        	jr nz,4F
 795  8AF9
 796  8AF9              ; Una alimaña menos!!!!!!!!!1
 797  8AF9
 798  8AF9 CD 49 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 799  8AFC 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 800  8AFF 35           	dec (hl)
 801  8B00 21 0F 89     	ld hl,Entidades_en_curso
 802  8B03 35           	dec (hl)
 803  8B04 21 0D 89     	ld hl,Numero_de_entidades
 804  8B07 35           	dec (hl)
 805  8B08 18 32        	jr 3F
 806  8B0A
 807  8B0A              ; -----
 808  8B0A
 809  8B0A              ;	`Movemos´ la explosión.
 810  8B0A
 811  8B0A 2A D4 88     4 ld hl,(Puntero_DESPLZ_der)
 812  8B0D 23           	inc hl
 813  8B0E 23           	inc hl
 814  8B0F 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 815  8B12 CD 7E 8C     	call Extrae_address
 816  8B15 22 CA 88     	ld (Puntero_objeto),hl
 817  8B18
 818  8B18 21 02 89     	ld hl,Frames_explosion
 819  8B1B 35           	dec (hl)
 820  8B1C
 821  8B1C              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 822  8B1C 18 1E        	jr 3F
 823  8B1E
 824  8B1E AF           2 xor a
 825  8B1F 32 F0 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 826  8B22
 827  8B22              ; Movemos Entidades malignas.
 828  8B22
 829  8B22 CD D7 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 830  8B25
 831  8B25 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 832  8B28 CB 67        	bit 4,a
 833  8B2A C8           	ret z
 834  8B2B
 835  8B2B              ; Ha habido desplazamiento de la entidad maligna.
 836  8B2B              ; Ha llegado a zona de AMADEUS ???
 837  8B2B
 838  8B2B 3A CD 88     	ld a,(Coordenada_y)
 839  8B2E FE 14        	cp $14
 840  8B30 D4 02 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 841  8B33              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 842  8B33              ; ---------
 843  8B33
 844  8B33 CD 67 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 845  8B36 CD C8 8D     	call Repone_datos_de_borrado
 846  8B39 CD 20 8C     	call Limpia_Variables_de_borrado
 847  8B3C
 848  8B3C C9           3 ret													; _de la misma.
 849  8B3D
 850  8B3D              ; --------------------------------------------------------------------------------------------------------------
 851  8B3D              ;
 852  8B3D              ;	29/1/23
 853  8B3D
 854  8B3D              Mov_Amadeus
 855  8B3D
 856  8B3D CD 6B 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 857  8B40
 858  8B40 3A F0 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 859  8B43 CB 67        	bit 4,a
 860  8B45 C8           	ret z
 861  8B46
 862  8B46              ; ---------
 863  8B46
 864  8B46 CD 67 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 865  8B49 CD B8 8D     	call Repone_datos_de_borrado_Amadeus
 866  8B4C CD 20 8C     	call Limpia_Variables_de_borrado
 867  8B4F
 868  8B4F C9           	ret
 869  8B50
 870  8B50              ; -----------------------------------------------------------------------------------
 871  8B50
 872  8B50 CD 84 8C     Inicia_entidad	call Inicia_Puntero_objeto
 873  8B53 CD 7C 99     	call Recompone_posicion_inicio
 874  8B56 CD 5B 93     	call Draw
 875  8B59 CD A0 7F     	call Guarda_foto_registros
 876  8B5C              ;	call Guarda_datos_de_borrado
 877  8B5C CD CC 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 878  8B5F C9           	ret
 879  8B60
 880  8B60              ; --------------------------------------------------------------------------------------------------------------
 881  8B60              ;
 882  8B60              ;	31/08/23
 883  8B60              ;
 884  8B60              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 885  8B60              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 886  8B60
 887  8B60              Guarda_foto_entidad_a_pintar
 888  8B60
 889  8B60              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 890  8B60
 891  8B60 CD 5B 93     	call Draw
 892  8B63 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 893  8B66 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 894  8B67
 895  8B67              ; --------------------------------------------------------------------------------------------------------------
 896  8B67              ;
 897  8B67              ;	19/9/23
 898  8B67
 899  8B67 21 C6 88     Prepara_var_pintado ld hl,Filas
 900  8B6A 11 E6 88     	ld de,Variables_de_pintado
 901  8B6D 01 08 00     	ld bc,8
 902  8B70 ED B0        	ldir
 903  8B72 C9           	ret
 904  8B73
 905  8B73              ; --------------------------------------------------------------------------------------------------------------
 906  8B73
 907  8B73 21 E6 88     Repone_pintar ld hl,Variables_de_pintado
 908  8B76 11 C6 88     	ld de,Filas
 909  8B79 01 08 00     	ld bc,8
 910  8B7C ED B0        	ldir
 911  8B7E C9           	ret
 912  8B7F
 913  8B7F              ; *************************************************************************************************************************************************************
 914  8B7F              ;
 915  8B7F              ; 8/1/23
 916  8B7F              ;
 917  8B7F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 918  8B7F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 919  8B7F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 920  8B7F
 921  8B7F              ; Destruye HL y DE !!!!!
 922  8B7F
 923  8B7F              Inicia_punteros_de_cajas
 924  8B7F
 925  8B7F 21 8C 85     	ld hl,Indice_de_cajas
 926  8B82 CD 7E 8C         call Extrae_address
 927  8B85 22 07 89         ld (Puntero_store_caja),hl
 928  8B88 21 8E 85     	ld hl,Indice_de_cajas+2
 929  8B8B 22 0B 89     	ld (Indice_restore_caja),hl
 930  8B8E CD 7E 8C     	call Extrae_address
 931  8B91 22 09 89     	ld (Puntero_restore_caja),hl
 932  8B94 C9               ret
 933  8B95
 934  8B95              ; ---------------------------------------------------------------
 935  8B95              ;
 936  8B95              ;	9/8/23
 937  8B95              ;
 938  8B95              ;	Inicialización y gestión de álbumes de fotos y cajas.
 939  8B95
 940  8B95              Inicia_punteros_de_albumes_y_malotes
 941  8B95
 942  8B95 21 EC 84     	ld hl,Indice_album_de_fotos
 943  8B98 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 944  8B9B CD 7E 8C     	call Extrae_address
 945  8B9E 22 1B 89     	ld (Stack_snapshot),hl
 946  8BA1
 947  8BA1 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 948  8BA4 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 949  8BA7 CD 7E 8C     	call Extrae_address
 950  8BAA 22 1D 89     	ld (Stack_snapshot_disparos),hl
 951  8BAD
 952  8BAD 21 FC 84     	ld hl,Indice_End_Snapshot
 953  8BB0 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 954  8BB3 CD 7E 8C     	call Extrae_address
 955  8BB6 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 956  8BB9
 957  8BB9 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 958  8BBC 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 959  8BBF CD 7E 8C     	call Extrae_address
 960  8BC2 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 961  8BC5
 962  8BC5 C9           	ret
 963  8BC6
 964  8BC6              ;	23/9/23
 965  8BC6
 966  8BC6              Avanza_puntero_de_album_de_fotos_y_malotes
 967  8BC6
 968  8BC6              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 969  8BC6
 970  8BC6              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 971  8BC6              ; Estamos en el último álbum del índice???.
 972  8BC6              ;
 973  8BC6
 974  8BC6 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 975  8BC9 01 F2 84     	ld bc,Indice_album_de_fotos+6
 976  8BCC A7           	and a
 977  8BCD ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 978  8BCF 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 979  8BD1
 980  8BD1              ; Estamos en Album_de_fotos_3.
 981  8BD1              ; Configuramos el semáforo de álbumes para indicar que todos están completos.
 982  8BD1
 983  8BD1 21 03 89     	ld hl,Ctrl_1
 984  8BD4 CB EE        	set 5,(hl)
 985  8BD6 76           	halt
 986  8BD7 C9           	ret
 987  8BD8
 988  8BD8 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
 989  8BDB 23           	inc hl
 990  8BDC 23           	inc hl
 991  8BDD 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 992  8BE0 CD 7E 8C     	call Extrae_address
 993  8BE3 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 994  8BE6
 995  8BE6 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
 996  8BE9 23           	inc hl
 997  8BEA 23           	inc hl
 998  8BEB 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 999  8BEE CD 7E 8C     	call Extrae_address
1000  8BF1 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1001  8BF4
1002  8BF4 CD 9B 73     	call Actualiza_semaforo_de_albumes
1003  8BF7
1004  8BF7 C9           	ret
1005  8BF8
1006  8BF8              ; *************************************************************************************************************************************************************
1007  8BF8              ;
1008  8BF8              ; 8/1/23
1009  8BF8              ;
1010  8BF8              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1011  8BF8
1012  8BF8 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1013  8BFB 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1014  8BFE C9           	ret
1015  8BFF 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1016  8C02 22 41 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1017  8C05 C9           	ret
1018  8C06
1019  8C06              ; -------------------------------------------------------------------------------------------------------------
1020  8C06              ;
1021  8C06              ; 21/9/23
1022  8C06              ;
1023  8C06
1024  8C06              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1025  8C06
1026  8C06              Limpia_album_Amadeus
1027  8C06
1028  8C06 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1029  8C09 7E           	ld a,(hl)
1030  8C0A A7           	and a
1031  8C0B C8           	ret z
1032  8C0C
1033  8C0C 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1034  8C0F 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1035  8C12 01 0B 00     	ld bc,11
1036  8C15 AF           	xor a
1037  8C16 77           	ld (hl),a
1038  8C17 ED B0        	ldir
1039  8C19
1040  8C19 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1041  8C1C 22 23 89     	ld (End_Snapshot_Amadeus),hl
1042  8C1F
1043  8C1F C9           	ret
1044  8C20
1045  8C20 21 E0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1046  8C23 11 E1 88     	ld de,Variables_de_borrado+1
1047  8C26 01 05 00     	ld bc,5
1048  8C29 AF           	xor a
1049  8C2A 77           	ld (hl),a
1050  8C2B ED B0        	ldir
1051  8C2D C9           	ret
1052  8C2E
1053  8C2E              ; -------------------------------------------------------------------------------------------------------------
1054  8C2E              ;
1055  8C2E              ; 8/9/23
1056  8C2E              ;
1057  8C2E
1058  8C2E              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1059  8C2E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1060  8C2E
1061  8C2E              Calcula_numero_de_malotes
1062  8C2E
1063  8C2E 21 00 70     	ld hl,Album_de_fotos
1064  8C31 EB           	ex de,hl
1065  8C32 2A 1F 89     	ld hl,(End_Snapshot)
1066  8C35
1067  8C35 7C           	ld a,h
1068  8C36 A7           	and a
1069  8C37 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1070  8C39
1071  8C39 06 00        4 ld b,0
1072  8C3B 7D           	ld a,l
1073  8C3C 93           	sub e
1074  8C3D 28 07        	jr z,1F
1075  8C3F
1076  8C3F              ; Nº de malotes no es "0".
1077  8C3F
1078  8C3F D6 06        2 sub 6
1079  8C41 04           	inc b
1080  8C42 A7           	and a
1081  8C43 20 FA        	jr nz,2B
1082  8C45 78           	ld a,b
1083  8C46
1084  8C46 32 10 89     1 ld (Numero_de_malotes),a
1085  8C49 C9           	ret
1086  8C4A
1087  8C4A              ; -------------------------------------------------------------------------------------------------------------
1088  8C4A              ;
1089  8C4A              ; 8/9/23
1090  8C4A              ;
1091  8C4A
1092  8C4A              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1093  8C4A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1094  8C4A
1095  8C4A              Calcula_malotes_Amadeus
1096  8C4A
1097  8C4A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1098  8C4D EB           	ex de,hl
1099  8C4E 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1100  8C51
1101  8C51 7C           	ld a,h
1102  8C52 A7           	and a
1103  8C53 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1104  8C55
1105  8C55 06 00        	ld b,0
1106  8C57 7D           	ld a,l
1107  8C58 93           	sub e
1108  8C59 28 07        	jr z,1F
1109  8C5B
1110  8C5B              ; Nº de malotes no es "0".
1111  8C5B
1112  8C5B D6 06        2 sub 6
1113  8C5D 04           	inc b
1114  8C5E A7           	and a
1115  8C5F 20 FA        	jr nz,2B
1116  8C61 78           	ld a,b
1117  8C62
1118  8C62 32 10 89     1 ld (Numero_de_malotes),a
1119  8C65 C9           	ret
1120  8C66
1121  8C66              ; -------------------------------------------------------------------------------------------------------------
1122  8C66              ;
1123  8C66              ; 28/2/23
1124  8C66              ;
1125  8C66
1126  8C66              Calcula_numero_de_disparotes
1127  8C66
1128  8C66 21 50 71     	ld hl,Album_de_fotos_disparos
1129  8C69 EB           	ex de,hl
1130  8C6A 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1131  8C6D
1132  8C6D 06 00        	ld b,0
1133  8C6F 7D           	ld a,l
1134  8C70 93           	sub e
1135  8C71 28 07        	jr z,1F
1136  8C73
1137  8C73              ; Nº de malotes no es "0".
1138  8C73
1139  8C73 D6 06        2 sub 6
1140  8C75 04           	inc b
1141  8C76 A7           	and a
1142  8C77 20 FA        	jr nz,2B
1143  8C79 78           	ld a,b
1144  8C7A
1145  8C7A 32 3E 89     1 ld (Numero_de_disparotes),a
1146  8C7D C9           	ret
1147  8C7E
1148  8C7E              ; *************************************************************************************************************************************************************
1149  8C7E              ;
1150  8C7E              ; 20/10/22
1151  8C7E              ;
1152  8C7E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1153  8C7E              ;
1154  8C7E              ; Destruye el puntero y DE !!!!!
1155  8C7E
1156  8C7E 5E           Extrae_address ld e,(hl)
1157  8C7F 23           	inc hl
1158  8C80 56           	ld d,(hl)
1159  8C81 2B           	dec hl
1160  8C82 EB           	ex de,hl
1161  8C83 C9           	ret
1162  8C84
1163  8C84              ; *************************************************************************************************************************************************************
1164  8C84              ;
1165  8C84              ;	7/2/23
1166  8C84              ;
1167  8C84              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1168  8C84              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1169  8C84              ;
1170  8C84              ;   Destruye HL y BC !!!!!,
1171  8C84              ;
1172  8C84              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1173  8C84              ;					"0" ..... Izquierda.
1174  8C84
1175  8C84              Inicia_Puntero_objeto
1176  8C84
1177  8C84 3A DA 88     	ld a,(Cuad_objeto)
1178  8C87 E6 01        	and 1
1179  8C89 F5           	push af
1180  8C8A CC A8 8C     	call z,Inicia_puntero_objeto_izq
1181  8C8D F1           	pop af
1182  8C8E 28 2B        	jr z,1F
1183  8C90 CD 95 8C     	call Inicia_puntero_objeto_der
1184  8C93 18 26        	jr 1F
1185  8C95
1186  8C95              ; Arrancamos desde la parte izquierda de la pantalla.
1187  8C95              ; Iniciamos (Indice_Sprite_der).
1188  8C95
1189  8C95 2A D0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1190  8C98 22 D4 88     	ld (Puntero_DESPLZ_der),hl
1191  8C9B CD 7E 8C     	call Extrae_address
1192  8C9E 22 CA 88     	ld (Puntero_objeto),hl
1193  8CA1
1194  8CA1 2A D2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1195  8CA4 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1196  8CA7 C9           	ret
1197  8CA8
1198  8CA8              ; Arrancamos desde la parte derecha de la pantalla.
1199  8CA8              ; Iniciamos (Indice_Sprite_izq).
1200  8CA8
1201  8CA8 2A D2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1202  8CAB 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
1203  8CAE CD 7E 8C     	call Extrae_address
1204  8CB1 22 CA 88     	ld (Puntero_objeto),hl
1205  8CB4
1206  8CB4 2A D0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1207  8CB7 22 D4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1208  8CBA C9           	ret
1209  8CBB
1210  8CBB              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1211  8CBB
1212  8CBB 21 40 83     1 ld hl,Amadeus
1213  8CBE ED 4B CA 88  	ld bc,(Puntero_objeto)
1214  8CC2 B7 ED 42     	sub hl,bc
1215  8CC5 C0           	ret nz
1216  8CC6 21 F0 88     	ld hl,Ctrl_0
1217  8CC9 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1218  8CCB C9           	ret 												; _de nuestra nave en los extremos.
1219  8CCC
1220  8CCC              ; *************************************************************************************************************************************************************
1221  8CCC              ;
1222  8CCC              ;	14/5/23
1223  8CCC              ;
1224  8CCC              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1225  8CCC              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1226  8CCC
1227  8CCC              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1228  8CCC              ;	_de la 2ª y 3ª entidad respectivamente.
1229  8CCC
1230  8CCC              Store_Restore_cajas
1231  8CCC
1232  8CCC E5           	push hl
1233  8CCD D5           	push de
1234  8CCE C5            	push bc
1235  8CCF
1236  8CCF              ;	STORE !!!!!
1237  8CCF              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1238  8CCF
1239  8CCF 21 C6 88     	ld hl,Filas
1240  8CD2 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1241  8CD6 01 3D 00     	ld bc,61
1242  8CD9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1243  8CDB
1244  8CDB              ; 	Entidad_sospechosa. 20/4/23
1245  8CDB
1246  8CDB 3A DF 88     	ld a,(Impacto)
1247  8CDE A7           	and a
1248  8CDF 28 0C        	jr z,1F
1249  8CE1
1250  8CE1 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1251  8CE4 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1252  8CE7 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1253  8CE8 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1254  8CEA 22 44 89     	ld (Entidad_sospechosa_de_colision),hl
1255  8CED
1256  8CED              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1257  8CED
1258  8CED 2A 09 89     1 ld hl,(Puntero_restore_caja)
1259  8CF0 7E           	ld a,(hl)
1260  8CF1 A7           	and a
1261  8CF2 F5           	push af
1262  8CF3 28 08        	jr z,2F
1263  8CF5
1264  8CF5 11 C6 88     	ld de,Filas
1265  8CF8 01 3D 00     	ld bc,61
1266  8CFB ED B0        	ldir
1267  8CFD
1268  8CFD CD 19 8D     2 call Incrementa_punteros_de_cajas
1269  8D00
1270  8D00 F1           	pop af
1271  8D01 28 EA        	jr z,1B
1272  8D03
1273  8D03 C1           	pop bc
1274  8D04 D1           	pop de
1275  8D05 E1           	pop hl
1276  8D06
1277  8D06 C9           	ret
1278  8D07
1279  8D07              ; **************************************************************************************************
1280  8D07              ;
1281  8D07              ;	12/05/23
1282  8D07              ;
1283  8D07              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1284  8D07
1285  8D07 E5           Restore_entidad push hl
1286  8D08 D5           	push de
1287  8D09 C5            	push bc
1288  8D0A
1289  8D0A 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1290  8D0D 11 C6 88     	ld de,Filas
1291  8D10 01 3D 00     	ld bc,61
1292  8D13 ED B0        	ldir
1293  8D15
1294  8D15 C1           	pop bc
1295  8D16 D1           	pop de
1296  8D17 E1           	pop hl
1297  8D18 C9           	ret
1298  8D19
1299  8D19              ; **************************************************************************************************
1300  8D19              ;
1301  8D19              ;	08/05/23
1302  8D19              ;
1303  8D19              ;	Incrementamos los dos punteros de entidades. (+1).
1304  8D19
1305  8D19              Incrementa_punteros_de_cajas
1306  8D19
1307  8D19 2A 09 89     	ld hl,(Puntero_restore_caja)
1308  8D1C 22 07 89     	ld (Puntero_store_caja),hl
1309  8D1F 2A 0B 89     	ld hl,(Indice_restore_caja)
1310  8D22 23           	inc hl
1311  8D23 23           	inc hl
1312  8D24 22 0B 89     	ld (Indice_restore_caja),hl
1313  8D27 CD 7E 8C         call Extrae_address
1314  8D2A 22 09 89         ld (Puntero_restore_caja),hl
1315  8D2D C9               ret
1316  8D2E
1317  8D2E              ; **************************************************************************************************
1318  8D2E              ;
1319  8D2E              ;	25/01/23
1320  8D2E              ;
1321  8D2E              ;	Restore_Amadeus
1322  8D2E              ;
1323  8D2E              ;	Cargamos en DRAW los parámetros de Amadeus.
1324  8D2E              ;
1325  8D2E
1326  8D2E E5           Restore_Amadeus	push hl
1327  8D2F D5           	push de
1328  8D30 C5            	push bc
1329  8D31 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1330  8D34 11 C6 88     	ld de,Filas
1331  8D37 01 3D 00     	ld bc,61
1332  8D3A ED B0        	ldir
1333  8D3C C1           	pop bc
1334  8D3D D1           	pop de
1335  8D3E E1           	pop hl
1336  8D3F C9           	ret
1337  8D40
1338  8D40              ; *************************************************************************************************************************************************************
1339  8D40              ;
1340  8D40              ;	29/04/23
1341  8D40              ;
1342  8D40              ;	Store_Amadeus
1343  8D40              ;
1344  8D40              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1345  8D40              ;
1346  8D40              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1347  8D40              ;
1348  8D40              ;	DESTRUYE: HL y BC y DE.
1349  8D40
1350  8D40 21 C6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1351  8D43 01 3D 00     	ld bc,61
1352  8D46 ED B0        	ldir
1353  8D48 C9           	ret
1354  8D49
1355  8D49              ; -----------------------------------------------------------
1356  8D49              ;
1357  8D49              ;	27/04/23
1358  8D49              ;
1359  8D49              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1360  8D49              ;
1361  8D49              ;	Destruye: HL,BC,DE,A
1362  8D49
1363  8D49 21 C6 88     Borra_datos_entidad ld hl,Filas
1364  8D4C 01 3C 00     	ld bc,60
1365  8D4F AF           	xor a
1366  8D50 77           	ld (hl),a
1367  8D51 11 C7 88     	ld de,Filas+1
1368  8D54 ED B0        	ldir
1369  8D56 C9           	ret
1370  8D57
1371  8D57              ; -----------------------------------------------------------
1372  8D57
1373  8D57              ; Teclado.
1374  8D57
1375  8D57 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1376  8D59 DB FE        	in a,($fe)
1377  8D5B E6 01        	and $01
1378  8D5D 28 02        	jr z,1f
1379  8D5F 18 F6        	jr Pulsa_ENTER
1380  8D61 C9           1 ret
1381  8D62
1382  8D62              ; **************************************************************************************************
1383  8D62              ;
1384  8D62              ; Temporización.
1385  8D62
1386  8D62              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1387  8D62              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1388  8D62              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1389  8D62              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1390  8D62
1391  8D62              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1392  8D62              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1393  8D62              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1394  8D62
1395  8D62              ; A partir de $4f61 no hace falta DELAY.
1396  8D62
1397  8D62              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1398  8D62
1399  8D62 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1400  8D65 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1401  8D66 78           	LD A,B
1402  8D67 A7           	AND A
1403  8D68 20 FB        	JR NZ,wait
1404  8D6A C9           	RET
1405  8D6B
1406  8D6B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1407  8D6B              ;
1408  8D6B              ;	5/3/23
1409  8D6B              ;
1410  8D6B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1411  8D6B
1412  8D6B              Movimiento_Amadeus
1413  8D6B
1414  8D6B              ; Disparo.
1415  8D6B
1416  8D6B 3A 56 89     	ld a,(Disparo_Amadeus)
1417  8D6E A7           	and a
1418  8D6F 20 02        	jr nz,1F
1419  8D71 18 15        	jr 2F
1420  8D73
1421  8D73 3E F7        1 ld a,$f7													; "5" para disparar.
1422  8D75 DB FE        	in a,($fe)
1423  8D77 E6 10        	and $10
1424  8D79
1425  8D79 F5           	push af
1426  8D7A CC 65 8E     	call z,Genera_disparo
1427  8D7D F1           	pop af
1428  8D7E 20 08        	jr nz,2F
1429  8D80
1430  8D80 3A 56 89     	ld a,(Disparo_Amadeus)
1431  8D83 EE 01        	xor 1
1432  8D85 32 56 89     	ld (Disparo_Amadeus),a
1433  8D88
1434  8D88 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1435  8D8A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1436  8D8C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1437  8D8E CC 36 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1438  8D91
1439  8D91 3E F7        	ld a,$f7
1440  8D93 DB FE        	in a,($fe)
1441  8D95 E6 01        	and $01
1442  8D97 C8           	ret z
1443  8D98
1444  8D98 3E F7        	ld a,$f7
1445  8D9A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1446  8D9C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1447  8D9E CC 18 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1448  8DA1 C9           	ret
1449  8DA2
1450  8DA2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1451  8DA2              ;
1452  8DA2              ;	Rutina provisional para que los malotes cagen balas.
1453  8DA2
1454  8DA2              Detecta_disparo_entidad
1455  8DA2
1456  8DA2 3A 59 89     	ld a,(Disparo_entidad)
1457  8DA5 A7           	and a
1458  8DA6 C8           	ret z
1459  8DA7
1460  8DA7              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1461  8DA7
1462  8DA7              ;	ld a,$7f				; Detecta SPACE.
1463  8DA7              ;	in a,($fe)
1464  8DA7              ;	and 1
1465  8DA7              ;	ret nz
1466  8DA7
1467  8DA7              ;	call Genera_disparo
1468  8DA7 C9           	ret
1469  8DA8
1470  8DA8              ; ----------------------------------------------------------------------
1471  8DA8              ;
1472  8DA8              ;	8/9/23
1473  8DA8
1474  8DA8 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1475  8DAB 2B            	dec hl
1476  8DAC 7E           	ld a,(hl)
1477  8DAD A7           	and a
1478  8DAE C8           	ret z										; Salimos si es álbum está vacío.
1479  8DAF
1480  8DAF 11 E5 88     	ld de,Variables_de_borrado+5
1481  8DB2 01 06 00     	ld bc,6
1482  8DB5 ED B8        	lddr
1483  8DB7 C9           	ret
1484  8DB8
1485  8DB8              ; ----------------------------------------------------------------------
1486  8DB8              ;
1487  8DB8              ;	9/9/23
1488  8DB8
1489  8DB8              Repone_datos_de_borrado_Amadeus
1490  8DB8
1491  8DB8 21 E0 88     	ld hl,Variables_de_borrado
1492  8DBB 11 A0 72     	ld de,Album_de_fotos_Amadeus
1493  8DBE 01 06 00     	ld bc,6
1494  8DC1 ED B0        	ldir
1495  8DC3
1496  8DC3 EB           	ex de,hl
1497  8DC4 22 23 89     	ld (End_Snapshot_Amadeus),hl
1498  8DC7
1499  8DC7 C9           	ret
1500  8DC8
1501  8DC8              ; ----------------------------------------------------------------------
1502  8DC8              ;
1503  8DC8              ;	18/9/23
1504  8DC8              ;
1505  8DC8
1506  8DC8              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1507  8DC8              ;	_ Album_de_fotos correspondiente.
1508  8DC8
1509  8DC8              ;	DI.
1510  8DC8
1511  8DC8              Repone_datos_de_borrado
1512  8DC8
1513  8DC8 ED 5B 1B 89  	ld de,(Stack_snapshot)
1514  8DCC 21 E0 88     	ld hl,Variables_de_borrado
1515  8DCF 01 06 00     	ld bc,6
1516  8DD2 ED B0        	ldir
1517  8DD4
1518  8DD4 EB           	ex de,hl
1519  8DD5 22 1B 89     	ld (Stack_snapshot),hl
1520  8DD8
1521  8DD8 C9           	ret
1522  8DD9
1523  8DD9              ; ----------------------------------------------------------------------
1524  8DD9              ;
1525  8DD9              ;	11/8/23
1526  8DD9
1527  8DD9              Gestiona_entidades
1528  8DD9
1529  8DD9              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1530  8DD9              ; _ , no gestionamos los álbumes de fotos.
1531  8DD9
1532  8DD9 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1533  8DDC 01 EC 84     	ld bc,Indice_album_de_fotos
1534  8DDF A7           	and a
1535  8DE0 ED 42        	sbc hl,bc
1536  8DE2
1537  8DE2 28 FE        	jr z,$	;! STOP el buffer está vacío. Album_de_fotos no está completo.
1538  8DE4 C8           	ret z
1539  8DE5
1540  8DE5              ;	call Extrae_foto_disparos
1541  8DE5              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1542  8DE5
1543  8DE5 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1544  8DE8
1545  8DE8              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1546  8DE8
1547  8DE8 3A 03 89     	ld a,(Ctrl_1)
1548  8DEB CB 6F        	bit 5,a
1549  8DED 20 22        	jr nz,1F
1550  8DEF
1551  8DEF              ; No hemos terminado de guardar el último FRAME.
1552  8DEF
1553  8DEF 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1554  8DF2 2B           	dec hl
1555  8DF3 2B           	dec hl
1556  8DF4 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1557  8DF7
1558  8DF7 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1559  8DFA 2B           	dec hl
1560  8DFB 2B           	dec hl
1561  8DFC 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1562  8DFF CD 7E 8C     	call Extrae_address
1563  8E02 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1564  8E05
1565  8E05 CD 7E 8C     	call Extrae_address
1566  8E08
1567  8E08              ; Esta vacío este album???
1568  8E08
1569  8E08 24           	inc h
1570  8E09 25           	dec h
1571  8E0A 28 05        	jr z,1F
1572  8E0C
1573  8E0C              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1574  8E0C
1575  8E0C 22 1B 89     	ld (Stack_snapshot),hl
1576  8E0F 18 09        	jr 2F
1577  8E11
1578  8E11              ; FRAME completo.
1579  8E11
1580  8E11 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1581  8E14 CD 7E 8C     	call Extrae_address
1582  8E17 22 1B 89     	ld (Stack_snapshot),hl
1583  8E1A
1584  8E1A              ;	En este punto:
1585  8E1A
1586  8E1A              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1587  8E1A              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1588  8E1A
1589  8E1A 21 03 89     2 ld hl,Ctrl_1
1590  8E1D CB AE        	res 5,(hl)
1591  8E1F
1592  8E1F C9           	ret
1593  8E20
1594  8E20              ; -----------------------------------------------------------------------------------
1595  8E20
1596  8E20              Pinta_Amadeus
1597  8E20
1598  8E20 3E 06        	ld a,6
1599  8E22 D3 FE            out ($fe),a										; Amarillo
1600  8E24
1601  8E24 CD 4A 8C        	call Calcula_malotes_Amadeus
1602  8E27 CD EB 96     	call Extrae_foto_Amadeus
1603  8E2A CD 06 8C     	call Limpia_album_Amadeus
1604  8E2D
1605  8E2D C9           	ret
1606  8E2E
1607  8E2E              Pinta_entidades
1608  8E2E
1609  8E2E 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1610  8E31 01 EC 84     	ld bc,Indice_album_de_fotos
1611  8E34 A7           	and a
1612  8E35 ED 42        	sbc hl,bc
1613  8E37
1614  8E37              ;	jr z,$
1615  8E37 C8           	ret z
1616  8E38
1617  8E38              ; Pintamos siempre que esté completo Album_de_fotos.
1618  8E38
1619  8E38 CD 2E 8C     	call Calcula_numero_de_malotes
1620  8E3B CD 69 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1621  8E3E
1622  8E3E C9           	ret
1623  8E3F
1624  8E3F              ; -----------------------------------------------------------------------------------
1625  8E3F
1626  8E3F              Actualiza_relojes
1627  8E3F
1628  8E3F 21 51 89     	ld hl,Contador_de_frames
1629  8E42 7E           	ld a,(hl)
1630  8E43 FE FF        	cp $ff
1631  8E45 20 04        	jr nz,1F
1632  8E47 34           	inc (hl)
1633  8E48 21 52 89     	ld hl,Contador_de_frames_2
1634  8E4B 34           1 inc (hl)											; 0 - 255
1635  8E4C C9           	ret
1636  8E4D
1637  8E4D              ; ---------------------------------------------------------------
1638  8E4D              ;
1639  8E4D              ;	27/9/23
1640  8E4D
1641  8E4D              Guarda_parametros_DRAW
1642  8E4D
1643  8E4D 21 C6 88     	ld hl,Filas
1644  8E50 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1645  8E53 01 3D 00     	ld bc,61
1646  8E56 ED B0        	ldir
1647  8E58 C9           	ret
1648  8E59
1649  8E59              Recupera_parametros_DRAW
1650  8E59
1651  8E59 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1652  8E5C 11 C6 88     	ld de,Filas
1653  8E5F 01 3D 00     	ld bc,61
1654  8E62 ED B0        	ldir
1655  8E64 C9           	ret
1656  8E65
1657  8E65              ; ---------------------------------------------------------------
1658  8E65
1659  8E65
1660  8E65              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E65              ; ******************************************************************************************************************************************************************************************
   2+ 8E65              ;
   3+ 8E65              ;   21/07/23
   4+ 8E65              ;
   5+ 8E65              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E65              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E65              ;
   8+ 8E65              ;
   9+ 8E65              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E65              ;
  11+ 8E65              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E65              ;               _ hacen las entidades hacia abajo.
  13+ 8E65              ;
  14+ 8E65              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E65              ;
  16+ 8E65              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E65              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E65              ;
  19+ 8E65              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E65              ;           _ la bala.
  21+ 8E65              ;
  22+ 8E65              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E65              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E65              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E65              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E65              ;           _ en el momento de generarse la bala)).
  27+ 8E65
  28+ 8E65              Genera_disparo
  29+ 8E65
  30+ 8E65              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E65              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E65              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E65              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E65              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E65              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E65              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E65
  38+ 8E65              ; Exclusiones:
  39+ 8E65
  40+ 8E65 3A DE 88         ld a,(Vel_down)
  41+ 8E68 47               ld b,a
  42+ 8E69 3A 50 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E6C B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E6D D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E6E 3A FD 88         ld a,(Columnas)
  46+ 8E71 47               ld b,a
  47+ 8E72 3A C7 88         ld a,(Columns)
  48+ 8E75 B8               cp b
  49+ 8E76 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E77
  51+ 8E77              ; ----- ----- -----
  52+ 8E77
  53+ 8E77 3A F0 88         ld a,(Ctrl_0)
  54+ 8E7A CB 77            bit 6,a
  55+ 8E7C 20 06            jr nz,14F
  56+ 8E7E
  57+ 8E7E 3A CD 88         ld a,(Coordenada_y)
  58+ 8E81 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E83 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E84
  61+ 8E84 21 00 80     14 ld hl,Indice_disparo
  62+ 8E87 3A CE 88         ld a,(CTRL_DESPLZ)
  63+ 8E8A 4F               ld c,a
  64+ 8E8B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E8D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E8D              ;                                            ""        ""       "f9", B="1"
  67+ 8E8D              ;                                            ""        ""       "fb", B="2"
  68+ 8E8D              ;                                            ""        ""       "fb", B="3"
  69+ 8E8D A7               and a
  70+ 8E8E 28 10            jr z,1F
  71+ 8E90 E6 01            and 1
  72+ 8E92 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E93
  74+ 8E93 79               ld a,c
  75+ 8E94 16 F9            ld d,$f9
  76+ 8E96 23           2 inc hl
  77+ 8E97 23               inc hl
  78+ 8E98 04               inc b
  79+ 8E99 BA               cp d
  80+ 8E9A 28 04            jr z,1F
  81+ 8E9C 14               inc d
  82+ 8E9D 14               inc d
  83+ 8E9E 18 F6            jr 2B
  84+ 8EA0
  85+ 8EA0 CD 7E 8C     1 call Extrae_address
  86+ 8EA3 E5               push hl
  87+ 8EA4 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EA6 DD 21 31 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EAA
  90+ 8EAA              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EAA              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EAA
  93+ 8EAA 3A F0 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EAD CB 77            bit 6,a
  95+ 8EAF 20 04            jr nz,19F
  96+ 8EB1
  97+ 8EB1 AF               xor a
  98+ 8EB2 32 59 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EB5
 100+ 8EB5 3A DA 88     19 ld a,(Cuad_objeto)
 101+ 8EB8 FE 02            cp 2
 102+ 8EBA 38 66            jr c,3F
 103+ 8EBC 28 64            jr z,3F
 104+ 8EBE
 105+ 8EBE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EBE
 107+ 8EBE E6 01            and 1
 108+ 8EC0 28 30            jr z,4F
 109+ 8EC2
 110+ 8EC2              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EC2              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EC2              ;
 113+ 8EC2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EC2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EC2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EC2
 117+ 8EC2 2A C8 88     	ld hl,(Posicion_actual)
 118+ 8EC5
 119+ 8EC5              ;   Amadeus o entidad ???.
 120+ 8EC5
 121+ 8EC5 3A F0 88         ld a,(Ctrl_0)
 122+ 8EC8 CB 77            bit 6,a
 123+ 8ECA 28 0A            jr z,8F
 124+ 8ECC
 125+ 8ECC              ; 	Dispara Amadeus.
 126+ 8ECC
 127+ 8ECC 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8ECE CD 5A 96         call PreviousScan
 129+ 8ED1 CD 5A 96         call PreviousScan
 130+ 8ED4
 131+ 8ED4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8ED4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8ED4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8ED4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8ED4
 136+ 8ED4 18 11            jr 10F
 137+ 8ED6
 138+ 8ED6              ; 	Dispara Entidad.
 139+ 8ED6
 140+ 8ED6 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8ED9              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8ED9
 143+ 8ED9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8ED9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8ED9
 146+ 8ED9 C5               push bc
 147+ 8EDA 06 10            ld b,16
 148+ 8EDC CD 4B 96     9 call NextScan
 149+ 8EDF 10 FB            djnz 9B
 150+ 8EE1 C1               pop bc
 151+ 8EE2 CD 4C 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EE5 18 06            jr 17F
 153+ 8EE7
 154+ 8EE7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EE7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EE7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EE7
 159+ 8EE7 CD 4C 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EEA CD C1 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EED              ;                                                      ; _al generar el disparo.
 162+ 8EED
 163+ 8EED              ; 	LLegados a este punto tendremos:
 164+ 8EED              ;
 165+ 8EED              ;       Puntero_objeto_disparo en IY.
 166+ 8EED              ;       Rutinas_de_impresion en IX.
 167+ 8EED              ;       Puntero_de_impresion en HL.
 168+ 8EED              ;       Impacto/Dirección en BC.
 169+ 8EED
 170+ 8EED CD 54 8F     17 call Almacena_disparo
 171+ 8EF0 18 52            jr 6F                                             ; RET.
 172+ 8EF2
 173+ 8EF2              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EF2              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EF2              ;
 176+ 8EF2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EF2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EF2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EF2
 180+ 8EF2 2A C8 88     4 ld hl,(Posicion_actual)
 181+ 8EF5
 182+ 8EF5              ;   Amadeus o entidad ???.
 183+ 8EF5
 184+ 8EF5 3A F0 88         ld a,(Ctrl_0)
 185+ 8EF8 CB 77            bit 6,a
 186+ 8EFA 28 0A            jr z,11F
 187+ 8EFC
 188+ 8EFC              ; 	Dispara Amadeus.
 189+ 8EFC
 190+ 8EFC 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EFE CD 5A 96         call PreviousScan
 192+ 8F01 CD 5A 96         call PreviousScan
 193+ 8F04
 194+ 8F04              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F04              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F04              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F04              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F04
 199+ 8F04 18 11            jr 13F
 200+ 8F06
 201+ 8F06              ; 	Dispara Entidad.
 202+ 8F06
 203+ 8F06 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F09              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F09
 206+ 8F09              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F09              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F09
 209+ 8F09 C5               push bc
 210+ 8F0A 06 10            ld b,16
 211+ 8F0C CD 4B 96     12 call NextScan
 212+ 8F0F 10 FB            djnz 12B
 213+ 8F11 C1               pop bc
 214+ 8F12
 215+ 8F12 CD 45 8F         call Ajusta_disparo_parte_derecha
 216+ 8F15 18 06            jr 18F
 217+ 8F17
 218+ 8F17              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F17              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F17              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F17
 223+ 8F17 CD 45 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F1A CD C1 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F1D              ;                                                       ; _al generar el disparo.
 226+ 8F1D
 227+ 8F1D              ; LLegados a este punto tendremos:
 228+ 8F1D              ;
 229+ 8F1D              ;       Puntero_objeto_disparo en IY.
 230+ 8F1D              ;       Rutinas_de_impresion en IX.
 231+ 8F1D              ;       Puntero_de_impresion en HL.
 232+ 8F1D              ;       Impacto/Dirección en BC.
 233+ 8F1D
 234+ 8F1D CD 54 8F     18 call Almacena_disparo
 235+ 8F20 18 22            jr 6F                                               ; RET.
 236+ 8F22
 237+ 8F22              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F22
 239+ 8F22 28 11        3 jr z,5F
 240+ 8F24
 241+ 8F24              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F24              ;
 243+ 8F24              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F24              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F24              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F24              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F24
 248+ 8F24              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F24              ;	   ""        ""       "f9", B="1"
 250+ 8F24              ;	   ""        ""       "fb", B="2"
 251+ 8F24              ; 	   ""        ""       "fb", B="3"
 252+ 8F24
 253+ 8F24 2A C8 88     	ld hl,(Posicion_actual)
 254+ 8F27 CD 4B 96     	call NextScan
 255+ 8F2A
 256+ 8F2A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F2A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F2A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F2A
 261+ 8F2A CD 4C 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F2D
 263+ 8F2D              ; 	No se produce impacto. B="$80"
 264+ 8F2D              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F2D
 266+ 8F2D 01 80 80         ld bc,$8080
 267+ 8F30
 268+ 8F30              ; 	LLegados a este punto tendremos:
 269+ 8F30              ;
 270+ 8F30              ;       Puntero_objeto_disparo en IY.
 271+ 8F30              ;       Rutinas_de_impresion en IX.
 272+ 8F30              ;       Puntero_de_impresion en HL.
 273+ 8F30              ;       Impacto/Dirección en BC.
 274+ 8F30
 275+ 8F30 CD 54 8F         call Almacena_disparo
 276+ 8F33 18 0F            jr 6F                                           ; RET.
 277+ 8F35
 278+ 8F35              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F35              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F35              ;
 281+ 8F35              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F35              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F35              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F35              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F35
 286+ 8F35 2A C8 88     5 ld hl,(Posicion_actual)
 287+ 8F38 CD 4B 96     	call NextScan
 288+ 8F3B
 289+ 8F3B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F3B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F3B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F3B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F3B
 294+ 8F3B CD 45 8F         call Ajusta_disparo_parte_derecha
 295+ 8F3E
 296+ 8F3E              ; 	No se produce impacto. B="$80"
 297+ 8F3E              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F3E
 299+ 8F3E 01 80 80     15 ld bc,$8080
 300+ 8F41
 301+ 8F41              ; 	LLegados a este punto tendremos:
 302+ 8F41              ;
 303+ 8F41              ;       Puntero_objeto_disparo en IY.
 304+ 8F41              ;       Rutinas_de_impresion en IX.
 305+ 8F41              ;       Puntero_de_impresion en HL.
 306+ 8F41              ;       Impacto/Dirección en BC.
 307+ 8F41
 308+ 8F41 CD 54 8F         call Almacena_disparo
 309+ 8F44
 310+ 8F44 C9           6 ret
 311+ 8F45
 312+ 8F45              ; ----------------------------------------------------------------
 313+ 8F45              ;
 314+ 8F45              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F45              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F45              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F45
 318+ 8F45 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F46 FE 02            cp 2
 320+ 8F48 38 01            jr c,1F
 321+ 8F4A 23               inc hl
 322+ 8F4B C9           1 ret
 323+ 8F4C
 324+ 8F4C 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F4D FE 01        	cp 1
 326+ 8F4F 20 01        	jr nz,1F
 327+ 8F51 2B           	dec hl
 328+ 8F52 2B           1 dec hl
 329+ 8F53 C9               ret
 330+ 8F54
 331+ 8F54              ; ----------------------------------------------------------------
 332+ 8F54              ;
 333+ 8F54              ;   25/02/23
 334+ 8F54              ;
 335+ 8F54              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F54              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F54              ;
 338+ 8F54              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F54              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F54
 341+ 8F54              Almacena_disparo
 342+ 8F54
 343+ 8F54 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F55 F1               pop af
 345+ 8F56 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F57
 347+ 8F57 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F58 E6 01            and 1
 349+ 8F5A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F5C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F5C              ; 	Dispara AMADEUS.
 352+ 8F5C
 353+ 8F5C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F5C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F5C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F5C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F5C
 358+ 8F5C C5               push bc
 359+ 8F5D 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F60 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F63 A7               and a
 362+ 8F64 ED 42            sbc hl,bc
 363+ 8F66 CC FF 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F69 C1               pop bc
 365+ 8F6A 28 54            jr z,4F
 366+ 8F6C
 367+ 8F6C 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F6F 23               inc hl
 369+ 8F70 23               inc hl
 370+ 8F71 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F74              ;                                                   ; _ Disparo_(+1).
 372+ 8F74 18 18            jr 2F
 373+ 8F76
 374+ 8F76              ; Dispara una entidad.
 375+ 8F76
 376+ 8F76 C5           1 push bc
 377+ 8F77 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F7A 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F7D A7               and a
 380+ 8F7E ED 42            sbc hl,bc
 381+ 8F80 CC F8 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F83 C1               pop bc
 383+ 8F84 28 3A            jr z,4F
 384+ 8F86
 385+ 8F86 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F89 23               inc hl
 387+ 8F8A 23               inc hl
 388+ 8F8B 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F8E              ;                                                   ; _ Disparo_(+1).
 390+ 8F8E CD 7E 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F91              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F91              ;
 393+ 8F91              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F91              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F91              ;                                                     Puntero_de_impresion en HL.
 396+ 8F91              ;                                                     Impacto/Dirección en BC.
 397+ 8F91
 398+ 8F91 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F92 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F93 23               inc hl                                          ; _ al siguiente.
 401+ 8F94 A7               and a
 402+ 8F95 20 C0            jr nz,3B
 403+ 8F97
 404+ 8F97 08               ex af,af
 405+ 8F98 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F9C F9               ld sp,hl
 407+ 8F9D
 408+ 8F9D DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F9F F5               push af                                         ; Puntero de impresión.
 410+ 8FA0 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FA2 C5               push bc                                         ; Control.
 412+ 8FA3
 413+ 8FA3 ED 7B 15 89      ld sp,(Stack)
 414+ 8FA7
 415+ 8FA7              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FA7
 417+ 8FA7 21 03 89     	ld hl,Ctrl_1
 418+ 8FAA CB C6        	set 0,(hl)
 419+ 8FAC
 420+ 8FAC DD E5        	push ix
 421+ 8FAE E1               pop hl
 422+ 8FAF F5               push af
 423+ 8FB0 DD E1            pop ix
 424+ 8FB2
 425+ 8FB2 CD A0 7F     	call Guarda_foto_registros
 426+ 8FB5
 427+ 8FB5 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FB8 CB 86        	res 0,(hl)
 429+ 8FBA
 430+ 8FBA              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FBA              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FBA
 433+ 8FBA CD FF 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FBD CD F8 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8FC0
 436+ 8FC0 C9           4 ret
 437+ 8FC1
 438+ 8FC1              ; ----------------------------------------------------------------
 439+ 8FC1              ;
 440+ 8FC1              ;   4/3/23
 441+ 8FC1              ;
 442+ 8FC1              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FC1              ;   _ al generarse el disparo.
 444+ 8FC1              ;
 445+ 8FC1              ;       "$80" ..... No se produce colisión.
 446+ 8FC1              ;       "$81" ..... Se produce colisión.
 447+ 8FC1              ;
 448+ 8FC1              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FC1              ;         _ que forman el disparo.
 450+ 8FC1
 451+ 8FC1
 452+ 8FC1              Comprueba_Colision
 453+ 8FC1
 454+ 8FC1              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FC1
 456+ 8FC1 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FC3 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FC4
 459+ 8FC4 CD FA 8F         call Modifica_H_Velocidad_disparo
 460+ 8FC7
 461+ 8FC7 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FC8 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FCA 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FCC
 465+ 8FCC 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FCE CD EA 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FD1
 468+ 8FD1 7B               ld a,e
 469+ 8FD2 E6 01            and 1
 470+ 8FD4 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FD6              ;                                                  ; _ para activar IMPACTO.
 472+ 8FD6 E1               pop hl
 473+ 8FD7 E5               push hl
 474+ 8FD8 CD 4B 96         call NextScan
 475+ 8FDB
 476+ 8FDB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FDC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FDE 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FE0              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FE0 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FE2 CD EA 8F         call Bucle_2
 482+ 8FE5
 483+ 8FE5 43           1 ld b,e
 484+ 8FE6 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FE7 FD E1            pop iy
 486+ 8FE9 C9               ret
 487+ 8FEA
 488+ 8FEA              ; ---------- ----------
 489+ 8FEA
 490+ 8FEA 06 02        Bucle_2 ld b,2
 491+ 8FEC FD 7E 00     2 ld a,(iy)
 492+ 8FEF A6               and (hl)
 493+ 8FF0 28 02            jr z,1F
 494+ 8FF2 1E 81            ld e,$81
 495+ 8FF4 23           1 inc hl
 496+ 8FF5 FD 23            inc iy
 497+ 8FF7 10 F3            djnz 2B
 498+ 8FF9 C9               ret
 499+ 8FFA
 500+ 8FFA              ; ---------- ----------
 501+ 8FFA              ;
 502+ 8FFA              ;   21/7/23
 503+ 8FFA
 504+ 8FFA              Modifica_H_Velocidad_disparo
 505+ 8FFA
 506+ 8FFA 3A 50 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FFD FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FFF D0               ret nc                                         ; _ incrementamos H.
 509+ 9000 24               inc h
 510+ 9001
 511+ 9001 C9               ret
 512+ 9002
 513+ 9002              ; -------------------------------------------------------------------------------------------------------------
 514+ 9002              ;
 515+ 9002              ;   11/04/23
 516+ 9002              ;
 517+ 9002              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9002              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9002              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9002              ;
 521+ 9002              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9002
 523+ 9002              Compara_coordenadas_X
 524+ 9002
 525+ 9002              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9002              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9002
 528+ 9002              ; Preparamos registros:
 529+ 9002
 530+ 9002 21 CC 88         ld hl,Filas+6
 531+ 9005 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9006 23               inc hl
 533+ 9007 23               inc hl
 534+ 9008 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9009 43               ld b,e
 536+ 900A
 537+ 900A 21 DA 88         ld hl,Filas+20
 538+ 900D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 900E 21 4B 89         ld hl,Coordenadas_X_Entidad
 540+ 9011 CD 2D 92         call Guarda_coordenadas_X
 541+ 9014
 542+ 9014              ; Preparamos registros:
 543+ 9014
 544+ 9014 21 A4 85         ld hl,Amadeus_db+6
 545+ 9017 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9018 23               inc hl
 547+ 9019 23               inc hl
 548+ 901A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 901B 7B               ld a,e
 550+ 901C 08               ex af,af'
 551+ 901D 21 B2 85         ld hl,Amadeus_db+20
 552+ 9020 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9021 21 48 89         ld hl,Coordenadas_X_Amadeus
 554+ 9024 CD 2D 92         call Guarda_coordenadas_X
 555+ 9027
 556+ 9027              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9027              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9027
 559+ 9027 04               inc b
 560+ 9028 05               dec b
 561+ 9029 28 04            jr z,1F
 562+ 902B 06 03            ld b,3
 563+ 902D 18 02            jr 2F
 564+ 902F 06 02        1 ld b,2
 565+ 9031 08           2 ex af,af'
 566+ 9032 3C               inc a
 567+ 9033 3D               dec a
 568+ 9034 28 04            jr z,5F
 569+ 9036 0E 03            ld c,3
 570+ 9038 18 02            jr 6F
 571+ 903A 0E 02        5 ld c,2
 572+ 903C 79           6 ld a,c
 573+ 903D 08               ex af,af'
 574+ 903E 11 4B 89         ld de,Coordenadas_X_Entidad
 575+ 9041 1A           4 ld a,(de)
 576+ 9042 21 48 89         ld hl,Coordenadas_X_Amadeus
 577+ 9045 BE           3 cp (hl)
 578+ 9046 28 0E            jr z,7F
 579+ 9048 23               inc hl
 580+ 9049 0D               dec c
 581+ 904A 20 F9            jr nz,3B
 582+ 904C 13               inc de
 583+ 904D 08               ex af,af'
 584+ 904E 4F               ld c,a
 585+ 904F 08               ex af,af'
 586+ 9050 10 EF            djnz 4B
 587+ 9052
 588+ 9052              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9052
 590+ 9052 CD 69 92     8 call Limpia_Coordenadas_X
 591+ 9055 C9               ret
 592+ 9056
 593+ 9056 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9058 32 DF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 905B 21 43 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 905E CB D6            set 2,(hl)
 597+ 9060 18 F0            jr 8B
 598+ 9062
 599+ 9062              ; -----------------------------------------------------------------------
 600+ 9062              ;
 601+ 9062              ;   17/04/23
 602+ 9062              ;
 603+ 9062
 604+ 9062              Detecta_colision_nave_entidad
 605+ 9062
 606+ 9062              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9062
 608+ 9062 2A C8 88         ld hl,(Posicion_actual)
 609+ 9065 CD A6 95         call Calcula_puntero_de_impresion
 610+ 9068
 611+ 9068              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9068              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9068
 614+ 9068 DD E5            push ix
 615+ 906A E1               pop hl
 616+ 906B E5               push hl
 617+ 906C
 618+ 906C              ; ----- ----- -----
 619+ 906C 1E 00            ld e,0                                         ; Indica impacto.
 620+ 906E 06 0A            ld b,10
 621+ 9070 CD A0 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9073 7B               ld a,e
 623+ 9074 FE 05            cp 5
 624+ 9076 38 0E            jr c,3F
 625+ 9078
 626+ 9078              ; LLegados a este punto:
 627+ 9078              ;
 628+ 9078              ;   HAY COLISIÓN !!!!!.
 629+ 9078              ;
 630+ 9078              ;   .db (Impacto) de Amadeus a "1".
 631+ 9078              ;   SET el bit3 de (Impacto2).
 632+ 9078              ;
 633+ 9078              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9078
 635+ 9078 21 B7 85         ld hl,Amadeus_db+25
 636+ 907B 36 01            ld (hl),1
 637+ 907D 21 43 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9080 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9082 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9084 18 18            jr 1F
 641+ 9086
 642+ 9086              ; -----
 643+ 9086
 644+ 9086 E1           3 pop hl
 645+ 9087 CD 4B 96         call NextScan
 646+ 908A E5               push hl
 647+ 908B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 908C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 908E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9090 30 0C            jr nc,1F
 651+ 9092              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9092 10 DC            djnz 2B
 653+ 9094
 654+ 9094              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9094
 656+ 9094              ; LLegados a este punto:
 657+ 9094              ;
 658+ 9094              ;   NO HAY COLISIÓN !!!!!.
 659+ 9094              ;
 660+ 9094              ;   .db (Impacto) de Amadeus a "0".
 661+ 9094              ;   RES el bit2 de (Impacto2).
 662+ 9094              ;
 663+ 9094              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9094              ;   Lo colocamos a "0".
 665+ 9094
 666+ 9094 21 43 89         ld hl,Impacto2
 667+ 9097 CB 96            res 2,(hl)
 668+ 9099 2A 44 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 909C 36 00            ld (hl),0
 670+ 909E
 671+ 909E E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 909F C9               ret
 673+ 90A0
 674+ 90A0               ; ---------- ----------
 675+ 90A0
 676+ 90A0 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90A1 3A C7 88         ld a,(Columns)
 678+ 90A4 47               ld b,a
 679+ 90A5 FD 7E 00     2 ld a,(iy)
 680+ 90A8 BE               cp (hl)
 681+ 90A9 28 01            jr z,1F
 682+ 90AB
 683+ 90AB 1C               inc e
 684+ 90AC
 685+ 90AC 23           1 inc hl
 686+ 90AD FD 23            inc iy
 687+ 90AF 10 F4            djnz 2B
 688+ 90B1 C1               pop bc
 689+ 90B2 C9               ret
 690+ 90B3
 691+ 90B3              ; -------------------------------------------------------------------------------------------------------------
 692+ 90B3              ;
 693+ 90B3              ;   13/03/23
 694+ 90B3              ;
 695+ 90B3              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90B3              ;
 697+ 90B3              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90B3
 699+ 90B3 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90B6 7E               ld a,(hl)
 701+ 90B7 A7               and a
 702+ 90B8 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90B9
 704+ 90B9 44               ld b,h
 705+ 90BA 4D               ld c,l
 706+ 90BB 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 90BE E5               push hl
 708+ 90BF A7               and a
 709+ 90C0 ED 42            sbc hl,bc
 710+ 90C2 E5               push hl
 711+ 90C3 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90C4
 713+ 90C4 E1               pop hl
 714+ 90C5 54               ld d,h
 715+ 90C6 5D               ld e,l
 716+ 90C7 1B               dec de
 717+ 90C8 ED B8            lddr                                                ; Limpiamos.
 718+ 90CA
 719+ 90CA 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90CD 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 90D0
 722+ 90D0 C9               ret
 723+ 90D1
 724+ 90D1              ; -------------------------------------------------------------------------------------------------------------
 725+ 90D1              ;
 726+ 90D1              ;   18/07/23
 727+ 90D1              ;
 728+ 90D1
 729+ 90D1              Motor_de_disparos
 730+ 90D1
 731+ 90D1              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90D1
 733+ 90D1 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90D4 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90D7
 736+ 90D7 CD 7E 8C     2 call Extrae_address
 737+ 90DA 7E               ld a,(hl)
 738+ 90DB A7               and a
 739+ 90DC 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90DE
 741+ 90DE              ; ----- ----- ----- ----- ----- -----
 742+ 90DE
 743+ 90DE C5               push bc
 744+ 90DF CD A3 91         call foto_disparo_a_borrar
 745+ 90E2
 746+ 90E2              ; Existe colisión con este disparo???
 747+ 90E2
 748+ 90E2 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90E3 7E               ld a,(hl)
 750+ 90E4 2B               dec hl
 751+ 90E5 E6 01            and 1
 752+ 90E7 28 1D            jr z,9F
 753+ 90E9
 754+ 90E9              ;   En este punto:
 755+ 90E9              ;
 756+ 90E9              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90E9              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90E9              ;   _con la entidad).
 759+ 90E9              ;
 760+ 90E9              ;   Disparo_2A defw 0                                ; Control.
 761+ 90E9              ;    defw 0                                          ; Puntero objeto.
 762+ 90E9              ;    defw 0                                          ; Puntero de impresión.
 763+ 90E9              ;    defw 0                                          ; Rutina de impresión.
 764+ 90E9
 765+ 90E9 E5               push hl
 766+ 90EA
 767+ 90EA 06 04            ld b,4
 768+ 90EC 23           19 inc hl
 769+ 90ED 10 FD            djnz 19B
 770+ 90EF
 771+ 90EF CD 7E 8C         call Extrae_address
 772+ 90F2 CD 14 9D         call Genera_coordenadas_disparo
 773+ 90F5
 774+ 90F5              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90F5
 776+ 90F5 21 46 89         ld hl,Coordenadas_disparo_certero
 777+ 90F8 72               ld (hl),d
 778+ 90F9 23               inc hl
 779+ 90FA 73               ld (hl),e
 780+ 90FB
 781+ 90FB              ; Elimino el disparo de la base de datos.
 782+ 90FB
 783+ 90FB E1               pop hl
 784+ 90FC CD 22 92         call Elimina_disparo_de_base_de_datos
 785+ 90FF 21 43 89         ld hl,Impacto2
 786+ 9102 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9104
 788+ 9104 18 06            jr 11F
 789+ 9106
 790+ 9106 CD CC 91     9 call Mueve_disparo
 791+ 9109 CD A3 91         call foto_disparo_a_borrar
 792+ 910C
 793+ 910C C1           11 pop bc
 794+ 910D 18 04            jr 7F
 795+ 910F
 796+ 910F              ; ----- ----- ----- ----- ----- -----
 797+ 910F
 798+ 910F ED 42        1 sbc hl,bc
 799+ 9111 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9113
 801+ 9113 2A 41 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9116 23               inc hl
 803+ 9117 23               inc hl
 804+ 9118 22 41 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 911B 18 BA            jr 2B
 806+ 911D
 807+ 911D CD FF 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9120              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9120
 810+ 9120              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9120
 812+ 9120 01 8A 85         ld bc,Disparo_11
 813+ 9123 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9126
 815+ 9126 CD 7E 8C     5 call Extrae_address
 816+ 9129 7E               ld a,(hl)
 817+ 912A A7               and a
 818+ 912B 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 912D
 820+ 912D              ; ----- ----- ----- ----- ----- -----
 821+ 912D
 822+ 912D C5               push bc
 823+ 912E CD A3 91         call foto_disparo_a_borrar
 824+ 9131
 825+ 9131              ; Existe colisión con este disparo???
 826+ 9131
 827+ 9131 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9132 7E               ld a,(hl)
 829+ 9133 2B               dec hl
 830+ 9134 E6 01            and 1
 831+ 9136 28 4D            jr z,10F
 832+ 9138
 833+ 9138              ;! La colisión se produce con Amadeus???
 834+ 9138              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9138
 836+ 9138 E5               push hl
 837+ 9139
 838+ 9139 06 04            ld b,4
 839+ 913B 23           16 inc hl
 840+ 913C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 913E
 842+ 913E CD 7E 8C         call Extrae_address
 843+ 9141 CD 14 9D         call Genera_coordenadas_disparo
 844+ 9144
 845+ 9144 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9145 FE 16            cp $16
 847+ 9147 38 2A            jr c,15F
 848+ 9149
 849+ 9149
 850+ 9149              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9149
 852+ 9149 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 914A
 854+ 914A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 914A
 856+ 914A
 857+ 914A 2A 4E 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 914D
 859+ 914D              ; Coordenada X de Amadeus en D.
 860+ 914D
 861+ 914D 7D               ld a,l
 862+ 914E E6 1F            and $1F
 863+ 9150 57               ld d,a
 864+ 9151
 865+ 9151 21 A6 85         ld hl,Amadeus_db+8
 866+ 9154 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9155
 868+ 9155 21 48 89         ld hl,Coordenadas_X_Amadeus
 869+ 9158 CD 2D 92         call Guarda_coordenadas_X
 870+ 915B
 871+ 915B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 915C
 873+ 915C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 915C
 875+ 915C 06 02            ld b,2
 876+ 915E C5           20 push bc
 877+ 915F
 878+ 915F 06 03            ld b,3
 879+ 9161 21 48 89         ld hl,Coordenadas_X_Amadeus
 880+ 9164 7E           18 ld a,(hl)
 881+ 9165 BA               cp d
 882+ 9166 20 04            jr nz,17F
 883+ 9168
 884+ 9168              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9168
 886+ 9168 C1               pop bc
 887+ 9169 E1               pop hl
 888+ 916A 18 0D            jr 14F
 889+ 916C
 890+ 916C 23           17 inc hl
 891+ 916D 10 F5            djnz 18B
 892+ 916F
 893+ 916F 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9170
 895+ 9170 C1               pop bc
 896+ 9171 10 EB            djnz 20B
 897+ 9173
 898+ 9173
 899+ 9173              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9173              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9173
 902+ 9173 E1           15 pop hl
 903+ 9174 23               inc hl
 904+ 9175 35               dec (hl)
 905+ 9176 2B               dec hl
 906+ 9177 18 0C            jr 10F
 907+ 9179
 908+ 9179              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9179              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9179
 911+ 9179 E5           14 push hl
 912+ 917A CD 22 92         call Elimina_disparo_de_base_de_datos
 913+ 917D 21 43 89         ld hl,Impacto2
 914+ 9180 CB CE            set 1,(hl)
 915+ 9182 E1               pop hl
 916+ 9183 18 06            jr 12F
 917+ 9185
 918+ 9185              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9185
 920+ 9185 CD CC 91     10 call Mueve_disparo
 921+ 9188 CD A3 91         call foto_disparo_a_borrar
 922+ 918B C1           12 pop bc
 923+ 918C
 924+ 918C 18 04            jr 8F
 925+ 918E
 926+ 918E              ; ----- ----- ----- ----- ----- -----
 927+ 918E
 928+ 918E ED 42        4 sbc hl,bc
 929+ 9190 28 0A            jr z,6F
 930+ 9192
 931+ 9192 2A 3F 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9195 23               inc hl
 933+ 9196 23               inc hl
 934+ 9197 22 3F 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 919A 18 8A            jr 5B
 936+ 919C
 937+ 919C CD F8 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 919F CD 69 92         call Limpia_Coordenadas_X
 939+ 91A2 C9               ret
 940+ 91A3
 941+ 91A3              ; ------------------------------------------------------------------
 942+ 91A3
 943+ 91A3              foto_disparo_a_borrar
 944+ 91A3
 945+ 91A3 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91A4 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91A5 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91A6
 949+ 91A6 E5               push hl
 950+ 91A7 23               inc hl
 951+ 91A8 23               inc hl
 952+ 91A9 ED 73 15 89      ld (Stack),sp
 953+ 91AD F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91AE FD E1            pop iy
 955+ 91B0 DD E1            pop ix
 956+ 91B2 E1               pop hl
 957+ 91B3 ED 7B 15 89      ld sp,(Stack)
 958+ 91B7 3A 03 89         ld a,(Ctrl_1)
 959+ 91BA CB C7            set 0,a
 960+ 91BC 32 03 89         ld (Ctrl_1),a
 961+ 91BF CD A0 7F         call Guarda_foto_registros
 962+ 91C2 3A 03 89         ld a,(Ctrl_1)
 963+ 91C5 CB 87            res 0,a
 964+ 91C7 32 03 89         ld (Ctrl_1),a
 965+ 91CA E1               pop hl
 966+ 91CB C9               ret
 967+ 91CC
 968+ 91CC              ;---------------------------------------------------
 969+ 91CC              ;
 970+ 91CC              ;   18/07/23
 971+ 91CC              ;
 972+ 91CC
 973+ 91CC              Mueve_disparo
 974+ 91CC
 975+ 91CC              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91CC              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91CC              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91CC
 979+ 91CC E5               push hl
 980+ 91CD
 981+ 91CD 7E               ld a,(hl)
 982+ 91CE
 983+ 91CE 06 04            ld b,4
 984+ 91D0 23           1 inc hl
 985+ 91D1 10 FD            djnz 1B
 986+ 91D3
 987+ 91D3              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91D3
 989+ 91D3 CD 7E 8C         call Extrae_address
 990+ 91D6
 991+ 91D6 E6 01            and 1
 992+ 91D8 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91DA
 994+ 91DA              ; Disparo hacia arriba, (Amadeus).
 995+ 91DA
 996+ 91DA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91DA              ; _ de la dificultad.
 998+ 91DA
 999+ 91DA CD 5A 96         call PreviousScan
1000+ 91DD CD 5A 96         call PreviousScan
1001+ 91E0 CD 5A 96         call PreviousScan
1002+ 91E3 CD 5A 96         call PreviousScan
1003+ 91E6
1004+ 91E6              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91E6
1006+ 91E6 7C               ld a,h
1007+ 91E7 FE 40            cp $40
1008+ 91E9 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91EB
1010+ 91EB              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91EB
1012+ 91EB EB               ex de,hl
1013+ 91EC 06 04            ld b,4
1014+ 91EE 2B           6 dec hl
1015+ 91EF 10 FD            djnz 6B
1016+ 91F1
1017+ 91F1 CD 22 92         call Elimina_disparo_de_base_de_datos
1018+ 91F4 E1               pop hl
1019+ 91F5 18 10            jr 7F
1020+ 91F7
1021+ 91F7              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91F7              ; HL contiene el puntero de impresión del disparo.
1023+ 91F7              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91F7
1025+ 91F7 D5           3 push de
1026+ 91F8 C5               push bc
1027+ 91F9
1028+ 91F9 CD C1 8F         call Comprueba_Colision
1029+ 91FC
1030+ 91FC              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91FC
1032+ 91FC 78               ld a,b
1033+ 91FD
1034+ 91FD C1               pop bc
1035+ 91FE D1               pop de
1036+ 91FF
1037+ 91FF EB               ex de,hl
1038+ 9200
1039+ 9200 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9201 23               inc hl                                      ; _ movimiento.
1041+ 9202 72               ld (hl),d
1042+ 9203
1043+ 9203 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9204
1045+ 9204 23               inc hl                                      ; _ en curso.
1046+ 9205 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9206 2B               dec hl
1048+ 9207
1049+ 9207 C9           7 ret
1050+ 9208
1051+ 9208              ; Disparo hacia abajo, (Entidad).
1052+ 9208
1053+ 9208 3A 50 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 920B 47               ld b,a
1055+ 920C
1056+ 920C CD 4B 96     4 call NextScan
1057+ 920F 10 FB            djnz 4B
1058+ 9211
1059+ 9211              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9211
1061+ 9211 7C               ld a,h
1062+ 9212 FE 58            cp $58
1063+ 9214 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9216
1065+ 9216 EB               ex de,hl
1066+ 9217 06 04            ld b,4
1067+ 9219 2B           5 dec hl
1068+ 921A 10 FD            djnz 5B
1069+ 921C
1070+ 921C CD 22 92         call Elimina_disparo_de_base_de_datos
1071+ 921F E1               pop hl
1072+ 9220 18 E5            jr 7B
1073+ 9222
1074+ 9222              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9222
1076+ 9222 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9225 AF               xor a
1078+ 9226 77               ld (hl),a
1079+ 9227 54               ld d,h
1080+ 9228 5D               ld e,l
1081+ 9229 13               inc de
1082+ 922A ED B0            ldir
1083+ 922C C9               ret
1084+ 922D
1085+ 922D              ; -----------------------------------------------------------------
1086+ 922D              ;
1087+ 922D              ;   19/7/23
1088+ 922D              ;
1089+ 922D              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 922D              ;
1091+ 922D              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 922D              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 922D              ;
1094+ 922D              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 922D              ;
1096+ 922D              ;   INPUTS:
1097+ 922D              ;
1098+ 922D              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 922D              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 922D
1101+ 922D              ;   MODIFICA: A, HL, BC y DE.
1102+ 922D
1103+ 922D              Guarda_coordenadas_X
1104+ 922D
1105+ 922D 7B               ld a,e
1106+ 922E A7               and a
1107+ 922F 20 04            jr nz,1F
1108+ 9231
1109+ 9231 06 02            ld b,2
1110+ 9233 18 02            jr 2F
1111+ 9235
1112+ 9235 06 03        1 ld b,3
1113+ 9237 72           2 ld (hl),d
1114+ 9238 23               inc hl
1115+ 9239 14               inc d
1116+ 923A 10 FB            djnz 2B
1117+ 923C
1118+ 923C C9               ret
1119+ 923D
1120+ 923D              ; -----------------------------------------------------------------
1121+ 923D              ;
1122+ 923D              ;   12/04/23
1123+ 923D              ;
1124+ 923D
1125+ 923D 3A 43 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9240 A7               and a
1127+ 9241 C8               ret z
1128+ 9242
1129+ 9242 FE 04            cp 4
1130+ 9244 20 09            jr nz,1F
1131+ 9246
1132+ 9246
1133+ 9246              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9246
1135+ 9246 CD 62 90         call Detecta_colision_nave_entidad
1136+ 9249
1137+ 9249 21 43 89         ld hl,Impacto2
1138+ 924C CB 5E            bit 3,(hl)
1139+ 924E C0               ret nz                                               ; Existe colisión, RET.
1140+ 924F
1141+ 924F              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 924F              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 924F
1144+ 924F 21 43 89     1 ld hl,Impacto2
1145+ 9252 CB 4E            bit 1,(hl)
1146+ 9254 28 07            jr z,2F
1147+ 9256
1148+ 9256 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9259 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 925B 18 0B            jr 3F
1151+ 925D
1152+ 925D 21 43 89     2 ld hl,Impacto2
1153+ 9260 CB 46            bit 0,(hl)
1154+ 9262 C8               ret z
1155+ 9263
1156+ 9263              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9263
1158+ 9263 21 03 89         ld hl,Ctrl_1
1159+ 9266 CB D6            set 2,(hl)
1160+ 9268
1161+ 9268 C9           3 ret
1162+ 9269
1163+ 9269              ; -----------------------------------------------------------------
1164+ 9269              ;
1165+ 9269              ;   19/7/23
1166+ 9269              ;
1167+ 9269              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9269
1169+ 9269 AF           Limpia_Coordenadas_X xor a
1170+ 926A 06 06            ld b,6
1171+ 926C 21 48 89         ld hl,Coordenadas_X_Amadeus
1172+ 926F 77           1 ld (hl),a
1173+ 9270 23               inc hl
1174+ 9271 10 FC            djnz 1B
1175+ 9273 C9               ret
1176+ 9274
1177+ 9274              ; -----------------------------------------------------------------
1178+ 9274              ;
1179+ 9274              ;   25/04/23
1180+ 9274              ;
1181+ 9274
1182+ 9274              Determina_resultado_comparativa
1183+ 9274
1184+ 9274              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9274              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9274              ;
1187+ 9274              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9274              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9274              ;
1190+ 9274              ;   SBC HL,DE
1191+ 9274
1192+ 9274              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9274              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9274
1195+ 9274              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9274              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9274
1198+ 9274
1199+ 9274 3A DA 88         ld a,(Cuad_objeto)
1200+ 9277 FE 02            cp 2
1201+ 9279 28 26            jr z,2F
1202+ 927B 38 24            jr c,2F
1203+ 927D
1204+ 927D              ; Cuadrantes 3º y 4º
1205+ 927D
1206+ 927D E6 01            and 1
1207+ 927F 28 10            jr z,4F
1208+ 9281
1209+ 9281              ; Cuadrante 3º
1210+ 9281
1211+ 9281 7C               ld a,h
1212+ 9282 06 00            ld b,0
1213+ 9284
1214+ 9284 CD 0F 93         call Compara_cositas_H3
1215+ 9287
1216+ 9287 04               inc b
1217+ 9288 05               dec b
1218+ 9289 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 928A
1220+ 928A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 928B 06 00            ld b,0
1222+ 928D
1223+ 928D CD 21 93         call Compara_cositas_L3
1224+ 9290 C9               ret
1225+ 9291
1226+ 9291              ; Cuadrante 4º
1227+ 9291
1228+ 9291 7C           4 ld a,h
1229+ 9292 06 00            ld b,0
1230+ 9294
1231+ 9294 CD 33 93         call Compara_cositas_H4
1232+ 9297
1233+ 9297 04               inc b
1234+ 9298 05               dec b
1235+ 9299 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 929A
1237+ 929A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 929B 06 00            ld b,0
1239+ 929D
1240+ 929D CD 49 93         call Compara_cositas_L4
1241+ 92A0 C9               ret
1242+ 92A1
1243+ 92A1              ; Cuadrantes 1º y 2º.
1244+ 92A1
1245+ 92A1 28 10        2 jr z,3F
1246+ 92A3
1247+ 92A3              ; 1er Cuadrante
1248+ 92A3
1249+ 92A3 7C               ld a,h
1250+ 92A4 06 00            ld b,0
1251+ 92A6
1252+ 92A6 CD E7 92         call Compara_cositas_H1
1253+ 92A9
1254+ 92A9 04               inc b
1255+ 92AA 05               dec b
1256+ 92AB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92AC
1258+ 92AC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92AD 06 00            ld b,0
1260+ 92AF
1261+ 92AF CD FD 92         call Compara_cositas_L1
1262+ 92B2 C9               ret
1263+ 92B3
1264+ 92B3
1265+ 92B3              ; 2º Cuadrante
1266+ 92B3
1267+ 92B3 7C           3 ld a,h
1268+ 92B4 06 00            ld b,0
1269+ 92B6
1270+ 92B6 CD C3 92         call Compara_cositas_H2
1271+ 92B9
1272+ 92B9 04               inc b
1273+ 92BA 05               dec b
1274+ 92BB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92BC
1276+ 92BC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92BD 06 00            ld b,0
1278+ 92BF
1279+ 92BF CD D5 92         call Compara_cositas_L2
1280+ 92C2 C9               ret
1281+ 92C3
1282+ 92C3 A7           Compara_cositas_H2 and a
1283+ 92C4 28 0D            jr z,1F
1284+ 92C6              ;    cp $fd
1285+ 92C6              ;    jr z,1F
1286+ 92C6              ;    cp $fe
1287+ 92C6              ;    jr z,1F
1288+ 92C6 FE FF            cp $ff
1289+ 92C8 28 09            jr z,1F
1290+ 92CA FE 01            cp $01
1291+ 92CC 28 05            jr z,1F
1292+ 92CE FE 02            cp $02
1293+ 92D0 28 01            jr z,1F
1294+ 92D2 C0               ret nz
1295+ 92D3 04           1 inc b
1296+ 92D4 C9               ret
1297+ 92D5
1298+ 92D5 A7           Compara_cositas_L2 and a
1299+ 92D6 28 0D            jr z,1F
1300+ 92D8              ;    cp $fd
1301+ 92D8              ;    jr z,1F
1302+ 92D8 FE FE            cp $fe
1303+ 92DA 28 09            jr z,1F
1304+ 92DC FE FF            cp $ff
1305+ 92DE 28 05            jr z,1F
1306+ 92E0 FE 01            cp $01
1307+ 92E2 28 01            jr z,1F
1308+ 92E4              ;    cp $02
1309+ 92E4              ;    jr z,1F
1310+ 92E4 C0               ret nz
1311+ 92E5 04           1 inc b
1312+ 92E6 C9               ret
1313+ 92E7
1314+ 92E7 A7           Compara_cositas_H1 and a
1315+ 92E8 28 11            jr z,1F
1316+ 92EA              ;    cp $fd
1317+ 92EA              ;    jr z,1F
1318+ 92EA              ;    cp $fe
1319+ 92EA              ;    jr z,1F
1320+ 92EA FE FF            cp $ff
1321+ 92EC 28 0D            jr z,1F
1322+ 92EE FE 01            cp $01
1323+ 92F0 28 09            jr z,1F
1324+ 92F2 FE 02            cp $02
1325+ 92F4 28 05            jr z,1F
1326+ 92F6 FE 03            cp $03
1327+ 92F8 28 01            jr z,1F
1328+ 92FA C0               ret nz
1329+ 92FB 04           1 inc b
1330+ 92FC C9               ret
1331+ 92FD
1332+ 92FD A7           Compara_cositas_L1 and a
1333+ 92FE 28 0D            jr z,1F
1334+ 9300              ;    cp $fd
1335+ 9300              ;    jr z,1F
1336+ 9300              ;    cp $fe
1337+ 9300              ;    jr z,1F
1338+ 9300              ;    cp $ff
1339+ 9300              ;    jr z,1F
1340+ 9300 FE 01            cp $01
1341+ 9302 28 09            jr z,1F
1342+ 9304 FE 02            cp $02
1343+ 9306 28 05            jr z,1F
1344+ 9308 FE 03            cp $03
1345+ 930A 28 01            jr z,1F
1346+ 930C C0               ret nz
1347+ 930D 04           1 inc b
1348+ 930E C9               ret
1349+ 930F
1350+ 930F A7           Compara_cositas_H3 and a
1351+ 9310 28 0D            jr z,1F
1352+ 9312              ;    cp $fd
1353+ 9312              ;    jr z,1F
1354+ 9312 FE FE            cp $fe
1355+ 9314 28 09            jr z,1F
1356+ 9316 FE FF            cp $ff
1357+ 9318 28 05            jr z,1F
1358+ 931A FE 01            cp $01
1359+ 931C 28 01            jr z,1F
1360+ 931E              ;    cp $02
1361+ 931E              ;    jr z,1F
1362+ 931E              ;    cp $03
1363+ 931E              ;    jr z,1F
1364+ 931E C0               ret nz
1365+ 931F 04           1 inc b
1366+ 9320 C9               ret
1367+ 9321
1368+ 9321 A7           Compara_cositas_L3 and a
1369+ 9322 28 0D            jr z,1F
1370+ 9324              ;    cp $fd
1371+ 9324              ;    jr z,1F
1372+ 9324              ;    cp $fe
1373+ 9324              ;    jr z,1F
1374+ 9324              ;    cp $ff
1375+ 9324              ;    jr z,1F
1376+ 9324 FE 01            cp $01
1377+ 9326 28 09            jr z,1F
1378+ 9328 FE 02            cp $02
1379+ 932A 28 05            jr z,1F
1380+ 932C FE 03            cp $03
1381+ 932E 28 01            jr z,1F
1382+ 9330 C0               ret nz
1383+ 9331 04           1 inc b
1384+ 9332 C9               ret
1385+ 9333
1386+ 9333 A7           Compara_cositas_H4 and a
1387+ 9334 28 11            jr z,1F
1388+ 9336 FE FD            cp $fd
1389+ 9338 28 0D            jr z,1F
1390+ 933A FE FE            cp $fe
1391+ 933C 28 09            jr z,1F
1392+ 933E FE FF            cp $ff
1393+ 9340 28 05            jr z,1F
1394+ 9342 FE 01            cp $01
1395+ 9344 28 01            jr z,1F
1396+ 9346              ;    cp $02
1397+ 9346              ;    jr z,1F
1398+ 9346              ;    cp $03
1399+ 9346              ;    jr z,1F
1400+ 9346 C0               ret nz
1401+ 9347 04           1 inc b
1402+ 9348 C9               ret
1403+ 9349
1404+ 9349 A7           Compara_cositas_L4 and a
1405+ 934A 28 0D            jr z,1F
1406+ 934C              ;    cp $fd
1407+ 934C              ;    jr z,1F
1408+ 934C FE FE            cp $fe
1409+ 934E 28 09            jr z,1F
1410+ 9350 FE FF            cp $ff
1411+ 9352 28 05            jr z,1F
1412+ 9354 FE 01            cp $01
1413+ 9356 28 01            jr z,1F
1414+ 9358              ;    cp $02
1415+ 9358              ;    jr z,1F
1416+ 9358              ;    cp $03
1417+ 9358              ;    jr z,1F
1418+ 9358 C0               ret nz
1419+ 9359 04           1 inc b
1420+ 935A C9               ret
# file closed: Disparo.asm
1661  935B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 935B              ; ******************************************************************************************************************************************************************************************
   2+ 935B              ;
   3+ 935B              ; 26/06/23
   4+ 935B              ;
   5+ 935B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 935B
   7+ 935B CD 3F 96     Draw call Prepara_draw
   8+ 935E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 935F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9360 28 05        	jr z,2F
  11+ 9362
  12+ 9362 3A DA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9365 18 0C        	jr 1F
  14+ 9367
  15+ 9367 2A D8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 936A 22 C8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 936D CD FC 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9370              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9370 CD 9F 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9373
  21+ 9373 3A F0 88     1 ld a,(Ctrl_0)
  22+ 9376 CB 6F        	bit 5,a
  23+ 9378 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 937A
  25+ 937A CD 92 93     	call Comprueba_limite_horizontal
  26+ 937D CD 22 94     	call Comprueba_limite_vertical
  27+ 9380
  28+ 9380              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9380              ; -----------------------
  30+ 9380              ; -----------------------
  31+ 9380              ; -----------------------
  32+ 9380
  33+ 9380 CD 6F 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9383 CD A6 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9386 CD 05 96     	call Define_rutina_de_impresion
  36+ 9389
  37+ 9389 3A F0 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 938C CB AF        	res 5,a											; _a ser de utilidad.
  39+ 938E 32 F0 88     	ld (Ctrl_0),a
  40+ 9391
  41+ 9391 C9           	ret
  42+ 9392
  43+ 9392              ; *******************************************************************************************************************************************************************************************
  44+ 9392              ;	21/01/23
  45+ 9392              ;
  46+ 9392              ; 	Comprueba_limite_horizontal.
  47+ 9392              ;
  48+ 9392              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9392              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9392              ;
  51+ 9392              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9392              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9392              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9392              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9392
  56+ 9392
  57+ 9392
  58+ 9392 3A F0 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9395 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9397 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9399 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 939B 32 F0 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 939E 18 09            jr 6F
  64+ 93A0 CB 5F        1 bit 3,a
  65+ 93A2 28 0A            jr z,2F
  66+ 93A4 E6 F7            and $f7
  67+ 93A6 32 F0 88         ld (Ctrl_0),a
  68+ 93A9 CD FC 94     6 call Inicializacion
  69+ 93AC 18 5B            jr 5F
  70+ 93AE E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93AF
  72+ 93AF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93AF              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93AF
  75+ 93AF EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93B0 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93B3 CD 5E 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93B6 67           	ld h,a
  79+ 93B7 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93B8 CD 5E 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93BB 67           	ld h,a
  82+ 93BC A7           	and a
  83+ 93BD ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93BF 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93C0 3A DA 88     	ld a,(Cuad_objeto)
  86+ 93C3 FE 02        	cp 2
  87+ 93C5 38 1E        	jr c,3F
  88+ 93C7 28 1C        	jr z,3F
  89+ 93C9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93CA 28 23            jr z,7F
  91+ 93CC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93CE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93D0 E1           	pop hl
  94+ 93D1
  95+ 93D1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93D1              ; _para indicar con E="2" en caso necesario.
  97+ 93D1
  98+ 93D1 E5               push hl
  99+ 93D2 C5               push bc
 100+ 93D3 CD 5E 99     	call calcula_tercio
 101+ 93D6 FE 01        	cp 1
 102+ 93D8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93DA CD 0A 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93DD 28 26            jr z,9F
 105+ 93DF 38 24            jr c,9F
 106+ 93E1 1E 00        11 ld e,0
 107+ 93E3 18 22            jr 8F
 108+ 93E5 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93E6 28 07        	jr z, 7F
 110+ 93E8 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93EA 1E 00         	ld e,0
 112+ 93EC E1           	pop hl
 113+ 93ED 18 04        	jr 4F
 114+ 93EF 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93F1 18 15            jr 10F
 116+ 93F3
 117+ 93F3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93F3              ; _para indicar con E="2" en caso necesario.
 119+ 93F3
 120+ 93F3 E5           4 push hl
 121+ 93F4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93F5 CD 5E 99     	call calcula_tercio
 123+ 93F8 FE 01        	cp 1
 124+ 93FA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93FC CD 0A 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93FF 28 04            jr z,9F
 127+ 9401 30 02            jr nc,9F
 128+ 9403 18 02        	jr 8F
 129+ 9405 1E 02        9 ld e,2
 130+ 9407 C1           8 pop bc
 131+ 9408 E1           10 pop hl
 132+ 9409 C9           5 ret
 133+ 940A
 134+ 940A              ; --------------------
 135+ 940A              ;
 136+ 940A              ; 25/08/22
 137+ 940A
 138+ 940A CD 5E 99     Comprueba_centro call calcula_tercio
 139+ 940D 67               ld h,a
 140+ 940E 08           	ex af,af
 141+ 940F FE 02        	cp 2
 142+ 9411 38 07        	jr c,1F
 143+ 9413 28 05        	jr z,1F
 144+ 9415 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9418 18 03        	jr 2F
 146+ 941A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 941D 08           2 ex af,af
 148+ 941E A7               and a
 149+ 941F ED 42            sbc hl,bc
 150+ 9421 C9               ret
 151+ 9422
 152+ 9422              ; *********************************************************************************************************************************************************************************************
 153+ 9422              ;
 154+ 9422              ;   16/8/22
 155+ 9422              ;
 156+ 9422              ;	Comprueba_limite_vertical
 157+ 9422              ;
 158+ 9422              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9422              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9422              ;
 161+ 9422
 162+ 9422 2A C8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9425 7D           	ld a,l
 164+ 9426 E6 1F        	and $1F
 165+ 9428 57           	ld d,a
 166+ 9429 3A 00 89     	ld a,(Limite_vertical)
 167+ 942C BA           	cp d 											; Límite - Posición.
 168+ 942D 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 942E 3A DA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9431 CB 47        	bit 0,a
 171+ 9433 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9435
 173+ 9435              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9435
 175+ 9435 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9436 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9438
 178+ 9438              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9438              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9438
 181+ 9438 3A CC 88         ld a,(Coordenada_X)
 182+ 943B 16 0F            ld d,Centro_izquierda
 183+ 943D A7               and a
 184+ 943E 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 943F 28 1E            jr z,3F
 186+ 9441 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9443              ;                                                    ; _salimos sin modificar nada.
 188+ 9443 18 0E            jr 2F
 189+ 9445 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9446 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9448
 192+ 9448              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9448              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9448
 195+ 9448 3A CC 88         ld a,(Coordenada_X)
 196+ 944B 16 10            ld d,Centro_derecha
 197+ 944D A7               and a
 198+ 944E 92               sub d
 199+ 944F 28 0E            jr z,3F
 200+ 9451 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9453              ;                                                    ; _salimos sin modificar nada.
 202+ 9453 CB 43        2 bit 0,e
 203+ 9455 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9457 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9458 CD EC 94         call Modificaccionne
 206+ 945B C1           	pop bc
 207+ 945C CD FC 94         call Inicializacion
 208+ 945F C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9460
 210+ 9460              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9460
 212+ 9460 C5           4 push bc
 213+ 9461 01 C7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9464 0A           	ld a,(bc)
 215+ 9465 3D           	dec a
 216+ 9466 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9467 7D           	ld a,l
 218+ 9468 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9469 CB 47        	bit 0,a
 220+ 946B 28 03        	jr z,5F
 221+ 946D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 946E 18 2E        	jr 7F
 223+ 9470
 224+ 9470              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9470
 226+ 9470 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9471 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9472 3A F0 88     	ld a,(Ctrl_0)
 229+ 9475 CB 4F        	bit 1,a
 230+ 9477 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9479 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 947A
 233+ 947A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 947A
 235+ 947A 1C               inc e
 236+ 947B 1D               dec e
 237+ 947C 20 07            jr nz,12F
 238+ 947E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 947F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9480 22 C8 88     	ld (Posicion_actual),hl
 241+ 9483 18 44        13 jr 9F
 242+ 9485 CB 43        12 bit 0,e
 243+ 9487 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9489              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9489 C1           	pop bc
 246+ 948A 18 D3        	jr 3B
 247+ 948C 80           14 add b
 248+ 948D 6F               ld l,a
 249+ 948E 22 C8 88     	ld (Posicion_actual),hl
 250+ 9491 CD EC 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9494 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9496 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9498 32 F0 88         ld (Ctrl_0),a
 254+ 949B F1           	pop af
 255+ 949C 18 2B        	jr 9F
 256+ 949E
 257+ 949E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 949E
 259+ 949E F5           7 push af
 260+ 949F 3A F0 88     	ld a,(Ctrl_0)
 261+ 94A2 CB 47        	bit 0,a
 262+ 94A4 20 1D        	jr nz,8F
 263+ 94A6 F1           	pop af
 264+ 94A7
 265+ 94A7              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94A7
 267+ 94A7 1C           	inc e
 268+ 94A8 1D               dec e
 269+ 94A9 20 07            jr nz,10F
 270+ 94AB 90           	sub b
 271+ 94AC 6F               ld l,a
 272+ 94AD 22 C8 88     	ld (Posicion_actual),hl
 273+ 94B0 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94B2              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94B2 CB 43        10 bit 0,e
 276+ 94B4 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94B6              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94B6 C1           	pop bc
 279+ 94B7 18 A6        	jr 3B
 280+ 94B9 90           16 sub b
 281+ 94BA 6F               ld l,a
 282+ 94BB 22 C8 88     	ld (Posicion_actual),hl
 283+ 94BE CD EC 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94C1 18 06            jr 9F
 285+ 94C3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94C5 32 F0 88         ld (Ctrl_0),a
 287+ 94C8 F1           	pop af
 288+ 94C9 C1           9 pop bc
 289+ 94CA 1E 00        	ld e,0
 290+ 94CC CD FC 94         call Inicializacion
 291+ 94CF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94D0 08           	ex af,af
 293+ 94D1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94D2 18 8B            jr 3B
 295+ 94D4
 296+ 94D4              ; --------------------
 297+ 94D4
 298+ 94D4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94D6 CD 5A 96     1 call PreviousScan
 300+ 94D9 10 FB            djnz 1B
 301+ 94DB 22 C8 88     	ld (Posicion_actual),hl
 302+ 94DE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94DF C9           	ret
 304+ 94E0
 305+ 94E0              ; --------------------
 306+ 94E0
 307+ 94E0 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94E2 CD 4B 96     1 call NextScan
 309+ 94E5 10 FB            djnz 1B
 310+ 94E7 22 C8 88     	ld (Posicion_actual),hl
 311+ 94EA AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94EB C9           	ret
 313+ 94EC
 314+ 94EC              ; --------------------
 315+ 94EC              ;
 316+ 94EC              ;	22/01/23
 317+ 94EC              ;
 318+ 94EC              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94EC              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94EC              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94EC
 322+ 94EC
 323+ 94EC              Modificaccionne
 324+ 94EC
 325+ 94EC 3A DA 88     	ld a,(Cuad_objeto)
 326+ 94EF FE 02        	cp 2
 327+ 94F1 CC D4 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94F4 DC D4 94         call c,Modifica_Pos_actual
 329+ 94F7 C8           	ret z
 330+ 94F8 CD E0 94         call Modifica_Pos_actual2
 331+ 94FB C9               ret
 332+ 94FC
 333+ 94FC              ; *************************************************************************************************************************************************************************************************
 334+ 94FC              ;
 335+ 94FC              ;	13/8/22
 336+ 94FC              ;
 337+ 94FC              ;	Inicializacion
 338+ 94FC              ;
 339+ 94FC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94FC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94FC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94FC              ;
 343+ 94FC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94FC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94FC              ;	_ desaparece/aparece.
 346+ 94FC
 347+ 94FC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94FC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94FC              ;
 350+ 94FC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94FC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94FC              ; 		   [E] ="0"
 353+ 94FC
 354+ 94FC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94FC
 356+ 94FC CD 5E 99     Inicializacion call calcula_tercio
 357+ 94FF 28 36        	jr z,primit
 358+ 9501 E6 02        	and 2
 359+ 9503 20 07        	jr nz,segmit
 360+ 9505 7D           	ld a,l
 361+ 9506 FE 7F        	cp $7f
 362+ 9508 38 2D        	jr c,primit
 363+ 950A 28 2B        	jr z,primit
 364+ 950C CD 69 95     segmit call column
 365+ 950F 38 13        	jr c,tercuad
 366+ 9511 3E 04        cuarcuad ld a,4
 367+ 9513 32 DA 88     	ld (Cuad_objeto),a
 368+ 9516 21 20 48     	ld hl,$4820
 369+ 9519 22 FE 88     	ld (Limite_horizontal),hl
 370+ 951C 21 00 89     	ld hl,Limite_vertical
 371+ 951F 36 0D        	ld (hl),$0d
 372+ 9521 08           	ex af,af
 373+ 9522 18 3C        	jr 1F
 374+ 9524              tercuad
 375+ 9524 3E 03        	ld a,3
 376+ 9526 32 DA 88     	ld (Cuad_objeto),a
 377+ 9529 21 20 48     	ld hl,$4820
 378+ 952C 22 FE 88     	ld (Limite_horizontal),hl
 379+ 952F 21 00 89     	ld hl,Limite_vertical
 380+ 9532 36 12        	ld (hl),$12
 381+ 9534 08           	ex af,af
 382+ 9535 18 29        	jr 1F
 383+ 9537 CD 69 95     primit call column
 384+ 953A 38 13        	jr c, primcuad
 385+ 953C              segcuad
 386+ 953C 3E 02        	ld a,2
 387+ 953E 32 DA 88     	ld (Cuad_objeto),a
 388+ 9541 21 C0 4F     	ld hl,$4fc0
 389+ 9544 22 FE 88     	ld (Limite_horizontal),hl
 390+ 9547 21 00 89     	ld hl,Limite_vertical
 391+ 954A 36 0D        	ld (hl),$0d
 392+ 954C 08           	ex af,af
 393+ 954D 18 11        	jr 1F
 394+ 954F              primcuad
 395+ 954F 3E 01        	ld a,1
 396+ 9551 32 DA 88     	ld (Cuad_objeto),a
 397+ 9554 21 C0 4F     	ld hl,$4fc0
 398+ 9557 22 FE 88     	ld (Limite_horizontal),hl
 399+ 955A 21 00 89     	ld hl,Limite_vertical
 400+ 955D 36 12        	ld (hl),$12
 401+ 955F 08           	ex af,af
 402+ 9560 CD E9 9C     1 call Genera_coordenadas
 403+ 9563 21 F0 88     	ld hl,Ctrl_0
 404+ 9566 CB EE        	set 5,(hl)
 405+ 9568 C9           	ret
 406+ 9569
 407+ 9569              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9569
 409+ 9569              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9569              ;
 411+ 9569              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9569
 413+ 9569 7D           column ld a,l
 414+ 956A E6 1F        	and $1f
 415+ 956C FE 10         	cp $10
 416+ 956E C9            	ret
 417+ 956F
 418+ 956F              ; --------------------------------------------------------------------------------------------------------------------
 419+ 956F              ;
 420+ 956F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 956F              ;
 422+ 956F              ; 14/12/22
 423+ 956F              ;
 424+ 956F              ;	Modifica: A y BC.
 425+ 956F
 426+ 956F 3A DA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9572 E6 01        	and 1
 428+ 9574 28 17        	jr z,1F
 429+ 9576
 430+ 9576              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9576
 432+ 9576 3A CC 88     	ld a,(Coordenada_X)
 433+ 9579 47           	ld b,a
 434+ 957A 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 957B 79           	ld a,c
 436+ 957C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 957D 38 08        	jr c,2F
 438+ 957F 47           	ld b,a
 439+ 9580 79           	ld a,c
 440+ 9581 90           	sub b
 441+ 9582 32 FD 88     	ld (Columnas),a
 442+ 9585 18 1B        	jr 4F
 443+ 9587 79           2 ld a,c
 444+ 9588 32 FD 88     	ld (Columnas),a
 445+ 958B 18 15        	jr 4F
 446+ 958D
 447+ 958D              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 958D
 449+ 958D 3A CC 88     1 ld a,(Coordenada_X)
 450+ 9590 81           	add c
 451+ 9591 3D           	dec a
 452+ 9592 D6 1F        	sub $1f
 453+ 9594 38 08        	jr c,3F
 454+ 9596 47           	ld b,a
 455+ 9597 79           	ld a,c
 456+ 9598 90           	sub b
 457+ 9599 32 FD 88     	ld (Columnas),a
 458+ 959C 18 04        	jr 4F
 459+ 959E 79           3 ld a,c
 460+ 959F 32 FD 88     	ld (Columnas),a
 461+ 95A2 D9           4 exx
 462+ 95A3 4F           	ld c,a
 463+ 95A4 D9           	exx
 464+ 95A5 C9            ret
 465+ 95A6
 466+ 95A6              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95A6              ;
 468+ 95A6              ;   19/7/23
 469+ 95A6              ;
 470+ 95A6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95A6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95A6              ;
 473+ 95A6              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95A6              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95A6              ;
 476+ 95A6              ;	DESTRUYE: HL,B Y A.
 477+ 95A6
 478+ 95A6 3A DA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95A9 FE 02        	cp 2
 480+ 95AB 38 18        	jr c,1F
 481+ 95AD 28 16        	jr z,1F
 482+ 95AF E6 01        	and 1
 483+ 95B1 28 0D        	jr z,3F
 484+ 95B3
 485+ 95B3              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95B3
 487+ 95B3 CD F9 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95B6
 489+ 95B6 7D           9 ld a,l
 490+ 95B7 E6 1F        	and $1f
 491+ 95B9 28 2A        	jr z,7F
 492+ 95BB 2B           	dec hl
 493+ 95BC 10 F8        	djnz 9B
 494+ 95BE 18 25        	jr 7F
 495+ 95C0
 496+ 95C0              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95C0
 498+ 95C0 2A C8 88     3 ld hl,(Posicion_actual)
 499+ 95C3 18 20        	jr 7F
 500+ 95C5
 501+ 95C5 28 14        1 jr z,2F
 502+ 95C7
 503+ 95C7              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95C7
 505+ 95C7 CD F9 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95CA
 507+ 95CA 7D           4 ld a,l
 508+ 95CB E6 1F        	and $1f
 509+ 95CD 28 03        	jr z,6F
 510+ 95CF 2B           	dec hl
 511+ 95D0 10 F8        	djnz 4B
 512+ 95D2 06 0F        6 ld b,15
 513+ 95D4 CD 5A 96     5 call PreviousScan
 514+ 95D7 10 FB        	djnz 5B
 515+ 95D9 18 0A        	jr 7F
 516+ 95DB
 517+ 95DB              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95DB
 519+ 95DB CD F9 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95DE 06 0F        	ld b,15
 521+ 95E0 CD 5A 96     8 call PreviousScan
 522+ 95E3 10 FB        	djnz 8B
 523+ 95E5
 524+ 95E5 E5           7 push hl
 525+ 95E6 DD E1        	pop ix
 526+ 95E8
 527+ 95E8 2A CA 88     	ld hl,(Puntero_objeto)
 528+ 95EB E5           	push hl
 529+ 95EC FD E1        	pop iy
 530+ 95EE
 531+ 95EE              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95EE
 533+ 95EE 3A F0 88     	ld a,(Ctrl_0)
 534+ 95F1 CB 77        	bit 6,a
 535+ 95F3 C8           	ret z
 536+ 95F4
 537+ 95F4              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95F4              ; _ entidad / Amadeus´.
 539+ 95F4
 540+ 95F4 DD 22 4E 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95F8
 542+ 95F8 C9           	ret
 543+ 95F9
 544+ 95F9              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95F9              ;
 546+ 95F9              ;	2/1/23
 547+ 95F9              ;
 548+ 95F9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95F9              ;
 550+ 95F9              ;	Tras esta rutina tenemos:
 551+ 95F9              ;
 552+ 95F9              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95F9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95F9              ;
 555+ 95F9              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95F9
 557+ 95F9 2A C8 88     Operandos ld hl,(Posicion_actual)
 558+ 95FC 3A FD 88     	ld a,(Columnas)
 559+ 95FF 3D           	dec a
 560+ 9600 20 01        	jr nz,1F
 561+ 9602 3C           	inc a
 562+ 9603 47           1 ld b,a
 563+ 9604 C9           	ret
 564+ 9605
 565+ 9605              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9605              ;
 567+ 9605              ;	3/1/23
 568+ 9605              ;
 569+ 9605              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9605              ;
 571+ 9605              ;	Destruye: A,B,HL y DE.
 572+ 9605
 573+ 9605              Define_rutina_de_impresion
 574+ 9605
 575+ 9605 3A C7 88     	ld a,(Columns)
 576+ 9608 47           	ld b,a
 577+ 9609 3A FD 88     	ld a,(Columnas)
 578+ 960C B8           	cp b
 579+ 960D 20 0D        	jr nz,2f
 580+ 960F
 581+ 960F              ;	La entidad se imprime entera.
 582+ 960F
 583+ 960F 21 2E 97     	ld hl, Indice_entidades_completas
 584+ 9612 E6 01        	and 1
 585+ 9614 28 02        	jr z,1F
 586+ 9616
 587+ 9616 23           	inc hl
 588+ 9617 23           	inc hl
 589+ 9618
 590+ 9618 CD 7E 8C     1 call Extrae_address
 591+ 961B C9           	ret		;	ret
 592+ 961C
 593+ 961C              ;	La entidad no se imprime entera en pantalla.
 594+ 961C
 595+ 961C 3A DA 88     2 ld a,(Cuad_objeto)
 596+ 961F E6 01        	and 1
 597+ 9621 28 17        	jr z,3F
 598+ 9623
 599+ 9623              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9623
 601+ 9623 21 32 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9626 3A C7 88     4 ld a,(Columns)
 603+ 9629 E6 01        	and 1
 604+ 962B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 962D
 606+ 962D 23           	inc hl
 607+ 962E 23           	inc hl
 608+ 962F
 609+ 962F 3A FD 88     	ld a,(Columnas)
 610+ 9632 E6 01        	and 1
 611+ 9634 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9636
 613+ 9636 23           	inc hl
 614+ 9637 23           	inc hl
 615+ 9638
 616+ 9638 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 963A
 618+ 963A 21 38 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 963D 18 E7        	jr 4B
 620+ 963F
 621+ 963F              ; --------------------------------------------------------------------------------------------------------------------
 622+ 963F              ;
 623+ 963F              ;	Prepara_draw
 624+ 963F              ;
 625+ 963F              ;	Es una rutina de carga.
 626+ 963F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 963F              ;
 628+ 963F              ;	FUNCIONAMIENTO:
 629+ 963F              ;
 630+ 963F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 963F              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 963F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 963F              ;
 634+ 963F              ;	DESTRUYE:
 635+ 963F              ;
 636+ 963F              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 963F
 638+ 963F 21 C6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9642 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9643 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9644 4E           	ld c,(hl)
 642+ 9645 2A C8 88     	ld hl,(Posicion_actual)
 643+ 9648 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 964A C9           	ret
 645+ 964B
 646+ 964B              ;----------------------------------------------------------------------------------------------------------------
 647+ 964B              ;
 648+ 964B              ;	5/08/22
 649+ 964B              ;
 650+ 964B              ;   NextScan.
 651+ 964B              ;
 652+ 964B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 964B              ;
 654+ 964B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 964B              ;
 656+ 964B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 964B              ;
 658+ 964B              ;       DESTRUIDOS: AF y HL !!!
 659+ 964B              ;
 660+ 964B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 964B              ;
 662+ 964B
 663+ 964B 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 964C 7C               ld a,h
 665+ 964D E6 07            and 7
 666+ 964F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9650
 668+ 9650 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9651 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9653 6F               ld l,a
 671+ 9654 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9655
 673+ 9655 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9656 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9658 67               ld h,a
 676+ 9659 C9               ret
 677+ 965A
 678+ 965A              ;----------------------------------------------------------------------------------------------------------------
 679+ 965A              ;
 680+ 965A              ;	5/08/22
 681+ 965A              ;
 682+ 965A              ;   PreviousScan.
 683+ 965A              ;
 684+ 965A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 965A              ;
 686+ 965A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 965A              ;
 688+ 965A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 965A              ;
 690+ 965A              ;       DESTRUIDOS: AF y HL !!!
 691+ 965A              ;
 692+ 965A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 965A              ;
 694+ 965A
 695+ 965A 7C           PreviousScan ld a,h
 696+ 965B 25               dec h               ; Dec H.
 697+ 965C E6 07            and 7
 698+ 965E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 965F
 700+ 965F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9660 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9662 6F               ld l,a
 703+ 9663 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9664
 705+ 9664 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9665 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9667 67               ld h,a
 708+ 9668 C9               ret
 709+ 9669
 710+ 9669              ; -----------------------------------------------------------------------------------
 711+ 9669              ;
 712+ 9669              ;	31/7/23
 713+ 9669              ;
 714+ 9669              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9669              ;	Extrae fotos de Album_de_fotos.
 716+ 9669
 717+ 9669              Extrae_foto_entidades
 718+ 9669
 719+ 9669 21 01 70     	ld hl,Album_de_fotos+1
 720+ 966C 7E           	ld a,(hl)
 721+ 966D A7           	and a
 722+ 966E C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 966F
 724+ 966F 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9672 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9673 C8           	ret z
 727+ 9674
 728+ 9674              ; -----------------------------------
 729+ 9674
 730+ 9674 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9678 31 00 70     	ld sp,Album_de_fotos
 732+ 967B
 733+ 967B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 967D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 967E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 967F
 737+ 967F ED 73 17 89  	ld (Stack_2),sp
 738+ 9683 ED 7B 15 89  	ld sp,(Stack)
 739+ 9687
 740+ 9687              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9687
 742+ 9687 3E CD        	ld a,$cd
 743+ 9689 32 91 96     	ld (Imprime),a
 744+ 968C EB           	ex de,hl
 745+ 968D 22 92 96     	ld (Imprime+1),hl
 746+ 9690 EB           	ex de,hl
 747+ 9691
 748+ 9691              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 9691
 750+ 9691 00 00 00     Imprime db 0,0,0
 751+ 9694
 752+ 9694 ED 73 15 89  	ld (Stack),sp
 753+ 9698
 754+ 9698 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 969B 3D           	dec a
 756+ 969C 28 09        	jr z,1F
 757+ 969E 32 10 89      	ld (Numero_de_malotes),a
 758+ 96A1
 759+ 96A1 ED 7B 17 89  	ld sp,(Stack_2)
 760+ 96A5 18 D4        	jr 2B
 761+ 96A7
 762+ 96A7 AF           1 xor a
 763+ 96A8 32 17 89     	ld (Stack_2),a
 764+ 96AB
 765+ 96AB C9           	ret
 766+ 96AC
 767+ 96AC              ; -----------------------------------------------------------------------------------
 768+ 96AC              ;
 769+ 96AC              ;	28/2/23
 770+ 96AC              ;
 771+ 96AC              ;	Pinta los disparos generados.
 772+ 96AC
 773+ 96AC              Extrae_foto_disparos
 774+ 96AC
 775+ 96AC 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96AF 7E               ld a,(hl)
 777+ 96B0 A7               and a
 778+ 96B1 C8               ret z
 779+ 96B2
 780+ 96B2 3A 3E 89     	ld a,(Numero_de_disparotes)
 781+ 96B5 A7           	and a
 782+ 96B6 C8           	ret z
 783+ 96B7 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96BB 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96BE
 786+ 96BE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96C0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96C1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96C2
 790+ 96C2 ED 73 17 89  	ld (Stack_2),sp
 791+ 96C6 ED 7B 15 89  	ld sp,(Stack)
 792+ 96CA
 793+ 96CA              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96CA
 795+ 96CA 3E CD        	ld a,$cd
 796+ 96CC 32 D4 96     	ld (Imprime2),a
 797+ 96CF EB           	ex de,hl
 798+ 96D0 22 D5 96     	ld (Imprime2+1),hl
 799+ 96D3 EB           	ex de,hl
 800+ 96D4
 801+ 96D4              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96D4
 803+ 96D4 00 00 00     Imprime2 db 0,0,0
 804+ 96D7
 805+ 96D7 3A 3E 89     	ld a,(Numero_de_disparotes)
 806+ 96DA 3D           	dec a
 807+ 96DB 28 09        	jr z,1F
 808+ 96DD 32 3E 89      	ld (Numero_de_disparotes),a
 809+ 96E0
 810+ 96E0 ED 7B 17 89  	ld sp,(Stack_2)
 811+ 96E4 18 D8        	jr 2B
 812+ 96E6
 813+ 96E6 AF           1 xor a
 814+ 96E7 32 17 89     	ld (Stack_2),a
 815+ 96EA C9           	ret
 816+ 96EB
 817+ 96EB              ; -----------------------------------------------------------------------------------
 818+ 96EB              ;
 819+ 96EB              ;	4/9/23
 820+ 96EB              ;
 821+ 96EB              ;	Rutina principal de pintado de Amadeus.
 822+ 96EB              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 96EB
 824+ 96EB 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 96EE 7E           	ld a,(hl)
 826+ 96EF A7           	and a
 827+ 96F0 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 96F1
 829+ 96F1 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 96F4 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 96F5 C8           	ret z
 832+ 96F6
 833+ 96F6              ; -----------------------------------
 834+ 96F6
 835+ 96F6 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 96FA 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 96FD
 838+ 96FD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 96FF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9700 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9701
 842+ 9701 ED 73 17 89  	ld (Stack_2),sp
 843+ 9705 ED 7B 15 89  	ld sp,(Stack)
 844+ 9709
 845+ 9709              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 9709
 847+ 9709 3E CD        	ld a,$cd
 848+ 970B 32 13 97     	ld (Imprime_Amadeus),a
 849+ 970E EB           	ex de,hl
 850+ 970F 22 14 97     	ld (Imprime_Amadeus+1),hl
 851+ 9712 EB           	ex de,hl
 852+ 9713
 853+ 9713              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9713
 855+ 9713 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9716
 857+ 9716 ED 73 15 89  	ld (Stack),sp
 858+ 971A
 859+ 971A 3A 10 89     	ld a,(Numero_de_malotes)
 860+ 971D 3D           	dec a
 861+ 971E 28 09        	jr z,1F
 862+ 9720 32 10 89      	ld (Numero_de_malotes),a
 863+ 9723
 864+ 9723 ED 7B 17 89  	ld sp,(Stack_2)
 865+ 9727 18 D4        	jr 2B
 866+ 9729
 867+ 9729 AF           1 xor a
 868+ 972A 32 17 89     	ld (Stack_2),a
 869+ 972D
 870+ 972D C9           	ret
# file closed: Draw_XOR.asm
1662  972E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 972E              ;   índices de Rutinas de impresión.
   2+ 972E
   3+ 972E 3E 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9730 6B 97            defw Pinta_Amadeus_3x2
   5+ 9732
   6+ 9732 C1 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9734 61 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9736 15 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9738
  10+ 9738 EB 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 973A EF 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 973C A3 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 973E
  14+ 973E
  15+ 973E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 973E              ;
  17+ 973E              ;   12/12/22
  18+ 973E              ;
  19+ 973E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 973E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 973E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 973E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 973E              ;
  24+ 973E              ;   Modifica: DE y HL.
  25+ 973E
  26+ 973E ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9742 FD F9        	ld sp,iy
  28+ 9744 06 10            ld b,16
  29+ 9746 D1           1 pop de
  30+ 9747 7B               ld a,e
  31+ 9748 AE               xor (hl)
  32+ 9749 77           	ld (hl),a
  33+ 974A 23           	inc hl
  34+ 974B 7A               ld a,d
  35+ 974C AE               xor (hl)
  36+ 974D 77           	ld (hl),a
  37+ 974E 2B           	dec hl
  38+ 974F 24           	inc h
  39+ 9750 7C               ld a,h
  40+ 9751 E6 07            and 7
  41+ 9753 20 0A            jr nz,2F
  42+ 9755 7D               ld a,l
  43+ 9756 C6 20            add a,$20
  44+ 9758 6F               ld l,a
  45+ 9759 38 04            jr c,2F
  46+ 975B 7C               ld a,h
  47+ 975C D6 08            sub 8
  48+ 975E 67               ld h,a
  49+ 975F 7C           2 ld a,h
  50+ 9760 FE 58            cp $58
  51+ 9762 28 02            jr z,3F
  52+ 9764 10 E0            djnz 1B
  53+ 9766 ED 7B 15 89  3 ld sp,(Stack)
  54+ 976A C9           	ret
  55+ 976B
  56+ 976B ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 976F FD F9        	ld sp,iy
  58+ 9771 06 08            ld b,8
  59+ 9773 D1           1 pop de
  60+ 9774 7B               ld a,e
  61+ 9775 AE               xor (hl)
  62+ 9776 77           	ld (hl),a
  63+ 9777 23           	inc hl
  64+ 9778 7A               ld a,d
  65+ 9779 AE               xor (hl)
  66+ 977A 77           	ld (hl),a
  67+ 977B 23           	inc hl
  68+ 977C D1           	pop de
  69+ 977D 7B               ld a,e
  70+ 977E AE               xor (hl)
  71+ 977F 77           	ld (hl),a
  72+ 9780 2B           	dec hl
  73+ 9781 2B           	dec hl
  74+ 9782 24           	inc h
  75+ 9783 7C               ld a,h
  76+ 9784 E6 07            and 7
  77+ 9786 20 0A            jr nz,2F
  78+ 9788 7D               ld a,l
  79+ 9789 C6 20            add a,$20
  80+ 978B 6F               ld l,a
  81+ 978C 38 04            jr c,2F
  82+ 978E 7C               ld a,h
  83+ 978F D6 08            sub 8
  84+ 9791 67               ld h,a
  85+ 9792 7C           2 ld a,h
  86+ 9793 FE 58            cp $58
  87+ 9795 28 25            jr z,4F
  88+ 9797 7A               ld a,d
  89+ 9798 AE               xor (hl)
  90+ 9799 77               ld (hl),a
  91+ 979A D1           	pop de
  92+ 979B 23           	inc hl
  93+ 979C 7B               ld a,e
  94+ 979D AE               xor (hl)
  95+ 979E 77           	ld (hl),a
  96+ 979F 23           	inc hl
  97+ 97A0 7A               ld a,d
  98+ 97A1 AE               xor (hl)
  99+ 97A2 77           	ld (hl),a
 100+ 97A3 2B           	dec hl
 101+ 97A4 2B           	dec hl
 102+ 97A5 24           	inc h
 103+ 97A6 7C               ld a,h
 104+ 97A7 E6 07            and 7
 105+ 97A9 20 0A            jr nz,3F
 106+ 97AB 7D               ld a,l
 107+ 97AC C6 20            add a,$20
 108+ 97AE 6F               ld l,a
 109+ 97AF 38 04            jr c,3F
 110+ 97B1 7C               ld a,h
 111+ 97B2 D6 08            sub 8
 112+ 97B4 67               ld h,a
 113+ 97B5 7C           3 ld a,h
 114+ 97B6 FE 58            cp $58
 115+ 97B8 28 02            jr z,4F
 116+ 97BA 10 B7            djnz 1B
 117+ 97BC ED 7B 15 89  4 ld sp,(Stack)
 118+ 97C0 C9           	ret
 119+ 97C1
 120+ 97C1              ; ---------------------------------------------------
 121+ 97C1
 122+ 97C1 ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97C5 FD F9        	ld sp,iy
 124+ 97C7
 125+ 97C7              ; >>>
 126+ 97C7
 127+ 97C7 06 10            ld b,16
 128+ 97C9 D1           1 pop de
 129+ 97CA 7A           	ld a,d
 130+ 97CB AE           	xor (hl)
 131+ 97CC 77           	ld (hl),a
 132+ 97CD 24           	inc h
 133+ 97CE 7C               ld a,h
 134+ 97CF E6 07            and 7
 135+ 97D1 20 0C            jr nz,2F
 136+ 97D3 7D               ld a,l
 137+ 97D4 C6 20            add a,$20
 138+ 97D6 6F               ld l,a
 139+ 97D7 38 06            jr c,2F
 140+ 97D9 7C               ld a,h
 141+ 97DA D6 08            sub 8
 142+ 97DC 67               ld h,a
 143+ 97DD 18 00            jr 2F
 144+ 97DF 7C           2 ld a,h
 145+ 97E0 FE 58            cp $58
 146+ 97E2 28 02            jr z,3F
 147+ 97E4 10 E3            djnz 1B
 148+ 97E6 ED 7B 15 89  3 ld sp,(Stack)
 149+ 97EA C9           	ret
 150+ 97EB
 151+ 97EB ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97EF FD F9        	ld sp,iy
 153+ 97F1
 154+ 97F1              ; >>>
 155+ 97F1
 156+ 97F1 06 10            ld b,16
 157+ 97F3 D1           1 pop de
 158+ 97F4 7B           	ld a,e
 159+ 97F5 AE           	xor (hl)
 160+ 97F6 77           	ld (hl),a
 161+ 97F7 24           	inc h
 162+ 97F8 7C               ld a,h
 163+ 97F9 E6 07            and 7
 164+ 97FB 20 0C            jr nz,2F
 165+ 97FD 7D               ld a,l
 166+ 97FE C6 20            add a,$20
 167+ 9800 6F               ld l,a
 168+ 9801 38 06            jr c,2F
 169+ 9803 7C               ld a,h
 170+ 9804 D6 08            sub 8
 171+ 9806 67               ld h,a
 172+ 9807 18 00            jr 2F
 173+ 9809 7C           2 ld a,h
 174+ 980A FE 58            cp $58
 175+ 980C 28 02            jr z,3F
 176+ 980E 10 E3            djnz 1B
 177+ 9810 ED 7B 15 89  3 ld sp,(Stack)
 178+ 9814 C9           	ret
 179+ 9815
 180+ 9815              ; ---------------------------------------------------
 181+ 9815
 182+ 9815 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9819 FD F9        	ld sp,iy
 184+ 981B 06 08            ld b,8
 185+ 981D D1           1 pop de
 186+ 981E 7A           	ld a,d
 187+ 981F AE           	xor (hl)
 188+ 9820 77           	ld (hl),a
 189+ 9821 23           	inc hl
 190+ 9822 D1           	pop de
 191+ 9823 7B           	ld a,e
 192+ 9824 AE           	xor (hl)
 193+ 9825 77           	ld (hl),a
 194+ 9826 2B           	dec hl
 195+ 9827 24            	inc h
 196+ 9828 7C               ld a,h
 197+ 9829 E6 07            and 7
 198+ 982B 20 0A            jr nz,2F
 199+ 982D 7D               ld a,l
 200+ 982E C6 20            add a,$20
 201+ 9830 6F               ld l,a
 202+ 9831 38 04            jr c,2F
 203+ 9833 7C               ld a,h
 204+ 9834 D6 08            sub 8
 205+ 9836 67               ld h,a
 206+ 9837 7C           2 ld a,h
 207+ 9838 FE 58            cp $58
 208+ 983A 28 20            jr z,4F
 209+ 983C D1               pop de
 210+ 983D 7B           	ld a,e
 211+ 983E AE           	xor (hl)
 212+ 983F 77           	ld (hl),a
 213+ 9840 23           	inc hl
 214+ 9841 7A           	ld a,d
 215+ 9842 AE           	xor (hl)
 216+ 9843 77           	ld (hl),a
 217+ 9844 2B           	dec hl
 218+ 9845 24           	inc h
 219+ 9846 7C               ld a,h
 220+ 9847 E6 07            and 7
 221+ 9849 20 0A            jr nz,3F
 222+ 984B 7D               ld a,l
 223+ 984C C6 20            add a,$20
 224+ 984E 6F               ld l,a
 225+ 984F 38 04            jr c,3F
 226+ 9851 7C               ld a,h
 227+ 9852 D6 08            sub 8
 228+ 9854 67               ld h,a
 229+ 9855 7C           3 ld a,h
 230+ 9856 FE 58            cp $58
 231+ 9858 28 02            jr z,4F
 232+ 985A 10 C1            djnz 1B
 233+ 985C ED 7B 15 89  4 ld sp,(Stack)
 234+ 9860 C9           	ret
 235+ 9861
 236+ 9861 ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9865 FD F9        	ld sp,iy
 238+ 9867 06 08            ld b,8
 239+ 9869 D1           1 pop de
 240+ 986A D1           	pop de
 241+ 986B 7B           	ld a,e
 242+ 986C AE           	xor (hl)
 243+ 986D 77           	ld (hl),a
 244+ 986E 24            	inc h
 245+ 986F 7C               ld a,h
 246+ 9870 E6 07            and 7
 247+ 9872 20 0A            jr nz,2F
 248+ 9874 7D               ld a,l
 249+ 9875 C6 20            add a,$20
 250+ 9877 6F               ld l,a
 251+ 9878 38 04            jr c,2F
 252+ 987A 7C               ld a,h
 253+ 987B D6 08            sub 8
 254+ 987D 67               ld h,a
 255+ 987E 7C           2 ld a,h
 256+ 987F FE 58            cp $58
 257+ 9881 28 1B            jr z,4F
 258+ 9883 D1               pop de
 259+ 9884 7A           	ld a,d
 260+ 9885 AE           	xor (hl)
 261+ 9886 77           	ld (hl),a
 262+ 9887 24           	inc h
 263+ 9888 7C               ld a,h
 264+ 9889 E6 07            and 7
 265+ 988B 20 0A            jr nz,3F
 266+ 988D 7D               ld a,l
 267+ 988E C6 20            add a,$20
 268+ 9890 6F               ld l,a
 269+ 9891 38 04            jr c,3F
 270+ 9893 7C               ld a,h
 271+ 9894 D6 08            sub 8
 272+ 9896 67               ld h,a
 273+ 9897 7C           3 ld a,h
 274+ 9898 FE 58            cp $58
 275+ 989A 28 02            jr z,4F
 276+ 989C 10 CB            djnz 1B
 277+ 989E ED 7B 15 89  4 ld sp,(Stack)
 278+ 98A2 C9           	ret
 279+ 98A3
 280+ 98A3 ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98A7 FD F9        	ld sp,iy
 282+ 98A9 06 08            ld b,8
 283+ 98AB D1           1 pop de
 284+ 98AC 7B           	ld a,e
 285+ 98AD AE           	xor (hl)
 286+ 98AE 77           	ld (hl),a
 287+ 98AF 23           	inc hl
 288+ 98B0 7A           	ld a,d
 289+ 98B1 AE           	xor (hl)
 290+ 98B2 77           	ld (hl),a
 291+ 98B3 2B           	dec hl
 292+ 98B4 24             	inc h
 293+ 98B5 7C               ld a,h
 294+ 98B6 E6 07            and 7
 295+ 98B8 20 0A            jr nz,2F
 296+ 98BA 7D               ld a,l
 297+ 98BB C6 20            add a,$20
 298+ 98BD 6F               ld l,a
 299+ 98BE 38 04            jr c,2F
 300+ 98C0 7C               ld a,h
 301+ 98C1 D6 08            sub 8
 302+ 98C3 67               ld h,a
 303+ 98C4 7C           2 ld a,h
 304+ 98C5 FE 58            cp $58
 305+ 98C7 28 21            jr z,4F
 306+ 98C9 D1               pop de
 307+ 98CA 7A           	ld a,d
 308+ 98CB AE           	xor (hl)
 309+ 98CC 77           	ld (hl),a
 310+ 98CD 23           	inc hl
 311+ 98CE D1               pop de
 312+ 98CF 7B           	ld a,e
 313+ 98D0 AE           	xor (hl)
 314+ 98D1 77           	ld (hl),a
 315+ 98D2 2B           	dec hl
 316+ 98D3 24           	inc h
 317+ 98D4 7C               ld a,h
 318+ 98D5 E6 07            and 7
 319+ 98D7 20 0A            jr nz,3F
 320+ 98D9 7D               ld a,l
 321+ 98DA C6 20            add a,$20
 322+ 98DC 6F               ld l,a
 323+ 98DD 38 04            jr c,3F
 324+ 98DF 7C               ld a,h
 325+ 98E0 D6 08            sub 8
 326+ 98E2 67               ld h,a
 327+ 98E3 7C           3 ld a,h
 328+ 98E4 FE 58            cp $58
 329+ 98E6 28 02            jr z,4F
 330+ 98E8 10 C1            djnz 1B
 331+ 98EA ED 7B 15 89  4 ld sp,(Stack)
 332+ 98EE C9           	ret
 333+ 98EF
 334+ 98EF ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98F3 FD F9        	ld sp,iy
 336+ 98F5 06 08            ld b,8
 337+ 98F7 D1           1 pop de
 338+ 98F8 7B           	ld a,e
 339+ 98F9 AE           	xor (hl)
 340+ 98FA 77           	ld (hl),a
 341+ 98FB 24            	inc h
 342+ 98FC 7C               ld a,h
 343+ 98FD E6 07            and 7
 344+ 98FF 20 0A            jr nz,2F
 345+ 9901 7D               ld a,l
 346+ 9902 C6 20            add a,$20
 347+ 9904 6F               ld l,a
 348+ 9905 38 04            jr c,2F
 349+ 9907 7C               ld a,h
 350+ 9908 D6 08            sub 8
 351+ 990A 67               ld h,a
 352+ 990B 7C           2 ld a,h
 353+ 990C FE 58            cp $58
 354+ 990E 28 1C            jr z,4F
 355+ 9910 D1               pop de
 356+ 9911 7A           	ld a,d
 357+ 9912 AE           	xor (hl)
 358+ 9913 77           	ld (hl),a
 359+ 9914 24           	inc h
 360+ 9915 7C               ld a,h
 361+ 9916 E6 07            and 7
 362+ 9918 20 0A            jr nz,3F
 363+ 991A 7D               ld a,l
 364+ 991B C6 20            add a,$20
 365+ 991D 6F               ld l,a
 366+ 991E 38 04            jr c,3F
 367+ 9920 7C               ld a,h
 368+ 9921 D6 08            sub 8
 369+ 9923 67               ld h,a
 370+ 9924 7C           3 ld a,h
 371+ 9925 FE 58            cp $58
 372+ 9927 28 03            jr z,4F
 373+ 9929 D1               pop de
 374+ 992A 10 CB            djnz 1B
 375+ 992C ED 7B 15 89  4 ld sp,(Stack)
 376+ 9930 C9           	ret
 377+ 9931
 378+ 9931              ; ---------------------------------------------------
 379+ 9931              ;
 380+ 9931              ;   27/02/23
 381+ 9931              ;
 382+ 9931              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9931              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9931              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9931
 386+ 9931 ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 9935 FD F9            ld sp,iy
 388+ 9937 06 03            ld b,3
 389+ 9939 D1           1 pop de
 390+ 993A 7B               ld a,e
 391+ 993B AE               xor (hl)
 392+ 993C 77               ld (hl),a
 393+ 993D 23               inc hl
 394+ 993E 7A               ld a,d
 395+ 993F AE               xor (hl)
 396+ 9940 77               ld (hl),a
 397+ 9941 2B               dec hl
 398+ 9942
 399+ 9942 24               inc h
 400+ 9943 7C               ld a,h
 401+ 9944 E6 07            and 7
 402+ 9946 20 0A            jr nz,2F
 403+ 9948 7D               ld a,l
 404+ 9949 C6 20            add a,$20
 405+ 994B 6F               ld l,a
 406+ 994C 38 04            jr c,2F
 407+ 994E 7C               ld a,h
 408+ 994F D6 08            sub 8
 409+ 9951 67               ld h,a
 410+ 9952 7C           2 ld a,h
 411+ 9953 FE 58            cp $58
 412+ 9955 28 02            jr z,3F
 413+ 9957
 414+ 9957 10 E0            djnz 1B
 415+ 9959 ED 7B 15 89  3 ld sp,(Stack)
 416+ 995D C9               ret
 417+ 995E
# file closed: Rutinas_de_impresion_sprites.asm
1663  995E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 995E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 995E              ;
   3+ 995E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 995E              ;
   5+ 995E              ; *****************************************************************************************************************************************************************************************
   6+ 995E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 995E
   8+ 995E 7C           calcula_tercio ld a,h
   9+ 995F E6 18        	and $18
  10+ 9961 CB 2F        	sra a
  11+ 9963 CB 2F        	sra a
  12+ 9965 CB 2F        	sra a
  13+ 9967 C9           	ret
  14+ 9968
# file closed: calcula_tercio.asm
1664  9968              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9968              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9968              ;
   3+ 9968              ;
   4+ 9968              ;	CLS.
   5+ 9968              ;
   6+ 9968              ;	Limpia la pantalla y define sus atributos.
   7+ 9968              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9968              ;
   9+ 9968              ;	COLORES: 0 ..... NEGRO
  10+ 9968              ;    		 1 ..... AZUL
  11+ 9968              ; 			 2 ..... ROJO
  12+ 9968              ;			 3 ..... MAGENTA
  13+ 9968              ; 			 4 ..... VERDE
  14+ 9968              ; 			 5 ..... CIAN
  15+ 9968              ;			 6 ..... AMARILLO
  16+ 9968              ; 			 7 ..... BLANCO
  17+ 9968              ;
  18+ 9968              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9968              ;
  20+ 9968              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9968
  22+ 9968
  23+ 9968 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 996B 11 01 40     	LD DE,$4001
  25+ 996E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9971 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9973 ED B0        	LDIR
  28+ 9975 01 FF 02     	LD BC,767
  29+ 9978 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9979 ED B0        	LDIR
  31+ 997B C9           	ret
  32+ 997C
# file closed: Cls.asm
1665  997C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 997C              ; ******************************************************************************************************************************************************************************************
   2+ 997C              ;
   3+ 997C              ;   20/05/23
   4+ 997C              ;
   5+ 997C              ;	Recompone_posicion_inicio
   6+ 997C              ;
   7+ 997C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 997C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 997C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 997C              ;	_ a una u otra rutina.
  11+ 997C
  12+ 997C              Recompone_posicion_inicio
  13+ 997C
  14+ 997C 2A D8 88     	ld hl,(Posicion_inicio)
  15+ 997F 7D           	ld a,l
  16+ 9980 E6 1F        	and $1f
  17+ 9982 28 16        	jr z,1F
  18+ 9984
  19+ 9984 FE 1F        	cp $1f
  20+ 9986 28 0D        	jr z,3F
  21+ 9988
  22+ 9988 21 01 89     	ld hl,Ctrl_2
  23+ 998B CB C6        	set 0,(hl)
  24+ 998D 2A CA 88     	ld hl,(Puntero_objeto)
  25+ 9990 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 9993 18 08        	jr 2F
  27+ 9995
  28+ 9995 CD 36 9B     3 call Mov_left
  29+ 9998 18 03        	jr 2F
  30+ 999A
  31+ 999A CD 18 9A     1 call Mov_right
  32+ 999D 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99A0 22 CA 88     	ld (Puntero_objeto),hl
  34+ 99A3 C9           	ret
  35+ 99A4
  36+ 99A4              ; ******************************************************************************************************************************************************************************************
  37+ 99A4              ;
  38+ 99A4              ;   27/05/23
  39+ 99A4              ;
  40+ 99A4              ;	Mov_down
  41+ 99A4              ;
  42+ 99A4              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99A4              ;
  44+ 99A4              ;
  45+ 99A4              Mov_down
  46+ 99A4
  47+ 99A4 CD 06 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99A7              ;																	; _ repone (Puntero_objeto).
  49+ 99A7 21 F0 88     	ld hl,Ctrl_0
  50+ 99AA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99AC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99AC              ; 																	; _ en el caso de que no lo haya.
  53+ 99AC 3A DE 88     	ld a,(Vel_down)
  54+ 99AF 47           	ld b,a
  55+ 99B0 2A C8 88         ld hl,(Posicion_actual)
  56+ 99B3 CD 5E 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99B6 E6 02        	and 2
  58+ 99B8 28 0F        	jr z,1F
  59+ 99BA
  60+ 99BA              ; Nos encontramos en el último tercio de pantalla.
  61+ 99BA              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99BA
  63+ 99BA 7C           	ld a,h
  64+ 99BB FE 57        	cp $57
  65+ 99BD 20 0A        	jr nz,1F
  66+ 99BF
  67+ 99BF 7D           	ld a,l
  68+ 99C0 C6 20        	add $20
  69+ 99C2 30 05        	jr nc,1F
  70+ 99C4
  71+ 99C4              ; ------------------------------
  72+ 99C4              ;	call Reaparece_arriba
  73+ 99C4 CD C3 9C     	call Reinicio
  74+ 99C7              ; ------------------------------
  75+ 99C7
  76+ 99C7 18 08        	jr 3F
  77+ 99C9 CD 4B 96     1 call NextScan
  78+ 99CC 22 C8 88     	ld (Posicion_actual),hl
  79+ 99CF 10 E2            djnz 2B
  80+ 99D1 CD E9 9C     3 call Genera_coordenadas
  81+ 99D4 C9           	ret
  82+ 99D5
  83+ 99D5              ; ******************************************************************************************************************************************************************************************
  84+ 99D5              ;
  85+ 99D5              ;   27/05/23
  86+ 99D5              ;
  87+ 99D5              ;	Mov_up
  88+ 99D5              ;
  89+ 99D5              ; 	Mueve el Sprite hacia arriba.
  90+ 99D5              ;
  91+ 99D5              ;
  92+ 99D5              Mov_up
  93+ 99D5
  94+ 99D5 CD 06 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99D8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99D8 21 F0 88     	ld hl,Ctrl_0
  97+ 99DB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99DD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99DD              ; 																		; _ en el caso de que no lo haya.
 100+ 99DD 3A DD 88     	ld a,(Vel_up)
 101+ 99E0 47           	ld b,a
 102+ 99E1 2A C8 88     	ld hl,(Posicion_actual)
 103+ 99E4 CD 5E 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99E7 A7           	and a
 105+ 99E8 20 10        	jr nz,1F
 106+ 99EA
 107+ 99EA              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99EA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99EA
 110+ 99EA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99EB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99ED 20 0B            jr nz,1F
 113+ 99EF 7D               ld a,l
 114+ 99F0 D6 20            sub $20
 115+ 99F2 30 06            jr nc,1F
 116+ 99F4 25               dec h
 117+ 99F5
 118+ 99F5              ; -----------------------------
 119+ 99F5 CD A4 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99F8              ;	call Reinicio
 121+ 99F8              ; -----------------------------
 122+ 99F8
 123+ 99F8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99FA CD 5A 96     1 call PreviousScan
 125+ 99FD 22 C8 88     	ld (Posicion_actual),hl
 126+ 9A00 10 E2            djnz 3B
 127+ 9A02 CD E9 9C     2 call Genera_coordenadas
 128+ 9A05 C9           	ret
 129+ 9A06
 130+ 9A06              ; -----------------------------
 131+ 9A06              ;
 132+ 9A06              ;	27/5/23
 133+ 9A06              ;
 134+ 9A06              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A06              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A06              ;
 137+ 9A06              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A06              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A06              ;
 140+ 9A06              ;	Modifica: A y (Puntero_objeto).
 141+ 9A06
 142+ 9A06 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A09 CB 47        	bit 0,a
 144+ 9A0B C8           	ret z
 145+ 9A0C CB 87        	res 0,a
 146+ 9A0E 32 01 89     	ld (Ctrl_2),a
 147+ 9A11 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A14 22 CA 88     	ld (Puntero_objeto),hl
 149+ 9A17 C9           	ret
 150+ 9A18
 151+ 9A18              ; ******************************************************************************************************************************************************************************************
 152+ 9A18              ;
 153+ 9A18              ;	19/10/22
 154+ 9A18              ;
 155+ 9A18              ;	Mov_right.
 156+ 9A18              ;
 157+ 9A18              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A18              ;
 159+ 9A18
 160+ 9A18 21 F0 88     Mov_right ld hl,Ctrl_0
 161+ 9A1B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A1D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A1D              ; 																	; _ en el caso de que no lo haya.
 164+ 9A1D 3A F0 88     	ld a,(Ctrl_0)
 165+ 9A20 CB 77        	bit 6,a
 166+ 9A22 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A24
 168+ 9A24 CD 52 9C     	call Stop_Amadeus_right
 169+ 9A27 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A28 18 4D        	jr 8F
 171+ 9A2A
 172+ 9A2A 3A CC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A2D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A2F 20 46        	jr nz,8F
 175+ 9A31
 176+ 9A31 3A CE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A34 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A35 28 40        	jr z,8F
 179+ 9A37
 180+ 9A37              ; ---------- ---------- ----------
 181+ 9A37              ;
 182+ 9A37              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A37
 184+ 9A37 3A DC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A3A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A3C 28 11        	jr z,1F
 187+ 9A3E 38 06        	jr c,6F
 188+ 9A40 FE 04        	cp 4
 189+ 9A42 28 14        	jr z,7F
 190+ 9A44 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A46
 192+ 9A46              ; ---------- ---------- ----------
 193+ 9A46              ;
 194+ 9A46              ; Perfiles de velocidad
 195+ 9A46              ;
 196+ 9A46
 197+ 9A46 3A CE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A49 FE FE        	cp $fe
 199+ 9A4B 20 2A        	jr nz,8F
 200+ 9A4D 18 10        	jr 3F
 201+ 9A4F 3A CE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A52 FE FD        	cp $fd
 203+ 9A54 20 21        	jr nz,8F
 204+ 9A56 18 07        	jr 3F
 205+ 9A58 3A CE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A5B FE FB        	cp $fb
 207+ 9A5D 20 18        	jr nz,8F
 208+ 9A5F
 209+ 9A5F              ; ---------- ---------- ----------
 210+ 9A5F
 211+ 9A5F              3
 212+ 9A5F CD 92 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A62              ;	call Reinicio
 214+ 9A62
 215+ 9A62              ; ---------- ---------- ----------
 216+ 9A62              ;
 217+ 9A62              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A62
 219+ 9A62 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A64 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A65 CD 7E 9A     	call DESPLZ_DER
 222+ 9A68 C1           	pop bc
 223+ 9A69 10 F9        	djnz 5B
 224+ 9A6B 2A C8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A6E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A6F 22 C8 88     	ld (Posicion_actual),hl
 227+ 9A72 CD E9 9C     	call Genera_coordenadas
 228+ 9A75 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A77
 230+ 9A77              ; ---------- ---------- ----------
 231+ 9A77
 232+ 9A77 2A C8 88     8 ld hl,(Posicion_actual)
 233+ 9A7A CD 7E 9A     	call DESPLZ_DER
 234+ 9A7D C9           2 ret
 235+ 9A7E
 236+ 9A7E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A7E              ;
 238+ 9A7E              ;	22/9/22
 239+ 9A7E              ;
 240+ 9A7E
 241+ 9A7E CD 8D 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A81 CD D9 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A84 CD 02 9B         call Ciclo_completo
 244+ 9A87 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A8A CB FE        	set 7,(hl)
 246+ 9A8C C9           	ret
 247+ 9A8D
 248+ 9A8D              ; ******************************************************************************************************************************************************************************************
 249+ 9A8D              ;	15/02/23
 250+ 9A8D              ;
 251+ 9A8D
 252+ 9A8D 3A DC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A90 47           	ld b,a
 254+ 9A91 2A D4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A94 23           1 inc hl
 256+ 9A95 23           	inc hl
 257+ 9A96 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A98 22 D4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A9B CD 7E 8C     	call Extrae_address
 260+ 9A9E 22 CA 88     	ld (Puntero_objeto),hl
 261+ 9AA1
 262+ 9AA1              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AA1
 264+ 9AA1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AA1              ; Cuántos movimientos hemos hecho ??
 266+ 9AA1              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AA1
 268+ 9AA1 2A D0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AA4 EB           	ex de,hl
 270+ 9AA5 A7           	and a
 271+ 9AA6 ED 52        	sbc hl,de
 272+ 9AA8 CB 3D        	srl l
 273+ 9AAA 3E 08        6 ld a,8
 274+ 9AAC 95           	sub l
 275+ 9AAD 30 1E        	jr nc,3F
 276+ 9AAF
 277+ 9AAF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AAF              ; B="0".
 279+ 9AAF
 280+ 9AAF 04           4 inc b
 281+ 9AB0 3C           	inc a
 282+ 9AB1 20 FC        	jr nz,4B
 283+ 9AB3 78           	ld a,b
 284+ 9AB4 08           	ex af,af
 285+ 9AB5 2A D0 88     	ld hl,(Indice_Sprite_der)
 286+ 9AB8 23           5 inc hl
 287+ 9AB9 23           	inc hl
 288+ 9ABA 10 FC        	djnz 5B
 289+ 9ABC 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9ABF CD 7E 8C     	call Extrae_address
 291+ 9AC2 22 CA 88     	ld (Puntero_objeto),hl
 292+ 9AC5
 293+ 9AC5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AC5              ; _(Posicion_actual).
 295+ 9AC5
 296+ 9AC5 21 C8 88     	ld hl,Posicion_actual
 297+ 9AC8 34           	inc (hl)
 298+ 9AC9 08               ex af,af
 299+ 9ACA 6F           	ld l,a
 300+ 9ACB 18 DD        	jr 6B
 301+ 9ACD
 302+ 9ACD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9ACD
 304+ 9ACD 47           3 ld b,a
 305+ 9ACE 2A D2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AD1 23           2 inc hl
 307+ 9AD2 23           	inc hl
 308+ 9AD3 10 FC        	djnz 2B
 309+ 9AD5 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AD8 C9           8 ret
 311+ 9AD9
 312+ 9AD9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AD9              ;
 314+ 9AD9              ;	24/7/22
 315+ 9AD9              ;
 316+ 9AD9              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AD9              ;
 318+ 9AD9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AD9              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AD9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AD9
 322+ 9AD9 3A CE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9ADC A7           	and a
 324+ 9ADD 20 1F        	jr nz,1F
 325+ 9ADF D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AE1 32 CE 88         ld (CTRL_DESPLZ),a
 327+ 9AE4
 328+ 9AE4 21 C7 88     	ld hl,Columns
 329+ 9AE7 34           	inc (hl)
 330+ 9AE8 3A DA 88     	ld a,(Cuad_objeto)
 331+ 9AEB E6 01        	and 1
 332+ 9AED 28 0F        	jr z,1F
 333+ 9AEF 2A C8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AF2 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AF3 22 C8 88     	ld (Posicion_actual),hl
 336+ 9AF6 CD E9 9C     	call Genera_coordenadas
 337+ 9AF9 CD 5E 9C     	call Inc_CTRL_DESPLZ
 338+ 9AFC 18 03        	jr 2F
 339+ 9AFE CD 5E 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B01 C9           2 ret
 341+ 9B02
 342+ 9B02              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B02              ;
 344+ 9B02              ;	24/7/22
 345+ 9B02              ;
 346+ 9B02              ;	Ciclo_completo.
 347+ 9B02              ;
 348+ 9B02              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B02              ;
 350+ 9B02              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B02              ; 	Decrementamos (Columns).
 352+ 9B02              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B02              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B02
 355+ 9B02
 356+ 9B02 3A CE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B05 FE FF        	cp $ff
 358+ 9B07 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B09 E6 F0        	and $f0
 360+ 9B0B 20 28        	jr nz,3F
 361+ 9B0D
 362+ 9B0D              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B0D
 364+ 9B0D 3A CE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B10 47           	ld b,a
 366+ 9B11 3E F8        	ld a,$f8
 367+ 9B13 80           	add b
 368+ 9B14 32 CE 88     	ld (CTRL_DESPLZ),a
 369+ 9B17 18 1C        	jr 3F
 370+ 9B19 21 C7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B1C 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B1D AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B1E 32 CE 88     	ld (CTRL_DESPLZ),a
 374+ 9B21 3A DA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B24 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B26 20 0A        	jr nz,2F
 377+ 9B28 2A C8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B2B 23           	inc hl
 379+ 9B2C 22 C8 88     	ld (Posicion_actual),hl
 380+ 9B2F CD E9 9C     	call Genera_coordenadas
 381+ 9B32
 382+ 9B32              ; Inicia el puntero de Sprite.
 383+ 9B32
 384+ 9B32 CD 95 8C     2 call Inicia_puntero_objeto_der
 385+ 9B35 C9           3 ret
 386+ 9B36
 387+ 9B36              ; ******************************************************************************************************************************************************************************************
 388+ 9B36              ;
 389+ 9B36              ;	15/02/23
 390+ 9B36              ;
 391+ 9B36              ;	Mov_left.
 392+ 9B36              ;
 393+ 9B36              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B36              ;
 395+ 9B36              Mov_left
 396+ 9B36
 397+ 9B36 21 F0 88     	ld hl,Ctrl_0
 398+ 9B39 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B3B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B3B              ; 																	; _ en el caso de que no lo haya.
 401+ 9B3B 3A F0 88     	ld a,(Ctrl_0)
 402+ 9B3E CB 77        	bit 6,a
 403+ 9B40 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B42
 405+ 9B42 CD 58 9C     	call Stop_Amadeus_left
 406+ 9B45 C8           	ret z
 407+ 9B46 20 4A        	jr nz,8F
 408+ 9B48
 409+ 9B48 3A CC 88     11 ld a,(Coordenada_X)
 410+ 9B4B A7           	and a
 411+ 9B4C 20 44        	jr nz,8F
 412+ 9B4E
 413+ 9B4E 3A CE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B51 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B52 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B54
 417+ 9B54              ; ---------- ---------- ----------
 418+ 9B54
 419+ 9B54 3A DB 88     	ld a,(Vel_left)
 420+ 9B57 FE 02        	cp 2
 421+ 9B59 28 0F        	jr z,1F
 422+ 9B5B 38 04        	jr c,6F
 423+ 9B5D FE 04        	cp 4
 424+ 9B5F 28 12        	jr z,7F
 425+ 9B61
 426+ 9B61              ; ---------- ---------- ----------
 427+ 9B61
 428+ 9B61 3A CE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B64 FE F8        	cp $f8
 430+ 9B66 20 2A        	jr nz,8F
 431+ 9B68 18 10        	jr 4F
 432+ 9B6A 3A CE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B6D FE F9        	cp $f9
 434+ 9B6F 20 21        	jr nz,8F
 435+ 9B71 18 07        	jr 4F
 436+ 9B73 3A CE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B76 FE FB        	cp $fb
 438+ 9B78 20 18        	jr nz,8F
 439+ 9B7A
 440+ 9B7A              ; ---------- ---------- ----------
 441+ 9B7A
 442+ 9B7A              4
 443+ 9B7A CD 80 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B7D              ;	call Reinicio
 445+ 9B7D
 446+ 9B7D              ; ---------- ---------- ----------
 447+ 9B7D
 448+ 9B7D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B7F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B80
 451+ 9B80              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B80              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B80
 454+ 9B80 CD 99 9B     	call DESPLZ_IZQ
 455+ 9B83 C1           	pop bc
 456+ 9B84 10 F9        	djnz 5B
 457+ 9B86 2A C8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B89 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B8A 22 C8 88     	ld (Posicion_actual),hl
 460+ 9B8D CD E9 9C     	call Genera_coordenadas
 461+ 9B90 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B92
 463+ 9B92              ; ---------- ---------- ----------
 464+ 9B92
 465+ 9B92              ; Movemos, no hay recolocación.
 466+ 9B92
 467+ 9B92 2A C8 88     8 ld hl,(Posicion_actual)
 468+ 9B95 CD 99 9B     	call DESPLZ_IZQ
 469+ 9B98 C9           2 ret
 470+ 9B99
 471+ 9B99              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B99              ;
 473+ 9B99              ;	22/9/22
 474+ 9B99
 475+ 9B99              DESPLZ_IZQ
 476+ 9B99
 477+ 9B99 CD A8 9B     	call Desplaza_izquierda
 478+ 9B9C CD F4 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B9F CD 1C 9C     	call Ciclo_completo_2
 480+ 9BA2 21 F0 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BA5 CB BE        	res 7,(hl)
 482+ 9BA7 C9           	ret
 483+ 9BA8
 484+ 9BA8              Desplaza_izquierda
 485+ 9BA8
 486+ 9BA8 3A DB 88     	ld a,(Vel_left)
 487+ 9BAB 47           	ld b,a
 488+ 9BAC 2A D6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BAF 23           1 inc hl
 490+ 9BB0 23           	inc hl
 491+ 9BB1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BB3 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BB6 CD 7E 8C     	call Extrae_address
 494+ 9BB9 22 CA 88     	ld (Puntero_objeto),hl
 495+ 9BBC
 496+ 9BBC              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BBC
 498+ 9BBC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BBC              ; Cuántos movimientos hemos hecho ??
 500+ 9BBC              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BBC
 502+ 9BBC 2A D2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BBF EB           	ex de,hl
 504+ 9BC0 A7           	and a
 505+ 9BC1 ED 52        	sbc hl,de
 506+ 9BC3 CB 3D        	srl l
 507+ 9BC5 3E 08        6 ld a,8
 508+ 9BC7 95           	sub l
 509+ 9BC8 30 1E        	jr nc,3F
 510+ 9BCA
 511+ 9BCA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BCA              ; B="0".
 513+ 9BCA
 514+ 9BCA 04           4 inc b
 515+ 9BCB 3C           	inc a
 516+ 9BCC 20 FC        	jr nz,4B
 517+ 9BCE 78           	ld a,b
 518+ 9BCF 08           	ex af,af
 519+ 9BD0 2A D2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BD3 23           5 inc hl
 521+ 9BD4 23           	inc hl
 522+ 9BD5 10 FC        	djnz 5B
 523+ 9BD7 22 D6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BDA CD 7E 8C     	call Extrae_address
 525+ 9BDD 22 CA 88     	ld (Puntero_objeto),hl
 526+ 9BE0
 527+ 9BE0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BE0              ; _(Posicion_actual).
 529+ 9BE0
 530+ 9BE0 21 C8 88     	ld hl,Posicion_actual
 531+ 9BE3 35           	dec (hl)
 532+ 9BE4 08           	ex af,af
 533+ 9BE5 6F           	ld l,a
 534+ 9BE6 18 DD        	jr 6B
 535+ 9BE8
 536+ 9BE8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BE8
 538+ 9BE8 47           3 ld b,a
 539+ 9BE9 2A D0 88     	ld hl,(Indice_Sprite_der)
 540+ 9BEC 23           2 inc hl
 541+ 9BED 23           	inc hl
 542+ 9BEE 10 FC        	djnz 2B
 543+ 9BF0 22 D4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BF3 C9           8 ret
 545+ 9BF4
 546+ 9BF4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BF4              ;
 548+ 9BF4              ;	modifica_parametros_1er_DESPLZ
 549+ 9BF4              ;
 550+ 9BF4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BF4              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BF4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BF4
 554+ 9BF4 3A CE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BF7 A7           	and a
 556+ 9BF8 20 1E        	jr nz,1F
 557+ 9BFA 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BFB 32 CE 88         ld (CTRL_DESPLZ),a
 559+ 9BFE 21 C7 88     	ld hl,Columns
 560+ 9C01 34           	inc (hl)
 561+ 9C02 3A DA 88     	ld a,(Cuad_objeto)
 562+ 9C05 E6 01        	and 1
 563+ 9C07 20 0F        	jr nz,1F
 564+ 9C09 2A C8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C0C 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C0D 22 C8 88     	ld (Posicion_actual),hl
 567+ 9C10 CD E9 9C     	call Genera_coordenadas
 568+ 9C13 CD 6F 9C     	call Dec_CTRL_DESPLZ
 569+ 9C16 18 03        	jr 2F
 570+ 9C18 CD 6F 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C1B C9           2 ret
 572+ 9C1C
 573+ 9C1C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C1C
 575+ 9C1C 3A CE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C1F FE F7        	cp $f7
 577+ 9C21 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C23 30 2C        	jr nc,3F
 579+ 9C25
 580+ 9C25              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C25
 582+ 9C25 06 00        	ld b,0
 583+ 9C27 04           4 inc b
 584+ 9C28 3C           	inc a
 585+ 9C29 FE F7        	cp $f7
 586+ 9C2B 20 FA        	jr nz,4B
 587+ 9C2D 3E FF        	ld a,$ff
 588+ 9C2F 90           	sub b
 589+ 9C30 32 CE 88     	ld (CTRL_DESPLZ),a
 590+ 9C33 18 1C        	jr 3F
 591+ 9C35
 592+ 9C35              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C35
 594+ 9C35 21 C7 88     1 ld hl,Columns
 595+ 9C38 35           	dec (hl)
 596+ 9C39 AF           	xor a
 597+ 9C3A 32 CE 88     	ld (CTRL_DESPLZ),a
 598+ 9C3D 3A DA 88     	ld a,(Cuad_objeto)
 599+ 9C40 E6 01        	and 1
 600+ 9C42 28 0A        	jr z,2F
 601+ 9C44 2A C8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C47 2B           	dec hl
 603+ 9C48 22 C8 88     	ld (Posicion_actual),hl
 604+ 9C4B CD E9 9C     	call Genera_coordenadas
 605+ 9C4E
 606+ 9C4E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C4E
 608+ 9C4E CD A8 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C51 C9           3 ret
 610+ 9C52
 611+ 9C52              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C52              ;
 613+ 9C52              ;	19/10/22
 614+ 9C52              ;
 615+ 9C52              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C52              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C52
 618+ 9C52 3A CC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C55 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C57 C9           	ret
 621+ 9C58
 622+ 9C58              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C58              ;
 624+ 9C58              ;	19/10/22
 625+ 9C58              ;
 626+ 9C58              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C58              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C58
 629+ 9C58 3A CC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C5B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C5D C9           	ret
 632+ 9C5E
 633+ 9C5E              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C5E              ;
 635+ 9C5E              ;	24/7/22
 636+ 9C5E              ;
 637+ 9C5E              ;	Inc_CTRL_DESPLZ
 638+ 9C5E              ;
 639+ 9C5E              ;
 640+ 9C5E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C5E
 642+ 9C5E 21 CE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C61 3A DC 88     	ld a,(Vel_right)
 644+ 9C64 A7           	and a
 645+ 9C65 28 06        	jr z,1F
 646+ 9C67 47           	ld b,a
 647+ 9C68 34           3 inc (hl)
 648+ 9C69 10 FD        	djnz 3B
 649+ 9C6B 18 01        	jr 2F
 650+ 9C6D 34           1 inc (hl)
 651+ 9C6E C9           2 ret
 652+ 9C6F
 653+ 9C6F              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C6F              ;
 655+ 9C6F              ;	5/2/23
 656+ 9C6F              ;
 657+ 9C6F              ;	Dec_CTRL_DESPLZ
 658+ 9C6F              ;
 659+ 9C6F              ;
 660+ 9C6F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C6F
 662+ 9C6F 21 CE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C72 3A DB 88     	ld a,(Vel_left)
 664+ 9C75 A7           	and a
 665+ 9C76 28 06        	jr z,1F
 666+ 9C78 47           	ld b,a
 667+ 9C79 35           3 dec (hl)
 668+ 9C7A 10 FD        	djnz 3B
 669+ 9C7C 18 01        	jr 2F
 670+ 9C7E 35           1 dec (hl)
 671+ 9C7F C9           2 ret
 672+ 9C80
 673+ 9C80              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C80
 675+ 9C80 2A C8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C83 01 1F 00     	ld bc,31
 677+ 9C86 A7           	and a
 678+ 9C87 ED 4A        	adc hl,bc
 679+ 9C89 22 C8 88     	ld (Posicion_actual),hl
 680+ 9C8C 21 F0 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C8F CB C6        	set 0,(hl)
 682+ 9C91 C9           	ret
 683+ 9C92
 684+ 9C92              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C92
 686+ 9C92 2A C8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C95 01 1F 00     	ld bc,31
 688+ 9C98 A7           	and a
 689+ 9C99 ED 42        	sbc hl,bc
 690+ 9C9B 22 C8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C9E 21 F0 88     	ld hl,Ctrl_0
 692+ 9CA1 CB CE        	set 1,(hl)
 693+ 9CA3 C9           	ret
 694+ 9CA4
 695+ 9CA4              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CA4
 697+ 9CA4 24           Reaparece_abajo inc h
 698+ 9CA5 01 E0 17     	ld bc,$17e0
 699+ 9CA8 A7           	and a
 700+ 9CA9 ED 4A        	adc hl,bc
 701+ 9CAB 22 C8 88     	ld (Posicion_actual),hl
 702+ 9CAE 21 F0 88     	ld hl,Ctrl_0
 703+ 9CB1 CB D6        	set 2,(hl)
 704+ 9CB3 C9           	ret
 705+ 9CB4
 706+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CB4
 708+ 9CB4 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CB7 A7           	and a
 710+ 9CB8 ED 42        	sbc hl,bc
 711+ 9CBA 22 C8 88     	ld (Posicion_actual),hl
 712+ 9CBD 21 F0 88     	ld hl,Ctrl_0
 713+ 9CC0 CB DE        	set 3,(hl)
 714+ 9CC2 C9           	ret
 715+ 9CC3
 716+ 9CC3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CC3              ;
 718+ 9CC3              ;	15/07/23
 719+ 9CC3
 720+ 9CC3              Reinicio
 721+ 9CC3
 722+ 9CC3              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CC3
 724+ 9CC3 AF           	xor a
 725+ 9CC4 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CC7 CD E5 9C     	call Limpia_contenido_hl
 727+ 9CCA
 728+ 9CCA 21 C8 88     	ld hl,Posicion_actual
 729+ 9CCD CD E5 9C     	call Limpia_contenido_hl
 730+ 9CD0
 731+ 9CD0 CD 15 A0     	call Inicializa_Puntero_indice_mov
 732+ 9CD3 CD 9F 9F     	call Inicia_Puntero_mov
 733+ 9CD6
 734+ 9CD6 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9CD9 06 05        	ld b,5
 736+ 9CDB 77           1 ld (hl),a
 737+ 9CDC 23           	inc hl
 738+ 9CDD 10 FC        	djnz 1B
 739+ 9CDF
 740+ 9CDF 21 01 89     	ld hl,Ctrl_2
 741+ 9CE2 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CE4
 743+ 9CE4 C9           	ret
 744+ 9CE5
 745+ 9CE5 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CE6 23           	inc hl
 747+ 9CE7 77           	ld (hl),a
 748+ 9CE8 C9           	ret
 749+ 9CE9
 750+ 9CE9
# file closed: Direcciones.asm
1666  9CE9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CE9              ; ------------------------------------------------------------------------
   2+ 9CE9              ;
   3+ 9CE9              ;	02/04/23
   4+ 9CE9              ;
   5+ 9CE9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CE9              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CE9              ;
   8+ 9CE9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CE9              ;
  10+ 9CE9              ;	Modifica: A,BC y DE.
  11+ 9CE9
  12+ 9CE9 C5           Genera_coordenadas push bc
  13+ 9CEA E5           	push hl
  14+ 9CEB D5           	push de
  15+ 9CEC
  16+ 9CEC 2A C8 88     	ld hl,(Posicion_actual)
  17+ 9CEF
  18+ 9CEF 7D           	ld a,l
  19+ 9CF0 E6 1F        	and $1f
  20+ 9CF2 32 CC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CF5
  22+ 9CF5 CD 5E 99     	call calcula_tercio
  23+ 9CF8 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CF9
  25+ 9CF9 1E 00        	ld e,0
  26+ 9CFB 7D           	ld a,l
  27+ 9CFC E6 E0        	and $e0
  28+ 9CFE 28 01        	jr z,1F
  29+ 9D00 04           	inc b
  30+ 9D01
  31+ 9D01 04           1 inc b
  32+ 9D02 05           	dec b
  33+ 9D03 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D05              ;														; _ , salimos.
  35+ 9D05 1C           3 inc e
  36+ 9D06 D6 20        	sub 32
  37+ 9D08 20 FB        	jr nz,3B
  38+ 9D0A 10 F5        	djnz 1B
  39+ 9D0C
  40+ 9D0C 7B           2 ld a,e
  41+ 9D0D 32 CD 88     	ld (Coordenada_y),a
  42+ 9D10
  43+ 9D10 D1           	pop de
  44+ 9D11 E1           	pop hl
  45+ 9D12 C1           	pop bc
  46+ 9D13
  47+ 9D13 C9           	ret
  48+ 9D14
  49+ 9D14              ; ------------------------------------------------------------------------
  50+ 9D14              ;	28/05/23
  51+ 9D14              ;
  52+ 9D14              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D14              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D14              ;
  55+ 9D14              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D14              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D14              ;
  58+ 9D14              ;		DE="$120d"
  59+ 9D14              ;
  60+ 9D14              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D14              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D14              ;
  63+ 9D14              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D14
  65+ 9D14              ;	Modifica: A,BC y DE.
  66+ 9D14
  67+ 9D14
  68+ 9D14              Genera_coordenadas_disparo
  69+ 9D14
  70+ 9D14              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D14
  72+ 9D14 7D           	ld a,l
  73+ 9D15 E6 1F        	and $1f
  74+ 9D17 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D18 CD 5E 99     	call calcula_tercio
  76+ 9D1B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D1C 1E 00        	ld e,0
  78+ 9D1E 7D           	ld a,l
  79+ 9D1F E6 E0        	and $e0
  80+ 9D21 28 01        	jr z,1F
  81+ 9D23 04           	inc b
  82+ 9D24 1C           1 inc e
  83+ 9D25 D6 20        	sub 32
  84+ 9D27 20 FB        	jr nz,1B
  85+ 9D29 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D2B C9           	ret
  87+ 9D2C
# file closed: Genera_coordenadas.asm
1667  9D2C              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D2C              ; Relojes y temporizaciones.
   2+ 9D2C
   3+ 9D2C              ; ------------------------------------------------------
   4+ 9D2C              ;
   5+ 9D2C              ;	16/7/23
   6+ 9D2C              ;
   7+ 9D2C              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D2C              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D2C              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D2C              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D2C              ;
  12+ 9D2C              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D2C              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D2C
  15+ 9D2C              ; Disparo_entidad db 1
  16+ 9D2C              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D2C              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D2C
  19+ 9D2C              Habilita_disparos
  20+ 9D2C
  21+ 9D2C 7E           	ld a,(hl)
  22+ 9D2D A7           	and a
  23+ 9D2E C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D2F
  25+ 9D2F EB           	ex de,hl
  26+ 9D30
  27+ 9D30 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D31 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D32
  30+ 9D32              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D32
  32+ 9D32 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D33 7E           	ld a,(hl)
  34+ 9D34 23           	inc hl
  35+ 9D35 77           	ld (hl),a
  36+ 9D36
  37+ 9D36 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D37 3E 01        	ld a,1
  39+ 9D39 77           	ld (hl),a
  40+ 9D3A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1668  9D3B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D3B
   2+ 9D3B
   3+ 9D3B              ;   07/07/23
   4+ 9D3B              ;
   5+ 9D3B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D3B              ;
   7+ 9D3B              ;   Codificación:
   8+ 9D3B              ;
   9+ 9D3B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D3B              ;
  11+ 9D3B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D3B              ;
  13+ 9D3B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D3B              ;
  15+ 9D3B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D3B              ;
  17+ 9D3B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D3B              ;                               ..... %01000010 Vel_up 4
  19+ 9D3B              ;                                               Vel_down 2
  20+ 9D3B              ;                               ..... $42
  21+ 9D3B              ;
  22+ 9D3B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D3B              ;
  24+ 9D3B              ;                               ..... %01000010 Vel_left 4
  25+ 9D3B              ;                                               Vel_right 2
  26+ 9D3B              ;                               ..... $42
  27+ 9D3B              ;
  28+ 9D3B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D3B              ;
  30+ 9D3B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D3B              ;
  32+ 9D3B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D3B              ;
  34+ 9D3B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D3B              ;                                     $53
  36+ 9D3B              ;
  37+ 9D3B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D3B              ;
  39+ 9D3B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D3B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D3B              ;
  42+ 9D3B              ;                       Arriba ..... $81
  43+ 9D3B              ;                       Arriba - izquierda ..... $a1
  44+ 9D3B              ;                       Arriba - derecha ..... $91
  45+ 9D3B              ;
  46+ 9D3B              ;                       Abajo ..... $41
  47+ 9D3B              ;                       Abajo - izquierda ..... $61
  48+ 9D3B              ;                       Abajo - derecha ..... $51
  49+ 9D3B              ;
  50+ 9D3B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D3B              ;
  52+ 9D3B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D3B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D3B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D3B              ;
  56+ 9D3B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D3B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D3B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D3B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D3B              ;
  61+ 9D3B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D3B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D3B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D3B              ;
  65+ 9D3B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D3B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D3B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D3B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D3B
  70+ 9D3B              ; ----- ----- ----- ----- -----
  71+ 9D3B
  72+ 9D3B 67 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D3D 6F 9D            defw F_1
  74+ 9D3F 79 9D            defw F_2
  75+ 9D41 83 9D            defw Codo_abajo_derecha
  76+ 9D43 B7 9D            defw Derecha_y_subiendo
  77+ 9D45 C1 9D            defw Derecha_y_subiendo_1
  78+ 9D47 CB 9D            defw F_3
  79+ 9D49 D5 9D            defw F_4
  80+ 9D4B DF 9D            defw Derecha_y_bajando
  81+ 9D4D E9 9D            defw Derecha_y_bajando_1
  82+ 9D4F F3 9D            defw Derecha_y_bajando_2
  83+ 9D51 FD 9D            defw Codo_derecha_abajo
  84+ 9D53 2D 9E            defw Codo_abajo_izq.
  85+ 9D55 61 9E            defw Izquierda_y_subiendo
  86+ 9D57 6B 9E            defw Izquierda_y_subiendo_1
  87+ 9D59 75 9E            defw F_5
  88+ 9D5B 7F 9E            defw F_6
  89+ 9D5D 89 9E            defw Izquierda_y_bajando
  90+ 9D5F 93 9E            defw Izquierda_y_bajando_1
  91+ 9D61 9D 9E            defw Izquierda_y_bajando_2
  92+ 9D63 A7 9E            defw Codo_izquierda_abajo
  93+ 9D65 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D67
  95+ 9D67 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D6B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D6F
  98+ 9D6F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D73 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D77 08 00
 100+ 9D79 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D7D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D81 0F FE
 102+ 9D83
 103+ 9D83 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D87 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D8B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D8F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D93 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D97 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D9B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D9F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DA3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DA7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DAB 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DAF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DB3 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DB7
 117+ 9DB7 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DBB 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DBF 06 00
 119+ 9DC1
 120+ 9DC1 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DC5 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DC9 02 00
 122+ 9DCB
 123+ 9DCB 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DCF 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DD3 04 00
 125+ 9DD5 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DD9 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DDD 08 00
 127+ 9DDF
 128+ 9DDF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DE3 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DE7 02 00
 130+ 9DE9
 131+ 9DE9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DED 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DF1 06 00
 133+ 9DF3
 134+ 9DF3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DF7 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DFB 06 00
 136+ 9DFD
 137+ 9DFD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DFD
 139+ 9DFD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E01 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E05 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E09 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E0D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E11 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E15 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E19 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E1D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E21 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E25 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E29 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E2D
 152+ 9E2D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E31 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E35 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E39 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E3D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E41 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E45 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E49 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E4D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E51 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E55 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E59 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E5D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E61
 166+ 9E61 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E65 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E69 06 00
 168+ 9E6B
 169+ 9E6B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E6F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E73 02 00
 171+ 9E75
 172+ 9E75 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E79 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E7D 04 00
 174+ 9E7F 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E83 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E87 08 00
 176+ 9E89
 177+ 9E89 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E8D 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E91 02 00
 179+ 9E93
 180+ 9E93 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E97 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E9B 06 00
 182+ 9E9D
 183+ 9E9D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EA1 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EA5 06 00
 185+ 9EA7
 186+ 9EA7 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EAB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EAF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EB3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9EB7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9EBB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9EBF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9EC3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EC7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9ECB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9ECF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9ED3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9ED7
 199+ 9ED7              ; ----- ----- ----- ----- -----
 200+ 9ED7              ;
 201+ 9ED7              ;   27/06/23
 202+ 9ED7
 203+ 9ED7              Movimiento
 204+ 9ED7
 205+ 9ED7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9ED7
 207+ 9ED7              ;    ld hl,(Posicion_actual)
 208+ 9ED7
 209+ 9ED7 3A 01 89         ld a,(Ctrl_2)
 210+ 9EDA CB 57            bit 2,a
 211+ 9EDC 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EDE
 213+ 9EDE 2A F3 88         ld hl,(Puntero_mov)
 214+ 9EE1 7E               ld a,(hl)
 215+ 9EE2
 216+ 9EE2              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EE2
 218+ 9EE2              Inicia_desplazamiento.
 219+ 9EE2
 220+ 9EE2              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EE2
 222+ 9EE2 CD D6 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EE5
 224+ 9EE5              ; Iniciamos (Repetimos_mov).
 225+ 9EE5
 226+ 9EE5 7E               ld a,(hl)
 227+ 9EE6 E6 0F            and $0f
 228+ 9EE8 32 F9 88         ld (Repetimos_desplazamiento),a
 229+ 9EEB 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EEE
 231+ 9EEE              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EEE
 233+ 9EEE 23               inc hl
 234+ 9EEF 7E               ld a,(hl)
 235+ 9EF0 32 FC 88         ld (Cola_de_desplazamiento),a
 236+ 9EF3 2B               dec hl
 237+ 9EF4
 238+ 9EF4 21 01 89         ld hl,Ctrl_2
 239+ 9EF7 CB D6            set 2,(hl)
 240+ 9EF9
 241+ 9EF9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9EF9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9EF9
 244+ 9EF9              Desplazamiento_iniciado
 245+ 9EF9
 246+ 9EF9 CD AA 9F         call Aplica_desplazamiento
 247+ 9EFC
 248+ 9EFC 3A 01 89         ld a,(Ctrl_2)
 249+ 9EFF CB 67            bit 4,a
 250+ 9F01 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F02
 252+ 9F02 21 F9 88     3 ld hl,Repetimos_desplazamiento
 253+ 9F05 35               dec (hl)
 254+ 9F06 C0               ret nz
 255+ 9F07
 256+ 9F07              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F07              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F07              ; Analiza (Cola_de_desplazamiento).
 259+ 9F07
 260+ 9F07 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F0A A7               and a
 262+ 9F0B CC FF 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F0E 28 30            jr z,Reinicia_el_movimiento
 264+ 9F10
 265+ 9F10 FE FF            cp $ff
 266+ 9F12 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F14
 268+ 9F14 FE FE            cp $fe
 269+ 9F16 CC 83 9F         call z,Fijamos_bucle
 270+ 9F19 28 25            jr z,Reinicia_el_movimiento
 271+ 9F1B
 272+ 9F1B FE FD            cp $fd
 273+ 9F1D 20 11            jr nz,1F
 274+ 9F1F
 275+ 9F1F              ; ---
 276+ 9F1F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F1F
 278+ 9F1F 3A 01 89         ld a,(Ctrl_2)
 279+ 9F22 CB 5F            bit 3,a
 280+ 9F24 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F26
 282+ 9F26              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F26
 284+ 9F26 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F29 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F2B
 287+ 9F2B CD 94 9F         call Inicia_Repetimos_movimiento
 288+ 9F2E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F30              ; ---
 290+ 9F30
 291+ 9F30 FE 01        1 cp 1
 292+ 9F32 CA 6D 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F35
 294+ 9F35 3D               dec a
 295+ 9F36 32 FC 88         ld (Cola_de_desplazamiento),a
 296+ 9F39
 297+ 9F39 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F3C 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F3F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F3F C9               ret
 301+ 9F40
 302+ 9F40              Reinicia_el_movimiento
 303+ 9F40
 304+ 9F40 3A 01 89         ld a,(Ctrl_2)
 305+ 9F43 CB 5F            bit 3,a
 306+ 9F45 28 1B            jr z,2F
 307+ 9F47
 308+ 9F47              ; (Cola_de_desplazamiento)="254".
 309+ 9F47
 310+ 9F47 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F4A 35               dec (hl)
 312+ 9F4B 20 15            jr nz,2F
 313+ 9F4D
 314+ 9F4D              ; Fin de las repeticiones del último movimiento.
 315+ 9F4D
 316+ 9F4D 21 01 89         ld hl,Ctrl_2
 317+ 9F50 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F52
 319+ 9F52 2A F3 88         ld hl,(Puntero_mov)
 320+ 9F55 23               inc hl
 321+ 9F56 23               inc hl
 322+ 9F57 23               inc hl
 323+ 9F58 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F5B              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F5B 7E               ld a,(hl)
 326+ 9F5C 32 FC 88         ld (Cola_de_desplazamiento),a
 327+ 9F5F
 328+ 9F5F C3 07 9F         jp Cola
 329+ 9F62
 330+ 9F62 CD 9F 9F     2 call Inicia_Puntero_mov
 331+ 9F65
 332+ 9F65 21 01 89         ld hl,Ctrl_2
 333+ 9F68 CB 96            res 2,(hl)
 334+ 9F6A
 335+ 9F6A C3 D7 9E         jp Movimiento
 336+ 9F6D
 337+ 9F6D              Siguiente_desplazamiento
 338+ 9F6D
 339+ 9F6D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F6D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F6D
 342+ 9F6D 21 01 89         ld hl,Ctrl_2
 343+ 9F70 CB 96            res 2,(hl)
 344+ 9F72
 345+ 9F72 2A F3 88         ld hl,(Puntero_mov)
 346+ 9F75 23               inc hl
 347+ 9F76 23               inc hl
 348+ 9F77 22 F3 88         ld (Puntero_mov),hl
 349+ 9F7A
 350+ 9F7A 7E               ld a,(hl)
 351+ 9F7B A7               and a
 352+ 9F7C CC FF 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F7F CA 40 9F         jp z,Reinicia_el_movimiento
 354+ 9F82
 355+ 9F82 C9               ret
 356+ 9F83              ; Subrutinas -----------------------------------------
 357+ 9F83              ; ---------- --------- --------- ---------- ----------
 358+ 9F83              ;
 359+ 9F83              ;   24/07/23
 360+ 9F83              ;
 361+ 9F83              ;   Fijamos_bucle
 362+ 9F83              ;
 363+ 9F83              ;
 364+ 9F83
 365+ 9F83              Fijamos_bucle
 366+ 9F83
 367+ 9F83 3A F7 88         ld a,(Incrementa_puntero)
 368+ 9F86 3C               inc a
 369+ 9F87 32 F8 88         ld (Incrementa_puntero_backup),a
 370+ 9F8A
 371+ 9F8A CD FF 9F         call Incrementa_Puntero_indice_mov
 372+ 9F8D 2A F1 88         ld hl,(Puntero_indice_mov)
 373+ 9F90 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F93 C9               ret
 375+ 9F94
 376+ 9F94              ; ---------- --------- --------- ---------- ----------
 377+ 9F94              ;
 378+ 9F94              ;   07/7/23
 379+ 9F94              ;
 380+ 9F94              ;   Inicia_Repetimos_movimiento
 381+ 9F94              ;
 382+ 9F94              ;
 383+ 9F94
 384+ 9F94              Inicia_Repetimos_movimiento
 385+ 9F94
 386+ 9F94              ; Iniciamos (Repetimos_movimiento).
 387+ 9F94
 388+ 9F94 DD 2A F3 88      ld ix,(Puntero_mov)
 389+ 9F98 DD 7E 02         ld a,(ix+2)
 390+ 9F9B 32 FB 88         ld (Repetimos_movimiento),a
 391+ 9F9E
 392+ 9F9E C9               ret
 393+ 9F9F
 394+ 9F9F              ; ---------- --------- --------- ---------- ----------
 395+ 9F9F              ;
 396+ 9F9F              ;   26/6/23
 397+ 9F9F              ;
 398+ 9F9F              ;   Inicia_Puntero_mov
 399+ 9F9F              ;
 400+ 9F9F              ;
 401+ 9F9F
 402+ 9F9F 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9FA2 5E               ld e,(hl)
 404+ 9FA3 23               inc hl
 405+ 9FA4 56               ld d,(hl)
 406+ 9FA5 EB               ex de,hl
 407+ 9FA6 22 F3 88         ld (Puntero_mov),hl
 408+ 9FA9 C9               ret
 409+ 9FAA
 410+ 9FAA              ; ---------- --------- --------- ---------- ----------
 411+ 9FAA              ;
 412+ 9FAA              ;   27/06/23
 413+ 9FAA              ;
 414+ 9FAA              ;   Aplica_movimiento.
 415+ 9FAA
 416+ 9FAA              Aplica_desplazamiento
 417+ 9FAA
 418+ 9FAA              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9FAA
 420+ 9FAA 2A F3 88         ld hl, (Puntero_mov)
 421+ 9FAD
 422+ 9FAD 7E               ld a,(hl)
 423+ 9FAE E6 F0            and $f0
 424+ 9FB0 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9FB1
 426+ 9FB1 CB 7E            bit 7,(hl)
 427+ 9FB3 28 03            jr z,1F
 428+ 9FB5 CD D5 99         call Mov_up
 429+ 9FB8 2A F3 88     1 ld hl, (Puntero_mov)
 430+ 9FBB CB 76            bit 6,(hl)
 431+ 9FBD 28 03            jr z,2F
 432+ 9FBF CD A4 99         call Mov_down
 433+ 9FC2 2A F3 88     2 ld hl, (Puntero_mov)
 434+ 9FC5 CB 6E            bit 5,(hl)
 435+ 9FC7 28 03            jr z,3F
 436+ 9FC9 CD 36 9B         call Mov_left
 437+ 9FCC 2A F3 88     3 ld hl, (Puntero_mov)
 438+ 9FCF CB 66            bit 4,(hl)
 439+ 9FD1 C8               ret z
 440+ 9FD2 CD 18 9A         call Mov_right
 441+ 9FD5 C9               ret
 442+ 9FD6
 443+ 9FD6              ; ---------- --------- --------- ---------- ----------
 444+ 9FD6              ;
 445+ 9FD6              ;   26/06/23
 446+ 9FD6              ;
 447+ 9FD6              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FD6
 449+ 9FD6              Ajusta_velocidad_desplazamiento
 450+ 9FD6
 451+ 9FD6              ; 1er byte de la cadena de movimiento.
 452+ 9FD6              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FD6
 454+ 9FD6 CD F4 9F         call Extrae_nibble_alto
 455+ 9FD9
 456+ 9FD9 32 DD 88         ld (Vel_up),a
 457+ 9FDC 79               ld a,c
 458+ 9FDD E6 0F            and $0f
 459+ 9FDF 32 DE 88         ld (Vel_down),a
 460+ 9FE2
 461+ 9FE2              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FE2              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FE2
 464+ 9FE2 23               inc hl
 465+ 9FE3 CD F4 9F         call Extrae_nibble_alto
 466+ 9FE6
 467+ 9FE6 32 DB 88         ld (Vel_left),a
 468+ 9FE9 79               ld a,c
 469+ 9FEA E6 0F            and $0f
 470+ 9FEC 32 DC 88         ld (Vel_right),a
 471+ 9FEF
 472+ 9FEF              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FEF
 474+ 9FEF 23               inc hl
 475+ 9FF0 22 F3 88         ld (Puntero_mov),hl
 476+ 9FF3 C9               ret
 477+ 9FF4
 478+ 9FF4 06 04        Extrae_nibble_alto ld b,4
 479+ 9FF6 7E               ld a,(hl)
 480+ 9FF7 4F               ld c,a
 481+ 9FF8 E6 F0            and $f0
 482+ 9FFA CB 3F        1 srl a
 483+ 9FFC 10 FC            djnz 1B
 484+ 9FFE C9               ret
 485+ 9FFF
 486+ 9FFF              ; ---------- --------- --------- ---------- ----------
 487+ 9FFF              ;
 488+ 9FFF              ;   5/7/23
 489+ 9FFF              ;
 490+ 9FFF              ;   Incrementa_Puntero_indice_mov
 491+ 9FFF
 492+ 9FFF              Incrementa_Puntero_indice_mov
 493+ 9FFF
 494+ 9FFF 21 F7 88         ld hl,Incrementa_puntero
 495+ A002 34               inc (hl)
 496+ A003
 497+ A003 2A F1 88         ld hl,(Puntero_indice_mov)
 498+ A006 01 02 00         ld bc,2
 499+ A009 A7               and a
 500+ A00A 09               add hl,bc
 501+ A00B 22 F1 88         ld (Puntero_indice_mov),hl
 502+ A00E
 503+ A00E 7E               ld a,(hl)
 504+ A00F A7               and a
 505+ A010
 506+ A010              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ A010
 508+ A010              ;    jr z,$
 509+ A010
 510+ A010              ;! Reinicia el Patrón de movimiento.
 511+ A010
 512+ A010 CC 15 A0         call z,Inicializa_Puntero_indice_mov
 513+ A013
 514+ A013 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ A014
 516+ A014 C9               ret
 517+ A015
 518+ A015
 519+ A015              ; ---------- --------- --------- ---------- ----------
 520+ A015              ;
 521+ A015              ;   24/07/23
 522+ A015              ;
 523+ A015              ;   Inicializa_Puntero_indice_mov
 524+ A015
 525+ A015              Inicializa_Puntero_indice_mov
 526+ A015
 527+ A015              ; Existe etiqueta de bucle principal???
 528+ A015
 529+ A015 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 530+ A018 24               inc h
 531+ A019 25               dec h
 532+ A01A 28 05            jr z,2F
 533+ A01C
 534+ A01C 22 F1 88         ld (Puntero_indice_mov),hl
 535+ A01F 18 14            jr 3F
 536+ A021
 537+ A021              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ A021
 539+ A021 3A F7 88     2 ld a,(Incrementa_puntero)
 540+ A024 47               ld b,a
 541+ A025
 542+ A025 2A F1 88         ld hl,(Puntero_indice_mov)
 543+ A028 2B           1 dec hl
 544+ A029 2B               dec hl
 545+ A02A 10 FC            djnz 1B
 546+ A02C 22 F1 88         ld (Puntero_indice_mov),hl
 547+ A02F
 548+ A02F AF               xor a
 549+ A030 32 F7 88         ld (Incrementa_puntero),a
 550+ A033 18 06            jr 4F
 551+ A035
 552+ A035 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 553+ A038 32 F7 88         ld (Incrementa_puntero),a
 554+ A03B C9           4 ret
 555+ A03C
 556+ A03C
 557+ A03C
# file closed: Patrones_de_mov.asm
1669  A03C              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A03C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A03C              ;
   3+ A03C              ;	4/9/23
   4+ A03C              ;
   5+ A03C              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A03C
   7+ A03C              ;	ADC HL,SP	LD (addr),SP
   8+ A03C              ;	ADD HL,SP	LD SP,(addr)
   9+ A03C              ;	ADD IX,SP	LD SP,nn
  10+ A03C              ; 	ADD IY,SP	LD SP,HL
  11+ A03C              ;				LD SP,IX
  12+ A03C              ;	DEC SP		LD SP,IY
  13+ A03C
  14+ A03C              ;	EX (SP),HL
  15+ A03C              ;	EX (SP),IX
  16+ A03C              ;	EX (SP),IY
  17+ A03C
  18+ A03C              ;	INC SP
  19+ A03C
  20+ A03C                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4
  33+ 7FA4              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  34+ 7FA4
  35+ 7FA4 31 E6 88         ld sp,Variables_de_borrado+6
  36+ 7FA7
  37+ 7FA7 E5               push hl
  38+ 7FA8 DD E5            push ix
  39+ 7FAA FD E5            push iy
  40+ 7FAC
  41+ 7FAC 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  42+ 7FAF
  43+ 7FAF E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  44+ 7FB0 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  45+ 7FB2 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  46+ 7FB4
  47+ 7FB4              ; Disparo o entidad?
  48+ 7FB4
  49+ 7FB4 3A 03 89         ld a,(Ctrl_1)
  50+ 7FB7 CB 47            bit 0,a
  51+ 7FB9 28 05            jr z,2F
  52+ 7FBB
  53+ 7FBB 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  54+ 7FBE 18 0F            jr 4F
  55+ 7FC0
  56+ 7FC0              ; No es disparo. Entidad/Amadeus ????
  57+ 7FC0
  58+ 7FC0 3A F0 88     2 ld a,(Ctrl_0)
  59+ 7FC3 CB 77            bit 6,a
  60+ 7FC5 28 05            jr z,7F
  61+ 7FC7
  62+ 7FC7              ; Guardamos foto de Amadeus.
  63+ 7FC7
  64+ 7FC7 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  65+ 7FCA 18 03            jr 4F
  66+ 7FCC
  67+ 7FCC 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  68+ 7FCF
  69+ 7FCF 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  70+ 7FD1
  71+ 7FD1 D1           1 pop de
  72+ 7FD2 73               ld (hl),e
  73+ 7FD3 23               inc hl
  74+ 7FD4 72               ld (hl),d
  75+ 7FD5 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  76+ 7FD6 10 F9            djnz 1B
  77+ 7FD8
  78+ 7FD8              ; Disparo o entidad ?
  79+ 7FD8
  80+ 7FD8 3A 03 89         ld a,(Ctrl_1)
  81+ 7FDB CB 47            bit 0,a
  82+ 7FDD 28 05            jr z,5F
  83+ 7FDF
  84+ 7FDF 22 1D 89         ld (Stack_snapshot_disparos),hl
  85+ 7FE2 18 12            jr 6F
  86+ 7FE4
  87+ 7FE4              ; Entidad o Amadeus ?
  88+ 7FE4
  89+ 7FE4 3A F0 88     5 ld a,(Ctrl_0)
  90+ 7FE7 CB 77            bit 6,a
  91+ 7FE9 28 08            jr z,8F
  92+ 7FEB
  93+ 7FEB 22 23 89         ld (End_Snapshot_Amadeus),hl
  94+ 7FEE ED 7B 15 89      ld sp,(Stack)
  95+ 7FF2 C9               ret
  96+ 7FF3
  97+ 7FF3 22 1B 89     8 ld (Stack_snapshot),hl
  98+ 7FF6 ED 7B 15 89  6 ld sp,(Stack)
  99+ 7FFA
 100+ 7FFA              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 101+ 7FFA
 102+ 7FFA 5D               ld e,l
 103+ 7FFB 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 104+ 7FFC
 105+ 7FFC 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 106+ 7FFF 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 107+ 8000 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 108+ 8001 72               ld (hl),d                                     ; _ álbum a otro.
 109+ 8002
 110+ 8002 C9               ret
 111+ 8003
 112+ 8003              ; ------------------------------------------------
 113+ 8003              ;
 114+ 8003              ;   3/08/23
 115+ 8003              ;
 116+ 8003              ;   La rutina estará situada justo después de:
 117+ 8003              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 120+ 8003              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 121+ 8003
 122+ 8003                  org $72ec
 123+ 72EC
 124+ 72EC              Gestiona_albumes_de_fotos
 125+ 72EC
 126+ 72EC              ;   En 1er lugar limpiamos el FRAME pintado.
 127+ 72EC              ;   Vaciamos Album_de_fotos.
 128+ 72EC
 129+ 72EC              ;   Album_de_fotos. Contiene datos ???
 130+ 72EC
 131+ 72EC 21 01 70         ld hl,Album_de_fotos+1
 132+ 72EF 7E               ld a,(hl)
 133+ 72F0 A7               and a
 134+ 72F1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 135+ 72F3
 136+ 72F3 2A 1F 89         ld hl,(End_Snapshot)
 137+ 72F6 01 00 70         ld bc,Album_de_fotos
 138+ 72F9 11 01 70         ld de,Album_de_fotos+1
 139+ 72FC AF               xor a
 140+ 72FD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 141+ 72FE
 142+ 72FE CD 8E 73         call Limpia_album
 143+ 7301
 144+ 7301 21 00 00         ld hl,0
 145+ 7304 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 146+ 7307
 147+ 7307              ; ----- ----- ----- -----
 148+ 7307
 149+ 7307              ;   Album_de_fotos_1. Contiene datos ???
 150+ 7307
 151+ 7307 21 55 70     3 ld hl,Album_de_fotos_1+1
 152+ 730A 7E               ld a,(hl)
 153+ 730B A7               and a
 154+ 730C 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 155+ 730E              ;                               ; _ información del album2 al album1.
 156+ 730E
 157+ 730E              ; ----- ----- ----- -----
 158+ 730E              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 159+ 730E
 160+ 730E 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 161+ 7311 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 162+ 7314 11 00 70         ld de,Album_de_fotos        ; Destino.
 163+ 7317
 164+ 7317 CD 8E 73         call Limpia_album
 165+ 731A
 166+ 731A              ;   Calculamos (End_Snapshot)
 167+ 731A
 168+ 731A A7               and a
 169+ 731B ED 4A            adc hl,bc
 170+ 731D 22 1F 89         ld (End_Snapshot),hl
 171+ 7320
 172+ 7320              ;   Limpiamos Album_de_fotos_1.
 173+ 7320
 174+ 7320 2A 25 89         ld hl,(End_Snapshot_1)
 175+ 7323 01 54 70         ld bc,Album_de_fotos_1
 176+ 7326 11 55 70         ld de,Album_de_fotos_1+1
 177+ 7329 AF               xor a
 178+ 732A 02               ld (bc),a
 179+ 732B
 180+ 732B CD 8E 73         call Limpia_album
 181+ 732E
 182+ 732E 21 00 00         ld hl,0
 183+ 7331 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 184+ 7334
 185+ 7334              ; ----- ----- ----- -----
 186+ 7334
 187+ 7334              ;   Album_de_fotos_2. Contiene datos ???
 188+ 7334
 189+ 7334 21 A9 70     1 ld hl,Album_de_fotos_2+1
 190+ 7337 7E               ld a,(hl)
 191+ 7338 A7               and a
 192+ 7339 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 193+ 733B              ;                               ; _ información del album3 al album2.
 194+ 733B              ; ----- ----- ----- -----
 195+ 733B              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 196+ 733B
 197+ 733B 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 198+ 733E 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 199+ 7341 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 200+ 7344
 201+ 7344 CD 8E 73         call Limpia_album
 202+ 7347
 203+ 7347              ;   Calculamos (End_Snapshot_1):
 204+ 7347
 205+ 7347 A7               and a
 206+ 7348 ED 4A            adc hl,bc
 207+ 734A 22 25 89         ld (End_Snapshot_1),hl
 208+ 734D
 209+ 734D              ;   Limpiamos Album_de_fotos_2.
 210+ 734D
 211+ 734D 2A 29 89         ld hl,(End_Snapshot_2)
 212+ 7350 01 A8 70         ld bc,Album_de_fotos_2
 213+ 7353 11 A9 70         ld de,Album_de_fotos_2+1
 214+ 7356 AF               xor a
 215+ 7357 02               ld (bc),a
 216+ 7358
 217+ 7358 CD 8E 73         call Limpia_album
 218+ 735B
 219+ 735B 21 00 00         ld hl,0
 220+ 735E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 221+ 7361
 222+ 7361              ; ----- ----- ----- -----
 223+ 7361
 224+ 7361              ;   Album_de_fotos_3. Contiene datos ???
 225+ 7361
 226+ 7361 21 FD 70     2 ld hl,Album_de_fotos_3+1
 227+ 7364 7E               ld a,(hl)
 228+ 7365 A7               and a
 229+ 7366 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 230+ 7367
 231+ 7367              ; ----- ----- ----- -----
 232+ 7367              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 233+ 7367
 234+ 7367 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 235+ 736A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 236+ 736D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 237+ 7370
 238+ 7370 CD 8E 73         call Limpia_album
 239+ 7373
 240+ 7373              ;   Calculamos (End_Snapshot_2):
 241+ 7373
 242+ 7373 A7               and a
 243+ 7374 ED 4A            adc hl,bc
 244+ 7376 22 29 89         ld (End_Snapshot_2),hl
 245+ 7379
 246+ 7379              ;   Limpiamos Album_de_fotos_3.
 247+ 7379
 248+ 7379 2A 2D 89         ld hl,(End_Snapshot_3)
 249+ 737C 01 FC 70         ld bc,Album_de_fotos_3
 250+ 737F 11 FD 70         ld de,Album_de_fotos_3+1
 251+ 7382 AF               xor a
 252+ 7383 02               ld (bc),a
 253+ 7384
 254+ 7384 CD 8E 73         call Limpia_album
 255+ 7387
 256+ 7387 21 00 00         ld hl,0
 257+ 738A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 258+ 738D C9               ret
 259+ 738E
 260+ 738E              ; ----------------------------------------------------
 261+ 738E              ;
 262+ 738E              ;   10/8/23
 263+ 738E              ;
 264+ 738E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 265+ 738E              ;
 266+ 738E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 267+ 738E              ;           BC ..... Dirección de inicio del álbum.
 268+ 738E              ;           DE ..... Dirección de inicio del álbum. +1
 269+ 738E
 270+ 738E              ;    ld hl,(End_Snapshot)
 271+ 738E              ;    ld bc,Album_de_fotos
 272+ 738E              ;    ld de,Album_de_fotos+1
 273+ 738E
 274+ 738E              ;   MODIFICA: A,HL,BC y DE.
 275+ 738E
 276+ 738E              Limpia_album
 277+ 738E D5               push de                     ; Guardo DESTINO.
 278+ 738F C5               push bc                     ; Guardo ORIGEN.
 279+ 7390 ED 42            sbc hl,bc
 280+ 7392 4D               ld c,l
 281+ 7393 44               ld b,h
 282+ 7394 E1               pop hl
 283+ 7395 C5               push bc
 284+ 7396 ED B0            ldir
 285+ 7398 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 286+ 7399 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 287+ 739A C9               ret                         ; _ a otro).
 288+ 739B              ;
 289+ 739B
 290+ 739B              ; -----------------------------------------------
 291+ 739B              ;
 292+ 739B              ;   13/10/23
 293+ 739B
 294+ 739B              Actualiza_semaforo_de_albumes
 295+ 739B
 296+ 739B              ; Está activo el bit "Album_de_fotos" ???
 297+ 739B
 298+ 739B 3A 3D 89         ld a,(Semaforo_de_albumes_de_entidades)
 299+ 739E CB 47            bit 0,a
 300+ 73A0 20 04            jr nz,1F
 301+ 73A2 CB C7            set 0,a                     ; Album_de_fotos COMPLETO.
 302+ 73A4 18 15            jr 2F
 303+ 73A6 CB 4F        1 bit 1,a
 304+ 73A8 20 04            jr nz,3F
 305+ 73AA CB CF            set 1,a                      ; Album_de_fotos_1 COMPLETO.
 306+ 73AC 18 0D            jr 2F
 307+ 73AE CB 57        3 bit 2,a
 308+ 73B0 20 04            jr nz,4F
 309+ 73B2 CB D7            set 2,a                      ; Album_de_fotos_2 COMPLETO.
 310+ 73B4 18 05            jr 2F
 311+ 73B6 CB 5F        4 bit 3,a
 312+ 73B8 C0               ret nz                       ; Album_de_fotos_3 COMPLETO.
 313+ 73B9 CB DF            set 3,a
 314+ 73BB 32 3D 89     2 ld (Semaforo_de_albumes_de_entidades),a
 315+ 73BE C9               ret
 316+ 73BF
 317+ 73BF
 318+ 73BF
# file closed: Guarda_foto_registros.asm
1670  73BF
1671  73BF              	SAVESNA "Pruebas.sna", START
1672  73BF
1673  73BF
1674  73BF
1675  73BF
# file closed: Banco_de_Pruebas.asm
