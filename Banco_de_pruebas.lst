# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 53 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD FD 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD 0D 8D     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 5D 88     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 53 88  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC 02 9C        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C4 85        	defw Caja_2
 110+ 8574 D0 85        	defw Caja_3
 111+ 8576 DC 85        	defw Caja_4
 112+ 8578 E8 85        	defw Caja_5
 113+ 857A F4 85        	defw Caja_6
 114+ 857C 00 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 12 bytes !!!
 155+ 85B8
 156+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 157+ 85BA 00           	db %00000000										; (Attr).
 158+ 85BB              ;	db 0												; (Cuad_objeto).
 159+ 85BB 00           	db 0												; (Impacto).
 160+ 85BC 00 00        	defw 0												; (Puntero_de_impresion).
 161+ 85BE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 162+ 85C0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 163+ 85C2 00           	db 0												; (Ctrl_0).
 164+ 85C3 00           	db 0												; (Ctrl_2).
 165+ 85C4
 166+ 85C4              ; ---------- ---------- ---------- ---------- ----------
 167+ 85C4
 168+ 85C4 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 169+ 85C6 00           	db %00000000										; (Attr).
 170+ 85C7              ;	db 0												; (Cuad_objeto).
 171+ 85C7 00           	db 0												; (Impacto).
 172+ 85C8 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 85CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 85CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 85CE 00           	db 0												; (Ctrl_0).
 176+ 85CF 00           	db 0												; (Ctrl_2).
 177+ 85D0
 178+ 85D0              ; ---------- ---------- ---------- ---------- ----------
 179+ 85D0
 180+ 85D0 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 181+ 85D2 00           	db %00000000										; (Attr).
 182+ 85D3              ;	db 0												; (Cuad_objeto).
 183+ 85D3 00           	db 0												; (Impacto).
 184+ 85D4 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 85D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 85D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 85DA 00           	db 0												; (Ctrl_0).
 188+ 85DB 00           	db 0												; (Ctrl_2).
 189+ 85DC
 190+ 85DC              ; ---------- ---------- ---------- ---------- ----------
 191+ 85DC
 192+ 85DC 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 193+ 85DE 00           	db %00000000										; (Attr).
 194+ 85DF              ;	db 0												; (Cuad_objeto).
 195+ 85DF 00           	db 0												; (Impacto).
 196+ 85E0 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 85E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 85E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 85E6 00           	db 0												; (Ctrl_0).
 200+ 85E7 00           	db 0												; (Ctrl_2).
 201+ 85E8
 202+ 85E8              ; ---------- ---------- ---------- ---------- ----------
 203+ 85E8
 204+ 85E8 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 205+ 85EA 00           	db %00000000										; (Attr).
 206+ 85EB              ;	db 0												; (Cuad_objeto).
 207+ 85EB 00           	db 0												; (Impacto).
 208+ 85EC 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 85EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 85F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 85F2 00           	db 0												; (Ctrl_0).
 212+ 85F3 00           	db 0												; (Ctrl_2).
 213+ 85F4
 214+ 85F4              ; ---------- ---------- ---------- ---------- ----------
 215+ 85F4
 216+ 85F4 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 217+ 85F6 00           	db %00000000										; (Attr).
 218+ 85F7              ;	db 0												; (Cuad_objeto).
 219+ 85F7 00           	db 0												; (Impacto).
 220+ 85F8 00 00        	defw 0												; (Puntero_de_impresion).
 221+ 85FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 222+ 85FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 223+ 85FE 00           	db 0												; (Ctrl_0).
 224+ 85FF 00           	db 0												; (Ctrl_2).
 225+ 8600
 226+ 8600              ; ---------- ---------- ---------- ---------- ----------
 227+ 8600
 228+ 8600 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 229+ 8602 00           	db %00000000										; (Attr).
 230+ 8603              ;	db 0												; (Cuad_objeto).
 231+ 8603 00           	db 0												; (Impacto).
 232+ 8604 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 8606 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 8608 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 860A 00           	db 0												; (Ctrl_0).
 236+ 860B 00           	db 0												; (Ctrl_2).
 237+ 860C
 238+ 860C              ; -------------------------------------------------------------------------------------
 239+ 860C              ;
 240+ 860C              ;	11/1/24
 241+ 860C              ;
 242+ 860C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 243+ 860C              ;
 244+ 860C              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 245+ 860C              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 246+ 860C              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 247+ 860C              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 248+ 860C
 249+ 860C              Indice_de_definiciones_de_entidades
 250+ 860C
 251+ 860C 10 86        	defw Entidad_1
 252+ 860E 1D 86        	defw Entidad_2
 253+ 8610
 254+ 8610              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 255+ 8610
 256+ 8610              ;	BADSAT, (Satélite malvado).
 257+ 8610
 258+ 8610 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 259+ 8613 04           	db %00000100										; (Attr).
 260+ 8614 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 261+ 8616 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 262+ 8618 03 40        	defw $4003                                      	; (Posicion_inicio).
 263+ 861A 01           	db 1												; (Cuad_objeto).
 264+ 861B 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 265+ 861D
 266+ 861D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 267+ 8620 02           	db %00000010										; (Attr).
 268+ 8621 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 269+ 8623 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 270+ 8625 40 50        	defw $5040                                      	; (Posicion_inicio).
 271+ 8627 01           	db 1												; (Cuad_objeto).
 272+ 8628 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 273+ 862A
# file closed: Cajas_y_disparos.asm
 106  862A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 862A              ; 19/1/24
   2+ 862A
   3+ 862A              Indice_de_niveles
   4+ 862A
   5+ 862A 32 86        	defw Nivel_1
   6+ 862C 38 86        	defw Nivel_2
   7+ 862E
   8+ 862E              ;	...
   9+ 862E              ;	...
  10+ 862E              ;	+ Niveles ...
  11+ 862E
  12+ 862E 00 00        	defw 0
  13+ 8630 00 00        	defw 0
  14+ 8632
  15+ 8632 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8633 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8637 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8638
  19+ 8638 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8639 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 863D 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8641 01 02
  22+ 8643 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8647 01 02
  23+ 8649
  24+ 8649              ;---------------------------------------------------------------------------------------------------------------
  25+ 8649              ;
  26+ 8649              ;   19/1/24
  27+ 8649              ;
  28+ 8649              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8649              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8649              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8649              ;	_ de la 1ª entidad del Nivel.
  32+ 8649              ;
  33+ 8649              ;	MODIFICA: HL,DE y A.
  34+ 8649              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8649
  36+ 8649              Inicializa_Nivel
  37+ 8649
  38+ 8649 2A 7C 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 864C CD C6 8B     	call Extrae_address
  40+ 864F 7E           	ld a,(hl)
  41+ 8650 32 47 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8653 23           	inc hl
  43+ 8654 CD 5E 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8657 22 7E 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 865A CD 67 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 865D C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 865E
  48+ 865E              ; ----------------------
  49+ 865E
  50+ 865E 11 26 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8661 01 04 00     	ld bc,4
  52+ 8664 ED B0        	ldir
  53+ 8666 C9           	ret
  54+ 8667
  55+ 8667 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 8668 CD 62 87         call Calcula_salto_en_BC
  57+ 866B 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 866E A7               and a
  59+ 866F ED 4A            adc hl,bc
  60+ 8671 CD C6 8B         call Extrae_address
  61+ 8674 22 32 88         ld (Puntero_indice_mov),hl
  62+ 8677 C9               ret
  63+ 8678
  64+ 8678              ;---------------------------------------------------------------------------------------------------------------
  65+ 8678              ;
  66+ 8678              ;   5/1/24
  67+ 8678              ;
  68+ 8678              ;	Destruye A,BC,HL,DE
  69+ 8678
  70+ 8678              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 8678              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 8678
  73+ 8678              Inicia_Entidades
  74+ 8678
  75+ 8678              ; Preparamos los punteros de las cajas de entidades:
  76+ 8678
  77+ 8678 CD 2E 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 867B              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 867B CD DF 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 867E
  81+ 867E 2A 7E 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 8681
  83+ 8681 22 7E 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 8684
  85+ 8684 CD 10 87     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 8687
  87+ 8687 2A 7E 88     	ld hl,(Datos_de_nivel)
  88+ 868A
  89+ 868A              ; En este punto:
  90+ 868A              ;
  91+ 868A              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 868A              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 868A
  94+ 868A C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 868B
  96+ 868B 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 868C CD 62 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 868F
  99+ 868F 21 0C 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 8692 CD 6A 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 8695
 102+ 8695 CD 74 87     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 8698
 104+ 8698              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 8698
 106+ 8698 CD 32 87     	call Busca_mov_masticados_segun_tipo
 107+ 869B
 108+ 869B A7           	and a
 109+ 869C 28 10        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 869E
 111+ 869E              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 869E
 113+ 869E              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 869E              ;	_ de este tipo de entidad.
 115+ 869E
 116+ 869E CD 0F 9F     	call Situa_en_Contador_general_de_mov_masticados
 117+ 86A1
 118+ 86A1              	; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
 119+ 86A1
 120+ 86A1              	; HL apunta al bye bajo del (Contador_general_de_mov_masticados) de esta entidad.
 121+ 86A1
 122+ 86A1              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 123+ 86A1
 124+ 86A1 CD 0F 9F     	call Situa_en_Contador_general_de_mov_masticados
 125+ 86A4
 126+ 86A4              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
 127+ 86A4              ; Cargamos (Contador_de_mov_masticados) con el (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 128+ 86A4
 129+ 86A4 4E           	ld c,(hl)
 130+ 86A5 23           	inc hl
 131+ 86A6 46           	ld b,(hl) 													; BC contiene los mov_masticados totales de esta entidad.
 132+ 86A7
 133+ 86A7 69           	ld l,c
 134+ 86A8 60           	ld h,b
 135+ 86A9
 136+ 86A9 22 1D 88     	ld (Contador_de_mov_masticados),hl
 137+ 86AC
 138+ 86AC 18 06        	jr 4F
 139+ 86AE
 140+ 86AE
 141+ 86AE CD 7E 8A     3 call Construye_movimientos_masticados_entidad
 142+ 86B1
 143+ 86B1              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 144+ 86B1              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 145+ 86B1              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 146+ 86B1              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 147+ 86B1              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 148+ 86B1
 149+ 86B1 CD F0 86     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 150+ 86B4              ;																; _ Mov_masticados ya generados.
 151+ 86B4 CD D3 8A     4 call Cargamos_registros_con_mov_masticado
 152+ 86B7
 153+ 86B7 CD 16 71     	call Guarda_foto_registros
 154+ 86BA F3           	di
 155+ 86BB              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 156+ 86BB              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 157+ 86BB              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 158+ 86BB
 159+ 86BB              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 160+ 86BB
 161+ 86BB CD E8 86     	call Decrementa_Contador_de_mov_masticados
 162+ 86BE
 163+ 86BE              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 164+ 86BE
 165+ 86BE 2A 19 88     	ld hl,(Puntero_de_impresion)
 166+ 86C1 CD AF 9B     	call Genera_coordenadas
 167+ 86C4
 168+ 86C4 CD A7 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 169+ 86C7 CD DD 86     	call Limpiamos_bandeja_DRAW
 170+ 86CA
 171+ 86CA              ; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 172+ 86CA
 173+ 86CA CD 2E 8C     	call Incrementa_punteros_de_cajas							; Nos situamos en la siguiente caja de entidades.
 174+ 86CD
 175+ 86CD              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 176+ 86CD              ; _ entidad del Nivel.
 177+ 86CD
 178+ 86CD 3A 5E 88     	ld a,(Ctrl_4)
 179+ 86D0 E6 F0        	and $f0
 180+ 86D2 32 5E 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 181+ 86D5
 182+ 86D5              ; Siguiente entidad del Nivel.
 183+ 86D5
 184+ 86D5 2A 7E 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 185+ 86D8 23           	inc hl 														; _ entidad del Nivel.
 186+ 86D9
 187+ 86D9 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 188+ 86DA 10 A5        	djnz 2B
 189+ 86DC
 190+ 86DC C9           	ret
 191+ 86DD
 192+ 86DD              ; ---------------------------------------------------------------------
 193+ 86DD              ;
 194+ 86DD              ;	25/01/24
 195+ 86DD
 196+ 86DD 21 FC 87     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 197+ 86E0 06 2A        	ld b,42
 198+ 86E2 AF           	xor a
 199+ 86E3
 200+ 86E3 77           1 ld (hl),a
 201+ 86E4 23           	inc hl
 202+ 86E5 10 FC        	djnz 1B
 203+ 86E7
 204+ 86E7 C9           	ret
 205+ 86E8
 206+ 86E8              ; ---------------------------------------------------------------------
 207+ 86E8              ;
 208+ 86E8              ;	22/01/24
 209+ 86E8
 210+ 86E8 2A 1D 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 211+ 86EB 2B           	dec hl
 212+ 86EC 22 1D 88     	ld (Contador_de_mov_masticados),hl
 213+ 86EF C9           	ret
 214+ 86F0
 215+ 86F0              ; ---------------------------------------------------------------------
 216+ 86F0              ;
 217+ 86F0              ;	22/01/24
 218+ 86F0
 219+ 86F0 21 5E 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 220+ 86F3 CB 46        	bit 0,(hl)
 221+ 86F5 20 0D        	jr nz,1F
 222+ 86F7 CB 4E        	bit 1,(hl)
 223+ 86F9 20 0C        	jr nz,2F
 224+ 86FB CB 56        	bit 2,(hl)
 225+ 86FD 20 0B        	jr nz,3F
 226+ 86FF CB 5E        	bit 3,(hl)
 227+ 8701 20 0A        	jr nz,4F
 228+ 8703 C9           	ret
 229+ 8704
 230+ 8704 CB E6        1 set 4,(hl)
 231+ 8706 C9           	ret
 232+ 8707 CB EE        2 set 5,(hl)
 233+ 8709 C9           	ret
 234+ 870A CB F6        3 set 6,(hl)
 235+ 870C C9           	ret
 236+ 870D CB FE        4 set 7,(hl)
 237+ 870F C9           	ret
 238+ 8710
 239+ 8710              ; ---------------------------------------------------------------------
 240+ 8710              ;
 241+ 8710              ;	23/01/24
 242+ 8710              ;
 243+ 8710              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 244+ 8710              ;
 245+ 8710              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 246+ 8710              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 247+ 8710              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 248+ 8710              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 249+ 8710
 250+ 8710              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 251+ 8710
 252+ 8710 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 253+ 8711 3D           	dec a
 254+ 8712 20 06        	jr nz,1F
 255+ 8714
 256+ 8714              ; --- Tipo_1
 257+ 8714
 258+ 8714 21 5E 88     	ld hl,Ctrl_4
 259+ 8717 CB C6        	set 0,(hl)
 260+ 8719 C9           	ret
 261+ 871A
 262+ 871A 3D           1 dec a
 263+ 871B 20 06        	jr nz,2F
 264+ 871D
 265+ 871D              ; --- Tipo_2
 266+ 871D
 267+ 871D 21 5E 88     	ld hl,Ctrl_4
 268+ 8720 CB CE        	set 1,(hl)
 269+ 8722 C9           	ret
 270+ 8723
 271+ 8723 3D           2 dec a
 272+ 8724 20 06        	jr nz,3F
 273+ 8726
 274+ 8726              ; --- Tipo_3
 275+ 8726
 276+ 8726 21 5E 88     	ld hl,Ctrl_4
 277+ 8729 CB D6        	set 2,(hl)
 278+ 872B C9           	ret
 279+ 872C
 280+ 872C              ; --- Tipo_3
 281+ 872C
 282+ 872C 21 5E 88     3 ld hl,Ctrl_4
 283+ 872F CB D6        	set 2,(hl)
 284+ 8731 C9           	ret
 285+ 8732
 286+ 8732              ; ---------------------------------------------------------------------
 287+ 8732              ;
 288+ 8732              ;	22/01/24
 289+ 8732
 290+ 8732 21 5E 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 291+ 8735 CB 46        	bit 0,(hl)
 292+ 8737 20 0E        	jr nz,1F
 293+ 8739
 294+ 8739 CB 4E        	bit 1,(hl)
 295+ 873B 20 10        	jr nz,2F
 296+ 873D
 297+ 873D CB 56        	bit 2,(hl)
 298+ 873F 20 12        	jr nz,3F
 299+ 8741
 300+ 8741 CB 5E        	bit 3,(hl)
 301+ 8743 20 14        	jr nz,4F
 302+ 8745 18 19        	jr 6F
 303+ 8747
 304+ 8747              ; Entidad_de_Tipo_1.
 305+ 8747
 306+ 8747 CB 66        1 bit 4,(hl)
 307+ 8749 28 15        	jr z,6F
 308+ 874B 18 10        	jr 5F
 309+ 874D
 310+ 874D              ; Entidad_de_Tipo_2.
 311+ 874D
 312+ 874D CB 6E        2 bit 5,(hl)
 313+ 874F 28 0F        	jr z,6F
 314+ 8751 18 0A        	jr 5F
 315+ 8753
 316+ 8753              ; Entidad_de_Tipo_3.
 317+ 8753
 318+ 8753 CB 76        3 bit 6,(hl)
 319+ 8755 28 09        	jr z,6F
 320+ 8757 18 04        	jr 5F
 321+ 8759
 322+ 8759              ; Entidad_de_Tipo_4.
 323+ 8759
 324+ 8759 CB 7E        4 bit 7,(hl)
 325+ 875B 28 03        	jr z,6F
 326+ 875D
 327+ 875D              ; Esta entidad TIENE MOV_MASTICADOS.
 328+ 875D
 329+ 875D AF           5 xor a
 330+ 875E 3C           	inc a
 331+ 875F C9           	ret
 332+ 8760
 333+ 8760              ; Esta entidad NO TIENE MOV_MASTICADOS.
 334+ 8760
 335+ 8760 AF           6 xor a
 336+ 8761 C9           	ret
 337+ 8762
 338+ 8762              ;	------------------------------------------------------------------------------------
 339+ 8762              ;
 340+ 8762              ;	12/01/24
 341+ 8762              ;
 342+ 8762              ;	INPUTS:	A contiene el (Tipo) de entidad.
 343+ 8762              ;
 344+ 8762              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 345+ 8762              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 346+ 8762
 347+ 8762 CB 27        Calcula_salto_en_BC sla a
 348+ 8764 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 349+ 8766 4F           	ld c,a
 350+ 8767 06 00        	ld b,0
 351+ 8769 C9           	ret
 352+ 876A
 353+ 876A              ; ------------------------------------------------------------------
 354+ 876A              ;
 355+ 876A              ;	19/1/24
 356+ 876A              ;
 357+ 876A              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 358+ 876A              ;	Actualiza (Datos_de_entidad) con esa dirección.
 359+ 876A
 360+ 876A A7           Situa_en_datos_de_definicion and a
 361+ 876B ED 4A        	adc hl,bc
 362+ 876D CD C6 8B     	call Extrae_address
 363+ 8770 22 4D 88         ld (Datos_de_entidad),hl
 364+ 8773 C9           	ret
 365+ 8774
 366+ 8774              ; ------------------------------------------------------------------
 367+ 8774
 368+ 8774              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 369+ 8774              ; 	inc de
 370+ 8774              ; 	inc de
 371+ 8774              ; 	ex de,hl
 372+ 8774              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 373+ 8774              ; 	ret
 374+ 8774
 375+ 8774              ; ----------------------------------------------------------------------------------------------------------
 376+ 8774              ;
 377+ 8774              ;	19/1/24
 378+ 8774              ;
 379+ 8774              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 380+ 8774              ;	_ de entidad.
 381+ 8774              ;
 382+ 8774              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 383+ 8774              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 384+ 8774              ;
 385+ 8774              ;	MODIFICA: HL,DE y BC
 386+ 8774
 387+ 8774
 388+ 8774              Definicion_de_entidad_a_bandeja_DRAW
 389+ 8774
 390+ 8774 11 FC 87     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW
 391+ 8777
 392+ 8777 01 03 00     	ld bc,3
 393+ 877A ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 394+ 877C              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 395+ 877C 01 07 00     	ld bc,7
 396+ 877F CD D5 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 397+ 8782
 398+ 8782 01 05 00     	ld bc,5
 399+ 8785 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 400+ 8787              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 401+ 8787 01 04 00     	ld bc,4
 402+ 878A CD D5 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 403+ 878D
 404+ 878D 01 03 00     	ld bc,3
 405+ 8790 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 406+ 8792              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 407+ 8792
 408+ 8792 01 09 00     	ld bc,9
 409+ 8795 CD D5 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 410+ 8798
 411+ 8798 01 02 00     	ld bc,2
 412+ 879B ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 413+ 879D
 414+ 879D 01 08 00     	ld bc,8
 415+ 87A0 CD D5 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 416+ 87A3
 417+ 87A3 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 418+ 87A5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 419+ 87A6
 420+ 87A6 C9           	ret
 421+ 87A7
 422+ 87A7              ; ----------------------------------------------------------------------------------------------------------
 423+ 87A7              ;
 424+ 87A7              ;	22/01/24
 425+ 87A7              ;
 426+ 87A7              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 427+ 87A7              ;
 428+ 87A7              ;	Las cajas contienen entidades iniciadas:
 429+ 87A7              ;
 430+ 87A7              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 431+ 87A7              ;
 432+ 87A7              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 433+ 87A7              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 434+ 87A7              ;
 435+ 87A7              ;	MODIFICA: HL,DE y BC
 436+ 87A7
 437+ 87A7 21 03 88     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW+7		; HL situado en (Coordenada_X) de la bandeja DRAW.
 438+ 87AA ED 5B 41 88  	ld de,(Puntero_store_caja) 								; DE situado en el 1er .db de la correspondiente caja de entidades.
 439+ 87AE 01 02 00     	ld bc,2
 440+ 87B1 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 441+ 87B3              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 442+ 87B3 23           	inc hl
 443+ 87B4 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 444+ 87B5 12           	ld (de),a
 445+ 87B6 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 446+ 87B7
 447+ 87B7 01 0C 00     	ld bc,12
 448+ 87BA CD DB 87     	call Situa_HL
 449+ 87BD 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 450+ 87BE 12           	ld (de),a
 451+ 87BF 13           	inc de 													; (Impacto), volcado a la caja.
 452+ 87C0              ;															; DE situado ahora en (Puntero_de_impresion).
 453+ 87C0 01 07 00     	ld bc,7
 454+ 87C3 CD DB 87     	call Situa_HL
 455+ 87C6 01 07 00     	ld bc,7
 456+ 87C9 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 457+ 87CB              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 458+ 87CB              ;															; HL apunta ahora a (Columnas).
 459+ 87CB 01 04 00     	ld bc,4
 460+ 87CE CD DB 87     	call Situa_HL
 461+ 87D1 7E           	ld a,(hl)
 462+ 87D2 12           	ld (de),a 												; Volcamos (Ctrl_2).
 463+ 87D3 13           	inc de
 464+ 87D4
 465+ 87D4 C9           	ret
 466+ 87D5
 467+ 87D5              ; -------------------------------------------------------------
 468+ 87D5
 469+ 87D5 EB           Situa_DE ex de,hl
 470+ 87D6 A7           	and a
 471+ 87D7 ED 4A        	adc hl,bc
 472+ 87D9 EB           	ex de,hl
 473+ 87DA C9           	ret
 474+ 87DB
 475+ 87DB A7           Situa_HL and a
 476+ 87DC ED 4A        	adc hl,bc
 477+ 87DE C9           	ret
 478+ 87DF
 479+ 87DF              ;---------------------------------------------------------------------------------------------------------------
 480+ 87DF              ;
 481+ 87DF              ;	5/1/24
 482+ 87DF              ;
 483+ 87DF              ;	INICIALIZA (Numero_parcial_de_entidades).
 484+ 87DF              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 485+ 87DF              ;
 486+ 87DF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 487+ 87DF              ;
 488+ 87DF              ;	(Numero_parcial_de_entidades)="7".
 489+ 87DF              ;
 490+ 87DF              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 491+ 87DF              ;
 492+ 87DF              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 493+ 87DF              ;
 494+ 87DF              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 495+ 87DF              ;	MODIFICA: A y B.
 496+ 87DF              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 497+ 87DF
 498+ 87DF              Inicializa_Numero_parcial_de_entidades
 499+ 87DF
 500+ 87DF              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 501+ 87DF
 502+ 87DF 3A 47 88     	ld a,(Numero_de_entidades)
 503+ 87E2 A7           	and a
 504+ 87E3
 505+ 87E3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 506+ 87E3              ;	jr z,$
 507+ 87E3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 508+ 87E3
 509+ 87E3 20 03        	jr nz,3F
 510+ 87E5
 511+ 87E5              ; ---------- ---------- ----------
 512+ 87E5
 513+ 87E5              ;! RESET para pruebas. Omitir esta línea en modo normal.
 514+ 87E5              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 515+ 87E5
 516+ 87E5 CD 49 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 517+ 87E8
 518+ 87E8              ; ---------- ---------- ----------
 519+ 87E8
 520+ 87E8 3A 47 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 521+ 87EB FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 522+ 87ED 38 08        	jr c,1F
 523+ 87EF
 524+ 87EF              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 525+ 87EF              ; Actualizamos variables.
 526+ 87EF
 527+ 87EF 3E 07        	ld a,7
 528+ 87F1 32 48 88     	ld (Numero_parcial_de_entidades),a
 529+ 87F4 47           	ld b,a
 530+ 87F5 18 04        	jr 2F
 531+ 87F7
 532+ 87F7              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 533+ 87F7              ; (Numero_de_entidades)="0".
 534+ 87F7
 535+ 87F7 32 48 88     1 ld (Numero_parcial_de_entidades),a
 536+ 87FA 47           	ld b,a
 537+ 87FB C9           2 ret
# file closed: Niveles.asm
 107  87FC
 108  87FC              ; ******************************************************************************************************************************************************************************************
 109  87FC              ; Constantes.
 110  87FC              ; ******************************************************************************************************************************************************************************************
 111  87FC              ;
 112  87FC              ; 25/12/23
 113  87FC
 114  87FC              ;
 115  87FC              ; Constantes.
 116  87FC              ;
 117  87FC
 118  87FC              Sprite_vacio equ $eae0
 119  87FC              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  87FC              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  87FC              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  87FC              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  87FC
 124  87FC              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  87FC              ;														;
 126  87FC              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  87FC
 128  87FC              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  87FC              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  87FC              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  87FC              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  87FC              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  87FC
 134  87FC              ;														; 55 Bytes.
 135  87FC              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 136  87FC              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 137  87FC
 138  87FC              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  87FC
 140  87FC              ; ******************************************************************************************************************************************************************************************
 141  87FC              ; Variables.
 142  87FC              ; ******************************************************************************************************************************************************************************************
 143  87FC              ;
 144  87FC              ; 18/01/24
 145  87FC              ;
 146  87FC              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  87FC              ;
 148  87FC
 149  87FC              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  87FC
 151  87FC 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  87FD              ;															- Patrón de movimiento.
 153  87FD              ;															- Aspecto
 154  87FD 00           Filas db 0												; Filas. [DRAW]
 155  87FE 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  87FF 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8801 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8803 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8804 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8805
 161  8805              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8805
 163  8805 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8806              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8806              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8806 00           Attr db 0												; Atributos de la entidad:
 167  8807
 168  8807              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8807              ;
 170  8807              ;	COLORES: 0 ..... NEGRO
 171  8807              ;    		 1 ..... AZUL
 172  8807              ; 			 2 ..... ROJO
 173  8807              ;			 3 ..... MAGENTA
 174  8807              ; 			 4 ..... VERDE
 175  8807              ; 			 5 ..... CIAN
 176  8807              ;			 6 ..... AMARILLO
 177  8807              ; 			 7 ..... BLANCO
 178  8807
 179  8807 00 00        Indice_Sprite_der defw 0
 180  8809 00 00        Indice_Sprite_izq defw 0
 181  880B 00 00        Puntero_DESPLZ_der defw 0
 182  880D 00 00        Puntero_DESPLZ_izq defw 0
 183  880F
 184  880F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8811 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8812
 187  8812              ; Variables de objeto. (Características).
 188  8812
 189  8812 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8813              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8813              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8813 00 00 00...  Variables_de_borrado ds 6
 193  8819
 194  8819 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  881B              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  881B
 197  881B 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  881D
 199  881D              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  881D              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  881D
 202  881D 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  881F              ;														; _palabras que componen el "movimiento_masticado".
 204  881F
 205  881F              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  881F
 207  881F 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8820              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8820              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8820              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8820              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8820              ;
 213  8820              ; 														DESCRIPCIÖN:
 214  8820              ;
 215  8820              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8820              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8820              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8820              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8820              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8820              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8820              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8820              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8820              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8820              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8820              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8820              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8820              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8820              ;
 229  8820              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8820              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8820              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8820
 233  8820              ; Variables de funcionamiento. [DRAW].
 234  8820
 235  8820 00           Columnas db 0
 236  8821 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8823              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8823 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8824
 240  8824              ; variables de control general.
 241  8824
 242  8824 00           Ctrl_2 db 0
 243  8825              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8825              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8825              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8825              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8825              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8825              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8825              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8825              ;
 251  8825              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8825              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8825              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8825              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8825              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8825              ;														BIT 4, ???
 257  8825              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8825
 259  8825 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8826
 261  8826              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8826
 263  8826              ;					         		---------;      ;---------
 264  8826
 265  8826              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8826
 267  8826              Perfiles_de_velocidad
 268  8826
 269  8826 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8827 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  8828 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  8829 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  882A
 274  882A              ; Contadores de 16 bits.
 275  882A
 276  882A 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  882C 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  882E 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8830 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8832
 281  8832              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8832
 283  8832 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8834 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  8836 00 00        Puntero_indice_mov_bucle defw 0							;
 286  8838              ;
 287  8838              ;
 288  8838 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  8839              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  8839              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  8839 00           Incrementa_puntero_backup db 0
 292  883A 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  883B              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  883B 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  883C 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  883D 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  883E              ;
 298  883E              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  883E              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  883E              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  883E              ;
 302  883E              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  883E              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  883E              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  883E              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  883E              ;
 307  883E              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  883E              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  883E              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  883E              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  883E
 312  883E 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  883F
 314  883F              ;														DESCRIPCIÓN:
 315  883F              ;
 316  883F              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  883F              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  883F              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  883F              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  883F              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  883F              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  883F
 323  883F              ;														BIT 3, Recarga de nueva oleada.
 324  883F              ;														BIT 4, Recarga de nueva oleada.
 325  883F              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  883F              ;														BIT 6, **** Frame completo.
 327  883F              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  883F
 329  883F 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  8841              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  8841              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  8841              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  8841
 334  8841              ; Gestión de ENTIDADES y CAJAS.
 335  8841
 336  8841 00 00        Puntero_store_caja defw 0
 337  8843 00 00        Puntero_restore_caja defw 0
 338  8845 00 00        Indice_restore_caja defw 0
 339  8847 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  8848 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  8849 00           Entidades_en_curso db 0									; ..... ..... .....
 342  884A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  884B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  884B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  884B              ;														; _ (Numero_de_malotes)="0".
 346  884B 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  884D 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  884F              ;														; _ puntero (Indice_entidades).
 349  884F
 350  884F              ;---------------------------------------------------------------------------------------------------------------
 351  884F              ;
 352  884F              ;	11/01/24
 353  884F              ;
 354  884F              ;	Álbumes.
 355  884F
 356  884F 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  8851              ;														; _variable para almacenar lo posición del puntero_
 358  8851              ; 														; _de pila, SP.
 359  8851 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  8853              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  8853 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  8855 00 70        Stack_snapshot defw Album_de_fotos
 363  8857 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  8859
 365  8859              ;End_Snapshot defw Album_de_fotos
 366  8859              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  8859 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  885B              ;														; _el snapshot de los registros del siguiente disparo.
 369  885B              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  885B AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  885D
 372  885D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  885E              ;
 374  885E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  885E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  885E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  885E
 378  885E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  885F              ;
 380  885F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  885F              ;
 382  885F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  885F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  885F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  885F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  885F              ;
 387  885F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  885F              ;															_ masticados ya generados.
 389  885F              ;
 390  885F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  885F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  885F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  885F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  885F
 395  885F
 396  885F              ; Gestión de Disparos.
 397  885F
 398  885F 00           Numero_de_disparotes db 0
 399  8860 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  8862 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  8864 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  8865              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  8865              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  8865 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  8867              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  8867              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  8867              ;														; _produzca colisión.
 408  8867 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  8869              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  8869 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  886C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  886C 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  886F              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  886F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  8870
 416  8870              ;---------------------------------------------------------------------------------------------------------------
 417  8870
 418  8870              ; Relojes y temporizaciones.
 419  8870
 420  8870 00           Contador_de_frames db 0
 421  8871 00           Contador_de_frames_2 db 0
 422  8872
 423  8872 04           Clock_explosion db 4
 424  8873 14           Clock_Entidades_en_curso db 20
 425  8874 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  8875              ;														; Repite la oleada de entidades.
 427  8875 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  8876 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  8877 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  8878
 431  8878 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  8879 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  887A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  887B
 435  887B              ;---------------------------------------------------------------------------------------------------------------
 436  887B
 437  887B              ; Gestión de NIVELES.
 438  887B
 439  887B 00           Nivel db 0												; Nivel actual del juego.
 440  887C 00 00        Puntero_indice_NIVELES defw 0
 441  887E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  8880              ; 														; _ que definen el NIVEL.
 443  8880              ; Y todo comienza aquí .....
 444  8880              ;
 445  8880              ; 	INICIO  *************************************************************************************************************************************************************************
 446  8880              ;
 447  8880              ;	5/1/24
 448  8880
 449  8880              START
 450  8880
 451  8880 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  8883 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  8885 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  8887 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  8889 F3           	DI
 456  888A
 457  888A 3E 07        	ld a,%00000111
 458  888C CD 21 98     	call Cls
 459  888F CD 6C 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  8892
 461  8892              ; INICIALIZACIÓN.
 462  8892
 463  8892              ;	Inicializa 1er Nivel.
 464  8892
 465  8892 21 2A 86     	ld hl,Indice_de_niveles
 466  8895 22 7C 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  8898 CD 49 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  889B              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 469  889B              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 470  889B              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 471  889B
 472  889B              ;	Provisional, (para desarrollo).
 473  889B
 474  889B              	;-
 475  889B              ;	ld hl,Numero_parcial_de_entidades
 476  889B              ;	ld b,(hl)
 477  889B              ;	inc b
 478  889B              ;	dec b
 479  889B              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 480  889B
 481  889B CD 78 86     4 call Inicia_Entidades
 482  889E
 483  889E CD 2E 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 484  88A1              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 485  88A1 CD 02 8C     	call Restore_entidad								 ; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 486  88A4
 487  88A4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 488  88A4              ; (Esto se dá cuando se inicia una nueva oleada).
 489  88A4
 490  88A4              ;	ld a,(Ctrl_1)
 491  88A4              ;	bit 3,a
 492  88A4              ;	jr nz,5F											; Loop
 493  88A4
 494  88A4              ; 	INICIA AMADEUS !!!!!
 495  88A4
 496  88A4              ;3 call Restore_Amadeus
 497  88A4              ;	call Inicia_Puntero_objeto
 498  88A4              ;	call Draw
 499  88A4
 500  88A4              ;	call Guarda_movimiento_masticado	;! Provisional
 501  88A4
 502  88A4              ;	call Guarda_foto_registros
 503  88A4              ;	call Guarda_datos_de_borrado_Amadeus
 504  88A4
 505  88A4              ;	ld de,Amadeus_db
 506  88A4              ;	call Store_Amadeus
 507  88A4
 508  88A4              ; 	INICIA DISPAROS !!!!!
 509  88A4
 510  88A4              ;	call Inicia_Puntero_Disparo_Entidades
 511  88A4              ;	call Inicia_Puntero_Disparo_Amadeus
 512  88A4
 513  88A4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 514  88A4
 515  88A4              ;5 call Inicia_punteros_de_cajas
 516  88A4              ;	call Restore_entidad
 517  88A4
 518  88A4 3A 3E 88     	ld a,(Ctrl_1)
 519  88A7 CB 5F        	bit 3,a
 520  88A9 28 07        	jr z,6F
 521  88AB
 522  88AB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 523  88AB
 524  88AB 21 3E 88     	ld hl,Ctrl_1
 525  88AE CB 9E        	res 3,(hl)
 526  88B0 18 07        	jr Main
 527  88B2
 528  88B2              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 529  88B2
 530  88B2 21 5D 88     6 ld hl,Ctrl_3
 531  88B5 CB C6        	set 0,(hl)											; Frame completo.
 532  88B7 FB           	ei
 533  88B8 76           	halt
 534  88B9
 535  88B9              ; ------------------------------------
 536  88B9
 537  88B9              Main
 538  88B9              ;
 539  88B9              ;	11/12/23
 540  88B9
 541  88B9              ; Aparece nueva entidad ???
 542  88B9
 543  88B9              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 544  88B9              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 545  88B9              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 546  88B9              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 547  88B9              ;														; _un 2º bloque.
 548  88B9
 549  88B9 3E 01        	ld a,1
 550  88BB D3 FE        	out ($fe),a
 551  88BD
 552  88BD F3           	di
 553  88BE 18 FE        	jr $
 554  88C0
 555  88C0 3A 73 88     	ld a,(Clock_Entidades_en_curso)
 556  88C3 47           	ld b,a
 557  88C4 3A 70 88     	ld a,(Contador_de_frames)
 558  88C7 B8           	cp b
 559  88C8 20 18        	jr nz,13F
 560  88CA
 561  88CA              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 562  88CA              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 563  88CA
 564  88CA 3A 48 88     21 ld a,(Numero_parcial_de_entidades)
 565  88CD 47           	ld b,a
 566  88CE 3A 49 88     	ld a,(Entidades_en_curso)
 567  88D1 B8           	cp b
 568  88D2 28 0E        	jr z,13F
 569  88D4 30 0C        	jr nc,13F
 570  88D6
 571  88D6 3C           	inc a
 572  88D7 32 49 88     	ld (Entidades_en_curso),a
 573  88DA
 574  88DA              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 575  88DA
 576  88DA 3A 73 88     	ld a,(Clock_Entidades_en_curso)
 577  88DD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 578  88DD              ;! _ IMPREDECIBLE !!!!
 579  88DD C6 64        	add 100
 580  88DF 32 73 88     	ld (Clock_Entidades_en_curso),a
 581  88E2
 582  88E2              ; -------------------------------------------------------------------------------------------------------------
 583  88E2
 584  88E2              ; Habilita disparos.
 585  88E2
 586  88E2 21 75 88     13 ld hl,Disparo_Amadeus
 587  88E5 11 77 88     	ld de,CLOCK_repone_disparo_Amadeus
 588  88E8 CD F3 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  88EB
 590  88EB 21 78 88     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  88EE 11 7A 88     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  88F1 CD F3 9B     	call Habilita_disparos
 593  88F4
 594  88F4              ; COLISIONES.
 595  88F4
 596  88F4 CD 0B 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  88F7
 598  88F7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  88F7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  88F7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  88F7
 602  88F7 AF           	xor a
 603  88F8 32 64 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  88FB
 605  88FB CD 2E 8B     	call Inicia_punteros_de_cajas
 606  88FE CD 02 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8901              ; 														; _ en DRAW.
 608  8901 3A FD 87     	ld a,(Filas)
 609  8904 A7           	and a
 610  8905 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 611  8907 CD 2E 8C     	call Incrementa_punteros_de_cajas
 612  890A 18 F2        	jr 12B
 613  890C
 614  890C              ; ---------------------------------------------------------------------------------------
 615  890C
 616  890C 3A 48 88     10 ld a,(Numero_parcial_de_entidades)
 617  890F 47               ld b,a
 618  8910 A7           	and a
 619  8911 20 14        	jr nz,11F
 620  8913
 621  8913 21 3E 88     	ld hl,Ctrl_1
 622  8916 CB 66        	bit 4,(hl)
 623  8918 C2 C0 89     	jp nz,16F
 624  891B
 625  891B              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 626  891B
 627  891B 21 3E 88     	ld hl,Ctrl_1
 628  891E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 629  8920
 630  8920 3A 70 88     	ld a,(Contador_de_frames)
 631  8923 3C           	inc a
 632  8924 32 74 88     	ld (Activa_recarga_cajas),a
 633  8927
 634  8927              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 635  8927
 636  8927 3A 49 88     11 ld a,(Entidades_en_curso)
 637  892A A7           	and a
 638  892B CA C0 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 639  892E 47           	ld b,a												; No hay entidades que gestionar.
 640  892F
 641  892F              ; ( Código que ejecutamos con cada entidad: ).
 642  892F
 643  892F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 644  892F
 645  892F C5           15 push bc 												; Nº de entidades en curso.
 646  8930
 647  8930              ; Existe "Entidad_guía" ???.
 648  8930              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 649  8930
 650  8930 3A 5D 88     	ld a,(Ctrl_3)
 651  8933 CB 4F        	bit 1,a
 652  8935 20 11        	jr nz,22F
 653  8937
 654  8937              ; Almacén de "Movimientos_masticados" lleno ???
 655  8937              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 656  8937              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 657  8937
 658  8937 3A 5D 88     	ld a,(Ctrl_3)
 659  893A CB 5F        	bit 3,a
 660  893C 20 0A        	jr nz,22F
 661  893E
 662  893E              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 663  893E
 664  893E 21 24 88     	ld hl,Ctrl_2
 665  8941 CB EE        	set 5,(hl)
 666  8943 21 5D 88     	ld hl,Ctrl_3
 667  8946 CB CE        	set 1,(hl)
 668  8948
 669  8948              ; Impacto ???
 670  8948
 671  8948 3A 12 88     22 ld a,(Impacto)
 672  894B A7           	and a
 673  894C 28 31        	jr z,8F
 674  894E
 675  894E              ; Hay Impacto en esta entidad.
 676  894E
 677  894E 21 72 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 678  8951 35           	dec (hl)
 679  8952 C2 B3 89     	jp nz,17F
 680  8955
 681  8955              ;! Velocidad de la animación de la explosión.
 682  8955
 683  8955 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 684  8957              ;														; _,(velocidad de la explosión).
 685  8957              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 686  8957
 687  8957 CD E0 8C     	call Repone_datos_de_borrado
 688  895A CD 6C 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 689  895D
 690  895D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 691  895D
 692  895D 3A 24 88     	ld a,(Ctrl_2)
 693  8960 CB 4F        	bit 1,a
 694  8962 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 695  8964
 696  8964              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 697  8964
 698  8964 3A 05 88     	ld a,(CTRL_DESPLZ)
 699  8967 A7           	and a
 700  8968 20 08        	jr nz,18F
 701  896A
 702  896A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 703  896D 22 0B 88     	ld (Puntero_DESPLZ_der),hl
 704  8970 18 06        	jr 19F
 705  8972
 706  8972 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 707  8975 22 0B 88     	ld (Puntero_DESPLZ_der),hl
 708  8978
 709  8978 21 24 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 710  897B CB CE        	set 1,(hl)
 711  897D 18 22        	jr 7F
 712  897F
 713  897F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 714  897F              ; _con las coordenadas de la entidad almacenada en DRAW.
 715  897F
 716  897F 3A 3E 88     8 ld a,(Ctrl_1)
 717  8982 CB 57        	bit 2,a
 718  8984 28 1B        	jr z,7F
 719  8986
 720  8986 2A 67 88     	ld hl,(Coordenadas_disparo_certero)
 721  8989 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 722  898A              ;														; E contiene la coordenada_X del disparo.
 723  898A 2A 03 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 724  898D              ;														; H FILA, (Coordenada_y de la entidad).
 725  898D A7           	and a
 726  898E ED 52        	sbc hl,de
 727  8990
 728  8990 CD 24 91     	call Determina_resultado_comparativa
 729  8993
 730  8993 78           	ld a,b
 731  8994 A7           	and a
 732  8995 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 733  8997
 734  8997              ; ----- ----- -----
 735  8997
 736  8997 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 737  8999 32 12 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 738  899C
 739  899C 21 3E 88     	ld hl,Ctrl_1
 740  899F CB 96        	res 2,(hl)
 741  89A1
 742  89A1 CD 11 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 743  89A4
 744  89A4 3A 1F 88     	ld a,(Ctrl_0)
 745  89A7 CB 67        	bit 4,a
 746  89A9 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 747  89AB
 748  89AB              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 749  89AB              ; [[[
 750  89AB              ;	call Detecta_disparo_entidad
 751  89AB              ; ]]]
 752  89AB
 753  89AB CD E9 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 754  89AE
 755  89AE 21 1F 88     	ld hl,Ctrl_0
 756  89B1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 757  89B3
 758  89B3 CD 01 8C     17 call Store_Restore_cajas
 759  89B6
 760  89B6 C1           	pop bc
 761  89B7
 762  89B7 05           	dec b
 763  89B8 C2 2F 89     	jp nz,15B
 764  89BB
 765  89BB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 766  89BB              ; Hemos gestionado todas las unidades.
 767  89BB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 768  89BB
 769  89BB 21 3E 88     	ld hl,Ctrl_1
 770  89BE CB 96        	res 2,(hl)
 771  89C0
 772  89C0 21 5D 88     16 ld hl,Ctrl_3
 773  89C3 CB C6        	set 0,(hl)											; Frame completo.
 774  89C5
 775  89C5 AF           	xor a
 776  89C6 D3 FE        	out ($fe),a
 777  89C8
 778  89C8 FB           	ei
 779  89C9 76           	halt
 780  89CA
 781  89CA              ; ----------------------------------------
 782  89CA
 783  89CA 3A 3E 88     	ld a,(Ctrl_1) 										; Existe Loop?
 784  89CD CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 785  89CF CA B9 88     	jp z,Main
 786  89D2
 787  89D2              ; RECARGA DE NUEVA OLEADA.
 788  89D2
 789  89D2 3A 70 88     	ld a,(Contador_de_frames)
 790  89D5 47           	ld b,a
 791  89D6 3A 74 88     	ld a,(Activa_recarga_cajas)
 792  89D9 B8           	cp b
 793  89DA 28 08        	jr z,20F
 794  89DC
 795  89DC 21 3E 88     	ld hl,Ctrl_1
 796  89DF CB E6        	set 4,(hl)
 797  89E1 C3 B9 88     	jp Main
 798  89E4
 799  89E4 21 3E 88     20 ld hl,Ctrl_1
 800  89E7 CB A6        	res 4,(hl)
 801  89E9
 802  89E9 3A 70 88     	ld a,(Contador_de_frames)
 803  89EC
 804  89EC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 805  89EC              ;! _ IMPREDECIBLE !!!!
 806  89EC
 807  89EC C6 0A        	add 10
 808  89EE 32 73 88     	ld (Clock_Entidades_en_curso),a
 809  89F1
 810  89F1 C3 9B 88     	jp 4B
 811  89F4
 812  89F4 C9           	ret
 813  89F5
 814  89F5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 815  89F5              ;
 816  89F5              ;	16/11/23
 817  89F5
 818  89F5              Gestiona_Amadeus
 819  89F5
 820  89F5              ;! Activa/desactiva impacto con Amadeus.
 821  89F5
 822  89F5              ;	ld a,(Impacto)
 823  89F5              ;	and a
 824  89F5              ;	jr nz,2F
 825  89F5
 826  89F5 CD 6E 8A     	call Mov_Amadeus
 827  89F8
 828  89F8 3A 1F 88     2 ld a,(Ctrl_0)
 829  89FB CB 67        	bit 4,a
 830  89FD 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 831  89FF
 832  89FF CD E9 8A     	call Guarda_foto_entidad_a_pintar
 833  8A02 CD C0 8C     	call Guarda_datos_de_borrado_Amadeus
 834  8A05
 835  8A05 21 1F 88     1 ld hl,Ctrl_0
 836  8A08 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 837  8A0A
 838  8A0A CD AF 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 839  8A0D
 840  8A0D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 841  8A0D
 842  8A0D CD AE 8B     	call Calcula_numero_de_disparotes
 843  8A10
 844  8A10 C9           	ret
 845  8A11
 846  8A11              ; --------------------------------------------------------------------------------------------------------------
 847  8A11              ;
 848  8A11              ;	15/12/23
 849  8A11
 850  8A11              Mov_obj
 851  8A11
 852  8A11 3A 24 88     	ld a,(Ctrl_2)
 853  8A14 CB 4F        	bit 1,a
 854  8A16 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 855  8A18
 856  8A18              ; Explosión:
 857  8A18
 858  8A18 3A 25 88     	ld a,(Frames_explosion)
 859  8A1B A7           	and a
 860  8A1C 20 1D        	jr nz,4F
 861  8A1E
 862  8A1E              ;!  Una alimaña menos!!!!!!!!!1
 863  8A1E
 864  8A1E              ; Se trataba de una Entidad_guía ???
 865  8A1E
 866  8A1E 3A 24 88     	ld a,(Ctrl_2)
 867  8A21 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 868  8A23 28 05        	jr z,5F
 869  8A25
 870  8A25 21 5D 88     	ld hl,Ctrl_3
 871  8A28 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 872  8A2A
 873  8A2A              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 874  8A2A              ;!! _generado puede ser distinto, (aletoriedad).
 875  8A2A
 876  8A2A CD 5E 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 877  8A2D 21 48 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 878  8A30 35           	dec (hl)
 879  8A31 21 49 88     	ld hl,Entidades_en_curso
 880  8A34 35           	dec (hl)
 881  8A35 21 47 88     	ld hl,Numero_de_entidades
 882  8A38 35           	dec (hl)
 883  8A39 18 32        	jr 3F
 884  8A3B
 885  8A3B              ; -----
 886  8A3B
 887  8A3B              ;	`Movemos´ la explosión.
 888  8A3B
 889  8A3B 2A 0B 88     4 ld hl,(Puntero_DESPLZ_der)
 890  8A3E 23           	inc hl
 891  8A3F 23           	inc hl
 892  8A40 22 0B 88     	ld (Puntero_DESPLZ_der),hl
 893  8A43 CD C6 8B     	call Extrae_address
 894  8A46 22 01 88     	ld (Puntero_objeto),hl
 895  8A49
 896  8A49 21 25 88     	ld hl,Frames_explosion
 897  8A4C 35           	dec (hl)
 898  8A4D
 899  8A4D 21 1F 88     	ld hl,Ctrl_0
 900  8A50 CB E6        	set 4,(hl)
 901  8A52
 902  8A52 18 19        	jr 3F
 903  8A54
 904  8A54              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 905  8A54
 906  8A54 AF           2 xor a
 907  8A55 32 1F 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 908  8A58
 909  8A58              ; Movemos Entidades malignas.
 910  8A58              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 911  8A58
 912  8A58              ;	ld a,(Ctrl_2)
 913  8A58              ;	bit 5,a
 914  8A58              ;	jr nz,8F
 915  8A58
 916  8A58              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 917  8A58              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 918  8A58              ;	jr 7F
 919  8A58
 920  8A58              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 921  8A58
 922  8A58              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 923  8A58              ;	bit 4,a
 924  8A58              ;	ret z
 925  8A58
 926  8A58              ; Ha habido desplazamiento de la entidad maligna.
 927  8A58              ; Ha llegado a zona de AMADEUS ???
 928  8A58
 929  8A58 3A 04 88     7 ld a,(Coordenada_y)
 930  8A5B FE 14        	cp $14
 931  8A5D 38 08        	jr c,1F
 932  8A5F
 933  8A5F              ; ---------
 934  8A5F
 935  8A5F              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 936  8A5F              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 937  8A5F
 938  8A5F F3           	di
 939  8A60 CD D4 8E     	call Genera_coordenadas_X
 940  8A63 CD 10 8F     	call Compara_coordenadas_X
 941  8A66 FB           	ei
 942  8A67
 943  8A67              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 944  8A67
 945  8A67              ; ---------
 946  8A67
 947  8A67              1
 948  8A67
 949  8A67              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  8A67 CD E0 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  8A6A CD 6C 8B     	call Limpia_Variables_de_borrado
 952  8A6D
 953  8A6D C9           3 ret
 954  8A6E
 955  8A6E              ; --------------------------------------------------------------------------------------------------------------
 956  8A6E              ;
 957  8A6E              ;	29/1/23
 958  8A6E
 959  8A6E              Mov_Amadeus
 960  8A6E
 961  8A6E              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8A6E
 963  8A6E CD D9 98     	call Mov_right
 964  8A71
 965  8A71 3A 1F 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  8A74 CB 67        	bit 4,a
 967  8A76 C8           	ret z
 968  8A77
 969  8A77              ; ---------
 970  8A77
 971  8A77              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  8A77 CD D0 8C     	call Repone_datos_de_borrado_Amadeus
 973  8A7A CD 6C 8B     	call Limpia_Variables_de_borrado
 974  8A7D
 975  8A7D C9           	ret
 976  8A7E
 977  8A7E              ; -----------------------------------------------------------------------------------
 978  8A7E              ;
 979  8A7E              ;	20/01/24
 980  8A7E              ;
 981  8A7E              ;
 982  8A7E
 983  8A7E              Construye_movimientos_masticados_entidad
 984  8A7E
 985  8A7E 2A 1B 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  8A81 E5           	push hl
 987  8A82
 988  8A82 CD C6 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 989  8A85              ;															; _ el (Contador_de_mov_masticados).
 990  8A85 CD CC 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 991  8A88              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 992  8A88 CD 35 98     	call Recompone_posicion_inicio
 993  8A8B
 994  8A8B CD 0B 92     1 call Draw
 995  8A8E CD AA 8A     	call Guarda_movimiento_masticado
 996  8A91 CD 9E 9D     	call Movimiento
 997  8A94
 998  8A94 3A 5D 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  8A97 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  8A99 28 F0        	jr z,1B
1001  8A9B
1002  8A9B              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  8A9B              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  8A9B
1005  8A9B E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  8A9C 22 1B 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8A9F
1008  8A9F
1009  8A9F              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1010  8A9F
1011  8A9F CD 0F 9F     	call Situa_en_Contador_general_de_mov_masticados
1012  8AA2
1013  8AA2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1014  8AA2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1015  8AA2
1016  8AA2 ED 4B 1D 88  	ld bc,(Contador_de_mov_masticados)
1017  8AA6 71           	ld (hl),c
1018  8AA7 23           	inc hl
1019  8AA8 70           	ld (hl),b
1020  8AA9
1021  8AA9 C9           	ret
1022  8AAA
1023  8AAA              ; -----------------------------------------------------------------------------------
1024  8AAA              ;
1025  8AAA              ;	28/12/23
1026  8AAA              ;
1027  8AAA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1028  8AAA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1029  8AAA
1030  8AAA              Guarda_movimiento_masticado
1031  8AAA
1032  8AAA ED 73 4F 88  	ld (Stack),sp
1033  8AAE ED 7B 1B 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1034  8AB2
1035  8AB2 E5           	push hl
1036  8AB3 DD E5            push ix
1037  8AB5 FD E5            push iy
1038  8AB7
1039  8AB7 ED 7B 4F 88      ld sp,(Stack)
1040  8ABB
1041  8ABB              ;    push hl
1042  8ABB
1043  8ABB 2A 1D 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1044  8ABE 23           	inc hl
1045  8ABF 22 1D 88     	ld (Contador_de_mov_masticados),hl
1046  8AC2
1047  8AC2              ;	pop hl
1048  8AC2
1049  8AC2 CD C6 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1050  8AC5              ;															; _ el (Contador_de_mov_masticados).
1051  8AC5 C9               ret
1052  8AC6
1053  8AC6              ; --------------------------------------------------------------------------------------------------------------
1054  8AC6              ;
1055  8AC6              ;	12/1/24
1056  8AC6              ;
1057  8AC6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1058  8AC6
1059  8AC6              Actualiza_Puntero_de_almacen_de_mov_masticados
1060  8AC6
1061  8AC6              ;	push hl
1062  8AC6              ;	push bc
1063  8AC6
1064  8AC6 2A 1B 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1065  8AC9 01 06 00     	ld bc,6
1066  8ACC A7           	and a
1067  8ACD ED 4A        	adc hl,bc
1068  8ACF 22 1B 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1069  8AD2
1070  8AD2              ;	pop bc
1071  8AD2              ;	pop hl
1072  8AD2
1073  8AD2 C9           	ret
1074  8AD3
1075  8AD3              ; --------------------------------------------------------------------------------------------------------------
1076  8AD3              ;
1077  8AD3              ;	15/01/24
1078  8AD3              ;
1079  8AD3              ;	Cargamos los registros_
1080  8AD3              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1081  8AD3              ;
1082  8AD3              ;	HL contiene la dirección de la rutina de impresión.
1083  8AD3              ;	IX contiene el puntero de impresión.
1084  8AD3              ;	IY contiene (Puntero_objeto).
1085  8AD3
1086  8AD3
1087  8AD3 ED 73 4F 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1088  8AD7 ED 7B 1B 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1089  8ADB
1090  8ADB FD E1        	pop iy
1091  8ADD DD E1        	pop ix
1092  8ADF E1           	pop hl
1093  8AE0
1094  8AE0 ED 73 1B 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1095  8AE4
1096  8AE4 ED 7B 4F 88  	ld sp,(Stack)
1097  8AE8
1098  8AE8 C9           	ret
1099  8AE9
1100  8AE9              ; --------------------------------------------------------------------------------------------------------------
1101  8AE9              ;
1102  8AE9              ;	28/12/23
1103  8AE9              ;
1104  8AE9              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1105  8AE9              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1106  8AE9
1107  8AE9              Guarda_foto_entidad_a_pintar
1108  8AE9
1109  8AE9 3A 1F 88     	ld a,(Ctrl_0)
1110  8AEC CB 77        	bit 6,a
1111  8AEE 28 0E        	jr z,5F
1112  8AF0
1113  8AF0              ;	Guarda la foto de Amadeus.
1114  8AF0
1115  8AF0 CD 0B 92     	call Draw
1116  8AF3
1117  8AF3 CD AA 8A     	call Guarda_movimiento_masticado	;! Provisional
1118  8AF6
1119  8AF6 CD 16 71     	call Guarda_foto_registros
1120  8AF9
1121  8AF9 F3           	di
1122  8AFA 18 FE        	jr $
1123  8AFC FB           	ei
1124  8AFD
1125  8AFD C9           	ret
1126  8AFE
1127  8AFE              ; ENTIDADES!
1128  8AFE              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1129  8AFE
1130  8AFE 3A 5D 88     5 ld a,(Ctrl_3)
1131  8B01 CB 5F        	bit 3,a
1132  8B03 28 01        	jr z,1F
1133  8B05
1134  8B05              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1135  8B05
1136  8B05              4
1137  8B05              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1138  8B05 C9           	ret
1139  8B06
1140  8B06              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1141  8B06
1142  8B06 3A 5D 88     1 ld a,(Ctrl_3)
1143  8B09 CB 57        	bit 2,a
1144  8B0B 20 10        	jr nz,6F
1145  8B0D
1146  8B0D              ; Entidad guía o fantasma ???
1147  8B0D
1148  8B0D 3A 24 88     	ld a,(Ctrl_2)
1149  8B10 CB 6F        	bit 5,a
1150  8B12 20 10        	jr nz,3F
1151  8B14
1152  8B14              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1153  8B14
1154  8B14 18 EF        	jr 4B
1155  8B16
1156  8B16              ; ENTIDAD_GUÍA:
1157  8B16              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1158  8B16              ; _guardando "movimientos_masticados".
1159  8B16
1160  8B16 3A 5D 88     2 ld a,(Ctrl_3)
1161  8B19 CB 57        	bit 2,a
1162  8B1B 28 07        	jr z,3F
1163  8B1D
1164  8B1D              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1165  8B1D              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1166  8B1D
1167  8B1D CB 97        6 res 2,a
1168  8B1F CB DF        	set 3,a
1169  8B21 32 5D 88     	ld (Ctrl_3),a
1170  8B24
1171  8B24
1172  8B24              ;	Esto sólo lo ejecuta una entidad guía.
1173  8B24
1174  8B24 CD 0B 92     3 	call Draw
1175  8B27 CD AA 8A     	call Guarda_movimiento_masticado
1176  8B2A CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1177  8B2D
1178  8B2D              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1179  8B2D              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1180  8B2D
1181  8B2D              ;	call Convierte_guia_en_fantasma
1182  8B2D C9           	ret
1183  8B2E
1184  8B2E              ; --------------------------------------------------------------------------------------------------------------
1185  8B2E              ;
1186  8B2E              ;	19/9/23
1187  8B2E
1188  8B2E              ;Prepara_var_pintado
1189  8B2E
1190  8B2E              ;	ld hl,Filas
1191  8B2E              ;	ld de,Variables_de_pintado
1192  8B2E              ;	ld bc,8
1193  8B2E              ;	ldir
1194  8B2E              ;	ret
1195  8B2E
1196  8B2E              ; --------------------------------------------------------------------------------------------------------------
1197  8B2E
1198  8B2E              ;Repone_pintar
1199  8B2E
1200  8B2E              ;	ld hl,Variables_de_pintado
1201  8B2E              ;	ld de,Filas
1202  8B2E              ;	ld bc,8
1203  8B2E              ;	ldir
1204  8B2E              ;	ret
1205  8B2E
1206  8B2E              ; *************************************************************************************************************************************************************
1207  8B2E              ;
1208  8B2E              ; 8/1/23
1209  8B2E              ;
1210  8B2E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1211  8B2E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1212  8B2E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1213  8B2E
1214  8B2E              ; Destruye HL y DE !!!!!
1215  8B2E
1216  8B2E              Inicia_punteros_de_cajas
1217  8B2E
1218  8B2E 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1219  8B31 CD C6 8B         call Extrae_address
1220  8B34 22 41 88         ld (Puntero_store_caja),hl
1221  8B37 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1222  8B3A 22 45 88     	ld (Indice_restore_caja),hl
1223  8B3D CD C6 8B     	call Extrae_address
1224  8B40 22 43 88     	ld (Puntero_restore_caja),hl
1225  8B43 C9               ret
1226  8B44
1227  8B44              ; *************************************************************************************************************************************************************
1228  8B44              ;
1229  8B44              ; 8/1/23
1230  8B44              ;
1231  8B44              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1232  8B44
1233  8B44 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1234  8B47 22 60 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1235  8B4A C9           	ret
1236  8B4B 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1237  8B4E 22 62 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1238  8B51 C9           	ret
1239  8B52
1240  8B52              ; -------------------------------------------------------------------------------------------------------------
1241  8B52              ;
1242  8B52              ; 21/9/23
1243  8B52              ;
1244  8B52
1245  8B52              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1246  8B52
1247  8B52              Limpia_album_Amadeus
1248  8B52
1249  8B52 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1250  8B55 7E           	ld a,(hl)
1251  8B56 A7           	and a
1252  8B57 C8           	ret z
1253  8B58
1254  8B58 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1255  8B5B 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1256  8B5E 01 0B 00     	ld bc,11
1257  8B61 AF           	xor a
1258  8B62 77           	ld (hl),a
1259  8B63 ED B0        	ldir
1260  8B65
1261  8B65 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1262  8B68 22 5B 88     	ld (End_Snapshot_Amadeus),hl
1263  8B6B
1264  8B6B C9           	ret
1265  8B6C
1266  8B6C 21 13 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1267  8B6F 11 14 88     	ld de,Variables_de_borrado+1
1268  8B72 01 05 00     	ld bc,5
1269  8B75 AF           	xor a
1270  8B76 77           	ld (hl),a
1271  8B77 ED B0        	ldir
1272  8B79 C9           	ret
1273  8B7A
1274  8B7A              ; -------------------------------------------------------------------------------------------------------------
1275  8B7A              ;
1276  8B7A              ; 8/9/23
1277  8B7A              ;
1278  8B7A
1279  8B7A              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1280  8B7A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1281  8B7A
1282  8B7A              Calcula_numero_de_malotes
1283  8B7A
1284  8B7A 21 00 70     	ld hl,Album_de_fotos
1285  8B7D EB           	ex de,hl
1286  8B7E 2A 55 88     	ld hl,(Stack_snapshot)
1287  8B81
1288  8B81 06 00        	ld b,0
1289  8B83 7D           	ld a,l
1290  8B84 93           	sub e
1291  8B85 28 07        	jr z,1F
1292  8B87
1293  8B87              ; Nº de malotes no es "0".
1294  8B87
1295  8B87 D6 06        2 sub 6
1296  8B89 04           	inc b
1297  8B8A A7           	and a
1298  8B8B 20 FA        	jr nz,2B
1299  8B8D 78           	ld a,b
1300  8B8E
1301  8B8E 32 4A 88     1 ld (Numero_de_malotes),a
1302  8B91 C9           	ret
1303  8B92
1304  8B92              ; -------------------------------------------------------------------------------------------------------------
1305  8B92              ;
1306  8B92              ; 8/9/23
1307  8B92              ;
1308  8B92
1309  8B92              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1310  8B92              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1311  8B92
1312  8B92              Calcula_malotes_Amadeus
1313  8B92
1314  8B92 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1315  8B95 EB           	ex de,hl
1316  8B96 2A 5B 88     	ld hl,(End_Snapshot_Amadeus)
1317  8B99
1318  8B99 7C           	ld a,h
1319  8B9A A7           	and a
1320  8B9B 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1321  8B9D
1322  8B9D 06 00        	ld b,0
1323  8B9F 7D           	ld a,l
1324  8BA0 93           	sub e
1325  8BA1 28 07        	jr z,1F
1326  8BA3
1327  8BA3              ; Nº de malotes no es "0".
1328  8BA3
1329  8BA3 D6 06        2 sub 6
1330  8BA5 04           	inc b
1331  8BA6 A7           	and a
1332  8BA7 20 FA        	jr nz,2B
1333  8BA9 78           	ld a,b
1334  8BAA
1335  8BAA 32 4A 88     1 ld (Numero_de_malotes),a
1336  8BAD C9           	ret
1337  8BAE
1338  8BAE              ; -------------------------------------------------------------------------------------------------------------
1339  8BAE              ;
1340  8BAE              ; 28/2/23
1341  8BAE              ;
1342  8BAE
1343  8BAE              Calcula_numero_de_disparotes
1344  8BAE
1345  8BAE 21 56 70     	ld hl,Album_de_fotos_disparos
1346  8BB1 EB           	ex de,hl
1347  8BB2 2A 59 88     	ld hl,(End_Snapshot_disparos)
1348  8BB5
1349  8BB5 06 00        	ld b,0
1350  8BB7 7D           	ld a,l
1351  8BB8 93           	sub e
1352  8BB9 28 07        	jr z,1F
1353  8BBB
1354  8BBB              ; Nº de malotes no es "0".
1355  8BBB
1356  8BBB D6 06        2 sub 6
1357  8BBD 04           	inc b
1358  8BBE A7           	and a
1359  8BBF 20 FA        	jr nz,2B
1360  8BC1 78           	ld a,b
1361  8BC2
1362  8BC2 32 5F 88     1 ld (Numero_de_disparotes),a
1363  8BC5 C9           	ret
1364  8BC6
1365  8BC6              ; *************************************************************************************************************************************************************
1366  8BC6              ;
1367  8BC6              ; 20/10/22
1368  8BC6              ;
1369  8BC6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1370  8BC6              ;
1371  8BC6              ; Destruye el puntero y DE !!!!!
1372  8BC6
1373  8BC6 5E           Extrae_address ld e,(hl)
1374  8BC7 23           	inc hl
1375  8BC8 56           	ld d,(hl)
1376  8BC9 2B           	dec hl
1377  8BCA EB           	ex de,hl
1378  8BCB C9           	ret
1379  8BCC
1380  8BCC              ; *************************************************************************************************************************************************************
1381  8BCC              ;
1382  8BCC              ;	20/1/24
1383  8BCC              ;
1384  8BCC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1385  8BCC              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1386  8BCC              ;
1387  8BCC              ;   Destruye HL y BC !!!!!,
1388  8BCC              ;
1389  8BCC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1390  8BCC              ;					"0" ..... Izquierda.
1391  8BCC
1392  8BCC              Inicia_Puntero_objeto
1393  8BCC
1394  8BCC 3A 11 88     	ld a,(Cuad_objeto)
1395  8BCF E6 01        	and 1
1396  8BD1 F5           	push af
1397  8BD2 CC EE 8B     	call z,Inicia_puntero_objeto_izq
1398  8BD5 F1           	pop af
1399  8BD6 C8           	ret z
1400  8BD7 CD DB 8B     	call Inicia_puntero_objeto_der
1401  8BDA C9           	ret
1402  8BDB
1403  8BDB              ; Arrancamos desde la parte izquierda de la pantalla.
1404  8BDB              ; Iniciamos (Indice_Sprite_der).
1405  8BDB
1406  8BDB 2A 07 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1407  8BDE 22 0B 88     	ld (Puntero_DESPLZ_der),hl
1408  8BE1 CD C6 8B     	call Extrae_address
1409  8BE4 22 01 88     	ld (Puntero_objeto),hl
1410  8BE7
1411  8BE7 2A 09 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1412  8BEA 22 0D 88     	ld (Puntero_DESPLZ_izq),hl
1413  8BED C9           	ret
1414  8BEE
1415  8BEE              ; Arrancamos desde la parte derecha de la pantalla.
1416  8BEE              ; Iniciamos (Indice_Sprite_izq).
1417  8BEE
1418  8BEE 2A 09 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1419  8BF1 22 0D 88     	ld (Puntero_DESPLZ_izq),hl
1420  8BF4 CD C6 8B     	call Extrae_address
1421  8BF7 22 01 88     	ld (Puntero_objeto),hl
1422  8BFA
1423  8BFA 2A 07 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1424  8BFD 22 0B 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1425  8C00 C9           	ret
1426  8C01
1427  8C01              ; *************************************************************************************************************************************************************
1428  8C01              ;
1429  8C01              ;	21/12/23
1430  8C01              ;
1431  8C01              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1432  8C01              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1433  8C01
1434  8C01              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1435  8C01              ;	_de la 2ª y 3ª entidad respectivamente.
1436  8C01
1437  8C01              Store_Restore_cajas
1438  8C01
1439  8C01              ; 	Entidad_sospechosa. 20/4/23
1440  8C01
1441  8C01              ;	ld a,(Impacto)
1442  8C01              ;	and a
1443  8C01              ;	jr z,1F
1444  8C01
1445  8C01              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1446  8C01              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1447  8C01              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1448  8C01              ;	adc hl,bc 											; _ "0" más adelante.
1449  8C01              ;	ld (Entidad_sospechosa_de_colision),hl
1450  8C01
1451  8C01              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1452  8C01
1453  8C01              ;	jr $
1454  8C01
1455  8C01
1456  8C01              ;1 ld hl,(Puntero_restore_caja)
1457  8C01              ;	ld a,(hl)
1458  8C01              ;	and a
1459  8C01              ;	push af
1460  8C01              ;	jr z,2F
1461  8C01
1462  8C01              ;	di
1463  8C01              ;	jr $
1464  8C01              ;	ei
1465  8C01
1466  8C01              ;	di
1467  8C01              ;	ld de,Bandeja_DRAW
1468  8C01              ;	ld bc,42
1469  8C01              ;	ldir
1470  8C01              ;	ei
1471  8C01
1472  8C01              ;2 call Incrementa_punteros_de_cajas
1473  8C01
1474  8C01
1475  8C01 C9           	ret
1476  8C02
1477  8C02              ; **************************************************************************************************
1478  8C02              ;
1479  8C02              ;	26/01/24
1480  8C02              ;
1481  8C02              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1482  8C02
1483  8C02              Restore_entidad
1484  8C02
1485  8C02
1486  8C02 2A 41 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1487  8C05 11 03 88     	ld de,Bandeja_DRAW+7							; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1488  8C08 01 02 00     	ld bc,2
1489  8C0B ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1490  8C0D
1491  8C0D 13           	inc de
1492  8C0E 7E           	ld a,(hl)
1493  8C0F 12           	ld (de),a 										; Transferimos (Attr).
1494  8C10 23           	inc hl
1495  8C11
1496  8C11 01 0C 00     	ld bc,12
1497  8C14 CD D5 87     	call Situa_DE
1498  8C17
1499  8C17 7E           	ld a,(hl)
1500  8C18 12           	ld (de),a 										; Transferimos (Impacto).
1501  8C19 23           	inc hl
1502  8C1A
1503  8C1A 01 07 00     	ld bc,7
1504  8C1D CD D5 87     	call Situa_DE
1505  8C20
1506  8C20 01 07 00     	ld bc,7
1507  8C23 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1508  8C25              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1509  8C25
1510  8C25 01 04 00     	ld bc,4
1511  8C28 CD D5 87     	call Situa_DE
1512  8C2B
1513  8C2B 7E           	ld a,(hl)
1514  8C2C 12           	ld (de),a 										; Transferimos (Ctrl_2).
1515  8C2D
1516  8C2D C9           	ret
1517  8C2E
1518  8C2E              ; **************************************************************************************************
1519  8C2E              ;
1520  8C2E              ;	08/05/23
1521  8C2E              ;
1522  8C2E              ;	Incrementamos los dos punteros de entidades. (+1).
1523  8C2E
1524  8C2E              Incrementa_punteros_de_cajas
1525  8C2E
1526  8C2E 2A 43 88     	ld hl,(Puntero_restore_caja)
1527  8C31 22 41 88     	ld (Puntero_store_caja),hl
1528  8C34 2A 45 88     	ld hl,(Indice_restore_caja)
1529  8C37 23           	inc hl
1530  8C38 23           	inc hl
1531  8C39 22 45 88     	ld (Indice_restore_caja),hl
1532  8C3C CD C6 8B         call Extrae_address
1533  8C3F 22 43 88         ld (Puntero_restore_caja),hl
1534  8C42 C9               ret
1535  8C43
1536  8C43              ; **************************************************************************************************
1537  8C43              ;
1538  8C43              ;	21/12/23
1539  8C43              ;
1540  8C43              ;	Restore_Amadeus
1541  8C43              ;
1542  8C43              ;	Cargamos en DRAW los parámetros de Amadeus.
1543  8C43              ;
1544  8C43
1545  8C43 E5           Restore_Amadeus	push hl
1546  8C44 D5           	push de
1547  8C45 C5            	push bc
1548  8C46 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1549  8C49 11 FC 87     	ld de,Bandeja_DRAW
1550  8C4C 01 2A 00     	ld bc,42
1551  8C4F ED B0        	ldir
1552  8C51 C1           	pop bc
1553  8C52 D1           	pop de
1554  8C53 E1           	pop hl
1555  8C54 C9           	ret
1556  8C55
1557  8C55              ; *************************************************************************************************************************************************************
1558  8C55              ;
1559  8C55              ;	21/12/23
1560  8C55              ;
1561  8C55              ;	Store_Amadeus
1562  8C55              ;
1563  8C55              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1564  8C55              ;
1565  8C55              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1566  8C55              ;
1567  8C55              ;	DESTRUYE: HL y BC y DE.
1568  8C55
1569  8C55 21 FC 87     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1570  8C58 01 2A 00     	ld bc,42
1571  8C5B ED B0        	ldir
1572  8C5D C9           	ret
1573  8C5E
1574  8C5E              ; -----------------------------------------------------------
1575  8C5E              ;
1576  8C5E              ;	21/12/23
1577  8C5E              ;
1578  8C5E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1579  8C5E              ;
1580  8C5E              ;	Destruye: HL,BC,DE,A
1581  8C5E
1582  8C5E 21 FC 87     Borra_datos_entidad ld hl,Bandeja_DRAW
1583  8C61 01 29 00     	ld bc,41
1584  8C64 AF           	xor a
1585  8C65 77           	ld (hl),a
1586  8C66 11 FD 87     	ld de,Bandeja_DRAW+1
1587  8C69 ED B0        	ldir
1588  8C6B C9           	ret
1589  8C6C
1590  8C6C              ; -----------------------------------------------------------
1591  8C6C
1592  8C6C              ; Teclado.
1593  8C6C
1594  8C6C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1595  8C6E DB FE        	in a,($fe)
1596  8C70 E6 01        	and $01
1597  8C72 28 02        	jr z,1f
1598  8C74 18 F6        	jr Pulsa_ENTER
1599  8C76 C9           1 ret
1600  8C77
1601  8C77              ; **************************************************************************************************
1602  8C77              ;
1603  8C77              ; Temporización.
1604  8C77
1605  8C77              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1606  8C77              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1607  8C77              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1608  8C77              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1609  8C77
1610  8C77              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1611  8C77              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1612  8C77              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1613  8C77
1614  8C77              ; A partir de $4f61 no hace falta DELAY.
1615  8C77
1616  8C77              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1617  8C77
1618  8C77 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1619  8C7A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1620  8C7B 78           	LD A,B
1621  8C7C A7           	AND A
1622  8C7D 20 FB        	JR NZ,wait
1623  8C7F C9           	RET
1624  8C80
1625  8C80              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1626  8C80              ;
1627  8C80              ;	5/3/23
1628  8C80              ;
1629  8C80              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1630  8C80
1631  8C80              Movimiento_Amadeus
1632  8C80
1633  8C80              ; Disparo.
1634  8C80
1635  8C80 3A 75 88     	ld a,(Disparo_Amadeus)
1636  8C83 A7           	and a
1637  8C84 20 02        	jr nz,1F
1638  8C86 18 15        	jr 2F
1639  8C88
1640  8C88 3E F7        1 ld a,$f7													; "5" para disparar.
1641  8C8A DB FE        	in a,($fe)
1642  8C8C E6 10        	and $10
1643  8C8E
1644  8C8E F5           	push af
1645  8C8F CC 37 8D     	call z,Genera_disparo
1646  8C92 F1           	pop af
1647  8C93 20 08        	jr nz,2F
1648  8C95
1649  8C95 3A 75 88     	ld a,(Disparo_Amadeus)
1650  8C98 EE 01        	xor 1
1651  8C9A 32 75 88     	ld (Disparo_Amadeus),a
1652  8C9D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1653  8C9F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1654  8CA1 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1655  8CA3 CC FC 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1656  8CA6
1657  8CA6 3E F7        	ld a,$f7
1658  8CA8 DB FE        	in a,($fe)
1659  8CAA E6 01        	and $01
1660  8CAC C8           	ret z
1661  8CAD
1662  8CAD 3E F7        	ld a,$f7
1663  8CAF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1664  8CB1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1665  8CB3 CC D9 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1666  8CB6 C9           	ret
1667  8CB7
1668  8CB7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1669  8CB7              ;
1670  8CB7              ;	Rutina provisional para que los malotes cagen balas.
1671  8CB7
1672  8CB7              Detecta_disparo_entidad
1673  8CB7
1674  8CB7 3A 78 88     	ld a,(Disparo_entidad)
1675  8CBA A7           	and a
1676  8CBB C8           	ret z
1677  8CBC
1678  8CBC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1679  8CBC
1680  8CBC              ;	ld a,$7f				; Detecta SPACE.
1681  8CBC              ;	in a,($fe)
1682  8CBC              ;	and 1
1683  8CBC              ;	ret nz
1684  8CBC
1685  8CBC CD 37 8D     	call Genera_disparo
1686  8CBF C9           	ret
1687  8CC0
1688  8CC0              ; ----------------------------------------------------------------------
1689  8CC0              ;
1690  8CC0              ;	8/9/23
1691  8CC0
1692  8CC0 2A 5B 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1693  8CC3 2B            	dec hl
1694  8CC4 7E           	ld a,(hl)
1695  8CC5 A7           	and a
1696  8CC6 C8           	ret z										; Salimos si es álbum está vacío.
1697  8CC7
1698  8CC7 11 18 88     	ld de,Variables_de_borrado+5
1699  8CCA 01 06 00     	ld bc,6
1700  8CCD ED B8        	lddr
1701  8CCF C9           	ret
1702  8CD0
1703  8CD0              ; ----------------------------------------------------------------------
1704  8CD0              ;
1705  8CD0              ;	9/9/23
1706  8CD0
1707  8CD0              Repone_datos_de_borrado_Amadeus
1708  8CD0
1709  8CD0 21 13 88     	ld hl,Variables_de_borrado
1710  8CD3 11 AC 70     	ld de,Album_de_fotos_Amadeus
1711  8CD6 01 06 00     	ld bc,6
1712  8CD9 ED B0        	ldir
1713  8CDB
1714  8CDB EB           	ex de,hl
1715  8CDC 22 5B 88     	ld (End_Snapshot_Amadeus),hl
1716  8CDF
1717  8CDF C9           	ret
1718  8CE0
1719  8CE0              ; ----------------------------------------------------------------------
1720  8CE0              ;
1721  8CE0              ;	27/10/23
1722  8CE0              ;
1723  8CE0
1724  8CE0              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1725  8CE0              ;	_ Album_de_fotos correspondiente.
1726  8CE0
1727  8CE0              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1728  8CE0              ;	_ durante el proceso de escritura.
1729  8CE0
1730  8CE0              Repone_datos_de_borrado
1731  8CE0
1732  8CE0 F3           	di
1733  8CE1 ED 5B 55 88  	ld de,(Stack_snapshot)
1734  8CE5 21 13 88     	ld hl,Variables_de_borrado
1735  8CE8 01 06 00     	ld bc,6
1736  8CEB ED B0        	ldir
1737  8CED FB           	ei
1738  8CEE
1739  8CEE EB           	ex de,hl
1740  8CEF 22 55 88     	ld (Stack_snapshot),hl
1741  8CF2
1742  8CF2 C9           	ret
1743  8CF3
1744  8CF3              ; --------------------------------------------------------------------------------------
1745  8CF3
1746  8CF3              Pinta_Amadeus
1747  8CF3
1748  8CF3 CD 92 8B        	call Calcula_malotes_Amadeus
1749  8CF6 CD A4 95     	call Extrae_foto_Amadeus
1750  8CF9 CD 52 8B     	call Limpia_album_Amadeus
1751  8CFC
1752  8CFC C9           	ret
1753  8CFD
1754  8CFD              Pinta_entidades
1755  8CFD
1756  8CFD              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1757  8CFD
1758  8CFD 3A 5D 88     	ld a,(Ctrl_3)
1759  8D00 CB 47        	bit 0,a
1760  8D02 C8           	ret z
1761  8D03
1762  8D03 CD 7A 8B     	call Calcula_numero_de_malotes
1763  8D06 CD 22 95     	call Extrae_foto_entidades
1764  8D09 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1765  8D0C
1766  8D0C C9           	ret
1767  8D0D
1768  8D0D              ; -----------------------------------------------------------------------------------
1769  8D0D              ;
1770  8D0D              ;	10/12/23
1771  8D0D              ;
1772  8D0D              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1773  8D0D
1774  8D0D              Actualiza_relojes
1775  8D0D
1776  8D0D 3A 5D 88     	ld a,(Ctrl_3)
1777  8D10 CB 47        	bit 0,a
1778  8D12 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1779  8D13
1780  8D13 21 70 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1781  8D16 34           	inc (hl)
1782  8D17
1783  8D17 34           	inc (hl)
1784  8D18 35           	dec (hl)
1785  8D19 C0           	ret nz
1786  8D1A
1787  8D1A 21 71 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1788  8D1D 34           	inc (hl)
1789  8D1E C9           	ret
1790  8D1F
1791  8D1F              ; ---------------------------------------------------------------
1792  8D1F              ;
1793  8D1F              ;	21/12/23
1794  8D1F
1795  8D1F              Guarda_parametros_DRAW
1796  8D1F
1797  8D1F 21 FC 87     	ld hl,Bandeja_DRAW
1798  8D22 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1799  8D25 01 2A 00     	ld bc,42
1800  8D28 ED B0        	ldir
1801  8D2A C9           	ret
1802  8D2B
1803  8D2B              Recupera_parametros_DRAW
1804  8D2B
1805  8D2B 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1806  8D2E 11 FC 87     	ld de,Bandeja_DRAW
1807  8D31 01 2A 00     	ld bc,42
1808  8D34 ED B0        	ldir
1809  8D36 C9           	ret
1810  8D37
1811  8D37              ; ---------------------------------------------------------------
1812  8D37
1813  8D37              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D37              ; ******************************************************************************************************************************************************************************************
   2+ 8D37              ;
   3+ 8D37              ;   21/07/23
   4+ 8D37              ;
   5+ 8D37              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D37              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D37              ;
   8+ 8D37              ;
   9+ 8D37              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D37              ;
  11+ 8D37              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D37              ;               _ hacen las entidades hacia abajo.
  13+ 8D37              ;
  14+ 8D37              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D37              ;
  16+ 8D37              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D37              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D37              ;
  19+ 8D37              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D37              ;           _ la bala.
  21+ 8D37              ;
  22+ 8D37              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D37              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D37              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D37              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D37              ;           _ en el momento de generarse la bala)).
  27+ 8D37
  28+ 8D37              Genera_disparo
  29+ 8D37
  30+ 8D37              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D37              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D37              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D37              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D37              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D37              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D37              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D37
  38+ 8D37              ; Exclusiones:
  39+ 8D37
  40+ 8D37 3A 29 88         ld a,(Vel_down)
  41+ 8D3A 47               ld b,a
  42+ 8D3B 3A 6F 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D3E B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D3F D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D40 3A 20 88         ld a,(Columnas)
  46+ 8D43 47               ld b,a
  47+ 8D44 3A FE 87         ld a,(Columns)
  48+ 8D47 B8               cp b
  49+ 8D48 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D49
  51+ 8D49              ; ----- ----- -----
  52+ 8D49
  53+ 8D49 3A 1F 88         ld a,(Ctrl_0)
  54+ 8D4C CB 77            bit 6,a
  55+ 8D4E 20 06            jr nz,14F
  56+ 8D50
  57+ 8D50 3A 04 88         ld a,(Coordenada_y)
  58+ 8D53 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D55 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D56
  61+ 8D56 21 00 80     14 ld hl,Indice_disparo
  62+ 8D59 3A 05 88         ld a,(CTRL_DESPLZ)
  63+ 8D5C 4F               ld c,a
  64+ 8D5D 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D5F              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D5F              ;                                            ""        ""       "f9", B="1"
  67+ 8D5F              ;                                            ""        ""       "fb", B="2"
  68+ 8D5F              ;                                            ""        ""       "fb", B="3"
  69+ 8D5F A7               and a
  70+ 8D60 28 10            jr z,1F
  71+ 8D62 E6 01            and 1
  72+ 8D64 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D65
  74+ 8D65 79               ld a,c
  75+ 8D66 16 F9            ld d,$f9
  76+ 8D68 23           2 inc hl
  77+ 8D69 23               inc hl
  78+ 8D6A 04               inc b
  79+ 8D6B BA               cp d
  80+ 8D6C 28 04            jr z,1F
  81+ 8D6E 14               inc d
  82+ 8D6F 14               inc d
  83+ 8D70 18 F6            jr 2B
  84+ 8D72
  85+ 8D72 CD C6 8B     1 call Extrae_address
  86+ 8D75 E5               push hl
  87+ 8D76 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D78 DD 21 EA 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D7C
  90+ 8D7C              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D7C              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D7C
  93+ 8D7C 3A 1F 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D7F CB 77            bit 6,a
  95+ 8D81 20 04            jr nz,19F
  96+ 8D83
  97+ 8D83 AF               xor a
  98+ 8D84 32 78 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D87
 100+ 8D87 3A 11 88     19 ld a,(Cuad_objeto)
 101+ 8D8A FE 02            cp 2
 102+ 8D8C 38 66            jr c,3F
 103+ 8D8E 28 64            jr z,3F
 104+ 8D90
 105+ 8D90              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D90
 107+ 8D90 E6 01            and 1
 108+ 8D92 28 30            jr z,4F
 109+ 8D94
 110+ 8D94              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D94              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D94              ;
 113+ 8D94              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D94              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D94              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D94
 117+ 8D94 2A FF 87     	ld hl,(Posicion_actual)
 118+ 8D97
 119+ 8D97              ;   Amadeus o entidad ???.
 120+ 8D97
 121+ 8D97 3A 1F 88         ld a,(Ctrl_0)
 122+ 8D9A CB 77            bit 6,a
 123+ 8D9C 28 0A            jr z,8F
 124+ 8D9E
 125+ 8D9E              ; 	Dispara Amadeus.
 126+ 8D9E
 127+ 8D9E 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8DA0 CD 13 95         call PreviousScan
 129+ 8DA3 CD 13 95         call PreviousScan
 130+ 8DA6
 131+ 8DA6              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DA6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DA6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DA6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DA6
 136+ 8DA6 18 11            jr 10F
 137+ 8DA8
 138+ 8DA8              ; 	Dispara Entidad.
 139+ 8DA8
 140+ 8DA8 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DAB              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DAB
 143+ 8DAB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DAB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DAB
 146+ 8DAB C5               push bc
 147+ 8DAC 06 10            ld b,16
 148+ 8DAE CD 04 95     9 call NextScan
 149+ 8DB1 10 FB            djnz 9B
 150+ 8DB3 C1               pop bc
 151+ 8DB4 CD 1E 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DB7 18 06            jr 17F
 153+ 8DB9
 154+ 8DB9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DB9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DB9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DB9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DB9
 159+ 8DB9 CD 1E 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DBC CD 93 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DBF              ;                                                      ; _al generar el disparo.
 162+ 8DBF
 163+ 8DBF              ; 	LLegados a este punto tendremos:
 164+ 8DBF              ;
 165+ 8DBF              ;       Puntero_objeto_disparo en IY.
 166+ 8DBF              ;       Rutinas_de_impresion en IX.
 167+ 8DBF              ;       Puntero_de_impresion en HL.
 168+ 8DBF              ;       Impacto/Dirección en BC.
 169+ 8DBF
 170+ 8DBF CD 26 8E     17 call Almacena_disparo
 171+ 8DC2 18 52            jr 6F                                             ; RET.
 172+ 8DC4
 173+ 8DC4              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DC4              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DC4              ;
 176+ 8DC4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DC4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DC4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DC4
 180+ 8DC4 2A FF 87     4 ld hl,(Posicion_actual)
 181+ 8DC7
 182+ 8DC7              ;   Amadeus o entidad ???.
 183+ 8DC7
 184+ 8DC7 3A 1F 88         ld a,(Ctrl_0)
 185+ 8DCA CB 77            bit 6,a
 186+ 8DCC 28 0A            jr z,11F
 187+ 8DCE
 188+ 8DCE              ; 	Dispara Amadeus.
 189+ 8DCE
 190+ 8DCE 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DD0 CD 13 95         call PreviousScan
 192+ 8DD3 CD 13 95         call PreviousScan
 193+ 8DD6
 194+ 8DD6              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DD6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DD6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DD6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DD6
 199+ 8DD6 18 11            jr 13F
 200+ 8DD8
 201+ 8DD8              ; 	Dispara Entidad.
 202+ 8DD8
 203+ 8DD8 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DDB              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DDB
 206+ 8DDB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DDB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DDB
 209+ 8DDB C5               push bc
 210+ 8DDC 06 10            ld b,16
 211+ 8DDE CD 04 95     12 call NextScan
 212+ 8DE1 10 FB            djnz 12B
 213+ 8DE3 C1               pop bc
 214+ 8DE4
 215+ 8DE4 CD 17 8E         call Ajusta_disparo_parte_derecha
 216+ 8DE7 18 06            jr 18F
 217+ 8DE9
 218+ 8DE9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DE9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DE9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DE9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DE9
 223+ 8DE9 CD 17 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8DEC CD 93 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DEF              ;                                                       ; _al generar el disparo.
 226+ 8DEF
 227+ 8DEF              ; LLegados a este punto tendremos:
 228+ 8DEF              ;
 229+ 8DEF              ;       Puntero_objeto_disparo en IY.
 230+ 8DEF              ;       Rutinas_de_impresion en IX.
 231+ 8DEF              ;       Puntero_de_impresion en HL.
 232+ 8DEF              ;       Impacto/Dirección en BC.
 233+ 8DEF
 234+ 8DEF CD 26 8E     18 call Almacena_disparo
 235+ 8DF2 18 22            jr 6F                                               ; RET.
 236+ 8DF4
 237+ 8DF4              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DF4
 239+ 8DF4 28 11        3 jr z,5F
 240+ 8DF6
 241+ 8DF6              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DF6              ;
 243+ 8DF6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DF6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DF6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DF6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DF6
 248+ 8DF6              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DF6              ;	   ""        ""       "f9", B="1"
 250+ 8DF6              ;	   ""        ""       "fb", B="2"
 251+ 8DF6              ; 	   ""        ""       "fb", B="3"
 252+ 8DF6
 253+ 8DF6 2A FF 87     	ld hl,(Posicion_actual)
 254+ 8DF9 CD 04 95     	call NextScan
 255+ 8DFC
 256+ 8DFC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DFC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DFC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DFC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DFC
 261+ 8DFC CD 1E 8E         call Ajusta_disparo_parte_izquierda
 262+ 8DFF
 263+ 8DFF              ; 	No se produce impacto. B="$80"
 264+ 8DFF              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DFF
 266+ 8DFF 01 80 80         ld bc,$8080
 267+ 8E02
 268+ 8E02              ; 	LLegados a este punto tendremos:
 269+ 8E02              ;
 270+ 8E02              ;       Puntero_objeto_disparo en IY.
 271+ 8E02              ;       Rutinas_de_impresion en IX.
 272+ 8E02              ;       Puntero_de_impresion en HL.
 273+ 8E02              ;       Impacto/Dirección en BC.
 274+ 8E02
 275+ 8E02 CD 26 8E         call Almacena_disparo
 276+ 8E05 18 0F            jr 6F                                           ; RET.
 277+ 8E07
 278+ 8E07              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E07              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E07              ;
 281+ 8E07              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E07              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E07              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E07              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E07
 286+ 8E07 2A FF 87     5 ld hl,(Posicion_actual)
 287+ 8E0A CD 04 95     	call NextScan
 288+ 8E0D
 289+ 8E0D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E0D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E0D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E0D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E0D
 294+ 8E0D CD 17 8E         call Ajusta_disparo_parte_derecha
 295+ 8E10
 296+ 8E10              ; 	No se produce impacto. B="$80"
 297+ 8E10              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E10
 299+ 8E10 01 80 80     15 ld bc,$8080
 300+ 8E13
 301+ 8E13              ; 	LLegados a este punto tendremos:
 302+ 8E13              ;
 303+ 8E13              ;       Puntero_objeto_disparo en IY.
 304+ 8E13              ;       Rutinas_de_impresion en IX.
 305+ 8E13              ;       Puntero_de_impresion en HL.
 306+ 8E13              ;       Impacto/Dirección en BC.
 307+ 8E13
 308+ 8E13 CD 26 8E         call Almacena_disparo
 309+ 8E16
 310+ 8E16 C9           6 ret
 311+ 8E17
 312+ 8E17              ; ----------------------------------------------------------------
 313+ 8E17              ;
 314+ 8E17              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E17              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E17              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E17
 318+ 8E17 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E18 FE 02            cp 2
 320+ 8E1A 38 01            jr c,1F
 321+ 8E1C 23               inc hl
 322+ 8E1D C9           1 ret
 323+ 8E1E
 324+ 8E1E 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E1F FE 01        	cp 1
 326+ 8E21 20 01        	jr nz,1F
 327+ 8E23 2B           	dec hl
 328+ 8E24 2B           1 dec hl
 329+ 8E25 C9               ret
 330+ 8E26
 331+ 8E26              ; ----------------------------------------------------------------
 332+ 8E26              ;
 333+ 8E26              ;   25/02/23
 334+ 8E26              ;
 335+ 8E26              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E26              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E26              ;
 338+ 8E26              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E26              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E26
 341+ 8E26              Almacena_disparo
 342+ 8E26
 343+ 8E26 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E27 F1               pop af
 345+ 8E28 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E29
 347+ 8E29 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E2A E6 01            and 1
 349+ 8E2C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E2E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E2E              ; 	Dispara AMADEUS.
 352+ 8E2E
 353+ 8E2E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E2E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E2E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E2E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E2E
 358+ 8E2E C5               push bc
 359+ 8E2F 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E32 2A 62 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E35 A7               and a
 362+ 8E36 ED 42            sbc hl,bc
 363+ 8E38 CC 4B 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E3B C1               pop bc
 365+ 8E3C 28 54            jr z,4F
 366+ 8E3E
 367+ 8E3E 2A 62 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E41 23               inc hl
 369+ 8E42 23               inc hl
 370+ 8E43 22 62 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E46              ;                                                   ; _ Disparo_(+1).
 372+ 8E46 18 18            jr 2F
 373+ 8E48
 374+ 8E48              ; Dispara una entidad.
 375+ 8E48
 376+ 8E48 C5           1 push bc
 377+ 8E49 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E4C 2A 60 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E4F A7               and a
 380+ 8E50 ED 42            sbc hl,bc
 381+ 8E52 CC 44 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E55 C1               pop bc
 383+ 8E56 28 3A            jr z,4F
 384+ 8E58
 385+ 8E58 2A 60 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E5B 23               inc hl
 387+ 8E5C 23               inc hl
 388+ 8E5D 22 60 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E60              ;                                                   ; _ Disparo_(+1).
 390+ 8E60 CD C6 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E63              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E63              ;
 393+ 8E63              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E63              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E63              ;                                                     Puntero_de_impresion en HL.
 396+ 8E63              ;                                                     Impacto/Dirección en BC.
 397+ 8E63
 398+ 8E63 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E64 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E65 23               inc hl                                          ; _ al siguiente.
 401+ 8E66 A7               and a
 402+ 8E67 20 C0            jr nz,3B
 403+ 8E69
 404+ 8E69 08               ex af,af
 405+ 8E6A ED 73 4F 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E6E F9               ld sp,hl
 407+ 8E6F
 408+ 8E6F DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E71 F5               push af                                         ; Puntero de impresión.
 410+ 8E72 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E74 C5               push bc                                         ; Control.
 412+ 8E75
 413+ 8E75 ED 7B 4F 88      ld sp,(Stack)
 414+ 8E79
 415+ 8E79              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E79
 417+ 8E79 21 3E 88     	ld hl,Ctrl_1
 418+ 8E7C CB C6        	set 0,(hl)
 419+ 8E7E
 420+ 8E7E DD E5        	push ix
 421+ 8E80 E1               pop hl
 422+ 8E81 F5               push af
 423+ 8E82 DD E1            pop ix
 424+ 8E84
 425+ 8E84 CD 16 71     	call Guarda_foto_registros
 426+ 8E87
 427+ 8E87 21 3E 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E8A CB 86        	res 0,(hl)
 429+ 8E8C
 430+ 8E8C              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E8C              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E8C
 433+ 8E8C CD 4B 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E8F CD 44 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E92
 436+ 8E92 C9           4 ret
 437+ 8E93
 438+ 8E93              ; ----------------------------------------------------------------
 439+ 8E93              ;
 440+ 8E93              ;   4/3/23
 441+ 8E93              ;
 442+ 8E93              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E93              ;   _ al generarse el disparo.
 444+ 8E93              ;
 445+ 8E93              ;       "$80" ..... No se produce colisión.
 446+ 8E93              ;       "$81" ..... Se produce colisión.
 447+ 8E93              ;
 448+ 8E93              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E93              ;         _ que forman el disparo.
 450+ 8E93
 451+ 8E93
 452+ 8E93              Comprueba_Colision
 453+ 8E93
 454+ 8E93              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E93
 456+ 8E93 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E95 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E96
 459+ 8E96 CD CC 8E         call Modifica_H_Velocidad_disparo
 460+ 8E99
 461+ 8E99 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E9A FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E9C 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E9E
 465+ 8E9E 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8EA0 CD BC 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8EA3
 468+ 8EA3 7B               ld a,e
 469+ 8EA4 E6 01            and 1
 470+ 8EA6 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8EA8              ;                                                  ; _ para activar IMPACTO.
 472+ 8EA8 E1               pop hl
 473+ 8EA9 E5               push hl
 474+ 8EAA CD 04 95         call NextScan
 475+ 8EAD
 476+ 8EAD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8EAE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8EB0 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8EB2              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8EB2 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8EB4 CD BC 8E         call Bucle_2
 482+ 8EB7
 483+ 8EB7 43           1 ld b,e
 484+ 8EB8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8EB9 FD E1            pop iy
 486+ 8EBB C9               ret
 487+ 8EBC
 488+ 8EBC              ; ---------- ----------
 489+ 8EBC
 490+ 8EBC 06 02        Bucle_2 ld b,2
 491+ 8EBE FD 7E 00     2 ld a,(iy)
 492+ 8EC1 A6               and (hl)
 493+ 8EC2 28 02            jr z,1F
 494+ 8EC4 1E 81            ld e,$81
 495+ 8EC6 23           1 inc hl
 496+ 8EC7 FD 23            inc iy
 497+ 8EC9 10 F3            djnz 2B
 498+ 8ECB C9               ret
 499+ 8ECC
 500+ 8ECC              ; ---------- ----------
 501+ 8ECC              ;
 502+ 8ECC              ;   21/7/23
 503+ 8ECC
 504+ 8ECC              Modifica_H_Velocidad_disparo
 505+ 8ECC
 506+ 8ECC 3A 6F 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8ECF FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8ED1 D0               ret nc                                         ; _ incrementamos H.
 509+ 8ED2 24               inc h
 510+ 8ED3
 511+ 8ED3 C9               ret
 512+ 8ED4
 513+ 8ED4              ; -------------------------------------------------------------------------------------------------------------
 514+ 8ED4              ;
 515+ 8ED4              ;   04/12/23
 516+ 8ED4              ;
 517+ 8ED4              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8ED4              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8ED4              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8ED4              ;
 521+ 8ED4              ;   MODIFICA: HL,DE,B y A.
 522+ 8ED4
 523+ 8ED4              Genera_coordenadas_X
 524+ 8ED4
 525+ 8ED4              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8ED4              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8ED4
 528+ 8ED4              ;   Limpiamos almacenes.
 529+ 8ED4
 530+ 8ED4 CD 05 8F         call Limpia_Coordenadas_X
 531+ 8ED7
 532+ 8ED7              ;   Almacenamos coordenadas X.
 533+ 8ED7
 534+ 8ED7              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8ED7
 536+ 8ED7 2A 19 88         ld hl,(Puntero_de_impresion)
 537+ 8EDA 11 6C 88         ld de,Coordenadas_X_Entidad
 538+ 8EDD 06 02            ld b,2
 539+ 8EDF
 540+ 8EDF 3A 05 88         ld a,(CTRL_DESPLZ)
 541+ 8EE2 A7               and a
 542+ 8EE3 28 01            jr z,1F
 543+ 8EE5 04               inc b
 544+ 8EE6
 545+ 8EE6 CD FC 8E     1 call Guarda_coordenadas_X
 546+ 8EE9
 547+ 8EE9              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EE9
 549+ 8EE9 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8EEC 11 69 88         ld de,Coordenadas_X_Amadeus
 551+ 8EEF 06 02            ld b,2
 552+ 8EF1
 553+ 8EF1 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8EF4 A7               and a
 555+ 8EF5 28 01            jr z,2F
 556+ 8EF7 04               inc b
 557+ 8EF8
 558+ 8EF8 CD FC 8E     2 call Guarda_coordenadas_X
 559+ 8EFB
 560+ 8EFB              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EFB
 562+ 8EFB C9               ret
 563+ 8EFC
 564+ 8EFC              ; ----- ----- ----- ----- -----
 565+ 8EFC
 566+ 8EFC 7D           Guarda_coordenadas_X  ld a,l
 567+ 8EFD E6 1F            and $1f
 568+ 8EFF 12           1 ld (de),a
 569+ 8F00 3C               inc a
 570+ 8F01 13               inc de
 571+ 8F02 10 FB            djnz 1B
 572+ 8F04 C9               ret
 573+ 8F05
 574+ 8F05 AF           Limpia_Coordenadas_X xor a
 575+ 8F06 06 06            ld b,6
 576+ 8F08 21 69 88         ld hl,Coordenadas_X_Amadeus
 577+ 8F0B 77           1 ld (hl),a
 578+ 8F0C 23               inc hl
 579+ 8F0D 10 FC            djnz 1B
 580+ 8F0F C9               ret
 581+ 8F10
 582+ 8F10              ; ----- ----- ----- ----- -----
 583+ 8F10
 584+ 8F10              Compara_coordenadas_X
 585+ 8F10
 586+ 8F10 06 03            ld b,3
 587+ 8F12 11 6E 88         ld de,Coordenadas_X_Entidad+2
 588+ 8F15
 589+ 8F15 1A               ld a,(de)
 590+ 8F16 A7               and a
 591+ 8F17 20 01            jr nz,2F
 592+ 8F19 05               dec b
 593+ 8F1A
 594+ 8F1A 1B           2 dec de
 595+ 8F1B 1B               dec de
 596+ 8F1C 21 69 88         ld hl,Coordenadas_X_Amadeus
 597+ 8F1F
 598+ 8F1F D5           1 push de
 599+ 8F20 E5               push hl
 600+ 8F21 C5               push bc
 601+ 8F22
 602+ 8F22 CD 2C 8F         call Comparando
 603+ 8F25
 604+ 8F25 C1               pop bc
 605+ 8F26 E1               pop hl
 606+ 8F27 D1               pop de
 607+ 8F28
 608+ 8F28 13               inc de
 609+ 8F29 10 F4            djnz 1B
 610+ 8F2B
 611+ 8F2B C9               ret
 612+ 8F2C
 613+ 8F2C              ; ----- ----- ----- ----- -----
 614+ 8F2C              ;
 615+ 8F2C              ;   4/12/23
 616+ 8F2C              ;
 617+ 8F2C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8F2C
 619+ 8F2C 06 03        Comparando ld b,3
 620+ 8F2E 1A               ld a,(de)
 621+ 8F2F 4E           2 ld c,(hl)
 622+ 8F30 B9               cp c
 623+ 8F31 28 04            jr z,1F
 624+ 8F33 23               inc hl
 625+ 8F34 10 F9            djnz 2B
 626+ 8F36 C9               ret
 627+ 8F37
 628+ 8F37 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F39 32 12 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F3C 21 64 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F3F CB D6            set 2,(hl)
 632+ 8F41 C9               ret
 633+ 8F42
 634+ 8F42              ; -----------------------------------------------------------------------
 635+ 8F42              ;
 636+ 8F42              ;   7/12/23
 637+ 8F42              ;
 638+ 8F42
 639+ 8F42              Detecta_colision_nave_entidad
 640+ 8F42
 641+ 8F42              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F42
 643+ 8F42 FD 2A 01 88      ld iy,(Puntero_objeto)
 644+ 8F46 2A 19 88         ld hl,(Puntero_de_impresion)
 645+ 8F49
 646+ 8F49 E5               push hl
 647+ 8F4A
 648+ 8F4A              ; ----- ----- -----
 649+ 8F4A 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F4C 06 0A            ld b,10
 651+ 8F4E CD 7E 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F51 7B               ld a,e
 653+ 8F52 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F54 38 0E            jr c,3F
 655+ 8F56
 656+ 8F56              ; LLegados a este punto:
 657+ 8F56              ;
 658+ 8F56              ;   HAY COLISIÓN !!!!!.
 659+ 8F56              ;
 660+ 8F56              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F56              ;   SET el bit3 de (Impacto2).
 662+ 8F56              ;
 663+ 8F56              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F56
 665+ 8F56 21 12 88         ld hl,Impacto
 666+ 8F59 36 01            ld (hl),1
 667+ 8F5B 21 64 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F5E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F60 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F62
 671+ 8F62 18 18            jr 1F
 672+ 8F64
 673+ 8F64              ; -----
 674+ 8F64
 675+ 8F64 E1           3 pop hl
 676+ 8F65 CD 04 95         call NextScan
 677+ 8F68 E5               push hl
 678+ 8F69 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F6A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F6C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F6E 30 0C            jr nc,1F
 682+ 8F70              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F70 10 DC            djnz 2B
 684+ 8F72
 685+ 8F72              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F72
 687+ 8F72              ; LLegados a este punto:
 688+ 8F72              ;
 689+ 8F72              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F72              ;
 691+ 8F72              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F72              ;   RES el bit2 de (Impacto2).
 693+ 8F72              ;
 694+ 8F72              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F72              ;   Lo colocamos a "0".
 696+ 8F72
 697+ 8F72 21 64 88         ld hl,Impacto2
 698+ 8F75 CB 96            res 2,(hl)
 699+ 8F77 2A 65 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F7A 36 00            ld (hl),0
 701+ 8F7C
 702+ 8F7C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F7D C9               ret
 704+ 8F7E
 705+ 8F7E               ; ---------- ----------
 706+ 8F7E
 707+ 8F7E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F7F 3A FE 87         ld a,(Columns)
 709+ 8F82 47               ld b,a
 710+ 8F83 FD 7E 00     2 ld a,(iy)
 711+ 8F86 BE               cp (hl)
 712+ 8F87 28 01            jr z,1F
 713+ 8F89
 714+ 8F89 1C               inc e
 715+ 8F8A
 716+ 8F8A 23           1 inc hl
 717+ 8F8B FD 23            inc iy
 718+ 8F8D 10 F4            djnz 2B
 719+ 8F8F C1               pop bc
 720+ 8F90 C9               ret
 721+ 8F91
 722+ 8F91              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F91              ;
 724+ 8F91              ;   13/03/23
 725+ 8F91              ;
 726+ 8F91              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F91              ;
 728+ 8F91              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F91
 730+ 8F91 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F94 7E               ld a,(hl)
 732+ 8F95 A7               and a
 733+ 8F96 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F97
 735+ 8F97 44               ld b,h
 736+ 8F98 4D               ld c,l
 737+ 8F99 2A 57 88         ld hl,(Stack_snapshot_disparos)
 738+ 8F9C E5               push hl
 739+ 8F9D A7               and a
 740+ 8F9E ED 42            sbc hl,bc
 741+ 8FA0 E5               push hl
 742+ 8FA1 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8FA2
 744+ 8FA2 E1               pop hl
 745+ 8FA3 54               ld d,h
 746+ 8FA4 5D               ld e,l
 747+ 8FA5 1B               dec de
 748+ 8FA6 ED B8            lddr                                                ; Limpiamos.
 749+ 8FA8
 750+ 8FA8 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8FAB 22 57 88         ld (Stack_snapshot_disparos),hl
 752+ 8FAE
 753+ 8FAE C9               ret
 754+ 8FAF
 755+ 8FAF              ; -------------------------------------------------------------------------------------------------------------
 756+ 8FAF              ;
 757+ 8FAF              ;   18/07/23
 758+ 8FAF              ;
 759+ 8FAF
 760+ 8FAF              Motor_de_disparos
 761+ 8FAF
 762+ 8FAF              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8FAF
 764+ 8FAF 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8FB2 2A 62 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8FB5
 767+ 8FB5 CD C6 8B     2 call Extrae_address
 768+ 8FB8 7E               ld a,(hl)
 769+ 8FB9 A7               and a
 770+ 8FBA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8FBC
 772+ 8FBC              ; ----- ----- ----- ----- ----- -----
 773+ 8FBC
 774+ 8FBC C5               push bc
 775+ 8FBD CD 81 90         call foto_disparo_a_borrar
 776+ 8FC0
 777+ 8FC0              ; Existe colisión con este disparo???
 778+ 8FC0
 779+ 8FC0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8FC1 7E               ld a,(hl)
 781+ 8FC2 2B               dec hl
 782+ 8FC3 E6 01            and 1
 783+ 8FC5 28 1D            jr z,9F
 784+ 8FC7
 785+ 8FC7              ;   En este punto:
 786+ 8FC7              ;
 787+ 8FC7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8FC7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8FC7              ;   _con la entidad).
 790+ 8FC7              ;
 791+ 8FC7              ;   Disparo_2A defw 0                                ; Control.
 792+ 8FC7              ;    defw 0                                          ; Puntero objeto.
 793+ 8FC7              ;    defw 0                                          ; Puntero de impresión.
 794+ 8FC7              ;    defw 0                                          ; Rutina de impresión.
 795+ 8FC7
 796+ 8FC7 E5               push hl
 797+ 8FC8
 798+ 8FC8 06 04            ld b,4
 799+ 8FCA 23           19 inc hl
 800+ 8FCB 10 FD            djnz 19B
 801+ 8FCD
 802+ 8FCD CD C6 8B         call Extrae_address
 803+ 8FD0 CD DB 9B         call Genera_coordenadas_disparo
 804+ 8FD3
 805+ 8FD3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FD3
 807+ 8FD3 21 67 88         ld hl,Coordenadas_disparo_certero
 808+ 8FD6 72               ld (hl),d
 809+ 8FD7 23               inc hl
 810+ 8FD8 73               ld (hl),e
 811+ 8FD9
 812+ 8FD9              ; Elimino el disparo de la base de datos.
 813+ 8FD9
 814+ 8FD9 E1               pop hl
 815+ 8FDA CD 00 91         call Elimina_disparo_de_base_de_datos
 816+ 8FDD 21 64 88         ld hl,Impacto2
 817+ 8FE0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FE2
 819+ 8FE2 18 06            jr 11F
 820+ 8FE4
 821+ 8FE4 CD AA 90     9 call Mueve_disparo
 822+ 8FE7 CD 81 90         call foto_disparo_a_borrar
 823+ 8FEA
 824+ 8FEA C1           11 pop bc
 825+ 8FEB 18 04            jr 7F
 826+ 8FED
 827+ 8FED              ; ----- ----- ----- ----- ----- -----
 828+ 8FED
 829+ 8FED ED 42        1 sbc hl,bc
 830+ 8FEF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FF1
 832+ 8FF1 2A 62 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FF4 23               inc hl
 834+ 8FF5 23               inc hl
 835+ 8FF6 22 62 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FF9 18 BA            jr 2B
 837+ 8FFB
 838+ 8FFB CD 4B 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FFE              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FFE
 841+ 8FFE              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FFE
 843+ 8FFE 01 6E 85         ld bc,Disparo_11
 844+ 9001 2A 60 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9004
 846+ 9004 CD C6 8B     5 call Extrae_address
 847+ 9007 7E               ld a,(hl)
 848+ 9008 A7               and a
 849+ 9009 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 900B
 851+ 900B              ; ----- ----- ----- ----- ----- -----
 852+ 900B
 853+ 900B C5               push bc
 854+ 900C CD 81 90         call foto_disparo_a_borrar
 855+ 900F
 856+ 900F              ; Existe colisión con este disparo???
 857+ 900F
 858+ 900F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9010 7E               ld a,(hl)
 860+ 9011 2B               dec hl
 861+ 9012 E6 01            and 1
 862+ 9014 28 4D            jr z,10F
 863+ 9016
 864+ 9016              ;! La colisión se produce con Amadeus???
 865+ 9016              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9016
 867+ 9016 E5               push hl
 868+ 9017
 869+ 9017 06 04            ld b,4
 870+ 9019 23           16 inc hl
 871+ 901A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 901C
 873+ 901C CD C6 8B         call Extrae_address
 874+ 901F CD DB 9B         call Genera_coordenadas_disparo
 875+ 9022
 876+ 9022 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9023 FE 16            cp $16
 878+ 9025 38 2A            jr c,15F
 879+ 9027
 880+ 9027
 881+ 9027              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9027
 883+ 9027 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9028
 885+ 9028              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9028
 887+ 9028 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 902B
 889+ 902B              ; Coordenada X de Amadeus en D.
 890+ 902B
 891+ 902B 7D               ld a,l
 892+ 902C E6 1F            and $1F
 893+ 902E 57               ld d,a
 894+ 902F
 895+ 902F 21 8A 85         ld hl,Amadeus_db+8
 896+ 9032 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9033
 898+ 9033 21 69 88         ld hl,Coordenadas_X_Amadeus
 899+ 9036 CD FC 8E         call Guarda_coordenadas_X
 900+ 9039
 901+ 9039 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 903A
 903+ 903A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 903A
 905+ 903A 06 02            ld b,2
 906+ 903C C5           20 push bc
 907+ 903D
 908+ 903D 06 03            ld b,3
 909+ 903F 21 69 88         ld hl,Coordenadas_X_Amadeus
 910+ 9042 7E           18 ld a,(hl)
 911+ 9043 BA               cp d
 912+ 9044 20 04            jr nz,17F
 913+ 9046
 914+ 9046              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9046
 916+ 9046 C1               pop bc
 917+ 9047 E1               pop hl
 918+ 9048 18 0D            jr 14F
 919+ 904A
 920+ 904A 23           17 inc hl
 921+ 904B 10 F5            djnz 18B
 922+ 904D
 923+ 904D 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 904E
 925+ 904E C1               pop bc
 926+ 904F 10 EB            djnz 20B
 927+ 9051
 928+ 9051
 929+ 9051              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9051              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9051
 932+ 9051 E1           15 pop hl
 933+ 9052 23               inc hl
 934+ 9053 35               dec (hl)
 935+ 9054 2B               dec hl
 936+ 9055 18 0C            jr 10F
 937+ 9057
 938+ 9057              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9057              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9057
 941+ 9057 E5           14 push hl
 942+ 9058 CD 00 91         call Elimina_disparo_de_base_de_datos
 943+ 905B 21 64 88         ld hl,Impacto2
 944+ 905E CB CE            set 1,(hl)
 945+ 9060 E1               pop hl
 946+ 9061 18 06            jr 12F
 947+ 9063
 948+ 9063              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9063
 950+ 9063 CD AA 90     10 call Mueve_disparo
 951+ 9066 CD 81 90         call foto_disparo_a_borrar
 952+ 9069 C1           12 pop bc
 953+ 906A
 954+ 906A 18 04            jr 8F
 955+ 906C
 956+ 906C              ; ----- ----- ----- ----- ----- -----
 957+ 906C
 958+ 906C ED 42        4 sbc hl,bc
 959+ 906E 28 0A            jr z,6F
 960+ 9070
 961+ 9070 2A 60 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9073 23               inc hl
 963+ 9074 23               inc hl
 964+ 9075 22 60 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9078 18 8A            jr 5B
 966+ 907A
 967+ 907A CD 44 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 907D CD 05 8F         call Limpia_Coordenadas_X
 969+ 9080 C9               ret
 970+ 9081
 971+ 9081              ; ------------------------------------------------------------------
 972+ 9081
 973+ 9081              foto_disparo_a_borrar
 974+ 9081
 975+ 9081 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9082 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9083 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9084
 979+ 9084 E5               push hl
 980+ 9085 23               inc hl
 981+ 9086 23               inc hl
 982+ 9087 ED 73 4F 88      ld (Stack),sp
 983+ 908B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 908C FD E1            pop iy
 985+ 908E DD E1            pop ix
 986+ 9090 E1               pop hl
 987+ 9091 ED 7B 4F 88      ld sp,(Stack)
 988+ 9095 3A 3E 88         ld a,(Ctrl_1)
 989+ 9098 CB C7            set 0,a
 990+ 909A 32 3E 88         ld (Ctrl_1),a
 991+ 909D CD 16 71         call Guarda_foto_registros
 992+ 90A0 3A 3E 88         ld a,(Ctrl_1)
 993+ 90A3 CB 87            res 0,a
 994+ 90A5 32 3E 88         ld (Ctrl_1),a
 995+ 90A8 E1               pop hl
 996+ 90A9 C9               ret
 997+ 90AA
 998+ 90AA              ;---------------------------------------------------
 999+ 90AA              ;
1000+ 90AA              ;   18/07/23
1001+ 90AA              ;
1002+ 90AA
1003+ 90AA              Mueve_disparo
1004+ 90AA
1005+ 90AA              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 90AA              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 90AA              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 90AA
1009+ 90AA E5               push hl
1010+ 90AB
1011+ 90AB 7E               ld a,(hl)
1012+ 90AC
1013+ 90AC 06 04            ld b,4
1014+ 90AE 23           1 inc hl
1015+ 90AF 10 FD            djnz 1B
1016+ 90B1
1017+ 90B1              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 90B1
1019+ 90B1 CD C6 8B         call Extrae_address
1020+ 90B4
1021+ 90B4 E6 01            and 1
1022+ 90B6 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 90B8
1024+ 90B8              ; Disparo hacia arriba, (Amadeus).
1025+ 90B8
1026+ 90B8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 90B8              ; _ de la dificultad.
1028+ 90B8
1029+ 90B8 CD 13 95         call PreviousScan
1030+ 90BB CD 13 95         call PreviousScan
1031+ 90BE CD 13 95         call PreviousScan
1032+ 90C1 CD 13 95         call PreviousScan
1033+ 90C4
1034+ 90C4              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 90C4
1036+ 90C4 7C               ld a,h
1037+ 90C5 FE 40            cp $40
1038+ 90C7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 90C9
1040+ 90C9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 90C9
1042+ 90C9 EB               ex de,hl
1043+ 90CA 06 04            ld b,4
1044+ 90CC 2B           6 dec hl
1045+ 90CD 10 FD            djnz 6B
1046+ 90CF
1047+ 90CF CD 00 91         call Elimina_disparo_de_base_de_datos
1048+ 90D2 E1               pop hl
1049+ 90D3 18 10            jr 7F
1050+ 90D5
1051+ 90D5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90D5              ; HL contiene el puntero de impresión del disparo.
1053+ 90D5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90D5
1055+ 90D5 D5           3 push de
1056+ 90D6 C5               push bc
1057+ 90D7
1058+ 90D7 CD 93 8E         call Comprueba_Colision
1059+ 90DA
1060+ 90DA              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90DA
1062+ 90DA 78               ld a,b
1063+ 90DB
1064+ 90DB C1               pop bc
1065+ 90DC D1               pop de
1066+ 90DD
1067+ 90DD EB               ex de,hl
1068+ 90DE
1069+ 90DE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90DF 23               inc hl                                      ; _ movimiento.
1071+ 90E0 72               ld (hl),d
1072+ 90E1
1073+ 90E1 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90E2
1075+ 90E2 23               inc hl                                      ; _ en curso.
1076+ 90E3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90E4 2B               dec hl
1078+ 90E5
1079+ 90E5 C9           7 ret
1080+ 90E6
1081+ 90E6              ; Disparo hacia abajo, (Entidad).
1082+ 90E6
1083+ 90E6 3A 6F 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 90E9 47               ld b,a
1085+ 90EA
1086+ 90EA CD 04 95     4 call NextScan
1087+ 90ED 10 FB            djnz 4B
1088+ 90EF
1089+ 90EF              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90EF
1091+ 90EF 7C               ld a,h
1092+ 90F0 FE 58            cp $58
1093+ 90F2 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90F4
1095+ 90F4 EB               ex de,hl
1096+ 90F5 06 04            ld b,4
1097+ 90F7 2B           5 dec hl
1098+ 90F8 10 FD            djnz 5B
1099+ 90FA
1100+ 90FA CD 00 91         call Elimina_disparo_de_base_de_datos
1101+ 90FD E1               pop hl
1102+ 90FE 18 E5            jr 7B
1103+ 9100
1104+ 9100              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9100
1106+ 9100 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9103 AF               xor a
1108+ 9104 77               ld (hl),a
1109+ 9105 54               ld d,h
1110+ 9106 5D               ld e,l
1111+ 9107 13               inc de
1112+ 9108 ED B0            ldir
1113+ 910A C9               ret
1114+ 910B
1115+ 910B              ; -----------------------------------------------------------------
1116+ 910B              ;
1117+ 910B              ;   7/12/23
1118+ 910B              ;
1119+ 910B
1120+ 910B 3A 64 88     Selector_de_impactos ld a,(Impacto2)
1121+ 910E A7               and a
1122+ 910F C8               ret z
1123+ 9110
1124+ 9110              ; Analizamos si hay impacto por disparos.
1125+ 9110
1126+ 9110              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9110
1128+ 9110 CB 4F            bit 1,a
1129+ 9112 28 07            jr z,1F
1130+ 9114
1131+ 9114 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9117 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9119 18 08            jr 2F
1134+ 911B
1135+ 911B CB 47        1 bit 0,a
1136+ 911D C8               ret z
1137+ 911E
1138+ 911E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 911E
1140+ 911E 21 3E 88         ld hl,Ctrl_1
1141+ 9121 CB D6            set 2,(hl)
1142+ 9123
1143+ 9123 C9           2 ret
1144+ 9124
1145+ 9124              ; -----------------------------------------------------------------
1146+ 9124              ;
1147+ 9124              ;   25/04/23
1148+ 9124              ;
1149+ 9124
1150+ 9124              Determina_resultado_comparativa
1151+ 9124
1152+ 9124              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9124              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9124              ;
1155+ 9124              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9124              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9124              ;
1158+ 9124              ;   SBC HL,DE
1159+ 9124
1160+ 9124              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9124              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9124
1163+ 9124              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9124              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9124
1166+ 9124
1167+ 9124 3A 11 88         ld a,(Cuad_objeto)
1168+ 9127 FE 02            cp 2
1169+ 9129 28 26            jr z,2F
1170+ 912B 38 24            jr c,2F
1171+ 912D
1172+ 912D              ; Cuadrantes 3º y 4º
1173+ 912D
1174+ 912D E6 01            and 1
1175+ 912F 28 10            jr z,4F
1176+ 9131
1177+ 9131              ; Cuadrante 3º
1178+ 9131
1179+ 9131 7C               ld a,h
1180+ 9132 06 00            ld b,0
1181+ 9134
1182+ 9134 CD BF 91         call Compara_cositas_H3
1183+ 9137
1184+ 9137 04               inc b
1185+ 9138 05               dec b
1186+ 9139 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 913A
1188+ 913A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 913B 06 00            ld b,0
1190+ 913D
1191+ 913D CD D1 91         call Compara_cositas_L3
1192+ 9140 C9               ret
1193+ 9141
1194+ 9141              ; Cuadrante 4º
1195+ 9141
1196+ 9141 7C           4 ld a,h
1197+ 9142 06 00            ld b,0
1198+ 9144
1199+ 9144 CD E3 91         call Compara_cositas_H4
1200+ 9147
1201+ 9147 04               inc b
1202+ 9148 05               dec b
1203+ 9149 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 914A
1205+ 914A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 914B 06 00            ld b,0
1207+ 914D
1208+ 914D CD F9 91         call Compara_cositas_L4
1209+ 9150 C9               ret
1210+ 9151
1211+ 9151              ; Cuadrantes 1º y 2º.
1212+ 9151
1213+ 9151 28 10        2 jr z,3F
1214+ 9153
1215+ 9153              ; 1er Cuadrante
1216+ 9153
1217+ 9153 7C               ld a,h
1218+ 9154 06 00            ld b,0
1219+ 9156
1220+ 9156 CD 97 91         call Compara_cositas_H1
1221+ 9159
1222+ 9159 04               inc b
1223+ 915A 05               dec b
1224+ 915B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 915C
1226+ 915C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 915D 06 00            ld b,0
1228+ 915F
1229+ 915F CD AD 91         call Compara_cositas_L1
1230+ 9162 C9               ret
1231+ 9163
1232+ 9163
1233+ 9163              ; 2º Cuadrante
1234+ 9163
1235+ 9163 7C           3 ld a,h
1236+ 9164 06 00            ld b,0
1237+ 9166
1238+ 9166 CD 73 91         call Compara_cositas_H2
1239+ 9169
1240+ 9169 04               inc b
1241+ 916A 05               dec b
1242+ 916B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 916C
1244+ 916C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 916D 06 00            ld b,0
1246+ 916F
1247+ 916F CD 85 91         call Compara_cositas_L2
1248+ 9172 C9               ret
1249+ 9173
1250+ 9173 A7           Compara_cositas_H2 and a
1251+ 9174 28 0D            jr z,1F
1252+ 9176              ;    cp $fd
1253+ 9176              ;    jr z,1F
1254+ 9176              ;    cp $fe
1255+ 9176              ;    jr z,1F
1256+ 9176 FE FF            cp $ff
1257+ 9178 28 09            jr z,1F
1258+ 917A FE 01            cp $01
1259+ 917C 28 05            jr z,1F
1260+ 917E FE 02            cp $02
1261+ 9180 28 01            jr z,1F
1262+ 9182 C0               ret nz
1263+ 9183 04           1 inc b
1264+ 9184 C9               ret
1265+ 9185
1266+ 9185 A7           Compara_cositas_L2 and a
1267+ 9186 28 0D            jr z,1F
1268+ 9188              ;    cp $fd
1269+ 9188              ;    jr z,1F
1270+ 9188 FE FE            cp $fe
1271+ 918A 28 09            jr z,1F
1272+ 918C FE FF            cp $ff
1273+ 918E 28 05            jr z,1F
1274+ 9190 FE 01            cp $01
1275+ 9192 28 01            jr z,1F
1276+ 9194              ;    cp $02
1277+ 9194              ;    jr z,1F
1278+ 9194 C0               ret nz
1279+ 9195 04           1 inc b
1280+ 9196 C9               ret
1281+ 9197
1282+ 9197 A7           Compara_cositas_H1 and a
1283+ 9198 28 11            jr z,1F
1284+ 919A              ;    cp $fd
1285+ 919A              ;    jr z,1F
1286+ 919A              ;    cp $fe
1287+ 919A              ;    jr z,1F
1288+ 919A FE FF            cp $ff
1289+ 919C 28 0D            jr z,1F
1290+ 919E FE 01            cp $01
1291+ 91A0 28 09            jr z,1F
1292+ 91A2 FE 02            cp $02
1293+ 91A4 28 05            jr z,1F
1294+ 91A6 FE 03            cp $03
1295+ 91A8 28 01            jr z,1F
1296+ 91AA C0               ret nz
1297+ 91AB 04           1 inc b
1298+ 91AC C9               ret
1299+ 91AD
1300+ 91AD A7           Compara_cositas_L1 and a
1301+ 91AE 28 0D            jr z,1F
1302+ 91B0              ;    cp $fd
1303+ 91B0              ;    jr z,1F
1304+ 91B0              ;    cp $fe
1305+ 91B0              ;    jr z,1F
1306+ 91B0              ;    cp $ff
1307+ 91B0              ;    jr z,1F
1308+ 91B0 FE 01            cp $01
1309+ 91B2 28 09            jr z,1F
1310+ 91B4 FE 02            cp $02
1311+ 91B6 28 05            jr z,1F
1312+ 91B8 FE 03            cp $03
1313+ 91BA 28 01            jr z,1F
1314+ 91BC C0               ret nz
1315+ 91BD 04           1 inc b
1316+ 91BE C9               ret
1317+ 91BF
1318+ 91BF A7           Compara_cositas_H3 and a
1319+ 91C0 28 0D            jr z,1F
1320+ 91C2              ;    cp $fd
1321+ 91C2              ;    jr z,1F
1322+ 91C2 FE FE            cp $fe
1323+ 91C4 28 09            jr z,1F
1324+ 91C6 FE FF            cp $ff
1325+ 91C8 28 05            jr z,1F
1326+ 91CA FE 01            cp $01
1327+ 91CC 28 01            jr z,1F
1328+ 91CE              ;    cp $02
1329+ 91CE              ;    jr z,1F
1330+ 91CE              ;    cp $03
1331+ 91CE              ;    jr z,1F
1332+ 91CE C0               ret nz
1333+ 91CF 04           1 inc b
1334+ 91D0 C9               ret
1335+ 91D1
1336+ 91D1 A7           Compara_cositas_L3 and a
1337+ 91D2 28 0D            jr z,1F
1338+ 91D4              ;    cp $fd
1339+ 91D4              ;    jr z,1F
1340+ 91D4              ;    cp $fe
1341+ 91D4              ;    jr z,1F
1342+ 91D4              ;    cp $ff
1343+ 91D4              ;    jr z,1F
1344+ 91D4 FE 01            cp $01
1345+ 91D6 28 09            jr z,1F
1346+ 91D8 FE 02            cp $02
1347+ 91DA 28 05            jr z,1F
1348+ 91DC FE 03            cp $03
1349+ 91DE 28 01            jr z,1F
1350+ 91E0 C0               ret nz
1351+ 91E1 04           1 inc b
1352+ 91E2 C9               ret
1353+ 91E3
1354+ 91E3 A7           Compara_cositas_H4 and a
1355+ 91E4 28 11            jr z,1F
1356+ 91E6 FE FD            cp $fd
1357+ 91E8 28 0D            jr z,1F
1358+ 91EA FE FE            cp $fe
1359+ 91EC 28 09            jr z,1F
1360+ 91EE FE FF            cp $ff
1361+ 91F0 28 05            jr z,1F
1362+ 91F2 FE 01            cp $01
1363+ 91F4 28 01            jr z,1F
1364+ 91F6              ;    cp $02
1365+ 91F6              ;    jr z,1F
1366+ 91F6              ;    cp $03
1367+ 91F6              ;    jr z,1F
1368+ 91F6 C0               ret nz
1369+ 91F7 04           1 inc b
1370+ 91F8 C9               ret
1371+ 91F9
1372+ 91F9 A7           Compara_cositas_L4 and a
1373+ 91FA 28 0D            jr z,1F
1374+ 91FC              ;    cp $fd
1375+ 91FC              ;    jr z,1F
1376+ 91FC FE FE            cp $fe
1377+ 91FE 28 09            jr z,1F
1378+ 9200 FE FF            cp $ff
1379+ 9202 28 05            jr z,1F
1380+ 9204 FE 01            cp $01
1381+ 9206 28 01            jr z,1F
1382+ 9208              ;    cp $02
1383+ 9208              ;    jr z,1F
1384+ 9208              ;    cp $03
1385+ 9208              ;    jr z,1F
1386+ 9208 C0               ret nz
1387+ 9209 04           1 inc b
1388+ 920A C9               ret
# file closed: Disparo.asm
1814  920B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 920B              ; ******************************************************************************************************************************************************************************************
   2+ 920B              ;
   3+ 920B              ; 26/06/23
   4+ 920B              ;
   5+ 920B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 920B
   7+ 920B              Draw
   8+ 920B
   9+ 920B CD F8 94     	call Prepara_draw
  10+ 920E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 920F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9210 28 05        	jr z,2F
  13+ 9212
  14+ 9212 3A 11 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9215 18 0C        	jr 1F
  16+ 9217
  17+ 9217 2A 0F 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 921A 22 FF 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 921D CD AC 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9220              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9220
  22+ 9220 CD 6C 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9223
  24+ 9223 3A 1F 88     1 ld a,(Ctrl_0)
  25+ 9226 CB 6F        	bit 5,a
  26+ 9228 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 922A
  28+ 922A CD 42 92     	call Comprueba_limite_horizontal
  29+ 922D CD D2 92     	call Comprueba_limite_vertical
  30+ 9230
  31+ 9230              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9230              ; -----------------------
  33+ 9230              ; -----------------------
  34+ 9230              ; -----------------------
  35+ 9230
  36+ 9230 CD 28 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9233 CD 5F 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9236 CD BE 94     	call Define_rutina_de_impresion
  39+ 9239
  40+ 9239 3A 1F 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 923C CB AF        	res 5,a											; _a ser de utilidad.
  42+ 923E 32 1F 88     	ld (Ctrl_0),a
  43+ 9241
  44+ 9241 C9           	ret
  45+ 9242
  46+ 9242              ; *******************************************************************************************************************************************************************************************
  47+ 9242              ;	21/01/23
  48+ 9242              ;
  49+ 9242              ; 	Comprueba_limite_horizontal.
  50+ 9242              ;
  51+ 9242              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9242              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9242              ;
  54+ 9242              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9242              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9242              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9242              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9242
  59+ 9242
  60+ 9242
  61+ 9242 3A 1F 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9245 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9247 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9249 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 924B 32 1F 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 924E 18 09            jr 6F
  67+ 9250 CB 5F        1 bit 3,a
  68+ 9252 28 0A            jr z,2F
  69+ 9254 E6 F7            and $f7
  70+ 9256 32 1F 88         ld (Ctrl_0),a
  71+ 9259 CD AC 93     6 call Inicializacion
  72+ 925C 18 5B            jr 5F
  73+ 925E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 925F
  75+ 925F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 925F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 925F
  78+ 925F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9260 2A 21 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9263 CD 17 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9266 67           	ld h,a
  82+ 9267 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9268 CD 17 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 926B 67           	ld h,a
  85+ 926C A7           	and a
  86+ 926D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 926F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9270 3A 11 88     	ld a,(Cuad_objeto)
  89+ 9273 FE 02        	cp 2
  90+ 9275 38 1E        	jr c,3F
  91+ 9277 28 1C        	jr z,3F
  92+ 9279 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 927A 28 23            jr z,7F
  94+ 927C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 927E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9280 E1           	pop hl
  97+ 9281
  98+ 9281              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9281              ; _para indicar con E="2" en caso necesario.
 100+ 9281
 101+ 9281 E5               push hl
 102+ 9282 C5               push bc
 103+ 9283 CD 17 98     	call calcula_tercio
 104+ 9286 FE 01        	cp 1
 105+ 9288 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 928A CD BA 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 928D 28 26            jr z,9F
 108+ 928F 38 24            jr c,9F
 109+ 9291 1E 00        11 ld e,0
 110+ 9293 18 22            jr 8F
 111+ 9295 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9296 28 07        	jr z, 7F
 113+ 9298 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 929A 1E 00         	ld e,0
 115+ 929C E1           	pop hl
 116+ 929D 18 04        	jr 4F
 117+ 929F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 92A1 18 15            jr 10F
 119+ 92A3
 120+ 92A3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 92A3              ; _para indicar con E="2" en caso necesario.
 122+ 92A3
 123+ 92A3 E5           4 push hl
 124+ 92A4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 92A5 CD 17 98     	call calcula_tercio
 126+ 92A8 FE 01        	cp 1
 127+ 92AA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 92AC CD BA 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 92AF 28 04            jr z,9F
 130+ 92B1 30 02            jr nc,9F
 131+ 92B3 18 02        	jr 8F
 132+ 92B5 1E 02        9 ld e,2
 133+ 92B7 C1           8 pop bc
 134+ 92B8 E1           10 pop hl
 135+ 92B9 C9           5 ret
 136+ 92BA
 137+ 92BA              ; --------------------
 138+ 92BA              ;
 139+ 92BA              ; 25/08/22
 140+ 92BA
 141+ 92BA CD 17 98     Comprueba_centro call calcula_tercio
 142+ 92BD 67               ld h,a
 143+ 92BE 08           	ex af,af
 144+ 92BF FE 02        	cp 2
 145+ 92C1 38 07        	jr c,1F
 146+ 92C3 28 05        	jr z,1F
 147+ 92C5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 92C8 18 03        	jr 2F
 149+ 92CA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 92CD 08           2 ex af,af
 151+ 92CE A7               and a
 152+ 92CF ED 42            sbc hl,bc
 153+ 92D1 C9               ret
 154+ 92D2
 155+ 92D2              ; *********************************************************************************************************************************************************************************************
 156+ 92D2              ;
 157+ 92D2              ;   16/8/22
 158+ 92D2              ;
 159+ 92D2              ;	Comprueba_limite_vertical
 160+ 92D2              ;
 161+ 92D2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92D2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92D2              ;
 164+ 92D2
 165+ 92D2 2A FF 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92D5 7D           	ld a,l
 167+ 92D6 E6 1F        	and $1F
 168+ 92D8 57           	ld d,a
 169+ 92D9 3A 23 88     	ld a,(Limite_vertical)
 170+ 92DC BA           	cp d 											; Límite - Posición.
 171+ 92DD 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92DE 3A 11 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92E1 CB 47        	bit 0,a
 174+ 92E3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92E5
 176+ 92E5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92E5
 178+ 92E5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92E6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92E8
 181+ 92E8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92E8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92E8
 184+ 92E8 3A 03 88         ld a,(Coordenada_X)
 185+ 92EB 16 0F            ld d,Centro_izquierda
 186+ 92ED A7               and a
 187+ 92EE 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92EF 28 1E            jr z,3F
 189+ 92F1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92F3              ;                                                    ; _salimos sin modificar nada.
 191+ 92F3 18 0E            jr 2F
 192+ 92F5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92F6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92F8
 195+ 92F8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92F8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92F8
 198+ 92F8 3A 03 88         ld a,(Coordenada_X)
 199+ 92FB 16 10            ld d,Centro_derecha
 200+ 92FD A7               and a
 201+ 92FE 92               sub d
 202+ 92FF 28 0E            jr z,3F
 203+ 9301 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9303              ;                                                    ; _salimos sin modificar nada.
 205+ 9303 CB 43        2 bit 0,e
 206+ 9305 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9307 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9308 CD 9C 93         call Modificaccionne
 209+ 930B C1           	pop bc
 210+ 930C CD AC 93         call Inicializacion
 211+ 930F C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9310
 213+ 9310              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9310
 215+ 9310 C5           4 push bc
 216+ 9311 01 FE 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 9314 0A           	ld a,(bc)
 218+ 9315 3D           	dec a
 219+ 9316 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9317 7D           	ld a,l
 221+ 9318 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9319 CB 47        	bit 0,a
 223+ 931B 28 03        	jr z,5F
 224+ 931D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 931E 18 2E        	jr 7F
 226+ 9320
 227+ 9320              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9320
 229+ 9320 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9321 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9322 3A 1F 88     	ld a,(Ctrl_0)
 232+ 9325 CB 4F        	bit 1,a
 233+ 9327 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9329 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 932A
 236+ 932A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 932A
 238+ 932A 1C               inc e
 239+ 932B 1D               dec e
 240+ 932C 20 07            jr nz,12F
 241+ 932E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 932F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9330 22 FF 87     	ld (Posicion_actual),hl
 244+ 9333 18 44        13 jr 9F
 245+ 9335 CB 43        12 bit 0,e
 246+ 9337 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9339              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9339 C1           	pop bc
 249+ 933A 18 D3        	jr 3B
 250+ 933C 80           14 add b
 251+ 933D 6F               ld l,a
 252+ 933E 22 FF 87     	ld (Posicion_actual),hl
 253+ 9341 CD 9C 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9344 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9346 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9348 32 1F 88         ld (Ctrl_0),a
 257+ 934B F1           	pop af
 258+ 934C 18 2B        	jr 9F
 259+ 934E
 260+ 934E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 934E
 262+ 934E F5           7 push af
 263+ 934F 3A 1F 88     	ld a,(Ctrl_0)
 264+ 9352 CB 47        	bit 0,a
 265+ 9354 20 1D        	jr nz,8F
 266+ 9356 F1           	pop af
 267+ 9357
 268+ 9357              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9357
 270+ 9357 1C           	inc e
 271+ 9358 1D               dec e
 272+ 9359 20 07            jr nz,10F
 273+ 935B 90           	sub b
 274+ 935C 6F               ld l,a
 275+ 935D 22 FF 87     	ld (Posicion_actual),hl
 276+ 9360 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9362              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9362 CB 43        10 bit 0,e
 279+ 9364 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9366              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9366 C1           	pop bc
 282+ 9367 18 A6        	jr 3B
 283+ 9369 90           16 sub b
 284+ 936A 6F               ld l,a
 285+ 936B 22 FF 87     	ld (Posicion_actual),hl
 286+ 936E CD 9C 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9371 18 06            jr 9F
 288+ 9373 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9375 32 1F 88         ld (Ctrl_0),a
 290+ 9378 F1           	pop af
 291+ 9379 C1           9 pop bc
 292+ 937A 1E 00        	ld e,0
 293+ 937C CD AC 93         call Inicializacion
 294+ 937F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9380 08           	ex af,af
 296+ 9381 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9382 18 8B            jr 3B
 298+ 9384
 299+ 9384              ; --------------------
 300+ 9384
 301+ 9384 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9386 CD 13 95     1 call PreviousScan
 303+ 9389 10 FB            djnz 1B
 304+ 938B 22 FF 87     	ld (Posicion_actual),hl
 305+ 938E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 938F C9           	ret
 307+ 9390
 308+ 9390              ; --------------------
 309+ 9390
 310+ 9390 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9392 CD 04 95     1 call NextScan
 312+ 9395 10 FB            djnz 1B
 313+ 9397 22 FF 87     	ld (Posicion_actual),hl
 314+ 939A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 939B C9           	ret
 316+ 939C
 317+ 939C              ; --------------------
 318+ 939C              ;
 319+ 939C              ;	22/01/23
 320+ 939C              ;
 321+ 939C              ;	E="1". Hemos cambiado de cuadrante.
 322+ 939C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 939C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 939C
 325+ 939C
 326+ 939C              Modificaccionne
 327+ 939C
 328+ 939C 3A 11 88     	ld a,(Cuad_objeto)
 329+ 939F FE 02        	cp 2
 330+ 93A1 CC 84 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 93A4 DC 84 93         call c,Modifica_Pos_actual
 332+ 93A7 C8           	ret z
 333+ 93A8 CD 90 93         call Modifica_Pos_actual2
 334+ 93AB C9               ret
 335+ 93AC
 336+ 93AC              ; *************************************************************************************************************************************************************************************************
 337+ 93AC              ;
 338+ 93AC              ;	13/8/22
 339+ 93AC              ;
 340+ 93AC              ;	Inicializacion
 341+ 93AC              ;
 342+ 93AC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 93AC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 93AC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 93AC              ;
 346+ 93AC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 93AC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 93AC              ;	_ desaparece/aparece.
 349+ 93AC
 350+ 93AC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 93AC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 93AC              ;
 353+ 93AC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 93AC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 93AC              ; 		   [E] ="0"
 356+ 93AC
 357+ 93AC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 93AC
 359+ 93AC CD 17 98     Inicializacion call calcula_tercio
 360+ 93AF 28 36        	jr z,primit
 361+ 93B1 E6 02        	and 2
 362+ 93B3 20 07        	jr nz,segmit
 363+ 93B5 7D           	ld a,l
 364+ 93B6 FE 7F        	cp $7f
 365+ 93B8 38 2D        	jr c,primit
 366+ 93BA 28 2B        	jr z,primit
 367+ 93BC CD 22 94     segmit call column
 368+ 93BF 38 13        	jr c,tercuad
 369+ 93C1 3E 04        cuarcuad ld a,4
 370+ 93C3 32 11 88     	ld (Cuad_objeto),a
 371+ 93C6 21 20 48     	ld hl,$4820
 372+ 93C9 22 21 88     	ld (Limite_horizontal),hl
 373+ 93CC 21 23 88     	ld hl,Limite_vertical
 374+ 93CF 36 0D        	ld (hl),$0d
 375+ 93D1 08           	ex af,af
 376+ 93D2 18 3C        	jr 1F
 377+ 93D4              tercuad
 378+ 93D4 3E 03        	ld a,3
 379+ 93D6 32 11 88     	ld (Cuad_objeto),a
 380+ 93D9 21 20 48     	ld hl,$4820
 381+ 93DC 22 21 88     	ld (Limite_horizontal),hl
 382+ 93DF 21 23 88     	ld hl,Limite_vertical
 383+ 93E2 36 12        	ld (hl),$12
 384+ 93E4 08           	ex af,af
 385+ 93E5 18 29        	jr 1F
 386+ 93E7 CD 22 94     primit call column
 387+ 93EA 38 13        	jr c, primcuad
 388+ 93EC              segcuad
 389+ 93EC 3E 02        	ld a,2
 390+ 93EE 32 11 88     	ld (Cuad_objeto),a
 391+ 93F1 21 C0 4F     	ld hl,$4fc0
 392+ 93F4 22 21 88     	ld (Limite_horizontal),hl
 393+ 93F7 21 23 88     	ld hl,Limite_vertical
 394+ 93FA 36 0D        	ld (hl),$0d
 395+ 93FC 08           	ex af,af
 396+ 93FD 18 11        	jr 1F
 397+ 93FF              primcuad
 398+ 93FF 3E 01        	ld a,1
 399+ 9401 32 11 88     	ld (Cuad_objeto),a
 400+ 9404 21 C0 4F     	ld hl,$4fc0
 401+ 9407 22 21 88     	ld (Limite_horizontal),hl
 402+ 940A 21 23 88     	ld hl,Limite_vertical
 403+ 940D 36 12        	ld (hl),$12
 404+ 940F 08           	ex af,af
 405+ 9410
 406+ 9410 C5           1 push bc
 407+ 9411 E5           	push hl
 408+ 9412 D5           	push de
 409+ 9413
 410+ 9413 2A FF 87     	ld hl,(Posicion_actual)
 411+ 9416 CD AF 9B     	call Genera_coordenadas
 412+ 9419
 413+ 9419 D1           	pop de
 414+ 941A E1           	pop hl
 415+ 941B C1           	pop bc
 416+ 941C
 417+ 941C 21 1F 88     	ld hl,Ctrl_0
 418+ 941F CB EE        	set 5,(hl)
 419+ 9421 C9           	ret
 420+ 9422
 421+ 9422              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9422
 423+ 9422              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9422              ;
 425+ 9422              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9422
 427+ 9422 7D           column ld a,l
 428+ 9423 E6 1F        	and $1f
 429+ 9425 FE 10         	cp $10
 430+ 9427 C9            	ret
 431+ 9428
 432+ 9428              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9428              ;
 434+ 9428              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9428              ;
 436+ 9428              ; 14/12/22
 437+ 9428              ;
 438+ 9428              ;	Modifica: A y BC.
 439+ 9428
 440+ 9428 3A 11 88     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 942B E6 01        	and 1
 442+ 942D 28 17        	jr z,1F
 443+ 942F
 444+ 942F              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 942F
 446+ 942F 3A 03 88     	ld a,(Coordenada_X)
 447+ 9432 47           	ld b,a
 448+ 9433 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9434 79           	ld a,c
 450+ 9435 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9436 38 08        	jr c,2F
 452+ 9438 47           	ld b,a
 453+ 9439 79           	ld a,c
 454+ 943A 90           	sub b
 455+ 943B 32 20 88     	ld (Columnas),a
 456+ 943E 18 1B        	jr 4F
 457+ 9440 79           2 ld a,c
 458+ 9441 32 20 88     	ld (Columnas),a
 459+ 9444 18 15        	jr 4F
 460+ 9446
 461+ 9446              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9446
 463+ 9446 3A 03 88     1 ld a,(Coordenada_X)
 464+ 9449 81           	add c
 465+ 944A 3D           	dec a
 466+ 944B D6 1F        	sub $1f
 467+ 944D 38 08        	jr c,3F
 468+ 944F 47           	ld b,a
 469+ 9450 79           	ld a,c
 470+ 9451 90           	sub b
 471+ 9452 32 20 88     	ld (Columnas),a
 472+ 9455 18 04        	jr 4F
 473+ 9457 79           3 ld a,c
 474+ 9458 32 20 88     	ld (Columnas),a
 475+ 945B D9           4 exx
 476+ 945C 4F           	ld c,a
 477+ 945D D9           	exx
 478+ 945E C9            ret
 479+ 945F
 480+ 945F              ; --------------------------------------------------------------------------------------------------------------------
 481+ 945F              ;
 482+ 945F              ;   19/7/23
 483+ 945F              ;
 484+ 945F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 945F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 945F              ;
 487+ 945F              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 945F              ;			HL e IY Contienen (Puntero_objeto).
 489+ 945F              ;
 490+ 945F              ;	DESTRUYE: HL,B Y A.
 491+ 945F
 492+ 945F 3A 11 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9462 FE 02        	cp 2
 494+ 9464 38 18        	jr c,1F
 495+ 9466 28 16        	jr z,1F
 496+ 9468 E6 01        	and 1
 497+ 946A 28 0D        	jr z,3F
 498+ 946C
 499+ 946C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 946C
 501+ 946C CD B2 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 946F
 503+ 946F 7D           9 ld a,l
 504+ 9470 E6 1F        	and $1f
 505+ 9472 28 2A        	jr z,7F
 506+ 9474 2B           	dec hl
 507+ 9475 10 F8        	djnz 9B
 508+ 9477 18 25        	jr 7F
 509+ 9479
 510+ 9479              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9479
 512+ 9479 2A FF 87     3 ld hl,(Posicion_actual)
 513+ 947C 18 20        	jr 7F
 514+ 947E
 515+ 947E 28 14        1 jr z,2F
 516+ 9480
 517+ 9480              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9480
 519+ 9480 CD B2 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9483
 521+ 9483 7D           4 ld a,l
 522+ 9484 E6 1F        	and $1f
 523+ 9486 28 03        	jr z,6F
 524+ 9488 2B           	dec hl
 525+ 9489 10 F8        	djnz 4B
 526+ 948B 06 0F        6 ld b,15
 527+ 948D CD 13 95     5 call PreviousScan
 528+ 9490 10 FB        	djnz 5B
 529+ 9492 18 0A        	jr 7F
 530+ 9494
 531+ 9494              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9494
 533+ 9494 CD B2 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9497 06 0F        	ld b,15
 535+ 9499 CD 13 95     8 call PreviousScan
 536+ 949C 10 FB        	djnz 8B
 537+ 949E
 538+ 949E E5           7 push hl
 539+ 949F DD E1        	pop ix
 540+ 94A1
 541+ 94A1 2A 01 88     	ld hl,(Puntero_objeto)
 542+ 94A4 E5           	push hl
 543+ 94A5 FD E1        	pop iy
 544+ 94A7
 545+ 94A7              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 94A7
 547+ 94A7 3A 1F 88     	ld a,(Ctrl_0)
 548+ 94AA CB 77        	bit 6,a
 549+ 94AC C8           	ret z
 550+ 94AD
 551+ 94AD              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 94AD              ; _ entidad / Amadeus´.
 553+ 94AD
 554+ 94AD DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 94B1
 556+ 94B1 C9           	ret
 557+ 94B2
 558+ 94B2              ; --------------------------------------------------------------------------------------------------------------------
 559+ 94B2              ;
 560+ 94B2              ;	2/1/23
 561+ 94B2              ;
 562+ 94B2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 94B2              ;
 564+ 94B2              ;	Tras esta rutina tenemos:
 565+ 94B2              ;
 566+ 94B2              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 94B2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 94B2              ;
 569+ 94B2              ;	DESTRUYE!!!!! HL,B y A.
 570+ 94B2
 571+ 94B2 2A FF 87     Operandos ld hl,(Posicion_actual)
 572+ 94B5 3A 20 88     	ld a,(Columnas)
 573+ 94B8 3D           	dec a
 574+ 94B9 20 01        	jr nz,1F
 575+ 94BB 3C           	inc a
 576+ 94BC 47           1 ld b,a
 577+ 94BD C9           	ret
 578+ 94BE
 579+ 94BE              ; --------------------------------------------------------------------------------------------------------------------
 580+ 94BE              ;
 581+ 94BE              ;	3/1/23
 582+ 94BE              ;
 583+ 94BE              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 94BE              ;
 585+ 94BE              ;	Destruye: A,B,HL y DE.
 586+ 94BE
 587+ 94BE              Define_rutina_de_impresion
 588+ 94BE
 589+ 94BE 3A FE 87     	ld a,(Columns)
 590+ 94C1 47           	ld b,a
 591+ 94C2 3A 20 88     	ld a,(Columnas)
 592+ 94C5 B8           	cp b
 593+ 94C6 20 0D        	jr nz,2f
 594+ 94C8
 595+ 94C8              ;	La entidad se imprime entera.
 596+ 94C8
 597+ 94C8 21 E7 95     	ld hl, Indice_entidades_completas
 598+ 94CB E6 01        	and 1
 599+ 94CD 28 02        	jr z,1F
 600+ 94CF
 601+ 94CF 23           	inc hl
 602+ 94D0 23           	inc hl
 603+ 94D1
 604+ 94D1 CD C6 8B     1 call Extrae_address
 605+ 94D4 C9           	ret		;	ret
 606+ 94D5
 607+ 94D5              ;	La entidad no se imprime entera en pantalla.
 608+ 94D5
 609+ 94D5 3A 11 88     2 ld a,(Cuad_objeto)
 610+ 94D8 E6 01        	and 1
 611+ 94DA 28 17        	jr z,3F
 612+ 94DC
 613+ 94DC              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94DC
 615+ 94DC 21 EB 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94DF 3A FE 87     4 ld a,(Columns)
 617+ 94E2 E6 01        	and 1
 618+ 94E4 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94E6
 620+ 94E6 23           	inc hl
 621+ 94E7 23           	inc hl
 622+ 94E8
 623+ 94E8 3A 20 88     	ld a,(Columnas)
 624+ 94EB E6 01        	and 1
 625+ 94ED 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94EF
 627+ 94EF 23           	inc hl
 628+ 94F0 23           	inc hl
 629+ 94F1
 630+ 94F1 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94F3
 632+ 94F3 21 F1 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94F6 18 E7        	jr 4B
 634+ 94F8
 635+ 94F8              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94F8              ;
 637+ 94F8              ;	Prepara_draw
 638+ 94F8              ;
 639+ 94F8              ;	Es una rutina de carga.
 640+ 94F8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94F8              ;
 642+ 94F8              ;	FUNCIONAMIENTO:
 643+ 94F8              ;
 644+ 94F8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94F8              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94F8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94F8              ;
 648+ 94F8              ;	DESTRUYE:
 649+ 94F8              ;
 650+ 94F8              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94F8
 652+ 94F8 21 FD 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94FB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94FC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94FD 4E           	ld c,(hl)
 656+ 94FE 2A FF 87     	ld hl,(Posicion_actual)
 657+ 9501 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9503 C9           	ret
 659+ 9504
 660+ 9504              ;----------------------------------------------------------------------------------------------------------------
 661+ 9504              ;
 662+ 9504              ;	5/08/22
 663+ 9504              ;
 664+ 9504              ;   NextScan.
 665+ 9504              ;
 666+ 9504              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9504              ;
 668+ 9504              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9504              ;
 670+ 9504              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9504              ;
 672+ 9504              ;       DESTRUIDOS: AF y HL !!!
 673+ 9504              ;
 674+ 9504              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9504              ;
 676+ 9504
 677+ 9504 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9505 7C               ld a,h
 679+ 9506 E6 07            and 7
 680+ 9508 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9509
 682+ 9509 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 950A C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 950C 6F               ld l,a
 685+ 950D D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 950E
 687+ 950E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 950F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9511 67               ld h,a
 690+ 9512 C9               ret
 691+ 9513
 692+ 9513              ;----------------------------------------------------------------------------------------------------------------
 693+ 9513              ;
 694+ 9513              ;	5/08/22
 695+ 9513              ;
 696+ 9513              ;   PreviousScan.
 697+ 9513              ;
 698+ 9513              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9513              ;
 700+ 9513              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9513              ;
 702+ 9513              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9513              ;
 704+ 9513              ;       DESTRUIDOS: AF y HL !!!
 705+ 9513              ;
 706+ 9513              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9513              ;
 708+ 9513
 709+ 9513 7C           PreviousScan ld a,h
 710+ 9514 25               dec h               ; Dec H.
 711+ 9515 E6 07            and 7
 712+ 9517 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9518
 714+ 9518 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9519 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 951B 6F               ld l,a
 717+ 951C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 951D
 719+ 951D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 951E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9520 67               ld h,a
 722+ 9521 C9               ret
 723+ 9522
 724+ 9522              ; -----------------------------------------------------------------------------------
 725+ 9522              ;
 726+ 9522              ;	31/7/23
 727+ 9522              ;
 728+ 9522              ;	Rutina principal de pintado de entidades.
 729+ 9522              ;	Extrae la foto del frame, (entidades).
 730+ 9522
 731+ 9522              Extrae_foto_entidades
 732+ 9522
 733+ 9522 21 01 70     	ld hl,Album_de_fotos+1
 734+ 9525 7E           	ld a,(hl)
 735+ 9526 A7           	and a
 736+ 9527 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9528
 738+ 9528              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9528
 740+ 9528 3A 4A 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 952B A7           	and a
 742+ 952C C8           	ret z
 743+ 952D
 744+ 952D              ; -----------------------------------
 745+ 952D
 746+ 952D ED 73 4F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9531 31 00 70     	ld sp,Album_de_fotos
 748+ 9534
 749+ 9534 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9536 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9537 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9538
 753+ 9538 ED 73 51 88  	ld (Stack_2),sp
 754+ 953C ED 7B 4F 88  	ld sp,(Stack)
 755+ 9540
 756+ 9540              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9540
 758+ 9540 3E CD        	ld a,$cd
 759+ 9542 32 4A 95     	ld (Imprime),a
 760+ 9545 EB           	ex de,hl
 761+ 9546 22 4B 95     	ld (Imprime+1),hl
 762+ 9549 EB           	ex de,hl
 763+ 954A
 764+ 954A              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 954A
 766+ 954A 00 00 00     Imprime db 0,0,0
 767+ 954D
 768+ 954D ED 73 4F 88  	ld (Stack),sp
 769+ 9551
 770+ 9551 3A 4A 88     	ld a,(Numero_de_malotes)
 771+ 9554 3D           	dec a
 772+ 9555 28 09        	jr z,1F
 773+ 9557 32 4A 88      	ld (Numero_de_malotes),a
 774+ 955A
 775+ 955A ED 7B 51 88  	ld sp,(Stack_2)
 776+ 955E 18 D4        	jr 2B
 777+ 9560
 778+ 9560 AF           1 xor a
 779+ 9561 32 51 88     	ld (Stack_2),a
 780+ 9564
 781+ 9564 C9           	ret
 782+ 9565
 783+ 9565              ; -----------------------------------------------------------------------------------
 784+ 9565              ;
 785+ 9565              ;	28/2/23
 786+ 9565              ;
 787+ 9565              ;	Pinta los disparos generados.
 788+ 9565
 789+ 9565              Extrae_foto_disparos
 790+ 9565
 791+ 9565 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9568 7E               ld a,(hl)
 793+ 9569 A7               and a
 794+ 956A C8               ret z
 795+ 956B
 796+ 956B 3A 5F 88     	ld a,(Numero_de_disparotes)
 797+ 956E A7           	and a
 798+ 956F C8           	ret z
 799+ 9570 ED 73 4F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9574 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9577
 802+ 9577 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9579 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 957A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 957B
 806+ 957B ED 73 51 88  	ld (Stack_2),sp
 807+ 957F ED 7B 4F 88  	ld sp,(Stack)
 808+ 9583
 809+ 9583              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9583
 811+ 9583 3E CD        	ld a,$cd
 812+ 9585 32 8D 95     	ld (Imprime2),a
 813+ 9588 EB           	ex de,hl
 814+ 9589 22 8E 95     	ld (Imprime2+1),hl
 815+ 958C EB           	ex de,hl
 816+ 958D
 817+ 958D              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 958D
 819+ 958D 00 00 00     Imprime2 db 0,0,0
 820+ 9590
 821+ 9590 3A 5F 88     	ld a,(Numero_de_disparotes)
 822+ 9593 3D           	dec a
 823+ 9594 28 09        	jr z,1F
 824+ 9596 32 5F 88      	ld (Numero_de_disparotes),a
 825+ 9599
 826+ 9599 ED 7B 51 88  	ld sp,(Stack_2)
 827+ 959D 18 D8        	jr 2B
 828+ 959F
 829+ 959F AF           1 xor a
 830+ 95A0 32 51 88     	ld (Stack_2),a
 831+ 95A3 C9           	ret
 832+ 95A4
 833+ 95A4              ; -----------------------------------------------------------------------------------
 834+ 95A4              ;
 835+ 95A4              ;	4/9/23
 836+ 95A4              ;
 837+ 95A4              ;	Rutina principal de pintado de Amadeus.
 838+ 95A4              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 95A4
 840+ 95A4 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 95A7 7E           	ld a,(hl)
 842+ 95A8 A7           	and a
 843+ 95A9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 95AA
 845+ 95AA 3A 4A 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 95AD A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 95AE C8           	ret z
 848+ 95AF
 849+ 95AF              ; -----------------------------------
 850+ 95AF
 851+ 95AF ED 73 4F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 95B3 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 95B6
 854+ 95B6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 95B8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 95B9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 95BA
 858+ 95BA ED 73 51 88  	ld (Stack_2),sp
 859+ 95BE ED 7B 4F 88  	ld sp,(Stack)
 860+ 95C2
 861+ 95C2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 95C2
 863+ 95C2 3E CD        	ld a,$cd
 864+ 95C4 32 CC 95     	ld (Imprime_Amadeus),a
 865+ 95C7 EB           	ex de,hl
 866+ 95C8 22 CD 95     	ld (Imprime_Amadeus+1),hl
 867+ 95CB EB           	ex de,hl
 868+ 95CC
 869+ 95CC              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 95CC
 871+ 95CC 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 95CF
 873+ 95CF ED 73 4F 88  	ld (Stack),sp
 874+ 95D3
 875+ 95D3 3A 4A 88     	ld a,(Numero_de_malotes)
 876+ 95D6 3D           	dec a
 877+ 95D7 28 09        	jr z,1F
 878+ 95D9 32 4A 88      	ld (Numero_de_malotes),a
 879+ 95DC
 880+ 95DC ED 7B 51 88  	ld sp,(Stack_2)
 881+ 95E0 18 D4        	jr 2B
 882+ 95E2
 883+ 95E2 AF           1 xor a
 884+ 95E3 32 51 88     	ld (Stack_2),a
 885+ 95E6
 886+ 95E6 C9           	ret
# file closed: Draw_XOR.asm
1815  95E7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95E7              ;   índices de Rutinas de impresión.
   2+ 95E7
   3+ 95E7 F7 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95E9 24 96            defw Pinta_Amadeus_3x2
   5+ 95EB
   6+ 95EB 7A 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95ED 1A 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95EF CE 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95F1
  10+ 95F1 A4 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95F3 A8 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95F5 5C 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95F7
  14+ 95F7
  15+ 95F7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95F7              ;
  17+ 95F7              ;   12/12/22
  18+ 95F7              ;
  19+ 95F7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95F7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95F7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95F7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95F7              ;
  24+ 95F7              ;   Modifica: DE y HL.
  25+ 95F7
  26+ 95F7 ED 73 4F 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95FB FD F9        	ld sp,iy
  28+ 95FD 06 10            ld b,16
  29+ 95FF D1           1 pop de
  30+ 9600 7B               ld a,e
  31+ 9601 AE               xor (hl)
  32+ 9602 77           	ld (hl),a
  33+ 9603 23           	inc hl
  34+ 9604 7A               ld a,d
  35+ 9605 AE               xor (hl)
  36+ 9606 77           	ld (hl),a
  37+ 9607 2B           	dec hl
  38+ 9608 24           	inc h
  39+ 9609 7C               ld a,h
  40+ 960A E6 07            and 7
  41+ 960C 20 0A            jr nz,2F
  42+ 960E 7D               ld a,l
  43+ 960F C6 20            add a,$20
  44+ 9611 6F               ld l,a
  45+ 9612 38 04            jr c,2F
  46+ 9614 7C               ld a,h
  47+ 9615 D6 08            sub 8
  48+ 9617 67               ld h,a
  49+ 9618 7C           2 ld a,h
  50+ 9619 FE 58            cp $58
  51+ 961B 28 02            jr z,3F
  52+ 961D 10 E0            djnz 1B
  53+ 961F ED 7B 4F 88  3 ld sp,(Stack)
  54+ 9623 C9           	ret
  55+ 9624
  56+ 9624 ED 73 4F 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9628 FD F9        	ld sp,iy
  58+ 962A 06 08            ld b,8
  59+ 962C D1           1 pop de
  60+ 962D 7B               ld a,e
  61+ 962E AE               xor (hl)
  62+ 962F 77           	ld (hl),a
  63+ 9630 23           	inc hl
  64+ 9631 7A               ld a,d
  65+ 9632 AE               xor (hl)
  66+ 9633 77           	ld (hl),a
  67+ 9634 23           	inc hl
  68+ 9635 D1           	pop de
  69+ 9636 7B               ld a,e
  70+ 9637 AE               xor (hl)
  71+ 9638 77           	ld (hl),a
  72+ 9639 2B           	dec hl
  73+ 963A 2B           	dec hl
  74+ 963B 24           	inc h
  75+ 963C 7C               ld a,h
  76+ 963D E6 07            and 7
  77+ 963F 20 0A            jr nz,2F
  78+ 9641 7D               ld a,l
  79+ 9642 C6 20            add a,$20
  80+ 9644 6F               ld l,a
  81+ 9645 38 04            jr c,2F
  82+ 9647 7C               ld a,h
  83+ 9648 D6 08            sub 8
  84+ 964A 67               ld h,a
  85+ 964B 7C           2 ld a,h
  86+ 964C FE 58            cp $58
  87+ 964E 28 25            jr z,4F
  88+ 9650 7A               ld a,d
  89+ 9651 AE               xor (hl)
  90+ 9652 77               ld (hl),a
  91+ 9653 D1           	pop de
  92+ 9654 23           	inc hl
  93+ 9655 7B               ld a,e
  94+ 9656 AE               xor (hl)
  95+ 9657 77           	ld (hl),a
  96+ 9658 23           	inc hl
  97+ 9659 7A               ld a,d
  98+ 965A AE               xor (hl)
  99+ 965B 77           	ld (hl),a
 100+ 965C 2B           	dec hl
 101+ 965D 2B           	dec hl
 102+ 965E 24           	inc h
 103+ 965F 7C               ld a,h
 104+ 9660 E6 07            and 7
 105+ 9662 20 0A            jr nz,3F
 106+ 9664 7D               ld a,l
 107+ 9665 C6 20            add a,$20
 108+ 9667 6F               ld l,a
 109+ 9668 38 04            jr c,3F
 110+ 966A 7C               ld a,h
 111+ 966B D6 08            sub 8
 112+ 966D 67               ld h,a
 113+ 966E 7C           3 ld a,h
 114+ 966F FE 58            cp $58
 115+ 9671 28 02            jr z,4F
 116+ 9673 10 B7            djnz 1B
 117+ 9675 ED 7B 4F 88  4 ld sp,(Stack)
 118+ 9679 C9           	ret
 119+ 967A
 120+ 967A              ; ---------------------------------------------------
 121+ 967A
 122+ 967A ED 73 4F 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 967E FD F9        	ld sp,iy
 124+ 9680
 125+ 9680              ; >>>
 126+ 9680
 127+ 9680 06 10            ld b,16
 128+ 9682 D1           1 pop de
 129+ 9683 7A           	ld a,d
 130+ 9684 AE           	xor (hl)
 131+ 9685 77           	ld (hl),a
 132+ 9686 24           	inc h
 133+ 9687 7C               ld a,h
 134+ 9688 E6 07            and 7
 135+ 968A 20 0C            jr nz,2F
 136+ 968C 7D               ld a,l
 137+ 968D C6 20            add a,$20
 138+ 968F 6F               ld l,a
 139+ 9690 38 06            jr c,2F
 140+ 9692 7C               ld a,h
 141+ 9693 D6 08            sub 8
 142+ 9695 67               ld h,a
 143+ 9696 18 00            jr 2F
 144+ 9698 7C           2 ld a,h
 145+ 9699 FE 58            cp $58
 146+ 969B 28 02            jr z,3F
 147+ 969D 10 E3            djnz 1B
 148+ 969F ED 7B 4F 88  3 ld sp,(Stack)
 149+ 96A3 C9           	ret
 150+ 96A4
 151+ 96A4 ED 73 4F 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96A8 FD F9        	ld sp,iy
 153+ 96AA
 154+ 96AA              ; >>>
 155+ 96AA
 156+ 96AA 06 10            ld b,16
 157+ 96AC D1           1 pop de
 158+ 96AD 7B           	ld a,e
 159+ 96AE AE           	xor (hl)
 160+ 96AF 77           	ld (hl),a
 161+ 96B0 24           	inc h
 162+ 96B1 7C               ld a,h
 163+ 96B2 E6 07            and 7
 164+ 96B4 20 0C            jr nz,2F
 165+ 96B6 7D               ld a,l
 166+ 96B7 C6 20            add a,$20
 167+ 96B9 6F               ld l,a
 168+ 96BA 38 06            jr c,2F
 169+ 96BC 7C               ld a,h
 170+ 96BD D6 08            sub 8
 171+ 96BF 67               ld h,a
 172+ 96C0 18 00            jr 2F
 173+ 96C2 7C           2 ld a,h
 174+ 96C3 FE 58            cp $58
 175+ 96C5 28 02            jr z,3F
 176+ 96C7 10 E3            djnz 1B
 177+ 96C9 ED 7B 4F 88  3 ld sp,(Stack)
 178+ 96CD C9           	ret
 179+ 96CE
 180+ 96CE              ; ---------------------------------------------------
 181+ 96CE
 182+ 96CE ED 73 4F 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96D2 FD F9        	ld sp,iy
 184+ 96D4 06 08            ld b,8
 185+ 96D6 D1           1 pop de
 186+ 96D7 7A           	ld a,d
 187+ 96D8 AE           	xor (hl)
 188+ 96D9 77           	ld (hl),a
 189+ 96DA 23           	inc hl
 190+ 96DB D1           	pop de
 191+ 96DC 7B           	ld a,e
 192+ 96DD AE           	xor (hl)
 193+ 96DE 77           	ld (hl),a
 194+ 96DF 2B           	dec hl
 195+ 96E0 24            	inc h
 196+ 96E1 7C               ld a,h
 197+ 96E2 E6 07            and 7
 198+ 96E4 20 0A            jr nz,2F
 199+ 96E6 7D               ld a,l
 200+ 96E7 C6 20            add a,$20
 201+ 96E9 6F               ld l,a
 202+ 96EA 38 04            jr c,2F
 203+ 96EC 7C               ld a,h
 204+ 96ED D6 08            sub 8
 205+ 96EF 67               ld h,a
 206+ 96F0 7C           2 ld a,h
 207+ 96F1 FE 58            cp $58
 208+ 96F3 28 20            jr z,4F
 209+ 96F5 D1               pop de
 210+ 96F6 7B           	ld a,e
 211+ 96F7 AE           	xor (hl)
 212+ 96F8 77           	ld (hl),a
 213+ 96F9 23           	inc hl
 214+ 96FA 7A           	ld a,d
 215+ 96FB AE           	xor (hl)
 216+ 96FC 77           	ld (hl),a
 217+ 96FD 2B           	dec hl
 218+ 96FE 24           	inc h
 219+ 96FF 7C               ld a,h
 220+ 9700 E6 07            and 7
 221+ 9702 20 0A            jr nz,3F
 222+ 9704 7D               ld a,l
 223+ 9705 C6 20            add a,$20
 224+ 9707 6F               ld l,a
 225+ 9708 38 04            jr c,3F
 226+ 970A 7C               ld a,h
 227+ 970B D6 08            sub 8
 228+ 970D 67               ld h,a
 229+ 970E 7C           3 ld a,h
 230+ 970F FE 58            cp $58
 231+ 9711 28 02            jr z,4F
 232+ 9713 10 C1            djnz 1B
 233+ 9715 ED 7B 4F 88  4 ld sp,(Stack)
 234+ 9719 C9           	ret
 235+ 971A
 236+ 971A ED 73 4F 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 971E FD F9        	ld sp,iy
 238+ 9720 06 08            ld b,8
 239+ 9722 D1           1 pop de
 240+ 9723 D1           	pop de
 241+ 9724 7B           	ld a,e
 242+ 9725 AE           	xor (hl)
 243+ 9726 77           	ld (hl),a
 244+ 9727 24            	inc h
 245+ 9728 7C               ld a,h
 246+ 9729 E6 07            and 7
 247+ 972B 20 0A            jr nz,2F
 248+ 972D 7D               ld a,l
 249+ 972E C6 20            add a,$20
 250+ 9730 6F               ld l,a
 251+ 9731 38 04            jr c,2F
 252+ 9733 7C               ld a,h
 253+ 9734 D6 08            sub 8
 254+ 9736 67               ld h,a
 255+ 9737 7C           2 ld a,h
 256+ 9738 FE 58            cp $58
 257+ 973A 28 1B            jr z,4F
 258+ 973C D1               pop de
 259+ 973D 7A           	ld a,d
 260+ 973E AE           	xor (hl)
 261+ 973F 77           	ld (hl),a
 262+ 9740 24           	inc h
 263+ 9741 7C               ld a,h
 264+ 9742 E6 07            and 7
 265+ 9744 20 0A            jr nz,3F
 266+ 9746 7D               ld a,l
 267+ 9747 C6 20            add a,$20
 268+ 9749 6F               ld l,a
 269+ 974A 38 04            jr c,3F
 270+ 974C 7C               ld a,h
 271+ 974D D6 08            sub 8
 272+ 974F 67               ld h,a
 273+ 9750 7C           3 ld a,h
 274+ 9751 FE 58            cp $58
 275+ 9753 28 02            jr z,4F
 276+ 9755 10 CB            djnz 1B
 277+ 9757 ED 7B 4F 88  4 ld sp,(Stack)
 278+ 975B C9           	ret
 279+ 975C
 280+ 975C ED 73 4F 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9760 FD F9        	ld sp,iy
 282+ 9762 06 08            ld b,8
 283+ 9764 D1           1 pop de
 284+ 9765 7B           	ld a,e
 285+ 9766 AE           	xor (hl)
 286+ 9767 77           	ld (hl),a
 287+ 9768 23           	inc hl
 288+ 9769 7A           	ld a,d
 289+ 976A AE           	xor (hl)
 290+ 976B 77           	ld (hl),a
 291+ 976C 2B           	dec hl
 292+ 976D 24             	inc h
 293+ 976E 7C               ld a,h
 294+ 976F E6 07            and 7
 295+ 9771 20 0A            jr nz,2F
 296+ 9773 7D               ld a,l
 297+ 9774 C6 20            add a,$20
 298+ 9776 6F               ld l,a
 299+ 9777 38 04            jr c,2F
 300+ 9779 7C               ld a,h
 301+ 977A D6 08            sub 8
 302+ 977C 67               ld h,a
 303+ 977D 7C           2 ld a,h
 304+ 977E FE 58            cp $58
 305+ 9780 28 21            jr z,4F
 306+ 9782 D1               pop de
 307+ 9783 7A           	ld a,d
 308+ 9784 AE           	xor (hl)
 309+ 9785 77           	ld (hl),a
 310+ 9786 23           	inc hl
 311+ 9787 D1               pop de
 312+ 9788 7B           	ld a,e
 313+ 9789 AE           	xor (hl)
 314+ 978A 77           	ld (hl),a
 315+ 978B 2B           	dec hl
 316+ 978C 24           	inc h
 317+ 978D 7C               ld a,h
 318+ 978E E6 07            and 7
 319+ 9790 20 0A            jr nz,3F
 320+ 9792 7D               ld a,l
 321+ 9793 C6 20            add a,$20
 322+ 9795 6F               ld l,a
 323+ 9796 38 04            jr c,3F
 324+ 9798 7C               ld a,h
 325+ 9799 D6 08            sub 8
 326+ 979B 67               ld h,a
 327+ 979C 7C           3 ld a,h
 328+ 979D FE 58            cp $58
 329+ 979F 28 02            jr z,4F
 330+ 97A1 10 C1            djnz 1B
 331+ 97A3 ED 7B 4F 88  4 ld sp,(Stack)
 332+ 97A7 C9           	ret
 333+ 97A8
 334+ 97A8 ED 73 4F 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97AC FD F9        	ld sp,iy
 336+ 97AE 06 08            ld b,8
 337+ 97B0 D1           1 pop de
 338+ 97B1 7B           	ld a,e
 339+ 97B2 AE           	xor (hl)
 340+ 97B3 77           	ld (hl),a
 341+ 97B4 24            	inc h
 342+ 97B5 7C               ld a,h
 343+ 97B6 E6 07            and 7
 344+ 97B8 20 0A            jr nz,2F
 345+ 97BA 7D               ld a,l
 346+ 97BB C6 20            add a,$20
 347+ 97BD 6F               ld l,a
 348+ 97BE 38 04            jr c,2F
 349+ 97C0 7C               ld a,h
 350+ 97C1 D6 08            sub 8
 351+ 97C3 67               ld h,a
 352+ 97C4 7C           2 ld a,h
 353+ 97C5 FE 58            cp $58
 354+ 97C7 28 1C            jr z,4F
 355+ 97C9 D1               pop de
 356+ 97CA 7A           	ld a,d
 357+ 97CB AE           	xor (hl)
 358+ 97CC 77           	ld (hl),a
 359+ 97CD 24           	inc h
 360+ 97CE 7C               ld a,h
 361+ 97CF E6 07            and 7
 362+ 97D1 20 0A            jr nz,3F
 363+ 97D3 7D               ld a,l
 364+ 97D4 C6 20            add a,$20
 365+ 97D6 6F               ld l,a
 366+ 97D7 38 04            jr c,3F
 367+ 97D9 7C               ld a,h
 368+ 97DA D6 08            sub 8
 369+ 97DC 67               ld h,a
 370+ 97DD 7C           3 ld a,h
 371+ 97DE FE 58            cp $58
 372+ 97E0 28 03            jr z,4F
 373+ 97E2 D1               pop de
 374+ 97E3 10 CB            djnz 1B
 375+ 97E5 ED 7B 4F 88  4 ld sp,(Stack)
 376+ 97E9 C9           	ret
 377+ 97EA
 378+ 97EA              ; ---------------------------------------------------
 379+ 97EA              ;
 380+ 97EA              ;   27/02/23
 381+ 97EA              ;
 382+ 97EA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97EA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97EA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97EA
 386+ 97EA ED 73 4F 88  Pinta_Disparo ld (Stack),sp
 387+ 97EE FD F9            ld sp,iy
 388+ 97F0 06 03            ld b,3
 389+ 97F2 D1           1 pop de
 390+ 97F3 7B               ld a,e
 391+ 97F4 AE               xor (hl)
 392+ 97F5 77               ld (hl),a
 393+ 97F6 23               inc hl
 394+ 97F7 7A               ld a,d
 395+ 97F8 AE               xor (hl)
 396+ 97F9 77               ld (hl),a
 397+ 97FA 2B               dec hl
 398+ 97FB
 399+ 97FB 24               inc h
 400+ 97FC 7C               ld a,h
 401+ 97FD E6 07            and 7
 402+ 97FF 20 0A            jr nz,2F
 403+ 9801 7D               ld a,l
 404+ 9802 C6 20            add a,$20
 405+ 9804 6F               ld l,a
 406+ 9805 38 04            jr c,2F
 407+ 9807 7C               ld a,h
 408+ 9808 D6 08            sub 8
 409+ 980A 67               ld h,a
 410+ 980B 7C           2 ld a,h
 411+ 980C FE 58            cp $58
 412+ 980E 28 02            jr z,3F
 413+ 9810
 414+ 9810 10 E0            djnz 1B
 415+ 9812 ED 7B 4F 88  3 ld sp,(Stack)
 416+ 9816 C9               ret
 417+ 9817
# file closed: Rutinas_de_impresion_sprites.asm
1816  9817              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9817              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9817              ;
   3+ 9817              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9817              ;
   5+ 9817              ; *****************************************************************************************************************************************************************************************
   6+ 9817              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9817
   8+ 9817 7C           calcula_tercio ld a,h
   9+ 9818 E6 18        	and $18
  10+ 981A CB 2F        	sra a
  11+ 981C CB 2F        	sra a
  12+ 981E CB 2F        	sra a
  13+ 9820 C9           	ret
  14+ 9821
# file closed: calcula_tercio.asm
1817  9821              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9821              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9821              ;
   3+ 9821              ;
   4+ 9821              ;	CLS.
   5+ 9821              ;
   6+ 9821              ;	Limpia la pantalla y define sus atributos.
   7+ 9821              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9821              ;
   9+ 9821              ;	COLORES: 0 ..... NEGRO
  10+ 9821              ;    		 1 ..... AZUL
  11+ 9821              ; 			 2 ..... ROJO
  12+ 9821              ;			 3 ..... MAGENTA
  13+ 9821              ; 			 4 ..... VERDE
  14+ 9821              ; 			 5 ..... CIAN
  15+ 9821              ;			 6 ..... AMARILLO
  16+ 9821              ; 			 7 ..... BLANCO
  17+ 9821              ;
  18+ 9821              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9821              ;
  20+ 9821              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9821
  22+ 9821
  23+ 9821 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9824 11 01 40     	LD DE,$4001
  25+ 9827 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 982A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 982C ED B0        	LDIR
  28+ 982E 01 FF 02     	LD BC,767
  29+ 9831 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9832 ED B0        	LDIR
  31+ 9834 C9           	ret
  32+ 9835
# file closed: Cls.asm
1818  9835              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9835
   2+ 9835              ; ******************************************************************************************************************************************************************************************
   3+ 9835              ;
   4+ 9835              ;   20/05/23
   5+ 9835              ;
   6+ 9835              ;	Recompone_posicion_inicio
   7+ 9835              ;
   8+ 9835              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9835              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9835              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9835              ;	_ a una u otra rutina.
  12+ 9835
  13+ 9835              Recompone_posicion_inicio
  14+ 9835
  15+ 9835 2A 0F 88     	ld hl,(Posicion_inicio)
  16+ 9838 7D           	ld a,l
  17+ 9839 E6 1F        	and $1f
  18+ 983B 28 16        	jr z,1F
  19+ 983D
  20+ 983D FE 1F        	cp $1f
  21+ 983F 28 0D        	jr z,3F
  22+ 9841
  23+ 9841 21 24 88     	ld hl,Ctrl_2
  24+ 9844 CB C6        	set 0,(hl)
  25+ 9846 2A 01 88     	ld hl,(Puntero_objeto)
  26+ 9849 22 3F 88     	ld (Repone_puntero_objeto),hl
  27+ 984C 18 08        	jr 2F
  28+ 984E
  29+ 984E CD FC 99     3 call Mov_left
  30+ 9851 18 03        	jr 2F
  31+ 9853
  32+ 9853 CD D9 98     1 call Mov_right
  33+ 9856 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9859 22 01 88     	ld (Puntero_objeto),hl
  35+ 985C C9           	ret
  36+ 985D
  37+ 985D              ; ******************************************************************************************************************************************************************************************
  38+ 985D              ;
  39+ 985D              ;   27/05/23
  40+ 985D              ;
  41+ 985D              ;	Mov_down
  42+ 985D              ;
  43+ 985D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 985D              ;
  45+ 985D              ;
  46+ 985D              Mov_down
  47+ 985D
  48+ 985D CD C7 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9860              ;																	; _ repone (Puntero_objeto).
  50+ 9860 21 1F 88     	ld hl,Ctrl_0
  51+ 9863 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9865              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9865              ; 																	; _ en el caso de que no lo haya.
  54+ 9865 3A 29 88     	ld a,(Vel_down)
  55+ 9868 47           	ld b,a
  56+ 9869 2A FF 87         ld hl,(Posicion_actual)
  57+ 986C CD 17 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 986F E6 02        	and 2
  59+ 9871 28 17        	jr z,1F
  60+ 9873
  61+ 9873              ; Nos encontramos en el último tercio de pantalla.
  62+ 9873              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9873
  64+ 9873 7C           	ld a,h
  65+ 9874 FE 57        	cp $57
  66+ 9876 20 12        	jr nz,1F
  67+ 9878
  68+ 9878 7D           	ld a,l
  69+ 9879 C6 20        	add $20
  70+ 987B 30 0D        	jr nc,1F
  71+ 987D
  72+ 987D              ; ------------------------------
  73+ 987D              ;
  74+ 987D              ;	12/01/24
  75+ 987D
  76+ 987D              ;	call Reaparece_arriba
  77+ 987D CD 89 9B     	call Reinicio
  78+ 9880
  79+ 9880              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9880
  81+ 9880 3A 5D 88     	ld a,(Ctrl_3)
  82+ 9883 CB CF        	set 1,a
  83+ 9885 32 5D 88     	ld (Ctrl_3),a
  84+ 9888
  85+ 9888 18 08        	jr 3F
  86+ 988A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 988A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 988A              ; ------------------------------
  89+ 988A
  90+ 988A CD 04 95     1 call NextScan
  91+ 988D 22 FF 87     	ld (Posicion_actual),hl
  92+ 9890 10 DA            djnz 2B
  93+ 9892 CD AF 9B     3 call Genera_coordenadas
  94+ 9895 C9           	ret
  95+ 9896
  96+ 9896              ; ******************************************************************************************************************************************************************************************
  97+ 9896              ;
  98+ 9896              ;   27/05/23
  99+ 9896              ;
 100+ 9896              ;	Mov_up
 101+ 9896              ;
 102+ 9896              ; 	Mueve el Sprite hacia arriba.
 103+ 9896              ;
 104+ 9896              ;
 105+ 9896              Mov_up
 106+ 9896
 107+ 9896 CD C7 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9899              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9899 21 1F 88     	ld hl,Ctrl_0
 110+ 989C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 989E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 989E              ; 																		; _ en el caso de que no lo haya.
 113+ 989E 3A 28 88     	ld a,(Vel_up)
 114+ 98A1 47           	ld b,a
 115+ 98A2 2A FF 87     	ld hl,(Posicion_actual)
 116+ 98A5 CD 17 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 98A8 A7           	and a
 118+ 98A9 20 10        	jr nz,1F
 119+ 98AB
 120+ 98AB              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 98AB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 98AB
 123+ 98AB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 98AC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 98AE 20 0B            jr nz,1F
 126+ 98B0 7D               ld a,l
 127+ 98B1 D6 20            sub $20
 128+ 98B3 30 06            jr nc,1F
 129+ 98B5 25               dec h
 130+ 98B6
 131+ 98B6              ; -----------------------------
 132+ 98B6 CD 6A 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 98B9              ;	call Reinicio
 134+ 98B9              ; -----------------------------
 135+ 98B9
 136+ 98B9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 98BB CD 13 95     1 call PreviousScan
 138+ 98BE 22 FF 87     	ld (Posicion_actual),hl
 139+ 98C1 10 E2            djnz 3B
 140+ 98C3 CD AF 9B     2 call Genera_coordenadas
 141+ 98C6 C9           	ret
 142+ 98C7
 143+ 98C7              ; -----------------------------
 144+ 98C7              ;
 145+ 98C7              ;	27/5/23
 146+ 98C7              ;
 147+ 98C7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 98C7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 98C7              ;
 150+ 98C7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 98C7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 98C7              ;
 153+ 98C7              ;	Modifica: A y (Puntero_objeto).
 154+ 98C7
 155+ 98C7 3A 24 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 98CA CB 47        	bit 0,a
 157+ 98CC C8           	ret z
 158+ 98CD CB 87        	res 0,a
 159+ 98CF 32 24 88     	ld (Ctrl_2),a
 160+ 98D2 2A 3F 88     	ld hl,(Repone_puntero_objeto)
 161+ 98D5 22 01 88     	ld (Puntero_objeto),hl
 162+ 98D8 C9           	ret
 163+ 98D9
 164+ 98D9              ; ******************************************************************************************************************************************************************************************
 165+ 98D9              ;
 166+ 98D9              ;	19/10/22
 167+ 98D9              ;
 168+ 98D9              ;	Mov_right.
 169+ 98D9              ;
 170+ 98D9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98D9              ;
 172+ 98D9
 173+ 98D9 3A 1F 88     Mov_right ld a,(Ctrl_0)
 174+ 98DC CB 77        	bit 6,a
 175+ 98DE 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98E0
 177+ 98E0 CD 18 9B     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98E3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98E4
 180+ 98E4 21 1F 88     	ld hl,Ctrl_0
 181+ 98E7 CB E6        	set 4,(hl)
 182+ 98E9 18 52        	jr 8F
 183+ 98EB
 184+ 98EB 21 1F 88     10 ld hl,Ctrl_0
 185+ 98EE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98F0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98F0              ; 																	; _ en el caso de que no lo haya.
 188+ 98F0 3A 03 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98F3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98F5 20 46        	jr nz,8F
 191+ 98F7
 192+ 98F7 3A 05 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98FA A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98FB 28 40        	jr z,8F
 195+ 98FD
 196+ 98FD              ; ---------- ---------- ----------
 197+ 98FD              ;
 198+ 98FD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98FD
 200+ 98FD 3A 27 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9900 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9902 28 11        	jr z,1F
 203+ 9904 38 06        	jr c,6F
 204+ 9906 FE 04        	cp 4
 205+ 9908 28 14        	jr z,7F
 206+ 990A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 990C
 208+ 990C              ; ---------- ---------- ----------
 209+ 990C              ;
 210+ 990C              ; Perfiles de velocidad
 211+ 990C              ;
 212+ 990C
 213+ 990C 3A 05 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 990F FE FE        	cp $fe
 215+ 9911 20 2A        	jr nz,8F
 216+ 9913 18 10        	jr 3F
 217+ 9915 3A 05 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9918 FE FD        	cp $fd
 219+ 991A 20 21        	jr nz,8F
 220+ 991C 18 07        	jr 3F
 221+ 991E 3A 05 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9921 FE FB        	cp $fb
 223+ 9923 20 18        	jr nz,8F
 224+ 9925
 225+ 9925              ; ---------- ---------- ----------
 226+ 9925
 227+ 9925              3
 228+ 9925 CD 58 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9928              ;	call Reinicio
 230+ 9928
 231+ 9928              ; ---------- ---------- ----------
 232+ 9928              ;
 233+ 9928              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9928
 235+ 9928 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 992A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 992B CD 44 99     	call DESPLZ_DER
 238+ 992E C1           	pop bc
 239+ 992F 10 F9        	djnz 5B
 240+ 9931 2A FF 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9934 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9935 22 FF 87     	ld (Posicion_actual),hl
 243+ 9938 CD AF 9B     	call Genera_coordenadas
 244+ 993B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 993D
 246+ 993D              ; ---------- ---------- ----------
 247+ 993D
 248+ 993D 2A FF 87     8 ld hl,(Posicion_actual)
 249+ 9940 CD 44 99     	call DESPLZ_DER
 250+ 9943 C9           2 ret
 251+ 9944
 252+ 9944              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9944              ;
 254+ 9944              ;	22/9/22
 255+ 9944              ;
 256+ 9944
 257+ 9944 CD 53 99     DESPLZ_DER call Desplaza_derecha
 258+ 9947 CD 9F 99         call modifica_parametros_1er_DESPLZ_2
 259+ 994A CD C8 99         call Ciclo_completo
 260+ 994D 21 1F 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9950 CB FE        	set 7,(hl)
 262+ 9952 C9           	ret
 263+ 9953
 264+ 9953              ; ******************************************************************************************************************************************************************************************
 265+ 9953              ;	15/02/23
 266+ 9953              ;
 267+ 9953
 268+ 9953 3A 27 88     Desplaza_derecha ld a,(Vel_right)
 269+ 9956 47           	ld b,a
 270+ 9957 2A 0B 88     	ld hl,(Puntero_DESPLZ_der)
 271+ 995A 23           1 inc hl
 272+ 995B 23           	inc hl
 273+ 995C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 995E 22 0B 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9961 CD C6 8B     	call Extrae_address
 276+ 9964 22 01 88     	ld (Puntero_objeto),hl
 277+ 9967
 278+ 9967              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9967
 280+ 9967              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9967              ; Cuántos movimientos hemos hecho ??
 282+ 9967              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9967
 284+ 9967 2A 07 88     7 ld hl,(Indice_Sprite_der)
 285+ 996A EB           	ex de,hl
 286+ 996B A7           	and a
 287+ 996C ED 52        	sbc hl,de
 288+ 996E CB 3D        	srl l
 289+ 9970 3E 08        6 ld a,8
 290+ 9972 95           	sub l
 291+ 9973 30 1E        	jr nc,3F
 292+ 9975
 293+ 9975              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9975              ; B="0".
 295+ 9975
 296+ 9975 04           4 inc b
 297+ 9976 3C           	inc a
 298+ 9977 20 FC        	jr nz,4B
 299+ 9979 78           	ld a,b
 300+ 997A 08           	ex af,af
 301+ 997B 2A 07 88     	ld hl,(Indice_Sprite_der)
 302+ 997E 23           5 inc hl
 303+ 997F 23           	inc hl
 304+ 9980 10 FC        	djnz 5B
 305+ 9982 22 0B 88     	ld (Puntero_DESPLZ_der),hl
 306+ 9985 CD C6 8B     	call Extrae_address
 307+ 9988 22 01 88     	ld (Puntero_objeto),hl
 308+ 998B
 309+ 998B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 998B              ; _(Posicion_actual).
 311+ 998B
 312+ 998B 21 FF 87     	ld hl,Posicion_actual
 313+ 998E 34           	inc (hl)
 314+ 998F 08               ex af,af
 315+ 9990 6F           	ld l,a
 316+ 9991 18 DD        	jr 6B
 317+ 9993
 318+ 9993              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9993
 320+ 9993 47           3 ld b,a
 321+ 9994 2A 09 88     	ld hl,(Indice_Sprite_izq)
 322+ 9997 23           2 inc hl
 323+ 9998 23           	inc hl
 324+ 9999 10 FC        	djnz 2B
 325+ 999B 22 0D 88     	ld (Puntero_DESPLZ_izq),hl
 326+ 999E C9           8 ret
 327+ 999F
 328+ 999F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 999F              ;
 330+ 999F              ;	24/7/22
 331+ 999F              ;
 332+ 999F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 999F              ;
 334+ 999F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 999F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 999F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 999F
 338+ 999F 3A 05 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 99A2 A7           	and a
 340+ 99A3 20 1F        	jr nz,1F
 341+ 99A5 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 99A7 32 05 88         ld (CTRL_DESPLZ),a
 343+ 99AA
 344+ 99AA 21 FE 87     	ld hl,Columns
 345+ 99AD 34           	inc (hl)
 346+ 99AE 3A 11 88     	ld a,(Cuad_objeto)
 347+ 99B1 E6 01        	and 1
 348+ 99B3 28 0F        	jr z,1F
 349+ 99B5 2A FF 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 99B8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 99B9 22 FF 87     	ld (Posicion_actual),hl
 352+ 99BC CD AF 9B     	call Genera_coordenadas
 353+ 99BF CD 24 9B     	call Inc_CTRL_DESPLZ
 354+ 99C2 18 03        	jr 2F
 355+ 99C4 CD 24 9B     1 call Inc_CTRL_DESPLZ
 356+ 99C7 C9           2 ret
 357+ 99C8
 358+ 99C8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 99C8              ;
 360+ 99C8              ;	24/7/22
 361+ 99C8              ;
 362+ 99C8              ;	Ciclo_completo.
 363+ 99C8              ;
 364+ 99C8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 99C8              ;
 366+ 99C8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 99C8              ; 	Decrementamos (Columns).
 368+ 99C8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 99C8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 99C8
 371+ 99C8
 372+ 99C8 3A 05 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 99CB FE FF        	cp $ff
 374+ 99CD 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 99CF E6 F0        	and $f0
 376+ 99D1 20 28        	jr nz,3F
 377+ 99D3
 378+ 99D3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99D3
 380+ 99D3 3A 05 88     	ld a,(CTRL_DESPLZ)
 381+ 99D6 47           	ld b,a
 382+ 99D7 3E F8        	ld a,$f8
 383+ 99D9 80           	add b
 384+ 99DA 32 05 88     	ld (CTRL_DESPLZ),a
 385+ 99DD 18 1C        	jr 3F
 386+ 99DF 21 FE 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99E2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99E3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99E4 32 05 88     	ld (CTRL_DESPLZ),a
 390+ 99E7 3A 11 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99EA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99EC 20 0A        	jr nz,2F
 393+ 99EE 2A FF 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99F1 23           	inc hl
 395+ 99F2 22 FF 87     	ld (Posicion_actual),hl
 396+ 99F5 CD AF 9B     	call Genera_coordenadas
 397+ 99F8
 398+ 99F8              ; Inicia el puntero de Sprite.
 399+ 99F8
 400+ 99F8 CD DB 8B     2 call Inicia_puntero_objeto_der
 401+ 99FB C9           3 ret
 402+ 99FC
 403+ 99FC              ; ******************************************************************************************************************************************************************************************
 404+ 99FC              ;
 405+ 99FC              ;	15/02/23
 406+ 99FC              ;
 407+ 99FC              ;	Mov_left.
 408+ 99FC              ;
 409+ 99FC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99FC              ;
 411+ 99FC              Mov_left
 412+ 99FC
 413+ 99FC 21 1F 88     	ld hl,Ctrl_0
 414+ 99FF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9A01              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9A01              ; 																	; _ en el caso de que no lo haya.
 417+ 9A01 3A 1F 88     	ld a,(Ctrl_0)
 418+ 9A04 CB 77        	bit 6,a
 419+ 9A06 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9A08
 421+ 9A08 CD 1E 9B     	call Stop_Amadeus_left
 422+ 9A0B C8           	ret z
 423+ 9A0C 20 4A        	jr nz,8F
 424+ 9A0E
 425+ 9A0E 3A 03 88     11 ld a,(Coordenada_X)
 426+ 9A11 A7           	and a
 427+ 9A12 20 44        	jr nz,8F
 428+ 9A14
 429+ 9A14 3A 05 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9A17 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9A18 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9A1A
 433+ 9A1A              ; ---------- ---------- ----------
 434+ 9A1A
 435+ 9A1A 3A 26 88     	ld a,(Vel_left)
 436+ 9A1D FE 02        	cp 2
 437+ 9A1F 28 0F        	jr z,1F
 438+ 9A21 38 04        	jr c,6F
 439+ 9A23 FE 04        	cp 4
 440+ 9A25 28 12        	jr z,7F
 441+ 9A27
 442+ 9A27              ; ---------- ---------- ----------
 443+ 9A27
 444+ 9A27 3A 05 88     6 ld a,(CTRL_DESPLZ)
 445+ 9A2A FE F8        	cp $f8
 446+ 9A2C 20 2A        	jr nz,8F
 447+ 9A2E 18 10        	jr 4F
 448+ 9A30 3A 05 88     1 ld a,(CTRL_DESPLZ)
 449+ 9A33 FE F9        	cp $f9
 450+ 9A35 20 21        	jr nz,8F
 451+ 9A37 18 07        	jr 4F
 452+ 9A39 3A 05 88     7 ld a,(CTRL_DESPLZ)
 453+ 9A3C FE FB        	cp $fb
 454+ 9A3E 20 18        	jr nz,8F
 455+ 9A40
 456+ 9A40              ; ---------- ---------- ----------
 457+ 9A40
 458+ 9A40              4
 459+ 9A40 CD 46 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A43              ;	call Reinicio
 461+ 9A43
 462+ 9A43              ; ---------- ---------- ----------
 463+ 9A43
 464+ 9A43 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A45 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A46
 467+ 9A46              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A46              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A46
 470+ 9A46 CD 5F 9A     	call DESPLZ_IZQ
 471+ 9A49 C1           	pop bc
 472+ 9A4A 10 F9        	djnz 5B
 473+ 9A4C 2A FF 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A4F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A50 22 FF 87     	ld (Posicion_actual),hl
 476+ 9A53 CD AF 9B     	call Genera_coordenadas
 477+ 9A56 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A58
 479+ 9A58              ; ---------- ---------- ----------
 480+ 9A58
 481+ 9A58              ; Movemos, no hay recolocación.
 482+ 9A58
 483+ 9A58 2A FF 87     8 ld hl,(Posicion_actual)
 484+ 9A5B CD 5F 9A     	call DESPLZ_IZQ
 485+ 9A5E C9           2 ret
 486+ 9A5F
 487+ 9A5F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A5F              ;
 489+ 9A5F              ;	22/9/22
 490+ 9A5F
 491+ 9A5F              DESPLZ_IZQ
 492+ 9A5F
 493+ 9A5F CD 6E 9A     	call Desplaza_izquierda
 494+ 9A62 CD BA 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A65 CD E2 9A     	call Ciclo_completo_2
 496+ 9A68 21 1F 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A6B CB BE        	res 7,(hl)
 498+ 9A6D C9           	ret
 499+ 9A6E
 500+ 9A6E              Desplaza_izquierda
 501+ 9A6E
 502+ 9A6E 3A 26 88     	ld a,(Vel_left)
 503+ 9A71 47           	ld b,a
 504+ 9A72 2A 0D 88     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A75 23           1 inc hl
 506+ 9A76 23           	inc hl
 507+ 9A77 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A79 22 0D 88     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A7C CD C6 8B     	call Extrae_address
 510+ 9A7F 22 01 88     	ld (Puntero_objeto),hl
 511+ 9A82
 512+ 9A82              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A82
 514+ 9A82              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A82              ; Cuántos movimientos hemos hecho ??
 516+ 9A82              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A82
 518+ 9A82 2A 09 88     7 ld hl,(Indice_Sprite_izq)
 519+ 9A85 EB           	ex de,hl
 520+ 9A86 A7           	and a
 521+ 9A87 ED 52        	sbc hl,de
 522+ 9A89 CB 3D        	srl l
 523+ 9A8B 3E 08        6 ld a,8
 524+ 9A8D 95           	sub l
 525+ 9A8E 30 1E        	jr nc,3F
 526+ 9A90
 527+ 9A90              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A90              ; B="0".
 529+ 9A90
 530+ 9A90 04           4 inc b
 531+ 9A91 3C           	inc a
 532+ 9A92 20 FC        	jr nz,4B
 533+ 9A94 78           	ld a,b
 534+ 9A95 08           	ex af,af
 535+ 9A96 2A 09 88     	ld hl,(Indice_Sprite_izq)
 536+ 9A99 23           5 inc hl
 537+ 9A9A 23           	inc hl
 538+ 9A9B 10 FC        	djnz 5B
 539+ 9A9D 22 0D 88     	ld (Puntero_DESPLZ_izq),hl
 540+ 9AA0 CD C6 8B     	call Extrae_address
 541+ 9AA3 22 01 88     	ld (Puntero_objeto),hl
 542+ 9AA6
 543+ 9AA6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9AA6              ; _(Posicion_actual).
 545+ 9AA6
 546+ 9AA6 21 FF 87     	ld hl,Posicion_actual
 547+ 9AA9 35           	dec (hl)
 548+ 9AAA 08           	ex af,af
 549+ 9AAB 6F           	ld l,a
 550+ 9AAC 18 DD        	jr 6B
 551+ 9AAE
 552+ 9AAE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9AAE
 554+ 9AAE 47           3 ld b,a
 555+ 9AAF 2A 07 88     	ld hl,(Indice_Sprite_der)
 556+ 9AB2 23           2 inc hl
 557+ 9AB3 23           	inc hl
 558+ 9AB4 10 FC        	djnz 2B
 559+ 9AB6 22 0B 88     	ld (Puntero_DESPLZ_der),hl
 560+ 9AB9 C9           8 ret
 561+ 9ABA
 562+ 9ABA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9ABA              ;
 564+ 9ABA              ;	modifica_parametros_1er_DESPLZ
 565+ 9ABA              ;
 566+ 9ABA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9ABA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9ABA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9ABA
 570+ 9ABA 3A 05 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9ABD A7           	and a
 572+ 9ABE 20 1E        	jr nz,1F
 573+ 9AC0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9AC1 32 05 88         ld (CTRL_DESPLZ),a
 575+ 9AC4 21 FE 87     	ld hl,Columns
 576+ 9AC7 34           	inc (hl)
 577+ 9AC8 3A 11 88     	ld a,(Cuad_objeto)
 578+ 9ACB E6 01        	and 1
 579+ 9ACD 20 0F        	jr nz,1F
 580+ 9ACF 2A FF 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9AD2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9AD3 22 FF 87     	ld (Posicion_actual),hl
 583+ 9AD6 CD AF 9B     	call Genera_coordenadas
 584+ 9AD9 CD 35 9B     	call Dec_CTRL_DESPLZ
 585+ 9ADC 18 03        	jr 2F
 586+ 9ADE CD 35 9B     1 call Dec_CTRL_DESPLZ
 587+ 9AE1 C9           2 ret
 588+ 9AE2
 589+ 9AE2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9AE2
 591+ 9AE2 3A 05 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AE5 FE F7        	cp $f7
 593+ 9AE7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9AE9 30 2C        	jr nc,3F
 595+ 9AEB
 596+ 9AEB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9AEB
 598+ 9AEB 06 00        	ld b,0
 599+ 9AED 04           4 inc b
 600+ 9AEE 3C           	inc a
 601+ 9AEF FE F7        	cp $f7
 602+ 9AF1 20 FA        	jr nz,4B
 603+ 9AF3 3E FF        	ld a,$ff
 604+ 9AF5 90           	sub b
 605+ 9AF6 32 05 88     	ld (CTRL_DESPLZ),a
 606+ 9AF9 18 1C        	jr 3F
 607+ 9AFB
 608+ 9AFB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9AFB
 610+ 9AFB 21 FE 87     1 ld hl,Columns
 611+ 9AFE 35           	dec (hl)
 612+ 9AFF AF           	xor a
 613+ 9B00 32 05 88     	ld (CTRL_DESPLZ),a
 614+ 9B03 3A 11 88     	ld a,(Cuad_objeto)
 615+ 9B06 E6 01        	and 1
 616+ 9B08 28 0A        	jr z,2F
 617+ 9B0A 2A FF 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9B0D 2B           	dec hl
 619+ 9B0E 22 FF 87     	ld (Posicion_actual),hl
 620+ 9B11 CD AF 9B     	call Genera_coordenadas
 621+ 9B14
 622+ 9B14              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9B14
 624+ 9B14 CD EE 8B     2 call Inicia_puntero_objeto_izq
 625+ 9B17 C9           3 ret
 626+ 9B18
 627+ 9B18              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9B18              ;
 629+ 9B18              ;	19/10/22
 630+ 9B18              ;
 631+ 9B18              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9B18              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9B18
 634+ 9B18 3A 03 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9B1B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9B1D C9           	ret
 637+ 9B1E
 638+ 9B1E              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9B1E              ;
 640+ 9B1E              ;	19/10/22
 641+ 9B1E              ;
 642+ 9B1E              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9B1E              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9B1E
 645+ 9B1E 3A 03 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9B21 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9B23 C9           	ret
 648+ 9B24
 649+ 9B24              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9B24              ;
 651+ 9B24              ;	24/7/22
 652+ 9B24              ;
 653+ 9B24              ;	Inc_CTRL_DESPLZ
 654+ 9B24              ;
 655+ 9B24              ;
 656+ 9B24              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9B24
 658+ 9B24 21 05 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9B27 3A 27 88     	ld a,(Vel_right)
 660+ 9B2A A7           	and a
 661+ 9B2B 28 06        	jr z,1F
 662+ 9B2D 47           	ld b,a
 663+ 9B2E 34           3 inc (hl)
 664+ 9B2F 10 FD        	djnz 3B
 665+ 9B31 18 01        	jr 2F
 666+ 9B33 34           1 inc (hl)
 667+ 9B34 C9           2 ret
 668+ 9B35
 669+ 9B35              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B35              ;
 671+ 9B35              ;	5/2/23
 672+ 9B35              ;
 673+ 9B35              ;	Dec_CTRL_DESPLZ
 674+ 9B35              ;
 675+ 9B35              ;
 676+ 9B35              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B35
 678+ 9B35 21 05 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B38 3A 26 88     	ld a,(Vel_left)
 680+ 9B3B A7           	and a
 681+ 9B3C 28 06        	jr z,1F
 682+ 9B3E 47           	ld b,a
 683+ 9B3F 35           3 dec (hl)
 684+ 9B40 10 FD        	djnz 3B
 685+ 9B42 18 01        	jr 2F
 686+ 9B44 35           1 dec (hl)
 687+ 9B45 C9           2 ret
 688+ 9B46
 689+ 9B46              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B46
 691+ 9B46 2A FF 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B49 01 1F 00     	ld bc,31
 693+ 9B4C A7           	and a
 694+ 9B4D ED 4A        	adc hl,bc
 695+ 9B4F 22 FF 87     	ld (Posicion_actual),hl
 696+ 9B52 21 1F 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9B55 CB C6        	set 0,(hl)
 698+ 9B57 C9           	ret
 699+ 9B58
 700+ 9B58              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B58
 702+ 9B58 2A FF 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B5B 01 1F 00     	ld bc,31
 704+ 9B5E A7           	and a
 705+ 9B5F ED 42        	sbc hl,bc
 706+ 9B61 22 FF 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B64 21 1F 88     	ld hl,Ctrl_0
 708+ 9B67 CB CE        	set 1,(hl)
 709+ 9B69 C9           	ret
 710+ 9B6A
 711+ 9B6A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B6A
 713+ 9B6A 24           Reaparece_abajo inc h
 714+ 9B6B 01 E0 17     	ld bc,$17e0
 715+ 9B6E A7           	and a
 716+ 9B6F ED 4A        	adc hl,bc
 717+ 9B71 22 FF 87     	ld (Posicion_actual),hl
 718+ 9B74 21 1F 88     	ld hl,Ctrl_0
 719+ 9B77 CB D6        	set 2,(hl)
 720+ 9B79 C9           	ret
 721+ 9B7A
 722+ 9B7A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B7A
 724+ 9B7A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B7D A7           	and a
 726+ 9B7E ED 42        	sbc hl,bc
 727+ 9B80 22 FF 87     	ld (Posicion_actual),hl
 728+ 9B83 21 1F 88     	ld hl,Ctrl_0
 729+ 9B86 CB DE        	set 3,(hl)
 730+ 9B88 C9           	ret
 731+ 9B89
 732+ 9B89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B89              ;
 734+ 9B89              ;	15/07/23
 735+ 9B89
 736+ 9B89              Reinicio
 737+ 9B89
 738+ 9B89              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B89
 740+ 9B89 AF           	xor a
 741+ 9B8A 21 36 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9B8D CD AB 9B     	call Limpia_contenido_hl
 743+ 9B90
 744+ 9B90 21 FF 87     	ld hl,Posicion_actual
 745+ 9B93 CD AB 9B     	call Limpia_contenido_hl
 746+ 9B96
 747+ 9B96 CD 67 86     	call Inicializa_Puntero_indice_mov
 748+ 9B99 CD 6C 9E     	call Inicia_Puntero_mov
 749+ 9B9C
 750+ 9B9C 21 38 88     	ld hl,Incrementa_puntero
 751+ 9B9F 06 05        	ld b,5
 752+ 9BA1 77           1 ld (hl),a
 753+ 9BA2 23           	inc hl
 754+ 9BA3 10 FC        	djnz 1B
 755+ 9BA5
 756+ 9BA5 21 24 88     	ld hl,Ctrl_2
 757+ 9BA8 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9BAA
 759+ 9BAA C9           	ret
 760+ 9BAB
 761+ 9BAB 77           Limpia_contenido_hl	ld (hl),a
 762+ 9BAC 23           	inc hl
 763+ 9BAD 77           	ld (hl),a
 764+ 9BAE C9           	ret
 765+ 9BAF
 766+ 9BAF
# file closed: Direcciones.asm
1819  9BAF              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BAF              ; ------------------------------------------------------------------------
   2+ 9BAF              ;
   3+ 9BAF              ;	22/1/24
   4+ 9BAF              ;
   5+ 9BAF              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BAF              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BAF              ;
   8+ 9BAF              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BAF              ;
  10+ 9BAF              ;	Modifica: A,BC y DE.
  11+ 9BAF
  12+ 9BAF 7D           Genera_coordenadas ld a,l
  13+ 9BB0 E6 1F        	and $1f
  14+ 9BB2 32 03 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9BB5
  16+ 9BB5 3E 39        	ld a,$39											; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9BB7 BC           	cp h
  18+ 9BB8 20 05        	jr nz,4F
  19+ 9BBA
  20+ 9BBA AF           	xor a
  21+ 9BBB 32 04 88     	ld (Coordenada_y),a
  22+ 9BBE C9           	ret
  23+ 9BBF
  24+ 9BBF CD 17 98     4 call calcula_tercio
  25+ 9BC2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  26+ 9BC3
  27+ 9BC3 1E 00        	ld e,0
  28+ 9BC5 7D           	ld a,l
  29+ 9BC6 E6 E0        	and $e0
  30+ 9BC8 28 01        	jr z,1F
  31+ 9BCA 04           	inc b
  32+ 9BCB
  33+ 9BCB 04           1 inc b
  34+ 9BCC 05           	dec b
  35+ 9BCD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  36+ 9BCF              ;														; _ , salimos.
  37+ 9BCF 1C           3 inc e
  38+ 9BD0 D6 20        	sub 32
  39+ 9BD2 20 FB        	jr nz,3B
  40+ 9BD4 10 F5        	djnz 1B
  41+ 9BD6
  42+ 9BD6 7B           2 ld a,e
  43+ 9BD7 32 04 88     	ld (Coordenada_y),a
  44+ 9BDA
  45+ 9BDA C9           	ret
  46+ 9BDB
  47+ 9BDB              ; ------------------------------------------------------------------------
  48+ 9BDB              ;	28/05/23
  49+ 9BDB              ;
  50+ 9BDB              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  51+ 9BDB              ;	Fila superior "0", Columna izquierda "0".
  52+ 9BDB              ;
  53+ 9BDB              ;	Input: HL contendrá la posición del proyectil en pantalla.
  54+ 9BDB              ;	Output: DE contendrá las coordenadas del disparo:
  55+ 9BDB              ;
  56+ 9BDB              ;		DE="$120d"
  57+ 9BDB              ;
  58+ 9BDB              ;		D, (Coordenada_X), Columnas, $12
  59+ 9BDB              ;		E, (Coordenada_y), Filas, $0d
  60+ 9BDB              ;
  61+ 9BDB              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  62+ 9BDB
  63+ 9BDB              ;	Modifica: A,BC y DE.
  64+ 9BDB
  65+ 9BDB
  66+ 9BDB              Genera_coordenadas_disparo
  67+ 9BDB
  68+ 9BDB              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  69+ 9BDB
  70+ 9BDB 7D           	ld a,l
  71+ 9BDC E6 1F        	and $1f
  72+ 9BDE 57           	ld d,a 												; Columnas en D. Coordenada_X.
  73+ 9BDF CD 17 98     	call calcula_tercio
  74+ 9BE2 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  75+ 9BE3 1E 00        	ld e,0
  76+ 9BE5 7D           	ld a,l
  77+ 9BE6 E6 E0        	and $e0
  78+ 9BE8 28 01        	jr z,1F
  79+ 9BEA 04           	inc b
  80+ 9BEB 1C           1 inc e
  81+ 9BEC D6 20        	sub 32
  82+ 9BEE 20 FB        	jr nz,1B
  83+ 9BF0 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  84+ 9BF2 C9           	ret
  85+ 9BF3
# file closed: Genera_coordenadas.asm
1820  9BF3              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BF3              ; Relojes y temporizaciones.
   2+ 9BF3
   3+ 9BF3              ; ------------------------------------------------------
   4+ 9BF3              ;
   5+ 9BF3              ;	16/7/23
   6+ 9BF3              ;
   7+ 9BF3              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BF3              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BF3              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BF3              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BF3              ;
  12+ 9BF3              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BF3              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BF3
  15+ 9BF3              ; Disparo_entidad db 1
  16+ 9BF3              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BF3              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BF3
  19+ 9BF3              Habilita_disparos
  20+ 9BF3
  21+ 9BF3 7E           	ld a,(hl)
  22+ 9BF4 A7           	and a
  23+ 9BF5 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BF6
  25+ 9BF6 EB           	ex de,hl
  26+ 9BF7
  27+ 9BF7 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BF8 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BF9
  30+ 9BF9              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BF9
  32+ 9BF9 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BFA 7E           	ld a,(hl)
  34+ 9BFB 23           	inc hl
  35+ 9BFC 77           	ld (hl),a
  36+ 9BFD
  37+ 9BFD EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BFE 3E 01        	ld a,1
  39+ 9C00 77           	ld (hl),a
  40+ 9C01 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1821  9C02              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C02
   2+ 9C02
   3+ 9C02              ;   07/07/23
   4+ 9C02              ;
   5+ 9C02              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C02              ;
   7+ 9C02              ;   Codificación:
   8+ 9C02              ;
   9+ 9C02              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C02              ;
  11+ 9C02              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C02              ;
  13+ 9C02              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C02              ;
  15+ 9C02              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C02              ;
  17+ 9C02              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C02              ;                               ..... %01000010 Vel_up 4
  19+ 9C02              ;                                               Vel_down 2
  20+ 9C02              ;                               ..... $42
  21+ 9C02              ;
  22+ 9C02              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C02              ;
  24+ 9C02              ;                               ..... %01000010 Vel_left 4
  25+ 9C02              ;                                               Vel_right 2
  26+ 9C02              ;                               ..... $42
  27+ 9C02              ;
  28+ 9C02              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C02              ;
  30+ 9C02              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C02              ;
  32+ 9C02              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C02              ;
  34+ 9C02              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C02              ;                                     $53
  36+ 9C02              ;
  37+ 9C02              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C02              ;
  39+ 9C02              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C02              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C02              ;
  42+ 9C02              ;                       Arriba ..... $81
  43+ 9C02              ;                       Arriba - izquierda ..... $a1
  44+ 9C02              ;                       Arriba - derecha ..... $91
  45+ 9C02              ;
  46+ 9C02              ;                       Abajo ..... $41
  47+ 9C02              ;                       Abajo - izquierda ..... $61
  48+ 9C02              ;                       Abajo - derecha ..... $51
  49+ 9C02              ;
  50+ 9C02              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C02              ;
  52+ 9C02              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C02              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C02              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C02              ;
  56+ 9C02              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C02              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C02              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C02              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C02              ;
  61+ 9C02              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C02              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C02              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C02              ;
  65+ 9C02              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C02              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C02              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C02              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C02
  70+ 9C02              ; ----- ----- ----- ----- -----
  71+ 9C02
  72+ 9C02 2E 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C04 36 9C            defw F_1
  74+ 9C06 40 9C            defw F_2
  75+ 9C08 4A 9C            defw Codo_abajo_derecha
  76+ 9C0A 7E 9C            defw Derecha_y_subiendo
  77+ 9C0C 88 9C            defw Derecha_y_subiendo_1
  78+ 9C0E 92 9C            defw F_3
  79+ 9C10 9C 9C            defw F_4
  80+ 9C12 A6 9C            defw Derecha_y_bajando
  81+ 9C14 B0 9C            defw Derecha_y_bajando_1
  82+ 9C16 BA 9C            defw Derecha_y_bajando_2
  83+ 9C18 C4 9C            defw Codo_derecha_abajo
  84+ 9C1A F4 9C            defw Codo_abajo_izq.
  85+ 9C1C 28 9D            defw Izquierda_y_subiendo
  86+ 9C1E 32 9D            defw Izquierda_y_subiendo_1
  87+ 9C20 3C 9D            defw F_5
  88+ 9C22 46 9D            defw F_6
  89+ 9C24 50 9D            defw Izquierda_y_bajando
  90+ 9C26 5A 9D            defw Izquierda_y_bajando_1
  91+ 9C28 64 9D            defw Izquierda_y_bajando_2
  92+ 9C2A 6E 9D            defw Codo_izquierda_abajo
  93+ 9C2C 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C2E
  95+ 9C2E 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C32 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C36
  98+ 9C36 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C3A 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C3E 08 00
 100+ 9C40 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C44 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C48 0F FE
 102+ 9C4A
 103+ 9C4A 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C4E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C52 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C56 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C5A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C5E 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C62 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C66 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C6A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C6E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C72 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C76 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C7A 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C7E
 117+ 9C7E 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C82 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C86 06 00
 119+ 9C88
 120+ 9C88 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C8C 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C90 02 00
 122+ 9C92
 123+ 9C92 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C96 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C9A 04 00
 125+ 9C9C 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9CA0 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9CA4 08 00
 127+ 9CA6
 128+ 9CA6 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CAA 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CAE 02 00
 130+ 9CB0
 131+ 9CB0 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CB4 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CB8 06 00
 133+ 9CBA
 134+ 9CBA 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CBE 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CC2 06 00
 136+ 9CC4
 137+ 9CC4              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CC4
 139+ 9CC4 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CC8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CCC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CD0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CD4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CD8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CDC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CE0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CE4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CE8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CEC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CF0 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CF4
 152+ 9CF4 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CF8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CFC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D00 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D04 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D08 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D0C 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D10 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D14 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D18 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D1C 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D20 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D24 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D28
 166+ 9D28 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D2C 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D30 06 00
 168+ 9D32
 169+ 9D32 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D36 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D3A 02 00
 171+ 9D3C
 172+ 9D3C 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D40 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D44 04 00
 174+ 9D46 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D4A 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D4E 08 00
 176+ 9D50
 177+ 9D50 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D54 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D58 02 00
 179+ 9D5A
 180+ 9D5A 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D5E 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D62 06 00
 182+ 9D64
 183+ 9D64 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D68 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D6C 06 00
 185+ 9D6E
 186+ 9D6E 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D72 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D76 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D7A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D7E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D82 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D86 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D8A 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D8E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D92 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D96 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D9A 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D9E
 199+ 9D9E              ; ----- ----- ----- ----- -----
 200+ 9D9E              ;
 201+ 9D9E              ;   28/12/23
 202+ 9D9E
 203+ 9D9E              Movimiento
 204+ 9D9E
 205+ 9D9E              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D9E
 207+ 9D9E 3A 24 88         ld a,(Ctrl_2)
 208+ 9DA1 CB 57            bit 2,a
 209+ 9DA3 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9DA5
 211+ 9DA5 2A 34 88         ld hl,(Puntero_mov)
 212+ 9DA8 7E               ld a,(hl)
 213+ 9DA9
 214+ 9DA9              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9DA9
 216+ 9DA9              Inicia_desplazamiento.
 217+ 9DA9
 218+ 9DA9              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9DA9
 220+ 9DA9 CD A9 9E         call Ajusta_velocidad_desplazamiento
 221+ 9DAC
 222+ 9DAC              ; Iniciamos (Repetimos_mov).
 223+ 9DAC
 224+ 9DAC 7E               ld a,(hl)
 225+ 9DAD E6 0F            and $0f
 226+ 9DAF 32 3A 88         ld (Repetimos_desplazamiento),a
 227+ 9DB2 32 3B 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9DB5
 229+ 9DB5              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9DB5
 231+ 9DB5 23               inc hl
 232+ 9DB6 7E               ld a,(hl)
 233+ 9DB7 32 3D 88         ld (Cola_de_desplazamiento),a
 234+ 9DBA 2B               dec hl
 235+ 9DBB
 236+ 9DBB 21 24 88         ld hl,Ctrl_2
 237+ 9DBE CB D6            set 2,(hl)
 238+ 9DC0
 239+ 9DC0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9DC0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9DC0
 242+ 9DC0              Desplazamiento_iniciado
 243+ 9DC0
 244+ 9DC0 CD 77 9E         call Aplica_desplazamiento
 245+ 9DC3
 246+ 9DC3              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9DC3
 248+ 9DC3 3A 5D 88         ld a,(Ctrl_3)
 249+ 9DC6 CB 57            bit 2,a
 250+ 9DC8 C0               ret nz
 251+ 9DC9
 252+ 9DC9 3A 24 88         ld a,(Ctrl_2)
 253+ 9DCC CB 67            bit 4,a
 254+ 9DCE C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DCF
 256+ 9DCF 21 3A 88     3 ld hl,Repetimos_desplazamiento
 257+ 9DD2 35               dec (hl)
 258+ 9DD3 C0               ret nz
 259+ 9DD4
 260+ 9DD4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DD4              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DD4              ; Analiza (Cola_de_desplazamiento).
 263+ 9DD4
 264+ 9DD4 3A 3D 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DD7 A7               and a
 266+ 9DD8 CC D2 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DDB 28 30            jr z,Reinicia_el_movimiento
 268+ 9DDD
 269+ 9DDD FE FF            cp $ff
 270+ 9DDF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DE1
 272+ 9DE1 FE FE            cp $fe
 273+ 9DE3 CC 50 9E         call z,Fijamos_bucle
 274+ 9DE6 28 25            jr z,Reinicia_el_movimiento
 275+ 9DE8
 276+ 9DE8 FE FD            cp $fd
 277+ 9DEA 20 11            jr nz,1F
 278+ 9DEC
 279+ 9DEC              ; ---
 280+ 9DEC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DEC
 282+ 9DEC 3A 24 88         ld a,(Ctrl_2)
 283+ 9DEF CB 5F            bit 3,a
 284+ 9DF1 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DF3
 286+ 9DF3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DF3
 288+ 9DF3 21 24 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DF6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DF8
 291+ 9DF8 CD 61 9E         call Inicia_Repetimos_movimiento
 292+ 9DFB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DFD              ; ---
 294+ 9DFD
 295+ 9DFD FE 01        1 cp 1
 296+ 9DFF CA 3A 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9E02
 298+ 9E02 3D               dec a
 299+ 9E03 32 3D 88         ld (Cola_de_desplazamiento),a
 300+ 9E06
 301+ 9E06 3A 3B 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9E09 32 3A 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9E0C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9E0C C9               ret
 305+ 9E0D
 306+ 9E0D              Reinicia_el_movimiento
 307+ 9E0D
 308+ 9E0D 3A 24 88         ld a,(Ctrl_2)
 309+ 9E10 CB 5F            bit 3,a
 310+ 9E12 28 1B            jr z,2F
 311+ 9E14
 312+ 9E14              ; (Cola_de_desplazamiento)="254".
 313+ 9E14
 314+ 9E14 21 3C 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9E17 35               dec (hl)
 316+ 9E18 20 15            jr nz,2F
 317+ 9E1A
 318+ 9E1A              ; Fin de las repeticiones del último movimiento.
 319+ 9E1A
 320+ 9E1A 21 24 88         ld hl,Ctrl_2
 321+ 9E1D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9E1F
 323+ 9E1F 2A 34 88         ld hl,(Puntero_mov)
 324+ 9E22 23               inc hl
 325+ 9E23 23               inc hl
 326+ 9E24 23               inc hl
 327+ 9E25 22 34 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9E28              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9E28 7E               ld a,(hl)
 330+ 9E29 32 3D 88         ld (Cola_de_desplazamiento),a
 331+ 9E2C
 332+ 9E2C C3 D4 9D         jp Cola
 333+ 9E2F
 334+ 9E2F CD 6C 9E     2 call Inicia_Puntero_mov
 335+ 9E32
 336+ 9E32 21 24 88         ld hl,Ctrl_2
 337+ 9E35 CB 96            res 2,(hl)
 338+ 9E37
 339+ 9E37 C3 9E 9D         jp Movimiento
 340+ 9E3A
 341+ 9E3A              Siguiente_desplazamiento
 342+ 9E3A
 343+ 9E3A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E3A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E3A
 346+ 9E3A 21 24 88         ld hl,Ctrl_2
 347+ 9E3D CB 96            res 2,(hl)
 348+ 9E3F
 349+ 9E3F 2A 34 88         ld hl,(Puntero_mov)
 350+ 9E42 23               inc hl
 351+ 9E43 23               inc hl
 352+ 9E44 22 34 88         ld (Puntero_mov),hl
 353+ 9E47
 354+ 9E47 7E               ld a,(hl)
 355+ 9E48 A7               and a
 356+ 9E49 CC D2 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E4C CA 0D 9E         jp z,Reinicia_el_movimiento
 358+ 9E4F
 359+ 9E4F C9               ret
 360+ 9E50
 361+ 9E50              ; Subrutinas -----------------------------------------
 362+ 9E50              ; ---------- --------- --------- ---------- ----------
 363+ 9E50              ;
 364+ 9E50              ;   24/07/23
 365+ 9E50              ;
 366+ 9E50              ;   Fijamos_bucle
 367+ 9E50              ;
 368+ 9E50              ;
 369+ 9E50
 370+ 9E50              Fijamos_bucle
 371+ 9E50
 372+ 9E50 3A 38 88         ld a,(Incrementa_puntero)
 373+ 9E53 3C               inc a
 374+ 9E54 32 39 88         ld (Incrementa_puntero_backup),a
 375+ 9E57
 376+ 9E57 CD D2 9E         call Incrementa_Puntero_indice_mov
 377+ 9E5A 2A 32 88         ld hl,(Puntero_indice_mov)
 378+ 9E5D 22 36 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9E60 C9               ret
 380+ 9E61
 381+ 9E61              ; ---------- --------- --------- ---------- ----------
 382+ 9E61              ;
 383+ 9E61              ;   07/7/23
 384+ 9E61              ;
 385+ 9E61              ;   Inicia_Repetimos_movimiento
 386+ 9E61              ;
 387+ 9E61              ;
 388+ 9E61
 389+ 9E61              Inicia_Repetimos_movimiento
 390+ 9E61
 391+ 9E61              ; Iniciamos (Repetimos_movimiento).
 392+ 9E61
 393+ 9E61 DD 2A 34 88      ld ix,(Puntero_mov)
 394+ 9E65 DD 7E 02         ld a,(ix+2)
 395+ 9E68 32 3C 88         ld (Repetimos_movimiento),a
 396+ 9E6B
 397+ 9E6B C9               ret
 398+ 9E6C
 399+ 9E6C              ; ---------- --------- --------- ---------- ----------
 400+ 9E6C              ;
 401+ 9E6C              ;   26/6/23
 402+ 9E6C              ;
 403+ 9E6C              ;   Inicia_Puntero_mov
 404+ 9E6C              ;
 405+ 9E6C              ;
 406+ 9E6C
 407+ 9E6C 2A 32 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E6F 5E               ld e,(hl)
 409+ 9E70 23               inc hl
 410+ 9E71 56               ld d,(hl)
 411+ 9E72 EB               ex de,hl
 412+ 9E73 22 34 88         ld (Puntero_mov),hl
 413+ 9E76 C9               ret
 414+ 9E77
 415+ 9E77              ; ---------- --------- --------- ---------- ----------
 416+ 9E77              ;
 417+ 9E77              ;   27/06/23
 418+ 9E77              ;
 419+ 9E77              ;   Aplica_movimiento.
 420+ 9E77
 421+ 9E77              Aplica_desplazamiento
 422+ 9E77
 423+ 9E77              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E77
 425+ 9E77 2A 34 88         ld hl, (Puntero_mov)
 426+ 9E7A
 427+ 9E7A 7E               ld a,(hl)
 428+ 9E7B E6 F0            and $f0
 429+ 9E7D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E7E
 431+ 9E7E CB 7E            bit 7,(hl)
 432+ 9E80 28 03            jr z,1F
 433+ 9E82 CD 96 98         call Mov_up
 434+ 9E85 2A 34 88     1 ld hl, (Puntero_mov)
 435+ 9E88 CB 76            bit 6,(hl)
 436+ 9E8A 28 09            jr z,2F
 437+ 9E8C CD 5D 98         call Mov_down
 438+ 9E8F
 439+ 9E8F              ; Se ha aplicado reinicio ???
 440+ 9E8F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E8F
 442+ 9E8F 3A 5D 88         ld a,(Ctrl_3)
 443+ 9E92 CB 57            bit 2,a
 444+ 9E94 C0               ret nz
 445+ 9E95
 446+ 9E95 2A 34 88     2 ld hl, (Puntero_mov)
 447+ 9E98 CB 6E            bit 5,(hl)
 448+ 9E9A 28 03            jr z,3F
 449+ 9E9C CD FC 99         call Mov_left
 450+ 9E9F 2A 34 88     3 ld hl, (Puntero_mov)
 451+ 9EA2 CB 66            bit 4,(hl)
 452+ 9EA4 C8               ret z
 453+ 9EA5 CD D9 98         call Mov_right
 454+ 9EA8 C9               ret
 455+ 9EA9
 456+ 9EA9              ; ---------- --------- --------- ---------- ----------
 457+ 9EA9              ;
 458+ 9EA9              ;   26/06/23
 459+ 9EA9              ;
 460+ 9EA9              ;   Ajusta_velocidad_desplazamiento.
 461+ 9EA9
 462+ 9EA9              Ajusta_velocidad_desplazamiento
 463+ 9EA9
 464+ 9EA9              ; 1er byte de la cadena de movimiento.
 465+ 9EA9              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9EA9
 467+ 9EA9 CD C7 9E         call Extrae_nibble_alto
 468+ 9EAC
 469+ 9EAC 32 28 88         ld (Vel_up),a
 470+ 9EAF 79               ld a,c
 471+ 9EB0 E6 0F            and $0f
 472+ 9EB2 32 29 88         ld (Vel_down),a
 473+ 9EB5
 474+ 9EB5              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9EB5              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9EB5
 477+ 9EB5 23               inc hl
 478+ 9EB6 CD C7 9E         call Extrae_nibble_alto
 479+ 9EB9
 480+ 9EB9 32 26 88         ld (Vel_left),a
 481+ 9EBC 79               ld a,c
 482+ 9EBD E6 0F            and $0f
 483+ 9EBF 32 27 88         ld (Vel_right),a
 484+ 9EC2
 485+ 9EC2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9EC2
 487+ 9EC2 23               inc hl
 488+ 9EC3 22 34 88         ld (Puntero_mov),hl
 489+ 9EC6 C9               ret
 490+ 9EC7
 491+ 9EC7 06 04        Extrae_nibble_alto ld b,4
 492+ 9EC9 7E               ld a,(hl)
 493+ 9ECA 4F               ld c,a
 494+ 9ECB E6 F0            and $f0
 495+ 9ECD CB 3F        1 srl a
 496+ 9ECF 10 FC            djnz 1B
 497+ 9ED1 C9               ret
 498+ 9ED2
 499+ 9ED2              ; ---------- --------- --------- ---------- ----------
 500+ 9ED2              ;
 501+ 9ED2              ;   5/7/23
 502+ 9ED2              ;
 503+ 9ED2              ;   Incrementa_Puntero_indice_mov
 504+ 9ED2
 505+ 9ED2              Incrementa_Puntero_indice_mov
 506+ 9ED2
 507+ 9ED2 21 38 88         ld hl,Incrementa_puntero
 508+ 9ED5 34               inc (hl)
 509+ 9ED6
 510+ 9ED6 2A 32 88         ld hl,(Puntero_indice_mov)
 511+ 9ED9 01 02 00         ld bc,2
 512+ 9EDC A7               and a
 513+ 9EDD 09               add hl,bc
 514+ 9EDE 22 32 88         ld (Puntero_indice_mov),hl
 515+ 9EE1
 516+ 9EE1 7E               ld a,(hl)
 517+ 9EE2 A7               and a
 518+ 9EE3
 519+ 9EE3              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EE3
 521+ 9EE3              ;    jr z,$
 522+ 9EE3
 523+ 9EE3              ;! Reinicia el Patrón de movimiento.
 524+ 9EE3
 525+ 9EE3 CC E8 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EE6
 527+ 9EE6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EE7
 529+ 9EE7 C9               ret
 530+ 9EE8
 531+ 9EE8              ; ---------- --------- --------- ---------- ----------
 532+ 9EE8              ;
 533+ 9EE8              ;   15/01/24
 534+ 9EE8              ;
 535+ 9EE8              ;   Inicializa_Puntero_indice_mov
 536+ 9EE8
 537+ 9EE8              Inicializa_Puntero_indice_mov_2
 538+ 9EE8
 539+ 9EE8              ; Existe etiqueta de bucle principal???
 540+ 9EE8
 541+ 9EE8 2A 36 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9EEB 24               inc h
 543+ 9EEC 25               dec h
 544+ 9EED 28 05            jr z,2F
 545+ 9EEF
 546+ 9EEF 22 32 88         ld (Puntero_indice_mov),hl
 547+ 9EF2 18 14            jr 3F
 548+ 9EF4
 549+ 9EF4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9EF4
 551+ 9EF4 3A 38 88     2 ld a,(Incrementa_puntero)
 552+ 9EF7 47               ld b,a
 553+ 9EF8
 554+ 9EF8 2A 32 88         ld hl,(Puntero_indice_mov)
 555+ 9EFB 2B           1 dec hl
 556+ 9EFC 2B               dec hl
 557+ 9EFD 10 FC            djnz 1B
 558+ 9EFF 22 32 88         ld (Puntero_indice_mov),hl
 559+ 9F02
 560+ 9F02 AF               xor a
 561+ 9F03 32 38 88         ld (Incrementa_puntero),a
 562+ 9F06 18 06            jr 4F
 563+ 9F08
 564+ 9F08 3A 39 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9F0B 32 38 88         ld (Incrementa_puntero),a
 566+ 9F0E C9           4 ret
 567+ 9F0F
 568+ 9F0F              ; ----------------------------------------------------------------------
 569+ 9F0F              ;
 570+ 9F0F              ;   25/01/24
 571+ 9F0F              ;
 572+ 9F0F              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9F0F
 574+ 9F0F 3A FC 87     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9F12 CD 62 87         call Calcula_salto_en_BC
 576+ 9F15 21 2A 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9F18 A7               and a
 578+ 9F19 ED 4A            adc hl,bc
 579+ 9F1B C9               ret
 580+ 9F1C
 581+ 9F1C
# file closed: Patrones_de_mov.asm
1822  9F1C              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F1C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F1C              ;
   3+ 9F1C              ;	12/12/23
   4+ 9F1C              ;
   5+ 9F1C              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F1C
   7+ 9F1C              ;	ADC HL,SP	LD (addr),SP
   8+ 9F1C              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F1C              ;	ADD IX,SP	LD SP,nn
  10+ 9F1C              ; 	ADD IY,SP	LD SP,HL
  11+ 9F1C              ;				LD SP,IX
  12+ 9F1C              ;	DEC SP		LD SP,IY
  13+ 9F1C
  14+ 9F1C              ;	EX (SP),HL
  15+ 9F1C              ;	EX (SP),IX
  16+ 9F1C              ;	EX (SP),IY
  17+ 9F1C
  18+ 9F1C              ;	INC SP
  19+ 9F1C
  20+ 9F1C                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 4F 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 19 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 1B 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 3E 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 57 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 1F 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 5B 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 55 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 3E 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 57 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 1F 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 5B 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 4F 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 55 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 4F 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 55 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 55 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1823  718B
1824  718B              	SAVESNA "Pruebas.sna", START
1825  718B
1826  718B
1827  718B
1828  718B
# file closed: Banco_de_pruebas.asm
