# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  40  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  41  FE01
  42  FE01              ;																		; Scanlines_album.
  43  FE01
  44  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  45  FE01
  46  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  47  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  48  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  49  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  50  FE01
  51  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  52  FE01              ;
  53  FE01              ;	13/08/24
  54  FE01              ;
  55  FE01
  56  FE01              	org $82f4
  57  82F4
  58  82F4 F5           	push af
  59  82F5 E5           	push hl
  60  82F6
  61  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  62  82F6 21 24 8C     	ld hl,Ctrl_3
  63  82F9 CB 46        	bit 0,(hl)
  64  82FB 28 FE        	jr z,$
  65  82FD              ;! -------------------
  66  82FD
  67  82FD              ; Disparos.
  68  82FD
  69  82FD CD B7 A0     	call Pinta_disparos
  70  8300
  71  8300              ; Shield -----------------------
  72  8300
  73  8300              Temporizacion_shield
  74  8300
  75  8300 21 4E 8C     	ld hl,Shield
  76  8303 7E           	ld a,(hl)
  77  8304 A7           	and a
  78  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8307
  80  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8308
  82  8308 23           	inc hl
  83  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  830A
  85  830A 20 17        	jr nz,Incrementa_FRAMES
  86  830C
  87  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  830C
  89  830C              Cambio_de_estado
  90  830C
  91  830C              ;	Indica cambio de estado.
  92  830C
  93  830C 23           	inc hl						;	Sitúa en (Shield_3).
  94  830D
  95  830D CB 5E        	bit 3,(hl)
  96  830F 28 05        	jr z,2F
  97  8311
  98  8311 CD 07 91     	call Inicia_Shield
  99  8314
 100  8314 18 0D        	jr Incrementa_FRAMES
 101  8316
 102  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8318
 104  8318              ;	Carga en (Shield_2) la siguiente temporización.
 105  8318
 106  8318 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 107  831B 23           	inc hl
 108  831C 22 4C 8C     	ld (Puntero_datos_shield),hl
 109  831F 7E           	ld a,(hl)
 110  8320 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8323
 112  8323              Incrementa_FRAMES
 113  8323
 114  8323 2A 78 5C     	ld hl,(FRAMES)
 115  8326 23           	inc hl
 116  8327 22 78 5C     	ld (FRAMES),hl
 117  832A
 118  832A 7C           	ld a,h
 119  832B B5           	or l
 120  832C 20 04        	jr nz,1F
 121  832E
 122  832E 21 7A 5C     	ld hl,FRAMES_3
 123  8331 34           	inc (hl)
 124  8332
 125  8332 D5           1 push de
 126  8333 C5           	push bc
 127  8334
 128  8334 CD 17 91     	call Actualiza_pantalla
 129  8337
 130  8337 C1           	pop bc
 131  8338 D1           	pop de
 132  8339 E1           	pop hl
 133  833A F1           	pop af
 134  833B
 135  833B FB           	ei
 136  833C
 137  833C C9           	ret
 138  833D
 139  833D              ; --------------------------------------------------------------------------------
 140  833D
 141  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_de_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 142  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 144  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A2 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA2
  19+ 8BA2 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA3 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA7 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAB 01 02
  22+ 8BAD 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB1 01 02
  23+ 8BB3
# file closed: Niveles.asm
 145  8BB3
 146  8BB3              ; --------------------------------------------------------------------------------
 147  8BB3              ;
 148  8BB3              ; 12/05/24
 149  8BB3              ;
 150  8BB3              ; Parámetros DRAW.
 151  8BB3              ;
 152  8BB3
 153  8BB3              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8BB3
 155  8BB3 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8BB4              ;															- Patrón de movimiento.
 157  8BB4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8BB5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8BB6
 160  8BB6 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8BB7              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8BB7
 163  8BB7              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8BB7              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8BB7              ; Ejemplos.
 166  8BB7
 167  8BB7              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8BB7              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8BB7              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8BB7              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8BB7              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8BB7
 173  8BB7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8BB8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8BB8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8BB8
 177  8BB8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8BBA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8BBA
 180  8BBA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8BBC
 182  8BBC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8BBC
 184  8BBC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BBE              ;														; _palabras que componen el "movimiento_masticado".
 186  8BBE
 187  8BBE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BBE
 189  8BBE 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BBF              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BBF              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BBF              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BBF              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BBF
 195  8BBF 00           Ctrl_2 db 0
 196  8BC0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC0              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC0              ;
 204  8BC0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC0              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC0              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC0              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC0              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC0              ;														BIT 4, ???
 210  8BC0              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC0
 212  8BC0 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC1              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC1              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC1              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC1              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC1              ;
 218  8BC1              ; 														DESCRIPCIÖN:
 219  8BC1              ;
 220  8BC1              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC1              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC1              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC1              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC1              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC1              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC1              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC1              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC1              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC1              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC1              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC1              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC1              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC1              ;
 234  8BC1              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC1              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC1              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC1
 238  8BC1              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC1
 240  8BC1 00           Filas db 0												; Filas. [DRAW]
 241  8BC2 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BC3 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BC5 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BC7
 245  8BC7              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BC7
 247  8BC7 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BC8              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BC8              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BC8
 251  8BC8              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BC8
 253  8BC8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BC8              ;
 255  8BC8              ;	COLORES: 0 ..... NEGRO
 256  8BC8              ;    		 1 ..... AZUL
 257  8BC8              ; 			 2 ..... ROJO
 258  8BC8              ;			 3 ..... MAGENTA
 259  8BC8              ; 			 4 ..... VERDE
 260  8BC8              ; 			 5 ..... CIAN
 261  8BC8              ;			 6 ..... AMARILLO
 262  8BC8              ; 			 7 ..... BLANCO
 263  8BC8
 264  8BC8 00 00        Indice_Sprite_der defw 0
 265  8BCA 00 00        Indice_Sprite_izq defw 0
 266  8BCC 00 00        Puntero_DESPLZ_der defw 0
 267  8BCE 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD0
 269  8BD0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BD2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BD3 00           Columnas db 0
 272  8BD4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BD6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BD7
 276  8BD7              ; variables de control general.
 277  8BD7
 278  8BD7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BD8
 280  8BD8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BD8
 282  8BD8              Perfiles_de_velocidad
 283  8BD8
 284  8BD8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BD9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BDA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BDB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BDC
 289  8BDC              ; Contadores de 16 bits.
 290  8BDC
 291  8BDC 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BE4
 296  8BE4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BE4
 298  8BE4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BE6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BE8 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BEA              ;
 302  8BEA              ;
 303  8BEA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BEB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BEB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BEB 00           Incrementa_puntero_backup db 0
 307  8BEC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BED              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BED 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BEE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BEF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF0              ;
 313  8BF0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF0              ;
 317  8BF0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF0              ;
 322  8BF0              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF0
 326  8BF0 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF1
 328  8BF1              ;														DESCRIPCIÓN:
 329  8BF1              ;
 330  8BF1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF1              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF1              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF1              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF1              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF1              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF1
 337  8BF1              ;														BIT 3, Recarga de nueva oleada.
 338  8BF1              ;														BIT 4, Recarga de nueva oleada.
 339  8BF1              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF1              ;														BIT 6, **** Frame completo.
 341  8BF1              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF1
 343  8BF1 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BF3              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BF3              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BF3              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BF3
 348  8BF3              ; Gestión de ENTIDADES y CAJAS.
 349  8BF3
 350  8BF3 00 00        Puntero_store_caja defw 0
 351  8BF5 00 00        Puntero_restore_caja defw 0
 352  8BF7 00 00        Indice_restore_caja defw 0
 353  8BF9 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8BFA 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8BFB 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8BFC
 357  8BFC 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8BFE 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C00              ;														; _ puntero (Indice_entidades).
 360  8C00
 361  8C00              ;---------------------------------------------------------------------------------------------------------------
 362  8C00              ;
 363  8C00              ;	11/09/24
 364  8C00              ;
 365  8C00              ;	Álbumes.
 366  8C00
 367  8C00 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C02              ;														; _variable para almacenar lo posición del puntero_
 369  8C02              ; 														; _de pila, SP.
 370  8C02 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C04              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C04
 373  8C04              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C04
 375  8C04 00 00        Album_de_pintado defw 0
 376  8C06 00 00        Album_de_borrado defw 0
 377  8C08 00 00        Album_de_pintado_Amadeus defw 0
 378  8C0A 00 00        Album_de_borrado_Amadeus defw 0
 379  8C0C 00 00        Album_de_pintado_disparos defw 0
 380  8C0E 00 00        Album_de_borrado_disparos defw 0
 381  8C10
 382  8C10 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C12 00           Num_de_bytes_album_de_disparos db 0
 384  8C13 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C14
 386  8C14 07           Numero_de_disparos_de_entidades db 7
 387  8C15
 388  8C15 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C16 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 390  8C17
 391  8C17 00 00        Techo_Scanlines_album defw 0
 392  8C19 00 00        Techo_Scanlines_album_2 defw 0
 393  8C1B 00           Switch db 0
 394  8C1C 00 00        Techo defw 0
 395  8C1E 00 00        Scanlines_album_SP defw 0
 396  8C20 00 89        India_SP defw Tabla_de_pintado
 397  8C22 03 89        India_2_SP defw Tabla_de_pintado+3
 398  8C24
 399  8C24 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  8C25              ;
 401  8C25              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  8C25              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  8C25              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  8C25              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 405  8C25              ;																Habilita el borrado/pintado de sprites.
 406  8C25              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 407  8C25              ;																_ a la baja.
 408  8C25              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 409  8C25              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 410  8C25              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 411  8C25              ; 																_ el último frame de la explosión de nuestra nave.
 412  8C25              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 413  8C25              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 414  8C25
 415  8C25 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 416  8C26              ;
 417  8C26              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 418  8C26              ;
 419  8C26              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 420  8C26              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 421  8C26              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 422  8C26              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 423  8C26              ;
 424  8C26              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 425  8C26              ;															_ masticados ya generados.
 426  8C26              ;
 427  8C26              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 428  8C26              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 429  8C26              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 430  8C26              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 431  8C26
 432  8C26 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 433  8C27              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 434  8C27              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 435  8C27
 436  8C27
 437  8C27
 438  8C27
 439  8C27
 440  8C27              ; Gestión de Disparos.
 441  8C27
 442  8C27 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 443  8C29 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 444  8C2B 00           Impacto2 db 0											; Byte de control de impactos.
 445  8C2C
 446  8C2C              ;
 447  8C2C              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 448  8C2C              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 449  8C2C              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 450  8C2C              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 451  8C2C
 452  8C2C
 453  8C2C
 454  8C2C
 455  8C2C
 456  8C2C
 457  8C2C
 458  8C2C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 459  8C2E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 460  8C2E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 461  8C2E
 462  8C2E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 463  8C30              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 464  8C30 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C33              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 466  8C33 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 467  8C36              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 468  8C36
 469  8C36              ;---------------------------------------------------------------------------------------------------------------
 470  8C36
 471  8C36              ; Relojes y temporizaciones.
 472  8C36
 473  8C36 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 474  8C37 05           Clock_explosion_Amadeus db 5
 475  8C38 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 476  8C39
 477  8C39 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 478  8C3B F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 479  8C3D 00           DB_RND_disparos db 0
 480  8C3E
 481  8C3E 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 482  8C40 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 483  8C41              ;														; Repite la oleada de entidades.
 484  8C41 20           CLOCK_disparo_entidad_MASTER db $20						; Reloj, decreciente.
 485  8C42 20           CLOCK_disparo_entidad db $20
 486  8C43
 487  8C43              ;---------------------------------------------------------------------------------------------------------------
 488  8C43
 489  8C43              ; Gestión de NIVELES.
 490  8C43
 491  8C43 00           Nivel db 0												; Nivel actual del juego.
 492  8C44 00 00        Puntero_indice_NIVELES defw 0
 493  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 494  8C48              ; 														; _ que definen el NIVEL.
 495  8C48
 496  8C48              ; ---------------------------------------------------------------------------------------------------------------
 497  8C48
 498  8C48              ; Temporizaciones Shield.
 499  8C48
 500  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 501  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 502  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 503  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 504  8C50 00           Shield_3 db 0
 505  8C51
 506  8C51 06           Lives db 6
 507  8C52
 508  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 509  8C52              ;
 510  8C52              ;	5/1/24
 511  8C52
 512  8C52              START
 513  8C52
 514  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 515  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 516  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 517  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 518  8C5B F3           	DI
 519  8C5C
 520  8C5C              ; Limpiamos pantalla.
 521  8C5C
 522  8C5C 3E 07        	ld a,%00000111
 523  8C5E              ;	call Cls
 524  8C5E CD FC 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 525  8C61
 526  8C61              ; INICIALIZACIÓN.
 527  8C61
 528  8C61 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 529  8C63 CD 40 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 530  8C66 CD 93 8E     	call Extrae_numero_aleatorio_y_avanza
 531  8C69
 532  8C69 6F           	ld l,a
 533  8C6A 26 00        	ld h,0
 534  8C6C 22 3E 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 535  8C6F
 536  8C6F              ;	Inicializa 1er Nivel.
 537  8C6F
 538  8C6F 21 94 8B     	ld hl,Indice_de_niveles
 539  8C72 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 540  8C75 CD 70 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 541  8C78              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 542  8C78              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 543  8C78              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 544  8C78
 545  8C78              ;	Inicia los álbumes de líneas.
 546  8C78
 547  8C78 CD 4C 90     	call Inicia_albumes_de_lineas
 548  8C7B              ;
 549  8C7B CD 5C 90     	call Inicia_albumes_de_lineas_Amadeus
 550  8C7E CD 69 90     	call Inicia_albumes_de_disparos
 551  8C81
 552  8C81 CD 92 90     	call Inicia_Puntero_Disparo_Entidades
 553  8C84
 554  8C84 CD B5 92     4 call Inicia_Entidades
 555  8C87 CD 18 93     	call Inicia_Amadeus
 556  8C8A
 557  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 558  8C8A              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 559  8C8A              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 560  8C8A
 561  8C8A 11 6D 89     	ld de,Amadeus_BOX
 562  8C8D CD 6B 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 563  8C90 CD 5B 93     	call Limpiamos_bandeja_DRAW
 564  8C93
 565  8C93              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 566  8C93
 567  8C93 06 3C        	ld b,60
 568  8C95 CD 47 9D     2 call Amadeus_a_izquierda
 569  8C98 10 FB        	djnz 2B
 570  8C9A
 571  8C9A CD 2A 90     	call Genera_datos_de_impresion_Amadeus
 572  8C9D
 573  8C9D              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 574  8C9D
 575  8C9D CD 7C 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 576  8CA0              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 577  8CA0
 578  8CA0              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 579  8CA0              ; (Esto se dá cuando se inicia una nueva oleada).
 580  8CA0
 581  8CA0              ;	ld a,(Ctrl_1)
 582  8CA0              ;	bit 3,a
 583  8CA0              ;	jr nz,5F											 ; Loop
 584  8CA0
 585  8CA0              ;	ld de,Amadeus_db
 586  8CA0              ;	call Store_Amadeus
 587  8CA0
 588  8CA0              ; 	INICIA DISPAROS !!!!!
 589  8CA0
 590  8CA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA0
 592  8CA0              ;5 call Inicia_punteros_de_cajas
 593  8CA0              ;	call Restore_entidad
 594  8CA0
 595  8CA0              ;	ld a,(Ctrl_1)
 596  8CA0              ;	bit 3,a
 597  8CA0              ;	jr z,6F
 598  8CA0
 599  8CA0              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA0
 601  8CA0              ;	ld hl,Ctrl_1
 602  8CA0              ;	res 3,(hl)
 603  8CA0              ;	jr Main
 604  8CA0
 605  8CA0              ; Damos por concluida la construcción del FRAME.
 606  8CA0              ;
 607  8CA0
 608  8CA0 CD 07 91     	call Inicia_Shield
 609  8CA3
 610  8CA3
 611  8CA3 2A 1E 8C     6 ld hl,(Scanlines_album_SP)
 612  8CA6 22 17 8C     	ld (Techo_Scanlines_album),hl
 613  8CA9
 614  8CA9 2A 06 8C     	ld hl,(Album_de_borrado)
 615  8CAC 22 1E 8C     	ld (Scanlines_album_SP),hl
 616  8CAF
 617  8CAF 21 00 89     	ld hl,Tabla_de_pintado
 618  8CB2 22 20 8C     	ld (India_SP),hl
 619  8CB5
 620  8CB5 21 24 8C     	ld hl,Ctrl_3
 621  8CB8 CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CBA CB D6        	set 2,(hl)
 623  8CBC CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CBE
 625  8CBE FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CBF
 627  8CBF 76           	halt
 628  8CC0
 629  8CC0              ; ------------------------------------
 630  8CC0
 631  8CC0              Main
 632  8CC0              ;
 633  8CC0              ; 20/09/24
 634  8CC0
 635  8CC0              ; Gestión de disparos.
 636  8CC0
 637  8CC0 CD 7A 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 638  8CC3 CD 2D A0     	call Limpia_album_de_borrado_disparos
 639  8CC6              ;	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CC6 CD F4 9E     	call Motor_de_disparos_entidades
 641  8CC9 CD 61 A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 642  8CCC
 643  8CCC              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 644  8CCC              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 645  8CCC              ; Este hecho lo indica el bit2 de (Impacto2).
 646  8CCC
 647  8CCC CD 03 A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 648  8CCF
 649  8CCF              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 650  8CCF
 651  8CCF 21 42 8C     	ld hl,CLOCK_disparo_entidad
 652  8CD2 35           	dec (hl)
 653  8CD3 CC C2 8D     	call z,Autoriza_disparo_de_entidades
 654  8CD6
 655  8CD6 2A 3E 8C     	ld hl,(Clock_next_entity)
 656  8CD9 ED 4B 78 5C  	ld bc,(FRAMES)
 657  8CDD A7           	and a
 658  8CDE ED 42        	sbc hl,bc
 659  8CE0 20 16        	jr nz,1F
 660  8CE2
 661  8CE2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 662  8CE2              ; _ (Clock_next_entity) para la siguiente entidad.
 663  8CE2
 664  8CE2 3A FA 8B     	ld a,(Numero_parcial_de_entidades)
 665  8CE5 47           	ld b,a
 666  8CE6 3A FB 8B     	ld a,(Entidades_en_curso)
 667  8CE9 B8           	cp b
 668  8CEA 28 0C        	jr z,1F
 669  8CEC 30 0A        	jr nc,1F
 670  8CEE
 671  8CEE 3C           	inc a
 672  8CEF 32 FB 8B     	ld (Entidades_en_curso),a
 673  8CF2
 674  8CF2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 675  8CF2
 676  8CF2 CD 93 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 677  8CF5 CD AF 8E     	call Define_Clock_next_entity
 678  8CF8
 679  8CF8 3A FB 8B     1 ld a,(Entidades_en_curso)
 680  8CFB A7           	and a
 681  8CFC CA 76 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 682  8CFF 47           	ld b,a												; No hay entidades que gestionar.
 683  8D00
 684  8D00              ; ( Código que ejecutamos con cada entidad: ).
 685  8D00
 686  8D00              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 687  8D00              ;
 688  8D00              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 689  8D00
 690  8D00 21 00 89     	ld hl,Tabla_de_pintado
 691  8D03 22 20 8C     	ld (India_SP),hl
 692  8D06
 693  8D06 21 24 8C     	ld hl,Ctrl_3
 694  8D09 CB D6        	set 2,(hl)
 695  8D0B CD 4F 8E     	call Change
 696  8D0E
 697  8D0E C5           2 push bc 												; Nº de entidades en curso.
 698  8D0F
 699  8D0F CD D4 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 700  8D12 ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 701  8D16
 702  8D16              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 703  8D16
 704  8D16              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 705  8D16              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 706  8D16
 707  8D16 3A 2B 8C     	ld a,(Impacto2)
 708  8D19 CB 5F        	bit 3,a
 709  8D1B C4 F3 9F     	call nz,Compara_con_coordenadas_de_disparo
 710  8D1E
 711  8D1E 3A B7 8B     	ld a,(Impacto)
 712  8D21 CB 4F        	bit 1,a
 713  8D23 C4 DB 91     	call nz,Genera_explosion
 714  8D26 20 31        	jr nz,Gestiona_siguiente_entidad
 715  8D28
 716  8D28 3A B7 8B     	ld a,(Impacto)
 717  8D2B A7           	and a
 718  8D2C 28 0C        	jr z,3F
 719  8D2E
 720  8D2E              ; IMPACTO en entidad por colisión con Amadeus.
 721  8D2E
 722  8D2E              ; 5/7/24
 723  8D2E              ; Nota importante:
 724  8D2E              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 725  8D2E              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 726  8D2E              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 727  8D2E
 728  8D2E 3A 71 89     	ld a,(Impacto_Amadeus)
 729  8D31 A7           	and a
 730  8D32 C4 DB 91     	call nz,Genera_explosion
 731  8D35 20 22        	jr nz,Gestiona_siguiente_entidad
 732  8D37
 733  8D37              ; Falsa colisión !!!
 734  8D37
 735  8D37 32 B7 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 736  8D3A
 737  8D3A              ; -------------------------------------------
 738  8D3A
 739  8D3A CD F3 8E     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 740  8D3D CD 2F 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 741  8D40 CD E3 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 742  8D43 CD DB 94     	call Genera_datos_de_impresion
 743  8D46 CD 7E 93     	call Decrementa_Contador_de_mov_masticados
 744  8D49
 745  8D49              ; -------------------------------------------
 746  8D49
 747  8D49              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 748  8D49
 749  8D49 2A B8 8B     	ld hl,(Puntero_de_impresion)
 750  8D4C CD AF 94     	call Genera_coordenadas
 751  8D4F
 752  8D4F              ; TODO: Generamos disparo ???
 753  8D4F
 754  8D4F 3A 16 8C     	ld a,(Permiso_de_disparo_Entidades)
 755  8D52 A7           	and a
 756  8D53 C4 E4 8D     	call nz,Entidad_genera_disparo_si_procede
 757  8D56
 758  8D56 CD 81 A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 759  8D59
 760  8D59              Gestiona_siguiente_entidad
 761  8D59
 762  8D59 CD 50 93      	call Store_Restore_cajas
 763  8D5C C1           	pop bc
 764  8D5D 10 AF        	djnz 2B
 765  8D5F
 766  8D5F              ; Hemos gestionado todas las entidades.
 767  8D5F              ; ----- ----- -----
 768  8D5F
 769  8D5F CD 07 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 770  8D62 CD 1E 8F     	call Ordena_tabla_de_impresion
 771  8D65 CD 7C 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 772  8D68
 773  8D68              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 774  8D68              ; Hemos gestionado todas las unidades.
 775  8D68              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 776  8D68
 777  8D68              ;	ld hl,Ctrl_1
 778  8D68              ;	res 2,(hl)
 779  8D68
 780  8D68 CD C4 8E     	call Borra_diferencia
 781  8D6B
 782  8D6B 3A 24 8C     	ld a,(Ctrl_3)
 783  8D6E CB 5F        	bit 3,a
 784  8D70 20 04        	jr nz,Gestion_de_Amadeus
 785  8D72
 786  8D72 EB           	ex de,hl
 787  8D73 71           	ld (hl),c
 788  8D74 2C           	inc l
 789  8D75 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 790  8D76
 791  8D76              ;! GESTIONA AMADEUS !!!!!!!!!!
 792  8D76
 793  8D76              Gestion_de_Amadeus
 794  8D76
 795  8D76 21 24 8C     	ld hl,Ctrl_3
 796  8D79 CB 76        	bit 6,(hl)
 797  8D7B 28 13        	jr z,Amadeus_vivo
 798  8D7D
 799  8D7D              ; Amadeus ha sido destruido.
 800  8D7D              ; Decrementa (Temp_new_live).
 801  8D7D
 802  8D7D 21 38 8C     	ld hl,Temp_new_live
 803  8D80 35           	dec (hl)
 804  8D81 20 26        	jr nz,End_frame
 805  8D83
 806  8D83              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 807  8D83
 808  8D83 21 51 8C     	ld hl,Lives
 809  8D86 35           	dec (hl)
 810  8D87
 811  8D87              ;! Fin del juego
 812  8D87
 813  8D87 F3           	di
 814  8D88 28 FE        	jr z,$
 815  8D8A FB           	ei
 816  8D8B
 817  8D8B              ; Nueva nave.
 818  8D8B
 819  8D8B CD F5 8D     	call Reinicia_Amadeus
 820  8D8E 18 19        	jr End_frame
 821  8D90
 822  8D90              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 823  8D90
 824  8D90              Amadeus_vivo
 825  8D90
 826  8D90 3A 71 89     	ld a,(Impacto_Amadeus)
 827  8D93 A7           	and a
 828  8D94 C4 0B 92     	call nz, Genera_explosion_Amadeus
 829  8D97 20 10        	jr nz, End_frame
 830  8D99
 831  8D99 CD C1 91     	call Teclado
 832  8D9C
 833  8D9C 21 24 8C     	ld hl,Ctrl_3
 834  8D9F CB 6E        	bit 5,(hl)
 835  8DA1 28 06        	jr z,End_frame
 836  8DA3
 837  8DA3              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 838  8DA3
 839  8DA3 CD 6A 8E     	call Change_Amadeus
 840  8DA6 CD 2A 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 841  8DA9
 842  8DA9              End_frame
 843  8DA9
 844  8DA9              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 845  8DA9              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 846  8DA9
 847  8DA9 CD 51 9F     	call Genera_datos_de_impresion_disparos_Entidades
 848  8DAC              ;	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 849  8DAC              ;	call Calcula_bytes_pintado_disparos
 850  8DAC              ;	call Limpia_album_de_pintado_disparos
 851  8DAC
 852  8DAC              ; ------------ ------------- --------------
 853  8DAC
 854  8DAC 2A 06 8C     	ld hl,(Album_de_borrado)
 855  8DAF 22 1E 8C     	ld (Scanlines_album_SP),hl
 856  8DB2
 857  8DB2 21 24 8C     	ld hl,Ctrl_3
 858  8DB5 CB C6        	set 0,(hl) 											; Indica Frame completo.
 859  8DB7 CB 9E        	res 3,(hl)
 860  8DB9 CB A6        	res 4,(hl)
 861  8DBB
 862  8DBB AF           	xor a
 863  8DBC D3 FE        	out ($fe),a
 864  8DBE
 865  8DBE 76           	halt
 866  8DBF
 867  8DBF              ; ----------------------------------------
 868  8DBF
 869  8DBF              ;	ld a,(Ctrl_1) 										; Existe Loop?
 870  8DBF              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 871  8DBF CA C0 8C     	jp z,Main
 872  8DC2
 873  8DC2              ;------------------------------------------
 874  8DC2              ;
 875  8DC2              ;	14/09/24
 876  8DC2
 877  8DC2              Autoriza_disparo_de_entidades
 878  8DC2
 879  8DC2 3E 01        	ld a,1
 880  8DC4 32 16 8C     	ld (Permiso_de_disparo_Entidades),a
 881  8DC7
 882  8DC7 3A 41 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 883  8DCA 32 42 8C     	ld (CLOCK_disparo_entidad),a
 884  8DCD
 885  8DCD 2A 3B 8C     	ld hl,(RND_SP_Disparos)
 886  8DD0
 887  8DD0 7E           2 ld a,(hl)
 888  8DD1 A7           	and a
 889  8DD2 28 08        	jr z,1F
 890  8DD4
 891  8DD4 32 3D 8C     	ld (DB_RND_disparos),a
 892  8DD7 23           	inc hl
 893  8DD8 22 3B 8C     	ld (RND_SP_Disparos),hl
 894  8DDB
 895  8DDB C9           	ret
 896  8DDC
 897  8DDC 21 F6 88     1	ld hl,Numeros_aleatorios
 898  8DDF 22 3B 8C     	ld (RND_SP_Disparos),hl
 899  8DE2 18 EC        	jr 2B
 900  8DE4
 901  8DE4              ;------------------------------------------
 902  8DE4              ;
 903  8DE4              ;	14/09/24
 904  8DE4              ;
 905  8DE4              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 906  8DE4
 907  8DE4              Entidad_genera_disparo_si_procede
 908  8DE4
 909  8DE4 3A 3D 8C     	ld a,(DB_RND_disparos)
 910  8DE7 CB 4F        	bit 1,a
 911  8DE9 F5           	push af											; Guardamos FLAGS.
 912  8DEA
 913  8DEA 17           	rla
 914  8DEB 17           	rla
 915  8DEC
 916  8DEC 32 3D 8C     	ld (DB_RND_disparos),a
 917  8DEF
 918  8DEF F1           	pop af
 919  8DF0 C4 8C 9F     	call nz,Genera_disparo_de_entidad_maldosa
 920  8DF3
 921  8DF3 C9           	ret
 922  8DF4
 923  8DF4
 924  8DF4              ; RECARGA DE NUEVA OLEADA.
 925  8DF4
 926  8DF4              ;	ld a,(Contador_de_frames)
 927  8DF4              ;	ld b,a
 928  8DF4              ;	ld a,(Activa_recarga_cajas)
 929  8DF4              ;	cp b
 930  8DF4              ;	jr z,20F
 931  8DF4
 932  8DF4              ;	ld hl,Ctrl_1
 933  8DF4              ;	set 4,(hl)
 934  8DF4              ;	jp Main
 935  8DF4
 936  8DF4              ;20 ld hl,Ctrl_1
 937  8DF4              ;	res 4,(hl)
 938  8DF4
 939  8DF4              ;	ld a,(Contador_de_frames)
 940  8DF4
 941  8DF4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 942  8DF4              ;! _ IMPREDECIBLE !!!!
 943  8DF4
 944  8DF4              ;	add 10
 945  8DF4              ;	ld (Clock_next_entity),a
 946  8DF4
 947  8DF4              ;	jp 4B
 948  8DF4
 949  8DF4 C9           	ret
 950  8DF5
 951  8DF5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 952  8DF5              ;
 953  8DF5              ;	16/11/23
 954  8DF5
 955  8DF5              ;;Gestiona_Amadeus
 956  8DF5
 957  8DF5              ;! Activa/desactiva impacto con Amadeus.
 958  8DF5
 959  8DF5              ;	ld a,(Impacto)
 960  8DF5              ;	and a
 961  8DF5              ;	jr nz,2F
 962  8DF5
 963  8DF5              ;;	call Mov_Amadeus
 964  8DF5
 965  8DF5              ;;2 ld a,(Ctrl_0)
 966  8DF5              ;;	bit 4,a
 967  8DF5              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 968  8DF5
 969  8DF5              ;;	call Guarda_foto_entidad_a_pintar
 970  8DF5              ;;	call Guarda_datos_de_borrado_Amadeus
 971  8DF5
 972  8DF5              ;;1 ld hl,Ctrl_0
 973  8DF5              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 974  8DF5
 975  8DF5              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 976  8DF5
 977  8DF5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 978  8DF5
 979  8DF5              ;	call Calcula_numero_de_disparotes
 980  8DF5
 981  8DF5              ;;	ret
 982  8DF5
 983  8DF5              ; -----------------------------
 984  8DF5              ;
 985  8DF5              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 986  8DF5              ;
 987  8DF5              ;	INPUTS: B a de estar a "0".
 988  8DF5
 989  8DF5              ;Prepara_Borra_sprites
 990  8DF5
 991  8DF5              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 992  8DF5              ;	ld a,l
 993  8DF5              ;	ret z
 994  8DF5
 995  8DF5              ;	srl a
 996  8DF5
 997  8DF5              ;2 sub 16
 998  8DF5              ;	jr z,1F
 999  8DF5              ;	inc b
1000  8DF5              ;	jr 2B
1001  8DF5
1002  8DF5              ;1 inc b
1003  8DF5
1004  8DF5              ;	exx
1005  8DF5              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1006  8DF5              ;	exx
1007  8DF5
1008  8DF5              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1009  8DF5              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1010  8DF5
1011  8DF5              ;	ret
1012  8DF5
1013  8DF5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1014  8DF5              ;
1015  8DF5              ;	24/07/24
1016  8DF5
1017  8DF5              Reinicia_Amadeus
1018  8DF5
1019  8DF5              ;	Reinicia posición y estado.
1020  8DF5
1021  8DF5 21 CF 50     	ld hl,$50cf
1022  8DF8 22 72 89     	ld (p.imp.amadeus),hl
1023  8DFB 21 F0 E0     	ld hl,$e0f0
1024  8DFE 22 74 89     	ld (Pamm_Amadeus),hl
1025  8E01 21 3D 00     	ld hl,$003d
1026  8E04 22 76 89     	ld (Comm_Amadeus),hl
1027  8E07
1028  8E07              ;	limpiamos el álbum de borrado.
1029  8E07
1030  8E07 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1031  8E0A
1032  8E0A AF           	xor a
1033  8E0B 77           	ld (hl),a
1034  8E0C
1035  8E0C E5           	push hl
1036  8E0D D1           	pop de
1037  8E0E 13           	inc de
1038  8E0F
1039  8E0F 01 23 00     	ld bc,35
1040  8E12 ED B0        	ldir
1041  8E14
1042  8E14 CD 2A 90     	call Genera_datos_de_impresion_Amadeus
1043  8E17
1044  8E17              ;	Reinicia temporizaciones.
1045  8E17
1046  8E17 CD 07 91     	call Inicia_Shield
1047  8E1A
1048  8E1A 3E 5A        	ld a,90
1049  8E1C 32 4E 8C     	ld (Shield),a
1050  8E1F
1051  8E1F 3E 64        	ld a,100
1052  8E21 32 38 8C     	ld (Temp_new_live),a
1053  8E24
1054  8E24              ; 	Restauramos el FLAG: Amadeus vivo.
1055  8E24
1056  8E24 21 24 8C     	ld hl,Ctrl_3
1057  8E27 CB B6        	res 6,(hl)
1058  8E29
1059  8E29              ;	Fuerza la impresión de la nave en el siguiente frame.
1060  8E29
1061  8E29 21 24 8C      	ld hl,Ctrl_3
1062  8E2C CB EE        	set 5,(hl)
1063  8E2E
1064  8E2E C9           	ret
1065  8E2F
1066  8E2F              ; --------------------------------------------------------------------------------------------------------------
1067  8E2F              ;
1068  8E2F              ;	12/05/24
1069  8E2F
1070  8E2F 3A BE 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1071  8E32 CB 27        	sla a
1072  8E34 32 BE 8B     	ld (Velocidad),a
1073  8E37 E6 10        	and $10
1074  8E39 C8           	ret z
1075  8E3A
1076  8E3A              ; Restaura (Velocidad) a razón del nº de vueltas.
1077  8E3A
1078  8E3A 3A B6 8B     	ld a,(Contador_de_vueltas)
1079  8E3D CB 2F        	sra a
1080  8E3F CB 2F        	sra a
1081  8E41 32 BE 8B     	ld (Velocidad),a
1082  8E44
1083  8E44 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1084  8E47 23           	inc hl
1085  8E48 23           	inc hl
1086  8E49 23           	inc hl
1087  8E4A 23           	inc hl
1088  8E4B 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1089  8E4E
1090  8E4E C9           	ret
1091  8E4F
1092  8E4F              ; --------------------------------------------------------------------------------------------------------------
1093  8E4F              ;
1094  8E4F              ;	25/08/24
1095  8E4F
1096  8E4F              Change
1097  8E4F
1098  8E4F 3A 1B 8C     	ld a,(Switch)
1099  8E52 EE 01        	xor 1
1100  8E54 32 1B 8C     	ld (Switch),a
1101  8E57 2A 04 8C     	ld hl,(Album_de_pintado)
1102  8E5A ED 5B 06 8C  	ld de,(Album_de_borrado)
1103  8E5E EB           	ex de,hl
1104  8E5F 22 04 8C     	ld (Album_de_pintado),hl
1105  8E62 22 1E 8C     	ld (Scanlines_album_SP),hl
1106  8E65 ED 53 06 8C  	ld (Album_de_borrado),de
1107  8E69 C9           	ret
1108  8E6A
1109  8E6A              Change_Amadeus
1110  8E6A
1111  8E6A 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1112  8E6D ED 5B 0A 8C  	ld de,(Album_de_borrado_Amadeus)
1113  8E71 EB           	ex de,hl
1114  8E72 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1115  8E75 ED 53 0A 8C  	ld (Album_de_borrado_Amadeus),de
1116  8E79 C9           	ret
1117  8E7A
1118  8E7A              Change_Disparos
1119  8E7A
1120  8E7A 2A 0C 8C     	ld hl,(Album_de_pintado_disparos)
1121  8E7D ED 5B 0E 8C  	ld de,(Album_de_borrado_disparos)
1122  8E81 EB           	ex de,hl
1123  8E82 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1124  8E85 ED 53 0E 8C  	ld (Album_de_borrado_disparos),de
1125  8E89 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1126  8E8C
1127  8E8C 3A 12 8C     	ld a,(Num_de_bytes_album_de_disparos)
1128  8E8F 32 13 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1129  8E92
1130  8E92 C9           	ret
1131  8E93
1132  8E93              ; ------------------------------------
1133  8E93              ;
1134  8E93              ; 1/05/24
1135  8E93
1136  8E93              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1137  8E93              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1138  8E93
1139  8E93              ;	DESTRUYE: HL,DE,A
1140  8E93              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1141  8E93
1142  8E93              ;	Variables implicadas: (RND_SP).
1143  8E93
1144  8E93              Extrae_numero_aleatorio_y_avanza
1145  8E93
1146  8E93 21 00 89     	ld hl,Tabla_de_pintado
1147  8E96 EB           	ex de,hl
1148  8E97 2A 39 8C     	ld hl,(RND_SP)
1149  8E9A EB           	ex de,hl
1150  8E9B A7           	and a
1151  8E9C ED 52        	sbc hl,de
1152  8E9E
1153  8E9E 2A 39 8C     	ld hl,(RND_SP)
1154  8EA1 20 06        	jr nz,1F
1155  8EA3
1156  8EA3              ; Sitúa HL al principio de la tabla de nº aleatorios.
1157  8EA3
1158  8EA3 21 F6 88     	ld hl,Numeros_aleatorios
1159  8EA6 22 39 8C     	ld (RND_SP),HL
1160  8EA9
1161  8EA9              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1162  8EA9
1163  8EA9 7E           1 ld a,(hl)
1164  8EAA 23           	inc hl
1165  8EAB 22 39 8C     	ld (RND_SP),hl
1166  8EAE C9           	ret
1167  8EAF
1168  8EAF              ; ------------------------------------
1169  8EAF              ;
1170  8EAF              ; 1/05/24
1171  8EAF
1172  8EAF              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1173  8EAF              ; (1 a 4 segundos).
1174  8EAF              ; Actualizamos (Clock_next_entity) con A.
1175  8EAF
1176  8EAF              ;	DESTRUYE: A y B.
1177  8EAF              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1178  8EAF              ;			 Actualiza (Clock_next_entity) con A.
1179  8EAF
1180  8EAF              ;	Variables implicadas: (Clock_next_entity).
1181  8EAF
1182  8EAF              ; Notas:
1183  8EAF
1184  8EAF              ; 	$32 1 seg.
1185  8EAF              ; 	$64 2 seg.
1186  8EAF              ; 	$96 3 seg.
1187  8EAF              ; 	$c8 4 seg.
1188  8EAF              ; 	$fa 5 seg.
1189  8EAF
1190  8EAF              ; $ffff 1310,7 seg, 22 minutos.
1191  8EAF
1192  8EAF              ;	$0100  5 seg. aproximadamente.
1193  8EAF              ;	$0200 10 seg. aproximadamente.
1194  8EAF              ;	$0300 15 seg. aproximadamente.
1195  8EAF              ;	$0400 20 seg. aproximadamente.
1196  8EAF              ;	$0500 25 seg. aproximadamente.
1197  8EAF              ;	$0600 30 seg. aproximadamente.
1198  8EAF
1199  8EAF              Define_Clock_next_entity
1200  8EAF
1201  8EAF FE 34        	cp $34
1202  8EB1 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1203  8EB3
1204  8EB3              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1205  8EB3
1206  8EB3 4F           3 ld c,a
1207  8EB4 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1208  8EB6 2A 78 5C     	ld hl,(FRAMES)
1209  8EB9 A7           	and a
1210  8EBA ED 4A        	adc hl,bc
1211  8EBC 22 3E 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1212  8EBF C9           	ret
1213  8EC0
1214  8EC0 3E 34        1 ld a,$34
1215  8EC2 18 EF        	jr 3B
1216  8EC4
1217  8EC4              ; ------------------------------------
1218  8EC4              ;
1219  8EC4              ; 18/03/24
1220  8EC4
1221  8EC4              Borra_diferencia
1222  8EC4
1223  8EC4 ED 4B 1E 8C  	ld bc,(Scanlines_album_SP)
1224  8EC8
1225  8EC8 3A 1B 8C     	ld a,(Switch)
1226  8ECB A7           	and a
1227  8ECC 28 08        	jr z,2F
1228  8ECE
1229  8ECE 2A 19 8C     	ld hl,(Techo_Scanlines_album_2)
1230  8ED1 11 19 8C     	ld de,Techo_Scanlines_album_2
1231  8ED4 18 06        	jr 3F
1232  8ED6
1233  8ED6 2A 17 8C     2 ld hl,(Techo_Scanlines_album)
1234  8ED9 11 17 8C     	ld de,Techo_Scanlines_album
1235  8EDC
1236  8EDC              ; Diferencia.
1237  8EDC
1238  8EDC ED 42        3 sbc hl,bc
1239  8EDE
1240  8EDE C8           	ret z
1241  8EDF D8           	ret c
1242  8EE0
1243  8EE0              ; Nuevo techo, (más bajo que el anterior).
1244  8EE0              ; Fijamos nuevo techo y borramos bytes sobrantes.
1245  8EE0
1246  8EE0 EB           	ex de,hl
1247  8EE1
1248  8EE1 71           	ld (hl),c
1249  8EE2 2C           	inc l
1250  8EE3 70           	ld (hl),b
1251  8EE4
1252  8EE4 AF           	xor a
1253  8EE5 43           	ld b,e
1254  8EE6
1255  8EE6 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1256  8EE9
1257  8EE9 77           1 ld (hl),a
1258  8EEA 23           	inc hl
1259  8EEB 10 FC        	djnz 1B
1260  8EED
1261  8EED              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1262  8EED
1263  8EED 21 24 8C     	ld hl,Ctrl_3
1264  8EF0 CB DE        	set 3,(hl)
1265  8EF2
1266  8EF2 C9           	ret
1267  8EF3
1268  8EF3              ; --------------------------------------------------------------------------------------------------------------
1269  8EF3              ;
1270  8EF3              ;	26/3/24
1271  8EF3
1272  8EF3              Recauda_informacion_de_entidad_en_curso
1273  8EF3
1274  8EF3              ; Almacena la Coordenada Y de la entidad en curso.
1275  8EF3
1276  8EF3              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1277  8EF3
1278  8EF3 3A B5 8B     	ld a,(Coordenada_y)
1279  8EF6 2A 20 8C     	ld hl,(India_SP)
1280  8EF9 77           	ld (hl),a
1281  8EFA 2C           	inc l
1282  8EFB
1283  8EFB              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1284  8EFB
1285  8EFB ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
1286  8EFF
1287  8EFF 73           	ld (hl),e
1288  8F00 2C           	inc l
1289  8F01 72           	ld (hl),d
1290  8F02 2C           	inc l
1291  8F03
1292  8F03 22 20 8C     	ld (India_SP),hl
1293  8F06
1294  8F06 C9           	ret
1295  8F07
1296  8F07              ; --------------------------------------------------------------------------------------------------------------
1297  8F07              ;
1298  8F07              ;	27/03/24
1299  8F07              ;
1300  8F07
1301  8F07              Inicializa_India_y_limpia_Tabla_de_impresion
1302  8F07
1303  8F07 2A 20 8C     	ld hl,(India_SP)
1304  8F0A 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1305  8F0D
1306  8F0D 79           	ld a,c
1307  8F0E 95           	sub l
1308  8F0F 28 06        	jr z,2F
1309  8F11 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1310  8F12              ;														; _ y pasamos a inicializar (India_SP).
1311  8F12 AF           	xor a
1312  8F13
1313  8F13 77           1 ld (hl),a
1314  8F14 2C           	inc l
1315  8F15 10 FC        	djnz 1B												; Limpia Tabla.
1316  8F17
1317  8F17 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1318  8F1A 22 20 8C     	ld (India_SP),hl
1319  8F1D
1320  8F1D C9           	ret
1321  8F1E
1322  8F1E              ; --------------------------------------------------------------------------------------------------------------
1323  8F1E              ;
1324  8F1E              ;	31/3/24
1325  8F1E
1326  8F1E              Ordena_tabla_de_impresion
1327  8F1E
1328  8F1E              ; 5794 T/states.
1329  8F1E              ; 6278 T/states.
1330  8F1E              ; 5310 T/states.
1331  8F1E
1332  8F1E              ; Inicializamos punteros (India_SP) e (India_2_SP).
1333  8F1E              ; Inicializamos contador de comparaciones, [C].
1334  8F1E              ; Cargamos los registros A y B para efectuar comparación.
1335  8F1E
1336  8F1E FD 2E 00     	ld iyl,0
1337  8F21
1338  8F21 3A FB 8B     	ld a,(Entidades_en_curso)
1339  8F24 FE 04        	cp 4 	;	4
1340  8F26 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1341  8F27
1342  8F27 3D           	dec a
1343  8F28 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1344  8F29 51           	ld d,c 										; Copia de respaldo.
1345  8F2A
1346  8F2A 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1347  8F2B
1348  8F2B 21 03 89     	ld hl,Tabla_de_pintado+3
1349  8F2E 46           	ld b,(hl)
1350  8F2F 22 22 8C     	ld (India_2_SP),hl
1351  8F32
1352  8F32 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1353  8F33 DC 5B 8F     	call c, Avanza_India_2_SP
1354  8F36 CC 5B 8F     	call z, Avanza_India_2_SP
1355  8F39
1356  8F39 FD 2D        	dec iyl
1357  8F3B 28 18        	jr z,2F
1358  8F3D
1359  8F3D
1360  8F3D              ; --------------------------------------------------------------------------------------------------------------
1361  8F3D              ;
1362  8F3D              ;	7/4/24
1363  8F3D
1364  8F3D              Trueque
1365  8F3D
1366  8F3D              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1367  8F3D              ;  			A contiene en nº de fila de (India_SP).
1368  8F3D              ;			HL contiene (India_2_SP).
1369  8F3D
1370  8F3D D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1371  8F3E E5           	push hl										; Preservo (India_2_SP).
1372  8F3F
1373  8F3F ED 5B 20 8C  	ld de,(India_SP)
1374  8F43 EB           	ex de,hl
1375  8F44 70           	ld (hl),b
1376  8F45 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1377  8F46
1378  8F46 CD 87 8F     	call Intercambia_1_byte
1379  8F49 CD 87 8F     	call Intercambia_1_byte
1380  8F4C
1381  8F4C
1382  8F4C              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1383  8F4C              ; Recuperamos (India_2_SP) en HL.
1384  8F4C
1385  8F4C 2A 20 8C     	ld hl,(India_SP)
1386  8F4F 7E           	ld a,(hl)
1387  8F50
1388  8F50 E1           	pop hl
1389  8F51 D1           	pop de
1390  8F52
1391  8F52              ; --------------------------------------------------------------------------------------------------------------
1392  8F52
1393  8F52 CD 5B 8F     	call Avanza_India_2_SP
1394  8F55
1395  8F55 14           2 inc d
1396  8F56 15           	dec d
1397  8F57 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1398  8F58 18 D8        	jr 1B
1399  8F5A
1400  8F5A C9           	ret
1401  8F5B
1402  8F5B              ; ----- ----- ----- ----- -----
1403  8F5B
1404  8F5B              Avanza_India_2_SP
1405  8F5B
1406  8F5B 0D           	dec c
1407  8F5C 28 0A        	jr z,Avanza_punteros_indios
1408  8F5E
1409  8F5E FD 2C        	inc iyl
1410  8F60
1411  8F60 2C           	inc l
1412  8F61 2C           	inc l
1413  8F62 2C           	inc l
1414  8F63
1415  8F63 46           	ld b,(hl)
1416  8F64 22 22 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1417  8F67
1418  8F67 C9           	ret
1419  8F68
1420  8F68              ; ----- ----- ----- ----- -----
1421  8F68
1422  8F68              Avanza_punteros_indios
1423  8F68
1424  8F68 15           	dec d
1425  8F69 28 15        	jr z,Prepara_salida
1426  8F6B
1427  8F6B 4A           	ld c,d
1428  8F6C
1429  8F6C 2A 20 8C     	ld hl,(India_SP)
1430  8F6F 2C           	inc l
1431  8F70 2C           	inc l
1432  8F71 2C           	inc l
1433  8F72 7E           	ld a,(hl)
1434  8F73 22 20 8C     	ld (India_SP),hl
1435  8F76
1436  8F76 2C           	inc l
1437  8F77 2C           	inc l
1438  8F78 2C           	inc l
1439  8F79 46           	ld b,(hl)
1440  8F7A 22 22 8C     	ld (India_2_SP),hl
1441  8F7D
1442  8F7D FD 2C        	inc iyl
1443  8F7F
1444  8F7F C9           	ret
1445  8F80
1446  8F80              Prepara_salida
1447  8F80
1448  8F80 21 00 89     	ld hl,Tabla_de_pintado
1449  8F83 22 20 8C     	ld (India_SP),hl
1450  8F86 C9           	ret
1451  8F87
1452  8F87
1453  8F87 2C           Intercambia_1_byte inc l
1454  8F88 1C           	inc e
1455  8F89 46           	ld b,(hl)
1456  8F8A 1A           	ld a,(de)
1457  8F8B EB           	ex de,hl
1458  8F8C 70           	ld (hl),b
1459  8F8D 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1460  8F8E C9           	ret
1461  8F8F
1462  8F8F              ; -----------------------------------------------------------------------------------
1463  8F8F              ;
1464  8F8F              ;	20/01/24
1465  8F8F              ;
1466  8F8F              ;
1467  8F8F
1468  8F8F              Construye_movimientos_masticados_entidad
1469  8F8F
1470  8F8F 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1471  8F92 E5           	push hl
1472  8F93 CD D6 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1473  8F96              ;															; _ el (Contador_de_mov_masticados).
1474  8F96 CD 9F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1475  8F99              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1476  8F99 CD CD 99     	call Recompone_posicion_inicio
1477  8F9C
1478  8F9C CD FD 96     1 call Draw
1479  8F9F CD BB 8F     	call Guarda_movimiento_masticado
1480  8FA2
1481  8FA2 CD 7A 9D     	call Movimiento
1482  8FA5
1483  8FA5 3A 24 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1484  8FA8 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1485  8FAA 28 F0        	jr z,1B
1486  8FAC
1487  8FAC              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1488  8FAC              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1489  8FAC
1490  8FAC E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1491  8FAD 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1492  8FB0
1493  8FB0              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1494  8FB0
1495  8FB0 CD DE 9E     	call Situa_en_contador_general_de_mov_masticados
1496  8FB3
1497  8FB3              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1498  8FB3              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1499  8FB3
1500  8FB3 ED 4B BC 8B  	ld bc,(Contador_de_mov_masticados)
1501  8FB7
1502  8FB7 71           	ld (hl),c
1503  8FB8 23           	inc hl
1504  8FB9 70           	ld (hl),b
1505  8FBA
1506  8FBA C9           	ret
1507  8FBB
1508  8FBB              ; -----------------------------------------------------------------------------------
1509  8FBB              ;
1510  8FBB              ;	28/12/23
1511  8FBB              ;
1512  8FBB              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1513  8FBB              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1514  8FBB
1515  8FBB              Guarda_movimiento_masticado
1516  8FBB
1517  8FBB ED 73 00 8C  	ld (Stack),sp
1518  8FBF ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1519  8FC3
1520  8FC3 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1521  8FC5 FD E5            push iy 												; Pushea Puntero_objeto.
1522  8FC7
1523  8FC7 ED 7B 00 8C      ld sp,(Stack)
1524  8FCB
1525  8FCB 2A BC 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1526  8FCE 23           	inc hl
1527  8FCF 22 BC 8B     	ld (Contador_de_mov_masticados),hl
1528  8FD2
1529  8FD2 CD D6 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1530  8FD5              ;															; _ el (Contador_de_mov_masticados).
1531  8FD5 C9               ret
1532  8FD6
1533  8FD6              ; --------------------------------------------------------------------------------------------------------------
1534  8FD6              ;
1535  8FD6              ;	12/1/24
1536  8FD6              ;
1537  8FD6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1538  8FD6
1539  8FD6              Actualiza_Puntero_de_almacen_de_mov_masticados
1540  8FD6
1541  8FD6 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1542  8FD9 01 04 00     	ld bc,4
1543  8FDC A7           	and a
1544  8FDD ED 4A        	adc hl,bc
1545  8FDF 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1546  8FE2 C9           	ret
1547  8FE3
1548  8FE3              ; --------------------------------------------------------------------------------------------------------------
1549  8FE3              ;
1550  8FE3              ;	24/03/24
1551  8FE3              ;
1552  8FE3              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1553  8FE3              ;
1554  8FE3              ;	IX contiene el puntero de impresión.
1555  8FE3              ;	DE contiene (Puntero_objeto).
1556  8FE3
1557  8FE3
1558  8FE3              Cargamos_registros_con_mov_masticado
1559  8FE3
1560  8FE3 ED 73 00 8C  	ld (Stack),sp
1561  8FE7 ED 7B BA 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1562  8FEB
1563  8FEB D1           	pop de 															; DE contiene Puntero_objeto
1564  8FEC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1565  8FEE
1566  8FEE ED 73 BA 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1567  8FF2 ED 7B 00 8C  	ld sp,(Stack)
1568  8FF6
1569  8FF6 7B           	ld a,e
1570  8FF7 82           	add d															; Comprueba si ya no hay datos en el almacén.
1571  8FF8
1572  8FF8 CC 86 93     	call z,Reinicia_entidad_maliciosa
1573  8FFB
1574  8FFB C9           	ret
1575  8FFC
1576  8FFC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1577  8FFC              ;
1578  8FFC              ;	22/7/24
1579  8FFC
1580  8FFC              Cargamos_registros_con_explosion
1581  8FFC
1582  8FFC
1583  8FFC 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1584  8FFF CD 99 90     	call Extrae_address
1585  9002
1586  9002 5D           	ld e,l
1587  9003 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1588  9004
1589  9004 DD 2A B8 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1590  9008
1591  9008 C9           	ret
1592  9009
1593  9009
1594  9009              Cargamos_registros_con_explosion_Amadeus
1595  9009
1596  9009 2A 74 89     	ld hl,(Pamm_Amadeus)
1597  900C CD 99 90     	call Extrae_address
1598  900F
1599  900F 5D           	ld e,l
1600  9010 54           	ld d,h
1601  9011
1602  9011 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1603  9015
1604  9015 C9           	ret
1605  9016
1606  9016              ; --------------------------------------------------------------------------------------------------------------
1607  9016              ;
1608  9016              ;	17/06/24
1609  9016              ;
1610  9016              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1611  9016              ;
1612  9016              ;	IX contiene el puntero de impresión.
1613  9016              ;	DE contiene (Puntero_objeto).
1614  9016
1615  9016
1616  9016              Cargamos_registros_con_mov_masticado_Amadeus
1617  9016
1618  9016 ED 73 00 8C  	ld (Stack),sp
1619  901A ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1620  901E D1           	pop de 															; DE contiene Puntero_objeto
1621  901F DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1622  9021 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1623  9025 ED 7B 00 8C  	ld sp,(Stack)
1624  9029 C9           	ret
1625  902A
1626  902A              ; ---------------------------------------------------------------------------------------------------------------------
1627  902A              ;
1628  902A              ;	18/6/24
1629  902A              ;
1630  902A              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1631  902A
1632  902A              Genera_datos_de_impresion_Amadeus
1633  902A
1634  902A 3A 71 89     	ld a,(Impacto_Amadeus)
1635  902D A7           	and a
1636  902E 20 03        	jr nz,1F
1637  9030
1638  9030              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1639  9030              ; _apuntando a la correspondiente explosión.
1640  9030
1641  9030 CD 16 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1642  9033
1643  9033 DD 7D        1 ld a,ixl
1644  9035 E6 1F        	and $1f
1645  9037 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1646  903A
1647  903A 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1648  903D E5           	push hl
1649  903E
1650  903E 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1651  9041 22 1E 8C     	ld (Scanlines_album_SP),hl
1652  9044
1653  9044 CD DB 94     	call Genera_datos_de_impresion
1654  9047
1655  9047 E1           	pop hl
1656  9048 22 1E 8C     	ld (Scanlines_album_SP),hl
1657  904B
1658  904B C9           	ret
1659  904C
1660  904C              ; ---------------------------------------------------------------------------------------------------------------------
1661  904C              ;
1662  904C              ;	13/03/24
1663  904C              ;
1664  904C              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1665  904C
1666  904C              Inicia_albumes_de_lineas
1667  904C
1668  904C 21 00 80     	ld hl,Scanlines_album
1669  904F 22 04 8C     	ld (Album_de_pintado),hl
1670  9052 22 1E 8C     	ld (Scanlines_album_SP),hl
1671  9055
1672  9055 21 1A 81     	ld hl,Scanlines_album_2
1673  9058 22 06 8C     	ld (Album_de_borrado),hl
1674  905B
1675  905B C9           	ret
1676  905C
1677  905C              Inicia_albumes_de_lineas_Amadeus
1678  905C
1679  905C 21 34 82     	ld hl,Amadeus_scanlines_album
1680  905F 22 08 8C     	ld (Album_de_pintado_Amadeus),hl
1681  9062 21 58 82     	ld hl,Amadeus_scanlines_album_2
1682  9065 22 0A 8C     	ld (Album_de_borrado_Amadeus),hl
1683  9068
1684  9068 C9           	ret
1685  9069
1686  9069              Inicia_albumes_de_disparos
1687  9069
1688  9069 21 7C 82     	ld hl,Disparos_scanlines_album
1689  906C 22 0C 8C     	ld (Album_de_pintado_disparos),hl
1690  906F 21 B8 82     	ld hl,Disparos_scanlines_album_2
1691  9072 22 0E 8C     	ld (Album_de_borrado_disparos),hl
1692  9075
1693  9075 21 7C 82     	ld hl,Disparos_scanlines_album
1694  9078 22 10 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1695  907B
1696  907B C9           	ret
1697  907C
1698  907C              ; ---------------------------------------------------------------------------------------------------------------------
1699  907C              ;
1700  907C              ; 8/1/23
1701  907C              ;
1702  907C              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1703  907C              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1704  907C              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1705  907C
1706  907C              ; Destruye HL y DE !!!!!
1707  907C
1708  907C              Inicia_punteros_de_cajas
1709  907C
1710  907C 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1711  907F CD 99 90         call Extrae_address
1712  9082 22 F3 8B         ld (Puntero_store_caja),hl
1713  9085 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1714  9088 22 F7 8B     	ld (Indice_restore_caja),hl
1715  908B CD 99 90     	call Extrae_address
1716  908E 22 F5 8B     	ld (Puntero_restore_caja),hl
1717  9091 C9               ret
1718  9092
1719  9092              ; *************************************************************************************************************************************************************
1720  9092              ;
1721  9092              ; 8/1/23
1722  9092              ;
1723  9092              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1724  9092
1725  9092 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1726  9095 22 27 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1727  9098 C9           	ret
1728  9099
1729  9099              ; *************************************************************************************************************************************************************
1730  9099              ;
1731  9099              ; 20/10/22
1732  9099              ;
1733  9099              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1734  9099              ;
1735  9099              ; Destruye el puntero y DE !!!!!
1736  9099
1737  9099 5E           Extrae_address ld e,(hl)
1738  909A 23           	inc hl
1739  909B 56           	ld d,(hl)
1740  909C 2B           	dec hl
1741  909D EB           	ex de,hl
1742  909E C9           	ret
1743  909F
1744  909F              ; *************************************************************************************************************************************************************
1745  909F              ;
1746  909F              ;	20/1/24
1747  909F              ;
1748  909F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1749  909F              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1750  909F              ;
1751  909F              ;   Destruye HL y BC !!!!!,
1752  909F              ;
1753  909F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1754  909F              ;					"0" ..... Izquierda.
1755  909F
1756  909F              Inicia_Puntero_objeto
1757  909F
1758  909F 3A D2 8B     	ld a,(Cuad_objeto)
1759  90A2 E6 01        	and 1
1760  90A4 F5           	push af
1761  90A5 CC C1 90     	call z,Inicia_puntero_objeto_izq
1762  90A8 F1           	pop af
1763  90A9 C8           	ret z
1764  90AA CD AE 90     	call Inicia_puntero_objeto_der
1765  90AD C9           	ret
1766  90AE
1767  90AE              ; Arrancamos desde la parte izquierda de la pantalla.
1768  90AE              ; Iniciamos (Indice_Sprite_der).
1769  90AE
1770  90AE 2A C8 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1771  90B1 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
1772  90B4 CD 99 90     	call Extrae_address
1773  90B7 22 C5 8B     	ld (Puntero_objeto),hl
1774  90BA
1775  90BA 2A CA 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1776  90BD 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1777  90C0 C9           	ret
1778  90C1
1779  90C1              ; Arrancamos desde la parte derecha de la pantalla.
1780  90C1              ; Iniciamos (Indice_Sprite_izq).
1781  90C1
1782  90C1 2A CA 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1783  90C4 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
1784  90C7 CD 99 90     	call Extrae_address
1785  90CA 22 C5 8B     	ld (Puntero_objeto),hl
1786  90CD
1787  90CD 2A C8 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1788  90D0 22 CC 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1789  90D3 C9           	ret
1790  90D4
1791  90D4              ; **************************************************************************************************
1792  90D4              ;
1793  90D4              ;	06/07/24
1794  90D4              ;
1795  90D4              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1796  90D4
1797  90D4              Restore_entidad
1798  90D4
1799  90D4 2A F3 8B     	ld hl,(Puntero_store_caja)
1800  90D7 7E           	ld a,(hl)
1801  90D8 A7           	and a
1802  90D9 CC E7 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1803  90DC 28 F6        	jr z,Restore_entidad
1804  90DE
1805  90DE 11 B3 8B     	ld de,Bandeja_DRAW
1806  90E1 01 0C 00     	ld bc,12
1807  90E4 ED B0        	ldir
1808  90E6 C9           	ret
1809  90E7
1810  90E7              ; **************************************************************************************************
1811  90E7              ;
1812  90E7              ;	08/05/23
1813  90E7              ;
1814  90E7              ;	Incrementamos los dos punteros de entidades. (+1).
1815  90E7
1816  90E7              Incrementa_punteros_de_cajas
1817  90E7
1818  90E7 2A F5 8B     	ld hl,(Puntero_restore_caja)
1819  90EA 22 F3 8B     	ld (Puntero_store_caja),hl
1820  90ED 2A F7 8B     	ld hl,(Indice_restore_caja)
1821  90F0 23           	inc hl
1822  90F1 23           	inc hl
1823  90F2 22 F7 8B     	ld (Indice_restore_caja),hl
1824  90F5 CD 99 90         call Extrae_address
1825  90F8 22 F5 8B         ld (Puntero_restore_caja),hl
1826  90FB C9               ret
1827  90FC
1828  90FC              ; -----------------------------------------------------------
1829  90FC
1830  90FC              ; Teclado.
1831  90FC
1832  90FC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1833  90FE DB FE        	in a,($fe)
1834  9100 E6 01        	and $01
1835  9102 28 02        	jr z,1f
1836  9104 18 F6        	jr Pulsa_ENTER
1837  9106 C9           1 ret
1838  9107
1839  9107              ; **************************************************************************************************
1840  9107              ;
1841  9107              ; Temporización.
1842  9107
1843  9107              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1844  9107              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1845  9107              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1846  9107              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1847  9107
1848  9107              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1849  9107              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1850  9107              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1851  9107
1852  9107              ; A partir de $4f61 no hace falta DELAY.
1853  9107
1854  9107              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1855  9107
1856  9107              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1857  9107              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1858  9107              ;	LD A,B
1859  9107              ;	AND A
1860  9107              ;	JR NZ,wait
1861  9107              ;	RET
1862  9107
1863  9107              ; ---------------------------------------------------------------------------------------------------------------
1864  9107              ;
1865  9107              ;	13/07/24
1866  9107              ;
1867  9107
1868  9107              Inicia_Shield
1869  9107
1870  9107 21 48 8C     	ld hl,Datos_Shield
1871  910A 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1872  910D
1873  910D 7E           	ld a,(hl)
1874  910E 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1875  9111
1876  9111 3E 01        	ld a,1
1877  9113 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1878  9116
1879  9116 C9           	ret
1880  9117
1881  9117              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1882  9117              ;
1883  9117              ;	4/6/24
1884  9117              ;
1885  9117              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1886  9117              ;
1887  9117              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1888  9117              ;
1889  9117
1890  9117              Actualiza_pantalla
1891  9117
1892  9117 3E 02        	ld a,2
1893  9119 D3 FE        	out ($fe),a
1894  911B
1895  911B 3A 24 8C     	ld a,(Ctrl_3)
1896  911E CB 57        	bit 2,a
1897  9120 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1898  9122
1899  9122              Borrando_entidades
1900  9122
1901  9122 2A 1E 8C     	ld hl,(Scanlines_album_SP)
1902  9125 CD 99 90     	call Extrae_address
1903  9128 24           	inc h
1904  9129 25           	dec h
1905  912A 28 05        	jr z,Pintando_entidades
1906  912C CD DA 95     	call Pinta_Sprites
1907  912F 18 F1        	jr Borrando_entidades
1908  9131
1909  9131              Pintando_entidades
1910  9131
1911  9131 2A 20 8C     	ld hl,(India_SP)
1912  9134 2C           	inc l
1913  9135 CD 99 90     	call Extrae_address
1914  9138 24           	inc h
1915  9139 25           	dec h
1916  913A 28 0E        	jr z,Ejecuta_escudo
1917  913C 1C           	inc e
1918  913D 1C           	inc e
1919  913E ED 53 20 8C  	ld (India_SP),de
1920  9142 CD 99 90     	call Extrae_address
1921  9145 CD DA 95     	call Pinta_Sprites
1922  9148 18 E7        	jr Pintando_entidades
1923  914A
1924  914A              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1925  914A
1926  914A              Ejecuta_escudo
1927  914A
1928  914A 3A 4E 8C     	ld a,(Shield)
1929  914D A7           	and a
1930  914E 20 2F        	jr nz,Aplica_Shield
1931  9150
1932  9150              Borrando_Amadeus
1933  9150
1934  9150 21 24 8C     	ld hl,Ctrl_3
1935  9153 CB 6E        	bit 5,(hl)
1936  9155 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1937  9157
1938  9157 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1939  915A CD 99 90     	call Extrae_address
1940  915D 24           	inc h
1941  915E 25           	dec h
1942  915F 28 03        	jr z,Pintando_Amadeus
1943  9161 CD DA 95     	call Pinta_Sprites
1944  9164
1945  9164              Pintando_Amadeus
1946  9164
1947  9164 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
1948  9167 CD 99 90     	call Extrae_address
1949  916A 24           	inc h
1950  916B 25           	dec h
1951  916C 28 03        	jr z,1F
1952  916E CD DA 95     	call Pinta_Sprites
1953  9171
1954  9171              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1955  9171
1956  9171 21 24 8C     1 ld hl,Ctrl_3
1957  9174 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1958  9176 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1959  9178 CB AE        	res 5,(hl)
1960  917A
1961  917A 3E 01        	ld a,1												; Borde azul.
1962  917C D3 FE        	out ($fe),a
1963  917E
1964  917E C9           	ret
1965  917F
1966  917F              Aplica_Shield
1967  917F
1968  917F              ;	Bit 1 "1" (Shield_3) Sólo borra.
1969  917F              ;		  "0"     ""     Borra/Pinta.
1970  917F              ;	Bit 2    ""  RET.	 No borra, no pinta.
1971  917F
1972  917F 21 50 8C     	ld hl,Shield_3
1973  9182
1974  9182 CB 5E        	bit 3,(hl)
1975  9184 20 DE        	jr nz,Pintando_Amadeus
1976  9186
1977  9186 CB 56        	bit 2,(hl)
1978  9188 20 E7        	jr nz,1B
1979  918A
1980  918A CB 4E        	bit 1,(hl)
1981  918C C4 93 91     	call nz,Borra_Amadeus_shield
1982  918F
1983  918F 28 BF        	jr z,Borrando_Amadeus
1984  9191 18 DE        	jr 1B
1985  9193
1986  9193              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1987  9193
1988  9193              Borra_Amadeus_shield
1989  9193
1990  9193 3A 24 8C     	ld a,(Ctrl_3)
1991  9196 CB 6F        	bit 5,a
1992  9198 28 08        	jr z,1F
1993  919A
1994  919A 2A 0A 8C     	ld hl,(Album_de_borrado_Amadeus)
1995  919D CD 99 90     	call Extrae_address
1996  91A0 18 06        	jr 2F
1997  91A2
1998  91A2 2A 08 8C     1 ld hl,(Album_de_pintado_Amadeus)
1999  91A5 CD 99 90     	call Extrae_address
2000  91A8
2001  91A8 CD DA 95     2 call Pinta_Sprites
2002  91AB
2003  91AB AF           	xor a
2004  91AC 3C           	inc a											; Asegura NZ en la salida de la rutina.
2005  91AD
2006  91AD C9           	ret
2007  91AE
2008  91AE              Pinta_Amadeus_shield
2009  91AE
2010  91AE 2A 08 8C     	ld hl,(Album_de_pintado_Amadeus)
2011  91B1 CD 99 90     	call Extrae_address
2012  91B4 CD DA 95     	call Pinta_Sprites
2013  91B7
2014  91B7 AF           	xor a
2015  91B8 3C           	inc a											; Asegura NZ en la salida de la rutina.
2016  91B9
2017  91B9 C9           	ret
2018  91BA
2019  91BA              Borra_Pinta_Amadeus_shield
2020  91BA
2021  91BA CD 93 91     	call Borra_Amadeus_shield
2022  91BD CD AE 91     	call Pinta_Amadeus_shield
2023  91C0 C9           	ret
2024  91C1
2025  91C1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2026  91C1              ;
2027  91C1              ;	19/6/24
2028  91C1              ;
2029  91C1
2030  91C1              Teclado
2031  91C1
2032  91C1              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2033  91C1
2034  91C1              ;	ld a,$f7												; "5" para disparar.
2035  91C1              ;	in a,($fe)
2036  91C1              ;	and $10
2037  91C1
2038  91C1              ;	call z,Genera_disparo_Amadeus
2039  91C1
2040  91C1 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2041  91C3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2042  91C5 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2043  91C7 CC 47 9D         call z,Amadeus_a_izquierda
2044  91CA
2045  91CA 3E F7        	ld a,$f7
2046  91CC DB FE        	in a,($fe)
2047  91CE E6 01        	and $01
2048  91D0 C8           	ret z
2049  91D1
2050  91D1 3E F7        	ld a,$f7
2051  91D3 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2052  91D5 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2053  91D7 CC 5F 9D     	call z,Amadeus_a_derecha
2054  91DA
2055  91DA C9           	ret
2056  91DB
2057  91DB              ; ------------------------------------------------------------------------------------------------------------------------
2058  91DB              ;
2059  91DB              ;	06/07/24
2060  91DB              ;
2061  91DB
2062  91DB              Genera_explosion
2063  91DB
2064  91DB 21 36 8C     	ld hl,Clock_explosion
2065  91DE 35           	dec (hl)
2066  91DF 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2067  91E1
2068  91E1              Borra_entidad_colisionada
2069  91E1
2070  91E1 CD F3 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2071  91E4 CD FC 8F     	call Cargamos_registros_con_explosion
2072  91E7 CD DB 94     	call Genera_datos_de_impresion
2073  91EA
2074  91EA AF           	xor a
2075  91EB 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2076  91EC
2077  91EC C9           	ret
2078  91ED
2079  91ED              Siguiente_frame_explosion
2080  91ED
2081  91ED 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2082  91EF
2083  91EF              ; Avanza Frame de explosión.
2084  91EF
2085  91EF 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2086  91F2 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2087  91F5
2088  91F5 79           	ld a,c
2089  91F6 95           	sub l
2090  91F7 20 0B        	jr nz,1F
2091  91F9
2092  91F9              ; Fín de la entidad !!!!!!!!!!!!!
2093  91F9
2094  91F9 21 FA 8B     	ld hl,Numero_parcial_de_entidades
2095  91FC 35           	dec (hl)
2096  91FD 23           	inc hl
2097  91FE 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2098  91FF
2099  91FF CD 5B 93     	call Limpiamos_bandeja_DRAW
2100  9202 18 DD        	jr Borra_entidad_colisionada
2101  9204
2102  9204 23           1 inc hl
2103  9205 23           	inc hl
2104  9206 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2105  9209 18 D6        	jr Borra_entidad_colisionada
2106  920B
2107  920B              ; ----- ----- ----- ----- -----
2108  920B
2109  920B              Genera_explosion_Amadeus
2110  920B
2111  920B 21 37 8C     	ld hl,Clock_explosion_Amadeus
2112  920E 35           	dec (hl)
2113  920F 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2114  9211
2115  9211              Borra_Amadeus_impactado
2116  9211
2117  9211 CD 6A 8E     	call Change_Amadeus
2118  9214 CD 09 90     	call Cargamos_registros_con_explosion_Amadeus
2119  9217 CD 2A 90     	call Genera_datos_de_impresion_Amadeus
2120  921A
2121  921A 21 24 8C     	ld hl,Ctrl_3
2122  921D CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2123  921F
2124  921F AF           	xor a
2125  9220 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2126  9221
2127  9221 C9           	ret
2128  9222
2129  9222              Siguiente_frame_explosion_Amadeus
2130  9222
2131  9222 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2132  9224
2133  9224              ; Avanza Frame de explosión.
2134  9224
2135  9224 2A 74 89     	ld hl,(Pamm_Amadeus)
2136  9227 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2137  922A
2138  922A 79           	ld a,c
2139  922B 95           	sub l
2140  922C 20 0B        	jr nz,1F
2141  922E
2142  922E              ; Fín de Amadeus !!!!!!!!!!!!!
2143  922E              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2144  922E
2145  922E AF           	xor a
2146  922F 32 71 89     	ld (Impacto_Amadeus),a
2147  9232 21 24 8C     	ld hl,Ctrl_3
2148  9235 CB F6        	set 6,(hl)
2149  9237
2150  9237 18 D8        	jr Borra_Amadeus_impactado
2151  9239
2152  9239 23           1 inc hl
2153  923A 23           	inc hl
2154  923B 22 74 89     	ld (Pamm_Amadeus),hl
2155  923E 18 D1        	jr Borra_Amadeus_impactado
2156  9240
2157  9240              ; ---------------------------------------------------------------
2158  9240
2159  9240              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9240              ; ******************************************************************************************************************************************************************************************
   2+ 9240              ;
   3+ 9240              ;   21/04/24
   4+ 9240              ;
   5+ 9240              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9240              ;   (XOR) bit a bit.
   7+ 9240              ;
   8+ 9240              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9240
  10+ 9240              Derivando_RND
  11+ 9240
  12+ 9240 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9243
  14+ 9243 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9245 C5               push bc
  16+ 9246              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9246 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9249              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9249
  20+ 9249 A7           6 and a                                 ; Carry a "0".
  21+ 924A CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 924C 30 02            jr nc,1F
  23+ 924E
  24+ 924E CB C1            set 0,c
  25+ 9250
  26+ 9250 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9251 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9253 5F               ld e,a
  29+ 9254
  30+ 9254 7A               ld a,d
  31+ 9255 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9257 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9259
  34+ 9259 CB 3F            srl a
  35+ 925B
  36+ 925B AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 925C
  38+ 925C 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 925D 28 04            jr z,4F
  40+ 925F
  41+ 925F CB FF            set 7,a
  42+ 9261 18 02            jr 5F
  43+ 9263
  44+ 9263 CB BF        4 res 7,a
  45+ 9265
  46+ 9265 CB 21        5 sla c
  47+ 9267 10 E0            djnz 6B
  48+ 9269
  49+ 9269 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 926A
  51+ 926A 77               ld (hl),a
  52+ 926B 23               inc hl
  53+ 926C C1               pop bc
  54+ 926D 10 D4            djnz 3B
  55+ 926F
  56+ 926F C9               ret
  57+ 9270
  58+ 9270
  59+ 9270
# file closed: RND_Derivando.asm
2160  9270              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9270              ;---------------------------------------------------------------------------------------------------------------
   2+ 9270              ;
   3+ 9270              ;   8/3/24
   4+ 9270              ;
   5+ 9270              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9270              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9270              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9270              ;	_ de la 1ª entidad del Nivel.
   9+ 9270              ;
  10+ 9270              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9270
  12+ 9270              ;	MODIFICA: HL,DE y A.
  13+ 9270              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9270
  15+ 9270              Inicializa_Nivel
  16+ 9270
  17+ 9270 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9273 CD 99 90     	call Extrae_address
  19+ 9276 7E           	ld a,(hl)
  20+ 9277 32 F9 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 927A 23           	inc hl
  22+ 927B CD 88 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 927E 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9281 CD 91 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9284
  26+ 9284 CD A2 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9287 C9           	ret
  28+ 9288
  29+ 9288              ; ----------------------
  30+ 9288
  31+ 9288 11 D8 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 928B 01 04 00     	ld bc,4
  33+ 928E ED B0        	ldir
  34+ 9290 C9           	ret
  35+ 9291
  36+ 9291 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9292 CD 2C 94         call Calcula_salto_en_BC
  38+ 9295 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9298 A7               and a
  40+ 9299 ED 4A            adc hl,bc
  41+ 929B CD 99 90         call Extrae_address
  42+ 929E 22 E4 8B         ld (Puntero_indice_mov),hl
  43+ 92A1 C9               ret
  44+ 92A2
  45+ 92A2 3A B3 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92A5 CD 2C 94     	call Calcula_salto_en_BC
  47+ 92A8 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92AB A7               and a
  49+ 92AC ED 4A            adc hl,bc
  50+ 92AE CD 99 90         call Extrae_address
  51+ 92B1 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92B4 C9           	ret
  53+ 92B5
  54+ 92B5              ;---------------------------------------------------------------------------------------------------------------
  55+ 92B5              ;
  56+ 92B5              ;   5/1/24
  57+ 92B5              ;
  58+ 92B5              ;	Destruye A,BC,HL,DE
  59+ 92B5
  60+ 92B5              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92B5              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92B5
  63+ 92B5              Inicia_Entidades
  64+ 92B5
  65+ 92B5              ; Preparamos los punteros de las cajas de entidades:
  66+ 92B5
  67+ 92B5 CD 7C 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92B8              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92B8 CD 74 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92BB
  71+ 92BB 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92BE
  73+ 92BE 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92C1
  75+ 92C1 CD DA 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92C4
  77+ 92C4 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 92C7
  79+ 92C7              ; En este punto:
  80+ 92C7              ;
  81+ 92C7              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92C7              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92C7
  84+ 92C7 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92C8
  86+ 92C8 7E           	ld a,(hl)
  87+ 92C9 CD 46 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92CC
  89+ 92CC CD 3E 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92CF
  91+ 92CF              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92CF
  93+ 92CF CD FC 93     	call Busca_mov_masticados_segun_tipo
  94+ 92D2
  95+ 92D2 A7           	and a
  96+ 92D3 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92D5
  98+ 92D5              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92D5
 100+ 92D5              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92D5              ;	_ de este tipo de entidad.
 102+ 92D5
 103+ 92D5 CD DE 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92D8 CD EB 9E     	call Transfiere_datos_de_contadores
 105+ 92DB
 106+ 92DB 18 06        	jr 4F
 107+ 92DD
 108+ 92DD CD 8F 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92E0
 110+ 92E0              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92E0              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92E0              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92E0              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92E0              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92E0
 116+ 92E0 CD BA 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92E3              ;																; _ Mov_masticados ya generados.
 118+ 92E3
 119+ 92E3 CD E3 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92E6
 121+ 92E6 DD E5        	push ix
 122+ 92E8 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92E9
 124+ 92E9 D5           	push de
 125+ 92EA CD AF 94     	call Genera_coordenadas
 126+ 92ED
 127+ 92ED ED 5B 1E 8C  	ld de,(Scanlines_album_SP)
 128+ 92F1 CD F3 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92F4 D1           	pop de
 130+ 92F5
 131+ 92F5 CD DB 94     	call Genera_datos_de_impresion
 132+ 92F8              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92F8              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92F8              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92F8              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92F8
 137+ 92F8 CD 7E 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92FB
 139+ 92FB              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92FB
 141+ 92FB ED 5B F3 8B  	ld de,(Puntero_store_caja)
 142+ 92FF CD 6B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9302
 144+ 9302 CD 5B 93     	call Limpiamos_bandeja_DRAW
 145+ 9305 CD E7 90     	call Incrementa_punteros_de_cajas
 146+ 9308
 147+ 9308              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9308              ; _ entidad del Nivel.
 149+ 9308
 150+ 9308 3A 25 8C     	ld a,(Ctrl_4)
 151+ 930B E6 F0        	and $f0
 152+ 930D 32 25 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9310
 154+ 9310              ; Siguiente entidad del Nivel.
 155+ 9310
 156+ 9310 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9313 23           	inc hl 														; _ entidad del Nivel.
 158+ 9314
 159+ 9314 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9315
 161+ 9315 10 A7        	djnz 2B
 162+ 9317
 163+ 9317 C9           	ret
 164+ 9318
 165+ 9318              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9318              ;
 167+ 9318              ;	27/5/24
 168+ 9318              ;
 169+ 9318              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9318              ;
 171+ 9318
 172+ 9318              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9318              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9318
 175+ 9318 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 931B CD 3E 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 931E
 178+ 931E
 179+ 931E              Construye_movimientos_masticados_Amadeus
 180+ 931E
 181+ 931E 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9321 CD D6 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9324              ;															; _ el (Contador_de_mov_masticados).
 184+ 9324 CD 9F 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9327              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9327
 187+ 9327              ; Generamos movimientos masticados de Amadeus.
 188+ 9327
 189+ 9327 06 79        	ld b,121												; $0079, 121d.
 190+ 9329
 191+ 9329 C5           1 push bc
 192+ 932A CD FD 96     	call Draw
 193+ 932D CD BB 8F     	call Guarda_movimiento_masticado
 194+ 9330
 195+ 9330 CD 71 9A     	call Mov_right
 196+ 9333 CD 71 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9336
 198+ 9336 C1           	pop bc
 199+ 9337 10 F0        	djnz 1B
 200+ 9339
 201+ 9339              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9339
 203+ 9339              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9339              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9339
 206+ 9339 2A BA 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 933C 01 08 00     	ld bc,8
 208+ 933F A7           	and a
 209+ 9340 ED 42        	sbc hl,bc
 210+ 9342 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9345
 212+ 9345 C9           	ret
 213+ 9346
 214+ 9346              ; ---------------------------------------------------------------------
 215+ 9346              ;
 216+ 9346              ;	10/02/24
 217+ 9346              ;
 218+ 9346              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9346              ;
 220+ 9346              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9346
 222+ 9346              Definicion_segun_tipo
 223+ 9346
 224+ 9346 CD 2C 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9349 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 934C CD 34 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 934F C9           	ret
 228+ 9350
 229+ 9350              ; ---------------------------------------------------------------------
 230+ 9350              ;
 231+ 9350              ;	6/7/24
 232+ 9350
 233+ 9350
 234+ 9350              Store_Restore_cajas
 235+ 9350
 236+ 9350 ED 5B F3 8B  	ld de,(Puntero_store_caja)
 237+ 9354 CD 6B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9357 CD E7 90     	call Incrementa_punteros_de_cajas
 239+ 935A C9           	ret
 240+ 935B
 241+ 935B              ; ---------------------------------------------------------------------
 242+ 935B              ;
 243+ 935B              ;	23/6/24
 244+ 935B              ;
 245+ 935B              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 935B              ;
 247+ 935B              ;	MODIFY: HL
 248+ 935B
 249+ 935B              Limpiamos_bandeja_DRAW
 250+ 935B
 251+ 935B ED 73 00 8C  	ld (Stack),sp
 252+ 935F 31 D8 8B     	ld sp,Vel_left
 253+ 9362
 254+ 9362 AF           	xor a
 255+ 9363 67           	ld h,a
 256+ 9364 6F           	ld l,a
 257+ 9365
 258+ 9365 E5           	push hl
 259+ 9366 E5           	push hl
 260+ 9367 E5           	push hl
 261+ 9368 E5           	push hl
 262+ 9369 E5           	push hl
 263+ 936A E5           	push hl
 264+ 936B E5           	push hl
 265+ 936C E5           	push hl
 266+ 936D E5           	push hl
 267+ 936E E5           	push hl
 268+ 936F E5           	push hl
 269+ 9370 E5           	push hl
 270+ 9371 E5           	push hl
 271+ 9372 E5           	push hl
 272+ 9373 E5           	push hl
 273+ 9374 E5           	push hl
 274+ 9375 E5           	push hl
 275+ 9376 E5           	push hl
 276+ 9377
 277+ 9377 33           	inc sp
 278+ 9378
 279+ 9378 E5           	push hl
 280+ 9379 ED 7B 00 8C  	ld sp,(Stack)
 281+ 937D
 282+ 937D C9           	ret
 283+ 937E
 284+ 937E              ; ---------------------------------------------------------------------
 285+ 937E              ;
 286+ 937E              ;	24/03/24
 287+ 937E
 288+ 937E 2A BC 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9381 2B           	dec hl
 290+ 9382 22 BC 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9385 C9           	ret
 292+ 9386
 293+ 9386              ; ---------------------------------------------------------------------
 294+ 9386              ;
 295+ 9386              ;	8/5/24
 296+ 9386
 297+ 9386              Reinicia_entidad_maliciosa
 298+ 9386
 299+ 9386              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9386
 301+ 9386 CD DE 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9389 CD EB 9E     	call Transfiere_datos_de_contadores
 303+ 938C
 304+ 938C              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 938C
 306+ 938C 3A B3 8B     	ld a,(Tipo)
 307+ 938F CD 46 93     	call Definicion_segun_tipo
 308+ 9392
 309+ 9392 E5           	push hl
 310+ 9393 DD E1        	pop ix
 311+ 9395
 312+ 9395 DD 6E 0B     	ld l,(ix+11)
 313+ 9398 DD 66 0C     	ld h,(ix+12)
 314+ 939B
 315+ 939B 22 BA 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 939E
 317+ 939E CD E3 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93A1
 319+ 93A1              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93A1              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93A1              ; Ejemplos.
 322+ 93A1
 323+ 93A1              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93A1              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93A1              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93A1              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93A1              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93A1
 329+ 93A1 21 B6 8B     	ld hl,Contador_de_vueltas
 330+ 93A4 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93A6
 332+ 93A6 7E           	ld a,(hl)
 333+ 93A7 CB 2F        	sra a
 334+ 93A9 CB 2F        	sra a
 335+ 93AB
 336+ 93AB 32 BE 8B     	ld (Velocidad),a
 337+ 93AE
 338+ 93AE 3E 40        	ld a,$40
 339+ 93B0 BE           	cp (hl)
 340+ 93B1 C0           	ret nz
 341+ 93B2
 342+ 93B2              ; Límitador.
 343+ 93B2
 344+ 93B2              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93B2
 346+ 93B2 CB 2E        	sra (hl)
 347+ 93B4 21 BE 8B     	ld hl,Velocidad
 348+ 93B7 CB 2E        	sra (hl)
 349+ 93B9
 350+ 93B9 C9           	ret
 351+ 93BA
 352+ 93BA              ; ---------------------------------------------------------------------
 353+ 93BA              ;
 354+ 93BA              ;	22/01/24
 355+ 93BA
 356+ 93BA 21 25 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93BD CB 46        	bit 0,(hl)
 358+ 93BF 20 0D        	jr nz,1F
 359+ 93C1 CB 4E        	bit 1,(hl)
 360+ 93C3 20 0C        	jr nz,2F
 361+ 93C5 CB 56        	bit 2,(hl)
 362+ 93C7 20 0B        	jr nz,3F
 363+ 93C9 CB 5E        	bit 3,(hl)
 364+ 93CB 20 0A        	jr nz,4F
 365+ 93CD C9           	ret
 366+ 93CE
 367+ 93CE CB E6        1 set 4,(hl)
 368+ 93D0 C9           	ret
 369+ 93D1 CB EE        2 set 5,(hl)
 370+ 93D3 C9           	ret
 371+ 93D4 CB F6        3 set 6,(hl)
 372+ 93D6 C9           	ret
 373+ 93D7 CB FE        4 set 7,(hl)
 374+ 93D9 C9           	ret
 375+ 93DA
 376+ 93DA              ; ---------------------------------------------------------------------
 377+ 93DA              ;
 378+ 93DA              ;	23/01/24
 379+ 93DA              ;
 380+ 93DA              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93DA              ;
 382+ 93DA              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93DA              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93DA              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93DA              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93DA
 387+ 93DA              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93DA
 389+ 93DA 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93DB 3D           	dec a
 391+ 93DC 20 06        	jr nz,1F
 392+ 93DE
 393+ 93DE              ; --- Tipo_1
 394+ 93DE
 395+ 93DE 21 25 8C     	ld hl,Ctrl_4
 396+ 93E1 CB C6        	set 0,(hl)
 397+ 93E3 C9           	ret
 398+ 93E4
 399+ 93E4 3D           1 dec a
 400+ 93E5 20 06        	jr nz,2F
 401+ 93E7
 402+ 93E7              ; --- Tipo_2
 403+ 93E7
 404+ 93E7 21 25 8C     	ld hl,Ctrl_4
 405+ 93EA CB CE        	set 1,(hl)
 406+ 93EC C9           	ret
 407+ 93ED
 408+ 93ED 3D           2 dec a
 409+ 93EE 20 06        	jr nz,3F
 410+ 93F0
 411+ 93F0              ; --- Tipo_3
 412+ 93F0
 413+ 93F0 21 25 8C     	ld hl,Ctrl_4
 414+ 93F3 CB D6        	set 2,(hl)
 415+ 93F5 C9           	ret
 416+ 93F6
 417+ 93F6              ; --- Tipo_3
 418+ 93F6
 419+ 93F6 21 25 8C     3 ld hl,Ctrl_4
 420+ 93F9 CB D6        	set 2,(hl)
 421+ 93FB C9           	ret
 422+ 93FC
 423+ 93FC              ; ---------------------------------------------------------------------
 424+ 93FC              ;
 425+ 93FC              ;	22/01/24
 426+ 93FC
 427+ 93FC 21 25 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93FF CB 46        	bit 0,(hl)
 429+ 9401 20 0E        	jr nz,1F
 430+ 9403
 431+ 9403 CB 4E        	bit 1,(hl)
 432+ 9405 20 10        	jr nz,2F
 433+ 9407
 434+ 9407 CB 56        	bit 2,(hl)
 435+ 9409 20 12        	jr nz,3F
 436+ 940B
 437+ 940B CB 5E        	bit 3,(hl)
 438+ 940D 20 14        	jr nz,4F
 439+ 940F 18 19        	jr 6F
 440+ 9411
 441+ 9411              ; Entidad_de_Tipo_1.
 442+ 9411
 443+ 9411 CB 66        1 bit 4,(hl)
 444+ 9413 28 15        	jr z,6F
 445+ 9415 18 10        	jr 5F
 446+ 9417
 447+ 9417              ; Entidad_de_Tipo_2.
 448+ 9417
 449+ 9417 CB 6E        2 bit 5,(hl)
 450+ 9419 28 0F        	jr z,6F
 451+ 941B 18 0A        	jr 5F
 452+ 941D
 453+ 941D              ; Entidad_de_Tipo_3.
 454+ 941D
 455+ 941D CB 76        3 bit 6,(hl)
 456+ 941F 28 09        	jr z,6F
 457+ 9421 18 04        	jr 5F
 458+ 9423
 459+ 9423              ; Entidad_de_Tipo_4.
 460+ 9423
 461+ 9423 CB 7E        4 bit 7,(hl)
 462+ 9425 28 03        	jr z,6F
 463+ 9427
 464+ 9427              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9427
 466+ 9427 AF           5 xor a
 467+ 9428 3C           	inc a
 468+ 9429 C9           	ret
 469+ 942A
 470+ 942A              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 942A
 472+ 942A AF           6 xor a
 473+ 942B C9           	ret
 474+ 942C
 475+ 942C              ;	------------------------------------------------------------------------------------
 476+ 942C              ;
 477+ 942C              ;	12/01/24
 478+ 942C              ;
 479+ 942C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 942C              ;
 481+ 942C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 942C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 942C
 484+ 942C CB 27        Calcula_salto_en_BC sla a
 485+ 942E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9430 4F           	ld c,a
 487+ 9431 06 00        	ld b,0
 488+ 9433 C9           	ret
 489+ 9434
 490+ 9434              ; ------------------------------------------------------------------
 491+ 9434              ;
 492+ 9434              ;	19/1/24
 493+ 9434              ;
 494+ 9434              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9434              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9434
 497+ 9434 A7           Situa_en_datos_de_definicion and a
 498+ 9435 ED 4A        	adc hl,bc
 499+ 9437 CD 99 90     	call Extrae_address
 500+ 943A 22 FE 8B         ld (Datos_de_entidad),hl
 501+ 943D C9           	ret
 502+ 943E
 503+ 943E              ; ------------------------------------------------------------------
 504+ 943E
 505+ 943E              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 943E              ; 	inc de
 507+ 943E              ; 	inc de
 508+ 943E              ; 	ex de,hl
 509+ 943E              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 943E              ; 	ret
 511+ 943E
 512+ 943E              ; ----------------------------------------------------------------------------------------------------------
 513+ 943E              ;
 514+ 943E              ;	24/6/24
 515+ 943E              ;
 516+ 943E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 943E              ;	_ de entidad.
 518+ 943E              ;
 519+ 943E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 943E              ;
 521+ 943E              ;
 522+ 943E              ;	MODIFICA: HL,DE y BC
 523+ 943E
 524+ 943E
 525+ 943E              Definicion_de_entidad_a_bandeja_DRAW
 526+ 943E
 527+ 943E 11 B3 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9441 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9442 12           	ld (de),a
 530+ 9443 23           	inc hl
 531+ 9444              ;
 532+ 9444 11 C1 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9447 01 02 00     	ld bc,2
 534+ 944A ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 944C              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 944C 11 B6 8B     	ld de,Contador_de_vueltas
 537+ 944F 7E           	ld a,(hl)
 538+ 9450 12           	ld (de),a
 539+ 9451 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9452
 541+ 9452 11 C8 8B     	ld de,Indice_Sprite_der
 542+ 9455 01 04 00     	ld bc,4
 543+ 9458 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 945A
 545+ 945A 11 D0 8B     	ld de,Posicion_inicio
 546+ 945D 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9460 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9462
 549+ 9462 11 BA 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9465 01 02 00     	ld bc,2
 551+ 9468 ED B0        	ldir
 552+ 946A
 553+ 946A C9           	ret
 554+ 946B
 555+ 946B              ; ----------------------------------------------------------------------------------------------------------
 556+ 946B              ;
 557+ 946B              ;	1/8/24
 558+ 946B              ;
 559+ 946B
 560+ 946B              Parametros_de_bandeja_DRAW_a_caja
 561+ 946B
 562+ 946B 21 B3 8B     	ld hl,Bandeja_DRAW
 563+ 946E 01 0C 00     	ld bc,12
 564+ 9471 ED B0        	ldir
 565+ 9473 C9           	ret
 566+ 9474
 567+ 9474              ;---------------------------------------------------------------------------------------------------------------
 568+ 9474              ;
 569+ 9474              ;	5/1/24
 570+ 9474              ;
 571+ 9474              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9474              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9474              ;
 574+ 9474              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9474              ;
 576+ 9474              ;	(Numero_parcial_de_entidades)="7".
 577+ 9474              ;
 578+ 9474              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9474              ;
 580+ 9474              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9474              ;
 582+ 9474              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9474              ;	MODIFICA: A y B.
 584+ 9474              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9474
 586+ 9474              Inicializa_Numero_parcial_de_entidades
 587+ 9474
 588+ 9474              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9474
 590+ 9474 3A F9 8B     	ld a,(Numero_de_entidades)
 591+ 9477 A7           	and a
 592+ 9478
 593+ 9478              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9478              ;	jr z,$
 595+ 9478              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9478
 597+ 9478 20 03        	jr nz,3F
 598+ 947A
 599+ 947A              ; ---------- ---------- ----------
 600+ 947A
 601+ 947A              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 947A              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 947A
 604+ 947A CD 70 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 947D
 606+ 947D              ; ---------- ---------- ----------
 607+ 947D
 608+ 947D 3A F9 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9480 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9482 38 08        	jr c,1F
 611+ 9484
 612+ 9484              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9484              ; Actualizamos variables.
 614+ 9484
 615+ 9484 3E 07        	ld a,7
 616+ 9486 32 FA 8B     	ld (Numero_parcial_de_entidades),a
 617+ 9489 47           	ld b,a
 618+ 948A 18 04        	jr 2F
 619+ 948C
 620+ 948C              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 948C              ; (Numero_de_entidades)="0".
 622+ 948C
 623+ 948C 32 FA 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 948F 47           	ld b,a
 625+ 9490 C9           2 ret
 626+ 9491
# file closed: Rutinas_de_inicio_y_niveles.asm
2161  9491              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9491              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9491              ;
   3+ 9491              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9491              ;
   5+ 9491              ; *****************************************************************************************************************************************************************************************
   6+ 9491              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9491
   8+ 9491 7C           calcula_tercio ld a,h
   9+ 9492 E6 18        	and $18
  10+ 9494 CB 2F        	sra a
  11+ 9496 CB 2F        	sra a
  12+ 9498 CB 2F        	sra a
  13+ 949A C9           	ret
  14+ 949B
# file closed: calcula_tercio.asm
2162  949B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 949B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 949B              ;
   3+ 949B              ;
   4+ 949B              ;	CLS.
   5+ 949B              ;
   6+ 949B              ;	Limpia la pantalla y define sus atributos.
   7+ 949B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 949B              ;
   9+ 949B              ;	COLORES: 0 ..... NEGRO
  10+ 949B              ;    		 1 ..... AZUL
  11+ 949B              ; 			 2 ..... ROJO
  12+ 949B              ;			 3 ..... MAGENTA
  13+ 949B              ; 			 4 ..... VERDE
  14+ 949B              ; 			 5 ..... CIAN
  15+ 949B              ;			 6 ..... AMARILLO
  16+ 949B              ; 			 7 ..... BLANCO
  17+ 949B              ;
  18+ 949B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 949B              ;
  20+ 949B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 949B
  22+ 949B
  23+ 949B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 949E 11 01 40     	LD DE,$4001
  25+ 94A1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94A4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94A6 ED B0        	LDIR
  28+ 94A8 01 FF 02     	LD BC,767
  29+ 94AB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94AC ED B0        	LDIR
  31+ 94AE C9           	ret
  32+ 94AF
# file closed: Cls.asm
2163  94AF              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94AF              ; ------------------------------------------------------------------------
   2+ 94AF              ;
   3+ 94AF              ;	30/1/24
   4+ 94AF              ;
   5+ 94AF              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94AF              ;	Fila superior "0", Columna izquierda "0".
   7+ 94AF              ;
   8+ 94AF              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94AF              ;
  10+ 94AF              ;	Modifica: A,BC y DE.
  11+ 94AF
  12+ 94AF 7D           Genera_coordenadas ld a,l
  13+ 94B0 E6 1F        	and $1f
  14+ 94B2 32 B4 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94B5
  16+ 94B5 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94B6 FE 40        	cp $40
  18+ 94B8 38 1C        	jr c,4F
  19+ 94BA
  20+ 94BA CD 91 94     	call calcula_tercio
  21+ 94BD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94BE
  23+ 94BE 1E 00        	ld e,0
  24+ 94C0 7D           	ld a,l
  25+ 94C1 E6 E0        	and $e0
  26+ 94C3 28 01        	jr z,1F
  27+ 94C5 04           	inc b
  28+ 94C6
  29+ 94C6 04           1 inc b
  30+ 94C7 05           	dec b
  31+ 94C8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94CA              ;														; _ , salimos.
  33+ 94CA 1C           3 inc e
  34+ 94CB D6 20        	sub 32
  35+ 94CD 20 FB        	jr nz,3B
  36+ 94CF 10 F5        	djnz 1B
  37+ 94D1
  38+ 94D1 7B           2 ld a,e
  39+ 94D2 32 B5 8B     	ld (Coordenada_y),a
  40+ 94D5 C9           	ret
  41+ 94D6
  42+ 94D6 AF           4 xor a
  43+ 94D7 32 B5 8B     	ld (Coordenada_y),a
  44+ 94DA C9           	ret
  45+ 94DB
# file closed: Genera_coordenadas.asm
2164  94DB              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94DB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94DB              ;
   3+ 94DB              ;	20/09/24
   4+ 94DB              ;
   5+ 94DB              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94DB              ;   DE contiene Puntero_objeto.
   7+ 94DB              ;   IX contiene el Puntero de impresión.
   8+ 94DB
   9+ 94DB              Genera_datos_de_impresion
  10+ 94DB
  11+ 94DB ED 73 00 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94DF
  13+ 94DF 31 BA 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94E2 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94E4
  16+ 94E4 2A 1E 8C         ld hl,(Scanlines_album_SP)
  17+ 94E7
  18+ 94E7 3E 05            ld a,5
  19+ 94E9 85               add l
  20+ 94EA 6F               ld l,a
  21+ 94EB
  22+ 94EB F9               ld sp,hl
  23+ 94EC 22 1E 8C         ld (Scanlines_album_SP),hl
  24+ 94EF
  25+ 94EF 21 00 00         ld hl,0
  26+ 94F2
  27+ 94F2 DD E5            push ix
  28+ 94F4 3B               dec sp
  29+ 94F5 ED 7A            adc hl,sp
  30+ 94F7 D5               push de
  31+ 94F8
  32+ 94F8              ; Recuperamos SP.
  33+ 94F8
  34+ 94F8 ED 7B 00 8C      ld sp,(Stack)
  35+ 94FC
  36+ 94FC E5               push hl
  37+ 94FD F1               pop af
  38+ 94FE 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94FF
  40+ 94FF              ; Tenemos el encabezado listo.
  41+ 94FF              ; Preparamos registros para generar los scanlines.
  42+ 94FF
  43+ 94FF DD E5            push ix
  44+ 9501 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9502
  46+ 9502 ED 5B 1E 8C      ld de,(Scanlines_album_SP)
  47+ 9506
  48+ 9506              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9506              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9506
  51+ 9506 7C               ld a,h
  52+ 9507 FE 50            cp $50
  53+ 9509 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 950B
  55+ 950B 20 05            jr nz,2F
  56+ 950D
  57+ 950D 7D               ld a,l
  58+ 950E FE E0            cp $e0
  59+ 9510 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9512
  61+ 9512 7D           2 ld a,l
  62+ 9513 FE C0            cp $c0
  63+ 9515 D2 B1 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9518
  65+ 9518              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9518
  67+ 9518 CD AF 99         call NextScan
  68+ 951B EB               ex de,hl
  69+ 951C
  70+ 951C 73               ld (hl),e
  71+ 951D 23               inc hl
  72+ 951E 72               ld (hl),d
  73+ 951F 23               inc hl
  74+ 9520
  75+ 9520 EB               ex de,hl
  76+ 9521
  77+ 9521 CD AF 99         call NextScan
  78+ 9524 EB               ex de,hl
  79+ 9525
  80+ 9525 73               ld (hl),e
  81+ 9526 23               inc hl
  82+ 9527 72               ld (hl),d
  83+ 9528 23               inc hl
  84+ 9529
  85+ 9529 EB               ex de,hl
  86+ 952A
  87+ 952A CD AF 99         call NextScan
  88+ 952D EB               ex de,hl
  89+ 952E
  90+ 952E 73               ld (hl),e
  91+ 952F 23               inc hl
  92+ 9530 72               ld (hl),d
  93+ 9531 23               inc hl
  94+ 9532
  95+ 9532 EB               ex de,hl
  96+ 9533
  97+ 9533 CD AF 99         call NextScan
  98+ 9536 EB               ex de,hl
  99+ 9537
 100+ 9537 73               ld (hl),e
 101+ 9538 23               inc hl
 102+ 9539 72               ld (hl),d
 103+ 953A 23               inc hl
 104+ 953B
 105+ 953B EB               ex de,hl
 106+ 953C
 107+ 953C CD AF 99         call NextScan
 108+ 953F EB               ex de,hl
 109+ 9540
 110+ 9540 73               ld (hl),e
 111+ 9541 23               inc hl
 112+ 9542 72               ld (hl),d
 113+ 9543 23               inc hl
 114+ 9544
 115+ 9544 EB               ex de,hl
 116+ 9545
 117+ 9545 CD AF 99         call NextScan
 118+ 9548 EB               ex de,hl
 119+ 9549
 120+ 9549 73               ld (hl),e
 121+ 954A 23               inc hl
 122+ 954B 72               ld (hl),d
 123+ 954C 23               inc hl
 124+ 954D
 125+ 954D EB               ex de,hl
 126+ 954E
 127+ 954E CD AF 99         call NextScan
 128+ 9551 EB               ex de,hl
 129+ 9552
 130+ 9552 73               ld (hl),e
 131+ 9553 23               inc hl
 132+ 9554 72               ld (hl),d
 133+ 9555 23               inc hl
 134+ 9556
 135+ 9556 EB               ex de,hl
 136+ 9557
 137+ 9557 CD AF 99         call NextScan
 138+ 955A EB               ex de,hl
 139+ 955B
 140+ 955B 73               ld (hl),e
 141+ 955C 23               inc hl
 142+ 955D 72               ld (hl),d
 143+ 955E 23               inc hl
 144+ 955F
 145+ 955F EB               ex de,hl
 146+ 9560
 147+ 9560 CD AF 99         call NextScan
 148+ 9563 EB               ex de,hl
 149+ 9564
 150+ 9564 73               ld (hl),e
 151+ 9565 23               inc hl
 152+ 9566 72               ld (hl),d
 153+ 9567 23               inc hl
 154+ 9568
 155+ 9568 EB               ex de,hl
 156+ 9569
 157+ 9569 CD AF 99         call NextScan
 158+ 956C EB               ex de,hl
 159+ 956D
 160+ 956D 73               ld (hl),e
 161+ 956E 23               inc hl
 162+ 956F 72               ld (hl),d
 163+ 9570 23               inc hl
 164+ 9571
 165+ 9571 EB               ex de,hl
 166+ 9572
 167+ 9572 CD AF 99         call NextScan
 168+ 9575 EB               ex de,hl
 169+ 9576
 170+ 9576 73               ld (hl),e
 171+ 9577 23               inc hl
 172+ 9578 72               ld (hl),d
 173+ 9579 23               inc hl
 174+ 957A
 175+ 957A EB               ex de,hl
 176+ 957B
 177+ 957B CD AF 99         call NextScan
 178+ 957E EB               ex de,hl
 179+ 957F
 180+ 957F 73               ld (hl),e
 181+ 9580 23               inc hl
 182+ 9581 72               ld (hl),d
 183+ 9582 23               inc hl
 184+ 9583
 185+ 9583 EB               ex de,hl
 186+ 9584
 187+ 9584 CD AF 99         call NextScan
 188+ 9587 EB               ex de,hl
 189+ 9588
 190+ 9588 73               ld (hl),e
 191+ 9589 23               inc hl
 192+ 958A 72               ld (hl),d
 193+ 958B 23               inc hl
 194+ 958C
 195+ 958C EB               ex de,hl
 196+ 958D
 197+ 958D CD AF 99         call NextScan
 198+ 9590 EB               ex de,hl
 199+ 9591
 200+ 9591 73               ld (hl),e
 201+ 9592 23               inc hl
 202+ 9593 72               ld (hl),d
 203+ 9594 23               inc hl
 204+ 9595
 205+ 9595 EB               ex de,hl
 206+ 9596
 207+ 9596 CD AF 99         call NextScan
 208+ 9599 EB               ex de,hl
 209+ 959A
 210+ 959A              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 959A              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 959A              ;   _ generar sus scanlines.
 213+ 959A
 214+ 959A              ;    ld (Puntero_de_impresion_disparo),de
 215+ 959A
 216+ 959A 73               ld (hl),e
 217+ 959B 23               inc hl
 218+ 959C 72               ld (hl),d
 219+ 959D 23               inc hl
 220+ 959E
 221+ 959E              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 959E
 223+ 959E 22 1E 8C         ld (Scanlines_album_SP),hl
 224+ 95A1
 225+ 95A1 EB               ex de,hl
 226+ 95A2
 227+ 95A2              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95A2
 229+ 95A2 CD AF 99         call NextScan
 230+ 95A5 CD AF 99         call NextScan
 231+ 95A8
 232+ 95A8 22 29 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95AB
 234+ 95AB              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95AB
 236+ 95AB 08               ex af,af
 237+ 95AC
 238+ 95AC F5               push af
 239+ 95AD E1               pop hl
 240+ 95AE
 241+ 95AE 36 10            ld (hl),16
 242+ 95B0
 243+ 95B0 C9               ret
 244+ 95B1
 245+ 95B1              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95B1
 247+ 95B1              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95B1
 249+ 95B1 3E 57            ld a,$57
 250+ 95B3 94               sub h
 251+ 95B4 47               ld b,a
 252+ 95B5
 253+ 95B5 3E DF            ld a,$df
 254+ 95B7 BD               cp l
 255+ 95B8 38 04            jr c,1F
 256+ 95BA
 257+ 95BA 3E 08            ld a,8
 258+ 95BC 80               add b
 259+ 95BD 47               ld b,a
 260+ 95BE
 261+ 95BE              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95BE              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95BE
 264+ 95BE 48           1 ld c,b
 265+ 95BF 0C               inc c
 266+ 95C0
 267+ 95C0 04               inc b
 268+ 95C1 05               dec b
 269+ 95C2 20 02            jr nz,3F
 270+ 95C4
 271+ 95C4 18 0B            jr 6F
 272+ 95C6
 273+ 95C6 CD AF 99     3 call NextScan
 274+ 95C9 EB               ex de,hl
 275+ 95CA
 276+ 95CA 73               ld (hl),e
 277+ 95CB 23               inc hl
 278+ 95CC 72               ld (hl),d
 279+ 95CD 23               inc hl
 280+ 95CE
 281+ 95CE EB               ex de,hl
 282+ 95CF 10 F5            djnz 3B
 283+ 95D1
 284+ 95D1 ED 53 1E 8C  6 ld (Scanlines_album_SP),de
 285+ 95D5
 286+ 95D5 08           5 ex af,af
 287+ 95D6 F5               push af
 288+ 95D7 E1               pop hl
 289+ 95D8
 290+ 95D8 71               ld (hl),c
 291+ 95D9
 292+ 95D9 C9               ret
 293+ 95DA
# file closed: Genera_datos_de_impresion.asm
2165  95DA              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95DA              ; -----------------------------------------------------------------------------
   2+ 95DA              ;
   3+ 95DA              ;   11/03/24
   4+ 95DA              ;
   5+ 95DA
   6+ 95DA              Pinta_Sprites
   7+ 95DA
   8+ 95DA              ;    ld hl,(Scanlines_album_SP)
   9+ 95DA              ;    call Extrae_address
  10+ 95DA
  11+ 95DA              ;    inc h
  12+ 95DA              ;    dec h
  13+ 95DA              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95DA
  15+ 95DA ED 73 00 8C      ld (Stack),sp
  16+ 95DE
  17+ 95DE EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95DF              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95DF 2C               inc l
  20+ 95E0 2C               inc l
  21+ 95E1
  22+ 95E1 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95E2
  24+ 95E2 2C               inc l
  25+ 95E3 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95E4
  27+ 95E4              ;   Seleccionamos rutina de impresión:
  28+ 95E4
  29+ 95E4 3E 10            ld a,16
  30+ 95E6 B8               cp b
  31+ 95E7 C2 E3 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95EA
  33+ 95EA              ;   Rutinas:
  34+ 95EA
  35+ 95EA              Pinta_rapido    ;   1520 t/states.
  36+ 95EA
  37+ 95EA E1               pop hl
  38+ 95EB
  39+ 95EB 1A               ld a,(de)
  40+ 95EC AE               xor (hl)
  41+ 95ED 77               ld (hl),a
  42+ 95EE 2C               inc l
  43+ 95EF 1C               inc e
  44+ 95F0 1A               ld a,(de)
  45+ 95F1 AE               xor (hl)
  46+ 95F2 77               ld (hl),a
  47+ 95F3 2C               inc l
  48+ 95F4 1C               inc e
  49+ 95F5 1A               ld a,(de)
  50+ 95F6 AE               xor (hl)
  51+ 95F7 77               ld (hl),a
  52+ 95F8 13               inc de
  53+ 95F9
  54+ 95F9 E1               pop hl
  55+ 95FA
  56+ 95FA 1A               ld a,(de)
  57+ 95FB AE               xor (hl)
  58+ 95FC 77               ld (hl),a
  59+ 95FD 2C               inc l
  60+ 95FE 1C               inc e
  61+ 95FF 1A               ld a,(de)
  62+ 9600 AE               xor (hl)
  63+ 9601 77               ld (hl),a
  64+ 9602 2C               inc l
  65+ 9603 1C               inc e
  66+ 9604 1A               ld a,(de)
  67+ 9605 AE               xor (hl)
  68+ 9606 77               ld (hl),a
  69+ 9607 13               inc de
  70+ 9608
  71+ 9608 E1               pop hl
  72+ 9609
  73+ 9609 1A               ld a,(de)
  74+ 960A AE               xor (hl)
  75+ 960B 77               ld (hl),a
  76+ 960C 2C               inc l
  77+ 960D 1C               inc e
  78+ 960E 1A               ld a,(de)
  79+ 960F AE               xor (hl)
  80+ 9610 77               ld (hl),a
  81+ 9611 2C               inc l
  82+ 9612 1C               inc e
  83+ 9613 1A               ld a,(de)
  84+ 9614 AE               xor (hl)
  85+ 9615 77               ld (hl),a
  86+ 9616 13               inc de
  87+ 9617
  88+ 9617 E1               pop hl
  89+ 9618
  90+ 9618 1A               ld a,(de)
  91+ 9619 AE               xor (hl)
  92+ 961A 77               ld (hl),a
  93+ 961B 2C               inc l
  94+ 961C 1C               inc e
  95+ 961D 1A               ld a,(de)
  96+ 961E AE               xor (hl)
  97+ 961F 77               ld (hl),a
  98+ 9620 2C               inc l
  99+ 9621 1C               inc e
 100+ 9622 1A               ld a,(de)
 101+ 9623 AE               xor (hl)
 102+ 9624 77               ld (hl),a
 103+ 9625 13               inc de
 104+ 9626
 105+ 9626 E1               pop hl
 106+ 9627
 107+ 9627 1A               ld a,(de)
 108+ 9628 AE               xor (hl)
 109+ 9629 77               ld (hl),a
 110+ 962A 2C               inc l
 111+ 962B 1C               inc e
 112+ 962C 1A               ld a,(de)
 113+ 962D AE               xor (hl)
 114+ 962E 77               ld (hl),a
 115+ 962F 2C               inc l
 116+ 9630 1C               inc e
 117+ 9631 1A               ld a,(de)
 118+ 9632 AE               xor (hl)
 119+ 9633 77               ld (hl),a
 120+ 9634 13               inc de
 121+ 9635
 122+ 9635 E1               pop hl
 123+ 9636
 124+ 9636 1A               ld a,(de)
 125+ 9637 AE               xor (hl)
 126+ 9638 77               ld (hl),a
 127+ 9639 2C               inc l
 128+ 963A 1C               inc e
 129+ 963B 1A               ld a,(de)
 130+ 963C AE               xor (hl)
 131+ 963D 77               ld (hl),a
 132+ 963E 2C               inc l
 133+ 963F 1C               inc e
 134+ 9640 1A               ld a,(de)
 135+ 9641 AE               xor (hl)
 136+ 9642 77               ld (hl),a
 137+ 9643 13               inc de
 138+ 9644
 139+ 9644 E1               pop hl
 140+ 9645
 141+ 9645 1A               ld a,(de)
 142+ 9646 AE               xor (hl)
 143+ 9647 77               ld (hl),a
 144+ 9648 2C               inc l
 145+ 9649 1C               inc e
 146+ 964A 1A               ld a,(de)
 147+ 964B AE               xor (hl)
 148+ 964C 77               ld (hl),a
 149+ 964D 2C               inc l
 150+ 964E 1C               inc e
 151+ 964F 1A               ld a,(de)
 152+ 9650 AE               xor (hl)
 153+ 9651 77               ld (hl),a
 154+ 9652 13               inc de
 155+ 9653
 156+ 9653 E1               pop hl
 157+ 9654
 158+ 9654 1A               ld a,(de)
 159+ 9655 AE               xor (hl)
 160+ 9656 77               ld (hl),a
 161+ 9657 2C               inc l
 162+ 9658 1C               inc e
 163+ 9659 1A               ld a,(de)
 164+ 965A AE               xor (hl)
 165+ 965B 77               ld (hl),a
 166+ 965C 2C               inc l
 167+ 965D 1C               inc e
 168+ 965E 1A               ld a,(de)
 169+ 965F AE               xor (hl)
 170+ 9660 77               ld (hl),a
 171+ 9661 13               inc de
 172+ 9662
 173+ 9662 E1               pop hl
 174+ 9663
 175+ 9663 1A               ld a,(de)
 176+ 9664 AE               xor (hl)
 177+ 9665 77               ld (hl),a
 178+ 9666 2C               inc l
 179+ 9667 1C               inc e
 180+ 9668 1A               ld a,(de)
 181+ 9669 AE               xor (hl)
 182+ 966A 77               ld (hl),a
 183+ 966B 2C               inc l
 184+ 966C 1C               inc e
 185+ 966D 1A               ld a,(de)
 186+ 966E AE               xor (hl)
 187+ 966F 77               ld (hl),a
 188+ 9670 13               inc de
 189+ 9671
 190+ 9671 E1               pop hl
 191+ 9672
 192+ 9672 1A               ld a,(de)
 193+ 9673 AE               xor (hl)
 194+ 9674 77               ld (hl),a
 195+ 9675 2C               inc l
 196+ 9676 1C               inc e
 197+ 9677 1A               ld a,(de)
 198+ 9678 AE               xor (hl)
 199+ 9679 77               ld (hl),a
 200+ 967A 2C               inc l
 201+ 967B 1C               inc e
 202+ 967C 1A               ld a,(de)
 203+ 967D AE               xor (hl)
 204+ 967E 77               ld (hl),a
 205+ 967F 13               inc de
 206+ 9680
 207+ 9680 E1               pop hl
 208+ 9681
 209+ 9681 1A               ld a,(de)
 210+ 9682 AE               xor (hl)
 211+ 9683 77               ld (hl),a
 212+ 9684 2C               inc l
 213+ 9685 1C               inc e
 214+ 9686 1A               ld a,(de)
 215+ 9687 AE               xor (hl)
 216+ 9688 77               ld (hl),a
 217+ 9689 2C               inc l
 218+ 968A 1C               inc e
 219+ 968B 1A               ld a,(de)
 220+ 968C AE               xor (hl)
 221+ 968D 77               ld (hl),a
 222+ 968E 13               inc de
 223+ 968F
 224+ 968F E1               pop hl
 225+ 9690
 226+ 9690 1A               ld a,(de)
 227+ 9691 AE               xor (hl)
 228+ 9692 77               ld (hl),a
 229+ 9693 2C               inc l
 230+ 9694 1C               inc e
 231+ 9695 1A               ld a,(de)
 232+ 9696 AE               xor (hl)
 233+ 9697 77               ld (hl),a
 234+ 9698 2C               inc l
 235+ 9699 1C               inc e
 236+ 969A 1A               ld a,(de)
 237+ 969B AE               xor (hl)
 238+ 969C 77               ld (hl),a
 239+ 969D 13               inc de
 240+ 969E
 241+ 969E E1               pop hl
 242+ 969F
 243+ 969F 1A               ld a,(de)
 244+ 96A0 AE               xor (hl)
 245+ 96A1 77               ld (hl),a
 246+ 96A2 2C               inc l
 247+ 96A3 1C               inc e
 248+ 96A4 1A               ld a,(de)
 249+ 96A5 AE               xor (hl)
 250+ 96A6 77               ld (hl),a
 251+ 96A7 2C               inc l
 252+ 96A8 1C               inc e
 253+ 96A9 1A               ld a,(de)
 254+ 96AA AE               xor (hl)
 255+ 96AB 77               ld (hl),a
 256+ 96AC 13               inc de
 257+ 96AD
 258+ 96AD E1               pop hl
 259+ 96AE
 260+ 96AE 1A               ld a,(de)
 261+ 96AF AE               xor (hl)
 262+ 96B0 77               ld (hl),a
 263+ 96B1 2C               inc l
 264+ 96B2 1C               inc e
 265+ 96B3 1A               ld a,(de)
 266+ 96B4 AE               xor (hl)
 267+ 96B5 77               ld (hl),a
 268+ 96B6 2C               inc l
 269+ 96B7 1C               inc e
 270+ 96B8 1A               ld a,(de)
 271+ 96B9 AE               xor (hl)
 272+ 96BA 77               ld (hl),a
 273+ 96BB 13               inc de
 274+ 96BC
 275+ 96BC E1               pop hl
 276+ 96BD
 277+ 96BD 1A               ld a,(de)
 278+ 96BE AE               xor (hl)
 279+ 96BF 77               ld (hl),a
 280+ 96C0 2C               inc l
 281+ 96C1 1C               inc e
 282+ 96C2 1A               ld a,(de)
 283+ 96C3 AE               xor (hl)
 284+ 96C4 77               ld (hl),a
 285+ 96C5 2C               inc l
 286+ 96C6 1C               inc e
 287+ 96C7 1A               ld a,(de)
 288+ 96C8 AE               xor (hl)
 289+ 96C9 77               ld (hl),a
 290+ 96CA 13               inc de
 291+ 96CB
 292+ 96CB E1               pop hl
 293+ 96CC
 294+ 96CC 1A               ld a,(de)
 295+ 96CD AE               xor (hl)
 296+ 96CE 77               ld (hl),a
 297+ 96CF 2C               inc l
 298+ 96D0 1C               inc e
 299+ 96D1 1A               ld a,(de)
 300+ 96D2 AE               xor (hl)
 301+ 96D3 77               ld (hl),a
 302+ 96D4 2C               inc l
 303+ 96D5 1C               inc e
 304+ 96D6 1A               ld a,(de)
 305+ 96D7 AE               xor (hl)
 306+ 96D8 77               ld (hl),a
 307+ 96D9 13               inc de
 308+ 96DA
 309+ 96DA ED 73 1E 8C      ld (Scanlines_album_SP),sp
 310+ 96DE ED 7B 00 8C      ld sp,(Stack)
 311+ 96E2 C9               ret
 312+ 96E3
 313+ 96E3              Pinta_lento
 314+ 96E3
 315+ 96E3 E1           1 pop hl
 316+ 96E4
 317+ 96E4 1A               ld a,(de)
 318+ 96E5 AE               xor (hl)
 319+ 96E6 77               ld (hl),a
 320+ 96E7 2C               inc l
 321+ 96E8 1C               inc e
 322+ 96E9 1A               ld a,(de)
 323+ 96EA AE               xor (hl)
 324+ 96EB 77               ld (hl),a
 325+ 96EC 2C               inc l
 326+ 96ED 1C               inc e
 327+ 96EE 1A               ld a,(de)
 328+ 96EF AE               xor (hl)
 329+ 96F0 77               ld (hl),a
 330+ 96F1 13               inc de
 331+ 96F2
 332+ 96F2 10 EF            djnz 1B
 333+ 96F4
 334+ 96F4 ED 73 1E 8C      ld (Scanlines_album_SP),sp
 335+ 96F8 ED 7B 00 8C      ld sp,(Stack)
 336+ 96FC C9               ret
# file closed: Pinta_Sprites.asm
2166  96FD              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96FD              ; ******************************************************************************************************************************************************************************************
   2+ 96FD              ;
   3+ 96FD              ; 26/06/23
   4+ 96FD              ;
   5+ 96FD              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96FD
   7+ 96FD              Draw
   8+ 96FD
   9+ 96FD CD A3 99     	call Prepara_draw
  10+ 9700 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9701 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9702 28 05        	jr z,2F
  13+ 9704
  14+ 9704 3A D2 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9707 18 0C        	jr 1F
  16+ 9709
  17+ 9709 2A D0 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 970C 22 C3 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 970F CD 9B 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9712              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9712
  22+ 9712 CD 42 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9715
  24+ 9715 3A C0 8B     1 ld a,(Ctrl_0)
  25+ 9718 CB 6F        	bit 5,a
  26+ 971A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 971C
  28+ 971C CD 31 97     	call Comprueba_limite_horizontal
  29+ 971F CD C1 97     	call Comprueba_limite_vertical
  30+ 9722
  31+ 9722              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9722              ; -----------------------
  33+ 9722              ; -----------------------
  34+ 9722              ; -----------------------
  35+ 9722
  36+ 9722 CD 17 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9725 CD 4E 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9728
  39+ 9728 3A C0 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 972B CB AF        	res 5,a											; _a ser de utilidad.
  41+ 972D 32 C0 8B     	ld (Ctrl_0),a
  42+ 9730
  43+ 9730 C9           	ret
  44+ 9731
  45+ 9731              ; *******************************************************************************************************************************************************************************************
  46+ 9731              ;	21/01/23
  47+ 9731              ;
  48+ 9731              ; 	Comprueba_limite_horizontal.
  49+ 9731              ;
  50+ 9731              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9731              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9731              ;
  53+ 9731              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9731              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9731              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9731              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9731
  58+ 9731
  59+ 9731
  60+ 9731 3A C0 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9734 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9736 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9738 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 973A 32 C0 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 973D 18 09            jr 6F
  66+ 973F CB 5F        1 bit 3,a
  67+ 9741 28 0A            jr z,2F
  68+ 9743 E6 F7            and $f7
  69+ 9745 32 C0 8B         ld (Ctrl_0),a
  70+ 9748 CD 9B 98     6 call Inicializacion
  71+ 974B 18 5B            jr 5F
  72+ 974D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 974E
  74+ 974E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 974E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 974E
  77+ 974E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 974F 2A D4 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9752 CD 91 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9755 67           	ld h,a
  81+ 9756 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9757 CD 91 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 975A 67           	ld h,a
  84+ 975B A7           	and a
  85+ 975C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 975E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 975F 3A D2 8B     	ld a,(Cuad_objeto)
  88+ 9762 FE 02        	cp 2
  89+ 9764 38 1E        	jr c,3F
  90+ 9766 28 1C        	jr z,3F
  91+ 9768 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9769 28 23            jr z,7F
  93+ 976B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 976D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 976F E1           	pop hl
  96+ 9770
  97+ 9770              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9770              ; _para indicar con E="2" en caso necesario.
  99+ 9770
 100+ 9770 E5               push hl
 101+ 9771 C5               push bc
 102+ 9772 CD 91 94     	call calcula_tercio
 103+ 9775 FE 01        	cp 1
 104+ 9777 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9779 CD A9 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 977C 28 26            jr z,9F
 107+ 977E 38 24            jr c,9F
 108+ 9780 1E 00        11 ld e,0
 109+ 9782 18 22            jr 8F
 110+ 9784 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9785 28 07        	jr z, 7F
 112+ 9787 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9789 1E 00         	ld e,0
 114+ 978B E1           	pop hl
 115+ 978C 18 04        	jr 4F
 116+ 978E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9790 18 15            jr 10F
 118+ 9792
 119+ 9792              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9792              ; _para indicar con E="2" en caso necesario.
 121+ 9792
 122+ 9792 E5           4 push hl
 123+ 9793 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9794 CD 91 94     	call calcula_tercio
 125+ 9797 FE 01        	cp 1
 126+ 9799 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 979B CD A9 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 979E 28 04            jr z,9F
 129+ 97A0 30 02            jr nc,9F
 130+ 97A2 18 02        	jr 8F
 131+ 97A4 1E 02        9 ld e,2
 132+ 97A6 C1           8 pop bc
 133+ 97A7 E1           10 pop hl
 134+ 97A8 C9           5 ret
 135+ 97A9
 136+ 97A9              ; --------------------
 137+ 97A9              ;
 138+ 97A9              ; 25/08/22
 139+ 97A9
 140+ 97A9 CD 91 94     Comprueba_centro call calcula_tercio
 141+ 97AC 67               ld h,a
 142+ 97AD 08           	ex af,af
 143+ 97AE FE 02        	cp 2
 144+ 97B0 38 07        	jr c,1F
 145+ 97B2 28 05        	jr z,1F
 146+ 97B4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97B7 18 03        	jr 2F
 148+ 97B9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97BC 08           2 ex af,af
 150+ 97BD A7               and a
 151+ 97BE ED 42            sbc hl,bc
 152+ 97C0 C9               ret
 153+ 97C1
 154+ 97C1              ; *********************************************************************************************************************************************************************************************
 155+ 97C1              ;
 156+ 97C1              ;   16/8/22
 157+ 97C1              ;
 158+ 97C1              ;	Comprueba_limite_vertical
 159+ 97C1              ;
 160+ 97C1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97C1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97C1              ;
 163+ 97C1
 164+ 97C1 2A C3 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97C4 7D           	ld a,l
 166+ 97C5 E6 1F        	and $1F
 167+ 97C7 57           	ld d,a
 168+ 97C8 3A D6 8B     	ld a,(Limite_vertical)
 169+ 97CB BA           	cp d 											; Límite - Posición.
 170+ 97CC 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97CD 3A D2 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97D0 CB 47        	bit 0,a
 173+ 97D2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97D4
 175+ 97D4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97D4
 177+ 97D4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97D5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97D7
 180+ 97D7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97D7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97D7
 183+ 97D7 3A B4 8B         ld a,(Coordenada_X)
 184+ 97DA 16 0F            ld d,Centro_izquierda
 185+ 97DC A7               and a
 186+ 97DD 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97DE 28 1E            jr z,3F
 188+ 97E0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97E2              ;                                                    ; _salimos sin modificar nada.
 190+ 97E2 18 0E            jr 2F
 191+ 97E4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97E5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97E7
 194+ 97E7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97E7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97E7
 197+ 97E7 3A B4 8B         ld a,(Coordenada_X)
 198+ 97EA 16 10            ld d,Centro_derecha
 199+ 97EC A7               and a
 200+ 97ED 92               sub d
 201+ 97EE 28 0E            jr z,3F
 202+ 97F0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97F2              ;                                                    ; _salimos sin modificar nada.
 204+ 97F2 CB 43        2 bit 0,e
 205+ 97F4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97F6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97F7 CD 8B 98         call Modificaccionne
 208+ 97FA C1           	pop bc
 209+ 97FB CD 9B 98         call Inicializacion
 210+ 97FE C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97FF
 212+ 97FF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97FF
 214+ 97FF C5           4 push bc
 215+ 9800 01 C2 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9803 0A           	ld a,(bc)
 217+ 9804 3D           	dec a
 218+ 9805 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9806 7D           	ld a,l
 220+ 9807 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9808 CB 47        	bit 0,a
 222+ 980A 28 03        	jr z,5F
 223+ 980C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 980D 18 2E        	jr 7F
 225+ 980F
 226+ 980F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 980F
 228+ 980F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9810 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9811 3A C0 8B     	ld a,(Ctrl_0)
 231+ 9814 CB 4F        	bit 1,a
 232+ 9816 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9818 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9819
 235+ 9819              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9819
 237+ 9819 1C               inc e
 238+ 981A 1D               dec e
 239+ 981B 20 07            jr nz,12F
 240+ 981D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 981E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 981F 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9822 18 44        13 jr 9F
 244+ 9824 CB 43        12 bit 0,e
 245+ 9826 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9828              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9828 C1           	pop bc
 248+ 9829 18 D3        	jr 3B
 249+ 982B 80           14 add b
 250+ 982C 6F               ld l,a
 251+ 982D 22 C3 8B     	ld (Posicion_actual),hl
 252+ 9830 CD 8B 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9833 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9835 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9837 32 C0 8B         ld (Ctrl_0),a
 256+ 983A F1           	pop af
 257+ 983B 18 2B        	jr 9F
 258+ 983D
 259+ 983D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 983D
 261+ 983D F5           7 push af
 262+ 983E 3A C0 8B     	ld a,(Ctrl_0)
 263+ 9841 CB 47        	bit 0,a
 264+ 9843 20 1D        	jr nz,8F
 265+ 9845 F1           	pop af
 266+ 9846
 267+ 9846              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9846
 269+ 9846 1C           	inc e
 270+ 9847 1D               dec e
 271+ 9848 20 07            jr nz,10F
 272+ 984A 90           	sub b
 273+ 984B 6F               ld l,a
 274+ 984C 22 C3 8B     	ld (Posicion_actual),hl
 275+ 984F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9851              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9851 CB 43        10 bit 0,e
 278+ 9853 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9855              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9855 C1           	pop bc
 281+ 9856 18 A6        	jr 3B
 282+ 9858 90           16 sub b
 283+ 9859 6F               ld l,a
 284+ 985A 22 C3 8B     	ld (Posicion_actual),hl
 285+ 985D CD 8B 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9860 18 06            jr 9F
 287+ 9862 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9864 32 C0 8B         ld (Ctrl_0),a
 289+ 9867 F1           	pop af
 290+ 9868 C1           9 pop bc
 291+ 9869 1E 00        	ld e,0
 292+ 986B CD 9B 98         call Inicializacion
 293+ 986E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 986F 08           	ex af,af
 295+ 9870 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9871 18 8B            jr 3B
 297+ 9873
 298+ 9873              ; --------------------
 299+ 9873
 300+ 9873 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9875 CD BE 99     1 call PreviousScan
 302+ 9878 10 FB            djnz 1B
 303+ 987A 22 C3 8B     	ld (Posicion_actual),hl
 304+ 987D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 987E C9           	ret
 306+ 987F
 307+ 987F              ; --------------------
 308+ 987F
 309+ 987F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9881 CD AF 99     1 call NextScan
 311+ 9884 10 FB            djnz 1B
 312+ 9886 22 C3 8B     	ld (Posicion_actual),hl
 313+ 9889 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 988A C9           	ret
 315+ 988B
 316+ 988B              ; --------------------
 317+ 988B              ;
 318+ 988B              ;	22/01/23
 319+ 988B              ;
 320+ 988B              ;	E="1". Hemos cambiado de cuadrante.
 321+ 988B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 988B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 988B
 324+ 988B
 325+ 988B              Modificaccionne
 326+ 988B
 327+ 988B 3A D2 8B     	ld a,(Cuad_objeto)
 328+ 988E FE 02        	cp 2
 329+ 9890 CC 73 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9893 DC 73 98         call c,Modifica_Pos_actual
 331+ 9896 C8           	ret z
 332+ 9897 CD 7F 98         call Modifica_Pos_actual2
 333+ 989A C9               ret
 334+ 989B
 335+ 989B              ; *************************************************************************************************************************************************************************************************
 336+ 989B              ;
 337+ 989B              ;	13/8/22
 338+ 989B              ;
 339+ 989B              ;	Inicializacion
 340+ 989B              ;
 341+ 989B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 989B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 989B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 989B              ;
 345+ 989B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 989B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 989B              ;	_ desaparece/aparece.
 348+ 989B
 349+ 989B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 989B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 989B              ;
 352+ 989B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 989B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 989B              ; 		   [E] ="0"
 355+ 989B
 356+ 989B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 989B
 358+ 989B CD 91 94     Inicializacion call calcula_tercio
 359+ 989E 28 36        	jr z,primit
 360+ 98A0 E6 02        	and 2
 361+ 98A2 20 07        	jr nz,segmit
 362+ 98A4 7D           	ld a,l
 363+ 98A5 FE 7F        	cp $7f
 364+ 98A7 38 2D        	jr c,primit
 365+ 98A9 28 2B        	jr z,primit
 366+ 98AB CD 11 99     segmit call column
 367+ 98AE 38 13        	jr c,tercuad
 368+ 98B0 3E 04        cuarcuad ld a,4
 369+ 98B2 32 D2 8B     	ld (Cuad_objeto),a
 370+ 98B5 21 20 48     	ld hl,$4820
 371+ 98B8 22 D4 8B     	ld (Limite_horizontal),hl
 372+ 98BB 21 D6 8B     	ld hl,Limite_vertical
 373+ 98BE 36 0D        	ld (hl),$0d
 374+ 98C0 08           	ex af,af
 375+ 98C1 18 3C        	jr 1F
 376+ 98C3              tercuad
 377+ 98C3 3E 03        	ld a,3
 378+ 98C5 32 D2 8B     	ld (Cuad_objeto),a
 379+ 98C8 21 20 48     	ld hl,$4820
 380+ 98CB 22 D4 8B     	ld (Limite_horizontal),hl
 381+ 98CE 21 D6 8B     	ld hl,Limite_vertical
 382+ 98D1 36 12        	ld (hl),$12
 383+ 98D3 08           	ex af,af
 384+ 98D4 18 29        	jr 1F
 385+ 98D6 CD 11 99     primit call column
 386+ 98D9 38 13        	jr c, primcuad
 387+ 98DB              segcuad
 388+ 98DB 3E 02        	ld a,2
 389+ 98DD 32 D2 8B     	ld (Cuad_objeto),a
 390+ 98E0 21 C0 4F     	ld hl,$4fc0
 391+ 98E3 22 D4 8B     	ld (Limite_horizontal),hl
 392+ 98E6 21 D6 8B     	ld hl,Limite_vertical
 393+ 98E9 36 0D        	ld (hl),$0d
 394+ 98EB 08           	ex af,af
 395+ 98EC 18 11        	jr 1F
 396+ 98EE              primcuad
 397+ 98EE 3E 01        	ld a,1
 398+ 98F0 32 D2 8B     	ld (Cuad_objeto),a
 399+ 98F3 21 C0 4F     	ld hl,$4fc0
 400+ 98F6 22 D4 8B     	ld (Limite_horizontal),hl
 401+ 98F9 21 D6 8B     	ld hl,Limite_vertical
 402+ 98FC 36 12        	ld (hl),$12
 403+ 98FE 08           	ex af,af
 404+ 98FF
 405+ 98FF C5           1 push bc
 406+ 9900 E5           	push hl
 407+ 9901 D5           	push de
 408+ 9902
 409+ 9902 2A C3 8B     	ld hl,(Posicion_actual)
 410+ 9905 CD AF 94     	call Genera_coordenadas
 411+ 9908
 412+ 9908 D1           	pop de
 413+ 9909 E1           	pop hl
 414+ 990A C1           	pop bc
 415+ 990B
 416+ 990B 21 C0 8B     	ld hl,Ctrl_0
 417+ 990E CB EE        	set 5,(hl)
 418+ 9910 C9           	ret
 419+ 9911
 420+ 9911              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9911
 422+ 9911              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9911              ;
 424+ 9911              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9911
 426+ 9911 7D           column ld a,l
 427+ 9912 E6 1F        	and $1f
 428+ 9914 FE 10         	cp $10
 429+ 9916 C9            	ret
 430+ 9917
 431+ 9917              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9917              ;
 433+ 9917              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9917              ;
 435+ 9917              ; 14/12/22
 436+ 9917              ;
 437+ 9917              ;	Modifica: A y BC.
 438+ 9917
 439+ 9917 3A D2 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 991A E6 01        	and 1
 441+ 991C 28 17        	jr z,1F
 442+ 991E
 443+ 991E              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 991E
 445+ 991E 3A B4 8B     	ld a,(Coordenada_X)
 446+ 9921 47           	ld b,a
 447+ 9922 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9923 79           	ld a,c
 449+ 9924 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9925 38 08        	jr c,2F
 451+ 9927 47           	ld b,a
 452+ 9928 79           	ld a,c
 453+ 9929 90           	sub b
 454+ 992A 32 D3 8B     	ld (Columnas),a
 455+ 992D 18 1B        	jr 4F
 456+ 992F 79           2 ld a,c
 457+ 9930 32 D3 8B     	ld (Columnas),a
 458+ 9933 18 15        	jr 4F
 459+ 9935
 460+ 9935              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9935
 462+ 9935 3A B4 8B     1 ld a,(Coordenada_X)
 463+ 9938 81           	add c
 464+ 9939 3D           	dec a
 465+ 993A D6 1F        	sub $1f
 466+ 993C 38 08        	jr c,3F
 467+ 993E 47           	ld b,a
 468+ 993F 79           	ld a,c
 469+ 9940 90           	sub b
 470+ 9941 32 D3 8B     	ld (Columnas),a
 471+ 9944 18 04        	jr 4F
 472+ 9946 79           3 ld a,c
 473+ 9947 32 D3 8B     	ld (Columnas),a
 474+ 994A D9           4 exx
 475+ 994B 4F           	ld c,a
 476+ 994C D9           	exx
 477+ 994D C9            ret
 478+ 994E
 479+ 994E              ; --------------------------------------------------------------------------------------------------------------------
 480+ 994E              ;
 481+ 994E              ;   19/7/23
 482+ 994E              ;
 483+ 994E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 994E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 994E              ;
 486+ 994E              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 994E              ;			HL e IY Contienen (Puntero_objeto).
 488+ 994E              ;
 489+ 994E              ;	DESTRUYE: HL,B Y A.
 490+ 994E
 491+ 994E 3A D2 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9951 FE 02        	cp 2
 493+ 9953 38 18        	jr c,1F
 494+ 9955 28 16        	jr z,1F
 495+ 9957 E6 01        	and 1
 496+ 9959 28 0D        	jr z,3F
 497+ 995B
 498+ 995B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 995B
 500+ 995B CD 97 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 995E
 502+ 995E 7D           9 ld a,l
 503+ 995F E6 1F        	and $1f
 504+ 9961 28 2A        	jr z,7F
 505+ 9963 2B           	dec hl
 506+ 9964 10 F8        	djnz 9B
 507+ 9966 18 25        	jr 7F
 508+ 9968
 509+ 9968              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9968
 511+ 9968 2A C3 8B     3 ld hl,(Posicion_actual)
 512+ 996B 18 20        	jr 7F
 513+ 996D
 514+ 996D 28 14        1 jr z,2F
 515+ 996F
 516+ 996F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 996F
 518+ 996F CD 97 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9972
 520+ 9972 7D           4 ld a,l
 521+ 9973 E6 1F        	and $1f
 522+ 9975 28 03        	jr z,6F
 523+ 9977 2B           	dec hl
 524+ 9978 10 F8        	djnz 4B
 525+ 997A 06 0F        6 ld b,15
 526+ 997C CD BE 99     5 call PreviousScan
 527+ 997F 10 FB        	djnz 5B
 528+ 9981 18 0A        	jr 7F
 529+ 9983
 530+ 9983              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9983
 532+ 9983 CD 97 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9986 06 0F        	ld b,15
 534+ 9988 CD BE 99     8 call PreviousScan
 535+ 998B 10 FB        	djnz 8B
 536+ 998D
 537+ 998D E5           7 push hl
 538+ 998E DD E1        	pop ix
 539+ 9990
 540+ 9990 2A C5 8B     	ld hl,(Puntero_objeto)
 541+ 9993 E5           	push hl
 542+ 9994 FD E1        	pop iy
 543+ 9996
 544+ 9996 C9           	ret
 545+ 9997
 546+ 9997              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9997              ;
 548+ 9997              ;	2/1/23
 549+ 9997              ;
 550+ 9997              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9997              ;
 552+ 9997              ;	Tras esta rutina tenemos:
 553+ 9997              ;
 554+ 9997              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9997              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9997              ;
 557+ 9997              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9997
 559+ 9997 2A C3 8B     Operandos ld hl,(Posicion_actual)
 560+ 999A 3A D3 8B     	ld a,(Columnas)
 561+ 999D 3D           	dec a
 562+ 999E 20 01        	jr nz,1F
 563+ 99A0 3C           	inc a
 564+ 99A1 47           1 ld b,a
 565+ 99A2 C9           	ret
 566+ 99A3
 567+ 99A3              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99A3              ;
 569+ 99A3              ;	Prepara_draw
 570+ 99A3              ;
 571+ 99A3              ;	Es una rutina de carga.
 572+ 99A3              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99A3              ;
 574+ 99A3              ;	FUNCIONAMIENTO:
 575+ 99A3              ;
 576+ 99A3              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99A3              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99A3              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99A3              ;
 580+ 99A3              ;	DESTRUYE:
 581+ 99A3              ;
 582+ 99A3              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99A3
 584+ 99A3 21 C1 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99A6 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99A7 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99A8 4E           	ld c,(hl)
 588+ 99A9 2A C3 8B     	ld hl,(Posicion_actual)
 589+ 99AC 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99AE C9           	ret
 591+ 99AF
 592+ 99AF              ;----------------------------------------------------------------------------------------------------------------
 593+ 99AF              ;
 594+ 99AF              ;	5/08/22
 595+ 99AF              ;
 596+ 99AF              ;   NextScan.
 597+ 99AF              ;
 598+ 99AF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99AF              ;
 600+ 99AF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99AF              ;
 602+ 99AF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99AF              ;
 604+ 99AF              ;       DESTRUIDOS: AF y HL !!!
 605+ 99AF              ;
 606+ 99AF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99AF              ;
 608+ 99AF
 609+ 99AF 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99B0 7C               ld a,h
 611+ 99B1 E6 07            and 7
 612+ 99B3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99B4
 614+ 99B4 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99B5 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99B7 6F               ld l,a
 617+ 99B8 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99B9
 619+ 99B9 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99BA D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99BC 67               ld h,a
 622+ 99BD C9               ret
 623+ 99BE
 624+ 99BE              ;----------------------------------------------------------------------------------------------------------------
 625+ 99BE              ;
 626+ 99BE              ;	5/08/22
 627+ 99BE              ;
 628+ 99BE              ;   PreviousScan.
 629+ 99BE              ;
 630+ 99BE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99BE              ;
 632+ 99BE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99BE              ;
 634+ 99BE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99BE              ;
 636+ 99BE              ;       DESTRUIDOS: AF y HL !!!
 637+ 99BE              ;
 638+ 99BE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99BE              ;
 640+ 99BE
 641+ 99BE 7C           PreviousScan ld a,h
 642+ 99BF 25               dec h               ; Dec H.
 643+ 99C0 E6 07            and 7
 644+ 99C2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99C3
 646+ 99C3 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99C4 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99C6 6F               ld l,a
 649+ 99C7 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99C8
 651+ 99C8 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99C9 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99CB 67               ld h,a
 654+ 99CC C9               ret
 655+ 99CD
 656+ 99CD
 657+ 99CD
 658+ 99CD
 659+ 99CD
 660+ 99CD
 661+ 99CD
 662+ 99CD
 663+ 99CD
 664+ 99CD
 665+ 99CD
 666+ 99CD
# file closed: Draw_XOR.asm
2167  99CD              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99CD
   2+ 99CD              ; ******************************************************************************************************************************************************************************************
   3+ 99CD              ;
   4+ 99CD              ;   20/05/23
   5+ 99CD              ;
   6+ 99CD              ;	Recompone_posicion_inicio
   7+ 99CD              ;
   8+ 99CD              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99CD              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99CD              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99CD              ;	_ a una u otra rutina.
  12+ 99CD
  13+ 99CD              Recompone_posicion_inicio
  14+ 99CD
  15+ 99CD 2A D0 8B     	ld hl,(Posicion_inicio)
  16+ 99D0 7D           	ld a,l
  17+ 99D1 E6 1F        	and $1f
  18+ 99D3 28 16        	jr z,1F
  19+ 99D5
  20+ 99D5 FE 1F        	cp $1f
  21+ 99D7 28 0D        	jr z,3F
  22+ 99D9
  23+ 99D9 21 BF 8B     	ld hl,Ctrl_2
  24+ 99DC CB C6        	set 0,(hl)
  25+ 99DE 2A C5 8B     	ld hl,(Puntero_objeto)
  26+ 99E1 22 F1 8B     	ld (Repone_puntero_objeto),hl
  27+ 99E4 18 08        	jr 2F
  28+ 99E6
  29+ 99E6 CD 94 9B     3 call Mov_left
  30+ 99E9 18 03        	jr 2F
  31+ 99EB
  32+ 99EB CD 71 9A     1 call Mov_right
  33+ 99EE 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99F1 22 C5 8B     	ld (Puntero_objeto),hl
  35+ 99F4 C9           	ret
  36+ 99F5
  37+ 99F5              ; ******************************************************************************************************************************************************************************************
  38+ 99F5              ;
  39+ 99F5              ;   27/05/23
  40+ 99F5              ;
  41+ 99F5              ;	Mov_down
  42+ 99F5              ;
  43+ 99F5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99F5              ;
  45+ 99F5              ;
  46+ 99F5              Mov_down
  47+ 99F5
  48+ 99F5 CD 5F 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99F8              ;																	; _ repone (Puntero_objeto).
  50+ 99F8 21 C0 8B     	ld hl,Ctrl_0
  51+ 99FB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99FD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99FD              ; 																	; _ en el caso de que no lo haya.
  54+ 99FD 3A DB 8B     	ld a,(Vel_down)
  55+ 9A00 47           	ld b,a
  56+ 9A01 2A C3 8B         ld hl,(Posicion_actual)
  57+ 9A04 CD 91 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A07 E6 02        	and 2
  59+ 9A09 28 17        	jr z,1F
  60+ 9A0B
  61+ 9A0B              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A0B              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A0B
  64+ 9A0B 7C           	ld a,h
  65+ 9A0C FE 57        	cp $57
  66+ 9A0E 20 12        	jr nz,1F
  67+ 9A10
  68+ 9A10 7D           	ld a,l
  69+ 9A11 C6 20        	add $20
  70+ 9A13 30 0D        	jr nc,1F
  71+ 9A15
  72+ 9A15              ; ------------------------------
  73+ 9A15              ;
  74+ 9A15              ;	12/01/24
  75+ 9A15
  76+ 9A15              ;	call Reaparece_arriba
  77+ 9A15 CD 21 9D     	call Reinicio
  78+ 9A18
  79+ 9A18              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A18
  81+ 9A18 3A 24 8C     	ld a,(Ctrl_3)
  82+ 9A1B CB CF        	set 1,a
  83+ 9A1D 32 24 8C     	ld (Ctrl_3),a
  84+ 9A20
  85+ 9A20 18 08        	jr 3F
  86+ 9A22              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A22              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A22              ; ------------------------------
  89+ 9A22
  90+ 9A22 CD AF 99     1 call NextScan
  91+ 9A25 22 C3 8B     	ld (Posicion_actual),hl
  92+ 9A28 10 DA            djnz 2B
  93+ 9A2A CD AF 94     3 call Genera_coordenadas
  94+ 9A2D C9           	ret
  95+ 9A2E
  96+ 9A2E              ; ******************************************************************************************************************************************************************************************
  97+ 9A2E              ;
  98+ 9A2E              ;   27/05/23
  99+ 9A2E              ;
 100+ 9A2E              ;	Mov_up
 101+ 9A2E              ;
 102+ 9A2E              ; 	Mueve el Sprite hacia arriba.
 103+ 9A2E              ;
 104+ 9A2E              ;
 105+ 9A2E              Mov_up
 106+ 9A2E
 107+ 9A2E CD 5F 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A31              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A31 21 C0 8B     	ld hl,Ctrl_0
 110+ 9A34 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A36              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A36              ; 																		; _ en el caso de que no lo haya.
 113+ 9A36 3A DA 8B     	ld a,(Vel_up)
 114+ 9A39 47           	ld b,a
 115+ 9A3A 2A C3 8B     	ld hl,(Posicion_actual)
 116+ 9A3D CD 91 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A40 A7           	and a
 118+ 9A41 20 10        	jr nz,1F
 119+ 9A43
 120+ 9A43              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A43              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A43
 123+ 9A43 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A44 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A46 20 0B            jr nz,1F
 126+ 9A48 7D               ld a,l
 127+ 9A49 D6 20            sub $20
 128+ 9A4B 30 06            jr nc,1F
 129+ 9A4D 25               dec h
 130+ 9A4E
 131+ 9A4E              ; -----------------------------
 132+ 9A4E CD 02 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A51              ;	call Reinicio
 134+ 9A51              ; -----------------------------
 135+ 9A51
 136+ 9A51 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A53 CD BE 99     1 call PreviousScan
 138+ 9A56 22 C3 8B     	ld (Posicion_actual),hl
 139+ 9A59 10 E2            djnz 3B
 140+ 9A5B CD AF 94     2 call Genera_coordenadas
 141+ 9A5E C9           	ret
 142+ 9A5F
 143+ 9A5F              ; -----------------------------
 144+ 9A5F              ;
 145+ 9A5F              ;	27/5/23
 146+ 9A5F              ;
 147+ 9A5F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A5F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A5F              ;
 150+ 9A5F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A5F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A5F              ;
 153+ 9A5F              ;	Modifica: A y (Puntero_objeto).
 154+ 9A5F
 155+ 9A5F 3A BF 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A62 CB 47        	bit 0,a
 157+ 9A64 C8           	ret z
 158+ 9A65 CB 87        	res 0,a
 159+ 9A67 32 BF 8B     	ld (Ctrl_2),a
 160+ 9A6A 2A F1 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A6D 22 C5 8B     	ld (Puntero_objeto),hl
 162+ 9A70 C9           	ret
 163+ 9A71
 164+ 9A71              ; ******************************************************************************************************************************************************************************************
 165+ 9A71              ;
 166+ 9A71              ;	19/10/22
 167+ 9A71              ;
 168+ 9A71              ;	Mov_right.
 169+ 9A71              ;
 170+ 9A71              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A71              ;
 172+ 9A71
 173+ 9A71 3A C0 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A74 CB 77        	bit 6,a
 175+ 9A76 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A78
 177+ 9A78 CD B0 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A7B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A7C
 180+ 9A7C 21 C0 8B     	ld hl,Ctrl_0
 181+ 9A7F CB E6        	set 4,(hl)
 182+ 9A81 18 52        	jr 8F
 183+ 9A83
 184+ 9A83 21 C0 8B     10 ld hl,Ctrl_0
 185+ 9A86 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A88              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A88              ; 																	; _ en el caso de que no lo haya.
 188+ 9A88 3A B4 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A8B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A8D 20 46        	jr nz,8F
 191+ 9A8F
 192+ 9A8F 3A C7 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A92 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A93 28 40        	jr z,8F
 195+ 9A95
 196+ 9A95              ; ---------- ---------- ----------
 197+ 9A95              ;
 198+ 9A95              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A95
 200+ 9A95 3A D9 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A98 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A9A 28 11        	jr z,1F
 203+ 9A9C 38 06        	jr c,6F
 204+ 9A9E FE 04        	cp 4
 205+ 9AA0 28 14        	jr z,7F
 206+ 9AA2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AA4
 208+ 9AA4              ; ---------- ---------- ----------
 209+ 9AA4              ;
 210+ 9AA4              ; Perfiles de velocidad
 211+ 9AA4              ;
 212+ 9AA4
 213+ 9AA4 3A C7 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AA7 FE FE        	cp $fe
 215+ 9AA9 20 2A        	jr nz,8F
 216+ 9AAB 18 10        	jr 3F
 217+ 9AAD 3A C7 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AB0 FE FD        	cp $fd
 219+ 9AB2 20 21        	jr nz,8F
 220+ 9AB4 18 07        	jr 3F
 221+ 9AB6 3A C7 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AB9 FE FB        	cp $fb
 223+ 9ABB 20 18        	jr nz,8F
 224+ 9ABD
 225+ 9ABD              ; ---------- ---------- ----------
 226+ 9ABD
 227+ 9ABD              3
 228+ 9ABD CD F0 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AC0              ;	call Reinicio
 230+ 9AC0
 231+ 9AC0              ; ---------- ---------- ----------
 232+ 9AC0              ;
 233+ 9AC0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AC0
 235+ 9AC0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AC2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AC3 CD DC 9A     	call DESPLZ_DER
 238+ 9AC6 C1           	pop bc
 239+ 9AC7 10 F9        	djnz 5B
 240+ 9AC9 2A C3 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ACC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ACD 22 C3 8B     	ld (Posicion_actual),hl
 243+ 9AD0 CD AF 94     	call Genera_coordenadas
 244+ 9AD3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AD5
 246+ 9AD5              ; ---------- ---------- ----------
 247+ 9AD5
 248+ 9AD5 2A C3 8B     8 ld hl,(Posicion_actual)
 249+ 9AD8 CD DC 9A     	call DESPLZ_DER
 250+ 9ADB C9           2 ret
 251+ 9ADC
 252+ 9ADC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ADC              ;
 254+ 9ADC              ;	22/9/22
 255+ 9ADC              ;
 256+ 9ADC
 257+ 9ADC CD EB 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9ADF CD 37 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AE2 CD 60 9B         call Ciclo_completo
 260+ 9AE5 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AE8 CB FE        	set 7,(hl)
 262+ 9AEA C9           	ret
 263+ 9AEB
 264+ 9AEB              ; ******************************************************************************************************************************************************************************************
 265+ 9AEB              ;	15/02/23
 266+ 9AEB              ;
 267+ 9AEB
 268+ 9AEB 3A D9 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AEE 47           	ld b,a
 270+ 9AEF 2A CC 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AF2 23           1 inc hl
 272+ 9AF3 23           	inc hl
 273+ 9AF4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AF6 22 CC 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AF9 CD 99 90     	call Extrae_address
 276+ 9AFC 22 C5 8B     	ld (Puntero_objeto),hl
 277+ 9AFF
 278+ 9AFF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AFF
 280+ 9AFF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AFF              ; Cuántos movimientos hemos hecho ??
 282+ 9AFF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AFF
 284+ 9AFF 2A C8 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B02 EB           	ex de,hl
 286+ 9B03 A7           	and a
 287+ 9B04 ED 52        	sbc hl,de
 288+ 9B06 CB 3D        	srl l
 289+ 9B08 3E 08        6 ld a,8
 290+ 9B0A 95           	sub l
 291+ 9B0B 30 1E        	jr nc,3F
 292+ 9B0D
 293+ 9B0D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B0D              ; B="0".
 295+ 9B0D
 296+ 9B0D 04           4 inc b
 297+ 9B0E 3C           	inc a
 298+ 9B0F 20 FC        	jr nz,4B
 299+ 9B11 78           	ld a,b
 300+ 9B12 08           	ex af,af
 301+ 9B13 2A C8 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B16 23           5 inc hl
 303+ 9B17 23           	inc hl
 304+ 9B18 10 FC        	djnz 5B
 305+ 9B1A 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B1D CD 99 90     	call Extrae_address
 307+ 9B20 22 C5 8B     	ld (Puntero_objeto),hl
 308+ 9B23
 309+ 9B23              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B23              ; _(Posicion_actual).
 311+ 9B23
 312+ 9B23 21 C3 8B     	ld hl,Posicion_actual
 313+ 9B26 34           	inc (hl)
 314+ 9B27 08               ex af,af
 315+ 9B28 6F           	ld l,a
 316+ 9B29 18 DD        	jr 6B
 317+ 9B2B
 318+ 9B2B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B2B
 320+ 9B2B 47           3 ld b,a
 321+ 9B2C 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B2F 23           2 inc hl
 323+ 9B30 23           	inc hl
 324+ 9B31 10 FC        	djnz 2B
 325+ 9B33 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B36 C9           8 ret
 327+ 9B37
 328+ 9B37              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B37              ;
 330+ 9B37              ;	24/7/22
 331+ 9B37              ;
 332+ 9B37              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B37              ;
 334+ 9B37              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B37              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B37              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B37
 338+ 9B37 3A C7 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B3A A7           	and a
 340+ 9B3B 20 1F        	jr nz,1F
 341+ 9B3D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B3F 32 C7 8B         ld (CTRL_DESPLZ),a
 343+ 9B42
 344+ 9B42 21 C2 8B     	ld hl,Columns
 345+ 9B45 34           	inc (hl)
 346+ 9B46 3A D2 8B     	ld a,(Cuad_objeto)
 347+ 9B49 E6 01        	and 1
 348+ 9B4B 28 0F        	jr z,1F
 349+ 9B4D 2A C3 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B50 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B51 22 C3 8B     	ld (Posicion_actual),hl
 352+ 9B54 CD AF 94     	call Genera_coordenadas
 353+ 9B57 CD BC 9C     	call Inc_CTRL_DESPLZ
 354+ 9B5A 18 03        	jr 2F
 355+ 9B5C CD BC 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B5F C9           2 ret
 357+ 9B60
 358+ 9B60              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B60              ;
 360+ 9B60              ;	24/7/22
 361+ 9B60              ;
 362+ 9B60              ;	Ciclo_completo.
 363+ 9B60              ;
 364+ 9B60              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B60              ;
 366+ 9B60              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B60              ; 	Decrementamos (Columns).
 368+ 9B60              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B60              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B60
 371+ 9B60
 372+ 9B60 3A C7 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B63 FE FF        	cp $ff
 374+ 9B65 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B67 E6 F0        	and $f0
 376+ 9B69 20 28        	jr nz,3F
 377+ 9B6B
 378+ 9B6B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B6B
 380+ 9B6B 3A C7 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B6E 47           	ld b,a
 382+ 9B6F 3E F8        	ld a,$f8
 383+ 9B71 80           	add b
 384+ 9B72 32 C7 8B     	ld (CTRL_DESPLZ),a
 385+ 9B75 18 1C        	jr 3F
 386+ 9B77 21 C2 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B7A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B7B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B7C 32 C7 8B     	ld (CTRL_DESPLZ),a
 390+ 9B7F 3A D2 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B82 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B84 20 0A        	jr nz,2F
 393+ 9B86 2A C3 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B89 23           	inc hl
 395+ 9B8A 22 C3 8B     	ld (Posicion_actual),hl
 396+ 9B8D CD AF 94     	call Genera_coordenadas
 397+ 9B90
 398+ 9B90              ; Inicia el puntero de Sprite.
 399+ 9B90
 400+ 9B90 CD AE 90     2 call Inicia_puntero_objeto_der
 401+ 9B93 C9           3 ret
 402+ 9B94
 403+ 9B94              ; ******************************************************************************************************************************************************************************************
 404+ 9B94              ;
 405+ 9B94              ;	15/02/23
 406+ 9B94              ;
 407+ 9B94              ;	Mov_left.
 408+ 9B94              ;
 409+ 9B94              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B94              ;
 411+ 9B94              Mov_left
 412+ 9B94
 413+ 9B94 21 C0 8B     	ld hl,Ctrl_0
 414+ 9B97 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B99              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B99              ; 																	; _ en el caso de que no lo haya.
 417+ 9B99 3A C0 8B     	ld a,(Ctrl_0)
 418+ 9B9C CB 77        	bit 6,a
 419+ 9B9E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BA0
 421+ 9BA0 CD B6 9C     	call Stop_Amadeus_left
 422+ 9BA3 C8           	ret z
 423+ 9BA4 20 4A        	jr nz,8F
 424+ 9BA6
 425+ 9BA6 3A B4 8B     11 ld a,(Coordenada_X)
 426+ 9BA9 A7           	and a
 427+ 9BAA 20 44        	jr nz,8F
 428+ 9BAC
 429+ 9BAC 3A C7 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BAF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BB0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BB2
 433+ 9BB2              ; ---------- ---------- ----------
 434+ 9BB2
 435+ 9BB2 3A D8 8B     	ld a,(Vel_left)
 436+ 9BB5 FE 02        	cp 2
 437+ 9BB7 28 0F        	jr z,1F
 438+ 9BB9 38 04        	jr c,6F
 439+ 9BBB FE 04        	cp 4
 440+ 9BBD 28 12        	jr z,7F
 441+ 9BBF
 442+ 9BBF              ; ---------- ---------- ----------
 443+ 9BBF
 444+ 9BBF 3A C7 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BC2 FE F8        	cp $f8
 446+ 9BC4 20 2A        	jr nz,8F
 447+ 9BC6 18 10        	jr 4F
 448+ 9BC8 3A C7 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BCB FE F9        	cp $f9
 450+ 9BCD 20 21        	jr nz,8F
 451+ 9BCF 18 07        	jr 4F
 452+ 9BD1 3A C7 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BD4 FE FB        	cp $fb
 454+ 9BD6 20 18        	jr nz,8F
 455+ 9BD8
 456+ 9BD8              ; ---------- ---------- ----------
 457+ 9BD8
 458+ 9BD8              4
 459+ 9BD8 CD DE 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BDB              ;	call Reinicio
 461+ 9BDB
 462+ 9BDB              ; ---------- ---------- ----------
 463+ 9BDB
 464+ 9BDB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BDD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BDE
 467+ 9BDE              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BDE              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BDE
 470+ 9BDE CD F7 9B     	call DESPLZ_IZQ
 471+ 9BE1 C1           	pop bc
 472+ 9BE2 10 F9        	djnz 5B
 473+ 9BE4 2A C3 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BE7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BE8 22 C3 8B     	ld (Posicion_actual),hl
 476+ 9BEB CD AF 94     	call Genera_coordenadas
 477+ 9BEE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BF0
 479+ 9BF0              ; ---------- ---------- ----------
 480+ 9BF0
 481+ 9BF0              ; Movemos, no hay recolocación.
 482+ 9BF0
 483+ 9BF0 2A C3 8B     8 ld hl,(Posicion_actual)
 484+ 9BF3 CD F7 9B     	call DESPLZ_IZQ
 485+ 9BF6 C9           2 ret
 486+ 9BF7
 487+ 9BF7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BF7              ;
 489+ 9BF7              ;	22/9/22
 490+ 9BF7
 491+ 9BF7              DESPLZ_IZQ
 492+ 9BF7
 493+ 9BF7 CD 06 9C     	call Desplaza_izquierda
 494+ 9BFA CD 52 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BFD CD 7A 9C     	call Ciclo_completo_2
 496+ 9C00 21 C0 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C03 CB BE        	res 7,(hl)
 498+ 9C05 C9           	ret
 499+ 9C06
 500+ 9C06              Desplaza_izquierda
 501+ 9C06
 502+ 9C06 3A D8 8B     	ld a,(Vel_left)
 503+ 9C09 47           	ld b,a
 504+ 9C0A 2A CE 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C0D 23           1 inc hl
 506+ 9C0E 23           	inc hl
 507+ 9C0F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C11 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C14 CD 99 90     	call Extrae_address
 510+ 9C17 22 C5 8B     	ld (Puntero_objeto),hl
 511+ 9C1A
 512+ 9C1A              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C1A
 514+ 9C1A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C1A              ; Cuántos movimientos hemos hecho ??
 516+ 9C1A              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C1A
 518+ 9C1A 2A CA 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C1D EB           	ex de,hl
 520+ 9C1E A7           	and a
 521+ 9C1F ED 52        	sbc hl,de
 522+ 9C21 CB 3D        	srl l
 523+ 9C23 3E 08        6 ld a,8
 524+ 9C25 95           	sub l
 525+ 9C26 30 1E        	jr nc,3F
 526+ 9C28
 527+ 9C28              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C28              ; B="0".
 529+ 9C28
 530+ 9C28 04           4 inc b
 531+ 9C29 3C           	inc a
 532+ 9C2A 20 FC        	jr nz,4B
 533+ 9C2C 78           	ld a,b
 534+ 9C2D 08           	ex af,af
 535+ 9C2E 2A CA 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C31 23           5 inc hl
 537+ 9C32 23           	inc hl
 538+ 9C33 10 FC        	djnz 5B
 539+ 9C35 22 CE 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C38 CD 99 90     	call Extrae_address
 541+ 9C3B 22 C5 8B     	ld (Puntero_objeto),hl
 542+ 9C3E
 543+ 9C3E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C3E              ; _(Posicion_actual).
 545+ 9C3E
 546+ 9C3E 21 C3 8B     	ld hl,Posicion_actual
 547+ 9C41 35           	dec (hl)
 548+ 9C42 08           	ex af,af
 549+ 9C43 6F           	ld l,a
 550+ 9C44 18 DD        	jr 6B
 551+ 9C46
 552+ 9C46              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C46
 554+ 9C46 47           3 ld b,a
 555+ 9C47 2A C8 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C4A 23           2 inc hl
 557+ 9C4B 23           	inc hl
 558+ 9C4C 10 FC        	djnz 2B
 559+ 9C4E 22 CC 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C51 C9           8 ret
 561+ 9C52
 562+ 9C52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C52              ;
 564+ 9C52              ;	modifica_parametros_1er_DESPLZ
 565+ 9C52              ;
 566+ 9C52              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C52              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C52              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C52
 570+ 9C52 3A C7 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C55 A7           	and a
 572+ 9C56 20 1E        	jr nz,1F
 573+ 9C58 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C59 32 C7 8B         ld (CTRL_DESPLZ),a
 575+ 9C5C 21 C2 8B     	ld hl,Columns
 576+ 9C5F 34           	inc (hl)
 577+ 9C60 3A D2 8B     	ld a,(Cuad_objeto)
 578+ 9C63 E6 01        	and 1
 579+ 9C65 20 0F        	jr nz,1F
 580+ 9C67 2A C3 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C6A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C6B 22 C3 8B     	ld (Posicion_actual),hl
 583+ 9C6E CD AF 94     	call Genera_coordenadas
 584+ 9C71 CD CD 9C     	call Dec_CTRL_DESPLZ
 585+ 9C74 18 03        	jr 2F
 586+ 9C76 CD CD 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C79 C9           2 ret
 588+ 9C7A
 589+ 9C7A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C7A
 591+ 9C7A 3A C7 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C7D FE F7        	cp $f7
 593+ 9C7F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C81 30 2C        	jr nc,3F
 595+ 9C83
 596+ 9C83              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C83
 598+ 9C83 06 00        	ld b,0
 599+ 9C85 04           4 inc b
 600+ 9C86 3C           	inc a
 601+ 9C87 FE F7        	cp $f7
 602+ 9C89 20 FA        	jr nz,4B
 603+ 9C8B 3E FF        	ld a,$ff
 604+ 9C8D 90           	sub b
 605+ 9C8E 32 C7 8B     	ld (CTRL_DESPLZ),a
 606+ 9C91 18 1C        	jr 3F
 607+ 9C93
 608+ 9C93              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C93
 610+ 9C93 21 C2 8B     1 ld hl,Columns
 611+ 9C96 35           	dec (hl)
 612+ 9C97 AF           	xor a
 613+ 9C98 32 C7 8B     	ld (CTRL_DESPLZ),a
 614+ 9C9B 3A D2 8B     	ld a,(Cuad_objeto)
 615+ 9C9E E6 01        	and 1
 616+ 9CA0 28 0A        	jr z,2F
 617+ 9CA2 2A C3 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CA5 2B           	dec hl
 619+ 9CA6 22 C3 8B     	ld (Posicion_actual),hl
 620+ 9CA9 CD AF 94     	call Genera_coordenadas
 621+ 9CAC
 622+ 9CAC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CAC
 624+ 9CAC CD C1 90     2 call Inicia_puntero_objeto_izq
 625+ 9CAF C9           3 ret
 626+ 9CB0
 627+ 9CB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CB0              ;
 629+ 9CB0              ;	19/10/22
 630+ 9CB0              ;
 631+ 9CB0              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CB0              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CB0
 634+ 9CB0 3A B4 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CB3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CB5 C9           	ret
 637+ 9CB6
 638+ 9CB6              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CB6              ;
 640+ 9CB6              ;	19/10/22
 641+ 9CB6              ;
 642+ 9CB6              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CB6              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CB6
 645+ 9CB6 3A B4 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CB9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CBB C9           	ret
 648+ 9CBC
 649+ 9CBC              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CBC              ;
 651+ 9CBC              ;	24/7/22
 652+ 9CBC              ;
 653+ 9CBC              ;	Inc_CTRL_DESPLZ
 654+ 9CBC              ;
 655+ 9CBC              ;
 656+ 9CBC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CBC
 658+ 9CBC 21 C7 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CBF 3A D9 8B     	ld a,(Vel_right)
 660+ 9CC2 A7           	and a
 661+ 9CC3 28 06        	jr z,1F
 662+ 9CC5 47           	ld b,a
 663+ 9CC6 34           3 inc (hl)
 664+ 9CC7 10 FD        	djnz 3B
 665+ 9CC9 18 01        	jr 2F
 666+ 9CCB 34           1 inc (hl)
 667+ 9CCC C9           2 ret
 668+ 9CCD
 669+ 9CCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CCD              ;
 671+ 9CCD              ;	5/2/23
 672+ 9CCD              ;
 673+ 9CCD              ;	Dec_CTRL_DESPLZ
 674+ 9CCD              ;
 675+ 9CCD              ;
 676+ 9CCD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CCD
 678+ 9CCD 21 C7 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CD0 3A D8 8B     	ld a,(Vel_left)
 680+ 9CD3 A7           	and a
 681+ 9CD4 28 06        	jr z,1F
 682+ 9CD6 47           	ld b,a
 683+ 9CD7 35           3 dec (hl)
 684+ 9CD8 10 FD        	djnz 3B
 685+ 9CDA 18 01        	jr 2F
 686+ 9CDC 35           1 dec (hl)
 687+ 9CDD C9           2 ret
 688+ 9CDE
 689+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CDE
 691+ 9CDE 2A C3 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CE1 01 1F 00     	ld bc,31
 693+ 9CE4 A7           	and a
 694+ 9CE5 ED 4A        	adc hl,bc
 695+ 9CE7 22 C3 8B     	ld (Posicion_actual),hl
 696+ 9CEA 21 C0 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CED CB C6        	set 0,(hl)
 698+ 9CEF C9           	ret
 699+ 9CF0
 700+ 9CF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CF0
 702+ 9CF0 2A C3 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CF3 01 1F 00     	ld bc,31
 704+ 9CF6 A7           	and a
 705+ 9CF7 ED 42        	sbc hl,bc
 706+ 9CF9 22 C3 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CFC 21 C0 8B     	ld hl,Ctrl_0
 708+ 9CFF CB CE        	set 1,(hl)
 709+ 9D01 C9           	ret
 710+ 9D02
 711+ 9D02              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D02
 713+ 9D02 24           Reaparece_abajo inc h
 714+ 9D03 01 E0 17     	ld bc,$17e0
 715+ 9D06 A7           	and a
 716+ 9D07 ED 4A        	adc hl,bc
 717+ 9D09 22 C3 8B     	ld (Posicion_actual),hl
 718+ 9D0C 21 C0 8B     	ld hl,Ctrl_0
 719+ 9D0F CB D6        	set 2,(hl)
 720+ 9D11 C9           	ret
 721+ 9D12
 722+ 9D12              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D12
 724+ 9D12 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D15 A7           	and a
 726+ 9D16 ED 42        	sbc hl,bc
 727+ 9D18 22 C3 8B     	ld (Posicion_actual),hl
 728+ 9D1B 21 C0 8B     	ld hl,Ctrl_0
 729+ 9D1E CB DE        	set 3,(hl)
 730+ 9D20 C9           	ret
 731+ 9D21
 732+ 9D21              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D21              ;
 734+ 9D21              ;	15/07/23
 735+ 9D21
 736+ 9D21              Reinicio
 737+ 9D21
 738+ 9D21              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D21
 740+ 9D21 AF           	xor a
 741+ 9D22 21 E8 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D25 CD 43 9D     	call Limpia_contenido_hl
 743+ 9D28
 744+ 9D28 21 C3 8B     	ld hl,Posicion_actual
 745+ 9D2B CD 43 9D     	call Limpia_contenido_hl
 746+ 9D2E
 747+ 9D2E CD 91 92     	call Inicializa_Puntero_indice_mov
 748+ 9D31 CD 42 9E     	call Inicia_Puntero_mov
 749+ 9D34
 750+ 9D34 21 EA 8B     	ld hl,Incrementa_puntero
 751+ 9D37 06 05        	ld b,5
 752+ 9D39 77           1 ld (hl),a
 753+ 9D3A 23           	inc hl
 754+ 9D3B 10 FC        	djnz 1B
 755+ 9D3D
 756+ 9D3D 21 BF 8B     	ld hl,Ctrl_2
 757+ 9D40 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D42
 759+ 9D42 C9           	ret
 760+ 9D43
 761+ 9D43 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D44 23           	inc hl
 763+ 9D45 77           	ld (hl),a
 764+ 9D46 C9           	ret
 765+ 9D47
 766+ 9D47              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D47              ;
 768+ 9D47              ;	18/6/24
 769+ 9D47              ;
 770+ 9D47
 771+ 9D47              Amadeus_a_izquierda
 772+ 9D47
 773+ 9D47              ;	Actualiza contador de movimientos.
 774+ 9D47
 775+ 9D47 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D4A 35           	dec (hl)
 777+ 9D4B 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D4D
 779+ 9D4D 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D50 2B           	dec hl
 781+ 9D51 2B           	dec hl
 782+ 9D52 2B           	dec hl
 783+ 9D53 2B           	dec hl
 784+ 9D54 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D57
 786+ 9D57 21 24 8C     	ld hl,Ctrl_3
 787+ 9D5A CB EE        	set 5,(hl)
 788+ 9D5C
 789+ 9D5C C9           	ret
 790+ 9D5D
 791+ 9D5D 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D5E C9           	ret
 793+ 9D5F
 794+ 9D5F
 795+ 9D5F              Amadeus_a_derecha
 796+ 9D5F
 797+ 9D5F              ;	Actualiza contador de movimientos.
 798+ 9D5F
 799+ 9D5F 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D62 34           	inc (hl)
 801+ 9D63 3E 7A        	ld a,$7a
 802+ 9D65 BE           	cp (hl)
 803+ 9D66 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D68
 805+ 9D68 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D6B 23           	inc hl
 807+ 9D6C 23           	inc hl
 808+ 9D6D 23           	inc hl
 809+ 9D6E 23           	inc hl
 810+ 9D6F 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D72
 812+ 9D72 21 24 8C     	ld hl,Ctrl_3
 813+ 9D75 CB EE        	set 5,(hl)
 814+ 9D77 C9           	ret
 815+ 9D78
 816+ 9D78 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D79 C9           	ret
# file closed: Direcciones.asm
2168  9D7A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D7A              ; ----- ----- ----- ----- -----
   2+ 9D7A              ;
   3+ 9D7A              ;   28/12/23
   4+ 9D7A
   5+ 9D7A              Movimiento
   6+ 9D7A
   7+ 9D7A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D7A
   9+ 9D7A 3A BF 8B         ld a,(Ctrl_2)
  10+ 9D7D CB 57            bit 2,a
  11+ 9D7F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D81
  13+ 9D81 2A E6 8B         ld hl,(Puntero_mov)
  14+ 9D84 7E               ld a,(hl)
  15+ 9D85
  16+ 9D85              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D85
  18+ 9D85              Inicia_desplazamiento.
  19+ 9D85
  20+ 9D85              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D85
  22+ 9D85 CD 78 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D88
  24+ 9D88              ; Iniciamos (Repetimos_mov).
  25+ 9D88
  26+ 9D88 7E               ld a,(hl)
  27+ 9D89 E6 0F            and $0f
  28+ 9D8B 32 EC 8B         ld (Repetimos_desplazamiento),a
  29+ 9D8E 32 ED 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D91
  31+ 9D91              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D91
  33+ 9D91 23               inc hl
  34+ 9D92 7E               ld a,(hl)
  35+ 9D93 32 EF 8B         ld (Cola_de_desplazamiento),a
  36+ 9D96 2B               dec hl
  37+ 9D97
  38+ 9D97 21 BF 8B         ld hl,Ctrl_2
  39+ 9D9A CB D6            set 2,(hl)
  40+ 9D9C
  41+ 9D9C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D9C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D9C
  44+ 9D9C              Desplazamiento_iniciado
  45+ 9D9C
  46+ 9D9C CD 4C 9E         call Aplica_desplazamiento
  47+ 9D9F
  48+ 9D9F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D9F
  50+ 9D9F 3A 24 8C         ld a,(Ctrl_3)
  51+ 9DA2 CB 4F            bit 1,a
  52+ 9DA4 C0               ret nz
  53+ 9DA5
  54+ 9DA5 21 EC 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DA8 35               dec (hl)
  56+ 9DA9 C0               ret nz
  57+ 9DAA
  58+ 9DAA              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DAA              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DAA              ; Analiza (Cola_de_desplazamiento).
  61+ 9DAA
  62+ 9DAA 3A EF 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DAD A7               and a
  64+ 9DAE CC A1 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DB1 28 30            jr z,Reinicia_el_movimiento
  66+ 9DB3
  67+ 9DB3 FE FF            cp $ff
  68+ 9DB5 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DB7
  70+ 9DB7 FE FE            cp $fe
  71+ 9DB9 CC 26 9E         call z,Fijamos_bucle
  72+ 9DBC 28 25            jr z,Reinicia_el_movimiento
  73+ 9DBE
  74+ 9DBE FE FD            cp $fd
  75+ 9DC0 20 11            jr nz,1F
  76+ 9DC2
  77+ 9DC2              ; ---
  78+ 9DC2              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DC2
  80+ 9DC2 3A BF 8B         ld a,(Ctrl_2)
  81+ 9DC5 CB 5F            bit 3,a
  82+ 9DC7 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DC9
  84+ 9DC9              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DC9
  86+ 9DC9 21 BF 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DCC CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DCE
  89+ 9DCE CD 37 9E         call Inicia_Repetimos_movimiento
  90+ 9DD1 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DD3              ; ---
  92+ 9DD3
  93+ 9DD3 FE 01        1 cp 1
  94+ 9DD5 CA 10 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DD8
  96+ 9DD8 3D               dec a
  97+ 9DD9 32 EF 8B         ld (Cola_de_desplazamiento),a
  98+ 9DDC
  99+ 9DDC 3A ED 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DDF 32 EC 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DE2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DE2 C9               ret
 103+ 9DE3
 104+ 9DE3              Reinicia_el_movimiento
 105+ 9DE3
 106+ 9DE3 3A BF 8B         ld a,(Ctrl_2)
 107+ 9DE6 CB 5F            bit 3,a
 108+ 9DE8 28 1B            jr z,2F
 109+ 9DEA
 110+ 9DEA              ; (Cola_de_desplazamiento)="254".
 111+ 9DEA
 112+ 9DEA 21 EE 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DED 35               dec (hl)
 114+ 9DEE 20 15            jr nz,2F
 115+ 9DF0
 116+ 9DF0              ; Fin de las repeticiones del último movimiento.
 117+ 9DF0
 118+ 9DF0 21 BF 8B         ld hl,Ctrl_2
 119+ 9DF3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DF5
 121+ 9DF5 2A E6 8B         ld hl,(Puntero_mov)
 122+ 9DF8 23               inc hl
 123+ 9DF9 23               inc hl
 124+ 9DFA 23               inc hl
 125+ 9DFB 22 E6 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DFE              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DFE 7E               ld a,(hl)
 128+ 9DFF 32 EF 8B         ld (Cola_de_desplazamiento),a
 129+ 9E02
 130+ 9E02 C3 AA 9D         jp Cola
 131+ 9E05
 132+ 9E05 CD 42 9E     2 call Inicia_Puntero_mov
 133+ 9E08
 134+ 9E08 21 BF 8B         ld hl,Ctrl_2
 135+ 9E0B CB 96            res 2,(hl)
 136+ 9E0D
 137+ 9E0D C3 7A 9D         jp Movimiento
 138+ 9E10
 139+ 9E10              Siguiente_desplazamiento
 140+ 9E10
 141+ 9E10              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E10              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E10
 144+ 9E10 21 BF 8B         ld hl,Ctrl_2
 145+ 9E13 CB 96            res 2,(hl)
 146+ 9E15
 147+ 9E15 2A E6 8B         ld hl,(Puntero_mov)
 148+ 9E18 23               inc hl
 149+ 9E19 23               inc hl
 150+ 9E1A 22 E6 8B         ld (Puntero_mov),hl
 151+ 9E1D
 152+ 9E1D 7E               ld a,(hl)
 153+ 9E1E A7               and a
 154+ 9E1F CC A1 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E22 CA E3 9D         jp z,Reinicia_el_movimiento
 156+ 9E25
 157+ 9E25 C9               ret
 158+ 9E26
 159+ 9E26              ; Subrutinas -----------------------------------------
 160+ 9E26              ; ---------- --------- --------- ---------- ----------
 161+ 9E26              ;
 162+ 9E26              ;   24/07/23
 163+ 9E26              ;
 164+ 9E26              ;   Fijamos_bucle
 165+ 9E26              ;
 166+ 9E26              ;
 167+ 9E26
 168+ 9E26              Fijamos_bucle
 169+ 9E26
 170+ 9E26 3A EA 8B         ld a,(Incrementa_puntero)
 171+ 9E29 3C               inc a
 172+ 9E2A 32 EB 8B         ld (Incrementa_puntero_backup),a
 173+ 9E2D
 174+ 9E2D CD A1 9E         call Incrementa_Puntero_indice_mov
 175+ 9E30 2A E4 8B         ld hl,(Puntero_indice_mov)
 176+ 9E33 22 E8 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E36 C9               ret
 178+ 9E37
 179+ 9E37              ; ---------- --------- --------- ---------- ----------
 180+ 9E37              ;
 181+ 9E37              ;   07/7/23
 182+ 9E37              ;
 183+ 9E37              ;   Inicia_Repetimos_movimiento
 184+ 9E37              ;
 185+ 9E37              ;
 186+ 9E37
 187+ 9E37              Inicia_Repetimos_movimiento
 188+ 9E37
 189+ 9E37              ; Iniciamos (Repetimos_movimiento).
 190+ 9E37
 191+ 9E37 DD 2A E6 8B      ld ix,(Puntero_mov)
 192+ 9E3B DD 7E 02         ld a,(ix+2)
 193+ 9E3E 32 EE 8B         ld (Repetimos_movimiento),a
 194+ 9E41
 195+ 9E41 C9               ret
 196+ 9E42
 197+ 9E42              ; ---------- --------- --------- ---------- ----------
 198+ 9E42              ;
 199+ 9E42              ;   26/6/23
 200+ 9E42              ;
 201+ 9E42              ;   Inicia_Puntero_mov
 202+ 9E42              ;
 203+ 9E42              ;
 204+ 9E42
 205+ 9E42 2A E4 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E45 CD 99 90         call Extrae_address
 207+ 9E48 22 E6 8B         ld (Puntero_mov),hl
 208+ 9E4B C9               ret
 209+ 9E4C
 210+ 9E4C              ; ---------- --------- --------- ---------- ----------
 211+ 9E4C              ;
 212+ 9E4C              ;   27/06/23
 213+ 9E4C              ;
 214+ 9E4C              ;   Aplica_movimiento.
 215+ 9E4C
 216+ 9E4C              Aplica_desplazamiento
 217+ 9E4C
 218+ 9E4C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E4C
 220+ 9E4C 2A E6 8B         ld hl, (Puntero_mov)
 221+ 9E4F
 222+ 9E4F 7E               ld a,(hl)
 223+ 9E50 E6 F0            and $f0
 224+ 9E52 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E53
 226+ 9E53 CB 7E            bit 7,(hl)
 227+ 9E55 28 03            jr z,1F
 228+ 9E57 CD 2E 9A         call Mov_up
 229+ 9E5A 2A E6 8B     1 ld hl, (Puntero_mov)
 230+ 9E5D CB 76            bit 6,(hl)
 231+ 9E5F 28 03            jr z,2F
 232+ 9E61 CD F5 99         call Mov_down
 233+ 9E64
 234+ 9E64              ; Se ha aplicado reinicio ???
 235+ 9E64              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E64
 237+ 9E64              ;    ld a,(Ctrl_3)
 238+ 9E64              ;    bit 1,a
 239+ 9E64              ;    ret nz
 240+ 9E64
 241+ 9E64 2A E6 8B     2 ld hl, (Puntero_mov)
 242+ 9E67 CB 6E            bit 5,(hl)
 243+ 9E69 28 03            jr z,3F
 244+ 9E6B CD 94 9B         call Mov_left
 245+ 9E6E 2A E6 8B     3 ld hl, (Puntero_mov)
 246+ 9E71 CB 66            bit 4,(hl)
 247+ 9E73 C8               ret z
 248+ 9E74 CD 71 9A         call Mov_right
 249+ 9E77 C9               ret
 250+ 9E78
 251+ 9E78              ; ---------- --------- --------- ---------- ----------
 252+ 9E78              ;
 253+ 9E78              ;   26/06/23
 254+ 9E78              ;
 255+ 9E78              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E78
 257+ 9E78              Ajusta_velocidad_desplazamiento
 258+ 9E78
 259+ 9E78              ; 1er byte de la cadena de movimiento.
 260+ 9E78              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E78
 262+ 9E78 CD 96 9E         call Extrae_nibble_alto
 263+ 9E7B
 264+ 9E7B 32 DA 8B         ld (Vel_up),a
 265+ 9E7E 79               ld a,c
 266+ 9E7F E6 0F            and $0f
 267+ 9E81 32 DB 8B         ld (Vel_down),a
 268+ 9E84
 269+ 9E84              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E84              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E84
 272+ 9E84 23               inc hl
 273+ 9E85 CD 96 9E         call Extrae_nibble_alto
 274+ 9E88
 275+ 9E88 32 D8 8B         ld (Vel_left),a
 276+ 9E8B 79               ld a,c
 277+ 9E8C E6 0F            and $0f
 278+ 9E8E 32 D9 8B         ld (Vel_right),a
 279+ 9E91
 280+ 9E91              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E91
 282+ 9E91 23               inc hl
 283+ 9E92 22 E6 8B         ld (Puntero_mov),hl
 284+ 9E95 C9               ret
 285+ 9E96
 286+ 9E96 06 04        Extrae_nibble_alto ld b,4
 287+ 9E98 7E               ld a,(hl)
 288+ 9E99 4F               ld c,a
 289+ 9E9A E6 F0            and $f0
 290+ 9E9C CB 3F        1 srl a
 291+ 9E9E 10 FC            djnz 1B
 292+ 9EA0 C9               ret
 293+ 9EA1
 294+ 9EA1              ; ---------- --------- --------- ---------- ----------
 295+ 9EA1              ;
 296+ 9EA1              ;   5/7/23
 297+ 9EA1              ;
 298+ 9EA1              ;   Incrementa_Puntero_indice_mov
 299+ 9EA1
 300+ 9EA1              Incrementa_Puntero_indice_mov
 301+ 9EA1
 302+ 9EA1 21 EA 8B         ld hl,Incrementa_puntero
 303+ 9EA4 34               inc (hl)
 304+ 9EA5
 305+ 9EA5 2A E4 8B         ld hl,(Puntero_indice_mov)
 306+ 9EA8 01 02 00         ld bc,2
 307+ 9EAB A7               and a
 308+ 9EAC 09               add hl,bc
 309+ 9EAD 22 E4 8B         ld (Puntero_indice_mov),hl
 310+ 9EB0
 311+ 9EB0 7E               ld a,(hl)
 312+ 9EB1 A7               and a
 313+ 9EB2
 314+ 9EB2              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EB2
 316+ 9EB2              ;    jr z,$
 317+ 9EB2
 318+ 9EB2              ;! Reinicia el Patrón de movimiento.
 319+ 9EB2
 320+ 9EB2 CC B7 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EB5
 322+ 9EB5 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EB6
 324+ 9EB6 C9               ret
 325+ 9EB7
 326+ 9EB7              ; ---------- --------- --------- ---------- ----------
 327+ 9EB7              ;
 328+ 9EB7              ;   15/01/24
 329+ 9EB7              ;
 330+ 9EB7              ;   Inicializa_Puntero_indice_mov
 331+ 9EB7
 332+ 9EB7              Inicializa_Puntero_indice_mov_2
 333+ 9EB7
 334+ 9EB7              ; Existe etiqueta de bucle principal???
 335+ 9EB7
 336+ 9EB7 2A E8 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EBA 24               inc h
 338+ 9EBB 25               dec h
 339+ 9EBC 28 05            jr z,2F
 340+ 9EBE
 341+ 9EBE 22 E4 8B         ld (Puntero_indice_mov),hl
 342+ 9EC1 18 14            jr 3F
 343+ 9EC3
 344+ 9EC3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EC3
 346+ 9EC3 3A EA 8B     2 ld a,(Incrementa_puntero)
 347+ 9EC6 47               ld b,a
 348+ 9EC7
 349+ 9EC7 2A E4 8B         ld hl,(Puntero_indice_mov)
 350+ 9ECA 2B           1 dec hl
 351+ 9ECB 2B               dec hl
 352+ 9ECC 10 FC            djnz 1B
 353+ 9ECE 22 E4 8B         ld (Puntero_indice_mov),hl
 354+ 9ED1
 355+ 9ED1 AF               xor a
 356+ 9ED2 32 EA 8B         ld (Incrementa_puntero),a
 357+ 9ED5 18 06            jr 4F
 358+ 9ED7
 359+ 9ED7 3A EB 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EDA 32 EA 8B         ld (Incrementa_puntero),a
 361+ 9EDD C9           4 ret
 362+ 9EDE
 363+ 9EDE              ; ----------------------------------------------------------------------
 364+ 9EDE              ;
 365+ 9EDE              ;   30/01/24
 366+ 9EDE              ;
 367+ 9EDE              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EDE
 369+ 9EDE 3A B3 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EE1 CD 2C 94         call Calcula_salto_en_BC
 371+ 9EE4 21 DC 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EE7 A7               and a
 373+ 9EE8 ED 4A            adc hl,bc
 374+ 9EEA C9               ret
 375+ 9EEB
 376+ 9EEB              ; ----------------------------------------------------------------------
 377+ 9EEB              ;
 378+ 9EEB              ;   30/01/24
 379+ 9EEB              ;
 380+ 9EEB              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EEB              ;
 382+ 9EEB              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EEB
 384+ 9EEB 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EEC 23               inc hl
 386+ 9EED 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EEE 69               ld l,c
 388+ 9EEF 60               ld h,b
 389+ 9EF0 22 BC 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EF3 C9               ret
 391+ 9EF4
# file closed: Movimiento.asm
2169  9EF4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EF4              Motor_de_disparos_entidades
   2+ 9EF4
   3+ 9EF4 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9EF7 FE 07            cp 7
   5+ 9EF9 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9EFA
   7+ 9EFA 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9EFC 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9EFF
  10+ 9EFF CD 99 90     1 call Extrae_address
  11+ 9F02 13               inc de
  12+ 9F03 13               inc de
  13+ 9F04 ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F08
  15+ 9F08 23               inc hl
  16+ 9F09
  17+ 9F09 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F0A 35               dec (hl)
  19+ 9F0B 28 14            jr z,3F
  20+ 9F0D
  21+ 9F0D 23               inc hl
  22+ 9F0E
  23+ 9F0E CD 99 90         call Extrae_address
  24+ 9F11              ;   (Puntero_de_impresion) del disparo en HL.
  25+ 9F11
  26+ 9F11
  27+ 9F11              ;! Velocidad del disparo de entidades.
  28+ 9F11
  29+ 9F11              ;    call NextScan
  30+ 9F11              ;    call NextScan
  31+ 9F11              ;    call NextScan
  32+ 9F11              ;    call NextScan
  33+ 9F11 CD AF 99         call NextScan
  34+ 9F14
  35+ 9F14              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  36+ 9F14
  37+ 9F14 CD 25 9F         call Fin_de_disparo_de_entidad
  38+ 9F17
  39+ 9F17 EB               ex de,hl
  40+ 9F18
  41+ 9F18 73               ld (hl),e
  42+ 9F19 23               inc hl
  43+ 9F1A 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  44+ 9F1B
  45+ 9F1B 2A 27 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F1E 18 02            jr 2F
  47+ 9F20
  48+ 9F20 C9               ret
  49+ 9F21
  50+ 9F21 EB           3 ex de,hl
  51+ 9F22 10 DB        2 djnz 1B
  52+ 9F24
  53+ 9F24 C9               ret
  54+ 9F25
  55+ 9F25              ; ------------- ------------- ------------
  56+ 9F25              ;
  57+ 9F25              ;   25/9/24
  58+ 9F25
  59+ 9F25              Fin_de_disparo_de_entidad
  60+ 9F25
  61+ 9F25 7C               ld a,h
  62+ 9F26 FE 54            cp $54
  63+ 9F28 D8               ret c
  64+ 9F29
  65+ 9F29 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  66+ 9F2A
  67+ 9F2A 5D               ld e,l
  68+ 9F2B 54               ld d,h
  69+ 9F2C
  70+ 9F2C 21 E0 57         ld hl,$57e0
  71+ 9F2F ED 52            sbc hl,de
  72+ 9F31
  73+ 9F31 38 04            jr c,Elimina_disparo_entidad
  74+ 9F33
  75+ 9F33 6B               ld l,e
  76+ 9F34 62               ld h,d
  77+ 9F35
  78+ 9F35 D1               pop de
  79+ 9F36
  80+ 9F36 C9               ret
  81+ 9F37
  82+ 9F37              ; ------------ ----------- ------------
  83+ 9F37              ;
  84+ 9F37              ;   25/9/24
  85+ 9F37
  86+ 9F37              Elimina_disparo_entidad
  87+ 9F37
  88+ 9F37 21 14 8C         ld hl,Numero_de_disparos_de_entidades
  89+ 9F3A 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
  90+ 9F3B
  91+ 9F3B E1               pop hl
  92+ 9F3C E5               push hl
  93+ 9F3D
  94+ 9F3D 2B               dec hl
  95+ 9F3E 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
  96+ 9F3F
  97+ 9F3F 16 06            ld d,6                                                              ; Contador
  98+ 9F41 AF               xor a                                                               ; Borrador
  99+ 9F42
 100+ 9F42 77           1 ld (hl),a
 101+ 9F43 15               dec d
 102+ 9F44 23               inc hl
 103+ 9F45 20 FB            jr nz,1B
 104+ 9F47
 105+ 9F47 D1               pop de
 106+ 9F48
 107+ 9F48 21 26 8C         ld hl,Ctrl_5
 108+ 9F4B CB D6            set 2,(hl)
 109+ 9F4D
 110+ 9F4D 21 00 00         ld hl,0
 111+ 9F50
 112+ 9F50 C9               ret
 113+ 9F51              ; --------------------------------------------------------------------------------------
 114+ 9F51              ;
 115+ 9F51              ;   19/09/24
 116+ 9F51              ;
 117+ 9F51
 118+ 9F51              Genera_datos_de_impresion_disparos_Entidades
 119+ 9F51
 120+ 9F51              ;*  Exclusiones.
 121+ 9F51
 122+ 9F51 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 123+ 9F54 47               ld b,a
 124+ 9F55 3E 07            ld a,7
 125+ 9F57 90               sub b
 126+ 9F58 C8               ret z
 127+ 9F59
 128+ 9F59 3C               inc a
 129+ 9F5A 08               ex af,af
 130+ 9F5B
 131+ 9F5B              ; ---------------
 132+ 9F5B
 133+ 9F5B              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 134+ 9F5B
 135+ 9F5B              ;	ld a,(Ctrl_5)
 136+ 9F5B              ;	bit 2,a
 137+ 9F5B              ;	di
 138+ 9F5B              ;	jr nz,$
 139+ 9F5B              ;	ei
 140+ 9F5B
 141+ 9F5B CD 92 90         call Inicia_Puntero_Disparo_Entidades
 142+ 9F5E
 143+ 9F5E CD 99 90     1 call Extrae_address
 144+ 9F61
 145+ 9F61 23               inc hl
 146+ 9F62 7E               ld a,(hl)
 147+ 9F63 A7               and a
 148+ 9F64
 149+ 9F64 28 1D            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 150+ 9F66
 151+ 9F66 2B               dec hl
 152+ 9F67
 153+ 9F67 ED 73 00 8C      ld (Stack),sp
 154+ 9F6B F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 155+ 9F6C
 156+ 9F6C              Genera_scanlines_de_los_disparos_de_entidades.
 157+ 9F6C
 158+ 9F6C C1               pop bc
 159+ 9F6D E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 160+ 9F6E              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 161+ 9F6E ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 162+ 9F72
 163+ 9F72 F1               pop af
 164+ 9F73 F1               pop af
 165+ 9F74 F1               pop af
 166+ 9F75
 167+ 9F75 ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 168+ 9F79
 169+ 9F79 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 170+ 9F7A CD AF 99         call NextScan
 171+ 9F7D E5               push hl                                                   ;? Sube 1er scanline al álbum.
 172+ 9F7E C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 173+ 9F7F
 174+ 9F7F ED 7B 00 8C      ld sp,(Stack)
 175+ 9F83
 176+ 9F83              Situa_en_siguiente_caja
 177+ 9F83
 178+ 9F83 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 179+ 9F84 3D               dec a
 180+ 9F85 C8               ret z
 181+ 9F86 08               ex af,af
 182+ 9F87
 183+ 9F87 13               inc de
 184+ 9F88 13               inc de
 185+ 9F89
 186+ 9F89 EB               ex de,hl
 187+ 9F8A
 188+ 9F8A 18 D2            jr 1B
 189+ 9F8C
 190+ 9F8C              ; --------------------------------------------------------------------------------------
 191+ 9F8C              ;
 192+ 9F8C              ;   18/09/24
 193+ 9F8C              ;
 194+ 9F8C
 195+ 9F8C              Genera_disparo_de_entidad_maldosa
 196+ 9F8C
 197+ 9F8C              ;   Estructura de un disparo de entidades.
 198+ 9F8C
 199+ 9F8C              ;   Disparo_1 defw 0								; Puntero objeto.
 200+ 9F8C              ; 	defw 0											; Puntero de impresión.
 201+ 9F8C              ;	defw 0											; Control.
 202+ 9F8C
 203+ 9F8C              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 204+ 9F8C              ;   _de la entidad en el momento de disparar.
 205+ 9F8C
 206+ 9F8C              ;   El byte alto muestra la siguiente información:
 207+ 9F8C              ;
 208+ 9F8C              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 209+ 9F8C              ;                        _antes de desplazarse a derecha/izquierda.
 210+ 9F8C              ;
 211+ 9F8C              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 212+ 9F8C              ;
 213+ 9F8C              ;                        10xx ..... Izquierda.
 214+ 9F8C              ;                        01xx ..... Derecha.
 215+ 9F8C              ;                        00xx ..... Recto.
 216+ 9F8C
 217+ 9F8C              ;*  Exclusiones.
 218+ 9F8C
 219+ 9F8C              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 220+ 9F8C              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 221+ 9F8C
 222+ 9F8C 3A 14 8C         ld a,(Numero_de_disparos_de_entidades)
 223+ 9F8F A7               and a
 224+ 9F90 C8               ret z
 225+ 9F91
 226+ 9F91 3A B5 8B         ld a,(Coordenada_y)
 227+ 9F94 A7               and a
 228+ 9F95 C8               ret z
 229+ 9F96
 230+ 9F96 3D               dec a
 231+ 9F97 C8               ret z
 232+ 9F98
 233+ 9F98 FE 0E            cp 14
 234+ 9F9A D0               ret nc
 235+ 9F9B
 236+ 9F9B              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 237+ 9F9B              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 238+ 9F9B              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 239+ 9F9B              ;
 240+ 9F9B
 241+ 9F9B 21 16 8C         ld hl,Permiso_de_disparo_Entidades			        ; No más disparos en este FRAME.
 242+ 9F9E 35               dec (hl)
 243+ 9F9F
 244+ 9F9F FD 21 70 83      ld iy,Disparo_de_entidad
 245+ 9FA3
 246+ 9FA3              ;! Debuggg
 247+ 9FA3
 248+ 9FA3              ;   Decrementa el numero de disparos de entidades.
 249+ 9FA3
 250+ 9FA3 21 14 8C         ld hl,Numero_de_disparos_de_entidades
 251+ 9FA6 35               dec (hl)
 252+ 9FA7
 253+ 9FA7              ;   Puntero de impresión del disparo en BC.
 254+ 9FA7
 255+ 9FA7 21 29 8C         ld hl,Puntero_de_impresion_disparo_de_entidad
 256+ 9FAA 4E               ld c,(hl)
 257+ 9FAB 23               inc hl
 258+ 9FAC 46               ld b,(hl)
 259+ 9FAD
 260+ 9FAD CD 92 90         call Inicia_Puntero_Disparo_Entidades
 261+ 9FB0
 262+ 9FB0 2A 27 8C     1 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)              ; En la 1ª caja del índice.
 263+ 9FB3 CD 99 90         call Extrae_address
 264+ 9FB6
 265+ 9FB6              ;   Comprobamos si la caja está vacía.
 266+ 9FB6
 267+ 9FB6 23               inc hl
 268+ 9FB7 7E               ld a,(hl)
 269+ 9FB8 A7               and a
 270+ 9FB9
 271+ 9FB9 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 272+ 9FBB
 273+ 9FBB              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 274+ 9FBB
 275+ 9FBB 2B               dec hl
 276+ 9FBC
 277+ 9FBC FD 7D            ld a,iyl
 278+ 9FBE 77               ld (hl),a
 279+ 9FBF 23               inc hl
 280+ 9FC0 FD 7C            ld a,iyh
 281+ 9FC2 77               ld (hl),a                                           ; Guarda el (puntero objeto) del disparo en la caja.
 282+ 9FC3
 283+ 9FC3 23               inc hl
 284+ 9FC4
 285+ 9FC4 71               ld (hl),c
 286+ 9FC5 23               inc hl
 287+ 9FC6 70               ld (hl),b                                           ; Guarda el puntero de impresión.
 288+ 9FC7
 289+ 9FC7 23               inc hl
 290+ 9FC8
 291+ 9FC8 3A BE 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 292+ 9FCB 77               ld (hl),a
 293+ 9FCC
 294+ 9FCC 23               inc hl
 295+ 9FCD
 296+ 9FCD              ;! Ajusta el grado de inclinación del disparo.
 297+ 9FCD
 298+ 9FCD 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 299+ 9FCF
 300+ 9FCF              ; Determina tendencia del disparo.
 301+ 9FCF
 302+ 9FCF 3A 6E 89         ld a,(CX_Amadeus)
 303+ 9FD2 47               ld b,a
 304+ 9FD3 3A B4 8B         ld a,(Coordenada_X)
 305+ 9FD6 90               sub b
 306+ 9FD7 38 07            jr c,Disparo_a_derecha
 307+ 9FD9
 308+ 9FD9 FE 04        Disparo_a_izquierda cp 4
 309+ 9FDB
 310+ 9FDB D8               ret c
 311+ 9FDC C8               ret z
 312+ 9FDD
 313+ 9FDD CB FE            set 7,(hl)
 314+ 9FDF C9               ret
 315+ 9FE0
 316+ 9FE0 47           Disparo_a_derecha ld b,a
 317+ 9FE1 3E FF            ld a,$ff
 318+ 9FE3 90               sub b
 319+ 9FE4
 320+ 9FE4 FE 04            cp 4
 321+ 9FE6
 322+ 9FE6 D8               ret c
 323+ 9FE7 C8               ret z
 324+ 9FE8
 325+ 9FE8 CB F6            set 6,(hl)
 326+ 9FEA C9               ret
 327+ 9FEB
 328+ 9FEB              ;   --- --- ---
 329+ 9FEB
 330+ 9FEB              Situa_en_siguiente_disparo
 331+ 9FEB
 332+ 9FEB 13               inc de
 333+ 9FEC 13               inc de
 334+ 9FED
 335+ 9FED ED 53 27 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 336+ 9FF1 18 BD            jr 1B
 337+ 9FF3
 338+ 9FF3              ; --------------------------------------------------------------------------------------
 339+ 9FF3              ;
 340+ 9FF3              ;   31/08/24
 341+ 9FF3              ;
 342+ 9FF3
 343+ 9FF3              Compara_con_coordenadas_de_disparo
 344+ 9FF3
 345+ 9FF3 3A B5 8B         ld a,(Coordenada_y)
 346+ 9FF6 47               ld b,a
 347+ 9FF7 3A 2E 8C         ld a,(Coordenadas_disparo_certero)
 348+ 9FFA 90               sub b
 349+ 9FFB
 350+ 9FFB              ; A = "0" ok
 351+ 9FFB              ; A = "1" ok
 352+ 9FFB
 353+ 9FFB 28 08            jr z,Comprueba_coordenada_X
 354+ 9FFD 3D               dec a
 355+ 9FFE 28 05            jr z,Comprueba_coordenada_X
 356+ A000
 357+ A000              ; A = "$ff" ok
 358+ A000
 359+ A000 FE FE            cp $fe
 360+ A002 28 01            jr z,Comprueba_coordenada_X
 361+ A004
 362+ A004 C9               ret
 363+ A005
 364+ A005              Comprueba_coordenada_X
 365+ A005
 366+ A005 3A B4 8B         ld a,(Coordenada_X)
 367+ A008 47               ld b,a
 368+ A009 21 2F 8C         ld hl,Coordenadas_disparo_certero+1
 369+ A00C 7E               ld a,(hl)
 370+ A00D 90               sub b
 371+ A00E
 372+ A00E              ; A = "0" ok
 373+ A00E              ; A = "1" ok
 374+ A00E
 375+ A00E 28 09            jr z,Activa_Impacto_en_entidad
 376+ A010 3D               dec a
 377+ A011 28 06            jr z,Activa_Impacto_en_entidad
 378+ A013
 379+ A013              ; A = "2" ok
 380+ A013
 381+ A013 3D               dec a
 382+ A014 28 03            jr z,Activa_Impacto_en_entidad
 383+ A016
 384+ A016              ; A = "$ff"
 385+ A016
 386+ A016 FE FD            cp $fd
 387+ A018 C0               ret nz
 388+ A019
 389+ A019              Activa_Impacto_en_entidad
 390+ A019
 391+ A019              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 392+ A019
 393+ A019 3E 02            ld a,2
 394+ A01B 32 B7 8B         ld (Impacto),a
 395+ A01E
 396+ A01E              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 397+ A01E
 398+ A01E 11 C0 87         ld de,Indice_Explosion_entidades
 399+ A021 21 BA 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 400+ A024
 401+ A024 73               ld (hl),e
 402+ A025 23               inc hl
 403+ A026 72               ld (hl),d
 404+ A027
 405+ A027              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 406+ A027
 407+ A027 21 2B 8C         ld hl,Impacto2
 408+ A02A CB 9E            res 3,(hl)
 409+ A02C
 410+ A02C C9               ret
 411+ A02D
 412+ A02D              ; --------------------------------------------------------------------------------------
 413+ A02D              ;
 414+ A02D              ;   11/09/24
 415+ A02D              ;
 416+ A02D
 417+ A02D              Limpia_album_de_borrado_disparos
 418+ A02D
 419+ A02D              ;    ld hl,Ctrl_5
 420+ A02D              ;    bit 2,(hl)
 421+ A02D              ;    jr z,1F
 422+ A02D
 423+ A02D              ;    res 2,(hl)
 424+ A02D
 425+ A02D              ;    jr Limpiando
 426+ A02D
 427+ A02D              ;1 bit 0,(hl)
 428+ A02D              ;    ret z
 429+ A02D              ;    res 0,(hl)
 430+ A02D
 431+ A02D              Limpiando
 432+ A02D
 433+ A02D AF               xor a
 434+ A02E 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 435+ A031 77               ld (hl),a
 436+ A032 5D               ld e,l
 437+ A033 54               ld d,h
 438+ A034 1C               inc e                                           ; DE = HL+1
 439+ A035 01 3A 00         ld bc,$003a
 440+ A038 ED B0            ldir
 441+ A03A
 442+ A03A C9               ret
 443+ A03B
 444+ A03B
 445+ A03B              ; --------------------------------------------------------------------------------------
 446+ A03B              ;
 447+ A03B              ;   26/08/24
 448+ A03B              ;
 449+ A03B
 450+ A03B              Calcula_bytes_pintado_disparos
 451+ A03B
 452+ A03B 2A 0C 8C         ld hl,(Album_de_pintado_disparos)
 453+ A03E 45               ld b,l
 454+ A03F 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 455+ A042 7D               ld a,l
 456+ A043
 457+ A043 90               sub b
 458+ A044 32 12 8C         ld (Num_de_bytes_album_de_disparos),a
 459+ A047
 460+ A047 C9               ret
 461+ A048
 462+ A048              ; --------------------------------------------------------------------------------------
 463+ A048              ;
 464+ A048              ;   11/09/24
 465+ A048              ;
 466+ A048              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 467+ A048              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 468+ A048              ;   _disparos que el álbum del FRAME actual).
 469+ A048
 470+ A048              Limpia_album_de_pintado_disparos
 471+ A048
 472+ A048              ;*   Exclusiones.
 473+ A048
 474+ A048 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 475+ A04B A7               and a
 476+ A04C C8               ret z
 477+ A04D
 478+ A04D              ; -----
 479+ A04D
 480+ A04D 3A 12 8C         ld a,(Num_de_bytes_album_de_disparos)
 481+ A050 47               ld b,a
 482+ A051 3A 13 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 483+ A054
 484+ A054 90               sub b
 485+ A055
 486+ A055 C8               ret z
 487+ A056 D8               ret c
 488+ A057
 489+ A057 2A 10 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 490+ A05A 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 491+ A05B AF               xor a                                                               ; "0".
 492+ A05C
 493+ A05C 77           1 ld (hl),a
 494+ A05D 2C               inc l
 495+ A05E 10 FC            djnz 1B
 496+ A060
 497+ A060 C9               ret
 498+ A061
 499+ A061              ; --------------------------------------------------------------------------------------
 500+ A061              ;
 501+ A061              ;   27/08/24
 502+ A061              ;
 503+ A061
 504+ A061              Motor_Disparos_Amadeus
 505+ A061
 506+ A061              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 507+ A061
 508+ A061 21 20 89         ld hl,Disparo_Amad+1
 509+ A064
 510+ A064 34               inc (hl)
 511+ A065 35               dec (hl)
 512+ A066
 513+ A066 C8               ret z
 514+ A067
 515+ A067              ;   Esta caja contiene un disparo.
 516+ A067
 517+ A067 CD 6E A0         call Consulta_Impacto
 518+ A06A CC 87 A0         call z,Mueve_disparo_Amadeus
 519+ A06D
 520+ A06D C9               ret
 521+ A06E
 522+ A06E              ; ----------------------
 523+ A06E              ;
 524+ A06E              ;
 525+ A06E              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 526+ A06E              ;
 527+ A06E              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 528+ A06E
 529+ A06E
 530+ A06E              Consulta_Impacto
 531+ A06E
 532+ A06E              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 533+ A06E              ;   _sea lo más coherente posible.
 534+ A06E
 535+ A06E E5               push hl
 536+ A06F 2B               dec hl
 537+ A070 CD 68 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 538+ A073 E1               pop hl
 539+ A074 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 540+ A075
 541+ A075 C8               ret z
 542+ A076
 543+ A076 3A 2B 8C         ld a,(Impacto2)
 544+ A079 CB DF            set 3,a
 545+ A07B 32 2B 8C         ld (Impacto2),a
 546+ A07E
 547+ A07E E5               push hl
 548+ A07F CD 55 A1         call Genera_coordenadas_de_disparo_Amadeus
 549+ A082 E1               pop hl
 550+ A083 CD A0 A0         call Elimina_disparo
 551+ A086
 552+ A086 C9               ret
 553+ A087
 554+ A087              ; ----------------------
 555+ A087              ;
 556+ A087              ;
 557+ A087              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 558+ A087
 559+ A087              Mueve_disparo_Amadeus
 560+ A087
 561+ A087 CD 99 90         call Extrae_address
 562+ A08A
 563+ A08A CD BE 99         call PreviousScan
 564+ A08D CD BE 99         call PreviousScan
 565+ A090 CD BE 99         call PreviousScan
 566+ A093 CD BE 99         call PreviousScan
 567+ A096
 568+ A096              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 569+ A096
 570+ A096 7C               ld a,h
 571+ A097 D6 40            sub $40
 572+ A099 EB               ex de,hl
 573+ A09A 38 04            jr c,Elimina_disparo
 574+ A09C
 575+ A09C               ; Introduce nuevo puntero_de_impresión en la caja.
 576+ A09C
 577+ A09C 73               ld (hl),e
 578+ A09D 23               inc hl
 579+ A09E 72               ld (hl),d
 580+ A09F
 581+ A09F C9               ret
 582+ A0A0
 583+ A0A0              ; ----------------------
 584+ A0A0              ;
 585+ A0A0              ;   11/9/24
 586+ A0A0
 587+ A0A0              Elimina_disparo
 588+ A0A0
 589+ A0A0              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 590+ A0A0              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 591+ A0A0
 592+ A0A0              ;   Disparo_1A defw 0									; Puntero objeto.
 593+ A0A0              ;   	defw 0											; Puntero de impresión.
 594+ A0A0
 595+ A0A0 2B               dec hl
 596+ A0A1 2B               dec hl
 597+ A0A2
 598+ A0A2 AF               xor a
 599+ A0A3 77               ld (hl),a
 600+ A0A4 23               inc hl
 601+ A0A5 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 602+ A0A6
 603+ A0A6 23               inc hl
 604+ A0A7 77               ld (hl),a
 605+ A0A8 23               inc hl
 606+ A0A9 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 607+ A0AA
 608+ A0AA 3E 01            ld a,1
 609+ A0AC 32 15 8C         ld (Permiso_de_disparo_Amadeus),a
 610+ A0AF
 611+ A0AF 21 26 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 612+ A0B2 CB C6            set 0,(hl)
 613+ A0B4
 614+ A0B4 AF               xor a
 615+ A0B5 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 616+ A0B6
 617+ A0B6 C9               ret
 618+ A0B7
 619+ A0B7              ; --------------------------------------------------------------------------------------
 620+ A0B7              ;
 621+ A0B7              ;   21/8/24
 622+ A0B7              ;
 623+ A0B7
 624+ A0B7              Pinta_disparos
 625+ A0B7
 626+ A0B7              ;    ld a,(Ctrl_5)
 627+ A0B7              ;    bit 2,a
 628+ A0B7              ;    jr nz,$
 629+ A0B7
 630+ A0B7 ED 73 00 8C      ld (Stack),sp
 631+ A0BB 06 02            ld b,2
 632+ A0BD
 633+ A0BD ED 7B 0E 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 634+ A0C1
 635+ A0C1 D1           2 pop de
 636+ A0C2
 637+ A0C2 14               inc d
 638+ A0C3 15               dec d
 639+ A0C4
 640+ A0C4 28 1B            jr z,1F
 641+ A0C6
 642+ A0C6              Imprime_scanlines_de_disparo
 643+ A0C6
 644+ A0C6 E1               pop hl
 645+ A0C7
 646+ A0C7              ; Puntero objeto en DE.
 647+ A0C7              ; Puntero_de_impresión en HL.
 648+ A0C7
 649+ A0C7              ; 1er scanline.
 650+ A0C7
 651+ A0C7 1A               ld a,(de)
 652+ A0C8 AE               xor (hl)
 653+ A0C9 77               ld (hl),a
 654+ A0CA
 655+ A0CA 13               inc de
 656+ A0CB 2C               inc l
 657+ A0CC
 658+ A0CC 1A               ld a,(de)
 659+ A0CD AE               xor (hl)
 660+ A0CE 77               ld (hl),a
 661+ A0CF
 662+ A0CF              ; 2º scanline.
 663+ A0CF
 664+ A0CF E1               pop hl
 665+ A0D0 1B               dec de
 666+ A0D1
 667+ A0D1 1A               ld a,(de)
 668+ A0D2 AE               xor (hl)
 669+ A0D3 77               ld (hl),a
 670+ A0D4
 671+ A0D4 13               inc de
 672+ A0D5 2C               inc l
 673+ A0D6
 674+ A0D6 1A               ld a,(de)
 675+ A0D7 AE               xor (hl)
 676+ A0D8 77               ld (hl),a
 677+ A0D9
 678+ A0D9              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 679+ A0D9
 680+ A0D9 18 E6            jr 2B
 681+ A0DB
 682+ A0DB ED 7B 0C 8C  3 ld sp,(Album_de_pintado_disparos)
 683+ A0DF 18 E0            jr 2B
 684+ A0E1
 685+ A0E1 10 F8        1 djnz 3B
 686+ A0E3 ED 7B 00 8C      ld sp,(Stack)
 687+ A0E7 C9               ret
 688+ A0E8
 689+ A0E8              ; --------------------------------------------------------------------------------------
 690+ A0E8              ;
 691+ A0E8              ;   14/09/24
 692+ A0E8              ;
 693+ A0E8              ;   Modifica: HL y DE.
 694+ A0E8
 695+ A0E8
 696+ A0E8              Genera_datos_de_impresion_disparos_Amadeus
 697+ A0E8
 698+ A0E8 ED 73 00 8C      ld (Stack),sp
 699+ A0EC 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 700+ A0EF D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 701+ A0F0
 702+ A0F0 14               inc d                                                     ;? Salimos si no hay disparo.
 703+ A0F1 15               dec d
 704+ A0F2
 705+ A0F2 28 12            jr z,Salida
 706+ A0F4
 707+ A0F4              Genera_scanlines_de_disparo_Amadeus
 708+ A0F4
 709+ A0F4 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 710+ A0F5              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 711+ A0F5 ED 7B 10 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 712+ A0F9
 713+ A0F9 C1               pop bc
 714+ A0FA C1               pop bc
 715+ A0FB C1               pop bc
 716+ A0FC
 717+ A0FC ED 73 10 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 718+ A100
 719+ A100 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 720+ A101 CD BE 99         call PreviousScan
 721+ A104 E5               push hl                                                   ;? Sube 1er scanline al álbum.
 722+ A105 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 723+ A106
 724+ A106              Salida
 725+ A106
 726+ A106 ED 7B 00 8C      ld sp,(Stack)
 727+ A10A
 728+ A10A C9               ret
 729+ A10B
 730+ A10B              ; --------------------------------------------------------------------------------------
 731+ A10B              ;
 732+ A10B              ;   12/09/24
 733+ A10B              ;
 734+ A10B
 735+ A10B              Genera_disparo_Amadeus
 736+ A10B
 737+ A10B              ;*  Exclusiones.
 738+ A10B
 739+ A10B 3A 15 8C         ld a,(Permiso_de_disparo_Amadeus)
 740+ A10E A7               and a
 741+ A10F C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 742+ A110
 743+ A110 3D               dec a
 744+ A111 32 15 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 745+ A114
 746+ A114              Define_puntero_objeto_disparo
 747+ A114
 748+ A114              ;   Inicializamos contador.
 749+ A114
 750+ A114 06 00            ld b,0
 751+ A116
 752+ A116 2A 72 89         ld hl,(p.imp.amadeus)
 753+ A119 2C               inc l
 754+ A11A
 755+ A11A 3E 80            ld a,$80
 756+ A11C BE               cp (hl)
 757+ A11D 28 0D            jr z,1F
 758+ A11F
 759+ A11F 04               inc b
 760+ A120
 761+ A120 3E 60            ld a,$60
 762+ A122 BE               cp (hl)
 763+ A123 28 07            jr z,1F
 764+ A125
 765+ A125
 766+ A125 04               inc b
 767+ A126
 768+ A126 3E 18            ld a,$18
 769+ A128 BE               cp (hl)
 770+ A129 28 01            jr z,1F
 771+ A12B
 772+ A12B 04               inc b
 773+ A12C
 774+ A12C              ;   Calcula el Puntero_de_impresión del disparo.
 775+ A12C
 776+ A12C              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 777+ A12C
 778+ A12C CD BE 99     1 call PreviousScan
 779+ A12F
 780+ A12F 78               ld a,b
 781+ A130 CB 3F            srl a
 782+ A132 28 03            jr z,4F
 783+ A134
 784+ A134              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 785+ A134 E5               push hl
 786+ A135 18 02            jr 5F
 787+ A137 2D           4 dec l
 788+ A138 E5               push hl
 789+ A139              ; ---
 790+ A139
 791+ A139              ;   Calcula el Puntero_objeto del disparo.
 792+ A139
 793+ A139 21 72 83     5 ld hl,Indice_disparo_Amadeus
 794+ A13C 04               inc b
 795+ A13D 05               dec b
 796+ A13E 28 04            jr z,2F
 797+ A140
 798+ A140              ;   Nos desplazamos por el índice de disparos.
 799+ A140
 800+ A140 2C           3 inc l
 801+ A141 2C               inc l
 802+ A142 10 FC            djnz 3B
 803+ A144
 804+ A144              ; --- Guarda el Puntero_objeto del disparo en la pila.
 805+ A144 CD 99 90     2 call Extrae_address
 806+ A147 E5               push hl
 807+ A148              ; ---
 808+ A148
 809+ A148              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 810+ A148              ; HL en el 1er .db de la caja.
 811+ A148
 812+ A148 21 1F 89         ld hl,Disparo_Amad
 813+ A14B
 814+ A14B 06 02            ld b,2
 815+ A14D
 816+ A14D D1           6 pop de
 817+ A14E 73               ld (hl),e
 818+ A14F 23               inc hl
 819+ A150 72               ld (hl),d
 820+ A151 23               inc hl
 821+ A152
 822+ A152 10 F9            djnz 6B
 823+ A154
 824+ A154 C9               ret
 825+ A155
 826+ A155              Genera_coordenadas_de_disparo_Amadeus
 827+ A155
 828+ A155              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 829+ A155              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 830+ A155              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 831+ A155
 832+ A155 CD 99 90         call Extrae_address
 833+ A158 CD AF 94         call Genera_coordenadas
 834+ A15B
 835+ A15B 3D               dec a
 836+ A15C
 837+ A15C 21 2E 8C         ld hl,Coordenadas_disparo_certero
 838+ A15F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 839+ A160 23               inc hl
 840+ A161 3A B4 8B         ld a,(Coordenada_X)
 841+ A164 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 842+ A165
 843+ A165 AF               xor a
 844+ A166 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 845+ A167
 846+ A167 C9               ret
 847+ A168
 848+ A168              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 849+ A168              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 850+ A168              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 851+ A168
 852+ A168              ; ----------------------------------------------
 853+ A168              ;
 854+ A168              ;   27/08/24
 855+ A168              ;
 856+ A168              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 857+ A168              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 858+ A168
 859+ A168              Detecta_impacto_en_disparo_de_Amadeus
 860+ A168
 861+ A168              Extraccion_de_datos
 862+ A168
 863+ A168 13               inc de
 864+ A169 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 865+ A16A
 866+ A16A 5E               ld e,(hl)
 867+ A16B 23               inc hl
 868+ A16C 56               ld d,(hl)
 869+ A16D
 870+ A16D 23               inc hl
 871+ A16E
 872+ A16E 4E               ld c,(hl)
 873+ A16F 23               inc hl
 874+ A170 46               ld b,(hl)
 875+ A171
 876+ A171 C5               push bc
 877+ A172 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 878+ A173
 879+ A173              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 880+ A173
 881+ A173 CD BE 99         call PreviousScan
 882+ A176 CD BE 99         call PreviousScan
 883+ A179
 884+ A179              Detecta_impacto_
 885+ A179
 886+ A179 1A               ld a,(de)
 887+ A17A A6               and (hl)
 888+ A17B C0               ret nz
 889+ A17C
 890+ A17C 13               inc de
 891+ A17D 23               inc hl
 892+ A17E
 893+ A17E 1A               ld a,(de)
 894+ A17F A6               and (hl)
 895+ A180 C9               ret
 896+ A181
 897+ A181              ; -------------------------------------------------------------------------------------------------------------
 898+ A181              ;
 899+ A181              ;   8/8/24
 900+ A181              ;
 901+ A181              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 902+ A181              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 903+ A181              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 904+ A181              ;
 905+ A181              ;   MODIFICA: HL,DE,BC y A.
 906+ A181              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 907+ A181              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 908+ A181
 909+ A181              Colision_Entidad_Amadeus
 910+ A181
 911+ A181              ; Posible contacto de entidad con Amadeus. ?????
 912+ A181
 913+ A181              ; Exclusiones:
 914+ A181
 915+ A181 3A 4E 8C         ld a,(Shield)
 916+ A184 A7               and a
 917+ A185 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 918+ A186
 919+ A186 21 24 8C         ld hl,Ctrl_3
 920+ A189 CB 76            bit 6,(hl)
 921+ A18B C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 922+ A18C
 923+ A18C 21 2B 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 924+ A18F CB 56            bit 2,(hl)
 925+ A191 C0               ret nz
 926+ A192
 927+ A192 3A B5 8B     	ld a,(Coordenada_y)
 928+ A195 FE 14        	cp $14
 929+ A197 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 930+ A198
 931+ A198 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 932+ A19B A7               and a
 933+ A19C C0               ret nz
 934+ A19D
 935+ A19D              Genera_coordenadas_X
 936+ A19D
 937+ A19D              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 938+ A19D              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 939+ A19D
 940+ A19D              ;   Limpiamos almacenes.
 941+ A19D
 942+ A19D              ;    call Limpia_Coordenadas_X
 943+ A19D
 944+ A19D              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 945+ A19D
 946+ A19D 21 30 8C         ld hl,Coordenadas_X_Entidad
 947+ A1A0 3A B4 8B         ld a,(Coordenada_X)
 948+ A1A3 CD C5 A1         call Guarda_coordenadas_X
 949+ A1A6
 950+ A1A6              ;   Almacenamos las coordenadas X de Amadeus.
 951+ A1A6
 952+ A1A6 3A 6E 89         ld a,(CX_Amadeus)
 953+ A1A9 CD C5 A1         call Guarda_coordenadas_X
 954+ A1AC CD D9 A1         call Compara_coordenadas_X
 955+ A1AF C0               ret nz
 956+ A1B0
 957+ A1B0 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 958+ A1B2 32 B7 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 959+ A1B5
 960+ A1B5 2A F3 8B         ld hl,(Puntero_store_caja)
 961+ A1B8 2C               inc l
 962+ A1B9 2C               inc l
 963+ A1BA 2C               inc l
 964+ A1BB 2C               inc l
 965+ A1BC 22 2C 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 966+ A1BF
 967+ A1BF 21 2B 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 968+ A1C2 CB D6            set 2,(hl)
 969+ A1C4
 970+ A1C4 C9               ret
 971+ A1C5
 972+ A1C5               ; ----- ----- ----- ----- -----
 973+ A1C5
 974+ A1C5 77           Guarda_coordenadas_X ld (hl),a
 975+ A1C6 3C               inc a
 976+ A1C7 2C               inc l
 977+ A1C8 77               ld (hl),a
 978+ A1C9 3C               inc a
 979+ A1CA 2C               inc l
 980+ A1CB 77               ld (hl),a
 981+ A1CC 2C               inc l
 982+ A1CD C9               ret
 983+ A1CE
 984+ A1CE AF           Limpia_Coordenadas_X xor a
 985+ A1CF 06 06            ld b,6
 986+ A1D1 21 33 8C         ld hl,Coordenadas_X_Amadeus
 987+ A1D4 77           1 ld (hl),a
 988+ A1D5 23               inc hl
 989+ A1D6 10 FC            djnz 1B
 990+ A1D8 C9               ret
 991+ A1D9
 992+ A1D9              ; ----- ----- ----- ----- -----
 993+ A1D9
 994+ A1D9              Compara_coordenadas_X
 995+ A1D9
 996+ A1D9 DD 21 30 8C      ld ix,Coordenadas_X_Entidad
 997+ A1DD DD 7E 00         ld a,(ix+0)
 998+ A1E0 CD EE A1         call Comparando
 999+ A1E3 C8               ret z
1000+ A1E4
1001+ A1E4 3C               inc a
1002+ A1E5 CD FD A1         call Comparando_1
1003+ A1E8 C8               ret z
1004+ A1E9
1005+ A1E9 3C               inc a
1006+ A1EA CD FD A1         call Comparando_1
1007+ A1ED C9               ret
1008+ A1EE
1009+ A1EE              ; ----- ----- ----- ----- -----
1010+ A1EE              ;
1011+ A1EE              ;   4/12/23
1012+ A1EE              ;
1013+ A1EE              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1014+ A1EE
1015+ A1EE              Comparando
1016+ A1EE
1017+ A1EE DD 2C            inc ixl
1018+ A1F0 DD 2C            inc ixl
1019+ A1F2 DD 2C            inc ixl
1020+ A1F4
1021+ A1F4 DD 46 00         ld b,(ix+0)
1022+ A1F7 DD 4E 01         ld c,(ix+1)
1023+ A1FA DD 56 02         ld d,(ix+2)
1024+ A1FD
1025+ A1FD B8           Comparando_1 cp b
1026+ A1FE C8               ret z
1027+ A1FF B9               cp c
1028+ A200 C8               ret z
1029+ A201 BA               cp d
1030+ A202 C9               ret
1031+ A203
1032+ A203              ; -----------------------------------------------------------------------
1033+ A203              ;
1034+ A203              ;   04/7/24
1035+ A203              ;
1036+ A203
1037+ A203              Detecta_colision_nave_entidad
1038+ A203
1039+ A203              ; Exclusiones:
1040+ A203
1041+ A203              ; Salimos de la rutina si no hay advertencia de posible colisión.
1042+ A203
1043+ A203 21 2B 8C     	ld hl,Impacto2
1044+ A206 CB 56        	bit 2,(hl)
1045+ A208 C8           	ret z
1046+ A209
1047+ A209              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1048+ A209
1049+ A209 2A 74 89         ld hl,(Pamm_Amadeus)
1050+ A20C CD 99 90         call Extrae_address
1051+ A20F 54               ld d,h
1052+ A210 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1053+ A211
1054+ A211 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1055+ A214 06 10            ld b,16                                        ; Contador de scanlines en B.
1056+ A216 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1057+ A219
1058+ A219 C5           1 push bc
1059+ A21A 06 03            ld b,3
1060+ A21C E5               push hl
1061+ A21D
1062+ A21D              ; .db
1063+ A21D
1064+ A21D 1A           3 ld a,(de)
1065+ A21E A7               and a
1066+ A21F 20 03            jr nz,4F
1067+ A221
1068+ A221 2C               inc l
1069+ A222 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1070+ A224
1071+ A224 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1072+ A226 28 04            jr z,2F
1073+ A228
1074+ A228              ; Impacto.
1075+ A228 FD 2D            dec iyl
1076+ A22A 28 22            jr z,5F
1077+ A22C
1078+ A22C 1C           2 inc e
1079+ A22D 10 EE            djnz 3B
1080+ A22F
1081+ A22F E1               pop hl
1082+ A230
1083+ A230              ; Hay salto de línea en el puntero de impresión ???
1084+ A230
1085+ A230 7C               ld a,h
1086+ A231 D6 57            sub $57
1087+ A233 20 0A            jr nz,6F
1088+ A235
1089+ A235              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1090+ A235
1091+ A235 2A 72 89         ld hl,(p.imp.amadeus)
1092+ A238 3E 20            ld a,$20
1093+ A23A A7               and a
1094+ A23B 85               add l
1095+ A23C 6F               ld l,a
1096+ A23D 18 01            jr 7F
1097+ A23F
1098+ A23F 24           6 inc h
1099+ A240
1100+ A240 C1           7 pop bc
1101+ A241 10 D6            djnz 1B
1102+ A243
1103+ A243              ;   Fin de la comparativa.
1104+ A243
1105+ A243              ;   NO HAY COLISIÓN !!!!!.
1106+ A243              ;
1107+ A243              ;   .db (Impacto) de Amadeus a "0".
1108+ A243              ;   RES el bit2 de (Impacto2).
1109+ A243              ;
1110+ A243              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1111+ A243              ;   Lo colocamos a "0".
1112+ A243
1113+ A243 21 2B 8C         ld hl,Impacto2
1114+ A246 CB 96            res 2,(hl)
1115+ A248 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)
1116+ A24B 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1117+ A24D C9               ret
1118+ A24E
1119+ A24E              ;   COLISIÓN !!!!!.
1120+ A24E              ;
1121+ A24E              ;   .db (Impacto) de Amadeus a "1".
1122+ A24E              ;   SET el bit3 de (Impacto2).
1123+ A24E              ;
1124+ A24E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1125+ A24E
1126+ A24E E1           5 pop hl
1127+ A24F C1               pop bc
1128+ A250
1129+ A250 21 71 89         ld hl,Impacto_Amadeus
1130+ A253 36 01            ld (hl),1
1131+ A255 21 2B 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1132+ A258 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1133+ A25A
1134+ A25A 11 C0 87         ld de,Indice_Explosion_entidades
1135+ A25D 2A 2C 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1136+ A260
1137+ A260 23               inc hl
1138+ A261 23               inc hl
1139+ A262 23               inc hl
1140+ A263
1141+ A263 73               ld (hl),e
1142+ A264 23               inc hl
1143+ A265 72               ld (hl),d
1144+ A266
1145+ A266              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1146+ A266
1147+ A266 11 60 88         ld de,Indice_Explosion_Amadeus
1148+ A269 21 74 89         ld hl,Pamm_Amadeus
1149+ A26C
1150+ A26C 73               ld (hl),e
1151+ A26D 23               inc hl
1152+ A26E 72               ld (hl),d
1153+ A26F
1154+ A26F C9               ret
1155+ A270
1156+ A270
1157+ A270
# file closed: Disparo.asm
2170  A270
2171  A270              	SAVESNA "Pruebas.sna", START
2172  A270
2173  A270
2174  A270
2175  A270
# file closed: Banco_de_pruebas.asm
