# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 17 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15
  34  AA15              ;	ld a,(Contador_de_frames)
  35  AA15              ;	cp $5f
  36  AA15              ;	jr z,$
  37  AA15
  38  AA15
  39  AA15 CD 0B 8E     	call Frame
  40  AA18 CD 5C 8E     	call Pinta_Amadeus
  41  AA1B CD DE 8A     	call Gestiona_Amadeus
  42  AA1E CD 6A 8E     	call Actualiza_relojes
  43  AA21
  44  AA21 FD E1        	pop iy
  45  AA23 DD E1        	pop ix
  46  AA25 F1           	pop af
  47  AA26 C1           	pop bc
  48  AA27 D1           	pop de
  49  AA28 E1           	pop hl
  50  AA29 D9           	exx
  51  AA2A C1           	pop bc
  52  AA2B D1           	pop de
  53  AA2C E1           	pop hl
  54  AA2D 08           	ex af,af'
  55  AA2E F1           	pop af
  56  AA2F 08           	ex af,af'
  57  AA30 D9           	exx
  58  AA31
  59  AA31 ED 7B 17 89  	ld sp,(Stack_3)
  60  AA35
  61  AA35 FB           	ei
  62  AA36 ED 4D        	reti
  63  AA38
  64  AA38              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  65  AA38
  66  AA38              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA38              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA38              ;
   3+ AA38              ;	17/02/23
   4+ AA38              ;
   5+ AA38              ;	Sprites e índices.
   6+ AA38
   7+ AA38              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1D 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 23 89        	defw End_Snapshot_1
 267+ 8500 27 89        	defw End_Snapshot_2
 268+ 8502 2B 89        	defw End_Snapshot_3
 269+ 8504 1F 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 25 89        	defw End_Snapshot_disparos_1
 271+ 8508 29 89        	defw End_Snapshot_disparos_2
 272+ 850A 2D 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  67  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 4E 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 4E 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  68  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5A 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD 9C 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0B 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5C 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD 9C 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5C 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 11 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 09 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD 9C 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5C 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5C 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD 9C 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 05 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 09 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 05 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 12 00     	ld bc,18
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0B 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0B 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0C 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0C 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  69  88C5
  70  88C5              ; ******************************************************************************************************************************************************************************************
  71  88C5              ; Constantes.
  72  88C5              ; ******************************************************************************************************************************************************************************************
  73  88C5              ;
  74  88C5              ; 4/9/23
  75  88C5              ;
  76  88C5              ; Constantes generales.
  77  88C5              ;
  78  88C5
  79  88C5              Sprite_vacio equ $f000
  80  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  81  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  82  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  83  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  84  88C5
  85  88C5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  86  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  87  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  88  88C5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  89  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  90  88C5              ;
  91  88C5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  92  88C5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  93  88C5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  94  88C5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  95  88C5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  96  88C5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  97  88C5
  98  88C5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
  99  88C5
 100  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 101  88C5
 102  88C5              ; ******************************************************************************************************************************************************************************************
 103  88C5              ; Variables.
 104  88C5              ; ******************************************************************************************************************************************************************************************
 105  88C5              ;
 106  88C5              ; 28/07/23
 107  88C5              ;
 108  88C5              ; Variables de DRAW. (Motor principal).
 109  88C5              ;
 110  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 111  88C5
 112  88C5 00           Filas db 0												; Filas. [DRAW]
 113  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 114  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 115  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 116  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 117  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 118  88CD
 119  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 120  88CD
 121  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 122  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 123  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 124  88CE 00           Attr db 0												; Atributos de la entidad:
 125  88CF
 126  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 127  88CF              ;
 128  88CF              ;	COLORES: 0 ..... NEGRO
 129  88CF              ;    		 1 ..... AZUL
 130  88CF              ; 			 2 ..... ROJO
 131  88CF              ;			 3 ..... MAGENTA
 132  88CF              ; 			 4 ..... VERDE
 133  88CF              ; 			 5 ..... CIAN
 134  88CF              ;			 6 ..... AMARILLO
 135  88CF              ; 			 7 ..... BLANCO
 136  88CF
 137  88CF 00 00        Indice_Sprite_der defw 0
 138  88D1 00 00        Indice_Sprite_izq defw 0
 139  88D3 00 00        Puntero_DESPLZ_der defw 0
 140  88D5 00 00        Puntero_DESPLZ_izq defw 0
 141  88D7
 142  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 143  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 144  88DA
 145  88DA              ; Variables de objeto. (Características).
 146  88DA
 147  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 148  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 149  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 150  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 151  88DE
 152  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 153  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 154  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 155  88DF 00 00 00...  Variables_de_borrado ds 6
 156  88E5
 157  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 158  88E7 00 00        	defw 0
 159  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 160  88EB 00 00 00 00  	db 0,0,0,0
 161  88EF
 162  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 163  88EF
 164  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 165  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 166  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 167  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 168  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 169  88F0              ;
 170  88F0              ; 														DESCRIPCIÖN:
 171  88F0              ;
 172  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 173  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 174  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 175  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 176  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 177  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 178  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 179  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 180  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 181  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 182  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 183  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 184  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 185  88F0              ;
 186  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 187  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 188  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 189  88F0
 190  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 191  88F0
 192  88F0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 193  88F2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 194  88F4 00 00        Puntero_indice_mov_bucle defw 0							;
 195  88F6              ;
 196  88F6              ;
 197  88F6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 198  88F7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 199  88F7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 200  88F7 00           Incrementa_puntero_backup db 0
 201  88F8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 202  88F9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 203  88F9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 204  88FA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 205  88FB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 206  88FC              ;
 207  88FC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 208  88FC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 209  88FC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 210  88FC              ;
 211  88FC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 212  88FC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 213  88FC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 214  88FC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 215  88FC              ;
 216  88FC              ;														;	"$ff" ..... Bucle infinito de repetición.
 217  88FC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 218  88FC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 219  88FC
 220  88FC
 221  88FC              ; Variables de funcionamiento. [DRAW].
 222  88FC
 223  88FC 00           Columnas db 0
 224  88FD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 225  88FF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 226  88FF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 227  8900
 228  8900              ; variables de control general.
 229  8900
 230  8900 00           Ctrl_2 db 0
 231  8901              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 232  8901              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 233  8901              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 234  8901              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 235  8901              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 236  8901              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 237  8901              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 238  8901              ;
 239  8901              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 240  8901              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 241  8901              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 242  8901              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 243  8901              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 244  8901
 245  8901 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 246  8902
 247  8902              ;! 61 Bytes por entidad.
 248  8902
 249  8902              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 250  8902              ;					         		---------;      ;---------
 251  8902
 252  8902
 253  8902              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 254  8902
 255  8902 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 256  8903
 257  8903              ;														DESCRIPCIÓN:
 258  8903              ;
 259  8903              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 260  8903              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 261  8903              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 262  8903              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 263  8903              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 264  8903              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 265  8903
 266  8903              ;														BIT 3, Recarga de nueva oleada.
 267  8903              ;														BIT 4, Recarga de nueva oleada.
 268  8903              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 269  8903              ;														BIT 6, **** Frame completo.
 270  8903              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 271  8903
 272  8903 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 273  8905              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 274  8905              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 275  8905              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 276  8905
 277  8905
 278  8905
 279  8905              ; Gestión de ENTIDADES y CAJAS.
 280  8905
 281  8905 00 00        Puntero_store_caja defw 0
 282  8907 00 00        Puntero_restore_caja defw 0
 283  8909 00 00        Indice_restore_caja defw 0
 284  890B 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 285  890C 00           Numero_parcial_de_entidades db 0
 286  890D 00           Entidades_en_curso db 0									; ..... ..... .....
 287  890E 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 288  890F              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 289  890F              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 290  890F              ;														; _ (Numero_de_malotes)="0".
 291  890F 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 292  8911 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 293  8913              ;														; _ puntero (Indice_entidades).
 294  8913
 295  8913
 296  8913              ;---------------------------------------------------------------------------------------------------------------
 297  8913              ;
 298  8913              ;	2/9/23
 299  8913              ;
 300  8913              ;	Álbumes.
 301  8913
 302  8913 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 303  8915              ;														; _variable para almacenar lo posición del puntero_
 304  8915              ; 														; _de pila, SP.
 305  8915 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 306  8917              ;														; La utiliza la rutina [Extrae_foto_registros].
 307  8917 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 308  8919 00 00        Stack_snapshot defw 0
 309  891B 00 00        Stack_snapshot_disparos defw 0
 310  891D
 311  891D 00 00        End_Snapshot defw 0
 312  891F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 313  891F 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 314  8921              ;														; _el snapshot de los registros del siguiente disparo.
 315  8921              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 316  8921 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 317  8923 00 00        End_Snapshot_1 defw 0
 318  8925 00 00        End_Snapshot_disparos_1 defw 0
 319  8927 00 00        End_Snapshot_2 defw 0
 320  8929 00 00        End_Snapshot_disparos_2 defw 0
 321  892B 00 00        End_Snapshot_3 defw 0
 322  892D 00 00        End_Snapshot_disparos_3 defw 0
 323  892F
 324  892F 00 00        Puntero_indice_album_de_fotos defw 0
 325  8931 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 326  8933
 327  8933 00 00        Puntero_indice_End_Snapshot defw 0
 328  8935 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 329  8937 00 00        Puntero_de_End_Snapshot defw 0
 330  8939 00 00        Puntero_de_End_Snapshot_disparos defw 0
 331  893B
 332  893B              ;---------------------------------------------------------------------------------------------------------------
 333  893B
 334  893B              ; Gestión de Disparos.
 335  893B
 336  893B 00           Numero_de_disparotes db 0
 337  893C 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 338  893E 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 339  8940 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 340  8941              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 341  8941              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 342  8941 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 343  8943              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 344  8943              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 345  8943              ;														; _produzca colisión.
 346  8943 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 347  8945              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 348  8945 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 349  8948              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 350  8948 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 351  894B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 352  894B 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 353  894D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 354  894E
 355  894E              ;---------------------------------------------------------------------------------------------------------------
 356  894E
 357  894E              ; Relojes y temporizaciones.
 358  894E
 359  894E 00           Contador_de_frames db 0
 360  894F 00           Contador_de_frames_2 db 0
 361  8950
 362  8950 04           Clock_explosion db 4
 363  8951 1E           Clock_Entidades_en_curso db 30
 364  8952 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 365  8953              ;														; Repite la oleada de entidades.
 366  8953 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 367  8954 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 368  8955 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 369  8956
 370  8956 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 371  8957 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 372  8958 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 373  8959
 374  8959              ;---------------------------------------------------------------------------------------------------------------
 375  8959
 376  8959              ; Gestión de NIVELES.
 377  8959
 378  8959 00           Nivel db 0												; Nivel actual del juego.
 379  895A 00 00        Puntero_indice_NIVELES defw 0
 380  895C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 381  895E              ; 														; _ que definen el NIVEL.
 382  895E              ; Y todo comienza aquí .....
 383  895E              ;
 384  895E              ; Rutina principal *************************************************************************************************************************************************************************
 385  895E              ;
 386  895E              ;	14/11/22
 387  895E
 388  895E              START
 389  895E
 390  895E 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 391  8961 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 392  8963 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 393  8965 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 394  8967 F3           	DI
 395  8968
 396  8968 3E 07        	ld a,%00000111
 397  896A CD 7B 99     	call Cls
 398  896D
 399  896D CD 75 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 400  8970
 401  8970              ; INICIALIZACIÓN.
 402  8970
 403  8970 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 404  8973
 405  8973 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 406  8976
 407  8976 CD 9E 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 408  8979              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 409  8979 CD B4 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 410  897C              ;													     ; _ malotes antes de guardar ninguna foto.
 411  897C              ; ----------
 412  897C
 413  897C CD 25 8D     	call Restore_entidad
 414  897F
 415  897F 21 0C 89     	ld hl,Numero_parcial_de_entidades
 416  8982 46           	ld b,(hl)
 417  8983 04           	inc b
 418  8984 05           	dec b
 419  8985 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 420  8987
 421  8987              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 422  8987              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 423  8987              ;	Pintamos el resto de entidades:
 424  8987
 425  8987              ;	INICIA ENTIDADES !!!!!
 426  8987
 427  8987 C5           1 push bc  												; Guardo el contador de entidades.
 428  8988 CD 6B 8B     	call Inicia_entidad
 429  898B C1           	pop bc
 430  898C 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 431  898E
 432  898E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 433  898E              ; (Esto se dá cuando se inicia una nueva oleada).
 434  898E
 435  898E 3A 02 89     	ld a,(Ctrl_1)
 436  8991 CB 5F        	bit 3,a
 437  8993 20 15        	jr nz,5F											; Loop
 438  8995
 439  8995              ; 	INICIA AMADEUS !!!!!
 440  8995
 441  8995 CD 4C 8D     3 call Restore_Amadeus
 442  8998 CD A2 8C     	call Inicia_Puntero_objeto
 443  899B CD 6E 93     	call Draw
 444  899E CD A0 7F     	call Guarda_foto_registros
 445  89A1 CD D8 8D     	call Guarda_datos_de_borrado_Amadeus
 446  89A4
 447  89A4 11 9E 85     	ld de,Amadeus_db
 448  89A7 CD 5E 8D     	call Store_Amadeus
 449  89AA
 450  89AA              ; 	INICIA DISPAROS !!!!!
 451  89AA
 452  89AA              ;	call Inicia_Puntero_Disparo_Entidades
 453  89AA              ;	call Inicia_Puntero_Disparo_Amadeus
 454  89AA
 455  89AA              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 456  89AA
 457  89AA CD 9E 8B     5 call Inicia_punteros_de_cajas
 458  89AD CD 25 8D     	call Restore_entidad
 459  89B0
 460  89B0 3A 02 89     	ld a,(Ctrl_1)
 461  89B3 CB 5F        	bit 3,a
 462  89B5 28 07        	jr z,6F
 463  89B7
 464  89B7              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 465  89B7
 466  89B7 21 02 89     	ld hl,Ctrl_1
 467  89BA CB 9E        	res 3,(hl)
 468  89BC 18 04        	jr Main
 469  89BE
 470  89BE
 471  89BE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 472  89BE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 473  89BE              ; _ para situarnos en el siguiente album.
 474  89BE
 475  89BE CD E5 8B     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 476  89C1 F3           	di
 477  89C2
 478  89C2              ; ------------------------------------
 479  89C2
 480  89C2              Main
 481  89C2              ;
 482  89C2              ;	3/8/23
 483  89C2
 484  89C2 3E 01            ld a,1
 485  89C4 D3 FE        	out ($fe),a											; Azul.
 486  89C6
 487  89C6 FB           	ei
 488  89C7
 489  89C7 3A 51 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 490  89CA 47           	ld b,a
 491  89CB 3A 4E 89     	ld a,(Contador_de_frames)
 492  89CE B8           	cp b
 493  89CF 20 18        	jr nz,13F
 494  89D1
 495  89D1 3A 0C 89     	ld a,(Numero_parcial_de_entidades)
 496  89D4 47           	ld b,a
 497  89D5 3A 0D 89     	ld a,(Entidades_en_curso)
 498  89D8 B8           	cp b
 499  89D9 28 0E        	jr z,13F
 500  89DB 30 0C        	jr nc,13F
 501  89DD
 502  89DD 3C           	inc a
 503  89DE 32 0D 89     	ld (Entidades_en_curso),a
 504  89E1
 505  89E1 3A 51 89     	ld a,(Clock_Entidades_en_curso)
 506  89E4
 507  89E4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 508  89E4              ;! _ IMPREDECIBLE !!!!
 509  89E4
 510  89E4 C6 64        	add 100
 511  89E6 32 51 89     	ld (Clock_Entidades_en_curso),a
 512  89E9
 513  89E9              ; Habilita disparos.
 514  89E9
 515  89E9 21 53 89     13 ld hl,Disparo_Amadeus
 516  89EC 11 55 89     	ld de,CLOCK_repone_disparo_Amadeus
 517  89EF CD 3F 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 518  89F2
 519  89F2 21 56 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 520  89F5 11 58 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 521  89F8 CD 3F 9D     	call Habilita_disparos
 522  89FB
 523  89FB              ; COLISIONES.
 524  89FB
 525  89FB CD 50 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 526  89FE
 527  89FE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 528  89FE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 529  89FE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 530  89FE
 531  89FE AF           	xor a
 532  89FF 32 40 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 533  8A02
 534  8A02 CD 9E 8B     	call Inicia_punteros_de_cajas
 535  8A05 CD 25 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 536  8A08              ; 														; _ en DRAW.
 537  8A08 3A C5 88     	ld a,(Filas)
 538  8A0B A7           	and a
 539  8A0C 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 540  8A0E CD 37 8D     	call Incrementa_punteros_de_cajas
 541  8A11 18 F2        	jr 12B
 542  8A13
 543  8A13              ; ---------------------------------------------------------------------------------------
 544  8A13
 545  8A13 3A 0C 89     10 ld a,(Numero_parcial_de_entidades)
 546  8A16 47               ld b,a
 547  8A17 A7           	and a
 548  8A18 20 14        	jr nz,11F
 549  8A1A
 550  8A1A 21 02 89     	ld hl,Ctrl_1
 551  8A1D CB 66        	bit 4,(hl)
 552  8A1F C2 AF 8A     	jp nz,16F
 553  8A22
 554  8A22 21 02 89     	ld hl,Ctrl_1
 555  8A25 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 556  8A27
 557  8A27 3A 4E 89     	ld a,(Contador_de_frames)
 558  8A2A 3C           	inc a
 559  8A2B 32 52 89     	ld (Activa_recarga_cajas),a
 560  8A2E
 561  8A2E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 562  8A2E
 563  8A2E 3A 0D 89     11 ld a,(Entidades_en_curso)
 564  8A31 A7           	and a
 565  8A32 CA AF 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 566  8A35 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 567  8A36
 568  8A36              ; Código que ejecutamos con cada entidad:
 569  8A36              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 570  8A36
 571  8A36 C5           15 push bc 												; Nº de entidades en curso.
 572  8A37
 573  8A37              ; Impacto ???
 574  8A37
 575  8A37 3A DE 88     	ld a,(Impacto)
 576  8A3A A7           	and a
 577  8A3B 28 32        	jr z,8F
 578  8A3D
 579  8A3D              ; Hay Impacto en esta entidad.
 580  8A3D
 581  8A3D 21 50 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 582  8A40 35           	dec (hl)
 583  8A41 20 66        	jr nz,17F
 584  8A43
 585  8A43              ;! Velocidad de la animación de la explosión.
 586  8A43
 587  8A43 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 588  8A45              ;														; _,(velocidad de la explosión).
 589  8A45
 590  8A45              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 591  8A45 18 FE        	jr $
 592  8A47
 593  8A47 CD F8 8D     	call Repone_datos_de_borrado
 594  8A4A CD 3E 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 595  8A4D
 596  8A4D
 597  8A4D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 598  8A4D
 599  8A4D 3A 00 89     	ld a,(Ctrl_2)
 600  8A50 CB 4F        	bit 1,a
 601  8A52 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 602  8A54
 603  8A54              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 604  8A54
 605  8A54 3A CD 88     	ld a,(CTRL_DESPLZ)
 606  8A57 A7           	and a
 607  8A58 20 08        	jr nz,18F
 608  8A5A
 609  8A5A 21 84 84     	ld hl,Indice_Explosion_2x2-2
 610  8A5D 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 611  8A60 18 06        	jr 19F
 612  8A62
 613  8A62 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 614  8A65 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 615  8A68
 616  8A68 21 00 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 617  8A6B CB CE        	set 1,(hl)
 618  8A6D 18 22        	jr 7F
 619  8A6F
 620  8A6F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 621  8A6F              ; _con las coordenadas de la entidad almacenada en DRAW.
 622  8A6F
 623  8A6F 3A 02 89     8 ld a,(Ctrl_1)
 624  8A72 CB 57        	bit 2,a
 625  8A74 28 1B        	jr z,7F
 626  8A76
 627  8A76 2A 43 89     	ld hl,(Coordenadas_disparo_certero)
 628  8A79 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 629  8A7A              ;														; E contiene la coordenada_X del disparo.
 630  8A7A 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 631  8A7D              ;														; H FILA, (Coordenada_y de la entidad).
 632  8A7D A7           	and a
 633  8A7E ED 52        	sbc hl,de
 634  8A80
 635  8A80 CD 87 92     	call Determina_resultado_comparativa
 636  8A83
 637  8A83 78           	ld a,b
 638  8A84 A7           	and a
 639  8A85 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 640  8A87
 641  8A87              ; ----- ----- -----
 642  8A87
 643  8A87 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 644  8A89 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 645  8A8C
 646  8A8C 21 02 89     	ld hl,Ctrl_1
 647  8A8F CB 96        	res 2,(hl)
 648  8A91
 649  8A91 CD 07 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 650  8A94
 651  8A94 3A EF 88     	ld a,(Ctrl_0)
 652  8A97 CB 67        	bit 4,a
 653  8A99 28 0E        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 654  8A9B
 655  8A9B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 656  8A9B              ; [[[
 657  8A9B CD C0 8D     	call Detecta_disparo_entidad
 658  8A9E              ; ]]]
 659  8A9E
 660  8A9E CD 7F 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 661  8AA1 CD C6 8D     	call Guarda_datos_de_borrado
 662  8AA4
 663  8AA4 21 EF 88     	ld hl,Ctrl_0
 664  8AA7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 665  8AA9
 666  8AA9 CD EA 8C     17 call Store_Restore_cajas
 667  8AAC
 668  8AAC C1           	pop bc
 669  8AAD 10 87        	djnz 15B
 670  8AAF
 671  8AAF              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 672  8AAF              ; Hemos gestionado todas las unidades.
 673  8AAF              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 674  8AAF
 675  8AAF              ;	ld hl,Ctrl_1
 676  8AAF              ;	res 2,(hl)
 677  8AAF
 678  8AAF CD E5 8B     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 679  8AB2              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 680  8AB2              ;														; _ interrupción.
 681  8AB2              ; ----------------------------------------
 682  8AB2
 683  8AB2 3A 02 89     	ld a,(Ctrl_1) 										; Existe Loop?
 684  8AB5 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 685  8AB7 CA C2 89     	jp z,Main
 686  8ABA
 687  8ABA 3A 4E 89     	ld a,(Contador_de_frames)
 688  8ABD 47           	ld b,a
 689  8ABE 3A 52 89     	ld a,(Activa_recarga_cajas)
 690  8AC1 B8           	cp b
 691  8AC2 28 08        	jr z,20F
 692  8AC4
 693  8AC4 21 02 89     	ld hl,Ctrl_1
 694  8AC7 CB E6        	set 4,(hl)
 695  8AC9 C3 C2 89     	jp Main
 696  8ACC
 697  8ACC 21 02 89     20 ld hl,Ctrl_1
 698  8ACF CB A6        	res 4,(hl)
 699  8AD1
 700  8AD1 F3           	di
 701  8AD2
 702  8AD2 3A 4E 89     	ld a,(Contador_de_frames)
 703  8AD5
 704  8AD5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 705  8AD5              ;! _ IMPREDECIBLE !!!!
 706  8AD5
 707  8AD5 C6 0A        	add 10
 708  8AD7 32 51 89     	ld (Clock_Entidades_en_curso),a
 709  8ADA
 710  8ADA C3 73 89     	jp 4B
 711  8ADD
 712  8ADD C9           	ret
 713  8ADE
 714  8ADE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 715  8ADE
 716  8ADE              Gestiona_Amadeus
 717  8ADE
 718  8ADE 3E 04            ld a,4
 719  8AE0 D3 FE        	out ($fe),a											; Azul.
 720  8AE2
 721  8AE2 CD 4C 8D     	call Restore_Amadeus
 722  8AE5
 723  8AE5              ;! Activa/desactiva impacto con Amadeus.
 724  8AE5
 725  8AE5 3A DE 88     	ld a,(Impacto)
 726  8AE8 A7           	and a
 727  8AE9 20 FE        	jr nz,$
 728  8AEB
 729  8AEB CD 58 8B     	call Mov_Amadeus
 730  8AEE
 731  8AEE 3A EF 88     	ld a,(Ctrl_0)
 732  8AF1 CB 67        	bit 4,a
 733  8AF3 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 734  8AF5
 735  8AF5 CD 7F 8B     	call Guarda_foto_entidad_a_pintar
 736  8AF8 CD D8 8D     	call Guarda_datos_de_borrado_Amadeus
 737  8AFB
 738  8AFB 21 EF 88     14 ld hl,Ctrl_0
 739  8AFE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 740  8B00
 741  8B00 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 742  8B03 CD 5E 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 743  8B06
 744  8B06              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 745  8B06
 746  8B06              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 747  8B06
 748  8B06              ;	call Calcula_numero_de_disparotes
 749  8B06
 750  8B06 C9           	ret
 751  8B07
 752  8B07              ; --------------------------------------------------------------------------------------------------------------
 753  8B07              ;
 754  8B07              ;	27/05/23
 755  8B07
 756  8B07              Mov_obj
 757  8B07
 758  8B07 3A 00 89     	ld a,(Ctrl_2)
 759  8B0A CB 4F        	bit 1,a
 760  8B0C 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 761  8B0E
 762  8B0E              ; Explosión:
 763  8B0E
 764  8B0E 3A 01 89     	ld a,(Frames_explosion)
 765  8B11 A7           	and a
 766  8B12 20 11        	jr nz,4F
 767  8B14
 768  8B14              ; Una alimaña menos!!!!!!!!!1
 769  8B14
 770  8B14 CD 67 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 771  8B17 21 0C 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 772  8B1A 35           	dec (hl)
 773  8B1B 21 0D 89     	ld hl,Entidades_en_curso
 774  8B1E 35           	dec (hl)
 775  8B1F 21 0B 89     	ld hl,Numero_de_entidades
 776  8B22 35           	dec (hl)
 777  8B23 18 32        	jr 3F
 778  8B25
 779  8B25              ; -----
 780  8B25
 781  8B25              ;	`Movemos´ la explosión.
 782  8B25
 783  8B25 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 784  8B28 23           	inc hl
 785  8B29 23           	inc hl
 786  8B2A 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 787  8B2D CD 9C 8C     	call Extrae_address
 788  8B30 22 C9 88     	ld (Puntero_objeto),hl
 789  8B33
 790  8B33 21 01 89     	ld hl,Frames_explosion
 791  8B36 35           	dec (hl)
 792  8B37
 793  8B37              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 794  8B37 18 1E        	jr 3F
 795  8B39
 796  8B39 AF           2 xor a
 797  8B3A 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 798  8B3D
 799  8B3D              ; Movemos Entidades malignas.
 800  8B3D
 801  8B3D CD EA 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 802  8B40
 803  8B40 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 804  8B43 CB 67        	bit 4,a
 805  8B45 C8           	ret z
 806  8B46
 807  8B46              ; Ha habido desplazamiento de la entidad maligna.
 808  8B46              ; Ha llegado a zona de AMADEUS ???
 809  8B46
 810  8B46 3A CC 88     	ld a,(Coordenada_y)
 811  8B49 FE 14        	cp $14
 812  8B4B D4 15 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 813  8B4E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 814  8B4E              ; ---------
 815  8B4E
 816  8B4E CD 86 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 817  8B51 CD F8 8D     	call Repone_datos_de_borrado
 818  8B54 CD 3E 8C     	call Limpia_Variables_de_borrado
 819  8B57
 820  8B57 C9           3 ret													; _de la misma.
 821  8B58
 822  8B58              ; --------------------------------------------------------------------------------------------------------------
 823  8B58              ;
 824  8B58              ;	29/1/23
 825  8B58
 826  8B58              Mov_Amadeus
 827  8B58
 828  8B58 CD 89 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 829  8B5B
 830  8B5B 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 831  8B5E CB 67        	bit 4,a
 832  8B60 C8           	ret z
 833  8B61
 834  8B61              ; ---------
 835  8B61
 836  8B61 CD 86 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 837  8B64 CD E8 8D     	call Repone_datos_de_borrado_Amadeus
 838  8B67 CD 3E 8C     	call Limpia_Variables_de_borrado
 839  8B6A
 840  8B6A C9           	ret
 841  8B6B
 842  8B6B              ; -----------------------------------------------------------------------------------
 843  8B6B
 844  8B6B CD A2 8C     Inicia_entidad	call Inicia_Puntero_objeto
 845  8B6E CD 8F 99     	call Recompone_posicion_inicio
 846  8B71 CD 6E 93     	call Draw
 847  8B74 CD A0 7F     	call Guarda_foto_registros
 848  8B77 CD C6 8D     	call Guarda_datos_de_borrado
 849  8B7A F3           	di
 850  8B7B CD EA 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 851  8B7E C9           	ret
 852  8B7F
 853  8B7F              ; --------------------------------------------------------------------------------------------------------------
 854  8B7F              ;
 855  8B7F              ;	31/08/23
 856  8B7F              ;
 857  8B7F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 858  8B7F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 859  8B7F
 860  8B7F              Guarda_foto_entidad_a_pintar
 861  8B7F
 862  8B7F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 863  8B7F
 864  8B7F CD 6E 93     	call Draw
 865  8B82 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 866  8B85 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 867  8B86
 868  8B86              ; --------------------------------------------------------------------------------------------------------------
 869  8B86              ;
 870  8B86              ;	19/9/23
 871  8B86
 872  8B86 21 C5 88     Prepara_var_pintado ld hl,Filas
 873  8B89 11 E5 88     	ld de,Variables_de_pintado
 874  8B8C 01 08 00     	ld bc,8
 875  8B8F ED B0        	ldir
 876  8B91 C9           	ret
 877  8B92
 878  8B92              ; --------------------------------------------------------------------------------------------------------------
 879  8B92
 880  8B92 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 881  8B95 11 C5 88     	ld de,Filas
 882  8B98 01 08 00     	ld bc,8
 883  8B9B ED B0        	ldir
 884  8B9D C9           	ret
 885  8B9E
 886  8B9E              ; *************************************************************************************************************************************************************
 887  8B9E              ;
 888  8B9E              ; 8/1/23
 889  8B9E              ;
 890  8B9E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 891  8B9E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 892  8B9E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 893  8B9E
 894  8B9E              ; Destruye HL y DE !!!!!
 895  8B9E
 896  8B9E              Inicia_punteros_de_cajas
 897  8B9E
 898  8B9E 21 8C 85     	ld hl,Indice_de_cajas
 899  8BA1 CD 9C 8C         call Extrae_address
 900  8BA4 22 05 89         ld (Puntero_store_caja),hl
 901  8BA7 21 8E 85     	ld hl,Indice_de_cajas+2
 902  8BAA 22 09 89     	ld (Indice_restore_caja),hl
 903  8BAD CD 9C 8C     	call Extrae_address
 904  8BB0 22 07 89     	ld (Puntero_restore_caja),hl
 905  8BB3 C9               ret
 906  8BB4
 907  8BB4              ; ---------------------------------------------------------------
 908  8BB4              ;
 909  8BB4              ;	9/8/23
 910  8BB4              ;
 911  8BB4              ;	Inicialización y gestión de álbumes de fotos y cajas.
 912  8BB4
 913  8BB4              Inicia_punteros_de_albumes_y_malotes
 914  8BB4
 915  8BB4 21 EC 84     	ld hl,Indice_album_de_fotos
 916  8BB7 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 917  8BBA CD 9C 8C     	call Extrae_address
 918  8BBD 22 19 89     	ld (Stack_snapshot),hl
 919  8BC0
 920  8BC0 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 921  8BC3 22 31 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 922  8BC6 CD 9C 8C     	call Extrae_address
 923  8BC9 22 1B 89     	ld (Stack_snapshot_disparos),hl
 924  8BCC
 925  8BCC 21 FC 84     	ld hl,Indice_End_Snapshot
 926  8BCF 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 927  8BD2 CD 9C 8C     	call Extrae_address
 928  8BD5 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 929  8BD8
 930  8BD8 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 931  8BDB 22 35 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 932  8BDE CD 9C 8C     	call Extrae_address
 933  8BE1 22 39 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 934  8BE4
 935  8BE4 C9           	ret
 936  8BE5
 937  8BE5              ;	2/9/23
 938  8BE5
 939  8BE5              Avanza_puntero_de_album_de_fotos_y_malotes
 940  8BE5
 941  8BE5              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 942  8BE5
 943  8BE5              ; Estamos en el último álbum del índice???.
 944  8BE5
 945  8BE5 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
 946  8BE8 01 F2 84     	ld bc,Indice_album_de_fotos+6
 947  8BEB A7           	and a
 948  8BEC ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 949  8BEE 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 950  8BF0
 951  8BF0 21 02 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 952  8BF3 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 953  8BF5 76           	halt
 954  8BF6 C9           	ret
 955  8BF7
 956  8BF7 F3           1 di
 957  8BF8 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
 958  8BFB 23           	inc hl
 959  8BFC 23           	inc hl
 960  8BFD 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
 961  8C00 CD 9C 8C     	call Extrae_address
 962  8C03 22 19 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 963  8C06
 964  8C06 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
 965  8C09 23           	inc hl
 966  8C0A 23           	inc hl
 967  8C0B 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
 968  8C0E CD 9C 8C     	call Extrae_address
 969  8C11 22 37 89     	ld (Puntero_de_End_Snapshot),hl
 970  8C14 FB           	ei
 971  8C15
 972  8C15 C9           	ret
 973  8C16
 974  8C16              ; *************************************************************************************************************************************************************
 975  8C16              ;
 976  8C16              ; 8/1/23
 977  8C16              ;
 978  8C16              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 979  8C16
 980  8C16 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 981  8C19 22 3C 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 982  8C1C C9           	ret
 983  8C1D 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 984  8C20 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 985  8C23 C9           	ret
 986  8C24
 987  8C24              ; -------------------------------------------------------------------------------------------------------------
 988  8C24              ;
 989  8C24              ; 4/9/23
 990  8C24              ;
 991  8C24
 992  8C24              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 993  8C24
 994  8C24 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
 995  8C27 7E           	ld a,(hl)
 996  8C28 A7           	and a
 997  8C29 C8           	ret z
 998  8C2A
 999  8C2A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1000  8C2D 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1001  8C30 01 0C 00     	ld bc,12
1002  8C33 AF           	xor a
1003  8C34 77           	ld (hl),a
1004  8C35 ED B0        	ldir
1005  8C37
1006  8C37 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1007  8C3A 22 21 89     	ld (End_Snapshot_Amadeus),hl
1008  8C3D
1009  8C3D C9           	ret
1010  8C3E
1011  8C3E 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1012  8C41 11 E0 88     	ld de,Variables_de_borrado+1
1013  8C44 01 05 00     	ld bc,5
1014  8C47 AF           	xor a
1015  8C48 77           	ld (hl),a
1016  8C49 ED B0        	ldir
1017  8C4B C9           	ret
1018  8C4C
1019  8C4C              ; -------------------------------------------------------------------------------------------------------------
1020  8C4C              ;
1021  8C4C              ; 8/9/23
1022  8C4C              ;
1023  8C4C
1024  8C4C              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1025  8C4C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1026  8C4C
1027  8C4C              Calcula_numero_de_malotes
1028  8C4C
1029  8C4C 21 00 70     	ld hl,Album_de_fotos
1030  8C4F EB           	ex de,hl
1031  8C50 2A 1D 89     	ld hl,(End_Snapshot)
1032  8C53
1033  8C53 7C           	ld a,h
1034  8C54 A7           	and a
1035  8C55 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1036  8C57
1037  8C57 06 00        4 ld b,0
1038  8C59 7D           	ld a,l
1039  8C5A 93           	sub e
1040  8C5B 28 07        	jr z,1F
1041  8C5D
1042  8C5D              ; Nº de malotes no es "0".
1043  8C5D
1044  8C5D D6 06        2 sub 6
1045  8C5F 04           	inc b
1046  8C60 A7           	and a
1047  8C61 20 FA        	jr nz,2B
1048  8C63 78           	ld a,b
1049  8C64
1050  8C64 32 0E 89     1 ld (Numero_de_malotes),a
1051  8C67 C9           	ret
1052  8C68
1053  8C68              ; -------------------------------------------------------------------------------------------------------------
1054  8C68              ;
1055  8C68              ; 8/9/23
1056  8C68              ;
1057  8C68
1058  8C68              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1059  8C68              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1060  8C68
1061  8C68              Calcula_malotes_Amadeus
1062  8C68
1063  8C68 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1064  8C6B EB           	ex de,hl
1065  8C6C 2A 21 89     	ld hl,(End_Snapshot_Amadeus)
1066  8C6F
1067  8C6F 7C           	ld a,h
1068  8C70 A7           	and a
1069  8C71 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1070  8C73
1071  8C73 06 00        	ld b,0
1072  8C75 7D           	ld a,l
1073  8C76 93           	sub e
1074  8C77 28 07        	jr z,1F
1075  8C79
1076  8C79              ; Nº de malotes no es "0".
1077  8C79
1078  8C79 D6 06        2 sub 6
1079  8C7B 04           	inc b
1080  8C7C A7           	and a
1081  8C7D 20 FA        	jr nz,2B
1082  8C7F 78           	ld a,b
1083  8C80
1084  8C80 32 0E 89     1 ld (Numero_de_malotes),a
1085  8C83 C9           	ret
1086  8C84
1087  8C84              ; -------------------------------------------------------------------------------------------------------------
1088  8C84              ;
1089  8C84              ; 28/2/23
1090  8C84              ;
1091  8C84
1092  8C84              Calcula_numero_de_disparotes
1093  8C84
1094  8C84 21 50 71     	ld hl,Album_de_fotos_disparos
1095  8C87 EB           	ex de,hl
1096  8C88 2A 39 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1097  8C8B
1098  8C8B 06 00        	ld b,0
1099  8C8D 7D           	ld a,l
1100  8C8E 93           	sub e
1101  8C8F 28 07        	jr z,1F
1102  8C91
1103  8C91              ; Nº de malotes no es "0".
1104  8C91
1105  8C91 D6 06        2 sub 6
1106  8C93 04           	inc b
1107  8C94 A7           	and a
1108  8C95 20 FA        	jr nz,2B
1109  8C97 78           	ld a,b
1110  8C98
1111  8C98 32 3B 89     1 ld (Numero_de_disparotes),a
1112  8C9B C9           	ret
1113  8C9C
1114  8C9C              ; *************************************************************************************************************************************************************
1115  8C9C              ;
1116  8C9C              ; 20/10/22
1117  8C9C              ;
1118  8C9C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1119  8C9C              ;
1120  8C9C              ; Destruye el puntero y DE !!!!!
1121  8C9C
1122  8C9C 5E           Extrae_address ld e,(hl)
1123  8C9D 23           	inc hl
1124  8C9E 56           	ld d,(hl)
1125  8C9F 2B           	dec hl
1126  8CA0 EB           	ex de,hl
1127  8CA1 C9           	ret
1128  8CA2
1129  8CA2              ; *************************************************************************************************************************************************************
1130  8CA2              ;
1131  8CA2              ;	7/2/23
1132  8CA2              ;
1133  8CA2              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1134  8CA2              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1135  8CA2              ;
1136  8CA2              ;   Destruye HL y BC !!!!!,
1137  8CA2              ;
1138  8CA2              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1139  8CA2              ;					"0" ..... Izquierda.
1140  8CA2
1141  8CA2              Inicia_Puntero_objeto
1142  8CA2
1143  8CA2 3A D9 88     	ld a,(Cuad_objeto)
1144  8CA5 E6 01        	and 1
1145  8CA7 F5           	push af
1146  8CA8 CC C6 8C     	call z,Inicia_puntero_objeto_izq
1147  8CAB F1           	pop af
1148  8CAC 28 2B        	jr z,1F
1149  8CAE CD B3 8C     	call Inicia_puntero_objeto_der
1150  8CB1 18 26        	jr 1F
1151  8CB3
1152  8CB3              ; Arrancamos desde la parte izquierda de la pantalla.
1153  8CB3              ; Iniciamos (Indice_Sprite_der).
1154  8CB3
1155  8CB3 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1156  8CB6 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1157  8CB9 CD 9C 8C     	call Extrae_address
1158  8CBC 22 C9 88     	ld (Puntero_objeto),hl
1159  8CBF
1160  8CBF 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1161  8CC2 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1162  8CC5 C9           	ret
1163  8CC6
1164  8CC6              ; Arrancamos desde la parte derecha de la pantalla.
1165  8CC6              ; Iniciamos (Indice_Sprite_izq).
1166  8CC6
1167  8CC6 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1168  8CC9 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1169  8CCC CD 9C 8C     	call Extrae_address
1170  8CCF 22 C9 88     	ld (Puntero_objeto),hl
1171  8CD2
1172  8CD2 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1173  8CD5 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1174  8CD8 C9           	ret
1175  8CD9
1176  8CD9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1177  8CD9
1178  8CD9 21 40 83     1 ld hl,Amadeus
1179  8CDC ED 4B C9 88  	ld bc,(Puntero_objeto)
1180  8CE0 B7 ED 42     	sub hl,bc
1181  8CE3 C0           	ret nz
1182  8CE4 21 EF 88     	ld hl,Ctrl_0
1183  8CE7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1184  8CE9 C9           	ret 												; _de nuestra nave en los extremos.
1185  8CEA
1186  8CEA              ; *************************************************************************************************************************************************************
1187  8CEA              ;
1188  8CEA              ;	14/5/23
1189  8CEA              ;
1190  8CEA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1191  8CEA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1192  8CEA
1193  8CEA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1194  8CEA              ;	_de la 2ª y 3ª entidad respectivamente.
1195  8CEA
1196  8CEA              Store_Restore_cajas
1197  8CEA
1198  8CEA E5           	push hl
1199  8CEB D5           	push de
1200  8CEC C5            	push bc
1201  8CED
1202  8CED              ;	STORE !!!!!
1203  8CED              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1204  8CED
1205  8CED 21 C5 88     	ld hl,Filas
1206  8CF0 ED 5B 05 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1207  8CF4 01 3D 00     	ld bc,61
1208  8CF7 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1209  8CF9
1210  8CF9              ; 	Entidad_sospechosa. 20/4/23
1211  8CF9
1212  8CF9 3A DE 88     	ld a,(Impacto)
1213  8CFC A7           	and a
1214  8CFD 28 0C        	jr z,1F
1215  8CFF
1216  8CFF 2A 05 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1217  8D02 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1218  8D05 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1219  8D06 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1220  8D08 22 41 89     	ld (Entidad_sospechosa_de_colision),hl
1221  8D0B
1222  8D0B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1223  8D0B
1224  8D0B 2A 07 89     1 ld hl,(Puntero_restore_caja)
1225  8D0E 7E           	ld a,(hl)
1226  8D0F A7           	and a
1227  8D10 F5           	push af
1228  8D11 28 08        	jr z,2F
1229  8D13
1230  8D13 11 C5 88     	ld de,Filas
1231  8D16 01 3D 00     	ld bc,61
1232  8D19 ED B0        	ldir
1233  8D1B
1234  8D1B CD 37 8D     2 call Incrementa_punteros_de_cajas
1235  8D1E F1           	pop af
1236  8D1F 28 EA        	jr z,1B
1237  8D21
1238  8D21 C1           	pop bc
1239  8D22 D1           	pop de
1240  8D23 E1           	pop hl
1241  8D24
1242  8D24 C9           	ret
1243  8D25
1244  8D25              ; **************************************************************************************************
1245  8D25              ;
1246  8D25              ;	12/05/23
1247  8D25              ;
1248  8D25              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1249  8D25
1250  8D25 E5           Restore_entidad push hl
1251  8D26 D5           	push de
1252  8D27 C5            	push bc
1253  8D28
1254  8D28 2A 05 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1255  8D2B 11 C5 88     	ld de,Filas
1256  8D2E 01 3D 00     	ld bc,61
1257  8D31 ED B0        	ldir
1258  8D33
1259  8D33 C1           	pop bc
1260  8D34 D1           	pop de
1261  8D35 E1           	pop hl
1262  8D36 C9           	ret
1263  8D37
1264  8D37
1265  8D37              ; **************************************************************************************************
1266  8D37              ;
1267  8D37              ;	08/05/23
1268  8D37              ;
1269  8D37              ;	Incrementamos los dos punteros de entidades. (+1).
1270  8D37
1271  8D37 2A 07 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1272  8D3A 22 05 89     	ld (Puntero_store_caja),hl
1273  8D3D 2A 09 89     	ld hl,(Indice_restore_caja)
1274  8D40 23           	inc hl
1275  8D41 23           	inc hl
1276  8D42 22 09 89     	ld (Indice_restore_caja),hl
1277  8D45 CD 9C 8C         call Extrae_address
1278  8D48 22 07 89         ld (Puntero_restore_caja),hl
1279  8D4B C9               ret
1280  8D4C
1281  8D4C              ; **************************************************************************************************
1282  8D4C              ;
1283  8D4C              ;	25/01/23
1284  8D4C              ;
1285  8D4C              ;	Restore_Amadeus
1286  8D4C              ;
1287  8D4C              ;	Cargamos en DRAW los parámetros de Amadeus.
1288  8D4C              ;
1289  8D4C
1290  8D4C E5           Restore_Amadeus	push hl
1291  8D4D D5           	push de
1292  8D4E C5            	push bc
1293  8D4F 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1294  8D52 11 C5 88     	ld de,Filas
1295  8D55 01 3D 00     	ld bc,61
1296  8D58 ED B0        	ldir
1297  8D5A C1           	pop bc
1298  8D5B D1           	pop de
1299  8D5C E1           	pop hl
1300  8D5D C9           	ret
1301  8D5E
1302  8D5E              ; *************************************************************************************************************************************************************
1303  8D5E              ;
1304  8D5E              ;	29/04/23
1305  8D5E              ;
1306  8D5E              ;	Store_Amadeus
1307  8D5E              ;
1308  8D5E              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1309  8D5E              ;
1310  8D5E              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1311  8D5E              ;
1312  8D5E              ;	DESTRUYE: HL y BC y DE.
1313  8D5E
1314  8D5E 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1315  8D61 01 3D 00     	ld bc,61
1316  8D64 ED B0        	ldir
1317  8D66 C9           	ret
1318  8D67
1319  8D67              ; -----------------------------------------------------------
1320  8D67              ;
1321  8D67              ;	27/04/23
1322  8D67              ;
1323  8D67              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1324  8D67              ;
1325  8D67              ;	Destruye: HL,BC,DE,A
1326  8D67
1327  8D67 21 C5 88     Borra_datos_entidad ld hl,Filas
1328  8D6A 01 3C 00     	ld bc,60
1329  8D6D AF           	xor a
1330  8D6E 77           	ld (hl),a
1331  8D6F 11 C6 88     	ld de,Filas+1
1332  8D72 ED B0        	ldir
1333  8D74 C9           	ret
1334  8D75
1335  8D75              ; -----------------------------------------------------------
1336  8D75
1337  8D75              ; Teclado.
1338  8D75
1339  8D75 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1340  8D77 DB FE        	in a,($fe)
1341  8D79 E6 01        	and $01
1342  8D7B 28 02        	jr z,1f
1343  8D7D 18 F6        	jr Pulsa_ENTER
1344  8D7F C9           1 ret
1345  8D80
1346  8D80              ; **************************************************************************************************
1347  8D80              ;
1348  8D80              ; Temporización.
1349  8D80
1350  8D80              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1351  8D80              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1352  8D80              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1353  8D80              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1354  8D80
1355  8D80              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1356  8D80              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1357  8D80              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1358  8D80
1359  8D80              ; A partir de $4f61 no hace falta DELAY.
1360  8D80
1361  8D80              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1362  8D80
1363  8D80 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1364  8D83 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1365  8D84 78           	LD A,B
1366  8D85 A7           	AND A
1367  8D86 20 FB        	JR NZ,wait
1368  8D88 C9           	RET
1369  8D89
1370  8D89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1371  8D89              ;
1372  8D89              ;	5/3/23
1373  8D89              ;
1374  8D89              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1375  8D89
1376  8D89              Movimiento_Amadeus
1377  8D89
1378  8D89              ; Disparo.
1379  8D89
1380  8D89 3A 53 89     	ld a,(Disparo_Amadeus)
1381  8D8C A7           	and a
1382  8D8D 20 02        	jr nz,1F
1383  8D8F 18 15        	jr 2F
1384  8D91
1385  8D91 3E F7        1 ld a,$f7													; "5" para disparar.
1386  8D93 DB FE        	in a,($fe)
1387  8D95 E6 10        	and $10
1388  8D97
1389  8D97 F5           	push af
1390  8D98 CC 78 8E     	call z,Genera_disparo
1391  8D9B F1           	pop af
1392  8D9C 20 08        	jr nz,2F
1393  8D9E
1394  8D9E 3A 53 89     	ld a,(Disparo_Amadeus)
1395  8DA1 EE 01        	xor 1
1396  8DA3 32 53 89     	ld (Disparo_Amadeus),a
1397  8DA6
1398  8DA6 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1399  8DA8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1400  8DAA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1401  8DAC CC 49 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1402  8DAF
1403  8DAF 3E F7        	ld a,$f7
1404  8DB1 DB FE        	in a,($fe)
1405  8DB3 E6 01        	and $01
1406  8DB5 C8           	ret z
1407  8DB6
1408  8DB6 3E F7        	ld a,$f7
1409  8DB8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1410  8DBA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1411  8DBC CC 2B 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1412  8DBF C9           	ret
1413  8DC0
1414  8DC0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1415  8DC0              ;
1416  8DC0              ;	Rutina provisional para que los malotes cagen balas.
1417  8DC0
1418  8DC0              Detecta_disparo_entidad
1419  8DC0
1420  8DC0 3A 56 89     	ld a,(Disparo_entidad)
1421  8DC3 A7           	and a
1422  8DC4 C8           	ret z
1423  8DC5
1424  8DC5              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1425  8DC5
1426  8DC5              ;	ld a,$7f				; Detecta SPACE.
1427  8DC5              ;	in a,($fe)
1428  8DC5              ;	and 1
1429  8DC5              ;	ret nz
1430  8DC5
1431  8DC5              ;	call Genera_disparo
1432  8DC5 C9           	ret
1433  8DC6
1434  8DC6              ; ----------------------------------------------------------------------
1435  8DC6              ;
1436  8DC6              ;	8/9/23
1437  8DC6
1438  8DC6              Guarda_datos_de_borrado
1439  8DC6
1440  8DC6 F3           	di
1441  8DC7
1442  8DC7 2A 19 89     	ld hl,(Stack_snapshot)
1443  8DCA
1444  8DCA 2B           	dec hl
1445  8DCB 7E           	ld a,(hl)
1446  8DCC A7           	and a
1447  8DCD C8           	ret z										; Salimos si es álbum está vacío.
1448  8DCE
1449  8DCE 11 E4 88     	ld de,Variables_de_borrado+5
1450  8DD1 01 06 00     	ld bc,6
1451  8DD4 ED B8        	lddr
1452  8DD6
1453  8DD6 FB           	ei
1454  8DD7
1455  8DD7 C9           	ret
1456  8DD8
1457  8DD8              ; ----------------------------------------------------------------------
1458  8DD8              ;
1459  8DD8              ;	8/9/23
1460  8DD8
1461  8DD8 2A 21 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1462  8DDB 2B            	dec hl
1463  8DDC 7E           	ld a,(hl)
1464  8DDD A7           	and a
1465  8DDE C8           	ret z										; Salimos si es álbum está vacío.
1466  8DDF
1467  8DDF 11 E4 88     	ld de,Variables_de_borrado+5
1468  8DE2 01 06 00     	ld bc,6
1469  8DE5 ED B8        	lddr
1470  8DE7 C9           	ret
1471  8DE8
1472  8DE8              ; ----------------------------------------------------------------------
1473  8DE8              ;
1474  8DE8              ;	9/9/23
1475  8DE8
1476  8DE8              Repone_datos_de_borrado_Amadeus
1477  8DE8
1478  8DE8 21 DF 88     	ld hl,Variables_de_borrado
1479  8DEB 11 A0 72     	ld de,Album_de_fotos_Amadeus
1480  8DEE 01 06 00     	ld bc,6
1481  8DF1 ED B0        	ldir
1482  8DF3
1483  8DF3 EB           	ex de,hl
1484  8DF4 22 21 89     	ld (End_Snapshot_Amadeus),hl
1485  8DF7
1486  8DF7 C9           	ret
1487  8DF8
1488  8DF8              ; ----------------------------------------------------------------------
1489  8DF8              ;
1490  8DF8              ;	18/9/23
1491  8DF8              ;
1492  8DF8
1493  8DF8              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1494  8DF8              ;	_ Album_de_fotos correspondiente.
1495  8DF8
1496  8DF8              ;	DI.
1497  8DF8
1498  8DF8              Repone_datos_de_borrado
1499  8DF8
1500  8DF8 F3           	di
1501  8DF9
1502  8DF9 ED 5B 19 89  	ld de,(Stack_snapshot)
1503  8DFD 21 DF 88     	ld hl,Variables_de_borrado
1504  8E00 01 06 00     	ld bc,6
1505  8E03 ED B0        	ldir
1506  8E05
1507  8E05 EB           	ex de,hl
1508  8E06 22 19 89     	ld (Stack_snapshot),hl
1509  8E09
1510  8E09 FB           	ei
1511  8E0A
1512  8E0A C9           	ret
1513  8E0B
1514  8E0B              ; ----------------------------------------------------------------------
1515  8E0B              ;
1516  8E0B              ;	11/8/23
1517  8E0B
1518  8E0B              Frame
1519  8E0B
1520  8E0B              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1521  8E0B              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1522  8E0B
1523  8E0B              ; PINTAMOS.
1524  8E0B
1525  8E0B 3E 02        	ld a,2
1526  8E0D D3 FE            out ($fe),a											; Rojo.
1527  8E0F
1528  8E0F              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1529  8E0F              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1530  8E0F
1531  8E0F 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1532  8E12 01 EC 84     	ld bc,Indice_album_de_fotos
1533  8E15 A7           	and a
1534  8E16 ED 42        	sbc hl,bc
1535  8E18
1536  8E18 28 FE        	jr z,$
1537  8E1A C8           	ret z
1538  8E1B
1539  8E1B CD 4C 8C     	call Calcula_numero_de_malotes
1540  8E1E CD 7C 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1541  8E21
1542  8E21              ;	call Extrae_foto_disparos
1543  8E21              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1544  8E21
1545  8E21 CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1546  8E24
1547  8E24              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1548  8E24
1549  8E24 3A 02 89     	ld a,(Ctrl_1)
1550  8E27 CB 6F        	bit 5,a
1551  8E29 20 22        	jr nz,1F
1552  8E2B
1553  8E2B              ; No hemos terminado de guardar el último FRAME.
1554  8E2B
1555  8E2B 2A 2F 89     	ld hl,(Puntero_indice_album_de_fotos)
1556  8E2E 2B           	dec hl
1557  8E2F 2B           	dec hl
1558  8E30 22 2F 89     	ld (Puntero_indice_album_de_fotos),hl
1559  8E33
1560  8E33 2A 33 89     	ld hl,(Puntero_indice_End_Snapshot)
1561  8E36 2B           	dec hl
1562  8E37 2B           	dec hl
1563  8E38 22 33 89     	ld (Puntero_indice_End_Snapshot),hl
1564  8E3B CD 9C 8C     	call Extrae_address
1565  8E3E 22 37 89     	ld (Puntero_de_End_Snapshot),hl
1566  8E41
1567  8E41 CD 9C 8C     	call Extrae_address
1568  8E44
1569  8E44              ; Esta vacío este album???
1570  8E44
1571  8E44 24           	inc h
1572  8E45 25           	dec h
1573  8E46 28 05        	jr z,1F
1574  8E48
1575  8E48              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1576  8E48
1577  8E48 22 19 89     	ld (Stack_snapshot),hl
1578  8E4B 18 09        	jr 2F
1579  8E4D
1580  8E4D              ; FRAME completo.
1581  8E4D
1582  8E4D 2A 2F 89     1 ld hl,(Puntero_indice_album_de_fotos)
1583  8E50 CD 9C 8C     	call Extrae_address
1584  8E53 22 19 89     	ld (Stack_snapshot),hl
1585  8E56
1586  8E56              ;	En este punto:
1587  8E56
1588  8E56              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1589  8E56              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1590  8E56
1591  8E56 21 02 89     2 ld hl,Ctrl_1
1592  8E59 CB AE        	res 5,(hl)
1593  8E5B
1594  8E5B C9           	ret
1595  8E5C
1596  8E5C              ; -----------------------------------------------------------------------------------
1597  8E5C
1598  8E5C              Pinta_Amadeus
1599  8E5C
1600  8E5C 3E 06        	ld a,6
1601  8E5E D3 FE            out ($fe),a										; Amarillo
1602  8E60
1603  8E60 CD 68 8C        	call Calcula_malotes_Amadeus
1604  8E63 CD FE 96     	call Extrae_foto_Amadeus
1605  8E66 CD 24 8C     	call Limpia_album_Amadeus
1606  8E69 C9           	ret
1607  8E6A
1608  8E6A              ; -----------------------------------------------------------------------------------
1609  8E6A
1610  8E6A              Actualiza_relojes
1611  8E6A
1612  8E6A 21 4E 89     	ld hl,Contador_de_frames
1613  8E6D 7E           	ld a,(hl)
1614  8E6E FE FF        	cp $ff
1615  8E70 20 04        	jr nz,1F
1616  8E72 34           	inc (hl)
1617  8E73 21 4F 89     	ld hl,Contador_de_frames_2
1618  8E76 34           1 inc (hl)											; 0 - 255
1619  8E77 C9           	ret
1620  8E78
1621  8E78              ; ---------------------------------------------------------------
1622  8E78
1623  8E78              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E78              ; ******************************************************************************************************************************************************************************************
   2+ 8E78              ;
   3+ 8E78              ;   21/07/23
   4+ 8E78              ;
   5+ 8E78              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E78              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E78              ;
   8+ 8E78              ;
   9+ 8E78              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E78              ;
  11+ 8E78              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E78              ;               _ hacen las entidades hacia abajo.
  13+ 8E78              ;
  14+ 8E78              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E78              ;
  16+ 8E78              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E78              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E78              ;
  19+ 8E78              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E78              ;           _ la bala.
  21+ 8E78              ;
  22+ 8E78              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E78              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E78              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E78              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E78              ;           _ en el momento de generarse la bala)).
  27+ 8E78
  28+ 8E78              Genera_disparo
  29+ 8E78
  30+ 8E78              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E78              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E78              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E78              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E78              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E78              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E78              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E78
  38+ 8E78              ; Exclusiones:
  39+ 8E78
  40+ 8E78 3A DD 88         ld a,(Vel_down)
  41+ 8E7B 47               ld b,a
  42+ 8E7C 3A 4D 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E7F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E80 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E81 3A FC 88         ld a,(Columnas)
  46+ 8E84 47               ld b,a
  47+ 8E85 3A C6 88         ld a,(Columns)
  48+ 8E88 B8               cp b
  49+ 8E89 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E8A
  51+ 8E8A              ; ----- ----- -----
  52+ 8E8A
  53+ 8E8A 3A EF 88         ld a,(Ctrl_0)
  54+ 8E8D CB 77            bit 6,a
  55+ 8E8F 20 06            jr nz,14F
  56+ 8E91
  57+ 8E91 3A CC 88         ld a,(Coordenada_y)
  58+ 8E94 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E96 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E97
  61+ 8E97 21 00 80     14 ld hl,Indice_disparo
  62+ 8E9A 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8E9D 4F               ld c,a
  64+ 8E9E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EA0              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EA0              ;                                            ""        ""       "f9", B="1"
  67+ 8EA0              ;                                            ""        ""       "fb", B="2"
  68+ 8EA0              ;                                            ""        ""       "fb", B="3"
  69+ 8EA0 A7               and a
  70+ 8EA1 28 10            jr z,1F
  71+ 8EA3 E6 01            and 1
  72+ 8EA5 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EA6
  74+ 8EA6 79               ld a,c
  75+ 8EA7 16 F9            ld d,$f9
  76+ 8EA9 23           2 inc hl
  77+ 8EAA 23               inc hl
  78+ 8EAB 04               inc b
  79+ 8EAC BA               cp d
  80+ 8EAD 28 04            jr z,1F
  81+ 8EAF 14               inc d
  82+ 8EB0 14               inc d
  83+ 8EB1 18 F6            jr 2B
  84+ 8EB3
  85+ 8EB3 CD 9C 8C     1 call Extrae_address
  86+ 8EB6 E5               push hl
  87+ 8EB7 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EB9 DD 21 44 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EBD
  90+ 8EBD              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EBD              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EBD
  93+ 8EBD 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EC0 CB 77            bit 6,a
  95+ 8EC2 20 04            jr nz,19F
  96+ 8EC4
  97+ 8EC4 AF               xor a
  98+ 8EC5 32 56 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EC8
 100+ 8EC8 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8ECB FE 02            cp 2
 102+ 8ECD 38 66            jr c,3F
 103+ 8ECF 28 64            jr z,3F
 104+ 8ED1
 105+ 8ED1              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8ED1
 107+ 8ED1 E6 01            and 1
 108+ 8ED3 28 30            jr z,4F
 109+ 8ED5
 110+ 8ED5              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8ED5              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8ED5              ;
 113+ 8ED5              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8ED5              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8ED5              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8ED5
 117+ 8ED5 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8ED8
 119+ 8ED8              ;   Amadeus o entidad ???.
 120+ 8ED8
 121+ 8ED8 3A EF 88         ld a,(Ctrl_0)
 122+ 8EDB CB 77            bit 6,a
 123+ 8EDD 28 0A            jr z,8F
 124+ 8EDF
 125+ 8EDF              ; 	Dispara Amadeus.
 126+ 8EDF
 127+ 8EDF 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EE1 CD 6D 96         call PreviousScan
 129+ 8EE4 CD 6D 96         call PreviousScan
 130+ 8EE7
 131+ 8EE7              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EE7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EE7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EE7
 136+ 8EE7 18 11            jr 10F
 137+ 8EE9
 138+ 8EE9              ; 	Dispara Entidad.
 139+ 8EE9
 140+ 8EE9 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EEC              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EEC
 143+ 8EEC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EEC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EEC
 146+ 8EEC C5               push bc
 147+ 8EED 06 10            ld b,16
 148+ 8EEF CD 5E 96     9 call NextScan
 149+ 8EF2 10 FB            djnz 9B
 150+ 8EF4 C1               pop bc
 151+ 8EF5 CD 5F 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EF8 18 06            jr 17F
 153+ 8EFA
 154+ 8EFA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EFA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EFA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EFA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EFA
 159+ 8EFA CD 5F 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EFD CD D4 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F00              ;                                                      ; _al generar el disparo.
 162+ 8F00
 163+ 8F00              ; 	LLegados a este punto tendremos:
 164+ 8F00              ;
 165+ 8F00              ;       Puntero_objeto_disparo en IY.
 166+ 8F00              ;       Rutinas_de_impresion en IX.
 167+ 8F00              ;       Puntero_de_impresion en HL.
 168+ 8F00              ;       Impacto/Dirección en BC.
 169+ 8F00
 170+ 8F00 CD 67 8F     17 call Almacena_disparo
 171+ 8F03 18 52            jr 6F                                             ; RET.
 172+ 8F05
 173+ 8F05              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F05              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F05              ;
 176+ 8F05              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F05              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F05              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F05
 180+ 8F05 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8F08
 182+ 8F08              ;   Amadeus o entidad ???.
 183+ 8F08
 184+ 8F08 3A EF 88         ld a,(Ctrl_0)
 185+ 8F0B CB 77            bit 6,a
 186+ 8F0D 28 0A            jr z,11F
 187+ 8F0F
 188+ 8F0F              ; 	Dispara Amadeus.
 189+ 8F0F
 190+ 8F0F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F11 CD 6D 96         call PreviousScan
 192+ 8F14 CD 6D 96         call PreviousScan
 193+ 8F17
 194+ 8F17              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F17              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F17              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F17
 199+ 8F17 18 11            jr 13F
 200+ 8F19
 201+ 8F19              ; 	Dispara Entidad.
 202+ 8F19
 203+ 8F19 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F1C              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F1C
 206+ 8F1C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F1C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F1C
 209+ 8F1C C5               push bc
 210+ 8F1D 06 10            ld b,16
 211+ 8F1F CD 5E 96     12 call NextScan
 212+ 8F22 10 FB            djnz 12B
 213+ 8F24 C1               pop bc
 214+ 8F25
 215+ 8F25 CD 58 8F         call Ajusta_disparo_parte_derecha
 216+ 8F28 18 06            jr 18F
 217+ 8F2A
 218+ 8F2A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F2A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F2A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F2A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F2A
 223+ 8F2A CD 58 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F2D CD D4 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F30              ;                                                       ; _al generar el disparo.
 226+ 8F30
 227+ 8F30              ; LLegados a este punto tendremos:
 228+ 8F30              ;
 229+ 8F30              ;       Puntero_objeto_disparo en IY.
 230+ 8F30              ;       Rutinas_de_impresion en IX.
 231+ 8F30              ;       Puntero_de_impresion en HL.
 232+ 8F30              ;       Impacto/Dirección en BC.
 233+ 8F30
 234+ 8F30 CD 67 8F     18 call Almacena_disparo
 235+ 8F33 18 22            jr 6F                                               ; RET.
 236+ 8F35
 237+ 8F35              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F35
 239+ 8F35 28 11        3 jr z,5F
 240+ 8F37
 241+ 8F37              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F37              ;
 243+ 8F37              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F37              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F37              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F37              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F37
 248+ 8F37              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F37              ;	   ""        ""       "f9", B="1"
 250+ 8F37              ;	   ""        ""       "fb", B="2"
 251+ 8F37              ; 	   ""        ""       "fb", B="3"
 252+ 8F37
 253+ 8F37 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8F3A CD 5E 96     	call NextScan
 255+ 8F3D
 256+ 8F3D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F3D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F3D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F3D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F3D
 261+ 8F3D CD 5F 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F40
 263+ 8F40              ; 	No se produce impacto. B="$80"
 264+ 8F40              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F40
 266+ 8F40 01 80 80         ld bc,$8080
 267+ 8F43
 268+ 8F43              ; 	LLegados a este punto tendremos:
 269+ 8F43              ;
 270+ 8F43              ;       Puntero_objeto_disparo en IY.
 271+ 8F43              ;       Rutinas_de_impresion en IX.
 272+ 8F43              ;       Puntero_de_impresion en HL.
 273+ 8F43              ;       Impacto/Dirección en BC.
 274+ 8F43
 275+ 8F43 CD 67 8F         call Almacena_disparo
 276+ 8F46 18 0F            jr 6F                                           ; RET.
 277+ 8F48
 278+ 8F48              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F48              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F48              ;
 281+ 8F48              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F48              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F48              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F48              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F48
 286+ 8F48 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8F4B CD 5E 96     	call NextScan
 288+ 8F4E
 289+ 8F4E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F4E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F4E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F4E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F4E
 294+ 8F4E CD 58 8F         call Ajusta_disparo_parte_derecha
 295+ 8F51
 296+ 8F51              ; 	No se produce impacto. B="$80"
 297+ 8F51              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F51
 299+ 8F51 01 80 80     15 ld bc,$8080
 300+ 8F54
 301+ 8F54              ; 	LLegados a este punto tendremos:
 302+ 8F54              ;
 303+ 8F54              ;       Puntero_objeto_disparo en IY.
 304+ 8F54              ;       Rutinas_de_impresion en IX.
 305+ 8F54              ;       Puntero_de_impresion en HL.
 306+ 8F54              ;       Impacto/Dirección en BC.
 307+ 8F54
 308+ 8F54 CD 67 8F         call Almacena_disparo
 309+ 8F57
 310+ 8F57 C9           6 ret
 311+ 8F58
 312+ 8F58              ; ----------------------------------------------------------------
 313+ 8F58              ;
 314+ 8F58              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F58              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F58              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F58
 318+ 8F58 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F59 FE 02            cp 2
 320+ 8F5B 38 01            jr c,1F
 321+ 8F5D 23               inc hl
 322+ 8F5E C9           1 ret
 323+ 8F5F
 324+ 8F5F 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F60 FE 01        	cp 1
 326+ 8F62 20 01        	jr nz,1F
 327+ 8F64 2B           	dec hl
 328+ 8F65 2B           1 dec hl
 329+ 8F66 C9               ret
 330+ 8F67
 331+ 8F67              ; ----------------------------------------------------------------
 332+ 8F67              ;
 333+ 8F67              ;   25/02/23
 334+ 8F67              ;
 335+ 8F67              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F67              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F67              ;
 338+ 8F67              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F67              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F67
 341+ 8F67              Almacena_disparo
 342+ 8F67
 343+ 8F67 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F68 F1               pop af
 345+ 8F69 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F6A
 347+ 8F6A 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F6B E6 01            and 1
 349+ 8F6D 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F6F              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F6F              ; 	Dispara AMADEUS.
 352+ 8F6F
 353+ 8F6F              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F6F              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F6F              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F6F              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F6F
 358+ 8F6F C5               push bc
 359+ 8F70 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F73 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F76 A7               and a
 362+ 8F77 ED 42            sbc hl,bc
 363+ 8F79 CC 1D 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F7C C1               pop bc
 365+ 8F7D 28 54            jr z,4F
 366+ 8F7F
 367+ 8F7F 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F82 23               inc hl
 369+ 8F83 23               inc hl
 370+ 8F84 22 3E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F87              ;                                                   ; _ Disparo_(+1).
 372+ 8F87 18 18            jr 2F
 373+ 8F89
 374+ 8F89              ; Dispara una entidad.
 375+ 8F89
 376+ 8F89 C5           1 push bc
 377+ 8F8A 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F8D 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F90 A7               and a
 380+ 8F91 ED 42            sbc hl,bc
 381+ 8F93 CC 16 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F96 C1               pop bc
 383+ 8F97 28 3A            jr z,4F
 384+ 8F99
 385+ 8F99 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F9C 23               inc hl
 387+ 8F9D 23               inc hl
 388+ 8F9E 22 3C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FA1              ;                                                   ; _ Disparo_(+1).
 390+ 8FA1 CD 9C 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FA4              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FA4              ;
 393+ 8FA4              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FA4              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FA4              ;                                                     Puntero_de_impresion en HL.
 396+ 8FA4              ;                                                     Impacto/Dirección en BC.
 397+ 8FA4
 398+ 8FA4 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FA5 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FA6 23               inc hl                                          ; _ al siguiente.
 401+ 8FA7 A7               and a
 402+ 8FA8 20 C0            jr nz,3B
 403+ 8FAA
 404+ 8FAA 08               ex af,af
 405+ 8FAB ED 73 13 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FAF F9               ld sp,hl
 407+ 8FB0
 408+ 8FB0 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FB2 F5               push af                                         ; Puntero de impresión.
 410+ 8FB3 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FB5 C5               push bc                                         ; Control.
 412+ 8FB6
 413+ 8FB6 ED 7B 13 89      ld sp,(Stack)
 414+ 8FBA
 415+ 8FBA              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FBA
 417+ 8FBA 21 02 89     	ld hl,Ctrl_1
 418+ 8FBD CB C6        	set 0,(hl)
 419+ 8FBF
 420+ 8FBF DD E5        	push ix
 421+ 8FC1 E1               pop hl
 422+ 8FC2 F5               push af
 423+ 8FC3 DD E1            pop ix
 424+ 8FC5
 425+ 8FC5 CD A0 7F     	call Guarda_foto_registros
 426+ 8FC8
 427+ 8FC8 21 02 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FCB CB 86        	res 0,(hl)
 429+ 8FCD
 430+ 8FCD              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FCD              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FCD
 433+ 8FCD CD 1D 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FD0 CD 16 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FD3
 436+ 8FD3 C9           4 ret
 437+ 8FD4
 438+ 8FD4              ; ----------------------------------------------------------------
 439+ 8FD4              ;
 440+ 8FD4              ;   4/3/23
 441+ 8FD4              ;
 442+ 8FD4              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FD4              ;   _ al generarse el disparo.
 444+ 8FD4              ;
 445+ 8FD4              ;       "$80" ..... No se produce colisión.
 446+ 8FD4              ;       "$81" ..... Se produce colisión.
 447+ 8FD4              ;
 448+ 8FD4              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FD4              ;         _ que forman el disparo.
 450+ 8FD4
 451+ 8FD4
 452+ 8FD4              Comprueba_Colision
 453+ 8FD4
 454+ 8FD4              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FD4
 456+ 8FD4 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FD6 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FD7
 459+ 8FD7 CD 0D 90         call Modifica_H_Velocidad_disparo
 460+ 8FDA
 461+ 8FDA 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FDB FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FDD 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FDF
 465+ 8FDF 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FE1 CD FD 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FE4
 468+ 8FE4 7B               ld a,e
 469+ 8FE5 E6 01            and 1
 470+ 8FE7 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FE9              ;                                                  ; _ para activar IMPACTO.
 472+ 8FE9 E1               pop hl
 473+ 8FEA E5               push hl
 474+ 8FEB CD 5E 96         call NextScan
 475+ 8FEE
 476+ 8FEE 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FEF FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FF1 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FF3              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FF3 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FF5 CD FD 8F         call Bucle_2
 482+ 8FF8
 483+ 8FF8 43           1 ld b,e
 484+ 8FF9 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FFA FD E1            pop iy
 486+ 8FFC C9               ret
 487+ 8FFD
 488+ 8FFD              ; ---------- ----------
 489+ 8FFD
 490+ 8FFD 06 02        Bucle_2 ld b,2
 491+ 8FFF FD 7E 00     2 ld a,(iy)
 492+ 9002 A6               and (hl)
 493+ 9003 28 02            jr z,1F
 494+ 9005 1E 81            ld e,$81
 495+ 9007 23           1 inc hl
 496+ 9008 FD 23            inc iy
 497+ 900A 10 F3            djnz 2B
 498+ 900C C9               ret
 499+ 900D
 500+ 900D              ; ---------- ----------
 501+ 900D              ;
 502+ 900D              ;   21/7/23
 503+ 900D
 504+ 900D              Modifica_H_Velocidad_disparo
 505+ 900D
 506+ 900D 3A 4D 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9010 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9012 D0               ret nc                                         ; _ incrementamos H.
 509+ 9013 24               inc h
 510+ 9014
 511+ 9014 C9               ret
 512+ 9015
 513+ 9015              ; -------------------------------------------------------------------------------------------------------------
 514+ 9015              ;
 515+ 9015              ;   11/04/23
 516+ 9015              ;
 517+ 9015              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9015              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9015              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9015              ;
 521+ 9015              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9015
 523+ 9015              Compara_coordenadas_X
 524+ 9015
 525+ 9015              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9015              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9015
 528+ 9015              ; Preparamos registros:
 529+ 9015
 530+ 9015 21 CB 88         ld hl,Filas+6
 531+ 9018 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9019 23               inc hl
 533+ 901A 23               inc hl
 534+ 901B 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 901C 43               ld b,e
 536+ 901D
 537+ 901D 21 D9 88         ld hl,Filas+20
 538+ 9020 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9021 21 48 89         ld hl,Coordenadas_X_Entidad
 540+ 9024 CD 40 92         call Guarda_coordenadas_X
 541+ 9027
 542+ 9027              ; Preparamos registros:
 543+ 9027
 544+ 9027 21 A4 85         ld hl,Amadeus_db+6
 545+ 902A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 902B 23               inc hl
 547+ 902C 23               inc hl
 548+ 902D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 902E 7B               ld a,e
 550+ 902F 08               ex af,af'
 551+ 9030 21 B2 85         ld hl,Amadeus_db+20
 552+ 9033 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9034 21 45 89         ld hl,Coordenadas_X_Amadeus
 554+ 9037 CD 40 92         call Guarda_coordenadas_X
 555+ 903A
 556+ 903A              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 903A              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 903A
 559+ 903A 04               inc b
 560+ 903B 05               dec b
 561+ 903C 28 04            jr z,1F
 562+ 903E 06 03            ld b,3
 563+ 9040 18 02            jr 2F
 564+ 9042 06 02        1 ld b,2
 565+ 9044 08           2 ex af,af'
 566+ 9045 3C               inc a
 567+ 9046 3D               dec a
 568+ 9047 28 04            jr z,5F
 569+ 9049 0E 03            ld c,3
 570+ 904B 18 02            jr 6F
 571+ 904D 0E 02        5 ld c,2
 572+ 904F 79           6 ld a,c
 573+ 9050 08               ex af,af'
 574+ 9051 11 48 89         ld de,Coordenadas_X_Entidad
 575+ 9054 1A           4 ld a,(de)
 576+ 9055 21 45 89         ld hl,Coordenadas_X_Amadeus
 577+ 9058 BE           3 cp (hl)
 578+ 9059 28 0E            jr z,7F
 579+ 905B 23               inc hl
 580+ 905C 0D               dec c
 581+ 905D 20 F9            jr nz,3B
 582+ 905F 13               inc de
 583+ 9060 08               ex af,af'
 584+ 9061 4F               ld c,a
 585+ 9062 08               ex af,af'
 586+ 9063 10 EF            djnz 4B
 587+ 9065
 588+ 9065              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9065
 590+ 9065 CD 7C 92     8 call Limpia_Coordenadas_X
 591+ 9068 C9               ret
 592+ 9069
 593+ 9069 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 906B 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 906E 21 40 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9071 CB D6            set 2,(hl)
 597+ 9073 18 F0            jr 8B
 598+ 9075
 599+ 9075              ; -----------------------------------------------------------------------
 600+ 9075              ;
 601+ 9075              ;   17/04/23
 602+ 9075              ;
 603+ 9075
 604+ 9075              Detecta_colision_nave_entidad
 605+ 9075
 606+ 9075              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9075
 608+ 9075 2A C7 88         ld hl,(Posicion_actual)
 609+ 9078 CD B9 95         call Calcula_puntero_de_impresion
 610+ 907B
 611+ 907B              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 907B              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 907B
 614+ 907B DD E5            push ix
 615+ 907D E1               pop hl
 616+ 907E E5               push hl
 617+ 907F
 618+ 907F              ; ----- ----- -----
 619+ 907F 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9081 06 0A            ld b,10
 621+ 9083 CD B3 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9086 7B               ld a,e
 623+ 9087 FE 05            cp 5
 624+ 9089 38 0E            jr c,3F
 625+ 908B
 626+ 908B              ; LLegados a este punto:
 627+ 908B              ;
 628+ 908B              ;   HAY COLISIÓN !!!!!.
 629+ 908B              ;
 630+ 908B              ;   .db (Impacto) de Amadeus a "1".
 631+ 908B              ;   SET el bit3 de (Impacto2).
 632+ 908B              ;
 633+ 908B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 908B
 635+ 908B 21 B7 85         ld hl,Amadeus_db+25
 636+ 908E 36 01            ld (hl),1
 637+ 9090 21 40 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9093 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9095 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9097 18 18            jr 1F
 641+ 9099
 642+ 9099              ; -----
 643+ 9099
 644+ 9099 E1           3 pop hl
 645+ 909A CD 5E 96         call NextScan
 646+ 909D E5               push hl
 647+ 909E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 909F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90A1 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90A3 30 0C            jr nc,1F
 651+ 90A5              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90A5 10 DC            djnz 2B
 653+ 90A7
 654+ 90A7              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90A7
 656+ 90A7              ; LLegados a este punto:
 657+ 90A7              ;
 658+ 90A7              ;   NO HAY COLISIÓN !!!!!.
 659+ 90A7              ;
 660+ 90A7              ;   .db (Impacto) de Amadeus a "0".
 661+ 90A7              ;   RES el bit2 de (Impacto2).
 662+ 90A7              ;
 663+ 90A7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90A7              ;   Lo colocamos a "0".
 665+ 90A7
 666+ 90A7 21 40 89         ld hl,Impacto2
 667+ 90AA CB 96            res 2,(hl)
 668+ 90AC 2A 41 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90AF 36 00            ld (hl),0
 670+ 90B1
 671+ 90B1 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90B2 C9               ret
 673+ 90B3
 674+ 90B3               ; ---------- ----------
 675+ 90B3
 676+ 90B3 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90B4 3A C6 88         ld a,(Columns)
 678+ 90B7 47               ld b,a
 679+ 90B8 FD 7E 00     2 ld a,(iy)
 680+ 90BB BE               cp (hl)
 681+ 90BC 28 01            jr z,1F
 682+ 90BE
 683+ 90BE 1C               inc e
 684+ 90BF
 685+ 90BF 23           1 inc hl
 686+ 90C0 FD 23            inc iy
 687+ 90C2 10 F4            djnz 2B
 688+ 90C4 C1               pop bc
 689+ 90C5 C9               ret
 690+ 90C6
 691+ 90C6              ; -------------------------------------------------------------------------------------------------------------
 692+ 90C6              ;
 693+ 90C6              ;   13/03/23
 694+ 90C6              ;
 695+ 90C6              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90C6              ;
 697+ 90C6              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90C6
 699+ 90C6 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90C9 7E               ld a,(hl)
 701+ 90CA A7               and a
 702+ 90CB C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90CC
 704+ 90CC 44               ld b,h
 705+ 90CD 4D               ld c,l
 706+ 90CE 2A 1B 89         ld hl,(Stack_snapshot_disparos)
 707+ 90D1 E5               push hl
 708+ 90D2 A7               and a
 709+ 90D3 ED 42            sbc hl,bc
 710+ 90D5 E5               push hl
 711+ 90D6 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90D7
 713+ 90D7 E1               pop hl
 714+ 90D8 54               ld d,h
 715+ 90D9 5D               ld e,l
 716+ 90DA 1B               dec de
 717+ 90DB ED B8            lddr                                                ; Limpiamos.
 718+ 90DD
 719+ 90DD 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90E0 22 1B 89         ld (Stack_snapshot_disparos),hl
 721+ 90E3
 722+ 90E3 C9               ret
 723+ 90E4
 724+ 90E4              ; -------------------------------------------------------------------------------------------------------------
 725+ 90E4              ;
 726+ 90E4              ;   18/07/23
 727+ 90E4              ;
 728+ 90E4
 729+ 90E4              Motor_de_disparos
 730+ 90E4
 731+ 90E4              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90E4
 733+ 90E4 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90E7 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90EA
 736+ 90EA CD 9C 8C     2 call Extrae_address
 737+ 90ED 7E               ld a,(hl)
 738+ 90EE A7               and a
 739+ 90EF 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90F1
 741+ 90F1              ; ----- ----- ----- ----- ----- -----
 742+ 90F1
 743+ 90F1 C5               push bc
 744+ 90F2 CD B6 91         call foto_disparo_a_borrar
 745+ 90F5
 746+ 90F5              ; Existe colisión con este disparo???
 747+ 90F5
 748+ 90F5 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90F6 7E               ld a,(hl)
 750+ 90F7 2B               dec hl
 751+ 90F8 E6 01            and 1
 752+ 90FA 28 1D            jr z,9F
 753+ 90FC
 754+ 90FC              ;   En este punto:
 755+ 90FC              ;
 756+ 90FC              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90FC              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90FC              ;   _con la entidad).
 759+ 90FC              ;
 760+ 90FC              ;   Disparo_2A defw 0                                ; Control.
 761+ 90FC              ;    defw 0                                          ; Puntero objeto.
 762+ 90FC              ;    defw 0                                          ; Puntero de impresión.
 763+ 90FC              ;    defw 0                                          ; Rutina de impresión.
 764+ 90FC
 765+ 90FC E5               push hl
 766+ 90FD
 767+ 90FD 06 04            ld b,4
 768+ 90FF 23           19 inc hl
 769+ 9100 10 FD            djnz 19B
 770+ 9102
 771+ 9102 CD 9C 8C         call Extrae_address
 772+ 9105 CD 27 9D         call Genera_coordenadas_disparo
 773+ 9108
 774+ 9108              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9108
 776+ 9108 21 43 89         ld hl,Coordenadas_disparo_certero
 777+ 910B 72               ld (hl),d
 778+ 910C 23               inc hl
 779+ 910D 73               ld (hl),e
 780+ 910E
 781+ 910E              ; Elimino el disparo de la base de datos.
 782+ 910E
 783+ 910E E1               pop hl
 784+ 910F CD 35 92         call Elimina_disparo_de_base_de_datos
 785+ 9112 21 40 89         ld hl,Impacto2
 786+ 9115 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9117
 788+ 9117 18 06            jr 11F
 789+ 9119
 790+ 9119 CD DF 91     9 call Mueve_disparo
 791+ 911C CD B6 91         call foto_disparo_a_borrar
 792+ 911F
 793+ 911F C1           11 pop bc
 794+ 9120 18 04            jr 7F
 795+ 9122
 796+ 9122              ; ----- ----- ----- ----- ----- -----
 797+ 9122
 798+ 9122 ED 42        1 sbc hl,bc
 799+ 9124 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9126
 801+ 9126 2A 3E 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9129 23               inc hl
 803+ 912A 23               inc hl
 804+ 912B 22 3E 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 912E 18 BA            jr 2B
 806+ 9130
 807+ 9130 CD 1D 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9133              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9133
 810+ 9133              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9133
 812+ 9133 01 8A 85         ld bc,Disparo_11
 813+ 9136 2A 3C 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9139
 815+ 9139 CD 9C 8C     5 call Extrae_address
 816+ 913C 7E               ld a,(hl)
 817+ 913D A7               and a
 818+ 913E 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9140
 820+ 9140              ; ----- ----- ----- ----- ----- -----
 821+ 9140
 822+ 9140 C5               push bc
 823+ 9141 CD B6 91         call foto_disparo_a_borrar
 824+ 9144
 825+ 9144              ; Existe colisión con este disparo???
 826+ 9144
 827+ 9144 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9145 7E               ld a,(hl)
 829+ 9146 2B               dec hl
 830+ 9147 E6 01            and 1
 831+ 9149 28 4D            jr z,10F
 832+ 914B
 833+ 914B              ;! La colisión se produce con Amadeus???
 834+ 914B              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 914B
 836+ 914B E5               push hl
 837+ 914C
 838+ 914C 06 04            ld b,4
 839+ 914E 23           16 inc hl
 840+ 914F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9151
 842+ 9151 CD 9C 8C         call Extrae_address
 843+ 9154 CD 27 9D         call Genera_coordenadas_disparo
 844+ 9157
 845+ 9157 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9158 FE 16            cp $16
 847+ 915A 38 2A            jr c,15F
 848+ 915C
 849+ 915C
 850+ 915C              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 915C
 852+ 915C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 915D
 854+ 915D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 915D
 856+ 915D
 857+ 915D 2A 4B 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9160
 859+ 9160              ; Coordenada X de Amadeus en D.
 860+ 9160
 861+ 9160 7D               ld a,l
 862+ 9161 E6 1F            and $1F
 863+ 9163 57               ld d,a
 864+ 9164
 865+ 9164 21 A6 85         ld hl,Amadeus_db+8
 866+ 9167 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9168
 868+ 9168 21 45 89         ld hl,Coordenadas_X_Amadeus
 869+ 916B CD 40 92         call Guarda_coordenadas_X
 870+ 916E
 871+ 916E D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 916F
 873+ 916F              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 916F
 875+ 916F 06 02            ld b,2
 876+ 9171 C5           20 push bc
 877+ 9172
 878+ 9172 06 03            ld b,3
 879+ 9174 21 45 89         ld hl,Coordenadas_X_Amadeus
 880+ 9177 7E           18 ld a,(hl)
 881+ 9178 BA               cp d
 882+ 9179 20 04            jr nz,17F
 883+ 917B
 884+ 917B              ;! Colisión Amadeus !!!!!!!!!!
 885+ 917B
 886+ 917B C1               pop bc
 887+ 917C E1               pop hl
 888+ 917D 18 0D            jr 14F
 889+ 917F
 890+ 917F 23           17 inc hl
 891+ 9180 10 F5            djnz 18B
 892+ 9182
 893+ 9182 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9183
 895+ 9183 C1               pop bc
 896+ 9184 10 EB            djnz 20B
 897+ 9186
 898+ 9186
 899+ 9186              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9186              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9186
 902+ 9186 E1           15 pop hl
 903+ 9187 23               inc hl
 904+ 9188 35               dec (hl)
 905+ 9189 2B               dec hl
 906+ 918A 18 0C            jr 10F
 907+ 918C
 908+ 918C              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 918C              ; _ almacén de coordenadas_X de Amadeus.
 910+ 918C
 911+ 918C E5           14 push hl
 912+ 918D CD 35 92         call Elimina_disparo_de_base_de_datos
 913+ 9190 21 40 89         ld hl,Impacto2
 914+ 9193 CB CE            set 1,(hl)
 915+ 9195 E1               pop hl
 916+ 9196 18 06            jr 12F
 917+ 9198
 918+ 9198              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9198
 920+ 9198 CD DF 91     10 call Mueve_disparo
 921+ 919B CD B6 91         call foto_disparo_a_borrar
 922+ 919E C1           12 pop bc
 923+ 919F
 924+ 919F 18 04            jr 8F
 925+ 91A1
 926+ 91A1              ; ----- ----- ----- ----- ----- -----
 927+ 91A1
 928+ 91A1 ED 42        4 sbc hl,bc
 929+ 91A3 28 0A            jr z,6F
 930+ 91A5
 931+ 91A5 2A 3C 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91A8 23               inc hl
 933+ 91A9 23               inc hl
 934+ 91AA 22 3C 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91AD 18 8A            jr 5B
 936+ 91AF
 937+ 91AF CD 16 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91B2 CD 7C 92         call Limpia_Coordenadas_X
 939+ 91B5 C9               ret
 940+ 91B6
 941+ 91B6              ; ------------------------------------------------------------------
 942+ 91B6
 943+ 91B6              foto_disparo_a_borrar
 944+ 91B6
 945+ 91B6 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91B7 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91B8 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91B9
 949+ 91B9 E5               push hl
 950+ 91BA 23               inc hl
 951+ 91BB 23               inc hl
 952+ 91BC ED 73 13 89      ld (Stack),sp
 953+ 91C0 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91C1 FD E1            pop iy
 955+ 91C3 DD E1            pop ix
 956+ 91C5 E1               pop hl
 957+ 91C6 ED 7B 13 89      ld sp,(Stack)
 958+ 91CA 3A 02 89         ld a,(Ctrl_1)
 959+ 91CD CB C7            set 0,a
 960+ 91CF 32 02 89         ld (Ctrl_1),a
 961+ 91D2 CD A0 7F         call Guarda_foto_registros
 962+ 91D5 3A 02 89         ld a,(Ctrl_1)
 963+ 91D8 CB 87            res 0,a
 964+ 91DA 32 02 89         ld (Ctrl_1),a
 965+ 91DD E1               pop hl
 966+ 91DE C9               ret
 967+ 91DF
 968+ 91DF              ;---------------------------------------------------
 969+ 91DF              ;
 970+ 91DF              ;   18/07/23
 971+ 91DF              ;
 972+ 91DF
 973+ 91DF              Mueve_disparo
 974+ 91DF
 975+ 91DF              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91DF              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91DF              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91DF
 979+ 91DF E5               push hl
 980+ 91E0
 981+ 91E0 7E               ld a,(hl)
 982+ 91E1
 983+ 91E1 06 04            ld b,4
 984+ 91E3 23           1 inc hl
 985+ 91E4 10 FD            djnz 1B
 986+ 91E6
 987+ 91E6              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91E6
 989+ 91E6 CD 9C 8C         call Extrae_address
 990+ 91E9
 991+ 91E9 E6 01            and 1
 992+ 91EB 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91ED
 994+ 91ED              ; Disparo hacia arriba, (Amadeus).
 995+ 91ED
 996+ 91ED              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91ED              ; _ de la dificultad.
 998+ 91ED
 999+ 91ED CD 6D 96         call PreviousScan
1000+ 91F0 CD 6D 96         call PreviousScan
1001+ 91F3 CD 6D 96         call PreviousScan
1002+ 91F6 CD 6D 96         call PreviousScan
1003+ 91F9
1004+ 91F9              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91F9
1006+ 91F9 7C               ld a,h
1007+ 91FA FE 40            cp $40
1008+ 91FC 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91FE
1010+ 91FE              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91FE
1012+ 91FE EB               ex de,hl
1013+ 91FF 06 04            ld b,4
1014+ 9201 2B           6 dec hl
1015+ 9202 10 FD            djnz 6B
1016+ 9204
1017+ 9204 CD 35 92         call Elimina_disparo_de_base_de_datos
1018+ 9207 E1               pop hl
1019+ 9208 18 10            jr 7F
1020+ 920A
1021+ 920A              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 920A              ; HL contiene el puntero de impresión del disparo.
1023+ 920A              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 920A
1025+ 920A D5           3 push de
1026+ 920B C5               push bc
1027+ 920C
1028+ 920C CD D4 8F         call Comprueba_Colision
1029+ 920F
1030+ 920F              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 920F
1032+ 920F 78               ld a,b
1033+ 9210
1034+ 9210 C1               pop bc
1035+ 9211 D1               pop de
1036+ 9212
1037+ 9212 EB               ex de,hl
1038+ 9213
1039+ 9213 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9214 23               inc hl                                      ; _ movimiento.
1041+ 9215 72               ld (hl),d
1042+ 9216
1043+ 9216 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9217
1045+ 9217 23               inc hl                                      ; _ en curso.
1046+ 9218 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9219 2B               dec hl
1048+ 921A
1049+ 921A C9           7 ret
1050+ 921B
1051+ 921B              ; Disparo hacia abajo, (Entidad).
1052+ 921B
1053+ 921B 3A 4D 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 921E 47               ld b,a
1055+ 921F
1056+ 921F CD 5E 96     4 call NextScan
1057+ 9222 10 FB            djnz 4B
1058+ 9224
1059+ 9224              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9224
1061+ 9224 7C               ld a,h
1062+ 9225 FE 58            cp $58
1063+ 9227 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9229
1065+ 9229 EB               ex de,hl
1066+ 922A 06 04            ld b,4
1067+ 922C 2B           5 dec hl
1068+ 922D 10 FD            djnz 5B
1069+ 922F
1070+ 922F CD 35 92         call Elimina_disparo_de_base_de_datos
1071+ 9232 E1               pop hl
1072+ 9233 18 E5            jr 7B
1073+ 9235
1074+ 9235              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9235
1076+ 9235 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9238 AF               xor a
1078+ 9239 77               ld (hl),a
1079+ 923A 54               ld d,h
1080+ 923B 5D               ld e,l
1081+ 923C 13               inc de
1082+ 923D ED B0            ldir
1083+ 923F C9               ret
1084+ 9240
1085+ 9240              ; -----------------------------------------------------------------
1086+ 9240              ;
1087+ 9240              ;   19/7/23
1088+ 9240              ;
1089+ 9240              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9240              ;
1091+ 9240              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9240              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9240              ;
1094+ 9240              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9240              ;
1096+ 9240              ;   INPUTS:
1097+ 9240              ;
1098+ 9240              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9240              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9240
1101+ 9240              ;   MODIFICA: A, HL, BC y DE.
1102+ 9240
1103+ 9240              Guarda_coordenadas_X
1104+ 9240
1105+ 9240 7B               ld a,e
1106+ 9241 A7               and a
1107+ 9242 20 04            jr nz,1F
1108+ 9244
1109+ 9244 06 02            ld b,2
1110+ 9246 18 02            jr 2F
1111+ 9248
1112+ 9248 06 03        1 ld b,3
1113+ 924A 72           2 ld (hl),d
1114+ 924B 23               inc hl
1115+ 924C 14               inc d
1116+ 924D 10 FB            djnz 2B
1117+ 924F
1118+ 924F C9               ret
1119+ 9250
1120+ 9250              ; -----------------------------------------------------------------
1121+ 9250              ;
1122+ 9250              ;   12/04/23
1123+ 9250              ;
1124+ 9250
1125+ 9250 3A 40 89     Selector_de_impactos ld a,(Impacto2)
1126+ 9253 A7               and a
1127+ 9254 C8               ret z
1128+ 9255
1129+ 9255 FE 04            cp 4
1130+ 9257 20 09            jr nz,1F
1131+ 9259
1132+ 9259
1133+ 9259              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9259
1135+ 9259 CD 75 90         call Detecta_colision_nave_entidad
1136+ 925C
1137+ 925C 21 40 89         ld hl,Impacto2
1138+ 925F CB 5E            bit 3,(hl)
1139+ 9261 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9262
1141+ 9262              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9262              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9262
1144+ 9262 21 40 89     1 ld hl,Impacto2
1145+ 9265 CB 4E            bit 1,(hl)
1146+ 9267 28 07            jr z,2F
1147+ 9269
1148+ 9269 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 926C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 926E 18 0B            jr 3F
1151+ 9270
1152+ 9270 21 40 89     2 ld hl,Impacto2
1153+ 9273 CB 46            bit 0,(hl)
1154+ 9275 C8               ret z
1155+ 9276
1156+ 9276              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9276
1158+ 9276 21 02 89         ld hl,Ctrl_1
1159+ 9279 CB D6            set 2,(hl)
1160+ 927B
1161+ 927B C9           3 ret
1162+ 927C
1163+ 927C              ; -----------------------------------------------------------------
1164+ 927C              ;
1165+ 927C              ;   19/7/23
1166+ 927C              ;
1167+ 927C              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 927C
1169+ 927C AF           Limpia_Coordenadas_X xor a
1170+ 927D 06 06            ld b,6
1171+ 927F 21 45 89         ld hl,Coordenadas_X_Amadeus
1172+ 9282 77           1 ld (hl),a
1173+ 9283 23               inc hl
1174+ 9284 10 FC            djnz 1B
1175+ 9286 C9               ret
1176+ 9287
1177+ 9287              ; -----------------------------------------------------------------
1178+ 9287              ;
1179+ 9287              ;   25/04/23
1180+ 9287              ;
1181+ 9287
1182+ 9287              Determina_resultado_comparativa
1183+ 9287
1184+ 9287              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9287              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9287              ;
1187+ 9287              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9287              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9287              ;
1190+ 9287              ;   SBC HL,DE
1191+ 9287
1192+ 9287              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9287              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9287
1195+ 9287              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9287              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9287
1198+ 9287
1199+ 9287 3A D9 88         ld a,(Cuad_objeto)
1200+ 928A FE 02            cp 2
1201+ 928C 28 26            jr z,2F
1202+ 928E 38 24            jr c,2F
1203+ 9290
1204+ 9290              ; Cuadrantes 3º y 4º
1205+ 9290
1206+ 9290 E6 01            and 1
1207+ 9292 28 10            jr z,4F
1208+ 9294
1209+ 9294              ; Cuadrante 3º
1210+ 9294
1211+ 9294 7C               ld a,h
1212+ 9295 06 00            ld b,0
1213+ 9297
1214+ 9297 CD 22 93         call Compara_cositas_H3
1215+ 929A
1216+ 929A 04               inc b
1217+ 929B 05               dec b
1218+ 929C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 929D
1220+ 929D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 929E 06 00            ld b,0
1222+ 92A0
1223+ 92A0 CD 34 93         call Compara_cositas_L3
1224+ 92A3 C9               ret
1225+ 92A4
1226+ 92A4              ; Cuadrante 4º
1227+ 92A4
1228+ 92A4 7C           4 ld a,h
1229+ 92A5 06 00            ld b,0
1230+ 92A7
1231+ 92A7 CD 46 93         call Compara_cositas_H4
1232+ 92AA
1233+ 92AA 04               inc b
1234+ 92AB 05               dec b
1235+ 92AC C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92AD
1237+ 92AD 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92AE 06 00            ld b,0
1239+ 92B0
1240+ 92B0 CD 5C 93         call Compara_cositas_L4
1241+ 92B3 C9               ret
1242+ 92B4
1243+ 92B4              ; Cuadrantes 1º y 2º.
1244+ 92B4
1245+ 92B4 28 10        2 jr z,3F
1246+ 92B6
1247+ 92B6              ; 1er Cuadrante
1248+ 92B6
1249+ 92B6 7C               ld a,h
1250+ 92B7 06 00            ld b,0
1251+ 92B9
1252+ 92B9 CD FA 92         call Compara_cositas_H1
1253+ 92BC
1254+ 92BC 04               inc b
1255+ 92BD 05               dec b
1256+ 92BE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92BF
1258+ 92BF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92C0 06 00            ld b,0
1260+ 92C2
1261+ 92C2 CD 10 93         call Compara_cositas_L1
1262+ 92C5 C9               ret
1263+ 92C6
1264+ 92C6
1265+ 92C6              ; 2º Cuadrante
1266+ 92C6
1267+ 92C6 7C           3 ld a,h
1268+ 92C7 06 00            ld b,0
1269+ 92C9
1270+ 92C9 CD D6 92         call Compara_cositas_H2
1271+ 92CC
1272+ 92CC 04               inc b
1273+ 92CD 05               dec b
1274+ 92CE C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92CF
1276+ 92CF 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92D0 06 00            ld b,0
1278+ 92D2
1279+ 92D2 CD E8 92         call Compara_cositas_L2
1280+ 92D5 C9               ret
1281+ 92D6
1282+ 92D6 A7           Compara_cositas_H2 and a
1283+ 92D7 28 0D            jr z,1F
1284+ 92D9              ;    cp $fd
1285+ 92D9              ;    jr z,1F
1286+ 92D9              ;    cp $fe
1287+ 92D9              ;    jr z,1F
1288+ 92D9 FE FF            cp $ff
1289+ 92DB 28 09            jr z,1F
1290+ 92DD FE 01            cp $01
1291+ 92DF 28 05            jr z,1F
1292+ 92E1 FE 02            cp $02
1293+ 92E3 28 01            jr z,1F
1294+ 92E5 C0               ret nz
1295+ 92E6 04           1 inc b
1296+ 92E7 C9               ret
1297+ 92E8
1298+ 92E8 A7           Compara_cositas_L2 and a
1299+ 92E9 28 0D            jr z,1F
1300+ 92EB              ;    cp $fd
1301+ 92EB              ;    jr z,1F
1302+ 92EB FE FE            cp $fe
1303+ 92ED 28 09            jr z,1F
1304+ 92EF FE FF            cp $ff
1305+ 92F1 28 05            jr z,1F
1306+ 92F3 FE 01            cp $01
1307+ 92F5 28 01            jr z,1F
1308+ 92F7              ;    cp $02
1309+ 92F7              ;    jr z,1F
1310+ 92F7 C0               ret nz
1311+ 92F8 04           1 inc b
1312+ 92F9 C9               ret
1313+ 92FA
1314+ 92FA A7           Compara_cositas_H1 and a
1315+ 92FB 28 11            jr z,1F
1316+ 92FD              ;    cp $fd
1317+ 92FD              ;    jr z,1F
1318+ 92FD              ;    cp $fe
1319+ 92FD              ;    jr z,1F
1320+ 92FD FE FF            cp $ff
1321+ 92FF 28 0D            jr z,1F
1322+ 9301 FE 01            cp $01
1323+ 9303 28 09            jr z,1F
1324+ 9305 FE 02            cp $02
1325+ 9307 28 05            jr z,1F
1326+ 9309 FE 03            cp $03
1327+ 930B 28 01            jr z,1F
1328+ 930D C0               ret nz
1329+ 930E 04           1 inc b
1330+ 930F C9               ret
1331+ 9310
1332+ 9310 A7           Compara_cositas_L1 and a
1333+ 9311 28 0D            jr z,1F
1334+ 9313              ;    cp $fd
1335+ 9313              ;    jr z,1F
1336+ 9313              ;    cp $fe
1337+ 9313              ;    jr z,1F
1338+ 9313              ;    cp $ff
1339+ 9313              ;    jr z,1F
1340+ 9313 FE 01            cp $01
1341+ 9315 28 09            jr z,1F
1342+ 9317 FE 02            cp $02
1343+ 9319 28 05            jr z,1F
1344+ 931B FE 03            cp $03
1345+ 931D 28 01            jr z,1F
1346+ 931F C0               ret nz
1347+ 9320 04           1 inc b
1348+ 9321 C9               ret
1349+ 9322
1350+ 9322 A7           Compara_cositas_H3 and a
1351+ 9323 28 0D            jr z,1F
1352+ 9325              ;    cp $fd
1353+ 9325              ;    jr z,1F
1354+ 9325 FE FE            cp $fe
1355+ 9327 28 09            jr z,1F
1356+ 9329 FE FF            cp $ff
1357+ 932B 28 05            jr z,1F
1358+ 932D FE 01            cp $01
1359+ 932F 28 01            jr z,1F
1360+ 9331              ;    cp $02
1361+ 9331              ;    jr z,1F
1362+ 9331              ;    cp $03
1363+ 9331              ;    jr z,1F
1364+ 9331 C0               ret nz
1365+ 9332 04           1 inc b
1366+ 9333 C9               ret
1367+ 9334
1368+ 9334 A7           Compara_cositas_L3 and a
1369+ 9335 28 0D            jr z,1F
1370+ 9337              ;    cp $fd
1371+ 9337              ;    jr z,1F
1372+ 9337              ;    cp $fe
1373+ 9337              ;    jr z,1F
1374+ 9337              ;    cp $ff
1375+ 9337              ;    jr z,1F
1376+ 9337 FE 01            cp $01
1377+ 9339 28 09            jr z,1F
1378+ 933B FE 02            cp $02
1379+ 933D 28 05            jr z,1F
1380+ 933F FE 03            cp $03
1381+ 9341 28 01            jr z,1F
1382+ 9343 C0               ret nz
1383+ 9344 04           1 inc b
1384+ 9345 C9               ret
1385+ 9346
1386+ 9346 A7           Compara_cositas_H4 and a
1387+ 9347 28 11            jr z,1F
1388+ 9349 FE FD            cp $fd
1389+ 934B 28 0D            jr z,1F
1390+ 934D FE FE            cp $fe
1391+ 934F 28 09            jr z,1F
1392+ 9351 FE FF            cp $ff
1393+ 9353 28 05            jr z,1F
1394+ 9355 FE 01            cp $01
1395+ 9357 28 01            jr z,1F
1396+ 9359              ;    cp $02
1397+ 9359              ;    jr z,1F
1398+ 9359              ;    cp $03
1399+ 9359              ;    jr z,1F
1400+ 9359 C0               ret nz
1401+ 935A 04           1 inc b
1402+ 935B C9               ret
1403+ 935C
1404+ 935C A7           Compara_cositas_L4 and a
1405+ 935D 28 0D            jr z,1F
1406+ 935F              ;    cp $fd
1407+ 935F              ;    jr z,1F
1408+ 935F FE FE            cp $fe
1409+ 9361 28 09            jr z,1F
1410+ 9363 FE FF            cp $ff
1411+ 9365 28 05            jr z,1F
1412+ 9367 FE 01            cp $01
1413+ 9369 28 01            jr z,1F
1414+ 936B              ;    cp $02
1415+ 936B              ;    jr z,1F
1416+ 936B              ;    cp $03
1417+ 936B              ;    jr z,1F
1418+ 936B C0               ret nz
1419+ 936C 04           1 inc b
1420+ 936D C9               ret
# file closed: Disparo.asm
1624  936E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 936E              ; ******************************************************************************************************************************************************************************************
   2+ 936E              ;
   3+ 936E              ; 26/06/23
   4+ 936E              ;
   5+ 936E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 936E
   7+ 936E CD 52 96     Draw call Prepara_draw
   8+ 9371 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9372 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9373 28 05        	jr z,2F
  11+ 9375
  12+ 9375 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9378 18 0C        	jr 1F
  14+ 937A
  15+ 937A 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 937D 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9380 CD 0F 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9383              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9383 CD B4 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9386
  21+ 9386 3A EF 88     1 ld a,(Ctrl_0)
  22+ 9389 CB 6F        	bit 5,a
  23+ 938B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 938D
  25+ 938D CD A5 93     	call Comprueba_limite_horizontal
  26+ 9390 CD 35 94     	call Comprueba_limite_vertical
  27+ 9393
  28+ 9393              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9393              ; -----------------------
  30+ 9393              ; -----------------------
  31+ 9393              ; -----------------------
  32+ 9393
  33+ 9393 CD 82 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9396 CD B9 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9399 CD 18 96     	call Define_rutina_de_impresion
  36+ 939C
  37+ 939C 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 939F CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93A1 32 EF 88     	ld (Ctrl_0),a
  40+ 93A4
  41+ 93A4 C9           	ret
  42+ 93A5
  43+ 93A5              ; *******************************************************************************************************************************************************************************************
  44+ 93A5              ;	21/01/23
  45+ 93A5              ;
  46+ 93A5              ; 	Comprueba_limite_horizontal.
  47+ 93A5              ;
  48+ 93A5              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93A5              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93A5              ;
  51+ 93A5              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93A5              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93A5              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93A5              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93A5
  56+ 93A5
  57+ 93A5
  58+ 93A5 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93A8 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93AA 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93AC E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93AE 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93B1 18 09            jr 6F
  64+ 93B3 CB 5F        1 bit 3,a
  65+ 93B5 28 0A            jr z,2F
  66+ 93B7 E6 F7            and $f7
  67+ 93B9 32 EF 88         ld (Ctrl_0),a
  68+ 93BC CD 0F 95     6 call Inicializacion
  69+ 93BF 18 5B            jr 5F
  70+ 93C1 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93C2
  72+ 93C2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93C2              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93C2
  75+ 93C2 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93C3 2A FD 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93C6 CD 71 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93C9 67           	ld h,a
  79+ 93CA EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93CB CD 71 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93CE 67           	ld h,a
  82+ 93CF A7           	and a
  83+ 93D0 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93D2 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93D3 3A D9 88     	ld a,(Cuad_objeto)
  86+ 93D6 FE 02        	cp 2
  87+ 93D8 38 1E        	jr c,3F
  88+ 93DA 28 1C        	jr z,3F
  89+ 93DC 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93DD 28 23            jr z,7F
  91+ 93DF 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93E1 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93E3 E1           	pop hl
  94+ 93E4
  95+ 93E4              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93E4              ; _para indicar con E="2" en caso necesario.
  97+ 93E4
  98+ 93E4 E5               push hl
  99+ 93E5 C5               push bc
 100+ 93E6 CD 71 99     	call calcula_tercio
 101+ 93E9 FE 01        	cp 1
 102+ 93EB 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93ED CD 1D 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93F0 28 26            jr z,9F
 105+ 93F2 38 24            jr c,9F
 106+ 93F4 1E 00        11 ld e,0
 107+ 93F6 18 22            jr 8F
 108+ 93F8 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93F9 28 07        	jr z, 7F
 110+ 93FB 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93FD 1E 00         	ld e,0
 112+ 93FF E1           	pop hl
 113+ 9400 18 04        	jr 4F
 114+ 9402 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9404 18 15            jr 10F
 116+ 9406
 117+ 9406              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9406              ; _para indicar con E="2" en caso necesario.
 119+ 9406
 120+ 9406 E5           4 push hl
 121+ 9407 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9408 CD 71 99     	call calcula_tercio
 123+ 940B FE 01        	cp 1
 124+ 940D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 940F CD 1D 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9412 28 04            jr z,9F
 127+ 9414 30 02            jr nc,9F
 128+ 9416 18 02        	jr 8F
 129+ 9418 1E 02        9 ld e,2
 130+ 941A C1           8 pop bc
 131+ 941B E1           10 pop hl
 132+ 941C C9           5 ret
 133+ 941D
 134+ 941D              ; --------------------
 135+ 941D              ;
 136+ 941D              ; 25/08/22
 137+ 941D
 138+ 941D CD 71 99     Comprueba_centro call calcula_tercio
 139+ 9420 67               ld h,a
 140+ 9421 08           	ex af,af
 141+ 9422 FE 02        	cp 2
 142+ 9424 38 07        	jr c,1F
 143+ 9426 28 05        	jr z,1F
 144+ 9428 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 942B 18 03        	jr 2F
 146+ 942D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9430 08           2 ex af,af
 148+ 9431 A7               and a
 149+ 9432 ED 42            sbc hl,bc
 150+ 9434 C9               ret
 151+ 9435
 152+ 9435              ; *********************************************************************************************************************************************************************************************
 153+ 9435              ;
 154+ 9435              ;   16/8/22
 155+ 9435              ;
 156+ 9435              ;	Comprueba_limite_vertical
 157+ 9435              ;
 158+ 9435              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9435              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9435              ;
 161+ 9435
 162+ 9435 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9438 7D           	ld a,l
 164+ 9439 E6 1F        	and $1F
 165+ 943B 57           	ld d,a
 166+ 943C 3A FF 88     	ld a,(Limite_vertical)
 167+ 943F BA           	cp d 											; Límite - Posición.
 168+ 9440 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9441 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9444 CB 47        	bit 0,a
 171+ 9446 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9448
 173+ 9448              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9448
 175+ 9448 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9449 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 944B
 178+ 944B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 944B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 944B
 181+ 944B 3A CB 88         ld a,(Coordenada_X)
 182+ 944E 16 0F            ld d,Centro_izquierda
 183+ 9450 A7               and a
 184+ 9451 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9452 28 1E            jr z,3F
 186+ 9454 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9456              ;                                                    ; _salimos sin modificar nada.
 188+ 9456 18 0E            jr 2F
 189+ 9458 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9459 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 945B
 192+ 945B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 945B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 945B
 195+ 945B 3A CB 88         ld a,(Coordenada_X)
 196+ 945E 16 10            ld d,Centro_derecha
 197+ 9460 A7               and a
 198+ 9461 92               sub d
 199+ 9462 28 0E            jr z,3F
 200+ 9464 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9466              ;                                                    ; _salimos sin modificar nada.
 202+ 9466 CB 43        2 bit 0,e
 203+ 9468 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 946A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 946B CD FF 94         call Modificaccionne
 206+ 946E C1           	pop bc
 207+ 946F CD 0F 95         call Inicializacion
 208+ 9472 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9473
 210+ 9473              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9473
 212+ 9473 C5           4 push bc
 213+ 9474 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9477 0A           	ld a,(bc)
 215+ 9478 3D           	dec a
 216+ 9479 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 947A 7D           	ld a,l
 218+ 947B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 947C CB 47        	bit 0,a
 220+ 947E 28 03        	jr z,5F
 221+ 9480 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9481 18 2E        	jr 7F
 223+ 9483
 224+ 9483              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9483
 226+ 9483 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9484 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9485 3A EF 88     	ld a,(Ctrl_0)
 229+ 9488 CB 4F        	bit 1,a
 230+ 948A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 948C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 948D
 233+ 948D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 948D
 235+ 948D 1C               inc e
 236+ 948E 1D               dec e
 237+ 948F 20 07            jr nz,12F
 238+ 9491 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9492 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9493 22 C7 88     	ld (Posicion_actual),hl
 241+ 9496 18 44        13 jr 9F
 242+ 9498 CB 43        12 bit 0,e
 243+ 949A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 949C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 949C C1           	pop bc
 246+ 949D 18 D3        	jr 3B
 247+ 949F 80           14 add b
 248+ 94A0 6F               ld l,a
 249+ 94A1 22 C7 88     	ld (Posicion_actual),hl
 250+ 94A4 CD FF 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94A7 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94A9 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94AB 32 EF 88         ld (Ctrl_0),a
 254+ 94AE F1           	pop af
 255+ 94AF 18 2B        	jr 9F
 256+ 94B1
 257+ 94B1              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94B1
 259+ 94B1 F5           7 push af
 260+ 94B2 3A EF 88     	ld a,(Ctrl_0)
 261+ 94B5 CB 47        	bit 0,a
 262+ 94B7 20 1D        	jr nz,8F
 263+ 94B9 F1           	pop af
 264+ 94BA
 265+ 94BA              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94BA
 267+ 94BA 1C           	inc e
 268+ 94BB 1D               dec e
 269+ 94BC 20 07            jr nz,10F
 270+ 94BE 90           	sub b
 271+ 94BF 6F               ld l,a
 272+ 94C0 22 C7 88     	ld (Posicion_actual),hl
 273+ 94C3 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94C5              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94C5 CB 43        10 bit 0,e
 276+ 94C7 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94C9              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94C9 C1           	pop bc
 279+ 94CA 18 A6        	jr 3B
 280+ 94CC 90           16 sub b
 281+ 94CD 6F               ld l,a
 282+ 94CE 22 C7 88     	ld (Posicion_actual),hl
 283+ 94D1 CD FF 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94D4 18 06            jr 9F
 285+ 94D6 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94D8 32 EF 88         ld (Ctrl_0),a
 287+ 94DB F1           	pop af
 288+ 94DC C1           9 pop bc
 289+ 94DD 1E 00        	ld e,0
 290+ 94DF CD 0F 95         call Inicializacion
 291+ 94E2 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94E3 08           	ex af,af
 293+ 94E4 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94E5 18 8B            jr 3B
 295+ 94E7
 296+ 94E7              ; --------------------
 297+ 94E7
 298+ 94E7 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94E9 CD 6D 96     1 call PreviousScan
 300+ 94EC 10 FB            djnz 1B
 301+ 94EE 22 C7 88     	ld (Posicion_actual),hl
 302+ 94F1 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94F2 C9           	ret
 304+ 94F3
 305+ 94F3              ; --------------------
 306+ 94F3
 307+ 94F3 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94F5 CD 5E 96     1 call NextScan
 309+ 94F8 10 FB            djnz 1B
 310+ 94FA 22 C7 88     	ld (Posicion_actual),hl
 311+ 94FD AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94FE C9           	ret
 313+ 94FF
 314+ 94FF              ; --------------------
 315+ 94FF              ;
 316+ 94FF              ;	22/01/23
 317+ 94FF              ;
 318+ 94FF              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94FF              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94FF              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94FF
 322+ 94FF
 323+ 94FF              Modificaccionne
 324+ 94FF
 325+ 94FF 3A D9 88     	ld a,(Cuad_objeto)
 326+ 9502 FE 02        	cp 2
 327+ 9504 CC E7 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9507 DC E7 94         call c,Modifica_Pos_actual
 329+ 950A C8           	ret z
 330+ 950B CD F3 94         call Modifica_Pos_actual2
 331+ 950E C9               ret
 332+ 950F
 333+ 950F              ; *************************************************************************************************************************************************************************************************
 334+ 950F              ;
 335+ 950F              ;	13/8/22
 336+ 950F              ;
 337+ 950F              ;	Inicializacion
 338+ 950F              ;
 339+ 950F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 950F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 950F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 950F              ;
 343+ 950F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 950F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 950F              ;	_ desaparece/aparece.
 346+ 950F
 347+ 950F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 950F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 950F              ;
 350+ 950F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 950F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 950F              ; 		   [E] ="0"
 353+ 950F
 354+ 950F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 950F
 356+ 950F CD 71 99     Inicializacion call calcula_tercio
 357+ 9512 28 36        	jr z,primit
 358+ 9514 E6 02        	and 2
 359+ 9516 20 07        	jr nz,segmit
 360+ 9518 7D           	ld a,l
 361+ 9519 FE 7F        	cp $7f
 362+ 951B 38 2D        	jr c,primit
 363+ 951D 28 2B        	jr z,primit
 364+ 951F CD 7C 95     segmit call column
 365+ 9522 38 13        	jr c,tercuad
 366+ 9524 3E 04        cuarcuad ld a,4
 367+ 9526 32 D9 88     	ld (Cuad_objeto),a
 368+ 9529 21 20 48     	ld hl,$4820
 369+ 952C 22 FD 88     	ld (Limite_horizontal),hl
 370+ 952F 21 FF 88     	ld hl,Limite_vertical
 371+ 9532 36 0D        	ld (hl),$0d
 372+ 9534 08           	ex af,af
 373+ 9535 18 3C        	jr 1F
 374+ 9537              tercuad
 375+ 9537 3E 03        	ld a,3
 376+ 9539 32 D9 88     	ld (Cuad_objeto),a
 377+ 953C 21 20 48     	ld hl,$4820
 378+ 953F 22 FD 88     	ld (Limite_horizontal),hl
 379+ 9542 21 FF 88     	ld hl,Limite_vertical
 380+ 9545 36 12        	ld (hl),$12
 381+ 9547 08           	ex af,af
 382+ 9548 18 29        	jr 1F
 383+ 954A CD 7C 95     primit call column
 384+ 954D 38 13        	jr c, primcuad
 385+ 954F              segcuad
 386+ 954F 3E 02        	ld a,2
 387+ 9551 32 D9 88     	ld (Cuad_objeto),a
 388+ 9554 21 C0 4F     	ld hl,$4fc0
 389+ 9557 22 FD 88     	ld (Limite_horizontal),hl
 390+ 955A 21 FF 88     	ld hl,Limite_vertical
 391+ 955D 36 0D        	ld (hl),$0d
 392+ 955F 08           	ex af,af
 393+ 9560 18 11        	jr 1F
 394+ 9562              primcuad
 395+ 9562 3E 01        	ld a,1
 396+ 9564 32 D9 88     	ld (Cuad_objeto),a
 397+ 9567 21 C0 4F     	ld hl,$4fc0
 398+ 956A 22 FD 88     	ld (Limite_horizontal),hl
 399+ 956D 21 FF 88     	ld hl,Limite_vertical
 400+ 9570 36 12        	ld (hl),$12
 401+ 9572 08           	ex af,af
 402+ 9573 CD FC 9C     1 call Genera_coordenadas
 403+ 9576 21 EF 88     	ld hl,Ctrl_0
 404+ 9579 CB EE        	set 5,(hl)
 405+ 957B C9           	ret
 406+ 957C
 407+ 957C              ; ------------------------------------------------------------------------------------------------------------------
 408+ 957C
 409+ 957C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 957C              ;
 411+ 957C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 957C
 413+ 957C 7D           column ld a,l
 414+ 957D E6 1F        	and $1f
 415+ 957F FE 10         	cp $10
 416+ 9581 C9            	ret
 417+ 9582
 418+ 9582              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9582              ;
 420+ 9582              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9582              ;
 422+ 9582              ; 14/12/22
 423+ 9582              ;
 424+ 9582              ;	Modifica: A y BC.
 425+ 9582
 426+ 9582 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9585 E6 01        	and 1
 428+ 9587 28 17        	jr z,1F
 429+ 9589
 430+ 9589              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9589
 432+ 9589 3A CB 88     	ld a,(Coordenada_X)
 433+ 958C 47           	ld b,a
 434+ 958D 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 958E 79           	ld a,c
 436+ 958F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9590 38 08        	jr c,2F
 438+ 9592 47           	ld b,a
 439+ 9593 79           	ld a,c
 440+ 9594 90           	sub b
 441+ 9595 32 FC 88     	ld (Columnas),a
 442+ 9598 18 1B        	jr 4F
 443+ 959A 79           2 ld a,c
 444+ 959B 32 FC 88     	ld (Columnas),a
 445+ 959E 18 15        	jr 4F
 446+ 95A0
 447+ 95A0              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95A0
 449+ 95A0 3A CB 88     1 ld a,(Coordenada_X)
 450+ 95A3 81           	add c
 451+ 95A4 3D           	dec a
 452+ 95A5 D6 1F        	sub $1f
 453+ 95A7 38 08        	jr c,3F
 454+ 95A9 47           	ld b,a
 455+ 95AA 79           	ld a,c
 456+ 95AB 90           	sub b
 457+ 95AC 32 FC 88     	ld (Columnas),a
 458+ 95AF 18 04        	jr 4F
 459+ 95B1 79           3 ld a,c
 460+ 95B2 32 FC 88     	ld (Columnas),a
 461+ 95B5 D9           4 exx
 462+ 95B6 4F           	ld c,a
 463+ 95B7 D9           	exx
 464+ 95B8 C9            ret
 465+ 95B9
 466+ 95B9              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95B9              ;
 468+ 95B9              ;   19/7/23
 469+ 95B9              ;
 470+ 95B9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95B9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95B9              ;
 473+ 95B9              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95B9              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95B9              ;
 476+ 95B9              ;	DESTRUYE: HL,B Y A.
 477+ 95B9
 478+ 95B9 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95BC FE 02        	cp 2
 480+ 95BE 38 18        	jr c,1F
 481+ 95C0 28 16        	jr z,1F
 482+ 95C2 E6 01        	and 1
 483+ 95C4 28 0D        	jr z,3F
 484+ 95C6
 485+ 95C6              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95C6
 487+ 95C6 CD 0C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95C9
 489+ 95C9 7D           9 ld a,l
 490+ 95CA E6 1F        	and $1f
 491+ 95CC 28 2A        	jr z,7F
 492+ 95CE 2B           	dec hl
 493+ 95CF 10 F8        	djnz 9B
 494+ 95D1 18 25        	jr 7F
 495+ 95D3
 496+ 95D3              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95D3
 498+ 95D3 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 95D6 18 20        	jr 7F
 500+ 95D8
 501+ 95D8 28 14        1 jr z,2F
 502+ 95DA
 503+ 95DA              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95DA
 505+ 95DA CD 0C 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95DD
 507+ 95DD 7D           4 ld a,l
 508+ 95DE E6 1F        	and $1f
 509+ 95E0 28 03        	jr z,6F
 510+ 95E2 2B           	dec hl
 511+ 95E3 10 F8        	djnz 4B
 512+ 95E5 06 0F        6 ld b,15
 513+ 95E7 CD 6D 96     5 call PreviousScan
 514+ 95EA 10 FB        	djnz 5B
 515+ 95EC 18 0A        	jr 7F
 516+ 95EE
 517+ 95EE              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95EE
 519+ 95EE CD 0C 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95F1 06 0F        	ld b,15
 521+ 95F3 CD 6D 96     8 call PreviousScan
 522+ 95F6 10 FB        	djnz 8B
 523+ 95F8
 524+ 95F8 E5           7 push hl
 525+ 95F9 DD E1        	pop ix
 526+ 95FB
 527+ 95FB 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 95FE E5           	push hl
 529+ 95FF FD E1        	pop iy
 530+ 9601
 531+ 9601              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9601
 533+ 9601 3A EF 88     	ld a,(Ctrl_0)
 534+ 9604 CB 77        	bit 6,a
 535+ 9606 C8           	ret z
 536+ 9607
 537+ 9607              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9607              ; _ entidad / Amadeus´.
 539+ 9607
 540+ 9607 DD 22 4B 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 960B
 542+ 960B C9           	ret
 543+ 960C
 544+ 960C              ; --------------------------------------------------------------------------------------------------------------------
 545+ 960C              ;
 546+ 960C              ;	2/1/23
 547+ 960C              ;
 548+ 960C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 960C              ;
 550+ 960C              ;	Tras esta rutina tenemos:
 551+ 960C              ;
 552+ 960C              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 960C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 960C              ;
 555+ 960C              ;	DESTRUYE!!!!! HL,B y A.
 556+ 960C
 557+ 960C 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 960F 3A FC 88     	ld a,(Columnas)
 559+ 9612 3D           	dec a
 560+ 9613 20 01        	jr nz,1F
 561+ 9615 3C           	inc a
 562+ 9616 47           1 ld b,a
 563+ 9617 C9           	ret
 564+ 9618
 565+ 9618              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9618              ;
 567+ 9618              ;	3/1/23
 568+ 9618              ;
 569+ 9618              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9618              ;
 571+ 9618              ;	Destruye: A,B,HL y DE.
 572+ 9618
 573+ 9618              Define_rutina_de_impresion
 574+ 9618
 575+ 9618 3A C6 88     	ld a,(Columns)
 576+ 961B 47           	ld b,a
 577+ 961C 3A FC 88     	ld a,(Columnas)
 578+ 961F B8           	cp b
 579+ 9620 20 0D        	jr nz,2f
 580+ 9622
 581+ 9622              ;	La entidad se imprime entera.
 582+ 9622
 583+ 9622 21 41 97     	ld hl, Indice_entidades_completas
 584+ 9625 E6 01        	and 1
 585+ 9627 28 02        	jr z,1F
 586+ 9629
 587+ 9629 23           	inc hl
 588+ 962A 23           	inc hl
 589+ 962B
 590+ 962B CD 9C 8C     1 call Extrae_address
 591+ 962E C9           	ret		;	ret
 592+ 962F
 593+ 962F              ;	La entidad no se imprime entera en pantalla.
 594+ 962F
 595+ 962F 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 9632 E6 01        	and 1
 597+ 9634 28 17        	jr z,3F
 598+ 9636
 599+ 9636              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9636
 601+ 9636 21 45 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9639 3A C6 88     4 ld a,(Columns)
 603+ 963C E6 01        	and 1
 604+ 963E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9640
 606+ 9640 23           	inc hl
 607+ 9641 23           	inc hl
 608+ 9642
 609+ 9642 3A FC 88     	ld a,(Columnas)
 610+ 9645 E6 01        	and 1
 611+ 9647 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9649
 613+ 9649 23           	inc hl
 614+ 964A 23           	inc hl
 615+ 964B
 616+ 964B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 964D
 618+ 964D 21 4B 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9650 18 E7        	jr 4B
 620+ 9652
 621+ 9652              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9652              ;
 623+ 9652              ;	Prepara_draw
 624+ 9652              ;
 625+ 9652              ;	Es una rutina de carga.
 626+ 9652              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9652              ;
 628+ 9652              ;	FUNCIONAMIENTO:
 629+ 9652              ;
 630+ 9652              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9652              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9652              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9652              ;
 634+ 9652              ;	DESTRUYE:
 635+ 9652              ;
 636+ 9652              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9652
 638+ 9652 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9655 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9656 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9657 4E           	ld c,(hl)
 642+ 9658 2A C7 88     	ld hl,(Posicion_actual)
 643+ 965B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 965D C9           	ret
 645+ 965E
 646+ 965E              ;----------------------------------------------------------------------------------------------------------------
 647+ 965E              ;
 648+ 965E              ;	5/08/22
 649+ 965E              ;
 650+ 965E              ;   NextScan.
 651+ 965E              ;
 652+ 965E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 965E              ;
 654+ 965E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 965E              ;
 656+ 965E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 965E              ;
 658+ 965E              ;       DESTRUIDOS: AF y HL !!!
 659+ 965E              ;
 660+ 965E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 965E              ;
 662+ 965E
 663+ 965E 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 965F 7C               ld a,h
 665+ 9660 E6 07            and 7
 666+ 9662 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9663
 668+ 9663 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9664 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9666 6F               ld l,a
 671+ 9667 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9668
 673+ 9668 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9669 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 966B 67               ld h,a
 676+ 966C C9               ret
 677+ 966D
 678+ 966D              ;----------------------------------------------------------------------------------------------------------------
 679+ 966D              ;
 680+ 966D              ;	5/08/22
 681+ 966D              ;
 682+ 966D              ;   PreviousScan.
 683+ 966D              ;
 684+ 966D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 966D              ;
 686+ 966D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 966D              ;
 688+ 966D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 966D              ;
 690+ 966D              ;       DESTRUIDOS: AF y HL !!!
 691+ 966D              ;
 692+ 966D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 966D              ;
 694+ 966D
 695+ 966D 7C           PreviousScan ld a,h
 696+ 966E 25               dec h               ; Dec H.
 697+ 966F E6 07            and 7
 698+ 9671 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9672
 700+ 9672 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9673 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9675 6F               ld l,a
 703+ 9676 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9677
 705+ 9677 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9678 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 967A 67               ld h,a
 708+ 967B C9               ret
 709+ 967C
 710+ 967C              ; -----------------------------------------------------------------------------------
 711+ 967C              ;
 712+ 967C              ;	31/7/23
 713+ 967C              ;
 714+ 967C              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 967C              ;	Extrae fotos de Album_de_fotos.
 716+ 967C
 717+ 967C              Extrae_foto_entidades
 718+ 967C
 719+ 967C 21 01 70     	ld hl,Album_de_fotos+1
 720+ 967F 7E           	ld a,(hl)
 721+ 9680 A7           	and a
 722+ 9681 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9682
 724+ 9682 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9685 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9686 C8           	ret z
 727+ 9687
 728+ 9687              ; -----------------------------------
 729+ 9687
 730+ 9687 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 968B 31 00 70     	ld sp,Album_de_fotos
 732+ 968E
 733+ 968E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 9690 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 9691 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 9692
 737+ 9692 ED 73 15 89  	ld (Stack_2),sp
 738+ 9696 ED 7B 13 89  	ld sp,(Stack)
 739+ 969A
 740+ 969A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 969A
 742+ 969A 3E CD        	ld a,$cd
 743+ 969C 32 A4 96     	ld (Imprime),a
 744+ 969F EB           	ex de,hl
 745+ 96A0 22 A5 96     	ld (Imprime+1),hl
 746+ 96A3 EB           	ex de,hl
 747+ 96A4
 748+ 96A4              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96A4
 750+ 96A4 00 00 00     Imprime db 0,0,0
 751+ 96A7
 752+ 96A7 ED 73 13 89  	ld (Stack),sp
 753+ 96AB
 754+ 96AB 3A 0E 89     	ld a,(Numero_de_malotes)
 755+ 96AE 3D           	dec a
 756+ 96AF 28 09        	jr z,1F
 757+ 96B1 32 0E 89      	ld (Numero_de_malotes),a
 758+ 96B4
 759+ 96B4 ED 7B 15 89  	ld sp,(Stack_2)
 760+ 96B8 18 D4        	jr 2B
 761+ 96BA
 762+ 96BA AF           1 xor a
 763+ 96BB 32 15 89     	ld (Stack_2),a
 764+ 96BE
 765+ 96BE C9           	ret
 766+ 96BF
 767+ 96BF              ; -----------------------------------------------------------------------------------
 768+ 96BF              ;
 769+ 96BF              ;	28/2/23
 770+ 96BF              ;
 771+ 96BF              ;	Pinta los disparos generados.
 772+ 96BF
 773+ 96BF              Extrae_foto_disparos
 774+ 96BF
 775+ 96BF 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96C2 7E               ld a,(hl)
 777+ 96C3 A7               and a
 778+ 96C4 C8               ret z
 779+ 96C5
 780+ 96C5 3A 3B 89     	ld a,(Numero_de_disparotes)
 781+ 96C8 A7           	and a
 782+ 96C9 C8           	ret z
 783+ 96CA ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 96CE 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 96D1
 786+ 96D1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 96D3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 96D4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 96D5
 790+ 96D5 ED 73 15 89  	ld (Stack_2),sp
 791+ 96D9 ED 7B 13 89  	ld sp,(Stack)
 792+ 96DD
 793+ 96DD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 96DD
 795+ 96DD 3E CD        	ld a,$cd
 796+ 96DF 32 E7 96     	ld (Imprime2),a
 797+ 96E2 EB           	ex de,hl
 798+ 96E3 22 E8 96     	ld (Imprime2+1),hl
 799+ 96E6 EB           	ex de,hl
 800+ 96E7
 801+ 96E7              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 96E7
 803+ 96E7 00 00 00     Imprime2 db 0,0,0
 804+ 96EA
 805+ 96EA 3A 3B 89     	ld a,(Numero_de_disparotes)
 806+ 96ED 3D           	dec a
 807+ 96EE 28 09        	jr z,1F
 808+ 96F0 32 3B 89      	ld (Numero_de_disparotes),a
 809+ 96F3
 810+ 96F3 ED 7B 15 89  	ld sp,(Stack_2)
 811+ 96F7 18 D8        	jr 2B
 812+ 96F9
 813+ 96F9 AF           1 xor a
 814+ 96FA 32 15 89     	ld (Stack_2),a
 815+ 96FD C9           	ret
 816+ 96FE
 817+ 96FE              ; -----------------------------------------------------------------------------------
 818+ 96FE              ;
 819+ 96FE              ;	4/9/23
 820+ 96FE              ;
 821+ 96FE              ;	Rutina principal de pintado de Amadeus.
 822+ 96FE              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 96FE
 824+ 96FE 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 825+ 9701 7E           	ld a,(hl)
 826+ 9702 A7           	and a
 827+ 9703 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 828+ 9704
 829+ 9704 3A 0E 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 830+ 9707 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 831+ 9708 C8           	ret z
 832+ 9709
 833+ 9709              ; -----------------------------------
 834+ 9709
 835+ 9709 ED 73 13 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 836+ 970D 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 837+ 9710
 838+ 9710 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 839+ 9712 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 840+ 9713 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 841+ 9714
 842+ 9714 ED 73 15 89  	ld (Stack_2),sp
 843+ 9718 ED 7B 13 89  	ld sp,(Stack)
 844+ 971C
 845+ 971C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 846+ 971C
 847+ 971C 3E CD        	ld a,$cd
 848+ 971E 32 26 97     	ld (Imprime_Amadeus),a
 849+ 9721 EB           	ex de,hl
 850+ 9722 22 27 97     	ld (Imprime_Amadeus+1),hl
 851+ 9725 EB           	ex de,hl
 852+ 9726
 853+ 9726              ; Ejecuta la llamada:	CALL $xx,xx
 854+ 9726
 855+ 9726 00 00 00     Imprime_Amadeus db 0,0,0
 856+ 9729
 857+ 9729 ED 73 13 89  	ld (Stack),sp
 858+ 972D
 859+ 972D 3A 0E 89     	ld a,(Numero_de_malotes)
 860+ 9730 3D           	dec a
 861+ 9731 28 09        	jr z,1F
 862+ 9733 32 0E 89      	ld (Numero_de_malotes),a
 863+ 9736
 864+ 9736 ED 7B 15 89  	ld sp,(Stack_2)
 865+ 973A 18 D4        	jr 2B
 866+ 973C
 867+ 973C AF           1 xor a
 868+ 973D 32 15 89     	ld (Stack_2),a
 869+ 9740
 870+ 9740 C9           	ret
# file closed: Draw_XOR.asm
1625  9741              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9741              ;   índices de Rutinas de impresión.
   2+ 9741
   3+ 9741 51 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9743 7E 97            defw Pinta_Amadeus_3x2
   5+ 9745
   6+ 9745 D4 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9747 74 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9749 28 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 974B
  10+ 974B FE 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 974D 02 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 974F B6 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9751
  14+ 9751
  15+ 9751              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9751              ;
  17+ 9751              ;   12/12/22
  18+ 9751              ;
  19+ 9751              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9751              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9751              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9751              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9751              ;
  24+ 9751              ;   Modifica: DE y HL.
  25+ 9751
  26+ 9751 ED 73 13 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9755 FD F9        	ld sp,iy
  28+ 9757 06 10            ld b,16
  29+ 9759 D1           1 pop de
  30+ 975A 7B               ld a,e
  31+ 975B AE               xor (hl)
  32+ 975C 77           	ld (hl),a
  33+ 975D 23           	inc hl
  34+ 975E 7A               ld a,d
  35+ 975F AE               xor (hl)
  36+ 9760 77           	ld (hl),a
  37+ 9761 2B           	dec hl
  38+ 9762 24           	inc h
  39+ 9763 7C               ld a,h
  40+ 9764 E6 07            and 7
  41+ 9766 20 0A            jr nz,2F
  42+ 9768 7D               ld a,l
  43+ 9769 C6 20            add a,$20
  44+ 976B 6F               ld l,a
  45+ 976C 38 04            jr c,2F
  46+ 976E 7C               ld a,h
  47+ 976F D6 08            sub 8
  48+ 9771 67               ld h,a
  49+ 9772 7C           2 ld a,h
  50+ 9773 FE 58            cp $58
  51+ 9775 28 02            jr z,3F
  52+ 9777 10 E0            djnz 1B
  53+ 9779 ED 7B 13 89  3 ld sp,(Stack)
  54+ 977D C9           	ret
  55+ 977E
  56+ 977E ED 73 13 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9782 FD F9        	ld sp,iy
  58+ 9784 06 08            ld b,8
  59+ 9786 D1           1 pop de
  60+ 9787 7B               ld a,e
  61+ 9788 AE               xor (hl)
  62+ 9789 77           	ld (hl),a
  63+ 978A 23           	inc hl
  64+ 978B 7A               ld a,d
  65+ 978C AE               xor (hl)
  66+ 978D 77           	ld (hl),a
  67+ 978E 23           	inc hl
  68+ 978F D1           	pop de
  69+ 9790 7B               ld a,e
  70+ 9791 AE               xor (hl)
  71+ 9792 77           	ld (hl),a
  72+ 9793 2B           	dec hl
  73+ 9794 2B           	dec hl
  74+ 9795 24           	inc h
  75+ 9796 7C               ld a,h
  76+ 9797 E6 07            and 7
  77+ 9799 20 0A            jr nz,2F
  78+ 979B 7D               ld a,l
  79+ 979C C6 20            add a,$20
  80+ 979E 6F               ld l,a
  81+ 979F 38 04            jr c,2F
  82+ 97A1 7C               ld a,h
  83+ 97A2 D6 08            sub 8
  84+ 97A4 67               ld h,a
  85+ 97A5 7C           2 ld a,h
  86+ 97A6 FE 58            cp $58
  87+ 97A8 28 25            jr z,4F
  88+ 97AA 7A               ld a,d
  89+ 97AB AE               xor (hl)
  90+ 97AC 77               ld (hl),a
  91+ 97AD D1           	pop de
  92+ 97AE 23           	inc hl
  93+ 97AF 7B               ld a,e
  94+ 97B0 AE               xor (hl)
  95+ 97B1 77           	ld (hl),a
  96+ 97B2 23           	inc hl
  97+ 97B3 7A               ld a,d
  98+ 97B4 AE               xor (hl)
  99+ 97B5 77           	ld (hl),a
 100+ 97B6 2B           	dec hl
 101+ 97B7 2B           	dec hl
 102+ 97B8 24           	inc h
 103+ 97B9 7C               ld a,h
 104+ 97BA E6 07            and 7
 105+ 97BC 20 0A            jr nz,3F
 106+ 97BE 7D               ld a,l
 107+ 97BF C6 20            add a,$20
 108+ 97C1 6F               ld l,a
 109+ 97C2 38 04            jr c,3F
 110+ 97C4 7C               ld a,h
 111+ 97C5 D6 08            sub 8
 112+ 97C7 67               ld h,a
 113+ 97C8 7C           3 ld a,h
 114+ 97C9 FE 58            cp $58
 115+ 97CB 28 02            jr z,4F
 116+ 97CD 10 B7            djnz 1B
 117+ 97CF ED 7B 13 89  4 ld sp,(Stack)
 118+ 97D3 C9           	ret
 119+ 97D4
 120+ 97D4              ; ---------------------------------------------------
 121+ 97D4
 122+ 97D4 ED 73 13 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97D8 FD F9        	ld sp,iy
 124+ 97DA
 125+ 97DA              ; >>>
 126+ 97DA
 127+ 97DA 06 10            ld b,16
 128+ 97DC D1           1 pop de
 129+ 97DD 7A           	ld a,d
 130+ 97DE AE           	xor (hl)
 131+ 97DF 77           	ld (hl),a
 132+ 97E0 24           	inc h
 133+ 97E1 7C               ld a,h
 134+ 97E2 E6 07            and 7
 135+ 97E4 20 0C            jr nz,2F
 136+ 97E6 7D               ld a,l
 137+ 97E7 C6 20            add a,$20
 138+ 97E9 6F               ld l,a
 139+ 97EA 38 06            jr c,2F
 140+ 97EC 7C               ld a,h
 141+ 97ED D6 08            sub 8
 142+ 97EF 67               ld h,a
 143+ 97F0 18 00            jr 2F
 144+ 97F2 7C           2 ld a,h
 145+ 97F3 FE 58            cp $58
 146+ 97F5 28 02            jr z,3F
 147+ 97F7 10 E3            djnz 1B
 148+ 97F9 ED 7B 13 89  3 ld sp,(Stack)
 149+ 97FD C9           	ret
 150+ 97FE
 151+ 97FE ED 73 13 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9802 FD F9        	ld sp,iy
 153+ 9804
 154+ 9804              ; >>>
 155+ 9804
 156+ 9804 06 10            ld b,16
 157+ 9806 D1           1 pop de
 158+ 9807 7B           	ld a,e
 159+ 9808 AE           	xor (hl)
 160+ 9809 77           	ld (hl),a
 161+ 980A 24           	inc h
 162+ 980B 7C               ld a,h
 163+ 980C E6 07            and 7
 164+ 980E 20 0C            jr nz,2F
 165+ 9810 7D               ld a,l
 166+ 9811 C6 20            add a,$20
 167+ 9813 6F               ld l,a
 168+ 9814 38 06            jr c,2F
 169+ 9816 7C               ld a,h
 170+ 9817 D6 08            sub 8
 171+ 9819 67               ld h,a
 172+ 981A 18 00            jr 2F
 173+ 981C 7C           2 ld a,h
 174+ 981D FE 58            cp $58
 175+ 981F 28 02            jr z,3F
 176+ 9821 10 E3            djnz 1B
 177+ 9823 ED 7B 13 89  3 ld sp,(Stack)
 178+ 9827 C9           	ret
 179+ 9828
 180+ 9828              ; ---------------------------------------------------
 181+ 9828
 182+ 9828 ED 73 13 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 982C FD F9        	ld sp,iy
 184+ 982E 06 08            ld b,8
 185+ 9830 D1           1 pop de
 186+ 9831 7A           	ld a,d
 187+ 9832 AE           	xor (hl)
 188+ 9833 77           	ld (hl),a
 189+ 9834 23           	inc hl
 190+ 9835 D1           	pop de
 191+ 9836 7B           	ld a,e
 192+ 9837 AE           	xor (hl)
 193+ 9838 77           	ld (hl),a
 194+ 9839 2B           	dec hl
 195+ 983A 24            	inc h
 196+ 983B 7C               ld a,h
 197+ 983C E6 07            and 7
 198+ 983E 20 0A            jr nz,2F
 199+ 9840 7D               ld a,l
 200+ 9841 C6 20            add a,$20
 201+ 9843 6F               ld l,a
 202+ 9844 38 04            jr c,2F
 203+ 9846 7C               ld a,h
 204+ 9847 D6 08            sub 8
 205+ 9849 67               ld h,a
 206+ 984A 7C           2 ld a,h
 207+ 984B FE 58            cp $58
 208+ 984D 28 20            jr z,4F
 209+ 984F D1               pop de
 210+ 9850 7B           	ld a,e
 211+ 9851 AE           	xor (hl)
 212+ 9852 77           	ld (hl),a
 213+ 9853 23           	inc hl
 214+ 9854 7A           	ld a,d
 215+ 9855 AE           	xor (hl)
 216+ 9856 77           	ld (hl),a
 217+ 9857 2B           	dec hl
 218+ 9858 24           	inc h
 219+ 9859 7C               ld a,h
 220+ 985A E6 07            and 7
 221+ 985C 20 0A            jr nz,3F
 222+ 985E 7D               ld a,l
 223+ 985F C6 20            add a,$20
 224+ 9861 6F               ld l,a
 225+ 9862 38 04            jr c,3F
 226+ 9864 7C               ld a,h
 227+ 9865 D6 08            sub 8
 228+ 9867 67               ld h,a
 229+ 9868 7C           3 ld a,h
 230+ 9869 FE 58            cp $58
 231+ 986B 28 02            jr z,4F
 232+ 986D 10 C1            djnz 1B
 233+ 986F ED 7B 13 89  4 ld sp,(Stack)
 234+ 9873 C9           	ret
 235+ 9874
 236+ 9874 ED 73 13 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9878 FD F9        	ld sp,iy
 238+ 987A 06 08            ld b,8
 239+ 987C D1           1 pop de
 240+ 987D D1           	pop de
 241+ 987E 7B           	ld a,e
 242+ 987F AE           	xor (hl)
 243+ 9880 77           	ld (hl),a
 244+ 9881 24            	inc h
 245+ 9882 7C               ld a,h
 246+ 9883 E6 07            and 7
 247+ 9885 20 0A            jr nz,2F
 248+ 9887 7D               ld a,l
 249+ 9888 C6 20            add a,$20
 250+ 988A 6F               ld l,a
 251+ 988B 38 04            jr c,2F
 252+ 988D 7C               ld a,h
 253+ 988E D6 08            sub 8
 254+ 9890 67               ld h,a
 255+ 9891 7C           2 ld a,h
 256+ 9892 FE 58            cp $58
 257+ 9894 28 1B            jr z,4F
 258+ 9896 D1               pop de
 259+ 9897 7A           	ld a,d
 260+ 9898 AE           	xor (hl)
 261+ 9899 77           	ld (hl),a
 262+ 989A 24           	inc h
 263+ 989B 7C               ld a,h
 264+ 989C E6 07            and 7
 265+ 989E 20 0A            jr nz,3F
 266+ 98A0 7D               ld a,l
 267+ 98A1 C6 20            add a,$20
 268+ 98A3 6F               ld l,a
 269+ 98A4 38 04            jr c,3F
 270+ 98A6 7C               ld a,h
 271+ 98A7 D6 08            sub 8
 272+ 98A9 67               ld h,a
 273+ 98AA 7C           3 ld a,h
 274+ 98AB FE 58            cp $58
 275+ 98AD 28 02            jr z,4F
 276+ 98AF 10 CB            djnz 1B
 277+ 98B1 ED 7B 13 89  4 ld sp,(Stack)
 278+ 98B5 C9           	ret
 279+ 98B6
 280+ 98B6 ED 73 13 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98BA FD F9        	ld sp,iy
 282+ 98BC 06 08            ld b,8
 283+ 98BE D1           1 pop de
 284+ 98BF 7B           	ld a,e
 285+ 98C0 AE           	xor (hl)
 286+ 98C1 77           	ld (hl),a
 287+ 98C2 23           	inc hl
 288+ 98C3 7A           	ld a,d
 289+ 98C4 AE           	xor (hl)
 290+ 98C5 77           	ld (hl),a
 291+ 98C6 2B           	dec hl
 292+ 98C7 24             	inc h
 293+ 98C8 7C               ld a,h
 294+ 98C9 E6 07            and 7
 295+ 98CB 20 0A            jr nz,2F
 296+ 98CD 7D               ld a,l
 297+ 98CE C6 20            add a,$20
 298+ 98D0 6F               ld l,a
 299+ 98D1 38 04            jr c,2F
 300+ 98D3 7C               ld a,h
 301+ 98D4 D6 08            sub 8
 302+ 98D6 67               ld h,a
 303+ 98D7 7C           2 ld a,h
 304+ 98D8 FE 58            cp $58
 305+ 98DA 28 21            jr z,4F
 306+ 98DC D1               pop de
 307+ 98DD 7A           	ld a,d
 308+ 98DE AE           	xor (hl)
 309+ 98DF 77           	ld (hl),a
 310+ 98E0 23           	inc hl
 311+ 98E1 D1               pop de
 312+ 98E2 7B           	ld a,e
 313+ 98E3 AE           	xor (hl)
 314+ 98E4 77           	ld (hl),a
 315+ 98E5 2B           	dec hl
 316+ 98E6 24           	inc h
 317+ 98E7 7C               ld a,h
 318+ 98E8 E6 07            and 7
 319+ 98EA 20 0A            jr nz,3F
 320+ 98EC 7D               ld a,l
 321+ 98ED C6 20            add a,$20
 322+ 98EF 6F               ld l,a
 323+ 98F0 38 04            jr c,3F
 324+ 98F2 7C               ld a,h
 325+ 98F3 D6 08            sub 8
 326+ 98F5 67               ld h,a
 327+ 98F6 7C           3 ld a,h
 328+ 98F7 FE 58            cp $58
 329+ 98F9 28 02            jr z,4F
 330+ 98FB 10 C1            djnz 1B
 331+ 98FD ED 7B 13 89  4 ld sp,(Stack)
 332+ 9901 C9           	ret
 333+ 9902
 334+ 9902 ED 73 13 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9906 FD F9        	ld sp,iy
 336+ 9908 06 08            ld b,8
 337+ 990A D1           1 pop de
 338+ 990B 7B           	ld a,e
 339+ 990C AE           	xor (hl)
 340+ 990D 77           	ld (hl),a
 341+ 990E 24            	inc h
 342+ 990F 7C               ld a,h
 343+ 9910 E6 07            and 7
 344+ 9912 20 0A            jr nz,2F
 345+ 9914 7D               ld a,l
 346+ 9915 C6 20            add a,$20
 347+ 9917 6F               ld l,a
 348+ 9918 38 04            jr c,2F
 349+ 991A 7C               ld a,h
 350+ 991B D6 08            sub 8
 351+ 991D 67               ld h,a
 352+ 991E 7C           2 ld a,h
 353+ 991F FE 58            cp $58
 354+ 9921 28 1C            jr z,4F
 355+ 9923 D1               pop de
 356+ 9924 7A           	ld a,d
 357+ 9925 AE           	xor (hl)
 358+ 9926 77           	ld (hl),a
 359+ 9927 24           	inc h
 360+ 9928 7C               ld a,h
 361+ 9929 E6 07            and 7
 362+ 992B 20 0A            jr nz,3F
 363+ 992D 7D               ld a,l
 364+ 992E C6 20            add a,$20
 365+ 9930 6F               ld l,a
 366+ 9931 38 04            jr c,3F
 367+ 9933 7C               ld a,h
 368+ 9934 D6 08            sub 8
 369+ 9936 67               ld h,a
 370+ 9937 7C           3 ld a,h
 371+ 9938 FE 58            cp $58
 372+ 993A 28 03            jr z,4F
 373+ 993C D1               pop de
 374+ 993D 10 CB            djnz 1B
 375+ 993F ED 7B 13 89  4 ld sp,(Stack)
 376+ 9943 C9           	ret
 377+ 9944
 378+ 9944              ; ---------------------------------------------------
 379+ 9944              ;
 380+ 9944              ;   27/02/23
 381+ 9944              ;
 382+ 9944              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9944              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9944              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9944
 386+ 9944 ED 73 13 89  Pinta_Disparo ld (Stack),sp
 387+ 9948 FD F9            ld sp,iy
 388+ 994A 06 03            ld b,3
 389+ 994C D1           1 pop de
 390+ 994D 7B               ld a,e
 391+ 994E AE               xor (hl)
 392+ 994F 77               ld (hl),a
 393+ 9950 23               inc hl
 394+ 9951 7A               ld a,d
 395+ 9952 AE               xor (hl)
 396+ 9953 77               ld (hl),a
 397+ 9954 2B               dec hl
 398+ 9955
 399+ 9955 24               inc h
 400+ 9956 7C               ld a,h
 401+ 9957 E6 07            and 7
 402+ 9959 20 0A            jr nz,2F
 403+ 995B 7D               ld a,l
 404+ 995C C6 20            add a,$20
 405+ 995E 6F               ld l,a
 406+ 995F 38 04            jr c,2F
 407+ 9961 7C               ld a,h
 408+ 9962 D6 08            sub 8
 409+ 9964 67               ld h,a
 410+ 9965 7C           2 ld a,h
 411+ 9966 FE 58            cp $58
 412+ 9968 28 02            jr z,3F
 413+ 996A
 414+ 996A 10 E0            djnz 1B
 415+ 996C ED 7B 13 89  3 ld sp,(Stack)
 416+ 9970 C9               ret
 417+ 9971
# file closed: Rutinas_de_impresion_sprites.asm
1626  9971              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9971              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9971              ;
   3+ 9971              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9971              ;
   5+ 9971              ; *****************************************************************************************************************************************************************************************
   6+ 9971              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9971
   8+ 9971 7C           calcula_tercio ld a,h
   9+ 9972 E6 18        	and $18
  10+ 9974 CB 2F        	sra a
  11+ 9976 CB 2F        	sra a
  12+ 9978 CB 2F        	sra a
  13+ 997A C9           	ret
  14+ 997B
# file closed: calcula_tercio.asm
1627  997B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 997B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 997B              ;
   3+ 997B              ;
   4+ 997B              ;	CLS.
   5+ 997B              ;
   6+ 997B              ;	Limpia la pantalla y define sus atributos.
   7+ 997B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 997B              ;
   9+ 997B              ;	COLORES: 0 ..... NEGRO
  10+ 997B              ;    		 1 ..... AZUL
  11+ 997B              ; 			 2 ..... ROJO
  12+ 997B              ;			 3 ..... MAGENTA
  13+ 997B              ; 			 4 ..... VERDE
  14+ 997B              ; 			 5 ..... CIAN
  15+ 997B              ;			 6 ..... AMARILLO
  16+ 997B              ; 			 7 ..... BLANCO
  17+ 997B              ;
  18+ 997B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 997B              ;
  20+ 997B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 997B
  22+ 997B
  23+ 997B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 997E 11 01 40     	LD DE,$4001
  25+ 9981 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9984 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9986 ED B0        	LDIR
  28+ 9988 01 FF 02     	LD BC,767
  29+ 998B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 998C ED B0        	LDIR
  31+ 998E C9           	ret
  32+ 998F
# file closed: Cls.asm
1628  998F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998F              ; ******************************************************************************************************************************************************************************************
   2+ 998F              ;
   3+ 998F              ;   20/05/23
   4+ 998F              ;
   5+ 998F              ;	Recompone_posicion_inicio
   6+ 998F              ;
   7+ 998F              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 998F              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 998F              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 998F              ;	_ a una u otra rutina.
  11+ 998F
  12+ 998F              Recompone_posicion_inicio
  13+ 998F
  14+ 998F 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 9992 7D           	ld a,l
  16+ 9993 E6 1F        	and $1f
  17+ 9995 28 16        	jr z,1F
  18+ 9997
  19+ 9997 FE 1F        	cp $1f
  20+ 9999 28 0D        	jr z,3F
  21+ 999B
  22+ 999B 21 00 89     	ld hl,Ctrl_2
  23+ 999E CB C6        	set 0,(hl)
  24+ 99A0 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 99A3 22 03 89     	ld (Repone_puntero_objeto),hl
  26+ 99A6 18 08        	jr 2F
  27+ 99A8
  28+ 99A8 CD 49 9B     3 call Mov_left
  29+ 99AB 18 03        	jr 2F
  30+ 99AD
  31+ 99AD CD 2B 9A     1 call Mov_right
  32+ 99B0 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99B3 22 C9 88     	ld (Puntero_objeto),hl
  34+ 99B6 C9           	ret
  35+ 99B7
  36+ 99B7              ; ******************************************************************************************************************************************************************************************
  37+ 99B7              ;
  38+ 99B7              ;   27/05/23
  39+ 99B7              ;
  40+ 99B7              ;	Mov_down
  41+ 99B7              ;
  42+ 99B7              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99B7              ;
  44+ 99B7              ;
  45+ 99B7              Mov_down
  46+ 99B7
  47+ 99B7 CD 19 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99BA              ;																	; _ repone (Puntero_objeto).
  49+ 99BA 21 EF 88     	ld hl,Ctrl_0
  50+ 99BD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99BF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99BF              ; 																	; _ en el caso de que no lo haya.
  53+ 99BF 3A DD 88     	ld a,(Vel_down)
  54+ 99C2 47           	ld b,a
  55+ 99C3 2A C7 88         ld hl,(Posicion_actual)
  56+ 99C6 CD 71 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 99C9 E6 02        	and 2
  58+ 99CB 28 0F        	jr z,1F
  59+ 99CD
  60+ 99CD              ; Nos encontramos en el último tercio de pantalla.
  61+ 99CD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 99CD
  63+ 99CD 7C           	ld a,h
  64+ 99CE FE 57        	cp $57
  65+ 99D0 20 0A        	jr nz,1F
  66+ 99D2
  67+ 99D2 7D           	ld a,l
  68+ 99D3 C6 20        	add $20
  69+ 99D5 30 05        	jr nc,1F
  70+ 99D7
  71+ 99D7              ; ------------------------------
  72+ 99D7              ;	call Reaparece_arriba
  73+ 99D7 CD D6 9C     	call Reinicio
  74+ 99DA              ; ------------------------------
  75+ 99DA
  76+ 99DA 18 08        	jr 3F
  77+ 99DC CD 5E 96     1 call NextScan
  78+ 99DF 22 C7 88     	ld (Posicion_actual),hl
  79+ 99E2 10 E2            djnz 2B
  80+ 99E4 CD FC 9C     3 call Genera_coordenadas
  81+ 99E7 C9           	ret
  82+ 99E8
  83+ 99E8              ; ******************************************************************************************************************************************************************************************
  84+ 99E8              ;
  85+ 99E8              ;   27/05/23
  86+ 99E8              ;
  87+ 99E8              ;	Mov_up
  88+ 99E8              ;
  89+ 99E8              ; 	Mueve el Sprite hacia arriba.
  90+ 99E8              ;
  91+ 99E8              ;
  92+ 99E8              Mov_up
  93+ 99E8
  94+ 99E8 CD 19 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99EB              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99EB 21 EF 88     	ld hl,Ctrl_0
  97+ 99EE CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99F0              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99F0              ; 																		; _ en el caso de que no lo haya.
 100+ 99F0 3A DC 88     	ld a,(Vel_up)
 101+ 99F3 47           	ld b,a
 102+ 99F4 2A C7 88     	ld hl,(Posicion_actual)
 103+ 99F7 CD 71 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99FA A7           	and a
 105+ 99FB 20 10        	jr nz,1F
 106+ 99FD
 107+ 99FD              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99FD              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99FD
 110+ 99FD 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99FE FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A00 20 0B            jr nz,1F
 113+ 9A02 7D               ld a,l
 114+ 9A03 D6 20            sub $20
 115+ 9A05 30 06            jr nc,1F
 116+ 9A07 25               dec h
 117+ 9A08
 118+ 9A08              ; -----------------------------
 119+ 9A08 CD B7 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A0B              ;	call Reinicio
 121+ 9A0B              ; -----------------------------
 122+ 9A0B
 123+ 9A0B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A0D CD 6D 96     1 call PreviousScan
 125+ 9A10 22 C7 88     	ld (Posicion_actual),hl
 126+ 9A13 10 E2            djnz 3B
 127+ 9A15 CD FC 9C     2 call Genera_coordenadas
 128+ 9A18 C9           	ret
 129+ 9A19
 130+ 9A19              ; -----------------------------
 131+ 9A19              ;
 132+ 9A19              ;	27/5/23
 133+ 9A19              ;
 134+ 9A19              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A19              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A19              ;
 137+ 9A19              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A19              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A19              ;
 140+ 9A19              ;	Modifica: A y (Puntero_objeto).
 141+ 9A19
 142+ 9A19 3A 00 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A1C CB 47        	bit 0,a
 144+ 9A1E C8           	ret z
 145+ 9A1F CB 87        	res 0,a
 146+ 9A21 32 00 89     	ld (Ctrl_2),a
 147+ 9A24 2A 03 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A27 22 C9 88     	ld (Puntero_objeto),hl
 149+ 9A2A C9           	ret
 150+ 9A2B
 151+ 9A2B              ; ******************************************************************************************************************************************************************************************
 152+ 9A2B              ;
 153+ 9A2B              ;	19/10/22
 154+ 9A2B              ;
 155+ 9A2B              ;	Mov_right.
 156+ 9A2B              ;
 157+ 9A2B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A2B              ;
 159+ 9A2B
 160+ 9A2B 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 9A2E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A30              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A30              ; 																	; _ en el caso de que no lo haya.
 164+ 9A30 3A EF 88     	ld a,(Ctrl_0)
 165+ 9A33 CB 77        	bit 6,a
 166+ 9A35 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A37
 168+ 9A37 CD 65 9C     	call Stop_Amadeus_right
 169+ 9A3A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A3B 18 4D        	jr 8F
 171+ 9A3D
 172+ 9A3D 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A40 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A42 20 46        	jr nz,8F
 175+ 9A44
 176+ 9A44 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A47 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A48 28 40        	jr z,8F
 179+ 9A4A
 180+ 9A4A              ; ---------- ---------- ----------
 181+ 9A4A              ;
 182+ 9A4A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A4A
 184+ 9A4A 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A4D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A4F 28 11        	jr z,1F
 187+ 9A51 38 06        	jr c,6F
 188+ 9A53 FE 04        	cp 4
 189+ 9A55 28 14        	jr z,7F
 190+ 9A57 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A59
 192+ 9A59              ; ---------- ---------- ----------
 193+ 9A59              ;
 194+ 9A59              ; Perfiles de velocidad
 195+ 9A59              ;
 196+ 9A59
 197+ 9A59 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A5C FE FE        	cp $fe
 199+ 9A5E 20 2A        	jr nz,8F
 200+ 9A60 18 10        	jr 3F
 201+ 9A62 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A65 FE FD        	cp $fd
 203+ 9A67 20 21        	jr nz,8F
 204+ 9A69 18 07        	jr 3F
 205+ 9A6B 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A6E FE FB        	cp $fb
 207+ 9A70 20 18        	jr nz,8F
 208+ 9A72
 209+ 9A72              ; ---------- ---------- ----------
 210+ 9A72
 211+ 9A72              3
 212+ 9A72 CD A5 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A75              ;	call Reinicio
 214+ 9A75
 215+ 9A75              ; ---------- ---------- ----------
 216+ 9A75              ;
 217+ 9A75              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A75
 219+ 9A75 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A77 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A78 CD 91 9A     	call DESPLZ_DER
 222+ 9A7B C1           	pop bc
 223+ 9A7C 10 F9        	djnz 5B
 224+ 9A7E 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A81 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A82 22 C7 88     	ld (Posicion_actual),hl
 227+ 9A85 CD FC 9C     	call Genera_coordenadas
 228+ 9A88 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A8A
 230+ 9A8A              ; ---------- ---------- ----------
 231+ 9A8A
 232+ 9A8A 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9A8D CD 91 9A     	call DESPLZ_DER
 234+ 9A90 C9           2 ret
 235+ 9A91
 236+ 9A91              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A91              ;
 238+ 9A91              ;	22/9/22
 239+ 9A91              ;
 240+ 9A91
 241+ 9A91 CD A0 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A94 CD EC 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A97 CD 15 9B         call Ciclo_completo
 244+ 9A9A 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A9D CB FE        	set 7,(hl)
 246+ 9A9F C9           	ret
 247+ 9AA0
 248+ 9AA0              ; ******************************************************************************************************************************************************************************************
 249+ 9AA0              ;	15/02/23
 250+ 9AA0              ;
 251+ 9AA0
 252+ 9AA0 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AA3 47           	ld b,a
 254+ 9AA4 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AA7 23           1 inc hl
 256+ 9AA8 23           	inc hl
 257+ 9AA9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AAB 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AAE CD 9C 8C     	call Extrae_address
 260+ 9AB1 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9AB4
 262+ 9AB4              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AB4
 264+ 9AB4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AB4              ; Cuántos movimientos hemos hecho ??
 266+ 9AB4              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AB4
 268+ 9AB4 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AB7 EB           	ex de,hl
 270+ 9AB8 A7           	and a
 271+ 9AB9 ED 52        	sbc hl,de
 272+ 9ABB CB 3D        	srl l
 273+ 9ABD 3E 08        6 ld a,8
 274+ 9ABF 95           	sub l
 275+ 9AC0 30 1E        	jr nc,3F
 276+ 9AC2
 277+ 9AC2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AC2              ; B="0".
 279+ 9AC2
 280+ 9AC2 04           4 inc b
 281+ 9AC3 3C           	inc a
 282+ 9AC4 20 FC        	jr nz,4B
 283+ 9AC6 78           	ld a,b
 284+ 9AC7 08           	ex af,af
 285+ 9AC8 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9ACB 23           5 inc hl
 287+ 9ACC 23           	inc hl
 288+ 9ACD 10 FC        	djnz 5B
 289+ 9ACF 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9AD2 CD 9C 8C     	call Extrae_address
 291+ 9AD5 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9AD8
 293+ 9AD8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AD8              ; _(Posicion_actual).
 295+ 9AD8
 296+ 9AD8 21 C7 88     	ld hl,Posicion_actual
 297+ 9ADB 34           	inc (hl)
 298+ 9ADC 08               ex af,af
 299+ 9ADD 6F           	ld l,a
 300+ 9ADE 18 DD        	jr 6B
 301+ 9AE0
 302+ 9AE0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AE0
 304+ 9AE0 47           3 ld b,a
 305+ 9AE1 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AE4 23           2 inc hl
 307+ 9AE5 23           	inc hl
 308+ 9AE6 10 FC        	djnz 2B
 309+ 9AE8 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AEB C9           8 ret
 311+ 9AEC
 312+ 9AEC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AEC              ;
 314+ 9AEC              ;	24/7/22
 315+ 9AEC              ;
 316+ 9AEC              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AEC              ;
 318+ 9AEC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AEC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AEC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AEC
 322+ 9AEC 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AEF A7           	and a
 324+ 9AF0 20 1F        	jr nz,1F
 325+ 9AF2 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AF4 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9AF7
 328+ 9AF7 21 C6 88     	ld hl,Columns
 329+ 9AFA 34           	inc (hl)
 330+ 9AFB 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9AFE E6 01        	and 1
 332+ 9B00 28 0F        	jr z,1F
 333+ 9B02 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B05 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B06 22 C7 88     	ld (Posicion_actual),hl
 336+ 9B09 CD FC 9C     	call Genera_coordenadas
 337+ 9B0C CD 71 9C     	call Inc_CTRL_DESPLZ
 338+ 9B0F 18 03        	jr 2F
 339+ 9B11 CD 71 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B14 C9           2 ret
 341+ 9B15
 342+ 9B15              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B15              ;
 344+ 9B15              ;	24/7/22
 345+ 9B15              ;
 346+ 9B15              ;	Ciclo_completo.
 347+ 9B15              ;
 348+ 9B15              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B15              ;
 350+ 9B15              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B15              ; 	Decrementamos (Columns).
 352+ 9B15              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B15              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B15
 355+ 9B15
 356+ 9B15 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B18 FE FF        	cp $ff
 358+ 9B1A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B1C E6 F0        	and $f0
 360+ 9B1E 20 28        	jr nz,3F
 361+ 9B20
 362+ 9B20              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B20
 364+ 9B20 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9B23 47           	ld b,a
 366+ 9B24 3E F8        	ld a,$f8
 367+ 9B26 80           	add b
 368+ 9B27 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9B2A 18 1C        	jr 3F
 370+ 9B2C 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B2F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B30 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B31 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9B34 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B37 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B39 20 0A        	jr nz,2F
 377+ 9B3B 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B3E 23           	inc hl
 379+ 9B3F 22 C7 88     	ld (Posicion_actual),hl
 380+ 9B42 CD FC 9C     	call Genera_coordenadas
 381+ 9B45
 382+ 9B45              ; Inicia el puntero de Sprite.
 383+ 9B45
 384+ 9B45 CD B3 8C     2 call Inicia_puntero_objeto_der
 385+ 9B48 C9           3 ret
 386+ 9B49
 387+ 9B49              ; ******************************************************************************************************************************************************************************************
 388+ 9B49              ;
 389+ 9B49              ;	15/02/23
 390+ 9B49              ;
 391+ 9B49              ;	Mov_left.
 392+ 9B49              ;
 393+ 9B49              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B49              ;
 395+ 9B49              Mov_left
 396+ 9B49
 397+ 9B49 21 EF 88     	ld hl,Ctrl_0
 398+ 9B4C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B4E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B4E              ; 																	; _ en el caso de que no lo haya.
 401+ 9B4E 3A EF 88     	ld a,(Ctrl_0)
 402+ 9B51 CB 77        	bit 6,a
 403+ 9B53 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B55
 405+ 9B55 CD 6B 9C     	call Stop_Amadeus_left
 406+ 9B58 C8           	ret z
 407+ 9B59 20 4A        	jr nz,8F
 408+ 9B5B
 409+ 9B5B 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9B5E A7           	and a
 411+ 9B5F 20 44        	jr nz,8F
 412+ 9B61
 413+ 9B61 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B64 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B65 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B67
 417+ 9B67              ; ---------- ---------- ----------
 418+ 9B67
 419+ 9B67 3A DA 88     	ld a,(Vel_left)
 420+ 9B6A FE 02        	cp 2
 421+ 9B6C 28 0F        	jr z,1F
 422+ 9B6E 38 04        	jr c,6F
 423+ 9B70 FE 04        	cp 4
 424+ 9B72 28 12        	jr z,7F
 425+ 9B74
 426+ 9B74              ; ---------- ---------- ----------
 427+ 9B74
 428+ 9B74 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B77 FE F8        	cp $f8
 430+ 9B79 20 2A        	jr nz,8F
 431+ 9B7B 18 10        	jr 4F
 432+ 9B7D 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B80 FE F9        	cp $f9
 434+ 9B82 20 21        	jr nz,8F
 435+ 9B84 18 07        	jr 4F
 436+ 9B86 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B89 FE FB        	cp $fb
 438+ 9B8B 20 18        	jr nz,8F
 439+ 9B8D
 440+ 9B8D              ; ---------- ---------- ----------
 441+ 9B8D
 442+ 9B8D              4
 443+ 9B8D CD 93 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B90              ;	call Reinicio
 445+ 9B90
 446+ 9B90              ; ---------- ---------- ----------
 447+ 9B90
 448+ 9B90 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B92 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B93
 451+ 9B93              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B93              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B93
 454+ 9B93 CD AC 9B     	call DESPLZ_IZQ
 455+ 9B96 C1           	pop bc
 456+ 9B97 10 F9        	djnz 5B
 457+ 9B99 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B9C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B9D 22 C7 88     	ld (Posicion_actual),hl
 460+ 9BA0 CD FC 9C     	call Genera_coordenadas
 461+ 9BA3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BA5
 463+ 9BA5              ; ---------- ---------- ----------
 464+ 9BA5
 465+ 9BA5              ; Movemos, no hay recolocación.
 466+ 9BA5
 467+ 9BA5 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9BA8 CD AC 9B     	call DESPLZ_IZQ
 469+ 9BAB C9           2 ret
 470+ 9BAC
 471+ 9BAC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BAC              ;
 473+ 9BAC              ;	22/9/22
 474+ 9BAC
 475+ 9BAC              DESPLZ_IZQ
 476+ 9BAC
 477+ 9BAC CD BB 9B     	call Desplaza_izquierda
 478+ 9BAF CD 07 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BB2 CD 2F 9C     	call Ciclo_completo_2
 480+ 9BB5 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BB8 CB BE        	res 7,(hl)
 482+ 9BBA C9           	ret
 483+ 9BBB
 484+ 9BBB              Desplaza_izquierda
 485+ 9BBB
 486+ 9BBB 3A DA 88     	ld a,(Vel_left)
 487+ 9BBE 47           	ld b,a
 488+ 9BBF 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9BC2 23           1 inc hl
 490+ 9BC3 23           	inc hl
 491+ 9BC4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9BC6 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9BC9 CD 9C 8C     	call Extrae_address
 494+ 9BCC 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9BCF
 496+ 9BCF              ; Modifica (Puntero_DESPLZ_der).
 497+ 9BCF
 498+ 9BCF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9BCF              ; Cuántos movimientos hemos hecho ??
 500+ 9BCF              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9BCF
 502+ 9BCF 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9BD2 EB           	ex de,hl
 504+ 9BD3 A7           	and a
 505+ 9BD4 ED 52        	sbc hl,de
 506+ 9BD6 CB 3D        	srl l
 507+ 9BD8 3E 08        6 ld a,8
 508+ 9BDA 95           	sub l
 509+ 9BDB 30 1E        	jr nc,3F
 510+ 9BDD
 511+ 9BDD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BDD              ; B="0".
 513+ 9BDD
 514+ 9BDD 04           4 inc b
 515+ 9BDE 3C           	inc a
 516+ 9BDF 20 FC        	jr nz,4B
 517+ 9BE1 78           	ld a,b
 518+ 9BE2 08           	ex af,af
 519+ 9BE3 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BE6 23           5 inc hl
 521+ 9BE7 23           	inc hl
 522+ 9BE8 10 FC        	djnz 5B
 523+ 9BEA 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BED CD 9C 8C     	call Extrae_address
 525+ 9BF0 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9BF3
 527+ 9BF3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BF3              ; _(Posicion_actual).
 529+ 9BF3
 530+ 9BF3 21 C7 88     	ld hl,Posicion_actual
 531+ 9BF6 35           	dec (hl)
 532+ 9BF7 08           	ex af,af
 533+ 9BF8 6F           	ld l,a
 534+ 9BF9 18 DD        	jr 6B
 535+ 9BFB
 536+ 9BFB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BFB
 538+ 9BFB 47           3 ld b,a
 539+ 9BFC 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9BFF 23           2 inc hl
 541+ 9C00 23           	inc hl
 542+ 9C01 10 FC        	djnz 2B
 543+ 9C03 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C06 C9           8 ret
 545+ 9C07
 546+ 9C07              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C07              ;
 548+ 9C07              ;	modifica_parametros_1er_DESPLZ
 549+ 9C07              ;
 550+ 9C07              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C07              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C07              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C07
 554+ 9C07 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C0A A7           	and a
 556+ 9C0B 20 1E        	jr nz,1F
 557+ 9C0D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C0E 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9C11 21 C6 88     	ld hl,Columns
 560+ 9C14 34           	inc (hl)
 561+ 9C15 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9C18 E6 01        	and 1
 563+ 9C1A 20 0F        	jr nz,1F
 564+ 9C1C 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C1F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C20 22 C7 88     	ld (Posicion_actual),hl
 567+ 9C23 CD FC 9C     	call Genera_coordenadas
 568+ 9C26 CD 82 9C     	call Dec_CTRL_DESPLZ
 569+ 9C29 18 03        	jr 2F
 570+ 9C2B CD 82 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C2E C9           2 ret
 572+ 9C2F
 573+ 9C2F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C2F
 575+ 9C2F 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C32 FE F7        	cp $f7
 577+ 9C34 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C36 30 2C        	jr nc,3F
 579+ 9C38
 580+ 9C38              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C38
 582+ 9C38 06 00        	ld b,0
 583+ 9C3A 04           4 inc b
 584+ 9C3B 3C           	inc a
 585+ 9C3C FE F7        	cp $f7
 586+ 9C3E 20 FA        	jr nz,4B
 587+ 9C40 3E FF        	ld a,$ff
 588+ 9C42 90           	sub b
 589+ 9C43 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9C46 18 1C        	jr 3F
 591+ 9C48
 592+ 9C48              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C48
 594+ 9C48 21 C6 88     1 ld hl,Columns
 595+ 9C4B 35           	dec (hl)
 596+ 9C4C AF           	xor a
 597+ 9C4D 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9C50 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9C53 E6 01        	and 1
 600+ 9C55 28 0A        	jr z,2F
 601+ 9C57 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C5A 2B           	dec hl
 603+ 9C5B 22 C7 88     	ld (Posicion_actual),hl
 604+ 9C5E CD FC 9C     	call Genera_coordenadas
 605+ 9C61
 606+ 9C61              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C61
 608+ 9C61 CD C6 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C64 C9           3 ret
 610+ 9C65
 611+ 9C65              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C65              ;
 613+ 9C65              ;	19/10/22
 614+ 9C65              ;
 615+ 9C65              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C65              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C65
 618+ 9C65 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C68 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C6A C9           	ret
 621+ 9C6B
 622+ 9C6B              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C6B              ;
 624+ 9C6B              ;	19/10/22
 625+ 9C6B              ;
 626+ 9C6B              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C6B              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C6B
 629+ 9C6B 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C6E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C70 C9           	ret
 632+ 9C71
 633+ 9C71              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C71              ;
 635+ 9C71              ;	24/7/22
 636+ 9C71              ;
 637+ 9C71              ;	Inc_CTRL_DESPLZ
 638+ 9C71              ;
 639+ 9C71              ;
 640+ 9C71              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C71
 642+ 9C71 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C74 3A DB 88     	ld a,(Vel_right)
 644+ 9C77 A7           	and a
 645+ 9C78 28 06        	jr z,1F
 646+ 9C7A 47           	ld b,a
 647+ 9C7B 34           3 inc (hl)
 648+ 9C7C 10 FD        	djnz 3B
 649+ 9C7E 18 01        	jr 2F
 650+ 9C80 34           1 inc (hl)
 651+ 9C81 C9           2 ret
 652+ 9C82
 653+ 9C82              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C82              ;
 655+ 9C82              ;	5/2/23
 656+ 9C82              ;
 657+ 9C82              ;	Dec_CTRL_DESPLZ
 658+ 9C82              ;
 659+ 9C82              ;
 660+ 9C82              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C82
 662+ 9C82 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C85 3A DA 88     	ld a,(Vel_left)
 664+ 9C88 A7           	and a
 665+ 9C89 28 06        	jr z,1F
 666+ 9C8B 47           	ld b,a
 667+ 9C8C 35           3 dec (hl)
 668+ 9C8D 10 FD        	djnz 3B
 669+ 9C8F 18 01        	jr 2F
 670+ 9C91 35           1 dec (hl)
 671+ 9C92 C9           2 ret
 672+ 9C93
 673+ 9C93              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C93
 675+ 9C93 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C96 01 1F 00     	ld bc,31
 677+ 9C99 A7           	and a
 678+ 9C9A ED 4A        	adc hl,bc
 679+ 9C9C 22 C7 88     	ld (Posicion_actual),hl
 680+ 9C9F 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CA2 CB C6        	set 0,(hl)
 682+ 9CA4 C9           	ret
 683+ 9CA5
 684+ 9CA5              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CA5
 686+ 9CA5 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CA8 01 1F 00     	ld bc,31
 688+ 9CAB A7           	and a
 689+ 9CAC ED 42        	sbc hl,bc
 690+ 9CAE 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CB1 21 EF 88     	ld hl,Ctrl_0
 692+ 9CB4 CB CE        	set 1,(hl)
 693+ 9CB6 C9           	ret
 694+ 9CB7
 695+ 9CB7              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CB7
 697+ 9CB7 24           Reaparece_abajo inc h
 698+ 9CB8 01 E0 17     	ld bc,$17e0
 699+ 9CBB A7           	and a
 700+ 9CBC ED 4A        	adc hl,bc
 701+ 9CBE 22 C7 88     	ld (Posicion_actual),hl
 702+ 9CC1 21 EF 88     	ld hl,Ctrl_0
 703+ 9CC4 CB D6        	set 2,(hl)
 704+ 9CC6 C9           	ret
 705+ 9CC7
 706+ 9CC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9CC7
 708+ 9CC7 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9CCA A7           	and a
 710+ 9CCB ED 42        	sbc hl,bc
 711+ 9CCD 22 C7 88     	ld (Posicion_actual),hl
 712+ 9CD0 21 EF 88     	ld hl,Ctrl_0
 713+ 9CD3 CB DE        	set 3,(hl)
 714+ 9CD5 C9           	ret
 715+ 9CD6
 716+ 9CD6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9CD6              ;
 718+ 9CD6              ;	15/07/23
 719+ 9CD6
 720+ 9CD6              Reinicio
 721+ 9CD6
 722+ 9CD6              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9CD6
 724+ 9CD6 AF           	xor a
 725+ 9CD7 21 F4 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CDA CD F8 9C     	call Limpia_contenido_hl
 727+ 9CDD
 728+ 9CDD 21 C7 88     	ld hl,Posicion_actual
 729+ 9CE0 CD F8 9C     	call Limpia_contenido_hl
 730+ 9CE3
 731+ 9CE3 CD 2A A0     	call Inicializa_Puntero_indice_mov
 732+ 9CE6 CD B4 9F     	call Inicia_Puntero_mov
 733+ 9CE9
 734+ 9CE9 21 F6 88     	ld hl,Incrementa_puntero
 735+ 9CEC 06 05        	ld b,5
 736+ 9CEE 77           1 ld (hl),a
 737+ 9CEF 23           	inc hl
 738+ 9CF0 10 FC        	djnz 1B
 739+ 9CF2
 740+ 9CF2 21 00 89     	ld hl,Ctrl_2
 741+ 9CF5 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CF7
 743+ 9CF7 C9           	ret
 744+ 9CF8
 745+ 9CF8 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CF9 23           	inc hl
 747+ 9CFA 77           	ld (hl),a
 748+ 9CFB C9           	ret
 749+ 9CFC
 750+ 9CFC
# file closed: Direcciones.asm
1629  9CFC              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CFC              ; ------------------------------------------------------------------------
   2+ 9CFC              ;
   3+ 9CFC              ;	02/04/23
   4+ 9CFC              ;
   5+ 9CFC              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CFC              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CFC              ;
   8+ 9CFC              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CFC              ;
  10+ 9CFC              ;	Modifica: A,BC y DE.
  11+ 9CFC
  12+ 9CFC C5           Genera_coordenadas push bc
  13+ 9CFD E5           	push hl
  14+ 9CFE D5           	push de
  15+ 9CFF
  16+ 9CFF 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9D02
  18+ 9D02 7D           	ld a,l
  19+ 9D03 E6 1F        	and $1f
  20+ 9D05 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D08
  22+ 9D08 CD 71 99     	call calcula_tercio
  23+ 9D0B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D0C
  25+ 9D0C 1E 00        	ld e,0
  26+ 9D0E 7D           	ld a,l
  27+ 9D0F E6 E0        	and $e0
  28+ 9D11 28 01        	jr z,1F
  29+ 9D13 04           	inc b
  30+ 9D14
  31+ 9D14 04           1 inc b
  32+ 9D15 05           	dec b
  33+ 9D16 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D18              ;														; _ , salimos.
  35+ 9D18 1C           3 inc e
  36+ 9D19 D6 20        	sub 32
  37+ 9D1B 20 FB        	jr nz,3B
  38+ 9D1D 10 F5        	djnz 1B
  39+ 9D1F
  40+ 9D1F 7B           2 ld a,e
  41+ 9D20 32 CC 88     	ld (Coordenada_y),a
  42+ 9D23
  43+ 9D23 D1           	pop de
  44+ 9D24 E1           	pop hl
  45+ 9D25 C1           	pop bc
  46+ 9D26
  47+ 9D26 C9           	ret
  48+ 9D27
  49+ 9D27              ; ------------------------------------------------------------------------
  50+ 9D27              ;	28/05/23
  51+ 9D27              ;
  52+ 9D27              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D27              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D27              ;
  55+ 9D27              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D27              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D27              ;
  58+ 9D27              ;		DE="$120d"
  59+ 9D27              ;
  60+ 9D27              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D27              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D27              ;
  63+ 9D27              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D27
  65+ 9D27              ;	Modifica: A,BC y DE.
  66+ 9D27
  67+ 9D27
  68+ 9D27              Genera_coordenadas_disparo
  69+ 9D27
  70+ 9D27              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D27
  72+ 9D27 7D           	ld a,l
  73+ 9D28 E6 1F        	and $1f
  74+ 9D2A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D2B CD 71 99     	call calcula_tercio
  76+ 9D2E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D2F 1E 00        	ld e,0
  78+ 9D31 7D           	ld a,l
  79+ 9D32 E6 E0        	and $e0
  80+ 9D34 28 01        	jr z,1F
  81+ 9D36 04           	inc b
  82+ 9D37 1C           1 inc e
  83+ 9D38 D6 20        	sub 32
  84+ 9D3A 20 FB        	jr nz,1B
  85+ 9D3C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D3E C9           	ret
  87+ 9D3F
# file closed: Genera_coordenadas.asm
1630  9D3F              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D3F              ; Relojes y temporizaciones.
   2+ 9D3F
   3+ 9D3F              ; ------------------------------------------------------
   4+ 9D3F              ;
   5+ 9D3F              ;	16/7/23
   6+ 9D3F              ;
   7+ 9D3F              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D3F              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D3F              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D3F              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D3F              ;
  12+ 9D3F              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D3F              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D3F
  15+ 9D3F              ; Disparo_entidad db 1
  16+ 9D3F              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D3F              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D3F
  19+ 9D3F              Habilita_disparos
  20+ 9D3F
  21+ 9D3F 7E           	ld a,(hl)
  22+ 9D40 A7           	and a
  23+ 9D41 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D42
  25+ 9D42 EB           	ex de,hl
  26+ 9D43
  27+ 9D43 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D44 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D45
  30+ 9D45              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D45
  32+ 9D45 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D46 7E           	ld a,(hl)
  34+ 9D47 23           	inc hl
  35+ 9D48 77           	ld (hl),a
  36+ 9D49
  37+ 9D49 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D4A 3E 01        	ld a,1
  39+ 9D4C 77           	ld (hl),a
  40+ 9D4D C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1631  9D4E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D4E
   2+ 9D4E
   3+ 9D4E              ;   07/07/23
   4+ 9D4E              ;
   5+ 9D4E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D4E              ;
   7+ 9D4E              ;   Codificación:
   8+ 9D4E              ;
   9+ 9D4E              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D4E              ;
  11+ 9D4E              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D4E              ;
  13+ 9D4E              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D4E              ;
  15+ 9D4E              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D4E              ;
  17+ 9D4E              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D4E              ;                               ..... %01000010 Vel_up 4
  19+ 9D4E              ;                                               Vel_down 2
  20+ 9D4E              ;                               ..... $42
  21+ 9D4E              ;
  22+ 9D4E              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D4E              ;
  24+ 9D4E              ;                               ..... %01000010 Vel_left 4
  25+ 9D4E              ;                                               Vel_right 2
  26+ 9D4E              ;                               ..... $42
  27+ 9D4E              ;
  28+ 9D4E              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D4E              ;
  30+ 9D4E              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D4E              ;
  32+ 9D4E              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D4E              ;
  34+ 9D4E              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D4E              ;                                     $53
  36+ 9D4E              ;
  37+ 9D4E              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D4E              ;
  39+ 9D4E              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D4E              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D4E              ;
  42+ 9D4E              ;                       Arriba ..... $81
  43+ 9D4E              ;                       Arriba - izquierda ..... $a1
  44+ 9D4E              ;                       Arriba - derecha ..... $91
  45+ 9D4E              ;
  46+ 9D4E              ;                       Abajo ..... $41
  47+ 9D4E              ;                       Abajo - izquierda ..... $61
  48+ 9D4E              ;                       Abajo - derecha ..... $51
  49+ 9D4E              ;
  50+ 9D4E              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D4E              ;
  52+ 9D4E              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D4E              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D4E              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D4E              ;
  56+ 9D4E              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D4E              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D4E              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D4E              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D4E              ;
  61+ 9D4E              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D4E              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D4E              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D4E              ;
  65+ 9D4E              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D4E              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D4E              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D4E              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D4E
  70+ 9D4E              ; ----- ----- ----- ----- -----
  71+ 9D4E
  72+ 9D4E 7A 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D50 82 9D            defw F_1
  74+ 9D52 8C 9D            defw F_2
  75+ 9D54 96 9D            defw Codo_abajo_derecha
  76+ 9D56 CA 9D            defw Derecha_y_subiendo
  77+ 9D58 D4 9D            defw Derecha_y_subiendo_1
  78+ 9D5A DE 9D            defw F_3
  79+ 9D5C E8 9D            defw F_4
  80+ 9D5E F2 9D            defw Derecha_y_bajando
  81+ 9D60 FC 9D            defw Derecha_y_bajando_1
  82+ 9D62 06 9E            defw Derecha_y_bajando_2
  83+ 9D64 10 9E            defw Codo_derecha_abajo
  84+ 9D66 40 9E            defw Codo_abajo_izq.
  85+ 9D68 74 9E            defw Izquierda_y_subiendo
  86+ 9D6A 7E 9E            defw Izquierda_y_subiendo_1
  87+ 9D6C 88 9E            defw F_5
  88+ 9D6E 92 9E            defw F_6
  89+ 9D70 9C 9E            defw Izquierda_y_bajando
  90+ 9D72 A6 9E            defw Izquierda_y_bajando_1
  91+ 9D74 B0 9E            defw Izquierda_y_bajando_2
  92+ 9D76 BA 9E            defw Codo_izquierda_abajo
  93+ 9D78 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D7A
  95+ 9D7A 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D7E 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D82
  98+ 9D82 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D86 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D8A 08 00
 100+ 9D8C 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D90 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D94 0F FE
 102+ 9D96
 103+ 9D96 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D9A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D9E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DA2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DA6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DAA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DAE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DB2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DB6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DBA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DBE 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DC2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DC6 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9DCA
 117+ 9DCA 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9DCE 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9DD2 06 00
 119+ 9DD4
 120+ 9DD4 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9DD8 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DDC 02 00
 122+ 9DDE
 123+ 9DDE 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DE2 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DE6 04 00
 125+ 9DE8 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DEC 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DF0 08 00
 127+ 9DF2
 128+ 9DF2 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DF6 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DFA 02 00
 130+ 9DFC
 131+ 9DFC 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E00 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E04 06 00
 133+ 9E06
 134+ 9E06 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E0A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E0E 06 00
 136+ 9E10
 137+ 9E10              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E10
 139+ 9E10 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E14 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E18 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E1C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E20 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E24 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E28 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E2C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E30 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E34 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E38 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E3C 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E40
 152+ 9E40 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E48 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E50 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E54 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E58 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E5C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E60 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E64 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E68 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E6C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E70 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E74
 166+ 9E74 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E78 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E7C 06 00
 168+ 9E7E
 169+ 9E7E 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E82 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E86 02 00
 171+ 9E88
 172+ 9E88 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E8C 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E90 04 00
 174+ 9E92 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E96 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E9A 08 00
 176+ 9E9C
 177+ 9E9C 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EA0 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EA4 02 00
 179+ 9EA6
 180+ 9EA6 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EAA 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EAE 06 00
 182+ 9EB0
 183+ 9EB0 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EB4 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EB8 06 00
 185+ 9EBA
 186+ 9EBA 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EBE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EC2 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EC6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9ECA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9ECE 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9ED2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9ED6 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EDA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EDE 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EE2 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EE6 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EEA
 199+ 9EEA              ; ----- ----- ----- ----- -----
 200+ 9EEA              ;
 201+ 9EEA              ;   27/06/23
 202+ 9EEA
 203+ 9EEA              Movimiento
 204+ 9EEA
 205+ 9EEA              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EEA
 207+ 9EEA              ;    ld hl,(Posicion_actual)
 208+ 9EEA
 209+ 9EEA FB               ei
 210+ 9EEB
 211+ 9EEB 3A 00 89         ld a,(Ctrl_2)
 212+ 9EEE CB 57            bit 2,a
 213+ 9EF0 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9EF2
 215+ 9EF2 2A F2 88         ld hl,(Puntero_mov)
 216+ 9EF5 7E               ld a,(hl)
 217+ 9EF6
 218+ 9EF6              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9EF6
 220+ 9EF6              Inicia_desplazamiento.
 221+ 9EF6
 222+ 9EF6              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9EF6
 224+ 9EF6 CD EB 9F         call Ajusta_velocidad_desplazamiento
 225+ 9EF9
 226+ 9EF9              ; Iniciamos (Repetimos_mov).
 227+ 9EF9
 228+ 9EF9 7E               ld a,(hl)
 229+ 9EFA E6 0F            and $0f
 230+ 9EFC 32 F8 88         ld (Repetimos_desplazamiento),a
 231+ 9EFF 32 F9 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F02
 233+ 9F02              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F02
 235+ 9F02 23               inc hl
 236+ 9F03 7E               ld a,(hl)
 237+ 9F04 32 FB 88         ld (Cola_de_desplazamiento),a
 238+ 9F07 2B               dec hl
 239+ 9F08
 240+ 9F08 21 00 89         ld hl,Ctrl_2
 241+ 9F0B CB D6            set 2,(hl)
 242+ 9F0D
 243+ 9F0D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F0D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F0D
 246+ 9F0D              Desplazamiento_iniciado
 247+ 9F0D
 248+ 9F0D CD BF 9F         call Aplica_desplazamiento
 249+ 9F10
 250+ 9F10 3A 00 89         ld a,(Ctrl_2)
 251+ 9F13 CB 67            bit 4,a
 252+ 9F15 C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F16
 254+ 9F16 21 F8 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F19 35               dec (hl)
 256+ 9F1A C0               ret nz
 257+ 9F1B
 258+ 9F1B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F1B              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F1B              ; Analiza (Cola_de_desplazamiento).
 261+ 9F1B
 262+ 9F1B 3A FB 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F1E A7               and a
 264+ 9F1F CC 14 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F22 28 30            jr z,Reinicia_el_movimiento
 266+ 9F24
 267+ 9F24 FE FF            cp $ff
 268+ 9F26 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F28
 270+ 9F28 FE FE            cp $fe
 271+ 9F2A CC 98 9F         call z,Fijamos_bucle
 272+ 9F2D 28 25            jr z,Reinicia_el_movimiento
 273+ 9F2F
 274+ 9F2F FE FD            cp $fd
 275+ 9F31 20 11            jr nz,1F
 276+ 9F33
 277+ 9F33              ; ---
 278+ 9F33              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F33
 280+ 9F33 3A 00 89         ld a,(Ctrl_2)
 281+ 9F36 CB 5F            bit 3,a
 282+ 9F38 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F3A
 284+ 9F3A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F3A
 286+ 9F3A 21 00 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F3D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F3F
 289+ 9F3F CD A9 9F         call Inicia_Repetimos_movimiento
 290+ 9F42 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F44              ; ---
 292+ 9F44
 293+ 9F44 FE 01        1 cp 1
 294+ 9F46 CA 82 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F49
 296+ 9F49 3D               dec a
 297+ 9F4A 32 FB 88         ld (Cola_de_desplazamiento),a
 298+ 9F4D
 299+ 9F4D 3A F9 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F50 32 F8 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F53              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F53 C9               ret
 303+ 9F54
 304+ 9F54              Reinicia_el_movimiento
 305+ 9F54
 306+ 9F54 F3               di
 307+ 9F55
 308+ 9F55 3A 00 89         ld a,(Ctrl_2)
 309+ 9F58 CB 5F            bit 3,a
 310+ 9F5A 28 1B            jr z,2F
 311+ 9F5C
 312+ 9F5C              ; (Cola_de_desplazamiento)="254".
 313+ 9F5C
 314+ 9F5C 21 FA 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F5F 35               dec (hl)
 316+ 9F60 20 15            jr nz,2F
 317+ 9F62
 318+ 9F62              ; Fin de las repeticiones del último movimiento.
 319+ 9F62
 320+ 9F62 21 00 89         ld hl,Ctrl_2
 321+ 9F65 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9F67
 323+ 9F67 2A F2 88         ld hl,(Puntero_mov)
 324+ 9F6A 23               inc hl
 325+ 9F6B 23               inc hl
 326+ 9F6C 23               inc hl
 327+ 9F6D 22 F2 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9F70              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9F70 7E               ld a,(hl)
 330+ 9F71 32 FB 88         ld (Cola_de_desplazamiento),a
 331+ 9F74
 332+ 9F74 C3 1B 9F         jp Cola
 333+ 9F77
 334+ 9F77 CD B4 9F     2 call Inicia_Puntero_mov
 335+ 9F7A
 336+ 9F7A 21 00 89         ld hl,Ctrl_2
 337+ 9F7D CB 96            res 2,(hl)
 338+ 9F7F
 339+ 9F7F C3 EA 9E         jp Movimiento
 340+ 9F82
 341+ 9F82              Siguiente_desplazamiento
 342+ 9F82
 343+ 9F82              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9F82              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9F82
 346+ 9F82 21 00 89         ld hl,Ctrl_2
 347+ 9F85 CB 96            res 2,(hl)
 348+ 9F87
 349+ 9F87 2A F2 88         ld hl,(Puntero_mov)
 350+ 9F8A 23               inc hl
 351+ 9F8B 23               inc hl
 352+ 9F8C 22 F2 88         ld (Puntero_mov),hl
 353+ 9F8F
 354+ 9F8F 7E               ld a,(hl)
 355+ 9F90 A7               and a
 356+ 9F91 CC 14 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9F94 CA 54 9F         jp z,Reinicia_el_movimiento
 358+ 9F97
 359+ 9F97 C9               ret
 360+ 9F98              ; Subrutinas -----------------------------------------
 361+ 9F98              ; ---------- --------- --------- ---------- ----------
 362+ 9F98              ;
 363+ 9F98              ;   24/07/23
 364+ 9F98              ;
 365+ 9F98              ;   Fijamos_bucle
 366+ 9F98              ;
 367+ 9F98              ;
 368+ 9F98
 369+ 9F98              Fijamos_bucle
 370+ 9F98
 371+ 9F98 3A F6 88         ld a,(Incrementa_puntero)
 372+ 9F9B 3C               inc a
 373+ 9F9C 32 F7 88         ld (Incrementa_puntero_backup),a
 374+ 9F9F
 375+ 9F9F CD 14 A0         call Incrementa_Puntero_indice_mov
 376+ 9FA2 2A F0 88         ld hl,(Puntero_indice_mov)
 377+ 9FA5 22 F4 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FA8 C9               ret
 379+ 9FA9
 380+ 9FA9              ; ---------- --------- --------- ---------- ----------
 381+ 9FA9              ;
 382+ 9FA9              ;   07/7/23
 383+ 9FA9              ;
 384+ 9FA9              ;   Inicia_Repetimos_movimiento
 385+ 9FA9              ;
 386+ 9FA9              ;
 387+ 9FA9
 388+ 9FA9              Inicia_Repetimos_movimiento
 389+ 9FA9
 390+ 9FA9              ; Iniciamos (Repetimos_movimiento).
 391+ 9FA9
 392+ 9FA9 DD 2A F2 88      ld ix,(Puntero_mov)
 393+ 9FAD DD 7E 02         ld a,(ix+2)
 394+ 9FB0 32 FA 88         ld (Repetimos_movimiento),a
 395+ 9FB3
 396+ 9FB3 C9               ret
 397+ 9FB4
 398+ 9FB4              ; ---------- --------- --------- ---------- ----------
 399+ 9FB4              ;
 400+ 9FB4              ;   26/6/23
 401+ 9FB4              ;
 402+ 9FB4              ;   Inicia_Puntero_mov
 403+ 9FB4              ;
 404+ 9FB4              ;
 405+ 9FB4
 406+ 9FB4 2A F0 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FB7 5E               ld e,(hl)
 408+ 9FB8 23               inc hl
 409+ 9FB9 56               ld d,(hl)
 410+ 9FBA EB               ex de,hl
 411+ 9FBB 22 F2 88         ld (Puntero_mov),hl
 412+ 9FBE C9               ret
 413+ 9FBF
 414+ 9FBF              ; ---------- --------- --------- ---------- ----------
 415+ 9FBF              ;
 416+ 9FBF              ;   27/06/23
 417+ 9FBF              ;
 418+ 9FBF              ;   Aplica_movimiento.
 419+ 9FBF
 420+ 9FBF              Aplica_desplazamiento
 421+ 9FBF
 422+ 9FBF              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FBF
 424+ 9FBF 2A F2 88         ld hl, (Puntero_mov)
 425+ 9FC2
 426+ 9FC2 7E               ld a,(hl)
 427+ 9FC3 E6 F0            and $f0
 428+ 9FC5 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FC6
 430+ 9FC6 CB 7E            bit 7,(hl)
 431+ 9FC8 28 03            jr z,1F
 432+ 9FCA CD E8 99         call Mov_up
 433+ 9FCD 2A F2 88     1 ld hl, (Puntero_mov)
 434+ 9FD0 CB 76            bit 6,(hl)
 435+ 9FD2 28 03            jr z,2F
 436+ 9FD4 CD B7 99         call Mov_down
 437+ 9FD7 2A F2 88     2 ld hl, (Puntero_mov)
 438+ 9FDA CB 6E            bit 5,(hl)
 439+ 9FDC 28 03            jr z,3F
 440+ 9FDE CD 49 9B         call Mov_left
 441+ 9FE1 2A F2 88     3 ld hl, (Puntero_mov)
 442+ 9FE4 CB 66            bit 4,(hl)
 443+ 9FE6 C8               ret z
 444+ 9FE7 CD 2B 9A         call Mov_right
 445+ 9FEA C9               ret
 446+ 9FEB
 447+ 9FEB              ; ---------- --------- --------- ---------- ----------
 448+ 9FEB              ;
 449+ 9FEB              ;   26/06/23
 450+ 9FEB              ;
 451+ 9FEB              ;   Ajusta_velocidad_desplazamiento.
 452+ 9FEB
 453+ 9FEB              Ajusta_velocidad_desplazamiento
 454+ 9FEB
 455+ 9FEB              ; 1er byte de la cadena de movimiento.
 456+ 9FEB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ 9FEB
 458+ 9FEB CD 09 A0         call Extrae_nibble_alto
 459+ 9FEE
 460+ 9FEE 32 DC 88         ld (Vel_up),a
 461+ 9FF1 79               ld a,c
 462+ 9FF2 E6 0F            and $0f
 463+ 9FF4 32 DD 88         ld (Vel_down),a
 464+ 9FF7
 465+ 9FF7              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ 9FF7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ 9FF7
 468+ 9FF7 23               inc hl
 469+ 9FF8 CD 09 A0         call Extrae_nibble_alto
 470+ 9FFB
 471+ 9FFB 32 DA 88         ld (Vel_left),a
 472+ 9FFE 79               ld a,c
 473+ 9FFF E6 0F            and $0f
 474+ A001 32 DB 88         ld (Vel_right),a
 475+ A004
 476+ A004              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A004
 478+ A004 23               inc hl
 479+ A005 22 F2 88         ld (Puntero_mov),hl
 480+ A008 C9               ret
 481+ A009
 482+ A009 06 04        Extrae_nibble_alto ld b,4
 483+ A00B 7E               ld a,(hl)
 484+ A00C 4F               ld c,a
 485+ A00D E6 F0            and $f0
 486+ A00F CB 3F        1 srl a
 487+ A011 10 FC            djnz 1B
 488+ A013 C9               ret
 489+ A014
 490+ A014              ; ---------- --------- --------- ---------- ----------
 491+ A014              ;
 492+ A014              ;   5/7/23
 493+ A014              ;
 494+ A014              ;   Incrementa_Puntero_indice_mov
 495+ A014
 496+ A014              Incrementa_Puntero_indice_mov
 497+ A014
 498+ A014 21 F6 88         ld hl,Incrementa_puntero
 499+ A017 34               inc (hl)
 500+ A018
 501+ A018 2A F0 88         ld hl,(Puntero_indice_mov)
 502+ A01B 01 02 00         ld bc,2
 503+ A01E A7               and a
 504+ A01F 09               add hl,bc
 505+ A020 22 F0 88         ld (Puntero_indice_mov),hl
 506+ A023
 507+ A023 7E               ld a,(hl)
 508+ A024 A7               and a
 509+ A025
 510+ A025              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A025
 512+ A025              ;    jr z,$
 513+ A025
 514+ A025              ;! Reinicia el Patrón de movimiento.
 515+ A025
 516+ A025 CC 2A A0         call z,Inicializa_Puntero_indice_mov
 517+ A028
 518+ A028 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A029
 520+ A029 C9               ret
 521+ A02A
 522+ A02A
 523+ A02A              ; ---------- --------- --------- ---------- ----------
 524+ A02A              ;
 525+ A02A              ;   24/07/23
 526+ A02A              ;
 527+ A02A              ;   Inicializa_Puntero_indice_mov
 528+ A02A
 529+ A02A              Inicializa_Puntero_indice_mov
 530+ A02A
 531+ A02A              ; Existe etiqueta de bucle principal???
 532+ A02A
 533+ A02A 2A F4 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A02D 24               inc h
 535+ A02E 25               dec h
 536+ A02F 28 05            jr z,2F
 537+ A031
 538+ A031 22 F0 88         ld (Puntero_indice_mov),hl
 539+ A034 18 14            jr 3F
 540+ A036
 541+ A036              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A036
 543+ A036 3A F6 88     2 ld a,(Incrementa_puntero)
 544+ A039 47               ld b,a
 545+ A03A
 546+ A03A 2A F0 88         ld hl,(Puntero_indice_mov)
 547+ A03D 2B           1 dec hl
 548+ A03E 2B               dec hl
 549+ A03F 10 FC            djnz 1B
 550+ A041 22 F0 88         ld (Puntero_indice_mov),hl
 551+ A044
 552+ A044 AF               xor a
 553+ A045 32 F6 88         ld (Incrementa_puntero),a
 554+ A048 18 06            jr 4F
 555+ A04A
 556+ A04A 3A F7 88     3 ld a,(Incrementa_puntero_backup)
 557+ A04D 32 F6 88         ld (Incrementa_puntero),a
 558+ A050 C9           4 ret
 559+ A051
 560+ A051
 561+ A051
# file closed: Patrones_de_mov.asm
1632  A051              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A051              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A051              ;
   3+ A051              ;	4/9/23
   4+ A051              ;
   5+ A051              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A051
   7+ A051              ;	ADC HL,SP	LD (addr),SP
   8+ A051              ;	ADD HL,SP	LD SP,(addr)
   9+ A051              ;	ADD IX,SP	LD SP,nn
  10+ A051              ; 	ADD IY,SP	LD SP,HL
  11+ A051              ;				LD SP,IX
  12+ A051              ;	DEC SP		LD SP,IY
  13+ A051
  14+ A051              ;	EX (SP),HL
  15+ A051              ;	EX (SP),IX
  16+ A051              ;	EX (SP),IY
  17+ A051
  18+ A051              ;	INC SP
  19+ A051
  20+ A051                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 13 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD              ; Disparo o entidad?
  41+ 7FAD
  42+ 7FAD 3A 02 89         ld a,(Ctrl_1)
  43+ 7FB0 CB 47            bit 0,a
  44+ 7FB2 28 05            jr z,2F
  45+ 7FB4
  46+ 7FB4 2A 1B 89         ld hl,(Stack_snapshot_disparos)
  47+ 7FB7 18 0F            jr 4F
  48+ 7FB9
  49+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  50+ 7FB9
  51+ 7FB9 3A EF 88     2 ld a,(Ctrl_0)
  52+ 7FBC CB 77            bit 6,a
  53+ 7FBE 28 05            jr z,7F
  54+ 7FC0
  55+ 7FC0              ; Guardamos foto de Amadeus.
  56+ 7FC0
  57+ 7FC0 2A 21 89         ld hl,(End_Snapshot_Amadeus)
  58+ 7FC3 18 03            jr 4F
  59+ 7FC5
  60+ 7FC5 2A 19 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  61+ 7FC8
  62+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  63+ 7FCA
  64+ 7FCA D1           1 pop de
  65+ 7FCB 73               ld (hl),e
  66+ 7FCC 23               inc hl
  67+ 7FCD 72               ld (hl),d
  68+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  69+ 7FCF 10 F9            djnz 1B
  70+ 7FD1
  71+ 7FD1              ; Disparo o entidad ?
  72+ 7FD1
  73+ 7FD1 3A 02 89         ld a,(Ctrl_1)
  74+ 7FD4 CB 47            bit 0,a
  75+ 7FD6 28 05            jr z,5F
  76+ 7FD8
  77+ 7FD8 22 1B 89         ld (Stack_snapshot_disparos),hl
  78+ 7FDB 18 13            jr 6F
  79+ 7FDD
  80+ 7FDD              ; Entidad o Amadeus ?
  81+ 7FDD
  82+ 7FDD 3A EF 88     5 ld a,(Ctrl_0)
  83+ 7FE0 CB 77            bit 6,a
  84+ 7FE2 28 09            jr z,8F
  85+ 7FE4
  86+ 7FE4 22 21 89         ld (End_Snapshot_Amadeus),hl
  87+ 7FE7 ED 7B 13 89      ld sp,(Stack)
  88+ 7FEB FB               ei
  89+ 7FEC C9               ret
  90+ 7FED
  91+ 7FED 22 19 89     8 ld (Stack_snapshot),hl
  92+ 7FF0 ED 7B 13 89  6 ld sp,(Stack)
  93+ 7FF4
  94+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  95+ 7FF4
  96+ 7FF4 5D               ld e,l
  97+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  98+ 7FF6
  99+ 7FF6 2A 37 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 100+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 101+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 102+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
 103+ 7FFC
 104+ 7FFC FB               ei
 105+ 7FFD C9               ret
 106+ 7FFE
 107+ 7FFE              ; ------------------------------------------------
 108+ 7FFE              ;
 109+ 7FFE              ;   3/08/23
 110+ 7FFE              ;
 111+ 7FFE              ;   La rutina estará situada justo después de:
 112+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 113+ 7FFE              ;
 114+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 115+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 116+ 7FFE
 117+ 7FFE                  org $72ac
 118+ 72AC
 119+ 72AC              Gestiona_albumes_de_fotos
 120+ 72AC
 121+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 122+ 72AC              ;   Vaciamos Album_de_fotos.
 123+ 72AC
 124+ 72AC              ;   Album_de_fotos. Contiene datos ???
 125+ 72AC
 126+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 127+ 72AF 7E               ld a,(hl)
 128+ 72B0 A7               and a
 129+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 130+ 72B3
 131+ 72B3 2A 1D 89         ld hl,(End_Snapshot)
 132+ 72B6 01 00 70         ld bc,Album_de_fotos
 133+ 72B9 11 01 70         ld de,Album_de_fotos+1
 134+ 72BC AF               xor a
 135+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 136+ 72BE
 137+ 72BE CD 4E 73         call Limpia_album
 138+ 72C1
 139+ 72C1 21 00 00         ld hl,0
 140+ 72C4 22 1D 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 141+ 72C7
 142+ 72C7              ; ----- ----- ----- -----
 143+ 72C7
 144+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 145+ 72C7
 146+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 147+ 72CA 7E               ld a,(hl)
 148+ 72CB A7               and a
 149+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 150+ 72CE              ;                               ; _ información del album2 al album1.
 151+ 72CE
 152+ 72CE              ; ----- ----- ----- -----
 153+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 154+ 72CE
 155+ 72CE 2A 23 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 156+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 157+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 158+ 72D7
 159+ 72D7 CD 4E 73         call Limpia_album
 160+ 72DA
 161+ 72DA              ;   Calculamos (End_Snapshot)
 162+ 72DA
 163+ 72DA A7               and a
 164+ 72DB ED 4A            adc hl,bc
 165+ 72DD 22 1D 89         ld (End_Snapshot),hl
 166+ 72E0
 167+ 72E0              ;   Limpiamos Album_de_fotos_1.
 168+ 72E0
 169+ 72E0 2A 23 89         ld hl,(End_Snapshot_1)
 170+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 171+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 172+ 72E9 AF               xor a
 173+ 72EA 02               ld (bc),a
 174+ 72EB
 175+ 72EB CD 4E 73         call Limpia_album
 176+ 72EE
 177+ 72EE 21 00 00         ld hl,0
 178+ 72F1 22 23 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 179+ 72F4
 180+ 72F4              ; ----- ----- ----- -----
 181+ 72F4
 182+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 183+ 72F4
 184+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 185+ 72F7 7E               ld a,(hl)
 186+ 72F8 A7               and a
 187+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 188+ 72FB              ;                               ; _ información del album3 al album2.
 189+ 72FB              ; ----- ----- ----- -----
 190+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 191+ 72FB
 192+ 72FB 2A 27 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 193+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 194+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 195+ 7304
 196+ 7304 CD 4E 73         call Limpia_album
 197+ 7307
 198+ 7307              ;   Calculamos (End_Snapshot_1):
 199+ 7307
 200+ 7307 A7               and a
 201+ 7308 ED 4A            adc hl,bc
 202+ 730A 22 23 89         ld (End_Snapshot_1),hl
 203+ 730D
 204+ 730D              ;   Limpiamos Album_de_fotos_2.
 205+ 730D
 206+ 730D 2A 27 89         ld hl,(End_Snapshot_2)
 207+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 208+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 209+ 7316 AF               xor a
 210+ 7317 02               ld (bc),a
 211+ 7318
 212+ 7318 CD 4E 73         call Limpia_album
 213+ 731B
 214+ 731B 21 00 00         ld hl,0
 215+ 731E 22 27 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 216+ 7321
 217+ 7321              ; ----- ----- ----- -----
 218+ 7321
 219+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 220+ 7321
 221+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 222+ 7324 7E               ld a,(hl)
 223+ 7325 A7               and a
 224+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 225+ 7327
 226+ 7327              ; ----- ----- ----- -----
 227+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 228+ 7327
 229+ 7327 2A 2B 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 230+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 231+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 232+ 7330
 233+ 7330 CD 4E 73         call Limpia_album
 234+ 7333
 235+ 7333              ;   Calculamos (End_Snapshot_2):
 236+ 7333
 237+ 7333 A7               and a
 238+ 7334 ED 4A            adc hl,bc
 239+ 7336 22 27 89         ld (End_Snapshot_2),hl
 240+ 7339
 241+ 7339              ;   Limpiamos Album_de_fotos_3.
 242+ 7339
 243+ 7339 2A 2B 89         ld hl,(End_Snapshot_3)
 244+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 245+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 246+ 7342 AF               xor a
 247+ 7343 02               ld (bc),a
 248+ 7344
 249+ 7344 CD 4E 73         call Limpia_album
 250+ 7347
 251+ 7347 21 00 00         ld hl,0
 252+ 734A 22 2B 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 253+ 734D C9               ret
 254+ 734E
 255+ 734E              ; ----------------------------------------------------
 256+ 734E              ;
 257+ 734E              ;   10/8/23
 258+ 734E              ;
 259+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 260+ 734E              ;
 261+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 262+ 734E              ;           BC ..... Dirección de inicio del álbum.
 263+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 264+ 734E
 265+ 734E              ;    ld hl,(End_Snapshot)
 266+ 734E              ;    ld bc,Album_de_fotos
 267+ 734E              ;    ld de,Album_de_fotos+1
 268+ 734E
 269+ 734E              ;   MODIFICA: A,HL,BC y DE.
 270+ 734E
 271+ 734E              Limpia_album
 272+ 734E D5               push de                     ; Guardo DESTINO.
 273+ 734F C5               push bc                     ; Guardo ORIGEN.
 274+ 7350 ED 42            sbc hl,bc
 275+ 7352 4D               ld c,l
 276+ 7353 44               ld b,h
 277+ 7354 E1               pop hl
 278+ 7355 C5               push bc
 279+ 7356 ED B0            ldir
 280+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 281+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 282+ 735A C9               ret                         ; _ a otro).
 283+ 735B              ;
 284+ 735B
 285+ 735B              ; -----------------------------------------------
 286+ 735B
 287+ 735B
 288+ 735B
 289+ 735B
 290+ 735B
# file closed: Guarda_foto_registros.asm
1633  735B
1634  735B              	SAVESNA "Pruebas.sna", START
1635  735B
1636  735B
1637  735B
1638  735B
# file closed: Banco_de_pruebas.asm
