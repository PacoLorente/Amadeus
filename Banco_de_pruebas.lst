# file opened: Banco_de_pruebas.asm
   1  0000              ;	29/12/23
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 22 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ;! debuggg
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  39  AA15
  40  AA15 3E 02        	ld a,2
  41  AA17 D3 FE        	out ($fe),a
  42  AA19 CD A9 8E     	call Pinta_entidades									; Borde rojo.
  43  AA1C
  44  AA1C              ;	ld a,6
  45  AA1C              ;	out ($fe),a
  46  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  47  AA1C
  48  AA1C 3E 07        	ld a,7
  49  AA1E D3 FE        	out ($fe),a												; Borde blanco.
  50  AA20              ;	call Guarda_parametros_DRAW
  51  AA20              ;	call Restore_Amadeus
  52  AA20
  53  AA20              ; Posible colisión Entidad-Amadeus ???
  54  AA20
  55  AA20              ;	ld a,(Impacto2)
  56  AA20              ;	bit 2,a
  57  AA20              ;	jr z,1F
  58  AA20
  59  AA20              ;	call Detecta_colision_nave_entidad
  60  AA20
  61  AA20              ;1 ld a,4
  62  AA20              ;	out ($fe),a
  63  AA20              ;	call Gestiona_Amadeus
  64  AA20
  65  AA20              ;	ld a,7
  66  AA20              ;	out ($fe),a											; Borde blanco.
  67  AA20              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA20              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA20
  70  AA20              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA20
  72  AA20              ;	call Recupera_parametros_DRAW
  73  AA20 CD B9 8E     	call Actualiza_relojes
  74  AA23
  75  AA23 21 2C 89     	ld hl,Ctrl_3
  76  AA26 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA28
  78  AA28 FD E1        	pop iy
  79  AA2A DD E1        	pop ix
  80  AA2C F1           	pop af
  81  AA2D C1           	pop bc
  82  AA2E D1           	pop de
  83  AA2F E1           	pop hl
  84  AA30 D9           	exx
  85  AA31 C1           	pop bc
  86  AA32 D1           	pop de
  87  AA33 E1           	pop hl
  88  AA34 08           	ex af,af'
  89  AA35 F1           	pop af
  90  AA36 08           	ex af,af'
  91  AA37 D9           	exx
  92  AA38
  93  AA38 ED 7B 22 89  	ld sp,(Stack_3)
  94  AA3C
  95  AA3C FB           	ei
  96  AA3D
  97  AA3D 3E 01        	ld a,1												; Borde azul.
  98  AA3F D3 FE        	out ($fe),a
  99  AA41
 100  AA41 C9           	ret
 101  AA42
 102  AA42              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA42
 104  AA42              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA42              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA42              ;
   3+ AA42              ;	17/02/23
   4+ AA42              ;
   5+ AA42              ;	Sprites e índices.
   6+ AA42
   7+ AA42              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas_de_entidades						; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40           	db $40											; (Ctrl_0).
 148+ 85AF
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 190+ 85EF 00 00        	defw 0 											; Contador_de_mov_masticados
 191+ 85F1
 192+ 85F1 00           	db 0											; (Ctrl_0).
 193+ 85F2
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 235+ 8632 00 00        	defw 0 											; Contador_de_mov_masticados
 236+ 8634
 237+ 8634 00           	db 0											; (Ctrl_0).
 238+ 8635
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 280+ 8675 00 00        	defw 0 											; Contador_de_mov_masticados
 281+ 8677
 282+ 8677 00           	db 0											; (Ctrl_0).
 283+ 8678
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 325+ 86B8 00 00        	defw 0 											; Contador_de_mov_masticados
 326+ 86BA
 327+ 86BA 00           	db 0											; (Ctrl_0).
 328+ 86BB
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 370+ 86FB 00 00        	defw 0 											; Contador_de_mov_masticados
 371+ 86FD
 372+ 86FD 00           	db 0											; (Ctrl_0).
 373+ 86FE
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 415+ 873E 00 00        	defw 0 											; Contador_de_mov_masticados
 416+ 8740
 417+ 8740 00           	db 0											; (Ctrl_0).
 418+ 8741
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 460+ 8781 00 00        	defw 0 											; Contador_de_mov_masticados
 461+ 8783
 462+ 8783 00           	db 0											; (Ctrl_0).
 463+ 8784
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AB 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 A1 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA 03           	db 3											; (Frames_explosion).
 501+ 87AB
 502+ 87AB
 503+ 87AB 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 504+ 87AD 02           	db %00000010									; (Attr).
 505+ 87AE A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 506+ 87B0 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 507+ 87B2 40 50        	defw $5040                                      ; (Posicion_inicio).
 508+ 87B4 01           	db 1											; (Cuad_objeto).
 509+ 87B5 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 510+ 87B9 A1 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 511+ 87BB 03           	db 3											; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 106  87BC              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BC              ; 13/05/23
   2+ 87BC
   3+ 87BC              Indice_de_niveles
   4+ 87BC
   5+ 87BC CA 87        	defw Nivel_1
   6+ 87BE CF 87        	defw Nivel_2
   7+ 87C0 DC 87        	defw Nivel_3
   8+ 87C2 EC 87        	defw Nivel_4
   9+ 87C4 FE 87        	defw Nivel_5
  10+ 87C6              ;	...
  11+ 87C6              ;	...
  12+ 87C6              ;	+ Niveles ...
  13+ 87C6
  14+ 87C6 00 00        	defw 0
  15+ 87C8 00 00        	defw 0
  16+ 87CA
  17+ 87CA 04           Nivel_1 db 4	                                ; Nº de entidades.
  18+ 87CB 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CF 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D4 01 02
  21+ 87D6 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87DA 01 02
  22+ 87DC 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87E1 01
  24+ 87E2 03 01 01 01  	db 3,1,1,1,1
  24+ 87E6 01
  25+ 87E7 03 01 01 01  	db 3,1,1,1,1
  25+ 87EB 01
  26+ 87EC 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87F1 01
  28+ 87F2 04 01 01 01  	db 4,1,1,1,1
  28+ 87F6 01
  29+ 87F7 04 01 01 01  	db 4,1,1,1,1
  29+ 87FB 01
  30+ 87FC 02 03        	db 2,3
  31+ 87FE 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8803 01
  33+ 8804 05 01 01 01  	db 5,1,1,1,1
  33+ 8808 01
  34+ 8809 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880D 01
  35+ 880E 05 01 01 01  	db 5,1,1,1,1
  35+ 8812 01
  36+ 8813
  37+ 8813              ;---------------------------------------------------------------------------------------------------------------
  38+ 8813              ;
  39+ 8813              ;   5/1/24
  40+ 8813              ;
  41+ 8813              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8813              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8813              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8813              ;	_en la caja DRAW correspondiente.
  45+ 8813              ;
  46+ 8813              ;	MODIFICA: HL,DE y A.
  47+ 8813              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8813
  49+ 8813              Inicializa_Punteros_de_nivel
  50+ 8813
  51+ 8813 21 BC 87     	ld hl,Indice_de_niveles
  52+ 8816 22 4A 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8819 CD 3B 8D     	call Extrae_address
  54+ 881C 7E           	ld a,(hl)
  55+ 881D 32 16 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8820 23           	inc hl
  57+ 8821 22 4C 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8824 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8825
  60+ 8825              ;---------------------------------------------------------------------------------------------------------------
  61+ 8825              ;
  62+ 8825              ;   5/1/24
  63+ 8825              ;
  64+ 8825              ;	Destruye A,BC,HL,DE
  65+ 8825
  66+ 8825              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 8825              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 8825
  69+ 8825              Prepara_cajas_de_entidades
  70+ 8825
  71+ 8825              ; Preparamos los punteros de las cajas de entidades:
  72+ 8825
  73+ 8825 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 8828 CD 3B 8D     	call Extrae_address
  75+ 882B CD 68 88     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 882E              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 882E
  78+ 882E CD AB 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8831
  80+ 8831 2A 4C 89     	ld hl,(Datos_de_nivel)
  81+ 8834
  82+ 8834              ; En este punto:
  83+ 8834              ;
  84+ 8834              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 8834              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 8834
  87+ 8834 C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 8835
  89+ 8835 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 8836 CD 56 88     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 8839
  92+ 8839 21 96 87     	ld hl,Indice_de_entidades
  93+ 883C CD 5E 88     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 883F              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 883F
  96+ 883F CD 72 88     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 8842
  98+ 8842 2A 14 89     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 8845 CD 3B 8D     	call Extrae_address
 100+ 8848 CD 68 88     	call Avanza_caja_de_entidades
 101+ 884B
 102+ 884B 2A 4C 89     	ld hl,(Datos_de_nivel)
 103+ 884E 23           	inc hl
 104+ 884F 22 4C 89     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 8852
 106+ 8852 C1           	pop bc
 107+ 8853 10 DF        	djnz 1B
 108+ 8855
 109+ 8855 C9           	ret
 110+ 8856
 111+ 8856              ;	------------------------------------------------------------------------------------
 112+ 8856              ;
 113+ 8856              ;	5/1/24
 114+ 8856              ;
 115+ 8856              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 116+ 8856              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 117+ 8856
 118+ 8856 CB 27        Calcula_salto_en_BC sla a
 119+ 8858 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 120+ 885A 4F           	ld c,a
 121+ 885B 06 00        	ld b,0
 122+ 885D C9           	ret
 123+ 885E
 124+ 885E              ; ------------------------------------------------------------------
 125+ 885E              ;
 126+ 885E              ;	5/1/24
 127+ 885E              ;
 128+ 885E              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 129+ 885E              ;	Actualiza (Datos_de_entidad) con esa dirección.
 130+ 885E
 131+ 885E A7           Situa_en_datos_de_entidad and a
 132+ 885F ED 4A        	adc hl,bc
 133+ 8861 CD 3B 8D     	call Extrae_address
 134+ 8864 22 1C 89         ld (Datos_de_entidad),hl
 135+ 8867 C9           	ret
 136+ 8868
 137+ 8868              ; ------------------------------------------------------------------
 138+ 8868
 139+ 8868 22 10 89     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 140+ 886B 13           	inc de
 141+ 886C 13           	inc de
 142+ 886D EB           	ex de,hl
 143+ 886E 22 14 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 144+ 8871 C9           	ret
 145+ 8872
 146+ 8872              ; ----------------------------------------------------------------------------------------------------------
 147+ 8872              ;
 148+ 8872              ;	5/1/24
 149+ 8872              ;
 150+ 8872              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 151+ 8872
 152+ 8872              Datos_de_entidad_a_caja
 153+ 8872
 154+ 8872              ; En este punto:
 155+ 8872              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 156+ 8872
 157+ 8872 ED 5B 10 89  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 158+ 8876
 159+ 8876 01 02 00     	ld bc,2
 160+ 8879 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 161+ 887B              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 162+ 887B 01 07 00     	ld bc,7
 163+ 887E CD A5 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 164+ 8881
 165+ 8881 01 05 00     	ld bc,5
 166+ 8884 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 167+ 8886              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 168+ 8886 01 04 00     	ld bc,4
 169+ 8889 CD A5 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 170+ 888C
 171+ 888C 01 07 00     	ld bc,7
 172+ 888F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 173+ 8891              ;												; HL, (origen), apunta ahora al .db (Puntero_indice_mov), hay que situar DE.
 174+ 8891
 175+ 8891 01 18 00     	ld bc,24
 176+ 8894 CD A5 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_indice_mov).
 177+ 8897
 178+ 8897 01 02 00     	ld bc,2
 179+ 889A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 180+ 889C              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 181+ 889C
 182+ 889C 01 0F 00     	ld bc,15
 183+ 889F CD A5 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 184+ 88A2
 185+ 88A2 7E           	ld a,(hl)
 186+ 88A3 12           	ld (de),a 									; Vuelco (Frames_explosion).
 187+ 88A4
 188+ 88A4 C9           	ret
 189+ 88A5
 190+ 88A5              ; ---------- -------------- ----------------
 191+ 88A5
 192+ 88A5 EB           Situa_DE ex de,hl
 193+ 88A6 A7           	and a
 194+ 88A7 ED 4A        	adc hl,bc
 195+ 88A9 EB           	ex de,hl
 196+ 88AA C9           	ret
 197+ 88AB
 198+ 88AB              ;---------------------------------------------------------------------------------------------------------------
 199+ 88AB              ;
 200+ 88AB              ;	5/1/24
 201+ 88AB              ;
 202+ 88AB              ;	INICIALIZA (Numero_parcial_de_entidades).
 203+ 88AB              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 204+ 88AB              ;
 205+ 88AB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 206+ 88AB              ;
 207+ 88AB              ;	(Numero_parcial_de_entidades)="7".
 208+ 88AB              ;
 209+ 88AB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 210+ 88AB              ;
 211+ 88AB              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 212+ 88AB              ;
 213+ 88AB              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 214+ 88AB              ;	MODIFICA: A y B.
 215+ 88AB              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 216+ 88AB
 217+ 88AB              Inicializa_Numero_parcial_de_entidades
 218+ 88AB
 219+ 88AB              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 220+ 88AB
 221+ 88AB 3A 16 89     	ld a,(Numero_de_entidades)
 222+ 88AE A7           	and a
 223+ 88AF
 224+ 88AF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 225+ 88AF              ;	jr z,$
 226+ 88AF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 227+ 88AF
 228+ 88AF 20 03        	jr nz,3F
 229+ 88B1
 230+ 88B1              ; ---------- ---------- ----------
 231+ 88B1
 232+ 88B1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 233+ 88B1              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 234+ 88B1
 235+ 88B1 CD 13 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 236+ 88B4
 237+ 88B4              ; ---------- ---------- ----------
 238+ 88B4
 239+ 88B4 3A 16 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 240+ 88B7 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 241+ 88B9 38 08        	jr c,1F
 242+ 88BB
 243+ 88BB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 244+ 88BB              ; Actualizamos variables.
 245+ 88BB
 246+ 88BB 3E 07        	ld a,7
 247+ 88BD 32 17 89     	ld (Numero_parcial_de_entidades),a
 248+ 88C0 47           	ld b,a
 249+ 88C1 18 04        	jr 2F
 250+ 88C3
 251+ 88C3              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 252+ 88C3              ; (Numero_de_entidades)="0".
 253+ 88C3
 254+ 88C3 32 17 89     1 ld (Numero_parcial_de_entidades),a
 255+ 88C6 47           	ld b,a
 256+ 88C7 C9           2 ret
# file closed: Niveles.asm
 107  88C8
 108  88C8              ; ******************************************************************************************************************************************************************************************
 109  88C8              ; Constantes.
 110  88C8              ; ******************************************************************************************************************************************************************************************
 111  88C8              ;
 112  88C8              ; 25/12/23
 113  88C8
 114  88C8              ;
 115  88C8              ; Constantes.
 116  88C8              ;
 117  88C8
 118  88C8              Sprite_vacio equ $f000
 119  88C8              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  88C8              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  88C8              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  88C8              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  88C8
 124  88C8              Almacen_de_movimientos_masticados_Entidad_1 equ $5cd0	; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  88C8              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 126  88C8              ;														; 4799 bytes, 4,8Kb.
 127  88C8              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  88C8              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  88C8              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  88C8              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  88C8              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  88C8
 133  88C8              ;														; 55 Bytes.
 134  88C8              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  88C8              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  88C8
 137  88C8              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  88C8
 139  88C8              ; ******************************************************************************************************************************************************************************************
 140  88C8              ; Variables.
 141  88C8              ; ******************************************************************************************************************************************************************************************
 142  88C8              ;
 143  88C8              ; 25/12//23
 144  88C8              ;
 145  88C8              ; Variables de DRAW. (Motor principal).
 146  88C8              ;
 147  88C8              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 148  88C8
 149  88C8 00           Filas db 0												; Filas. [DRAW]
 150  88C9 00           Columns db 0  											; Nº de columnas. [DRAW]
 151  88CA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 152  88CC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 153  88CE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 154  88CF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 155  88D0
 156  88D0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 157  88D0
 158  88D0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 159  88D1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 160  88D1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 161  88D1 00           Attr db 0												; Atributos de la entidad:
 162  88D2
 163  88D2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 164  88D2              ;
 165  88D2              ;	COLORES: 0 ..... NEGRO
 166  88D2              ;    		 1 ..... AZUL
 167  88D2              ; 			 2 ..... ROJO
 168  88D2              ;			 3 ..... MAGENTA
 169  88D2              ; 			 4 ..... VERDE
 170  88D2              ; 			 5 ..... CIAN
 171  88D2              ;			 6 ..... AMARILLO
 172  88D2              ; 			 7 ..... BLANCO
 173  88D2
 174  88D2 00 00        Indice_Sprite_der defw 0
 175  88D4 00 00        Indice_Sprite_izq defw 0
 176  88D6 00 00        Puntero_DESPLZ_der defw 0
 177  88D8 00 00        Puntero_DESPLZ_izq defw 0
 178  88DA
 179  88DA 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 180  88DC 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 181  88DD
 182  88DD              ; Variables de objeto. (Características).
 183  88DD
 184  88DD 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 185  88DE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 186  88DF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 187  88E0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 188  88E1
 189  88E1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  88E2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  88E2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  88E2 00 00 00...  Variables_de_borrado ds 6
 193  88E8
 194  88E8 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 195  88EA 00 00        	defw 0
 196  88EC 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 197  88EE 00 00 00 00  	db 0,0,0,0
 198  88F2
 199  88F2 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 200  88F4              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 201  88F4
 202  88F4 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
 203  88F6
 204  88F6              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 205  88F6              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 206  88F6
 207  88F6 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 208  88F8              ;														; _palabras que componen el "movimiento_masticado".
 209  88F8
 210  88F8              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 211  88F8
 212  88F8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  88F9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  88F9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  88F9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  88F9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  88F9              ;
 218  88F9              ; 														DESCRIPCIÖN:
 219  88F9              ;
 220  88F9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  88F9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  88F9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  88F9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  88F9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  88F9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  88F9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  88F9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  88F9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  88F9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  88F9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  88F9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  88F9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  88F9              ;
 234  88F9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  88F9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  88F9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  88F9
 238  88F9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 239  88F9
 240  88F9 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 241  88FB 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 242  88FD 00 00        Puntero_indice_mov_bucle defw 0							;
 243  88FF              ;
 244  88FF              ;
 245  88FF 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 246  8900              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 247  8900              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 248  8900 00           Incrementa_puntero_backup db 0
 249  8901 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 250  8902              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 251  8902 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 252  8903 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 253  8904 00           Cola_de_desplazamiento db 0								; Este byte indica:
 254  8905              ;
 255  8905              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 256  8905              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 257  8905              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 258  8905              ;
 259  8905              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 260  8905              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 261  8905              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 262  8905              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 263  8905              ;
 264  8905              ;														;	"$ff" ..... Bucle infinito de repetición.
 265  8905              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 266  8905              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 267  8905
 268  8905
 269  8905              ; Variables de funcionamiento. [DRAW].
 270  8905
 271  8905 00           Columnas db 0
 272  8906 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8908              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8908 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8909
 276  8909              ; variables de control general.
 277  8909
 278  8909 00           Ctrl_2 db 0
 279  890A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 280  890A              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 281  890A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 282  890A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 283  890A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 284  890A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 285  890A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 286  890A              ;
 287  890A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 288  890A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 289  890A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 290  890A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 291  890A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 292  890A              ;														BIT 4, ???
 293  890A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 294  890A
 295  890A 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 296  890B
 297  890B              ;! 67 Bytes por entidad.
 298  890B
 299  890B              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 300  890B              ;					         		---------;      ;---------
 301  890B
 302  890B
 303  890B              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 304  890B
 305  890B 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 306  890D
 307  890D 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 308  890E
 309  890E              ;														DESCRIPCIÓN:
 310  890E              ;
 311  890E              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 312  890E              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 313  890E              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 314  890E              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 315  890E              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 316  890E              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 317  890E
 318  890E              ;														BIT 3, Recarga de nueva oleada.
 319  890E              ;														BIT 4, Recarga de nueva oleada.
 320  890E              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 321  890E              ;														BIT 6, **** Frame completo.
 322  890E              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 323  890E
 324  890E 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 325  8910              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 326  8910              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 327  8910              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 328  8910
 329  8910              ; Gestión de ENTIDADES y CAJAS.
 330  8910
 331  8910 00 00        Puntero_store_caja defw 0
 332  8912 00 00        Puntero_restore_caja defw 0
 333  8914 00 00        Indice_restore_caja defw 0
 334  8916 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 335  8917 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 336  8918 00           Entidades_en_curso db 0									; ..... ..... .....
 337  8919 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 338  891A              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 339  891A              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 340  891A              ;														; _ (Numero_de_malotes)="0".
 341  891A 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 342  891C 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 343  891E              ;														; _ puntero (Indice_entidades).
 344  891E
 345  891E              ;---------------------------------------------------------------------------------------------------------------
 346  891E              ;
 347  891E              ;	18/11/23
 348  891E              ;
 349  891E              ;	Álbumes.
 350  891E
 351  891E 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 352  8920              ;														; _variable para almacenar lo posición del puntero_
 353  8920              ; 														; _de pila, SP.
 354  8920 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 355  8922              ;														; La utiliza la rutina [Extrae_foto_registros].
 356  8922 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 357  8924 00 70        Stack_snapshot defw Album_de_fotos
 358  8926 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 359  8928
 360  8928              ;End_Snapshot defw Album_de_fotos
 361  8928              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 362  8928 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 363  892A              ;														; _el snapshot de los registros del siguiente disparo.
 364  892A              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 365  892A AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 366  892C
 367  892C 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 368  892D              ;
 369  892D              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 370  892D              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 371  892D              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 372  892D              ;																_ no se inicia una nueva "Entidad_guía".
 373  892D              ; Gestión de Disparos.
 374  892D
 375  892D 00           Numero_de_disparotes db 0
 376  892E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 377  8930 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 378  8932 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 379  8933              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 380  8933              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 381  8933 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 382  8935              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 383  8935              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 384  8935              ;														; _produzca colisión.
 385  8935 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 386  8937              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 387  8937 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 388  893A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 389  893A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 390  893D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 391  893D 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 392  893E
 393  893E              ;---------------------------------------------------------------------------------------------------------------
 394  893E
 395  893E              ; Relojes y temporizaciones.
 396  893E
 397  893E 00           Contador_de_frames db 0
 398  893F 00           Contador_de_frames_2 db 0
 399  8940
 400  8940 04           Clock_explosion db 4
 401  8941 14           Clock_Entidades_en_curso db 20
 402  8942 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 403  8943              ;														; Repite la oleada de entidades.
 404  8943 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 405  8944 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 406  8945 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 407  8946
 408  8946 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 409  8947 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 410  8948 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 411  8949
 412  8949              ;---------------------------------------------------------------------------------------------------------------
 413  8949
 414  8949              ; Gestión de NIVELES.
 415  8949
 416  8949 00           Nivel db 0												; Nivel actual del juego.
 417  894A 00 00        Puntero_indice_NIVELES defw 0
 418  894C 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 419  894E              ; 														; _ que definen el NIVEL.
 420  894E              ; Y todo comienza aquí .....
 421  894E              ;
 422  894E              ; 	INICIO  *************************************************************************************************************************************************************************
 423  894E              ;
 424  894E              ;	5/1/24
 425  894E
 426  894E              START
 427  894E
 428  894E 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 429  8951 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 430  8953 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 431  8955 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 432  8957 F3           	DI
 433  8958
 434  8958 3E 07        	ld a,%00000111
 435  895A CD C4 99     	call Cls
 436  895D
 437  895D CD 18 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 438  8960
 439  8960              ; INICIALIZACIÓN.
 440  8960
 441  8960 CD 13 88     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 442  8963              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 443  8963              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 444  8963              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 445  8963 CD 25 88     4 call Prepara_cajas_de_entidades
 446  8966
 447  8966
 448  8966 CD A3 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 449  8969              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 450  8969 CD C8 8D     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 451  896C
 452  896C 21 17 89     	ld hl,Numero_parcial_de_entidades
 453  896F 46           	ld b,(hl)
 454  8970 04           	inc b
 455  8971 05           	dec b
 456  8972 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 457  8974
 458  8974              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 459  8974              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 460  8974              ;	Pintamos el resto de entidades:
 461  8974
 462  8974              ;	INICIA ENTIDADES !!!!!
 463  8974
 464  8974 C5           1 push bc  												; Guardo el contador de entidades.
 465  8975 CD 97 8B     	call Inicia_entidad
 466  8978 C1           	pop bc
 467  8979 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 468  897B
 469  897B              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 470  897B              ; (Esto se dá cuando se inicia una nueva oleada).
 471  897B
 472  897B 3A 0D 89     	ld a,(Ctrl_1)
 473  897E CB 5F        	bit 3,a
 474  8980 20 1B        	jr nz,5F											; Loop
 475  8982
 476  8982              ; 	INICIA AMADEUS !!!!!
 477  8982
 478  8982 CD EF 8D     3 call Restore_Amadeus
 479  8985 CD 41 8D     	call Inicia_Puntero_objeto
 480  8988 CD B7 93     	call Draw
 481  898B CD 16 71     	call Guarda_foto_registros
 482  898E CD 6C 8E     	call Guarda_datos_de_borrado_Amadeus
 483  8991
 484  8991 11 7E 85     	ld de,Amadeus_db
 485  8994 CD 01 8E     	call Store_Amadeus
 486  8997
 487  8997              ; 	INICIA DISPAROS !!!!!
 488  8997
 489  8997 CD B9 8C     	call Inicia_Puntero_Disparo_Entidades
 490  899A CD C0 8C     	call Inicia_Puntero_Disparo_Amadeus
 491  899D
 492  899D              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 493  899D
 494  899D CD A3 8C     5 call Inicia_punteros_de_cajas
 495  89A0 CD C8 8D     	call Restore_entidad
 496  89A3
 497  89A3 3A 0D 89     	ld a,(Ctrl_1)
 498  89A6 CB 5F        	bit 3,a
 499  89A8 28 07        	jr z,6F
 500  89AA
 501  89AA              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 502  89AA
 503  89AA 21 0D 89     	ld hl,Ctrl_1
 504  89AD CB 9E        	res 3,(hl)
 505  89AF 18 07        	jr Main
 506  89B1
 507  89B1              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 508  89B1
 509  89B1 21 2C 89     6 ld hl,Ctrl_3
 510  89B4 CB C6        	set 0,(hl)											; Frame completo.
 511  89B6 FB           	ei
 512  89B7 76           	halt
 513  89B8
 514  89B8              ; ------------------------------------
 515  89B8
 516  89B8              Main
 517  89B8              ;
 518  89B8              ;	11/12/23
 519  89B8
 520  89B8              ; Aparece nueva entidad ???
 521  89B8
 522  89B8              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 523  89B8              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 524  89B8              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 525  89B8              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 526  89B8              ;														; _un 2º bloque.
 527  89B8
 528  89B8 3E 01        	ld a,1
 529  89BA D3 FE        	out ($fe),a
 530  89BC
 531  89BC 3A 41 89     	ld a,(Clock_Entidades_en_curso)
 532  89BF 47           	ld b,a
 533  89C0 3A 3E 89     	ld a,(Contador_de_frames)
 534  89C3 B8           	cp b
 535  89C4 20 18        	jr nz,13F
 536  89C6
 537  89C6              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 538  89C6              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 539  89C6
 540  89C6 3A 17 89     21 ld a,(Numero_parcial_de_entidades)
 541  89C9 47           	ld b,a
 542  89CA 3A 18 89     	ld a,(Entidades_en_curso)
 543  89CD B8           	cp b
 544  89CE 28 0E        	jr z,13F
 545  89D0 30 0C        	jr nc,13F
 546  89D2
 547  89D2 3C           	inc a
 548  89D3 32 18 89     	ld (Entidades_en_curso),a
 549  89D6
 550  89D6              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 551  89D6
 552  89D6 3A 41 89     	ld a,(Clock_Entidades_en_curso)
 553  89D9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 554  89D9              ;! _ IMPREDECIBLE !!!!
 555  89D9 C6 64        	add 100
 556  89DB 32 41 89     	ld (Clock_Entidades_en_curso),a
 557  89DE
 558  89DE              ; -------------------------------------------------------------------------------------------------------------
 559  89DE
 560  89DE              ; Habilita disparos.
 561  89DE
 562  89DE 21 43 89     13 ld hl,Disparo_Amadeus
 563  89E1 11 45 89     	ld de,CLOCK_repone_disparo_Amadeus
 564  89E4 CD 92 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 565  89E7
 566  89E7 21 46 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 567  89EA 11 48 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 568  89ED CD 92 9D     	call Habilita_disparos
 569  89F0
 570  89F0              ; COLISIONES.
 571  89F0
 572  89F0 CD B7 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 573  89F3
 574  89F3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 575  89F3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 576  89F3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 577  89F3
 578  89F3 AF           	xor a
 579  89F4 32 32 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 580  89F7
 581  89F7 CD A3 8C     	call Inicia_punteros_de_cajas
 582  89FA CD C8 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 583  89FD              ; 														; _ en DRAW.
 584  89FD 3A C8 88     	ld a,(Filas)
 585  8A00 A7           	and a
 586  8A01 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 587  8A03 CD DA 8D     	call Incrementa_punteros_de_cajas
 588  8A06 18 F2        	jr 12B
 589  8A08
 590  8A08              ; ---------------------------------------------------------------------------------------
 591  8A08
 592  8A08 3A 17 89     10 ld a,(Numero_parcial_de_entidades)
 593  8A0B 47               ld b,a
 594  8A0C A7           	and a
 595  8A0D 20 14        	jr nz,11F
 596  8A0F
 597  8A0F 21 0D 89     	ld hl,Ctrl_1
 598  8A12 CB 66        	bit 4,(hl)
 599  8A14 C2 BC 8A     	jp nz,16F
 600  8A17
 601  8A17              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 602  8A17
 603  8A17 21 0D 89     	ld hl,Ctrl_1
 604  8A1A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 605  8A1C
 606  8A1C 3A 3E 89     	ld a,(Contador_de_frames)
 607  8A1F 3C           	inc a
 608  8A20 32 42 89     	ld (Activa_recarga_cajas),a
 609  8A23
 610  8A23              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 611  8A23
 612  8A23 3A 18 89     11 ld a,(Entidades_en_curso)
 613  8A26 A7           	and a
 614  8A27 CA BC 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 615  8A2A 47           	ld b,a												; No hay entidades que gestionar.
 616  8A2B
 617  8A2B              ; ( Código que ejecutamos con cada entidad: ).
 618  8A2B
 619  8A2B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 620  8A2B
 621  8A2B C5           15 push bc 												; Nº de entidades en curso.
 622  8A2C
 623  8A2C              ; Existe "Entidad_guía" ???.
 624  8A2C              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 625  8A2C
 626  8A2C 3A 2C 89     	ld a,(Ctrl_3)
 627  8A2F CB 4F        	bit 1,a
 628  8A31 20 11        	jr nz,22F
 629  8A33
 630  8A33              ; Almacén de "Movimientos_masticados" lleno ???
 631  8A33              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 632  8A33              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 633  8A33
 634  8A33 3A 2C 89     	ld a,(Ctrl_3)
 635  8A36 CB 5F        	bit 3,a
 636  8A38 20 0A        	jr nz,22F
 637  8A3A
 638  8A3A              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 639  8A3A
 640  8A3A 21 09 89     	ld hl,Ctrl_2
 641  8A3D CB EE        	set 5,(hl)
 642  8A3F 21 2C 89     	ld hl,Ctrl_3
 643  8A42 CB CE        	set 1,(hl)
 644  8A44
 645  8A44              ; Impacto ???
 646  8A44
 647  8A44 3A E1 88     22 ld a,(Impacto)
 648  8A47 A7           	and a
 649  8A48 28 31        	jr z,8F
 650  8A4A
 651  8A4A              ; Hay Impacto en esta entidad.
 652  8A4A
 653  8A4A 21 40 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 654  8A4D 35           	dec (hl)
 655  8A4E C2 AF 8A     	jp nz,17F
 656  8A51
 657  8A51              ;! Velocidad de la animación de la explosión.
 658  8A51
 659  8A51 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 660  8A53              ;														; _,(velocidad de la explosión).
 661  8A53              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 662  8A53
 663  8A53 CD 8C 8E     	call Repone_datos_de_borrado
 664  8A56 CD E1 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 665  8A59
 666  8A59              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 667  8A59
 668  8A59 3A 09 89     	ld a,(Ctrl_2)
 669  8A5C CB 4F        	bit 1,a
 670  8A5E 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 671  8A60
 672  8A60              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 673  8A60
 674  8A60 3A D0 88     	ld a,(CTRL_DESPLZ)
 675  8A63 A7           	and a
 676  8A64 20 08        	jr nz,18F
 677  8A66
 678  8A66 21 84 84     	ld hl,Indice_Explosion_2x2-2
 679  8A69 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 680  8A6C 18 06        	jr 19F
 681  8A6E
 682  8A6E 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 683  8A71 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 684  8A74
 685  8A74 21 09 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 686  8A77 CB CE        	set 1,(hl)
 687  8A79 18 22        	jr 7F
 688  8A7B
 689  8A7B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 690  8A7B              ; _con las coordenadas de la entidad almacenada en DRAW.
 691  8A7B
 692  8A7B 3A 0D 89     8 ld a,(Ctrl_1)
 693  8A7E CB 57        	bit 2,a
 694  8A80 28 1B        	jr z,7F
 695  8A82
 696  8A82 2A 35 89     	ld hl,(Coordenadas_disparo_certero)
 697  8A85 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 698  8A86              ;														; E contiene la coordenada_X del disparo.
 699  8A86 2A CE 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 700  8A89              ;														; H FILA, (Coordenada_y de la entidad).
 701  8A89 A7           	and a
 702  8A8A ED 52        	sbc hl,de
 703  8A8C
 704  8A8C CD D0 92     	call Determina_resultado_comparativa
 705  8A8F
 706  8A8F 78           	ld a,b
 707  8A90 A7           	and a
 708  8A91 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 709  8A93
 710  8A93              ; ----- ----- -----
 711  8A93
 712  8A93 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 713  8A95 32 E1 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 714  8A98
 715  8A98 21 0D 89     	ld hl,Ctrl_1
 716  8A9B CB 96        	res 2,(hl)
 717  8A9D
 718  8A9D CD 0D 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 719  8AA0
 720  8AA0 3A F8 88     	ld a,(Ctrl_0)
 721  8AA3 CB 67        	bit 4,a
 722  8AA5 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 723  8AA7
 724  8AA7              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 725  8AA7              ; [[[
 726  8AA7              ;	call Detecta_disparo_entidad
 727  8AA7              ; ]]]
 728  8AA7
 729  8AA7 CD 03 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 730  8AAA
 731  8AAA 21 F8 88     	ld hl,Ctrl_0
 732  8AAD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 733  8AAF
 734  8AAF CD 89 8D     17 call Store_Restore_cajas
 735  8AB2
 736  8AB2 C1           	pop bc
 737  8AB3
 738  8AB3 05           	dec b
 739  8AB4 C2 2B 8A     	jp nz,15B
 740  8AB7
 741  8AB7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 742  8AB7              ; Hemos gestionado todas las unidades.
 743  8AB7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 744  8AB7
 745  8AB7 21 0D 89     	ld hl,Ctrl_1
 746  8ABA CB 96        	res 2,(hl)
 747  8ABC
 748  8ABC 21 2C 89     16 ld hl,Ctrl_3
 749  8ABF CB C6        	set 0,(hl)											; Frame completo.
 750  8AC1
 751  8AC1 AF           	xor a
 752  8AC2 D3 FE        	out ($fe),a
 753  8AC4
 754  8AC4 FB           	ei
 755  8AC5 76           	halt
 756  8AC6
 757  8AC6              ; ----------------------------------------
 758  8AC6
 759  8AC6 3A 0D 89     	ld a,(Ctrl_1) 										; Existe Loop?
 760  8AC9 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 761  8ACB CA B8 89     	jp z,Main
 762  8ACE
 763  8ACE              ; RECARGA DE NUEVA OLEADA.
 764  8ACE
 765  8ACE 3A 3E 89     	ld a,(Contador_de_frames)
 766  8AD1 47           	ld b,a
 767  8AD2 3A 42 89     	ld a,(Activa_recarga_cajas)
 768  8AD5 B8           	cp b
 769  8AD6 28 08        	jr z,20F
 770  8AD8
 771  8AD8 21 0D 89     	ld hl,Ctrl_1
 772  8ADB CB E6        	set 4,(hl)
 773  8ADD C3 B8 89     	jp Main
 774  8AE0
 775  8AE0 21 0D 89     20 ld hl,Ctrl_1
 776  8AE3 CB A6        	res 4,(hl)
 777  8AE5
 778  8AE5 3A 3E 89     	ld a,(Contador_de_frames)
 779  8AE8
 780  8AE8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 781  8AE8              ;! _ IMPREDECIBLE !!!!
 782  8AE8
 783  8AE8 C6 0A        	add 10
 784  8AEA 32 41 89     	ld (Clock_Entidades_en_curso),a
 785  8AED
 786  8AED C3 63 89     	jp 4B
 787  8AF0
 788  8AF0 C9           	ret
 789  8AF1
 790  8AF1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 791  8AF1              ;
 792  8AF1              ;	16/11/23
 793  8AF1
 794  8AF1              Gestiona_Amadeus
 795  8AF1
 796  8AF1              ;! Activa/desactiva impacto con Amadeus.
 797  8AF1
 798  8AF1              ;	ld a,(Impacto)
 799  8AF1              ;	and a
 800  8AF1              ;	jr nz,2F
 801  8AF1
 802  8AF1 CD 84 8B     	call Mov_Amadeus
 803  8AF4
 804  8AF4 3A F8 88     2 ld a,(Ctrl_0)
 805  8AF7 CB 67        	bit 4,a
 806  8AF9 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 807  8AFB
 808  8AFB CD 03 8C     	call Guarda_foto_entidad_a_pintar
 809  8AFE CD 6C 8E     	call Guarda_datos_de_borrado_Amadeus
 810  8B01
 811  8B01 21 F8 88     1 ld hl,Ctrl_0
 812  8B04 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 813  8B06
 814  8B06 CD 5B 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 815  8B09
 816  8B09              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 817  8B09
 818  8B09 CD 23 8D     	call Calcula_numero_de_disparotes
 819  8B0C
 820  8B0C C9           	ret
 821  8B0D
 822  8B0D              ; --------------------------------------------------------------------------------------------------------------
 823  8B0D              ;
 824  8B0D              ;	15/12/23
 825  8B0D
 826  8B0D              Mov_obj
 827  8B0D
 828  8B0D 3A 09 89     	ld a,(Ctrl_2)
 829  8B10 CB 4F        	bit 1,a
 830  8B12 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 831  8B14
 832  8B14              ; Explosión:
 833  8B14
 834  8B14 3A 0A 89     	ld a,(Frames_explosion)
 835  8B17 A7           	and a
 836  8B18 20 1D        	jr nz,4F
 837  8B1A
 838  8B1A              ;!  Una alimaña menos!!!!!!!!!1
 839  8B1A
 840  8B1A              ; Se trataba de una Entidad_guía ???
 841  8B1A
 842  8B1A 3A 09 89     	ld a,(Ctrl_2)
 843  8B1D CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 844  8B1F 28 05        	jr z,5F
 845  8B21
 846  8B21 21 2C 89     	ld hl,Ctrl_3
 847  8B24 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 848  8B26
 849  8B26              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 850  8B26              ;!! _generado puede ser distinto, (aletoriedad).
 851  8B26
 852  8B26 CD 0A 8E     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 853  8B29 21 17 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 854  8B2C 35           	dec (hl)
 855  8B2D 21 18 89     	ld hl,Entidades_en_curso
 856  8B30 35           	dec (hl)
 857  8B31 21 16 89     	ld hl,Numero_de_entidades
 858  8B34 35           	dec (hl)
 859  8B35 18 4C        	jr 3F
 860  8B37
 861  8B37              ; -----
 862  8B37
 863  8B37              ;	`Movemos´ la explosión.
 864  8B37
 865  8B37 2A D6 88     4 ld hl,(Puntero_DESPLZ_der)
 866  8B3A 23           	inc hl
 867  8B3B 23           	inc hl
 868  8B3C 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 869  8B3F CD 3B 8D     	call Extrae_address
 870  8B42 22 CC 88     	ld (Puntero_objeto),hl
 871  8B45
 872  8B45 21 0A 89     	ld hl,Frames_explosion
 873  8B48 35           	dec (hl)
 874  8B49
 875  8B49 21 F8 88     	ld hl,Ctrl_0
 876  8B4C CB E6        	set 4,(hl)
 877  8B4E
 878  8B4E 18 33        	jr 3F
 879  8B50
 880  8B50              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 881  8B50
 882  8B50 AF           2 xor a
 883  8B51 32 F8 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 884  8B54
 885  8B54              ; Movemos Entidades malignas.
 886  8B54              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 887  8B54
 888  8B54 3A 09 89     	ld a,(Ctrl_2)
 889  8B57 CB 6F        	bit 5,a
 890  8B59 20 07        	jr nz,8F
 891  8B5B
 892  8B5B 21 F8 88     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 893  8B5E CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 894  8B60 18 09        	jr 7F
 895  8B62
 896  8B62 CD 3D 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 897  8B65
 898  8B65 3A F8 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 899  8B68 CB 67        	bit 4,a
 900  8B6A C8           	ret z
 901  8B6B
 902  8B6B              ; Ha habido desplazamiento de la entidad maligna.
 903  8B6B              ; Ha llegado a zona de AMADEUS ???
 904  8B6B
 905  8B6B 3A CF 88     7 ld a,(Coordenada_y)
 906  8B6E FE 14        	cp $14
 907  8B70 38 08        	jr c,1F
 908  8B72
 909  8B72              ; ---------
 910  8B72
 911  8B72              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 912  8B72              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 913  8B72
 914  8B72 F3           	di
 915  8B73 CD 80 90     	call Genera_coordenadas_X
 916  8B76 CD BC 90     	call Compara_coordenadas_X
 917  8B79 FB           	ei
 918  8B7A
 919  8B7A              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 920  8B7A
 921  8B7A              ; ---------
 922  8B7A
 923  8B7A CD 8B 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 924  8B7D CD 8C 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 925  8B80 CD E1 8C     	call Limpia_Variables_de_borrado
 926  8B83
 927  8B83 C9           3 ret
 928  8B84
 929  8B84              ; --------------------------------------------------------------------------------------------------------------
 930  8B84              ;
 931  8B84              ;	29/1/23
 932  8B84
 933  8B84              Mov_Amadeus
 934  8B84
 935  8B84 CD 2C 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 936  8B87
 937  8B87 3A F8 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 938  8B8A CB 67        	bit 4,a
 939  8B8C C8           	ret z
 940  8B8D
 941  8B8D              ; ---------
 942  8B8D
 943  8B8D CD 8B 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 944  8B90 CD 7C 8E     	call Repone_datos_de_borrado_Amadeus
 945  8B93 CD E1 8C     	call Limpia_Variables_de_borrado
 946  8B96
 947  8B96 C9           	ret
 948  8B97
 949  8B97              ; -----------------------------------------------------------------------------------
 950  8B97              ;
 951  8B97              ;	12/12/23
 952  8B97              ;
 953  8B97              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 954  8B97
 955  8B97              Inicia_entidad
 956  8B97
 957  8B97 CD D5 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 958  8B9A CD 41 8D     	call Inicia_Puntero_objeto
 959  8B9D CD D8 99     	call Recompone_posicion_inicio
 960  8BA0 CD B7 93     	call Draw
 961  8BA3 CD AE 8B     	call Guarda_movimiento_masticado
 962  8BA6 CD 16 71     	call Guarda_foto_registros
 963  8BA9 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 964  8BAA              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 965  8BAA              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 966  8BAA CD 89 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 967  8BAD C9           	ret
 968  8BAE
 969  8BAE
 970  8BAE              ; -----------------------------------------------------------------------------------
 971  8BAE              ;
 972  8BAE              ;	28/12/23
 973  8BAE              ;
 974  8BAE              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 975  8BAE              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 976  8BAE
 977  8BAE 3A 09 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 978  8BB1 CB 6F        	bit 5,a
 979  8BB3 C8           	ret z 													; Salimos si NO se trata de una entidad guía.
 980  8BB4
 981  8BB4 ED 73 1E 89  	ld (Stack),sp
 982  8BB8 ED 7B F4 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
 983  8BBC
 984  8BBC E5           	push hl
 985  8BBD DD E5            push ix
 986  8BBF FD E5            push iy
 987  8BC1
 988  8BC1 ED 7B 1E 89      ld sp,(Stack)
 989  8BC5
 990  8BC5 E5               push hl
 991  8BC6
 992  8BC6 2A F6 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
 993  8BC9 23           	inc hl
 994  8BCA 22 F6 88     	ld (Contador_de_mov_masticados),hl
 995  8BCD
 996  8BCD 22 0B 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
 997  8BD0
 998  8BD0 E1           	pop hl
 999  8BD1
1000  8BD1 CD EC 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1001  8BD4              ;															; _ el (Contador_de_mov_masticados).
1002  8BD4 C9               ret
1003  8BD5
1004  8BD5              ; --------------------------------------------------------------------------------------------------------------
1005  8BD5              ;
1006  8BD5              ;	12/12/23
1007  8BD5              ;
1008  8BD5
1009  8BD5              Inicia_entidad_guia
1010  8BD5
1011  8BD5              ; Existe "Entidad_guía" ???
1012  8BD5
1013  8BD5 3A 2C 89     	ld a,(Ctrl_3)
1014  8BD8 CB 4F        	bit 1,a
1015  8BDA C0           	ret nz
1016  8BDB
1017  8BDB              ; Inicia Entidad_guía:
1018  8BDB
1019  8BDB 21 09 89     	ld hl,Ctrl_2
1020  8BDE CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1021  8BE0 21 2C 89     	ld hl,Ctrl_3
1022  8BE3 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1023  8BE5
1024  8BE5 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1+6
1025  8BE8 22 F4 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1026  8BEB
1027  8BEB C9           	ret
1028  8BEC
1029  8BEC              ; --------------------------------------------------------------------------------------------------------------
1030  8BEC              ;
1031  8BEC              ;	21/12/23
1032  8BEC              ;
1033  8BEC
1034  8BEC              Actualiza_Puntero_de_almacen_de_mov_masticados
1035  8BEC
1036  8BEC              ;	Entidad_guía ???
1037  8BEC
1038  8BEC 3A 09 89     	ld a,(Ctrl_2)
1039  8BEF CB 6F        	bit 5,a
1040  8BF1 C8           	ret z												; Salimos si NO se trata de una entidad guía.
1041  8BF2
1042  8BF2 E5           	push hl
1043  8BF3 C5           	push bc
1044  8BF4
1045  8BF4 2A F4 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1046  8BF7 01 06 00     	ld bc,6
1047  8BFA A7           	and a
1048  8BFB ED 4A        	adc hl,bc
1049  8BFD 22 F4 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1050  8C00
1051  8C00 C1           	pop bc
1052  8C01 E1           	pop hl
1053  8C02
1054  8C02 C9           	ret
1055  8C03
1056  8C03              ; --------------------------------------------------------------------------------------------------------------
1057  8C03              ;
1058  8C03              ;	28/12/23
1059  8C03              ;
1060  8C03              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1061  8C03              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1062  8C03
1063  8C03              Guarda_foto_entidad_a_pintar
1064  8C03
1065  8C03 3A F8 88     	ld a,(Ctrl_0)
1066  8C06 CB 77        	bit 6,a
1067  8C08 28 07        	jr z,5F
1068  8C0A
1069  8C0A              ; Guarda la foto de Amadeus.
1070  8C0A
1071  8C0A CD B7 93     	call Draw
1072  8C0D CD 16 71     	call Guarda_foto_registros
1073  8C10 C9           	ret
1074  8C11
1075  8C11              ; ENTIDADES!
1076  8C11              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1077  8C11
1078  8C11 3A 2C 89     5 ld a,(Ctrl_3)
1079  8C14 CB 5F        	bit 3,a
1080  8C16 28 04        	jr z,1F
1081  8C18
1082  8C18              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1083  8C18
1084  8C18 CD 5F 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1085  8C1B C9           	ret
1086  8C1C
1087  8C1C              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1088  8C1C
1089  8C1C 3A 2C 89     1 ld a,(Ctrl_3)
1090  8C1F CB 57        	bit 2,a
1091  8C21 20 10        	jr nz,6F
1092  8C23
1093  8C23              ; Entidad guía o fantasma ???
1094  8C23
1095  8C23 3A 09 89     	ld a,(Ctrl_2)
1096  8C26 CB 6F        	bit 5,a
1097  8C28 20 10        	jr nz,3F
1098  8C2A
1099  8C2A              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1100  8C2A
1101  8C2A 18 EC        	jr 4B
1102  8C2C
1103  8C2C              ; ENTIDAD_GUÍA:
1104  8C2C              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1105  8C2C              ; _guardando "movimientos_masticados".
1106  8C2C
1107  8C2C 3A 2C 89     2 ld a,(Ctrl_3)
1108  8C2F CB 57        	bit 2,a
1109  8C31 28 07        	jr z,3F
1110  8C33
1111  8C33              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1112  8C33              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1113  8C33
1114  8C33 CB 97        6 res 2,a
1115  8C35 CB DF        	set 3,a
1116  8C37 32 2C 89     	ld (Ctrl_3),a
1117  8C3A
1118  8C3A
1119  8C3A              ;	Esto sólo lo ejecuta una entidad guía.
1120  8C3A
1121  8C3A CD B7 93     3 	call Draw
1122  8C3D CD AE 8B     	call Guarda_movimiento_masticado
1123  8C40 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1124  8C43
1125  8C43              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1126  8C43              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1127  8C43
1128  8C43 CD 47 8C     	call Convierte_guia_en_fantasma
1129  8C46 C9           	ret
1130  8C47
1131  8C47              ; --------------------------------------------------------------------------------------------------------------
1132  8C47              ;
1133  8C47              ;	28/12/23
1134  8C47              ;
1135  8C47
1136  8C47 3A 2C 89     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1137  8C4A CB 5F        	bit 3,a
1138  8C4C C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1139  8C4D
1140  8C4D              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1141  8C4D
1142  8C4D 21 09 89     	ld hl,Ctrl_2
1143  8C50 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1144  8C52
1145  8C52              ;	Reinicializamos el (Puntero_de_almacen_de_mov_masticados).
1146  8C52
1147  8C52 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1148  8C55 22 F4 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1149  8C58
1150  8C58              ;	Reinicializamos el (Contador_de_mov_masticados).
1151  8C58
1152  8C58 21 00 00     	ld hl,0
1153  8C5B 22 F6 88     	ld (Contador_de_mov_masticados),hl
1154  8C5E
1155  8C5E C9           	ret
1156  8C5F
1157  8C5F              ; --------------------------------------------------------------------------------------------------------------
1158  8C5F              ;
1159  8C5F              ;	21/12/23
1160  8C5F              ;
1161  8C5F              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1162  8C5F              ;
1163  8C5F              ;		IY contiene (Puntero_objeto).
1164  8C5F              ;		IX contiene el puntero de impresión.
1165  8C5F              ;		HL contiene la dirección de la rutina de impresión.
1166  8C5F              ;
1167  8C5F              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1168  8C5F              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1169  8C5F              ;	Decrementa el (Contador_de_mov_masticados)
1170  8C5F              ;
1171  8C5F              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1172  8C5F              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1173  8C5F              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1174  8C5F
1175  8C5F
1176  8C5F ED 73 1E 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1177  8C63 ED 7B F4 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1178  8C67
1179  8C67 FD E1        	pop iy
1180  8C69 DD E1        	pop ix
1181  8C6B E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1182  8C6C
1183  8C6C ED 73 F4 88  	ld (Puntero_de_almacen_de_mov_masticados),sp
1184  8C70 ED 7B 1E 89  	ld sp,(Stack)
1185  8C74
1186  8C74 CD 16 71     	call Guarda_foto_registros
1187  8C77
1188  8C77 E5           	push hl
1189  8C78
1190  8C78 2A F6 88     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1191  8C7B 23           	inc hl
1192  8C7C 22 F6 88     	ld (Contador_de_mov_masticados),hl
1193  8C7F
1194  8C7F              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1195  8C7F
1196  8C7F ED 4B 0B 89  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1197  8C83 A7           	and a
1198  8C84 ED 42        	sbc hl,bc
1199  8C86 CC 47 8C     	call z,Convierte_guia_en_fantasma
1200  8C89
1201  8C89 E1           	pop hl
1202  8C8A
1203  8C8A C9           	ret
1204  8C8B
1205  8C8B              ; --------------------------------------------------------------------------------------------------------------
1206  8C8B              ;
1207  8C8B              ;	19/9/23
1208  8C8B
1209  8C8B              Prepara_var_pintado
1210  8C8B
1211  8C8B 21 C8 88     	ld hl,Filas
1212  8C8E 11 E8 88     	ld de,Variables_de_pintado
1213  8C91 01 08 00     	ld bc,8
1214  8C94 ED B0        	ldir
1215  8C96 C9           	ret
1216  8C97
1217  8C97              ; --------------------------------------------------------------------------------------------------------------
1218  8C97
1219  8C97              Repone_pintar
1220  8C97
1221  8C97 21 E8 88     	ld hl,Variables_de_pintado
1222  8C9A 11 C8 88     	ld de,Filas
1223  8C9D 01 08 00     	ld bc,8
1224  8CA0 ED B0        	ldir
1225  8CA2 C9           	ret
1226  8CA3
1227  8CA3              ; *************************************************************************************************************************************************************
1228  8CA3              ;
1229  8CA3              ; 8/1/23
1230  8CA3              ;
1231  8CA3              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1232  8CA3              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1233  8CA3              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1234  8CA3
1235  8CA3              ; Destruye HL y DE !!!!!
1236  8CA3
1237  8CA3              Inicia_punteros_de_cajas
1238  8CA3
1239  8CA3 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
1240  8CA6 CD 3B 8D         call Extrae_address
1241  8CA9 22 10 89         ld (Puntero_store_caja),hl
1242  8CAC 21 6E 85     	ld hl,Indice_de_cajas_de_entidades+2
1243  8CAF 22 14 89     	ld (Indice_restore_caja),hl
1244  8CB2 CD 3B 8D     	call Extrae_address
1245  8CB5 22 12 89     	ld (Puntero_restore_caja),hl
1246  8CB8 C9               ret
1247  8CB9
1248  8CB9              ; *************************************************************************************************************************************************************
1249  8CB9              ;
1250  8CB9              ; 8/1/23
1251  8CB9              ;
1252  8CB9              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1253  8CB9
1254  8CB9 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1255  8CBC 22 2E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1256  8CBF C9           	ret
1257  8CC0 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1258  8CC3 22 30 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1259  8CC6 C9           	ret
1260  8CC7
1261  8CC7              ; -------------------------------------------------------------------------------------------------------------
1262  8CC7              ;
1263  8CC7              ; 21/9/23
1264  8CC7              ;
1265  8CC7
1266  8CC7              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1267  8CC7
1268  8CC7              Limpia_album_Amadeus
1269  8CC7
1270  8CC7 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1271  8CCA 7E           	ld a,(hl)
1272  8CCB A7           	and a
1273  8CCC C8           	ret z
1274  8CCD
1275  8CCD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1276  8CD0 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1277  8CD3 01 0B 00     	ld bc,11
1278  8CD6 AF           	xor a
1279  8CD7 77           	ld (hl),a
1280  8CD8 ED B0        	ldir
1281  8CDA
1282  8CDA 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1283  8CDD 22 2A 89     	ld (End_Snapshot_Amadeus),hl
1284  8CE0
1285  8CE0 C9           	ret
1286  8CE1
1287  8CE1 21 E2 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1288  8CE4 11 E3 88     	ld de,Variables_de_borrado+1
1289  8CE7 01 05 00     	ld bc,5
1290  8CEA AF           	xor a
1291  8CEB 77           	ld (hl),a
1292  8CEC ED B0        	ldir
1293  8CEE C9           	ret
1294  8CEF
1295  8CEF              ; -------------------------------------------------------------------------------------------------------------
1296  8CEF              ;
1297  8CEF              ; 8/9/23
1298  8CEF              ;
1299  8CEF
1300  8CEF              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1301  8CEF              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1302  8CEF
1303  8CEF              Calcula_numero_de_malotes
1304  8CEF
1305  8CEF 21 00 70     	ld hl,Album_de_fotos
1306  8CF2 EB           	ex de,hl
1307  8CF3 2A 24 89     	ld hl,(Stack_snapshot)
1308  8CF6
1309  8CF6 06 00        	ld b,0
1310  8CF8 7D           	ld a,l
1311  8CF9 93           	sub e
1312  8CFA 28 07        	jr z,1F
1313  8CFC
1314  8CFC              ; Nº de malotes no es "0".
1315  8CFC
1316  8CFC D6 06        2 sub 6
1317  8CFE 04           	inc b
1318  8CFF A7           	and a
1319  8D00 20 FA        	jr nz,2B
1320  8D02 78           	ld a,b
1321  8D03
1322  8D03 32 19 89     1 ld (Numero_de_malotes),a
1323  8D06 C9           	ret
1324  8D07
1325  8D07              ; -------------------------------------------------------------------------------------------------------------
1326  8D07              ;
1327  8D07              ; 8/9/23
1328  8D07              ;
1329  8D07
1330  8D07              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1331  8D07              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1332  8D07
1333  8D07              Calcula_malotes_Amadeus
1334  8D07
1335  8D07 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1336  8D0A EB           	ex de,hl
1337  8D0B 2A 2A 89     	ld hl,(End_Snapshot_Amadeus)
1338  8D0E
1339  8D0E 7C           	ld a,h
1340  8D0F A7           	and a
1341  8D10 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1342  8D12
1343  8D12 06 00        	ld b,0
1344  8D14 7D           	ld a,l
1345  8D15 93           	sub e
1346  8D16 28 07        	jr z,1F
1347  8D18
1348  8D18              ; Nº de malotes no es "0".
1349  8D18
1350  8D18 D6 06        2 sub 6
1351  8D1A 04           	inc b
1352  8D1B A7           	and a
1353  8D1C 20 FA        	jr nz,2B
1354  8D1E 78           	ld a,b
1355  8D1F
1356  8D1F 32 19 89     1 ld (Numero_de_malotes),a
1357  8D22 C9           	ret
1358  8D23
1359  8D23              ; -------------------------------------------------------------------------------------------------------------
1360  8D23              ;
1361  8D23              ; 28/2/23
1362  8D23              ;
1363  8D23
1364  8D23              Calcula_numero_de_disparotes
1365  8D23
1366  8D23 21 56 70     	ld hl,Album_de_fotos_disparos
1367  8D26 EB           	ex de,hl
1368  8D27 2A 28 89     	ld hl,(End_Snapshot_disparos)
1369  8D2A
1370  8D2A 06 00        	ld b,0
1371  8D2C 7D           	ld a,l
1372  8D2D 93           	sub e
1373  8D2E 28 07        	jr z,1F
1374  8D30
1375  8D30              ; Nº de malotes no es "0".
1376  8D30
1377  8D30 D6 06        2 sub 6
1378  8D32 04           	inc b
1379  8D33 A7           	and a
1380  8D34 20 FA        	jr nz,2B
1381  8D36 78           	ld a,b
1382  8D37
1383  8D37 32 2D 89     1 ld (Numero_de_disparotes),a
1384  8D3A C9           	ret
1385  8D3B
1386  8D3B              ; *************************************************************************************************************************************************************
1387  8D3B              ;
1388  8D3B              ; 20/10/22
1389  8D3B              ;
1390  8D3B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1391  8D3B              ;
1392  8D3B              ; Destruye el puntero y DE !!!!!
1393  8D3B
1394  8D3B 5E           Extrae_address ld e,(hl)
1395  8D3C 23           	inc hl
1396  8D3D 56           	ld d,(hl)
1397  8D3E 2B           	dec hl
1398  8D3F EB           	ex de,hl
1399  8D40 C9           	ret
1400  8D41
1401  8D41              ; *************************************************************************************************************************************************************
1402  8D41              ;
1403  8D41              ;	7/2/23
1404  8D41              ;
1405  8D41              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1406  8D41              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1407  8D41              ;
1408  8D41              ;   Destruye HL y BC !!!!!,
1409  8D41              ;
1410  8D41              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1411  8D41              ;					"0" ..... Izquierda.
1412  8D41
1413  8D41              Inicia_Puntero_objeto
1414  8D41
1415  8D41 3A DC 88     	ld a,(Cuad_objeto)
1416  8D44 E6 01        	and 1
1417  8D46 F5           	push af
1418  8D47 CC 65 8D     	call z,Inicia_puntero_objeto_izq
1419  8D4A F1           	pop af
1420  8D4B 28 2B        	jr z,1F
1421  8D4D CD 52 8D     	call Inicia_puntero_objeto_der
1422  8D50 18 26        	jr 1F
1423  8D52
1424  8D52              ; Arrancamos desde la parte izquierda de la pantalla.
1425  8D52              ; Iniciamos (Indice_Sprite_der).
1426  8D52
1427  8D52 2A D2 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1428  8D55 22 D6 88     	ld (Puntero_DESPLZ_der),hl
1429  8D58 CD 3B 8D     	call Extrae_address
1430  8D5B 22 CC 88     	ld (Puntero_objeto),hl
1431  8D5E
1432  8D5E 2A D4 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1433  8D61 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
1434  8D64 C9           	ret
1435  8D65
1436  8D65              ; Arrancamos desde la parte derecha de la pantalla.
1437  8D65              ; Iniciamos (Indice_Sprite_izq).
1438  8D65
1439  8D65 2A D4 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1440  8D68 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
1441  8D6B CD 3B 8D     	call Extrae_address
1442  8D6E 22 CC 88     	ld (Puntero_objeto),hl
1443  8D71
1444  8D71 2A D2 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1445  8D74 22 D6 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1446  8D77 C9           	ret
1447  8D78
1448  8D78              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1449  8D78
1450  8D78 21 40 83     1 ld hl,Amadeus
1451  8D7B ED 4B CC 88  	ld bc,(Puntero_objeto)
1452  8D7F B7 ED 42     	sub hl,bc
1453  8D82 C0           	ret nz
1454  8D83 21 F8 88     	ld hl,Ctrl_0
1455  8D86 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1456  8D88 C9           	ret 												; _de nuestra nave en los extremos.
1457  8D89
1458  8D89              ; *************************************************************************************************************************************************************
1459  8D89              ;
1460  8D89              ;	21/12/23
1461  8D89              ;
1462  8D89              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1463  8D89              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1464  8D89
1465  8D89              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1466  8D89              ;	_de la 2ª y 3ª entidad respectivamente.
1467  8D89
1468  8D89              Store_Restore_cajas
1469  8D89
1470  8D89 E5           	push hl
1471  8D8A D5           	push de
1472  8D8B C5            	push bc
1473  8D8C
1474  8D8C              ;	STORE !!!!!
1475  8D8C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1476  8D8C
1477  8D8C F3           	di
1478  8D8D 21 C8 88     	ld hl,Filas
1479  8D90 ED 5B 10 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1480  8D94 01 43 00     	ld bc,67
1481  8D97 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1482  8D99 FB           	ei
1483  8D9A
1484  8D9A              ; 	Entidad_sospechosa. 20/4/23
1485  8D9A
1486  8D9A 3A E1 88     	ld a,(Impacto)
1487  8D9D A7           	and a
1488  8D9E 28 0C        	jr z,1F
1489  8DA0
1490  8DA0 2A 10 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1491  8DA3 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1492  8DA6 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1493  8DA7 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1494  8DA9 22 33 89     	ld (Entidad_sospechosa_de_colision),hl
1495  8DAC
1496  8DAC              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1497  8DAC
1498  8DAC 2A 12 89     1 ld hl,(Puntero_restore_caja)
1499  8DAF 7E           	ld a,(hl)
1500  8DB0 A7           	and a
1501  8DB1 F5           	push af
1502  8DB2 28 0A        	jr z,2F
1503  8DB4
1504  8DB4 F3           	di
1505  8DB5 11 C8 88     	ld de,Filas
1506  8DB8 01 43 00     	ld bc,67
1507  8DBB ED B0        	ldir
1508  8DBD FB           	ei
1509  8DBE
1510  8DBE CD DA 8D     2 call Incrementa_punteros_de_cajas
1511  8DC1
1512  8DC1 F1           	pop af
1513  8DC2 28 E8        	jr z,1B
1514  8DC4
1515  8DC4 C1           	pop bc
1516  8DC5 D1           	pop de
1517  8DC6 E1           	pop hl
1518  8DC7
1519  8DC7 C9           	ret
1520  8DC8
1521  8DC8              ; **************************************************************************************************
1522  8DC8              ;
1523  8DC8              ;	21/12/23
1524  8DC8              ;
1525  8DC8              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1526  8DC8
1527  8DC8 E5           Restore_entidad push hl
1528  8DC9 D5           	push de
1529  8DCA C5            	push bc
1530  8DCB
1531  8DCB 2A 10 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1532  8DCE 11 C8 88     	ld de,Filas
1533  8DD1 01 43 00     	ld bc,67
1534  8DD4 ED B0        	ldir
1535  8DD6
1536  8DD6 C1           	pop bc
1537  8DD7 D1           	pop de
1538  8DD8 E1           	pop hl
1539  8DD9 C9           	ret
1540  8DDA
1541  8DDA              ; **************************************************************************************************
1542  8DDA              ;
1543  8DDA              ;	08/05/23
1544  8DDA              ;
1545  8DDA              ;	Incrementamos los dos punteros de entidades. (+1).
1546  8DDA
1547  8DDA              Incrementa_punteros_de_cajas
1548  8DDA
1549  8DDA 2A 12 89     	ld hl,(Puntero_restore_caja)
1550  8DDD 22 10 89     	ld (Puntero_store_caja),hl
1551  8DE0 2A 14 89     	ld hl,(Indice_restore_caja)
1552  8DE3 23           	inc hl
1553  8DE4 23           	inc hl
1554  8DE5 22 14 89     	ld (Indice_restore_caja),hl
1555  8DE8 CD 3B 8D         call Extrae_address
1556  8DEB 22 12 89         ld (Puntero_restore_caja),hl
1557  8DEE C9               ret
1558  8DEF
1559  8DEF              ; **************************************************************************************************
1560  8DEF              ;
1561  8DEF              ;	21/12/23
1562  8DEF              ;
1563  8DEF              ;	Restore_Amadeus
1564  8DEF              ;
1565  8DEF              ;	Cargamos en DRAW los parámetros de Amadeus.
1566  8DEF              ;
1567  8DEF
1568  8DEF E5           Restore_Amadeus	push hl
1569  8DF0 D5           	push de
1570  8DF1 C5            	push bc
1571  8DF2 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1572  8DF5 11 C8 88     	ld de,Filas
1573  8DF8 01 43 00     	ld bc,67
1574  8DFB ED B0        	ldir
1575  8DFD C1           	pop bc
1576  8DFE D1           	pop de
1577  8DFF E1           	pop hl
1578  8E00 C9           	ret
1579  8E01
1580  8E01              ; *************************************************************************************************************************************************************
1581  8E01              ;
1582  8E01              ;	21/12/23
1583  8E01              ;
1584  8E01              ;	Store_Amadeus
1585  8E01              ;
1586  8E01              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1587  8E01              ;
1588  8E01              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1589  8E01              ;
1590  8E01              ;	DESTRUYE: HL y BC y DE.
1591  8E01
1592  8E01 21 C8 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1593  8E04 01 43 00     	ld bc,67
1594  8E07 ED B0        	ldir
1595  8E09 C9           	ret
1596  8E0A
1597  8E0A              ; -----------------------------------------------------------
1598  8E0A              ;
1599  8E0A              ;	21/12/23
1600  8E0A              ;
1601  8E0A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1602  8E0A              ;
1603  8E0A              ;	Destruye: HL,BC,DE,A
1604  8E0A
1605  8E0A 21 C8 88     Borra_datos_entidad ld hl,Filas
1606  8E0D 01 42 00     	ld bc,66
1607  8E10 AF           	xor a
1608  8E11 77           	ld (hl),a
1609  8E12 11 C9 88     	ld de,Filas+1
1610  8E15 ED B0        	ldir
1611  8E17 C9           	ret
1612  8E18
1613  8E18              ; -----------------------------------------------------------
1614  8E18
1615  8E18              ; Teclado.
1616  8E18
1617  8E18 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1618  8E1A DB FE        	in a,($fe)
1619  8E1C E6 01        	and $01
1620  8E1E 28 02        	jr z,1f
1621  8E20 18 F6        	jr Pulsa_ENTER
1622  8E22 C9           1 ret
1623  8E23
1624  8E23              ; **************************************************************************************************
1625  8E23              ;
1626  8E23              ; Temporización.
1627  8E23
1628  8E23              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1629  8E23              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1630  8E23              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1631  8E23              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1632  8E23
1633  8E23              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1634  8E23              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1635  8E23              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1636  8E23
1637  8E23              ; A partir de $4f61 no hace falta DELAY.
1638  8E23
1639  8E23              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1640  8E23
1641  8E23 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1642  8E26 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1643  8E27 78           	LD A,B
1644  8E28 A7           	AND A
1645  8E29 20 FB        	JR NZ,wait
1646  8E2B C9           	RET
1647  8E2C
1648  8E2C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1649  8E2C              ;
1650  8E2C              ;	5/3/23
1651  8E2C              ;
1652  8E2C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1653  8E2C
1654  8E2C              Movimiento_Amadeus
1655  8E2C
1656  8E2C              ; Disparo.
1657  8E2C
1658  8E2C 3A 43 89     	ld a,(Disparo_Amadeus)
1659  8E2F A7           	and a
1660  8E30 20 02        	jr nz,1F
1661  8E32 18 15        	jr 2F
1662  8E34
1663  8E34 3E F7        1 ld a,$f7													; "5" para disparar.
1664  8E36 DB FE        	in a,($fe)
1665  8E38 E6 10        	and $10
1666  8E3A
1667  8E3A F5           	push af
1668  8E3B CC E3 8E     	call z,Genera_disparo
1669  8E3E F1           	pop af
1670  8E3F 20 08        	jr nz,2F
1671  8E41
1672  8E41 3A 43 89     	ld a,(Disparo_Amadeus)
1673  8E44 EE 01        	xor 1
1674  8E46 32 43 89     	ld (Disparo_Amadeus),a
1675  8E49 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1676  8E4B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1677  8E4D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1678  8E4F CC 9C 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1679  8E52
1680  8E52 3E F7        	ld a,$f7
1681  8E54 DB FE        	in a,($fe)
1682  8E56 E6 01        	and $01
1683  8E58 C8           	ret z
1684  8E59
1685  8E59 3E F7        	ld a,$f7
1686  8E5B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1687  8E5D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1688  8E5F CC 7E 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1689  8E62 C9           	ret
1690  8E63
1691  8E63              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1692  8E63              ;
1693  8E63              ;	Rutina provisional para que los malotes cagen balas.
1694  8E63
1695  8E63              Detecta_disparo_entidad
1696  8E63
1697  8E63 3A 46 89     	ld a,(Disparo_entidad)
1698  8E66 A7           	and a
1699  8E67 C8           	ret z
1700  8E68
1701  8E68              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1702  8E68
1703  8E68              ;	ld a,$7f				; Detecta SPACE.
1704  8E68              ;	in a,($fe)
1705  8E68              ;	and 1
1706  8E68              ;	ret nz
1707  8E68
1708  8E68 CD E3 8E     	call Genera_disparo
1709  8E6B C9           	ret
1710  8E6C
1711  8E6C              ; ----------------------------------------------------------------------
1712  8E6C              ;
1713  8E6C              ;	8/9/23
1714  8E6C
1715  8E6C 2A 2A 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1716  8E6F 2B            	dec hl
1717  8E70 7E           	ld a,(hl)
1718  8E71 A7           	and a
1719  8E72 C8           	ret z										; Salimos si es álbum está vacío.
1720  8E73
1721  8E73 11 E7 88     	ld de,Variables_de_borrado+5
1722  8E76 01 06 00     	ld bc,6
1723  8E79 ED B8        	lddr
1724  8E7B C9           	ret
1725  8E7C
1726  8E7C              ; ----------------------------------------------------------------------
1727  8E7C              ;
1728  8E7C              ;	9/9/23
1729  8E7C
1730  8E7C              Repone_datos_de_borrado_Amadeus
1731  8E7C
1732  8E7C 21 E2 88     	ld hl,Variables_de_borrado
1733  8E7F 11 AC 70     	ld de,Album_de_fotos_Amadeus
1734  8E82 01 06 00     	ld bc,6
1735  8E85 ED B0        	ldir
1736  8E87
1737  8E87 EB           	ex de,hl
1738  8E88 22 2A 89     	ld (End_Snapshot_Amadeus),hl
1739  8E8B
1740  8E8B C9           	ret
1741  8E8C
1742  8E8C              ; ----------------------------------------------------------------------
1743  8E8C              ;
1744  8E8C              ;	27/10/23
1745  8E8C              ;
1746  8E8C
1747  8E8C              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1748  8E8C              ;	_ Album_de_fotos correspondiente.
1749  8E8C
1750  8E8C              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1751  8E8C              ;	_ durante el proceso de escritura.
1752  8E8C
1753  8E8C              Repone_datos_de_borrado
1754  8E8C
1755  8E8C F3           	di
1756  8E8D ED 5B 24 89  	ld de,(Stack_snapshot)
1757  8E91 21 E2 88     	ld hl,Variables_de_borrado
1758  8E94 01 06 00     	ld bc,6
1759  8E97 ED B0        	ldir
1760  8E99 FB           	ei
1761  8E9A
1762  8E9A EB           	ex de,hl
1763  8E9B 22 24 89     	ld (Stack_snapshot),hl
1764  8E9E
1765  8E9E C9           	ret
1766  8E9F
1767  8E9F              ; --------------------------------------------------------------------------------------
1768  8E9F
1769  8E9F              Pinta_Amadeus
1770  8E9F
1771  8E9F CD 07 8D        	call Calcula_malotes_Amadeus
1772  8EA2 CD 47 97     	call Extrae_foto_Amadeus
1773  8EA5 CD C7 8C     	call Limpia_album_Amadeus
1774  8EA8
1775  8EA8 C9           	ret
1776  8EA9
1777  8EA9              Pinta_entidades
1778  8EA9
1779  8EA9              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1780  8EA9
1781  8EA9 3A 2C 89     	ld a,(Ctrl_3)
1782  8EAC CB 47        	bit 0,a
1783  8EAE C8           	ret z
1784  8EAF
1785  8EAF CD EF 8C     	call Calcula_numero_de_malotes
1786  8EB2 CD C5 96     	call Extrae_foto_entidades
1787  8EB5 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1788  8EB8
1789  8EB8 C9           	ret
1790  8EB9
1791  8EB9              ; -----------------------------------------------------------------------------------
1792  8EB9              ;
1793  8EB9              ;	10/12/23
1794  8EB9              ;
1795  8EB9              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1796  8EB9
1797  8EB9              Actualiza_relojes
1798  8EB9
1799  8EB9 3A 2C 89     	ld a,(Ctrl_3)
1800  8EBC CB 47        	bit 0,a
1801  8EBE C8           	ret z 						;	Salimos si no hemos pintado unidades.
1802  8EBF
1803  8EBF 21 3E 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1804  8EC2 34           	inc (hl)
1805  8EC3
1806  8EC3 34           	inc (hl)
1807  8EC4 35           	dec (hl)
1808  8EC5 C0           	ret nz
1809  8EC6
1810  8EC6 21 3F 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1811  8EC9 34           	inc (hl)
1812  8ECA C9           	ret
1813  8ECB
1814  8ECB              ; ---------------------------------------------------------------
1815  8ECB              ;
1816  8ECB              ;	21/12/23
1817  8ECB
1818  8ECB              Guarda_parametros_DRAW
1819  8ECB
1820  8ECB 21 C8 88     	ld hl,Filas
1821  8ECE 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1822  8ED1 01 43 00     	ld bc,67
1823  8ED4 ED B0        	ldir
1824  8ED6 C9           	ret
1825  8ED7
1826  8ED7              Recupera_parametros_DRAW
1827  8ED7
1828  8ED7 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1829  8EDA 11 C8 88     	ld de,Filas
1830  8EDD 01 43 00     	ld bc,67
1831  8EE0 ED B0        	ldir
1832  8EE2 C9           	ret
1833  8EE3
1834  8EE3              ; ---------------------------------------------------------------
1835  8EE3
1836  8EE3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EE3              ; ******************************************************************************************************************************************************************************************
   2+ 8EE3              ;
   3+ 8EE3              ;   21/07/23
   4+ 8EE3              ;
   5+ 8EE3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EE3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EE3              ;
   8+ 8EE3              ;
   9+ 8EE3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EE3              ;
  11+ 8EE3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EE3              ;               _ hacen las entidades hacia abajo.
  13+ 8EE3              ;
  14+ 8EE3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EE3              ;
  16+ 8EE3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EE3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EE3              ;
  19+ 8EE3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EE3              ;           _ la bala.
  21+ 8EE3              ;
  22+ 8EE3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EE3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EE3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EE3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EE3              ;           _ en el momento de generarse la bala)).
  27+ 8EE3
  28+ 8EE3              Genera_disparo
  29+ 8EE3
  30+ 8EE3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EE3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EE3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EE3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EE3              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EE3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EE3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EE3
  38+ 8EE3              ; Exclusiones:
  39+ 8EE3
  40+ 8EE3 3A E0 88         ld a,(Vel_down)
  41+ 8EE6 47               ld b,a
  42+ 8EE7 3A 3D 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EEA B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EEB D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EEC 3A 05 89         ld a,(Columnas)
  46+ 8EEF 47               ld b,a
  47+ 8EF0 3A C9 88         ld a,(Columns)
  48+ 8EF3 B8               cp b
  49+ 8EF4 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EF5
  51+ 8EF5              ; ----- ----- -----
  52+ 8EF5
  53+ 8EF5 3A F8 88         ld a,(Ctrl_0)
  54+ 8EF8 CB 77            bit 6,a
  55+ 8EFA 20 06            jr nz,14F
  56+ 8EFC
  57+ 8EFC 3A CF 88         ld a,(Coordenada_y)
  58+ 8EFF FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F01 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F02
  61+ 8F02 21 00 80     14 ld hl,Indice_disparo
  62+ 8F05 3A D0 88         ld a,(CTRL_DESPLZ)
  63+ 8F08 4F               ld c,a
  64+ 8F09 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F0B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F0B              ;                                            ""        ""       "f9", B="1"
  67+ 8F0B              ;                                            ""        ""       "fb", B="2"
  68+ 8F0B              ;                                            ""        ""       "fb", B="3"
  69+ 8F0B A7               and a
  70+ 8F0C 28 10            jr z,1F
  71+ 8F0E E6 01            and 1
  72+ 8F10 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F11
  74+ 8F11 79               ld a,c
  75+ 8F12 16 F9            ld d,$f9
  76+ 8F14 23           2 inc hl
  77+ 8F15 23               inc hl
  78+ 8F16 04               inc b
  79+ 8F17 BA               cp d
  80+ 8F18 28 04            jr z,1F
  81+ 8F1A 14               inc d
  82+ 8F1B 14               inc d
  83+ 8F1C 18 F6            jr 2B
  84+ 8F1E
  85+ 8F1E CD 3B 8D     1 call Extrae_address
  86+ 8F21 E5               push hl
  87+ 8F22 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F24 DD 21 8D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F28
  90+ 8F28              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F28              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F28
  93+ 8F28 3A F8 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F2B CB 77            bit 6,a
  95+ 8F2D 20 04            jr nz,19F
  96+ 8F2F
  97+ 8F2F AF               xor a
  98+ 8F30 32 46 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F33
 100+ 8F33 3A DC 88     19 ld a,(Cuad_objeto)
 101+ 8F36 FE 02            cp 2
 102+ 8F38 38 66            jr c,3F
 103+ 8F3A 28 64            jr z,3F
 104+ 8F3C
 105+ 8F3C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F3C
 107+ 8F3C E6 01            and 1
 108+ 8F3E 28 30            jr z,4F
 109+ 8F40
 110+ 8F40              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F40              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F40              ;
 113+ 8F40              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F40              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F40              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F40
 117+ 8F40 2A CA 88     	ld hl,(Posicion_actual)
 118+ 8F43
 119+ 8F43              ;   Amadeus o entidad ???.
 120+ 8F43
 121+ 8F43 3A F8 88         ld a,(Ctrl_0)
 122+ 8F46 CB 77            bit 6,a
 123+ 8F48 28 0A            jr z,8F
 124+ 8F4A
 125+ 8F4A              ; 	Dispara Amadeus.
 126+ 8F4A
 127+ 8F4A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F4C CD B6 96         call PreviousScan
 129+ 8F4F CD B6 96         call PreviousScan
 130+ 8F52
 131+ 8F52              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F52              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F52              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F52              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F52
 136+ 8F52 18 11            jr 10F
 137+ 8F54
 138+ 8F54              ; 	Dispara Entidad.
 139+ 8F54
 140+ 8F54 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F57              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F57
 143+ 8F57              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F57              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F57
 146+ 8F57 C5               push bc
 147+ 8F58 06 10            ld b,16
 148+ 8F5A CD A7 96     9 call NextScan
 149+ 8F5D 10 FB            djnz 9B
 150+ 8F5F C1               pop bc
 151+ 8F60 CD CA 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F63 18 06            jr 17F
 153+ 8F65
 154+ 8F65              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F65              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F65              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F65              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F65
 159+ 8F65 CD CA 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F68 CD 3F 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F6B              ;                                                      ; _al generar el disparo.
 162+ 8F6B
 163+ 8F6B              ; 	LLegados a este punto tendremos:
 164+ 8F6B              ;
 165+ 8F6B              ;       Puntero_objeto_disparo en IY.
 166+ 8F6B              ;       Rutinas_de_impresion en IX.
 167+ 8F6B              ;       Puntero_de_impresion en HL.
 168+ 8F6B              ;       Impacto/Dirección en BC.
 169+ 8F6B
 170+ 8F6B CD D2 8F     17 call Almacena_disparo
 171+ 8F6E 18 52            jr 6F                                             ; RET.
 172+ 8F70
 173+ 8F70              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F70              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F70              ;
 176+ 8F70              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F70              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F70              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F70
 180+ 8F70 2A CA 88     4 ld hl,(Posicion_actual)
 181+ 8F73
 182+ 8F73              ;   Amadeus o entidad ???.
 183+ 8F73
 184+ 8F73 3A F8 88         ld a,(Ctrl_0)
 185+ 8F76 CB 77            bit 6,a
 186+ 8F78 28 0A            jr z,11F
 187+ 8F7A
 188+ 8F7A              ; 	Dispara Amadeus.
 189+ 8F7A
 190+ 8F7A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F7C CD B6 96         call PreviousScan
 192+ 8F7F CD B6 96         call PreviousScan
 193+ 8F82
 194+ 8F82              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F82              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F82              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F82              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F82
 199+ 8F82 18 11            jr 13F
 200+ 8F84
 201+ 8F84              ; 	Dispara Entidad.
 202+ 8F84
 203+ 8F84 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F87              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F87
 206+ 8F87              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F87              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F87
 209+ 8F87 C5               push bc
 210+ 8F88 06 10            ld b,16
 211+ 8F8A CD A7 96     12 call NextScan
 212+ 8F8D 10 FB            djnz 12B
 213+ 8F8F C1               pop bc
 214+ 8F90
 215+ 8F90 CD C3 8F         call Ajusta_disparo_parte_derecha
 216+ 8F93 18 06            jr 18F
 217+ 8F95
 218+ 8F95              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F95              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F95              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F95              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F95
 223+ 8F95 CD C3 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F98 CD 3F 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F9B              ;                                                       ; _al generar el disparo.
 226+ 8F9B
 227+ 8F9B              ; LLegados a este punto tendremos:
 228+ 8F9B              ;
 229+ 8F9B              ;       Puntero_objeto_disparo en IY.
 230+ 8F9B              ;       Rutinas_de_impresion en IX.
 231+ 8F9B              ;       Puntero_de_impresion en HL.
 232+ 8F9B              ;       Impacto/Dirección en BC.
 233+ 8F9B
 234+ 8F9B CD D2 8F     18 call Almacena_disparo
 235+ 8F9E 18 22            jr 6F                                               ; RET.
 236+ 8FA0
 237+ 8FA0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FA0
 239+ 8FA0 28 11        3 jr z,5F
 240+ 8FA2
 241+ 8FA2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FA2              ;
 243+ 8FA2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FA2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FA2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FA2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FA2
 248+ 8FA2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FA2              ;	   ""        ""       "f9", B="1"
 250+ 8FA2              ;	   ""        ""       "fb", B="2"
 251+ 8FA2              ; 	   ""        ""       "fb", B="3"
 252+ 8FA2
 253+ 8FA2 2A CA 88     	ld hl,(Posicion_actual)
 254+ 8FA5 CD A7 96     	call NextScan
 255+ 8FA8
 256+ 8FA8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FA8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FA8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FA8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FA8
 261+ 8FA8 CD CA 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FAB
 263+ 8FAB              ; 	No se produce impacto. B="$80"
 264+ 8FAB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FAB
 266+ 8FAB 01 80 80         ld bc,$8080
 267+ 8FAE
 268+ 8FAE              ; 	LLegados a este punto tendremos:
 269+ 8FAE              ;
 270+ 8FAE              ;       Puntero_objeto_disparo en IY.
 271+ 8FAE              ;       Rutinas_de_impresion en IX.
 272+ 8FAE              ;       Puntero_de_impresion en HL.
 273+ 8FAE              ;       Impacto/Dirección en BC.
 274+ 8FAE
 275+ 8FAE CD D2 8F         call Almacena_disparo
 276+ 8FB1 18 0F            jr 6F                                           ; RET.
 277+ 8FB3
 278+ 8FB3              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FB3              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FB3              ;
 281+ 8FB3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FB3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FB3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FB3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FB3
 286+ 8FB3 2A CA 88     5 ld hl,(Posicion_actual)
 287+ 8FB6 CD A7 96     	call NextScan
 288+ 8FB9
 289+ 8FB9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FB9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FB9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FB9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FB9
 294+ 8FB9 CD C3 8F         call Ajusta_disparo_parte_derecha
 295+ 8FBC
 296+ 8FBC              ; 	No se produce impacto. B="$80"
 297+ 8FBC              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FBC
 299+ 8FBC 01 80 80     15 ld bc,$8080
 300+ 8FBF
 301+ 8FBF              ; 	LLegados a este punto tendremos:
 302+ 8FBF              ;
 303+ 8FBF              ;       Puntero_objeto_disparo en IY.
 304+ 8FBF              ;       Rutinas_de_impresion en IX.
 305+ 8FBF              ;       Puntero_de_impresion en HL.
 306+ 8FBF              ;       Impacto/Dirección en BC.
 307+ 8FBF
 308+ 8FBF CD D2 8F         call Almacena_disparo
 309+ 8FC2
 310+ 8FC2 C9           6 ret
 311+ 8FC3
 312+ 8FC3              ; ----------------------------------------------------------------
 313+ 8FC3              ;
 314+ 8FC3              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FC3              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FC3              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FC3
 318+ 8FC3 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FC4 FE 02            cp 2
 320+ 8FC6 38 01            jr c,1F
 321+ 8FC8 23               inc hl
 322+ 8FC9 C9           1 ret
 323+ 8FCA
 324+ 8FCA 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FCB FE 01        	cp 1
 326+ 8FCD 20 01        	jr nz,1F
 327+ 8FCF 2B           	dec hl
 328+ 8FD0 2B           1 dec hl
 329+ 8FD1 C9               ret
 330+ 8FD2
 331+ 8FD2              ; ----------------------------------------------------------------
 332+ 8FD2              ;
 333+ 8FD2              ;   25/02/23
 334+ 8FD2              ;
 335+ 8FD2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FD2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FD2              ;
 338+ 8FD2              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FD2              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FD2
 341+ 8FD2              Almacena_disparo
 342+ 8FD2
 343+ 8FD2 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FD3 F1               pop af
 345+ 8FD4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FD5
 347+ 8FD5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FD6 E6 01            and 1
 349+ 8FD8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FDA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FDA              ; 	Dispara AMADEUS.
 352+ 8FDA
 353+ 8FDA              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FDA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FDA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FDA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FDA
 358+ 8FDA C5               push bc
 359+ 8FDB 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FDE 2A 30 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FE1 A7               and a
 362+ 8FE2 ED 42            sbc hl,bc
 363+ 8FE4 CC C0 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FE7 C1               pop bc
 365+ 8FE8 28 54            jr z,4F
 366+ 8FEA
 367+ 8FEA 2A 30 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FED 23               inc hl
 369+ 8FEE 23               inc hl
 370+ 8FEF 22 30 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FF2              ;                                                   ; _ Disparo_(+1).
 372+ 8FF2 18 18            jr 2F
 373+ 8FF4
 374+ 8FF4              ; Dispara una entidad.
 375+ 8FF4
 376+ 8FF4 C5           1 push bc
 377+ 8FF5 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FF8 2A 2E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FFB A7               and a
 380+ 8FFC ED 42            sbc hl,bc
 381+ 8FFE CC B9 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9001 C1               pop bc
 383+ 9002 28 3A            jr z,4F
 384+ 9004
 385+ 9004 2A 2E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9007 23               inc hl
 387+ 9008 23               inc hl
 388+ 9009 22 2E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 900C              ;                                                   ; _ Disparo_(+1).
 390+ 900C CD 3B 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 900F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 900F              ;
 393+ 900F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 900F              ;                                                     Rutinas_de_impresion en IX.
 395+ 900F              ;                                                     Puntero_de_impresion en HL.
 396+ 900F              ;                                                     Impacto/Dirección en BC.
 397+ 900F
 398+ 900F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9010 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9011 23               inc hl                                          ; _ al siguiente.
 401+ 9012 A7               and a
 402+ 9013 20 C0            jr nz,3B
 403+ 9015
 404+ 9015 08               ex af,af
 405+ 9016 ED 73 1E 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 901A F9               ld sp,hl
 407+ 901B
 408+ 901B DD E5            push ix                                         ; Rutina de impresión.
 409+ 901D F5               push af                                         ; Puntero de impresión.
 410+ 901E FD E5            push iy                                         ; Puntero objeto.
 411+ 9020 C5               push bc                                         ; Control.
 412+ 9021
 413+ 9021 ED 7B 1E 89      ld sp,(Stack)
 414+ 9025
 415+ 9025              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9025
 417+ 9025 21 0D 89     	ld hl,Ctrl_1
 418+ 9028 CB C6        	set 0,(hl)
 419+ 902A
 420+ 902A DD E5        	push ix
 421+ 902C E1               pop hl
 422+ 902D F5               push af
 423+ 902E DD E1            pop ix
 424+ 9030
 425+ 9030 CD 16 71     	call Guarda_foto_registros
 426+ 9033
 427+ 9033 21 0D 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9036 CB 86        	res 0,(hl)
 429+ 9038
 430+ 9038              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9038              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9038
 433+ 9038 CD C0 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 903B CD B9 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 903E
 436+ 903E C9           4 ret
 437+ 903F
 438+ 903F              ; ----------------------------------------------------------------
 439+ 903F              ;
 440+ 903F              ;   4/3/23
 441+ 903F              ;
 442+ 903F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 903F              ;   _ al generarse el disparo.
 444+ 903F              ;
 445+ 903F              ;       "$80" ..... No se produce colisión.
 446+ 903F              ;       "$81" ..... Se produce colisión.
 447+ 903F              ;
 448+ 903F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 903F              ;         _ que forman el disparo.
 450+ 903F
 451+ 903F
 452+ 903F              Comprueba_Colision
 453+ 903F
 454+ 903F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 903F
 456+ 903F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9041 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9042
 459+ 9042 CD 78 90         call Modifica_H_Velocidad_disparo
 460+ 9045
 461+ 9045 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9046 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9048 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 904A
 465+ 904A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 904C CD 68 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 904F
 468+ 904F 7B               ld a,e
 469+ 9050 E6 01            and 1
 470+ 9052 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9054              ;                                                  ; _ para activar IMPACTO.
 472+ 9054 E1               pop hl
 473+ 9055 E5               push hl
 474+ 9056 CD A7 96         call NextScan
 475+ 9059
 476+ 9059 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 905A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 905C 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 905E              ;                                                  ; _ 2º scanline si esto es así.
 480+ 905E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9060 CD 68 90         call Bucle_2
 482+ 9063
 483+ 9063 43           1 ld b,e
 484+ 9064 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9065 FD E1            pop iy
 486+ 9067 C9               ret
 487+ 9068
 488+ 9068              ; ---------- ----------
 489+ 9068
 490+ 9068 06 02        Bucle_2 ld b,2
 491+ 906A FD 7E 00     2 ld a,(iy)
 492+ 906D A6               and (hl)
 493+ 906E 28 02            jr z,1F
 494+ 9070 1E 81            ld e,$81
 495+ 9072 23           1 inc hl
 496+ 9073 FD 23            inc iy
 497+ 9075 10 F3            djnz 2B
 498+ 9077 C9               ret
 499+ 9078
 500+ 9078              ; ---------- ----------
 501+ 9078              ;
 502+ 9078              ;   21/7/23
 503+ 9078
 504+ 9078              Modifica_H_Velocidad_disparo
 505+ 9078
 506+ 9078 3A 3D 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 907B FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 907D D0               ret nc                                         ; _ incrementamos H.
 509+ 907E 24               inc h
 510+ 907F
 511+ 907F C9               ret
 512+ 9080
 513+ 9080              ; -------------------------------------------------------------------------------------------------------------
 514+ 9080              ;
 515+ 9080              ;   04/12/23
 516+ 9080              ;
 517+ 9080              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9080              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9080              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9080              ;
 521+ 9080              ;   MODIFICA: HL,DE,B y A.
 522+ 9080
 523+ 9080              Genera_coordenadas_X
 524+ 9080
 525+ 9080              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9080              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9080
 528+ 9080              ;   Limpiamos almacenes.
 529+ 9080
 530+ 9080 CD B1 90         call Limpia_Coordenadas_X
 531+ 9083
 532+ 9083              ;   Almacenamos coordenadas X.
 533+ 9083
 534+ 9083              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9083
 536+ 9083 2A F2 88         ld hl,(Puntero_de_impresion)
 537+ 9086 11 3A 89         ld de,Coordenadas_X_Entidad
 538+ 9089 06 02            ld b,2
 539+ 908B
 540+ 908B 3A D0 88         ld a,(CTRL_DESPLZ)
 541+ 908E A7               and a
 542+ 908F 28 01            jr z,1F
 543+ 9091 04               inc b
 544+ 9092
 545+ 9092 CD A8 90     1 call Guarda_coordenadas_X
 546+ 9095
 547+ 9095              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9095
 549+ 9095 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 9098 11 37 89         ld de,Coordenadas_X_Amadeus
 551+ 909B 06 02            ld b,2
 552+ 909D
 553+ 909D 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 90A0 A7               and a
 555+ 90A1 28 01            jr z,2F
 556+ 90A3 04               inc b
 557+ 90A4
 558+ 90A4 CD A8 90     2 call Guarda_coordenadas_X
 559+ 90A7
 560+ 90A7              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 90A7
 562+ 90A7 C9               ret
 563+ 90A8
 564+ 90A8              ; ----- ----- ----- ----- -----
 565+ 90A8
 566+ 90A8 7D           Guarda_coordenadas_X  ld a,l
 567+ 90A9 E6 1F            and $1f
 568+ 90AB 12           1 ld (de),a
 569+ 90AC 3C               inc a
 570+ 90AD 13               inc de
 571+ 90AE 10 FB            djnz 1B
 572+ 90B0 C9               ret
 573+ 90B1
 574+ 90B1 AF           Limpia_Coordenadas_X xor a
 575+ 90B2 06 06            ld b,6
 576+ 90B4 21 37 89         ld hl,Coordenadas_X_Amadeus
 577+ 90B7 77           1 ld (hl),a
 578+ 90B8 23               inc hl
 579+ 90B9 10 FC            djnz 1B
 580+ 90BB C9               ret
 581+ 90BC
 582+ 90BC              ; ----- ----- ----- ----- -----
 583+ 90BC
 584+ 90BC              Compara_coordenadas_X
 585+ 90BC
 586+ 90BC 06 03            ld b,3
 587+ 90BE 11 3C 89         ld de,Coordenadas_X_Entidad+2
 588+ 90C1
 589+ 90C1 1A               ld a,(de)
 590+ 90C2 A7               and a
 591+ 90C3 20 01            jr nz,2F
 592+ 90C5 05               dec b
 593+ 90C6
 594+ 90C6 1B           2 dec de
 595+ 90C7 1B               dec de
 596+ 90C8 21 37 89         ld hl,Coordenadas_X_Amadeus
 597+ 90CB
 598+ 90CB D5           1 push de
 599+ 90CC E5               push hl
 600+ 90CD C5               push bc
 601+ 90CE
 602+ 90CE CD D8 90         call Comparando
 603+ 90D1
 604+ 90D1 C1               pop bc
 605+ 90D2 E1               pop hl
 606+ 90D3 D1               pop de
 607+ 90D4
 608+ 90D4 13               inc de
 609+ 90D5 10 F4            djnz 1B
 610+ 90D7
 611+ 90D7 C9               ret
 612+ 90D8
 613+ 90D8              ; ----- ----- ----- ----- -----
 614+ 90D8              ;
 615+ 90D8              ;   4/12/23
 616+ 90D8              ;
 617+ 90D8              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90D8
 619+ 90D8 06 03        Comparando ld b,3
 620+ 90DA 1A               ld a,(de)
 621+ 90DB 4E           2 ld c,(hl)
 622+ 90DC B9               cp c
 623+ 90DD 28 04            jr z,1F
 624+ 90DF 23               inc hl
 625+ 90E0 10 F9            djnz 2B
 626+ 90E2 C9               ret
 627+ 90E3
 628+ 90E3 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90E5 32 E1 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90E8 21 32 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90EB CB D6            set 2,(hl)
 632+ 90ED C9               ret
 633+ 90EE
 634+ 90EE              ; -----------------------------------------------------------------------
 635+ 90EE              ;
 636+ 90EE              ;   7/12/23
 637+ 90EE              ;
 638+ 90EE
 639+ 90EE              Detecta_colision_nave_entidad
 640+ 90EE
 641+ 90EE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90EE
 643+ 90EE FD 2A CC 88      ld iy,(Puntero_objeto)
 644+ 90F2 2A F2 88         ld hl,(Puntero_de_impresion)
 645+ 90F5
 646+ 90F5 E5               push hl
 647+ 90F6
 648+ 90F6              ; ----- ----- -----
 649+ 90F6 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90F8 06 0A            ld b,10
 651+ 90FA CD 2A 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90FD 7B               ld a,e
 653+ 90FE FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9100 38 0E            jr c,3F
 655+ 9102
 656+ 9102              ; LLegados a este punto:
 657+ 9102              ;
 658+ 9102              ;   HAY COLISIÓN !!!!!.
 659+ 9102              ;
 660+ 9102              ;   .db (Impacto) de Amadeus a "1".
 661+ 9102              ;   SET el bit3 de (Impacto2).
 662+ 9102              ;
 663+ 9102              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9102
 665+ 9102 21 E1 88         ld hl,Impacto
 666+ 9105 36 01            ld (hl),1
 667+ 9107 21 32 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 910A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 910C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 910E
 671+ 910E 18 18            jr 1F
 672+ 9110
 673+ 9110              ; -----
 674+ 9110
 675+ 9110 E1           3 pop hl
 676+ 9111 CD A7 96         call NextScan
 677+ 9114 E5               push hl
 678+ 9115 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9116 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9118 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 911A 30 0C            jr nc,1F
 682+ 911C              ;                                                  ; _ 2º scanline si esto es así.
 683+ 911C 10 DC            djnz 2B
 684+ 911E
 685+ 911E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 911E
 687+ 911E              ; LLegados a este punto:
 688+ 911E              ;
 689+ 911E              ;   NO HAY COLISIÓN !!!!!.
 690+ 911E              ;
 691+ 911E              ;   .db (Impacto) de Amadeus a "0".
 692+ 911E              ;   RES el bit2 de (Impacto2).
 693+ 911E              ;
 694+ 911E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 911E              ;   Lo colocamos a "0".
 696+ 911E
 697+ 911E 21 32 89         ld hl,Impacto2
 698+ 9121 CB 96            res 2,(hl)
 699+ 9123 2A 33 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9126 36 00            ld (hl),0
 701+ 9128
 702+ 9128 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9129 C9               ret
 704+ 912A
 705+ 912A               ; ---------- ----------
 706+ 912A
 707+ 912A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 912B 3A C9 88         ld a,(Columns)
 709+ 912E 47               ld b,a
 710+ 912F FD 7E 00     2 ld a,(iy)
 711+ 9132 BE               cp (hl)
 712+ 9133 28 01            jr z,1F
 713+ 9135
 714+ 9135 1C               inc e
 715+ 9136
 716+ 9136 23           1 inc hl
 717+ 9137 FD 23            inc iy
 718+ 9139 10 F4            djnz 2B
 719+ 913B C1               pop bc
 720+ 913C C9               ret
 721+ 913D
 722+ 913D              ; -------------------------------------------------------------------------------------------------------------
 723+ 913D              ;
 724+ 913D              ;   13/03/23
 725+ 913D              ;
 726+ 913D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 913D              ;
 728+ 913D              ;   DESTRUYE: HL,BC,DE y A.
 729+ 913D
 730+ 913D 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9140 7E               ld a,(hl)
 732+ 9141 A7               and a
 733+ 9142 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9143
 735+ 9143 44               ld b,h
 736+ 9144 4D               ld c,l
 737+ 9145 2A 26 89         ld hl,(Stack_snapshot_disparos)
 738+ 9148 E5               push hl
 739+ 9149 A7               and a
 740+ 914A ED 42            sbc hl,bc
 741+ 914C E5               push hl
 742+ 914D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 914E
 744+ 914E E1               pop hl
 745+ 914F 54               ld d,h
 746+ 9150 5D               ld e,l
 747+ 9151 1B               dec de
 748+ 9152 ED B8            lddr                                                ; Limpiamos.
 749+ 9154
 750+ 9154 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9157 22 26 89         ld (Stack_snapshot_disparos),hl
 752+ 915A
 753+ 915A C9               ret
 754+ 915B
 755+ 915B              ; -------------------------------------------------------------------------------------------------------------
 756+ 915B              ;
 757+ 915B              ;   18/07/23
 758+ 915B              ;
 759+ 915B
 760+ 915B              Motor_de_disparos
 761+ 915B
 762+ 915B              ; Gestiona DISPAROS DE AMADEUS.
 763+ 915B
 764+ 915B 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 915E 2A 30 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9161
 767+ 9161 CD 3B 8D     2 call Extrae_address
 768+ 9164 7E               ld a,(hl)
 769+ 9165 A7               and a
 770+ 9166 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9168
 772+ 9168              ; ----- ----- ----- ----- ----- -----
 773+ 9168
 774+ 9168 C5               push bc
 775+ 9169 CD 2D 92         call foto_disparo_a_borrar
 776+ 916C
 777+ 916C              ; Existe colisión con este disparo???
 778+ 916C
 779+ 916C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 916D 7E               ld a,(hl)
 781+ 916E 2B               dec hl
 782+ 916F E6 01            and 1
 783+ 9171 28 1D            jr z,9F
 784+ 9173
 785+ 9173              ;   En este punto:
 786+ 9173              ;
 787+ 9173              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9173              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9173              ;   _con la entidad).
 790+ 9173              ;
 791+ 9173              ;   Disparo_2A defw 0                                ; Control.
 792+ 9173              ;    defw 0                                          ; Puntero objeto.
 793+ 9173              ;    defw 0                                          ; Puntero de impresión.
 794+ 9173              ;    defw 0                                          ; Rutina de impresión.
 795+ 9173
 796+ 9173 E5               push hl
 797+ 9174
 798+ 9174 06 04            ld b,4
 799+ 9176 23           19 inc hl
 800+ 9177 10 FD            djnz 19B
 801+ 9179
 802+ 9179 CD 3B 8D         call Extrae_address
 803+ 917C CD 7A 9D         call Genera_coordenadas_disparo
 804+ 917F
 805+ 917F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 917F
 807+ 917F 21 35 89         ld hl,Coordenadas_disparo_certero
 808+ 9182 72               ld (hl),d
 809+ 9183 23               inc hl
 810+ 9184 73               ld (hl),e
 811+ 9185
 812+ 9185              ; Elimino el disparo de la base de datos.
 813+ 9185
 814+ 9185 E1               pop hl
 815+ 9186 CD AC 92         call Elimina_disparo_de_base_de_datos
 816+ 9189 21 32 89         ld hl,Impacto2
 817+ 918C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 918E
 819+ 918E 18 06            jr 11F
 820+ 9190
 821+ 9190 CD 56 92     9 call Mueve_disparo
 822+ 9193 CD 2D 92         call foto_disparo_a_borrar
 823+ 9196
 824+ 9196 C1           11 pop bc
 825+ 9197 18 04            jr 7F
 826+ 9199
 827+ 9199              ; ----- ----- ----- ----- ----- -----
 828+ 9199
 829+ 9199 ED 42        1 sbc hl,bc
 830+ 919B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 919D
 832+ 919D 2A 30 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 91A0 23               inc hl
 834+ 91A1 23               inc hl
 835+ 91A2 22 30 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 91A5 18 BA            jr 2B
 837+ 91A7
 838+ 91A7 CD C0 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 91AA              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 91AA
 841+ 91AA              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 91AA
 843+ 91AA 01 6A 85         ld bc,Disparo_11
 844+ 91AD 2A 2E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 91B0
 846+ 91B0 CD 3B 8D     5 call Extrae_address
 847+ 91B3 7E               ld a,(hl)
 848+ 91B4 A7               and a
 849+ 91B5 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91B7
 851+ 91B7              ; ----- ----- ----- ----- ----- -----
 852+ 91B7
 853+ 91B7 C5               push bc
 854+ 91B8 CD 2D 92         call foto_disparo_a_borrar
 855+ 91BB
 856+ 91BB              ; Existe colisión con este disparo???
 857+ 91BB
 858+ 91BB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91BC 7E               ld a,(hl)
 860+ 91BD 2B               dec hl
 861+ 91BE E6 01            and 1
 862+ 91C0 28 4D            jr z,10F
 863+ 91C2
 864+ 91C2              ;! La colisión se produce con Amadeus???
 865+ 91C2              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91C2
 867+ 91C2 E5               push hl
 868+ 91C3
 869+ 91C3 06 04            ld b,4
 870+ 91C5 23           16 inc hl
 871+ 91C6 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91C8
 873+ 91C8 CD 3B 8D         call Extrae_address
 874+ 91CB CD 7A 9D         call Genera_coordenadas_disparo
 875+ 91CE
 876+ 91CE 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91CF FE 16            cp $16
 878+ 91D1 38 2A            jr c,15F
 879+ 91D3
 880+ 91D3
 881+ 91D3              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91D3
 883+ 91D3 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91D4
 885+ 91D4              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91D4
 887+ 91D4 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91D7
 889+ 91D7              ; Coordenada X de Amadeus en D.
 890+ 91D7
 891+ 91D7 7D               ld a,l
 892+ 91D8 E6 1F            and $1F
 893+ 91DA 57               ld d,a
 894+ 91DB
 895+ 91DB 21 86 85         ld hl,Amadeus_db+8
 896+ 91DE 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91DF
 898+ 91DF 21 37 89         ld hl,Coordenadas_X_Amadeus
 899+ 91E2 CD A8 90         call Guarda_coordenadas_X
 900+ 91E5
 901+ 91E5 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91E6
 903+ 91E6              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91E6
 905+ 91E6 06 02            ld b,2
 906+ 91E8 C5           20 push bc
 907+ 91E9
 908+ 91E9 06 03            ld b,3
 909+ 91EB 21 37 89         ld hl,Coordenadas_X_Amadeus
 910+ 91EE 7E           18 ld a,(hl)
 911+ 91EF BA               cp d
 912+ 91F0 20 04            jr nz,17F
 913+ 91F2
 914+ 91F2              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91F2
 916+ 91F2 C1               pop bc
 917+ 91F3 E1               pop hl
 918+ 91F4 18 0D            jr 14F
 919+ 91F6
 920+ 91F6 23           17 inc hl
 921+ 91F7 10 F5            djnz 18B
 922+ 91F9
 923+ 91F9 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91FA
 925+ 91FA C1               pop bc
 926+ 91FB 10 EB            djnz 20B
 927+ 91FD
 928+ 91FD
 929+ 91FD              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91FD              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91FD
 932+ 91FD E1           15 pop hl
 933+ 91FE 23               inc hl
 934+ 91FF 35               dec (hl)
 935+ 9200 2B               dec hl
 936+ 9201 18 0C            jr 10F
 937+ 9203
 938+ 9203              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9203              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9203
 941+ 9203 E5           14 push hl
 942+ 9204 CD AC 92         call Elimina_disparo_de_base_de_datos
 943+ 9207 21 32 89         ld hl,Impacto2
 944+ 920A CB CE            set 1,(hl)
 945+ 920C E1               pop hl
 946+ 920D 18 06            jr 12F
 947+ 920F
 948+ 920F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 920F
 950+ 920F CD 56 92     10 call Mueve_disparo
 951+ 9212 CD 2D 92         call foto_disparo_a_borrar
 952+ 9215 C1           12 pop bc
 953+ 9216
 954+ 9216 18 04            jr 8F
 955+ 9218
 956+ 9218              ; ----- ----- ----- ----- ----- -----
 957+ 9218
 958+ 9218 ED 42        4 sbc hl,bc
 959+ 921A 28 0A            jr z,6F
 960+ 921C
 961+ 921C 2A 2E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 921F 23               inc hl
 963+ 9220 23               inc hl
 964+ 9221 22 2E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9224 18 8A            jr 5B
 966+ 9226
 967+ 9226 CD B9 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9229 CD B1 90         call Limpia_Coordenadas_X
 969+ 922C C9               ret
 970+ 922D
 971+ 922D              ; ------------------------------------------------------------------
 972+ 922D
 973+ 922D              foto_disparo_a_borrar
 974+ 922D
 975+ 922D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 922E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 922F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9230
 979+ 9230 E5               push hl
 980+ 9231 23               inc hl
 981+ 9232 23               inc hl
 982+ 9233 ED 73 1E 89      ld (Stack),sp
 983+ 9237 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9238 FD E1            pop iy
 985+ 923A DD E1            pop ix
 986+ 923C E1               pop hl
 987+ 923D ED 7B 1E 89      ld sp,(Stack)
 988+ 9241 3A 0D 89         ld a,(Ctrl_1)
 989+ 9244 CB C7            set 0,a
 990+ 9246 32 0D 89         ld (Ctrl_1),a
 991+ 9249 CD 16 71         call Guarda_foto_registros
 992+ 924C 3A 0D 89         ld a,(Ctrl_1)
 993+ 924F CB 87            res 0,a
 994+ 9251 32 0D 89         ld (Ctrl_1),a
 995+ 9254 E1               pop hl
 996+ 9255 C9               ret
 997+ 9256
 998+ 9256              ;---------------------------------------------------
 999+ 9256              ;
1000+ 9256              ;   18/07/23
1001+ 9256              ;
1002+ 9256
1003+ 9256              Mueve_disparo
1004+ 9256
1005+ 9256              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9256              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9256              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9256
1009+ 9256 E5               push hl
1010+ 9257
1011+ 9257 7E               ld a,(hl)
1012+ 9258
1013+ 9258 06 04            ld b,4
1014+ 925A 23           1 inc hl
1015+ 925B 10 FD            djnz 1B
1016+ 925D
1017+ 925D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 925D
1019+ 925D CD 3B 8D         call Extrae_address
1020+ 9260
1021+ 9260 E6 01            and 1
1022+ 9262 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9264
1024+ 9264              ; Disparo hacia arriba, (Amadeus).
1025+ 9264
1026+ 9264              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9264              ; _ de la dificultad.
1028+ 9264
1029+ 9264 CD B6 96         call PreviousScan
1030+ 9267 CD B6 96         call PreviousScan
1031+ 926A CD B6 96         call PreviousScan
1032+ 926D CD B6 96         call PreviousScan
1033+ 9270
1034+ 9270              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9270
1036+ 9270 7C               ld a,h
1037+ 9271 FE 40            cp $40
1038+ 9273 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9275
1040+ 9275              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9275
1042+ 9275 EB               ex de,hl
1043+ 9276 06 04            ld b,4
1044+ 9278 2B           6 dec hl
1045+ 9279 10 FD            djnz 6B
1046+ 927B
1047+ 927B CD AC 92         call Elimina_disparo_de_base_de_datos
1048+ 927E E1               pop hl
1049+ 927F 18 10            jr 7F
1050+ 9281
1051+ 9281              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9281              ; HL contiene el puntero de impresión del disparo.
1053+ 9281              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9281
1055+ 9281 D5           3 push de
1056+ 9282 C5               push bc
1057+ 9283
1058+ 9283 CD 3F 90         call Comprueba_Colision
1059+ 9286
1060+ 9286              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9286
1062+ 9286 78               ld a,b
1063+ 9287
1064+ 9287 C1               pop bc
1065+ 9288 D1               pop de
1066+ 9289
1067+ 9289 EB               ex de,hl
1068+ 928A
1069+ 928A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 928B 23               inc hl                                      ; _ movimiento.
1071+ 928C 72               ld (hl),d
1072+ 928D
1073+ 928D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 928E
1075+ 928E 23               inc hl                                      ; _ en curso.
1076+ 928F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9290 2B               dec hl
1078+ 9291
1079+ 9291 C9           7 ret
1080+ 9292
1081+ 9292              ; Disparo hacia abajo, (Entidad).
1082+ 9292
1083+ 9292 3A 3D 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9295 47               ld b,a
1085+ 9296
1086+ 9296 CD A7 96     4 call NextScan
1087+ 9299 10 FB            djnz 4B
1088+ 929B
1089+ 929B              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 929B
1091+ 929B 7C               ld a,h
1092+ 929C FE 58            cp $58
1093+ 929E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 92A0
1095+ 92A0 EB               ex de,hl
1096+ 92A1 06 04            ld b,4
1097+ 92A3 2B           5 dec hl
1098+ 92A4 10 FD            djnz 5B
1099+ 92A6
1100+ 92A6 CD AC 92         call Elimina_disparo_de_base_de_datos
1101+ 92A9 E1               pop hl
1102+ 92AA 18 E5            jr 7B
1103+ 92AC
1104+ 92AC              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 92AC
1106+ 92AC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 92AF AF               xor a
1108+ 92B0 77               ld (hl),a
1109+ 92B1 54               ld d,h
1110+ 92B2 5D               ld e,l
1111+ 92B3 13               inc de
1112+ 92B4 ED B0            ldir
1113+ 92B6 C9               ret
1114+ 92B7
1115+ 92B7              ; -----------------------------------------------------------------
1116+ 92B7              ;
1117+ 92B7              ;   7/12/23
1118+ 92B7              ;
1119+ 92B7
1120+ 92B7 3A 32 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92BA A7               and a
1122+ 92BB C8               ret z
1123+ 92BC
1124+ 92BC              ; Analizamos si hay impacto por disparos.
1125+ 92BC
1126+ 92BC              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92BC
1128+ 92BC CB 4F            bit 1,a
1129+ 92BE 28 07            jr z,1F
1130+ 92C0
1131+ 92C0 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92C3 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92C5 18 08            jr 2F
1134+ 92C7
1135+ 92C7 CB 47        1 bit 0,a
1136+ 92C9 C8               ret z
1137+ 92CA
1138+ 92CA              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92CA
1140+ 92CA 21 0D 89         ld hl,Ctrl_1
1141+ 92CD CB D6            set 2,(hl)
1142+ 92CF
1143+ 92CF C9           2 ret
1144+ 92D0
1145+ 92D0              ; -----------------------------------------------------------------
1146+ 92D0              ;
1147+ 92D0              ;   25/04/23
1148+ 92D0              ;
1149+ 92D0
1150+ 92D0              Determina_resultado_comparativa
1151+ 92D0
1152+ 92D0              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92D0              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92D0              ;
1155+ 92D0              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92D0              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92D0              ;
1158+ 92D0              ;   SBC HL,DE
1159+ 92D0
1160+ 92D0              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92D0              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92D0
1163+ 92D0              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92D0              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92D0
1166+ 92D0
1167+ 92D0 3A DC 88         ld a,(Cuad_objeto)
1168+ 92D3 FE 02            cp 2
1169+ 92D5 28 26            jr z,2F
1170+ 92D7 38 24            jr c,2F
1171+ 92D9
1172+ 92D9              ; Cuadrantes 3º y 4º
1173+ 92D9
1174+ 92D9 E6 01            and 1
1175+ 92DB 28 10            jr z,4F
1176+ 92DD
1177+ 92DD              ; Cuadrante 3º
1178+ 92DD
1179+ 92DD 7C               ld a,h
1180+ 92DE 06 00            ld b,0
1181+ 92E0
1182+ 92E0 CD 6B 93         call Compara_cositas_H3
1183+ 92E3
1184+ 92E3 04               inc b
1185+ 92E4 05               dec b
1186+ 92E5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92E6
1188+ 92E6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92E7 06 00            ld b,0
1190+ 92E9
1191+ 92E9 CD 7D 93         call Compara_cositas_L3
1192+ 92EC C9               ret
1193+ 92ED
1194+ 92ED              ; Cuadrante 4º
1195+ 92ED
1196+ 92ED 7C           4 ld a,h
1197+ 92EE 06 00            ld b,0
1198+ 92F0
1199+ 92F0 CD 8F 93         call Compara_cositas_H4
1200+ 92F3
1201+ 92F3 04               inc b
1202+ 92F4 05               dec b
1203+ 92F5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92F6
1205+ 92F6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92F7 06 00            ld b,0
1207+ 92F9
1208+ 92F9 CD A5 93         call Compara_cositas_L4
1209+ 92FC C9               ret
1210+ 92FD
1211+ 92FD              ; Cuadrantes 1º y 2º.
1212+ 92FD
1213+ 92FD 28 10        2 jr z,3F
1214+ 92FF
1215+ 92FF              ; 1er Cuadrante
1216+ 92FF
1217+ 92FF 7C               ld a,h
1218+ 9300 06 00            ld b,0
1219+ 9302
1220+ 9302 CD 43 93         call Compara_cositas_H1
1221+ 9305
1222+ 9305 04               inc b
1223+ 9306 05               dec b
1224+ 9307 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9308
1226+ 9308 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9309 06 00            ld b,0
1228+ 930B
1229+ 930B CD 59 93         call Compara_cositas_L1
1230+ 930E C9               ret
1231+ 930F
1232+ 930F
1233+ 930F              ; 2º Cuadrante
1234+ 930F
1235+ 930F 7C           3 ld a,h
1236+ 9310 06 00            ld b,0
1237+ 9312
1238+ 9312 CD 1F 93         call Compara_cositas_H2
1239+ 9315
1240+ 9315 04               inc b
1241+ 9316 05               dec b
1242+ 9317 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9318
1244+ 9318 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9319 06 00            ld b,0
1246+ 931B
1247+ 931B CD 31 93         call Compara_cositas_L2
1248+ 931E C9               ret
1249+ 931F
1250+ 931F A7           Compara_cositas_H2 and a
1251+ 9320 28 0D            jr z,1F
1252+ 9322              ;    cp $fd
1253+ 9322              ;    jr z,1F
1254+ 9322              ;    cp $fe
1255+ 9322              ;    jr z,1F
1256+ 9322 FE FF            cp $ff
1257+ 9324 28 09            jr z,1F
1258+ 9326 FE 01            cp $01
1259+ 9328 28 05            jr z,1F
1260+ 932A FE 02            cp $02
1261+ 932C 28 01            jr z,1F
1262+ 932E C0               ret nz
1263+ 932F 04           1 inc b
1264+ 9330 C9               ret
1265+ 9331
1266+ 9331 A7           Compara_cositas_L2 and a
1267+ 9332 28 0D            jr z,1F
1268+ 9334              ;    cp $fd
1269+ 9334              ;    jr z,1F
1270+ 9334 FE FE            cp $fe
1271+ 9336 28 09            jr z,1F
1272+ 9338 FE FF            cp $ff
1273+ 933A 28 05            jr z,1F
1274+ 933C FE 01            cp $01
1275+ 933E 28 01            jr z,1F
1276+ 9340              ;    cp $02
1277+ 9340              ;    jr z,1F
1278+ 9340 C0               ret nz
1279+ 9341 04           1 inc b
1280+ 9342 C9               ret
1281+ 9343
1282+ 9343 A7           Compara_cositas_H1 and a
1283+ 9344 28 11            jr z,1F
1284+ 9346              ;    cp $fd
1285+ 9346              ;    jr z,1F
1286+ 9346              ;    cp $fe
1287+ 9346              ;    jr z,1F
1288+ 9346 FE FF            cp $ff
1289+ 9348 28 0D            jr z,1F
1290+ 934A FE 01            cp $01
1291+ 934C 28 09            jr z,1F
1292+ 934E FE 02            cp $02
1293+ 9350 28 05            jr z,1F
1294+ 9352 FE 03            cp $03
1295+ 9354 28 01            jr z,1F
1296+ 9356 C0               ret nz
1297+ 9357 04           1 inc b
1298+ 9358 C9               ret
1299+ 9359
1300+ 9359 A7           Compara_cositas_L1 and a
1301+ 935A 28 0D            jr z,1F
1302+ 935C              ;    cp $fd
1303+ 935C              ;    jr z,1F
1304+ 935C              ;    cp $fe
1305+ 935C              ;    jr z,1F
1306+ 935C              ;    cp $ff
1307+ 935C              ;    jr z,1F
1308+ 935C FE 01            cp $01
1309+ 935E 28 09            jr z,1F
1310+ 9360 FE 02            cp $02
1311+ 9362 28 05            jr z,1F
1312+ 9364 FE 03            cp $03
1313+ 9366 28 01            jr z,1F
1314+ 9368 C0               ret nz
1315+ 9369 04           1 inc b
1316+ 936A C9               ret
1317+ 936B
1318+ 936B A7           Compara_cositas_H3 and a
1319+ 936C 28 0D            jr z,1F
1320+ 936E              ;    cp $fd
1321+ 936E              ;    jr z,1F
1322+ 936E FE FE            cp $fe
1323+ 9370 28 09            jr z,1F
1324+ 9372 FE FF            cp $ff
1325+ 9374 28 05            jr z,1F
1326+ 9376 FE 01            cp $01
1327+ 9378 28 01            jr z,1F
1328+ 937A              ;    cp $02
1329+ 937A              ;    jr z,1F
1330+ 937A              ;    cp $03
1331+ 937A              ;    jr z,1F
1332+ 937A C0               ret nz
1333+ 937B 04           1 inc b
1334+ 937C C9               ret
1335+ 937D
1336+ 937D A7           Compara_cositas_L3 and a
1337+ 937E 28 0D            jr z,1F
1338+ 9380              ;    cp $fd
1339+ 9380              ;    jr z,1F
1340+ 9380              ;    cp $fe
1341+ 9380              ;    jr z,1F
1342+ 9380              ;    cp $ff
1343+ 9380              ;    jr z,1F
1344+ 9380 FE 01            cp $01
1345+ 9382 28 09            jr z,1F
1346+ 9384 FE 02            cp $02
1347+ 9386 28 05            jr z,1F
1348+ 9388 FE 03            cp $03
1349+ 938A 28 01            jr z,1F
1350+ 938C C0               ret nz
1351+ 938D 04           1 inc b
1352+ 938E C9               ret
1353+ 938F
1354+ 938F A7           Compara_cositas_H4 and a
1355+ 9390 28 11            jr z,1F
1356+ 9392 FE FD            cp $fd
1357+ 9394 28 0D            jr z,1F
1358+ 9396 FE FE            cp $fe
1359+ 9398 28 09            jr z,1F
1360+ 939A FE FF            cp $ff
1361+ 939C 28 05            jr z,1F
1362+ 939E FE 01            cp $01
1363+ 93A0 28 01            jr z,1F
1364+ 93A2              ;    cp $02
1365+ 93A2              ;    jr z,1F
1366+ 93A2              ;    cp $03
1367+ 93A2              ;    jr z,1F
1368+ 93A2 C0               ret nz
1369+ 93A3 04           1 inc b
1370+ 93A4 C9               ret
1371+ 93A5
1372+ 93A5 A7           Compara_cositas_L4 and a
1373+ 93A6 28 0D            jr z,1F
1374+ 93A8              ;    cp $fd
1375+ 93A8              ;    jr z,1F
1376+ 93A8 FE FE            cp $fe
1377+ 93AA 28 09            jr z,1F
1378+ 93AC FE FF            cp $ff
1379+ 93AE 28 05            jr z,1F
1380+ 93B0 FE 01            cp $01
1381+ 93B2 28 01            jr z,1F
1382+ 93B4              ;    cp $02
1383+ 93B4              ;    jr z,1F
1384+ 93B4              ;    cp $03
1385+ 93B4              ;    jr z,1F
1386+ 93B4 C0               ret nz
1387+ 93B5 04           1 inc b
1388+ 93B6 C9               ret
# file closed: Disparo.asm
1837  93B7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93B7              ; ******************************************************************************************************************************************************************************************
   2+ 93B7              ;
   3+ 93B7              ; 26/06/23
   4+ 93B7              ;
   5+ 93B7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93B7
   7+ 93B7              Draw
   8+ 93B7
   9+ 93B7 CD 9B 96     	call Prepara_draw
  10+ 93BA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93BB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93BC 28 05        	jr z,2F
  13+ 93BE
  14+ 93BE 3A DC 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93C1 18 0C        	jr 1F
  16+ 93C3
  17+ 93C3 2A DA 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93C6 22 CA 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93C9 CD 58 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93CC              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93CC CD 0B A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93CF
  23+ 93CF 3A F8 88     1 ld a,(Ctrl_0)
  24+ 93D2 CB 6F        	bit 5,a
  25+ 93D4 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93D6
  27+ 93D6 CD EE 93     	call Comprueba_limite_horizontal
  28+ 93D9 CD 7E 94     	call Comprueba_limite_vertical
  29+ 93DC
  30+ 93DC              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93DC              ; -----------------------
  32+ 93DC              ; -----------------------
  33+ 93DC              ; -----------------------
  34+ 93DC
  35+ 93DC CD CB 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93DF CD 02 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93E2 CD 61 96     	call Define_rutina_de_impresion
  38+ 93E5
  39+ 93E5 3A F8 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93E8 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93EA 32 F8 88     	ld (Ctrl_0),a
  42+ 93ED
  43+ 93ED C9           	ret
  44+ 93EE
  45+ 93EE              ; *******************************************************************************************************************************************************************************************
  46+ 93EE              ;	21/01/23
  47+ 93EE              ;
  48+ 93EE              ; 	Comprueba_limite_horizontal.
  49+ 93EE              ;
  50+ 93EE              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93EE              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93EE              ;
  53+ 93EE              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93EE              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93EE              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93EE              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93EE
  58+ 93EE
  59+ 93EE
  60+ 93EE 3A F8 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93F1 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93F3 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93F5 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93F7 32 F8 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93FA 18 09            jr 6F
  66+ 93FC CB 5F        1 bit 3,a
  67+ 93FE 28 0A            jr z,2F
  68+ 9400 E6 F7            and $f7
  69+ 9402 32 F8 88         ld (Ctrl_0),a
  70+ 9405 CD 58 95     6 call Inicializacion
  71+ 9408 18 5B            jr 5F
  72+ 940A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 940B
  74+ 940B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 940B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 940B
  77+ 940B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 940C 2A 06 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 940F CD BA 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9412 67           	ld h,a
  81+ 9413 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9414 CD BA 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9417 67           	ld h,a
  84+ 9418 A7           	and a
  85+ 9419 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 941B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 941C 3A DC 88     	ld a,(Cuad_objeto)
  88+ 941F FE 02        	cp 2
  89+ 9421 38 1E        	jr c,3F
  90+ 9423 28 1C        	jr z,3F
  91+ 9425 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9426 28 23            jr z,7F
  93+ 9428 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 942A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 942C E1           	pop hl
  96+ 942D
  97+ 942D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 942D              ; _para indicar con E="2" en caso necesario.
  99+ 942D
 100+ 942D E5               push hl
 101+ 942E C5               push bc
 102+ 942F CD BA 99     	call calcula_tercio
 103+ 9432 FE 01        	cp 1
 104+ 9434 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9436 CD 66 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9439 28 26            jr z,9F
 107+ 943B 38 24            jr c,9F
 108+ 943D 1E 00        11 ld e,0
 109+ 943F 18 22            jr 8F
 110+ 9441 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9442 28 07        	jr z, 7F
 112+ 9444 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9446 1E 00         	ld e,0
 114+ 9448 E1           	pop hl
 115+ 9449 18 04        	jr 4F
 116+ 944B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 944D 18 15            jr 10F
 118+ 944F
 119+ 944F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 944F              ; _para indicar con E="2" en caso necesario.
 121+ 944F
 122+ 944F E5           4 push hl
 123+ 9450 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9451 CD BA 99     	call calcula_tercio
 125+ 9454 FE 01        	cp 1
 126+ 9456 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9458 CD 66 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 945B 28 04            jr z,9F
 129+ 945D 30 02            jr nc,9F
 130+ 945F 18 02        	jr 8F
 131+ 9461 1E 02        9 ld e,2
 132+ 9463 C1           8 pop bc
 133+ 9464 E1           10 pop hl
 134+ 9465 C9           5 ret
 135+ 9466
 136+ 9466              ; --------------------
 137+ 9466              ;
 138+ 9466              ; 25/08/22
 139+ 9466
 140+ 9466 CD BA 99     Comprueba_centro call calcula_tercio
 141+ 9469 67               ld h,a
 142+ 946A 08           	ex af,af
 143+ 946B FE 02        	cp 2
 144+ 946D 38 07        	jr c,1F
 145+ 946F 28 05        	jr z,1F
 146+ 9471 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9474 18 03        	jr 2F
 148+ 9476 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9479 08           2 ex af,af
 150+ 947A A7               and a
 151+ 947B ED 42            sbc hl,bc
 152+ 947D C9               ret
 153+ 947E
 154+ 947E              ; *********************************************************************************************************************************************************************************************
 155+ 947E              ;
 156+ 947E              ;   16/8/22
 157+ 947E              ;
 158+ 947E              ;	Comprueba_limite_vertical
 159+ 947E              ;
 160+ 947E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 947E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 947E              ;
 163+ 947E
 164+ 947E 2A CA 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9481 7D           	ld a,l
 166+ 9482 E6 1F        	and $1F
 167+ 9484 57           	ld d,a
 168+ 9485 3A 08 89     	ld a,(Limite_vertical)
 169+ 9488 BA           	cp d 											; Límite - Posición.
 170+ 9489 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 948A 3A DC 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 948D CB 47        	bit 0,a
 173+ 948F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9491
 175+ 9491              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9491
 177+ 9491 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9492 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9494
 180+ 9494              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9494              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9494
 183+ 9494 3A CE 88         ld a,(Coordenada_X)
 184+ 9497 16 0F            ld d,Centro_izquierda
 185+ 9499 A7               and a
 186+ 949A 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 949B 28 1E            jr z,3F
 188+ 949D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 949F              ;                                                    ; _salimos sin modificar nada.
 190+ 949F 18 0E            jr 2F
 191+ 94A1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 94A2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 94A4
 194+ 94A4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 94A4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 94A4
 197+ 94A4 3A CE 88         ld a,(Coordenada_X)
 198+ 94A7 16 10            ld d,Centro_derecha
 199+ 94A9 A7               and a
 200+ 94AA 92               sub d
 201+ 94AB 28 0E            jr z,3F
 202+ 94AD 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 94AF              ;                                                    ; _salimos sin modificar nada.
 204+ 94AF CB 43        2 bit 0,e
 205+ 94B1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 94B3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 94B4 CD 48 95         call Modificaccionne
 208+ 94B7 C1           	pop bc
 209+ 94B8 CD 58 95         call Inicializacion
 210+ 94BB C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94BC
 212+ 94BC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94BC
 214+ 94BC C5           4 push bc
 215+ 94BD 01 C9 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94C0 0A           	ld a,(bc)
 217+ 94C1 3D           	dec a
 218+ 94C2 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94C3 7D           	ld a,l
 220+ 94C4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94C5 CB 47        	bit 0,a
 222+ 94C7 28 03        	jr z,5F
 223+ 94C9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94CA 18 2E        	jr 7F
 225+ 94CC
 226+ 94CC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94CC
 228+ 94CC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94CD F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94CE 3A F8 88     	ld a,(Ctrl_0)
 231+ 94D1 CB 4F        	bit 1,a
 232+ 94D3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94D5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94D6
 235+ 94D6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94D6
 237+ 94D6 1C               inc e
 238+ 94D7 1D               dec e
 239+ 94D8 20 07            jr nz,12F
 240+ 94DA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94DB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94DC 22 CA 88     	ld (Posicion_actual),hl
 243+ 94DF 18 44        13 jr 9F
 244+ 94E1 CB 43        12 bit 0,e
 245+ 94E3 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94E5              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94E5 C1           	pop bc
 248+ 94E6 18 D3        	jr 3B
 249+ 94E8 80           14 add b
 250+ 94E9 6F               ld l,a
 251+ 94EA 22 CA 88     	ld (Posicion_actual),hl
 252+ 94ED CD 48 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94F0 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94F2 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94F4 32 F8 88         ld (Ctrl_0),a
 256+ 94F7 F1           	pop af
 257+ 94F8 18 2B        	jr 9F
 258+ 94FA
 259+ 94FA              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94FA
 261+ 94FA F5           7 push af
 262+ 94FB 3A F8 88     	ld a,(Ctrl_0)
 263+ 94FE CB 47        	bit 0,a
 264+ 9500 20 1D        	jr nz,8F
 265+ 9502 F1           	pop af
 266+ 9503
 267+ 9503              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9503
 269+ 9503 1C           	inc e
 270+ 9504 1D               dec e
 271+ 9505 20 07            jr nz,10F
 272+ 9507 90           	sub b
 273+ 9508 6F               ld l,a
 274+ 9509 22 CA 88     	ld (Posicion_actual),hl
 275+ 950C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 950E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 950E CB 43        10 bit 0,e
 278+ 9510 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9512              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9512 C1           	pop bc
 281+ 9513 18 A6        	jr 3B
 282+ 9515 90           16 sub b
 283+ 9516 6F               ld l,a
 284+ 9517 22 CA 88     	ld (Posicion_actual),hl
 285+ 951A CD 48 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 951D 18 06            jr 9F
 287+ 951F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9521 32 F8 88         ld (Ctrl_0),a
 289+ 9524 F1           	pop af
 290+ 9525 C1           9 pop bc
 291+ 9526 1E 00        	ld e,0
 292+ 9528 CD 58 95         call Inicializacion
 293+ 952B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 952C 08           	ex af,af
 295+ 952D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 952E 18 8B            jr 3B
 297+ 9530
 298+ 9530              ; --------------------
 299+ 9530
 300+ 9530 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9532 CD B6 96     1 call PreviousScan
 302+ 9535 10 FB            djnz 1B
 303+ 9537 22 CA 88     	ld (Posicion_actual),hl
 304+ 953A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 953B C9           	ret
 306+ 953C
 307+ 953C              ; --------------------
 308+ 953C
 309+ 953C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 953E CD A7 96     1 call NextScan
 311+ 9541 10 FB            djnz 1B
 312+ 9543 22 CA 88     	ld (Posicion_actual),hl
 313+ 9546 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9547 C9           	ret
 315+ 9548
 316+ 9548              ; --------------------
 317+ 9548              ;
 318+ 9548              ;	22/01/23
 319+ 9548              ;
 320+ 9548              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9548              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9548              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9548
 324+ 9548
 325+ 9548              Modificaccionne
 326+ 9548
 327+ 9548 3A DC 88     	ld a,(Cuad_objeto)
 328+ 954B FE 02        	cp 2
 329+ 954D CC 30 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9550 DC 30 95         call c,Modifica_Pos_actual
 331+ 9553 C8           	ret z
 332+ 9554 CD 3C 95         call Modifica_Pos_actual2
 333+ 9557 C9               ret
 334+ 9558
 335+ 9558              ; *************************************************************************************************************************************************************************************************
 336+ 9558              ;
 337+ 9558              ;	13/8/22
 338+ 9558              ;
 339+ 9558              ;	Inicializacion
 340+ 9558              ;
 341+ 9558              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9558              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9558              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9558              ;
 345+ 9558              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9558              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9558              ;	_ desaparece/aparece.
 348+ 9558
 349+ 9558              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9558              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9558              ;
 352+ 9558              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9558              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9558              ; 		   [E] ="0"
 355+ 9558
 356+ 9558              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9558
 358+ 9558 CD BA 99     Inicializacion call calcula_tercio
 359+ 955B 28 36        	jr z,primit
 360+ 955D E6 02        	and 2
 361+ 955F 20 07        	jr nz,segmit
 362+ 9561 7D           	ld a,l
 363+ 9562 FE 7F        	cp $7f
 364+ 9564 38 2D        	jr c,primit
 365+ 9566 28 2B        	jr z,primit
 366+ 9568 CD C5 95     segmit call column
 367+ 956B 38 13        	jr c,tercuad
 368+ 956D 3E 04        cuarcuad ld a,4
 369+ 956F 32 DC 88     	ld (Cuad_objeto),a
 370+ 9572 21 20 48     	ld hl,$4820
 371+ 9575 22 06 89     	ld (Limite_horizontal),hl
 372+ 9578 21 08 89     	ld hl,Limite_vertical
 373+ 957B 36 0D        	ld (hl),$0d
 374+ 957D 08           	ex af,af
 375+ 957E 18 3C        	jr 1F
 376+ 9580              tercuad
 377+ 9580 3E 03        	ld a,3
 378+ 9582 32 DC 88     	ld (Cuad_objeto),a
 379+ 9585 21 20 48     	ld hl,$4820
 380+ 9588 22 06 89     	ld (Limite_horizontal),hl
 381+ 958B 21 08 89     	ld hl,Limite_vertical
 382+ 958E 36 12        	ld (hl),$12
 383+ 9590 08           	ex af,af
 384+ 9591 18 29        	jr 1F
 385+ 9593 CD C5 95     primit call column
 386+ 9596 38 13        	jr c, primcuad
 387+ 9598              segcuad
 388+ 9598 3E 02        	ld a,2
 389+ 959A 32 DC 88     	ld (Cuad_objeto),a
 390+ 959D 21 C0 4F     	ld hl,$4fc0
 391+ 95A0 22 06 89     	ld (Limite_horizontal),hl
 392+ 95A3 21 08 89     	ld hl,Limite_vertical
 393+ 95A6 36 0D        	ld (hl),$0d
 394+ 95A8 08           	ex af,af
 395+ 95A9 18 11        	jr 1F
 396+ 95AB              primcuad
 397+ 95AB 3E 01        	ld a,1
 398+ 95AD 32 DC 88     	ld (Cuad_objeto),a
 399+ 95B0 21 C0 4F     	ld hl,$4fc0
 400+ 95B3 22 06 89     	ld (Limite_horizontal),hl
 401+ 95B6 21 08 89     	ld hl,Limite_vertical
 402+ 95B9 36 12        	ld (hl),$12
 403+ 95BB 08           	ex af,af
 404+ 95BC CD 4F 9D     1 call Genera_coordenadas
 405+ 95BF 21 F8 88     	ld hl,Ctrl_0
 406+ 95C2 CB EE        	set 5,(hl)
 407+ 95C4 C9           	ret
 408+ 95C5
 409+ 95C5              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95C5
 411+ 95C5              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95C5              ;
 413+ 95C5              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95C5
 415+ 95C5 7D           column ld a,l
 416+ 95C6 E6 1F        	and $1f
 417+ 95C8 FE 10         	cp $10
 418+ 95CA C9            	ret
 419+ 95CB
 420+ 95CB              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95CB              ;
 422+ 95CB              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95CB              ;
 424+ 95CB              ; 14/12/22
 425+ 95CB              ;
 426+ 95CB              ;	Modifica: A y BC.
 427+ 95CB
 428+ 95CB 3A DC 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95CE E6 01        	and 1
 430+ 95D0 28 17        	jr z,1F
 431+ 95D2
 432+ 95D2              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95D2
 434+ 95D2 3A CE 88     	ld a,(Coordenada_X)
 435+ 95D5 47           	ld b,a
 436+ 95D6 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95D7 79           	ld a,c
 438+ 95D8 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95D9 38 08        	jr c,2F
 440+ 95DB 47           	ld b,a
 441+ 95DC 79           	ld a,c
 442+ 95DD 90           	sub b
 443+ 95DE 32 05 89     	ld (Columnas),a
 444+ 95E1 18 1B        	jr 4F
 445+ 95E3 79           2 ld a,c
 446+ 95E4 32 05 89     	ld (Columnas),a
 447+ 95E7 18 15        	jr 4F
 448+ 95E9
 449+ 95E9              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95E9
 451+ 95E9 3A CE 88     1 ld a,(Coordenada_X)
 452+ 95EC 81           	add c
 453+ 95ED 3D           	dec a
 454+ 95EE D6 1F        	sub $1f
 455+ 95F0 38 08        	jr c,3F
 456+ 95F2 47           	ld b,a
 457+ 95F3 79           	ld a,c
 458+ 95F4 90           	sub b
 459+ 95F5 32 05 89     	ld (Columnas),a
 460+ 95F8 18 04        	jr 4F
 461+ 95FA 79           3 ld a,c
 462+ 95FB 32 05 89     	ld (Columnas),a
 463+ 95FE D9           4 exx
 464+ 95FF 4F           	ld c,a
 465+ 9600 D9           	exx
 466+ 9601 C9            ret
 467+ 9602
 468+ 9602              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9602              ;
 470+ 9602              ;   19/7/23
 471+ 9602              ;
 472+ 9602              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9602              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9602              ;
 475+ 9602              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9602              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9602              ;
 478+ 9602              ;	DESTRUYE: HL,B Y A.
 479+ 9602
 480+ 9602 3A DC 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9605 FE 02        	cp 2
 482+ 9607 38 18        	jr c,1F
 483+ 9609 28 16        	jr z,1F
 484+ 960B E6 01        	and 1
 485+ 960D 28 0D        	jr z,3F
 486+ 960F
 487+ 960F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 960F
 489+ 960F CD 55 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9612
 491+ 9612 7D           9 ld a,l
 492+ 9613 E6 1F        	and $1f
 493+ 9615 28 2A        	jr z,7F
 494+ 9617 2B           	dec hl
 495+ 9618 10 F8        	djnz 9B
 496+ 961A 18 25        	jr 7F
 497+ 961C
 498+ 961C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 961C
 500+ 961C 2A CA 88     3 ld hl,(Posicion_actual)
 501+ 961F 18 20        	jr 7F
 502+ 9621
 503+ 9621 28 14        1 jr z,2F
 504+ 9623
 505+ 9623              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9623
 507+ 9623 CD 55 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9626
 509+ 9626 7D           4 ld a,l
 510+ 9627 E6 1F        	and $1f
 511+ 9629 28 03        	jr z,6F
 512+ 962B 2B           	dec hl
 513+ 962C 10 F8        	djnz 4B
 514+ 962E 06 0F        6 ld b,15
 515+ 9630 CD B6 96     5 call PreviousScan
 516+ 9633 10 FB        	djnz 5B
 517+ 9635 18 0A        	jr 7F
 518+ 9637
 519+ 9637              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9637
 521+ 9637 CD 55 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 963A 06 0F        	ld b,15
 523+ 963C CD B6 96     8 call PreviousScan
 524+ 963F 10 FB        	djnz 8B
 525+ 9641
 526+ 9641 E5           7 push hl
 527+ 9642 DD E1        	pop ix
 528+ 9644
 529+ 9644 2A CC 88     	ld hl,(Puntero_objeto)
 530+ 9647 E5           	push hl
 531+ 9648 FD E1        	pop iy
 532+ 964A
 533+ 964A              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 964A
 535+ 964A 3A F8 88     	ld a,(Ctrl_0)
 536+ 964D CB 77        	bit 6,a
 537+ 964F C8           	ret z
 538+ 9650
 539+ 9650              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9650              ; _ entidad / Amadeus´.
 541+ 9650
 542+ 9650 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9654
 544+ 9654 C9           	ret
 545+ 9655
 546+ 9655              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9655              ;
 548+ 9655              ;	2/1/23
 549+ 9655              ;
 550+ 9655              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9655              ;
 552+ 9655              ;	Tras esta rutina tenemos:
 553+ 9655              ;
 554+ 9655              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9655              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9655              ;
 557+ 9655              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9655
 559+ 9655 2A CA 88     Operandos ld hl,(Posicion_actual)
 560+ 9658 3A 05 89     	ld a,(Columnas)
 561+ 965B 3D           	dec a
 562+ 965C 20 01        	jr nz,1F
 563+ 965E 3C           	inc a
 564+ 965F 47           1 ld b,a
 565+ 9660 C9           	ret
 566+ 9661
 567+ 9661              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9661              ;
 569+ 9661              ;	3/1/23
 570+ 9661              ;
 571+ 9661              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9661              ;
 573+ 9661              ;	Destruye: A,B,HL y DE.
 574+ 9661
 575+ 9661              Define_rutina_de_impresion
 576+ 9661
 577+ 9661 3A C9 88     	ld a,(Columns)
 578+ 9664 47           	ld b,a
 579+ 9665 3A 05 89     	ld a,(Columnas)
 580+ 9668 B8           	cp b
 581+ 9669 20 0D        	jr nz,2f
 582+ 966B
 583+ 966B              ;	La entidad se imprime entera.
 584+ 966B
 585+ 966B 21 8A 97     	ld hl, Indice_entidades_completas
 586+ 966E E6 01        	and 1
 587+ 9670 28 02        	jr z,1F
 588+ 9672
 589+ 9672 23           	inc hl
 590+ 9673 23           	inc hl
 591+ 9674
 592+ 9674 CD 3B 8D     1 call Extrae_address
 593+ 9677 C9           	ret		;	ret
 594+ 9678
 595+ 9678              ;	La entidad no se imprime entera en pantalla.
 596+ 9678
 597+ 9678 3A DC 88     2 ld a,(Cuad_objeto)
 598+ 967B E6 01        	and 1
 599+ 967D 28 17        	jr z,3F
 600+ 967F
 601+ 967F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 967F
 603+ 967F 21 8E 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9682 3A C9 88     4 ld a,(Columns)
 605+ 9685 E6 01        	and 1
 606+ 9687 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 9689
 608+ 9689 23           	inc hl
 609+ 968A 23           	inc hl
 610+ 968B
 611+ 968B 3A 05 89     	ld a,(Columnas)
 612+ 968E E6 01        	and 1
 613+ 9690 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9692
 615+ 9692 23           	inc hl
 616+ 9693 23           	inc hl
 617+ 9694
 618+ 9694 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9696
 620+ 9696 21 94 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 9699 18 E7        	jr 4B
 622+ 969B
 623+ 969B              ; --------------------------------------------------------------------------------------------------------------------
 624+ 969B              ;
 625+ 969B              ;	Prepara_draw
 626+ 969B              ;
 627+ 969B              ;	Es una rutina de carga.
 628+ 969B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 969B              ;
 630+ 969B              ;	FUNCIONAMIENTO:
 631+ 969B              ;
 632+ 969B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 969B              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 969B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 969B              ;
 636+ 969B              ;	DESTRUYE:
 637+ 969B              ;
 638+ 969B              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 969B
 640+ 969B 21 C8 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 969E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 969F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 96A0 4E           	ld c,(hl)
 644+ 96A1 2A CA 88     	ld hl,(Posicion_actual)
 645+ 96A4 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 96A6 C9           	ret
 647+ 96A7
 648+ 96A7              ;----------------------------------------------------------------------------------------------------------------
 649+ 96A7              ;
 650+ 96A7              ;	5/08/22
 651+ 96A7              ;
 652+ 96A7              ;   NextScan.
 653+ 96A7              ;
 654+ 96A7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 96A7              ;
 656+ 96A7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 96A7              ;
 658+ 96A7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 96A7              ;
 660+ 96A7              ;       DESTRUIDOS: AF y HL !!!
 661+ 96A7              ;
 662+ 96A7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 96A7              ;
 664+ 96A7
 665+ 96A7 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 96A8 7C               ld a,h
 667+ 96A9 E6 07            and 7
 668+ 96AB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 96AC
 670+ 96AC 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 96AD C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 96AF 6F               ld l,a
 673+ 96B0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 96B1
 675+ 96B1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 96B2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 96B4 67               ld h,a
 678+ 96B5 C9               ret
 679+ 96B6
 680+ 96B6              ;----------------------------------------------------------------------------------------------------------------
 681+ 96B6              ;
 682+ 96B6              ;	5/08/22
 683+ 96B6              ;
 684+ 96B6              ;   PreviousScan.
 685+ 96B6              ;
 686+ 96B6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96B6              ;
 688+ 96B6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96B6              ;
 690+ 96B6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96B6              ;
 692+ 96B6              ;       DESTRUIDOS: AF y HL !!!
 693+ 96B6              ;
 694+ 96B6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96B6              ;
 696+ 96B6
 697+ 96B6 7C           PreviousScan ld a,h
 698+ 96B7 25               dec h               ; Dec H.
 699+ 96B8 E6 07            and 7
 700+ 96BA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96BB
 702+ 96BB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96BC D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96BE 6F               ld l,a
 705+ 96BF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96C0
 707+ 96C0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96C1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96C3 67               ld h,a
 710+ 96C4 C9               ret
 711+ 96C5
 712+ 96C5              ; -----------------------------------------------------------------------------------
 713+ 96C5              ;
 714+ 96C5              ;	31/7/23
 715+ 96C5              ;
 716+ 96C5              ;	Rutina principal de pintado de entidades.
 717+ 96C5              ;	Extrae la foto del frame, (entidades).
 718+ 96C5
 719+ 96C5              Extrae_foto_entidades
 720+ 96C5
 721+ 96C5 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96C8 7E           	ld a,(hl)
 723+ 96C9 A7           	and a
 724+ 96CA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96CB
 726+ 96CB              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96CB
 728+ 96CB 3A 19 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96CE A7           	and a
 730+ 96CF C8           	ret z
 731+ 96D0
 732+ 96D0              ; -----------------------------------
 733+ 96D0
 734+ 96D0 ED 73 1E 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96D4 31 00 70     	ld sp,Album_de_fotos
 736+ 96D7
 737+ 96D7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96D9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96DA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96DB
 741+ 96DB ED 73 20 89  	ld (Stack_2),sp
 742+ 96DF ED 7B 1E 89  	ld sp,(Stack)
 743+ 96E3
 744+ 96E3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96E3
 746+ 96E3 3E CD        	ld a,$cd
 747+ 96E5 32 ED 96     	ld (Imprime),a
 748+ 96E8 EB           	ex de,hl
 749+ 96E9 22 EE 96     	ld (Imprime+1),hl
 750+ 96EC EB           	ex de,hl
 751+ 96ED
 752+ 96ED              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96ED
 754+ 96ED 00 00 00     Imprime db 0,0,0
 755+ 96F0
 756+ 96F0 ED 73 1E 89  	ld (Stack),sp
 757+ 96F4
 758+ 96F4 3A 19 89     	ld a,(Numero_de_malotes)
 759+ 96F7 3D           	dec a
 760+ 96F8 28 09        	jr z,1F
 761+ 96FA 32 19 89      	ld (Numero_de_malotes),a
 762+ 96FD
 763+ 96FD ED 7B 20 89  	ld sp,(Stack_2)
 764+ 9701 18 D4        	jr 2B
 765+ 9703
 766+ 9703 AF           1 xor a
 767+ 9704 32 20 89     	ld (Stack_2),a
 768+ 9707
 769+ 9707 C9           	ret
 770+ 9708
 771+ 9708              ; -----------------------------------------------------------------------------------
 772+ 9708              ;
 773+ 9708              ;	28/2/23
 774+ 9708              ;
 775+ 9708              ;	Pinta los disparos generados.
 776+ 9708
 777+ 9708              Extrae_foto_disparos
 778+ 9708
 779+ 9708 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 970B 7E               ld a,(hl)
 781+ 970C A7               and a
 782+ 970D C8               ret z
 783+ 970E
 784+ 970E 3A 2D 89     	ld a,(Numero_de_disparotes)
 785+ 9711 A7           	and a
 786+ 9712 C8           	ret z
 787+ 9713 ED 73 1E 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9717 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 971A
 790+ 971A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 971C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 971D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 971E
 794+ 971E ED 73 20 89  	ld (Stack_2),sp
 795+ 9722 ED 7B 1E 89  	ld sp,(Stack)
 796+ 9726
 797+ 9726              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9726
 799+ 9726 3E CD        	ld a,$cd
 800+ 9728 32 30 97     	ld (Imprime2),a
 801+ 972B EB           	ex de,hl
 802+ 972C 22 31 97     	ld (Imprime2+1),hl
 803+ 972F EB           	ex de,hl
 804+ 9730
 805+ 9730              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9730
 807+ 9730 00 00 00     Imprime2 db 0,0,0
 808+ 9733
 809+ 9733 3A 2D 89     	ld a,(Numero_de_disparotes)
 810+ 9736 3D           	dec a
 811+ 9737 28 09        	jr z,1F
 812+ 9739 32 2D 89      	ld (Numero_de_disparotes),a
 813+ 973C
 814+ 973C ED 7B 20 89  	ld sp,(Stack_2)
 815+ 9740 18 D8        	jr 2B
 816+ 9742
 817+ 9742 AF           1 xor a
 818+ 9743 32 20 89     	ld (Stack_2),a
 819+ 9746 C9           	ret
 820+ 9747
 821+ 9747              ; -----------------------------------------------------------------------------------
 822+ 9747              ;
 823+ 9747              ;	4/9/23
 824+ 9747              ;
 825+ 9747              ;	Rutina principal de pintado de Amadeus.
 826+ 9747              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9747
 828+ 9747 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 974A 7E           	ld a,(hl)
 830+ 974B A7           	and a
 831+ 974C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 974D
 833+ 974D 3A 19 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9750 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9751 C8           	ret z
 836+ 9752
 837+ 9752              ; -----------------------------------
 838+ 9752
 839+ 9752 ED 73 1E 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9756 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 9759
 842+ 9759 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 975B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 975C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 975D
 846+ 975D ED 73 20 89  	ld (Stack_2),sp
 847+ 9761 ED 7B 1E 89  	ld sp,(Stack)
 848+ 9765
 849+ 9765              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9765
 851+ 9765 3E CD        	ld a,$cd
 852+ 9767 32 6F 97     	ld (Imprime_Amadeus),a
 853+ 976A EB           	ex de,hl
 854+ 976B 22 70 97     	ld (Imprime_Amadeus+1),hl
 855+ 976E EB           	ex de,hl
 856+ 976F
 857+ 976F              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 976F
 859+ 976F 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9772
 861+ 9772 ED 73 1E 89  	ld (Stack),sp
 862+ 9776
 863+ 9776 3A 19 89     	ld a,(Numero_de_malotes)
 864+ 9779 3D           	dec a
 865+ 977A 28 09        	jr z,1F
 866+ 977C 32 19 89      	ld (Numero_de_malotes),a
 867+ 977F
 868+ 977F ED 7B 20 89  	ld sp,(Stack_2)
 869+ 9783 18 D4        	jr 2B
 870+ 9785
 871+ 9785 AF           1 xor a
 872+ 9786 32 20 89     	ld (Stack_2),a
 873+ 9789
 874+ 9789 C9           	ret
# file closed: Draw_XOR.asm
1838  978A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 978A              ;   índices de Rutinas de impresión.
   2+ 978A
   3+ 978A 9A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 978C C7 97            defw Pinta_Amadeus_3x2
   5+ 978E
   6+ 978E 1D 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9790 BD 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9792 71 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9794
  10+ 9794 47 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9796 4B 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9798 FF 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 979A
  14+ 979A
  15+ 979A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 979A              ;
  17+ 979A              ;   12/12/22
  18+ 979A              ;
  19+ 979A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 979A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 979A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 979A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 979A              ;
  24+ 979A              ;   Modifica: DE y HL.
  25+ 979A
  26+ 979A ED 73 1E 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 979E FD F9        	ld sp,iy
  28+ 97A0 06 10            ld b,16
  29+ 97A2 D1           1 pop de
  30+ 97A3 7B               ld a,e
  31+ 97A4 AE               xor (hl)
  32+ 97A5 77           	ld (hl),a
  33+ 97A6 23           	inc hl
  34+ 97A7 7A               ld a,d
  35+ 97A8 AE               xor (hl)
  36+ 97A9 77           	ld (hl),a
  37+ 97AA 2B           	dec hl
  38+ 97AB 24           	inc h
  39+ 97AC 7C               ld a,h
  40+ 97AD E6 07            and 7
  41+ 97AF 20 0A            jr nz,2F
  42+ 97B1 7D               ld a,l
  43+ 97B2 C6 20            add a,$20
  44+ 97B4 6F               ld l,a
  45+ 97B5 38 04            jr c,2F
  46+ 97B7 7C               ld a,h
  47+ 97B8 D6 08            sub 8
  48+ 97BA 67               ld h,a
  49+ 97BB 7C           2 ld a,h
  50+ 97BC FE 58            cp $58
  51+ 97BE 28 02            jr z,3F
  52+ 97C0 10 E0            djnz 1B
  53+ 97C2 ED 7B 1E 89  3 ld sp,(Stack)
  54+ 97C6 C9           	ret
  55+ 97C7
  56+ 97C7 ED 73 1E 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97CB FD F9        	ld sp,iy
  58+ 97CD 06 08            ld b,8
  59+ 97CF D1           1 pop de
  60+ 97D0 7B               ld a,e
  61+ 97D1 AE               xor (hl)
  62+ 97D2 77           	ld (hl),a
  63+ 97D3 23           	inc hl
  64+ 97D4 7A               ld a,d
  65+ 97D5 AE               xor (hl)
  66+ 97D6 77           	ld (hl),a
  67+ 97D7 23           	inc hl
  68+ 97D8 D1           	pop de
  69+ 97D9 7B               ld a,e
  70+ 97DA AE               xor (hl)
  71+ 97DB 77           	ld (hl),a
  72+ 97DC 2B           	dec hl
  73+ 97DD 2B           	dec hl
  74+ 97DE 24           	inc h
  75+ 97DF 7C               ld a,h
  76+ 97E0 E6 07            and 7
  77+ 97E2 20 0A            jr nz,2F
  78+ 97E4 7D               ld a,l
  79+ 97E5 C6 20            add a,$20
  80+ 97E7 6F               ld l,a
  81+ 97E8 38 04            jr c,2F
  82+ 97EA 7C               ld a,h
  83+ 97EB D6 08            sub 8
  84+ 97ED 67               ld h,a
  85+ 97EE 7C           2 ld a,h
  86+ 97EF FE 58            cp $58
  87+ 97F1 28 25            jr z,4F
  88+ 97F3 7A               ld a,d
  89+ 97F4 AE               xor (hl)
  90+ 97F5 77               ld (hl),a
  91+ 97F6 D1           	pop de
  92+ 97F7 23           	inc hl
  93+ 97F8 7B               ld a,e
  94+ 97F9 AE               xor (hl)
  95+ 97FA 77           	ld (hl),a
  96+ 97FB 23           	inc hl
  97+ 97FC 7A               ld a,d
  98+ 97FD AE               xor (hl)
  99+ 97FE 77           	ld (hl),a
 100+ 97FF 2B           	dec hl
 101+ 9800 2B           	dec hl
 102+ 9801 24           	inc h
 103+ 9802 7C               ld a,h
 104+ 9803 E6 07            and 7
 105+ 9805 20 0A            jr nz,3F
 106+ 9807 7D               ld a,l
 107+ 9808 C6 20            add a,$20
 108+ 980A 6F               ld l,a
 109+ 980B 38 04            jr c,3F
 110+ 980D 7C               ld a,h
 111+ 980E D6 08            sub 8
 112+ 9810 67               ld h,a
 113+ 9811 7C           3 ld a,h
 114+ 9812 FE 58            cp $58
 115+ 9814 28 02            jr z,4F
 116+ 9816 10 B7            djnz 1B
 117+ 9818 ED 7B 1E 89  4 ld sp,(Stack)
 118+ 981C C9           	ret
 119+ 981D
 120+ 981D              ; ---------------------------------------------------
 121+ 981D
 122+ 981D ED 73 1E 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9821 FD F9        	ld sp,iy
 124+ 9823
 125+ 9823              ; >>>
 126+ 9823
 127+ 9823 06 10            ld b,16
 128+ 9825 D1           1 pop de
 129+ 9826 7A           	ld a,d
 130+ 9827 AE           	xor (hl)
 131+ 9828 77           	ld (hl),a
 132+ 9829 24           	inc h
 133+ 982A 7C               ld a,h
 134+ 982B E6 07            and 7
 135+ 982D 20 0C            jr nz,2F
 136+ 982F 7D               ld a,l
 137+ 9830 C6 20            add a,$20
 138+ 9832 6F               ld l,a
 139+ 9833 38 06            jr c,2F
 140+ 9835 7C               ld a,h
 141+ 9836 D6 08            sub 8
 142+ 9838 67               ld h,a
 143+ 9839 18 00            jr 2F
 144+ 983B 7C           2 ld a,h
 145+ 983C FE 58            cp $58
 146+ 983E 28 02            jr z,3F
 147+ 9840 10 E3            djnz 1B
 148+ 9842 ED 7B 1E 89  3 ld sp,(Stack)
 149+ 9846 C9           	ret
 150+ 9847
 151+ 9847 ED 73 1E 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 984B FD F9        	ld sp,iy
 153+ 984D
 154+ 984D              ; >>>
 155+ 984D
 156+ 984D 06 10            ld b,16
 157+ 984F D1           1 pop de
 158+ 9850 7B           	ld a,e
 159+ 9851 AE           	xor (hl)
 160+ 9852 77           	ld (hl),a
 161+ 9853 24           	inc h
 162+ 9854 7C               ld a,h
 163+ 9855 E6 07            and 7
 164+ 9857 20 0C            jr nz,2F
 165+ 9859 7D               ld a,l
 166+ 985A C6 20            add a,$20
 167+ 985C 6F               ld l,a
 168+ 985D 38 06            jr c,2F
 169+ 985F 7C               ld a,h
 170+ 9860 D6 08            sub 8
 171+ 9862 67               ld h,a
 172+ 9863 18 00            jr 2F
 173+ 9865 7C           2 ld a,h
 174+ 9866 FE 58            cp $58
 175+ 9868 28 02            jr z,3F
 176+ 986A 10 E3            djnz 1B
 177+ 986C ED 7B 1E 89  3 ld sp,(Stack)
 178+ 9870 C9           	ret
 179+ 9871
 180+ 9871              ; ---------------------------------------------------
 181+ 9871
 182+ 9871 ED 73 1E 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9875 FD F9        	ld sp,iy
 184+ 9877 06 08            ld b,8
 185+ 9879 D1           1 pop de
 186+ 987A 7A           	ld a,d
 187+ 987B AE           	xor (hl)
 188+ 987C 77           	ld (hl),a
 189+ 987D 23           	inc hl
 190+ 987E D1           	pop de
 191+ 987F 7B           	ld a,e
 192+ 9880 AE           	xor (hl)
 193+ 9881 77           	ld (hl),a
 194+ 9882 2B           	dec hl
 195+ 9883 24            	inc h
 196+ 9884 7C               ld a,h
 197+ 9885 E6 07            and 7
 198+ 9887 20 0A            jr nz,2F
 199+ 9889 7D               ld a,l
 200+ 988A C6 20            add a,$20
 201+ 988C 6F               ld l,a
 202+ 988D 38 04            jr c,2F
 203+ 988F 7C               ld a,h
 204+ 9890 D6 08            sub 8
 205+ 9892 67               ld h,a
 206+ 9893 7C           2 ld a,h
 207+ 9894 FE 58            cp $58
 208+ 9896 28 20            jr z,4F
 209+ 9898 D1               pop de
 210+ 9899 7B           	ld a,e
 211+ 989A AE           	xor (hl)
 212+ 989B 77           	ld (hl),a
 213+ 989C 23           	inc hl
 214+ 989D 7A           	ld a,d
 215+ 989E AE           	xor (hl)
 216+ 989F 77           	ld (hl),a
 217+ 98A0 2B           	dec hl
 218+ 98A1 24           	inc h
 219+ 98A2 7C               ld a,h
 220+ 98A3 E6 07            and 7
 221+ 98A5 20 0A            jr nz,3F
 222+ 98A7 7D               ld a,l
 223+ 98A8 C6 20            add a,$20
 224+ 98AA 6F               ld l,a
 225+ 98AB 38 04            jr c,3F
 226+ 98AD 7C               ld a,h
 227+ 98AE D6 08            sub 8
 228+ 98B0 67               ld h,a
 229+ 98B1 7C           3 ld a,h
 230+ 98B2 FE 58            cp $58
 231+ 98B4 28 02            jr z,4F
 232+ 98B6 10 C1            djnz 1B
 233+ 98B8 ED 7B 1E 89  4 ld sp,(Stack)
 234+ 98BC C9           	ret
 235+ 98BD
 236+ 98BD ED 73 1E 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98C1 FD F9        	ld sp,iy
 238+ 98C3 06 08            ld b,8
 239+ 98C5 D1           1 pop de
 240+ 98C6 D1           	pop de
 241+ 98C7 7B           	ld a,e
 242+ 98C8 AE           	xor (hl)
 243+ 98C9 77           	ld (hl),a
 244+ 98CA 24            	inc h
 245+ 98CB 7C               ld a,h
 246+ 98CC E6 07            and 7
 247+ 98CE 20 0A            jr nz,2F
 248+ 98D0 7D               ld a,l
 249+ 98D1 C6 20            add a,$20
 250+ 98D3 6F               ld l,a
 251+ 98D4 38 04            jr c,2F
 252+ 98D6 7C               ld a,h
 253+ 98D7 D6 08            sub 8
 254+ 98D9 67               ld h,a
 255+ 98DA 7C           2 ld a,h
 256+ 98DB FE 58            cp $58
 257+ 98DD 28 1B            jr z,4F
 258+ 98DF D1               pop de
 259+ 98E0 7A           	ld a,d
 260+ 98E1 AE           	xor (hl)
 261+ 98E2 77           	ld (hl),a
 262+ 98E3 24           	inc h
 263+ 98E4 7C               ld a,h
 264+ 98E5 E6 07            and 7
 265+ 98E7 20 0A            jr nz,3F
 266+ 98E9 7D               ld a,l
 267+ 98EA C6 20            add a,$20
 268+ 98EC 6F               ld l,a
 269+ 98ED 38 04            jr c,3F
 270+ 98EF 7C               ld a,h
 271+ 98F0 D6 08            sub 8
 272+ 98F2 67               ld h,a
 273+ 98F3 7C           3 ld a,h
 274+ 98F4 FE 58            cp $58
 275+ 98F6 28 02            jr z,4F
 276+ 98F8 10 CB            djnz 1B
 277+ 98FA ED 7B 1E 89  4 ld sp,(Stack)
 278+ 98FE C9           	ret
 279+ 98FF
 280+ 98FF ED 73 1E 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9903 FD F9        	ld sp,iy
 282+ 9905 06 08            ld b,8
 283+ 9907 D1           1 pop de
 284+ 9908 7B           	ld a,e
 285+ 9909 AE           	xor (hl)
 286+ 990A 77           	ld (hl),a
 287+ 990B 23           	inc hl
 288+ 990C 7A           	ld a,d
 289+ 990D AE           	xor (hl)
 290+ 990E 77           	ld (hl),a
 291+ 990F 2B           	dec hl
 292+ 9910 24             	inc h
 293+ 9911 7C               ld a,h
 294+ 9912 E6 07            and 7
 295+ 9914 20 0A            jr nz,2F
 296+ 9916 7D               ld a,l
 297+ 9917 C6 20            add a,$20
 298+ 9919 6F               ld l,a
 299+ 991A 38 04            jr c,2F
 300+ 991C 7C               ld a,h
 301+ 991D D6 08            sub 8
 302+ 991F 67               ld h,a
 303+ 9920 7C           2 ld a,h
 304+ 9921 FE 58            cp $58
 305+ 9923 28 21            jr z,4F
 306+ 9925 D1               pop de
 307+ 9926 7A           	ld a,d
 308+ 9927 AE           	xor (hl)
 309+ 9928 77           	ld (hl),a
 310+ 9929 23           	inc hl
 311+ 992A D1               pop de
 312+ 992B 7B           	ld a,e
 313+ 992C AE           	xor (hl)
 314+ 992D 77           	ld (hl),a
 315+ 992E 2B           	dec hl
 316+ 992F 24           	inc h
 317+ 9930 7C               ld a,h
 318+ 9931 E6 07            and 7
 319+ 9933 20 0A            jr nz,3F
 320+ 9935 7D               ld a,l
 321+ 9936 C6 20            add a,$20
 322+ 9938 6F               ld l,a
 323+ 9939 38 04            jr c,3F
 324+ 993B 7C               ld a,h
 325+ 993C D6 08            sub 8
 326+ 993E 67               ld h,a
 327+ 993F 7C           3 ld a,h
 328+ 9940 FE 58            cp $58
 329+ 9942 28 02            jr z,4F
 330+ 9944 10 C1            djnz 1B
 331+ 9946 ED 7B 1E 89  4 ld sp,(Stack)
 332+ 994A C9           	ret
 333+ 994B
 334+ 994B ED 73 1E 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 994F FD F9        	ld sp,iy
 336+ 9951 06 08            ld b,8
 337+ 9953 D1           1 pop de
 338+ 9954 7B           	ld a,e
 339+ 9955 AE           	xor (hl)
 340+ 9956 77           	ld (hl),a
 341+ 9957 24            	inc h
 342+ 9958 7C               ld a,h
 343+ 9959 E6 07            and 7
 344+ 995B 20 0A            jr nz,2F
 345+ 995D 7D               ld a,l
 346+ 995E C6 20            add a,$20
 347+ 9960 6F               ld l,a
 348+ 9961 38 04            jr c,2F
 349+ 9963 7C               ld a,h
 350+ 9964 D6 08            sub 8
 351+ 9966 67               ld h,a
 352+ 9967 7C           2 ld a,h
 353+ 9968 FE 58            cp $58
 354+ 996A 28 1C            jr z,4F
 355+ 996C D1               pop de
 356+ 996D 7A           	ld a,d
 357+ 996E AE           	xor (hl)
 358+ 996F 77           	ld (hl),a
 359+ 9970 24           	inc h
 360+ 9971 7C               ld a,h
 361+ 9972 E6 07            and 7
 362+ 9974 20 0A            jr nz,3F
 363+ 9976 7D               ld a,l
 364+ 9977 C6 20            add a,$20
 365+ 9979 6F               ld l,a
 366+ 997A 38 04            jr c,3F
 367+ 997C 7C               ld a,h
 368+ 997D D6 08            sub 8
 369+ 997F 67               ld h,a
 370+ 9980 7C           3 ld a,h
 371+ 9981 FE 58            cp $58
 372+ 9983 28 03            jr z,4F
 373+ 9985 D1               pop de
 374+ 9986 10 CB            djnz 1B
 375+ 9988 ED 7B 1E 89  4 ld sp,(Stack)
 376+ 998C C9           	ret
 377+ 998D
 378+ 998D              ; ---------------------------------------------------
 379+ 998D              ;
 380+ 998D              ;   27/02/23
 381+ 998D              ;
 382+ 998D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 998D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 998D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 998D
 386+ 998D ED 73 1E 89  Pinta_Disparo ld (Stack),sp
 387+ 9991 FD F9            ld sp,iy
 388+ 9993 06 03            ld b,3
 389+ 9995 D1           1 pop de
 390+ 9996 7B               ld a,e
 391+ 9997 AE               xor (hl)
 392+ 9998 77               ld (hl),a
 393+ 9999 23               inc hl
 394+ 999A 7A               ld a,d
 395+ 999B AE               xor (hl)
 396+ 999C 77               ld (hl),a
 397+ 999D 2B               dec hl
 398+ 999E
 399+ 999E 24               inc h
 400+ 999F 7C               ld a,h
 401+ 99A0 E6 07            and 7
 402+ 99A2 20 0A            jr nz,2F
 403+ 99A4 7D               ld a,l
 404+ 99A5 C6 20            add a,$20
 405+ 99A7 6F               ld l,a
 406+ 99A8 38 04            jr c,2F
 407+ 99AA 7C               ld a,h
 408+ 99AB D6 08            sub 8
 409+ 99AD 67               ld h,a
 410+ 99AE 7C           2 ld a,h
 411+ 99AF FE 58            cp $58
 412+ 99B1 28 02            jr z,3F
 413+ 99B3
 414+ 99B3 10 E0            djnz 1B
 415+ 99B5 ED 7B 1E 89  3 ld sp,(Stack)
 416+ 99B9 C9               ret
 417+ 99BA
# file closed: Rutinas_de_impresion_sprites.asm
1839  99BA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99BA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99BA              ;
   3+ 99BA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99BA              ;
   5+ 99BA              ; *****************************************************************************************************************************************************************************************
   6+ 99BA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99BA
   8+ 99BA 7C           calcula_tercio ld a,h
   9+ 99BB E6 18        	and $18
  10+ 99BD CB 2F        	sra a
  11+ 99BF CB 2F        	sra a
  12+ 99C1 CB 2F        	sra a
  13+ 99C3 C9           	ret
  14+ 99C4
# file closed: calcula_tercio.asm
1840  99C4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99C4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99C4              ;
   3+ 99C4              ;
   4+ 99C4              ;	CLS.
   5+ 99C4              ;
   6+ 99C4              ;	Limpia la pantalla y define sus atributos.
   7+ 99C4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99C4              ;
   9+ 99C4              ;	COLORES: 0 ..... NEGRO
  10+ 99C4              ;    		 1 ..... AZUL
  11+ 99C4              ; 			 2 ..... ROJO
  12+ 99C4              ;			 3 ..... MAGENTA
  13+ 99C4              ; 			 4 ..... VERDE
  14+ 99C4              ; 			 5 ..... CIAN
  15+ 99C4              ;			 6 ..... AMARILLO
  16+ 99C4              ; 			 7 ..... BLANCO
  17+ 99C4              ;
  18+ 99C4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99C4              ;
  20+ 99C4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99C4
  22+ 99C4
  23+ 99C4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99C7 11 01 40     	LD DE,$4001
  25+ 99CA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99CD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99CF ED B0        	LDIR
  28+ 99D1 01 FF 02     	LD BC,767
  29+ 99D4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99D5 ED B0        	LDIR
  31+ 99D7 C9           	ret
  32+ 99D8
# file closed: Cls.asm
1841  99D8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D8              ; ******************************************************************************************************************************************************************************************
   2+ 99D8              ;
   3+ 99D8              ;   20/05/23
   4+ 99D8              ;
   5+ 99D8              ;	Recompone_posicion_inicio
   6+ 99D8              ;
   7+ 99D8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99D8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99D8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99D8              ;	_ a una u otra rutina.
  11+ 99D8
  12+ 99D8              Recompone_posicion_inicio
  13+ 99D8
  14+ 99D8 2A DA 88     	ld hl,(Posicion_inicio)
  15+ 99DB 7D           	ld a,l
  16+ 99DC E6 1F        	and $1f
  17+ 99DE 28 16        	jr z,1F
  18+ 99E0
  19+ 99E0 FE 1F        	cp $1f
  20+ 99E2 28 0D        	jr z,3F
  21+ 99E4
  22+ 99E4 21 09 89     	ld hl,Ctrl_2
  23+ 99E7 CB C6        	set 0,(hl)
  24+ 99E9 2A CC 88     	ld hl,(Puntero_objeto)
  25+ 99EC 22 0E 89     	ld (Repone_puntero_objeto),hl
  26+ 99EF 18 08        	jr 2F
  27+ 99F1
  28+ 99F1 CD 9C 9B     3 call Mov_left
  29+ 99F4 18 03        	jr 2F
  30+ 99F6
  31+ 99F6 CD 7E 9A     1 call Mov_right
  32+ 99F9 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99FC 22 CC 88     	ld (Puntero_objeto),hl
  34+ 99FF C9           	ret
  35+ 9A00
  36+ 9A00              ; ******************************************************************************************************************************************************************************************
  37+ 9A00              ;
  38+ 9A00              ;   27/05/23
  39+ 9A00              ;
  40+ 9A00              ;	Mov_down
  41+ 9A00              ;
  42+ 9A00              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A00              ;
  44+ 9A00              ;
  45+ 9A00              Mov_down
  46+ 9A00
  47+ 9A00 CD 6C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A03              ;																	; _ repone (Puntero_objeto).
  49+ 9A03 21 F8 88     	ld hl,Ctrl_0
  50+ 9A06 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A08              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A08              ; 																	; _ en el caso de que no lo haya.
  53+ 9A08 3A E0 88     	ld a,(Vel_down)
  54+ 9A0B 47           	ld b,a
  55+ 9A0C 2A CA 88         ld hl,(Posicion_actual)
  56+ 9A0F CD BA 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A12 E6 02        	and 2
  58+ 9A14 28 19        	jr z,1F
  59+ 9A16
  60+ 9A16              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A16              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A16
  63+ 9A16 7C           	ld a,h
  64+ 9A17 FE 57        	cp $57
  65+ 9A19 20 14        	jr nz,1F
  66+ 9A1B
  67+ 9A1B 7D           	ld a,l
  68+ 9A1C C6 20        	add $20
  69+ 9A1E 30 0F        	jr nc,1F
  70+ 9A20
  71+ 9A20              ; ------------------------------
  72+ 9A20              ;
  73+ 9A20              ;	30/12/15
  74+ 9A20
  75+ 9A20              ;	call Reaparece_arriba
  76+ 9A20 CD 29 9D     	call Reinicio
  77+ 9A23
  78+ 9A23              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9A23              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  80+ 9A23
  81+ 9A23 3A 2C 89     	ld a,(Ctrl_3)
  82+ 9A26 CB 8F        	res 1,a
  83+ 9A28 CB D7        	set 2,a													; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  84+ 9A2A 32 2C 89     	ld (Ctrl_3),a
  85+ 9A2D
  86+ 9A2D 18 08        	jr 3F
  87+ 9A2F              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  88+ 9A2F              ;															; _a la siguiente entidad como "Entidad_guía".
  89+ 9A2F              ; ------------------------------
  90+ 9A2F
  91+ 9A2F CD A7 96     1 call NextScan
  92+ 9A32 22 CA 88     	ld (Posicion_actual),hl
  93+ 9A35 10 D8            djnz 2B
  94+ 9A37 CD 4F 9D     3 call Genera_coordenadas
  95+ 9A3A C9           	ret
  96+ 9A3B
  97+ 9A3B              ; ******************************************************************************************************************************************************************************************
  98+ 9A3B              ;
  99+ 9A3B              ;   27/05/23
 100+ 9A3B              ;
 101+ 9A3B              ;	Mov_up
 102+ 9A3B              ;
 103+ 9A3B              ; 	Mueve el Sprite hacia arriba.
 104+ 9A3B              ;
 105+ 9A3B              ;
 106+ 9A3B              Mov_up
 107+ 9A3B
 108+ 9A3B CD 6C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 109+ 9A3E              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 110+ 9A3E 21 F8 88     	ld hl,Ctrl_0
 111+ 9A41 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 112+ 9A43              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 113+ 9A43              ; 																		; _ en el caso de que no lo haya.
 114+ 9A43 3A DF 88     	ld a,(Vel_up)
 115+ 9A46 47           	ld b,a
 116+ 9A47 2A CA 88     	ld hl,(Posicion_actual)
 117+ 9A4A CD BA 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 118+ 9A4D A7           	and a
 119+ 9A4E 20 10        	jr nz,1F
 120+ 9A50
 121+ 9A50              ; Nos encontramos en el 1er tercio de pantalla.
 122+ 9A50              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 123+ 9A50
 124+ 9A50 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 125+ 9A51 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 126+ 9A53 20 0B            jr nz,1F
 127+ 9A55 7D               ld a,l
 128+ 9A56 D6 20            sub $20
 129+ 9A58 30 06            jr nc,1F
 130+ 9A5A 25               dec h
 131+ 9A5B
 132+ 9A5B              ; -----------------------------
 133+ 9A5B CD 0A 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 134+ 9A5E              ;	call Reinicio
 135+ 9A5E              ; -----------------------------
 136+ 9A5E
 137+ 9A5E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 138+ 9A60 CD B6 96     1 call PreviousScan
 139+ 9A63 22 CA 88     	ld (Posicion_actual),hl
 140+ 9A66 10 E2            djnz 3B
 141+ 9A68 CD 4F 9D     2 call Genera_coordenadas
 142+ 9A6B C9           	ret
 143+ 9A6C
 144+ 9A6C              ; -----------------------------
 145+ 9A6C              ;
 146+ 9A6C              ;	27/5/23
 147+ 9A6C              ;
 148+ 9A6C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 149+ 9A6C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 150+ 9A6C              ;
 151+ 9A6C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 152+ 9A6C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 153+ 9A6C              ;
 154+ 9A6C              ;	Modifica: A y (Puntero_objeto).
 155+ 9A6C
 156+ 9A6C 3A 09 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 157+ 9A6F CB 47        	bit 0,a
 158+ 9A71 C8           	ret z
 159+ 9A72 CB 87        	res 0,a
 160+ 9A74 32 09 89     	ld (Ctrl_2),a
 161+ 9A77 2A 0E 89     	ld hl,(Repone_puntero_objeto)
 162+ 9A7A 22 CC 88     	ld (Puntero_objeto),hl
 163+ 9A7D C9           	ret
 164+ 9A7E
 165+ 9A7E              ; ******************************************************************************************************************************************************************************************
 166+ 9A7E              ;
 167+ 9A7E              ;	19/10/22
 168+ 9A7E              ;
 169+ 9A7E              ;	Mov_right.
 170+ 9A7E              ;
 171+ 9A7E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 172+ 9A7E              ;
 173+ 9A7E
 174+ 9A7E 21 F8 88     Mov_right ld hl,Ctrl_0
 175+ 9A81 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 176+ 9A83              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 177+ 9A83              ; 																	; _ en el caso de que no lo haya.
 178+ 9A83 3A F8 88     	ld a,(Ctrl_0)
 179+ 9A86 CB 77        	bit 6,a
 180+ 9A88 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 181+ 9A8A
 182+ 9A8A CD B8 9C     	call Stop_Amadeus_right
 183+ 9A8D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 184+ 9A8E 18 4D        	jr 8F
 185+ 9A90
 186+ 9A90 3A CE 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 187+ 9A93 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 188+ 9A95 20 46        	jr nz,8F
 189+ 9A97
 190+ 9A97 3A D0 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 191+ 9A9A A7           	and a 															; _[3] para continuar con el DESPLZ.
 192+ 9A9B 28 40        	jr z,8F
 193+ 9A9D
 194+ 9A9D              ; ---------- ---------- ----------
 195+ 9A9D              ;
 196+ 9A9D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 197+ 9A9D
 198+ 9A9D 3A DE 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 199+ 9AA0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 200+ 9AA2 28 11        	jr z,1F
 201+ 9AA4 38 06        	jr c,6F
 202+ 9AA6 FE 04        	cp 4
 203+ 9AA8 28 14        	jr z,7F
 204+ 9AAA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 205+ 9AAC
 206+ 9AAC              ; ---------- ---------- ----------
 207+ 9AAC              ;
 208+ 9AAC              ; Perfiles de velocidad
 209+ 9AAC              ;
 210+ 9AAC
 211+ 9AAC 3A D0 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 212+ 9AAF FE FE        	cp $fe
 213+ 9AB1 20 2A        	jr nz,8F
 214+ 9AB3 18 10        	jr 3F
 215+ 9AB5 3A D0 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 216+ 9AB8 FE FD        	cp $fd
 217+ 9ABA 20 21        	jr nz,8F
 218+ 9ABC 18 07        	jr 3F
 219+ 9ABE 3A D0 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 220+ 9AC1 FE FB        	cp $fb
 221+ 9AC3 20 18        	jr nz,8F
 222+ 9AC5
 223+ 9AC5              ; ---------- ---------- ----------
 224+ 9AC5
 225+ 9AC5              3
 226+ 9AC5 CD F8 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 227+ 9AC8              ;	call Reinicio
 228+ 9AC8
 229+ 9AC8              ; ---------- ---------- ----------
 230+ 9AC8              ;
 231+ 9AC8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 232+ 9AC8
 233+ 9AC8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 234+ 9ACA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 235+ 9ACB CD E4 9A     	call DESPLZ_DER
 236+ 9ACE C1           	pop bc
 237+ 9ACF 10 F9        	djnz 5B
 238+ 9AD1 2A CA 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 239+ 9AD4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 240+ 9AD5 22 CA 88     	ld (Posicion_actual),hl
 241+ 9AD8 CD 4F 9D     	call Genera_coordenadas
 242+ 9ADB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 243+ 9ADD
 244+ 9ADD              ; ---------- ---------- ----------
 245+ 9ADD
 246+ 9ADD 2A CA 88     8 ld hl,(Posicion_actual)
 247+ 9AE0 CD E4 9A     	call DESPLZ_DER
 248+ 9AE3 C9           2 ret
 249+ 9AE4
 250+ 9AE4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 251+ 9AE4              ;
 252+ 9AE4              ;	22/9/22
 253+ 9AE4              ;
 254+ 9AE4
 255+ 9AE4 CD F3 9A     DESPLZ_DER call Desplaza_derecha
 256+ 9AE7 CD 3F 9B         call modifica_parametros_1er_DESPLZ_2
 257+ 9AEA CD 68 9B         call Ciclo_completo
 258+ 9AED 21 F8 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 259+ 9AF0 CB FE        	set 7,(hl)
 260+ 9AF2 C9           	ret
 261+ 9AF3
 262+ 9AF3              ; ******************************************************************************************************************************************************************************************
 263+ 9AF3              ;	15/02/23
 264+ 9AF3              ;
 265+ 9AF3
 266+ 9AF3 3A DE 88     Desplaza_derecha ld a,(Vel_right)
 267+ 9AF6 47           	ld b,a
 268+ 9AF7 2A D6 88     	ld hl,(Puntero_DESPLZ_der)
 269+ 9AFA 23           1 inc hl
 270+ 9AFB 23           	inc hl
 271+ 9AFC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 272+ 9AFE 22 D6 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 273+ 9B01 CD 3B 8D     	call Extrae_address
 274+ 9B04 22 CC 88     	ld (Puntero_objeto),hl
 275+ 9B07
 276+ 9B07              ; Modifica (Puntero_DESPLZ_izq).
 277+ 9B07
 278+ 9B07              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 279+ 9B07              ; Cuántos movimientos hemos hecho ??
 280+ 9B07              ; DE contiene (Puntero_DESPLZ_der).
 281+ 9B07
 282+ 9B07 2A D2 88     7 ld hl,(Indice_Sprite_der)
 283+ 9B0A EB           	ex de,hl
 284+ 9B0B A7           	and a
 285+ 9B0C ED 52        	sbc hl,de
 286+ 9B0E CB 3D        	srl l
 287+ 9B10 3E 08        6 ld a,8
 288+ 9B12 95           	sub l
 289+ 9B13 30 1E        	jr nc,3F
 290+ 9B15
 291+ 9B15              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 292+ 9B15              ; B="0".
 293+ 9B15
 294+ 9B15 04           4 inc b
 295+ 9B16 3C           	inc a
 296+ 9B17 20 FC        	jr nz,4B
 297+ 9B19 78           	ld a,b
 298+ 9B1A 08           	ex af,af
 299+ 9B1B 2A D2 88     	ld hl,(Indice_Sprite_der)
 300+ 9B1E 23           5 inc hl
 301+ 9B1F 23           	inc hl
 302+ 9B20 10 FC        	djnz 5B
 303+ 9B22 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 304+ 9B25 CD 3B 8D     	call Extrae_address
 305+ 9B28 22 CC 88     	ld (Puntero_objeto),hl
 306+ 9B2B
 307+ 9B2B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 308+ 9B2B              ; _(Posicion_actual).
 309+ 9B2B
 310+ 9B2B 21 CA 88     	ld hl,Posicion_actual
 311+ 9B2E 34           	inc (hl)
 312+ 9B2F 08               ex af,af
 313+ 9B30 6F           	ld l,a
 314+ 9B31 18 DD        	jr 6B
 315+ 9B33
 316+ 9B33              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 317+ 9B33
 318+ 9B33 47           3 ld b,a
 319+ 9B34 2A D4 88     	ld hl,(Indice_Sprite_izq)
 320+ 9B37 23           2 inc hl
 321+ 9B38 23           	inc hl
 322+ 9B39 10 FC        	djnz 2B
 323+ 9B3B 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
 324+ 9B3E C9           8 ret
 325+ 9B3F
 326+ 9B3F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 327+ 9B3F              ;
 328+ 9B3F              ;	24/7/22
 329+ 9B3F              ;
 330+ 9B3F              ;	modifica_parametros_1er_DESPLZ_2
 331+ 9B3F              ;
 332+ 9B3F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 333+ 9B3F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 334+ 9B3F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 335+ 9B3F
 336+ 9B3F 3A D0 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 337+ 9B42 A7           	and a
 338+ 9B43 20 1F        	jr nz,1F
 339+ 9B45 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 340+ 9B47 32 D0 88         ld (CTRL_DESPLZ),a
 341+ 9B4A
 342+ 9B4A 21 C9 88     	ld hl,Columns
 343+ 9B4D 34           	inc (hl)
 344+ 9B4E 3A DC 88     	ld a,(Cuad_objeto)
 345+ 9B51 E6 01        	and 1
 346+ 9B53 28 0F        	jr z,1F
 347+ 9B55 2A CA 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 348+ 9B58 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 349+ 9B59 22 CA 88     	ld (Posicion_actual),hl
 350+ 9B5C CD 4F 9D     	call Genera_coordenadas
 351+ 9B5F CD C4 9C     	call Inc_CTRL_DESPLZ
 352+ 9B62 18 03        	jr 2F
 353+ 9B64 CD C4 9C     1 call Inc_CTRL_DESPLZ
 354+ 9B67 C9           2 ret
 355+ 9B68
 356+ 9B68              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 357+ 9B68              ;
 358+ 9B68              ;	24/7/22
 359+ 9B68              ;
 360+ 9B68              ;	Ciclo_completo.
 361+ 9B68              ;
 362+ 9B68              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 363+ 9B68              ;
 364+ 9B68              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 365+ 9B68              ; 	Decrementamos (Columns).
 366+ 9B68              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 367+ 9B68              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 368+ 9B68
 369+ 9B68
 370+ 9B68 3A D0 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 371+ 9B6B FE FF        	cp $ff
 372+ 9B6D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 373+ 9B6F E6 F0        	and $f0
 374+ 9B71 20 28        	jr nz,3F
 375+ 9B73
 376+ 9B73              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 377+ 9B73
 378+ 9B73 3A D0 88     	ld a,(CTRL_DESPLZ)
 379+ 9B76 47           	ld b,a
 380+ 9B77 3E F8        	ld a,$f8
 381+ 9B79 80           	add b
 382+ 9B7A 32 D0 88     	ld (CTRL_DESPLZ),a
 383+ 9B7D 18 1C        	jr 3F
 384+ 9B7F 21 C9 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 385+ 9B82 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 386+ 9B83 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 387+ 9B84 32 D0 88     	ld (CTRL_DESPLZ),a
 388+ 9B87 3A DC 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 389+ 9B8A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 390+ 9B8C 20 0A        	jr nz,2F
 391+ 9B8E 2A CA 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 392+ 9B91 23           	inc hl
 393+ 9B92 22 CA 88     	ld (Posicion_actual),hl
 394+ 9B95 CD 4F 9D     	call Genera_coordenadas
 395+ 9B98
 396+ 9B98              ; Inicia el puntero de Sprite.
 397+ 9B98
 398+ 9B98 CD 52 8D     2 call Inicia_puntero_objeto_der
 399+ 9B9B C9           3 ret
 400+ 9B9C
 401+ 9B9C              ; ******************************************************************************************************************************************************************************************
 402+ 9B9C              ;
 403+ 9B9C              ;	15/02/23
 404+ 9B9C              ;
 405+ 9B9C              ;	Mov_left.
 406+ 9B9C              ;
 407+ 9B9C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 408+ 9B9C              ;
 409+ 9B9C              Mov_left
 410+ 9B9C
 411+ 9B9C 21 F8 88     	ld hl,Ctrl_0
 412+ 9B9F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 413+ 9BA1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 414+ 9BA1              ; 																	; _ en el caso de que no lo haya.
 415+ 9BA1 3A F8 88     	ld a,(Ctrl_0)
 416+ 9BA4 CB 77        	bit 6,a
 417+ 9BA6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 418+ 9BA8
 419+ 9BA8 CD BE 9C     	call Stop_Amadeus_left
 420+ 9BAB C8           	ret z
 421+ 9BAC 20 4A        	jr nz,8F
 422+ 9BAE
 423+ 9BAE 3A CE 88     11 ld a,(Coordenada_X)
 424+ 9BB1 A7           	and a
 425+ 9BB2 20 44        	jr nz,8F
 426+ 9BB4
 427+ 9BB4 3A D0 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 428+ 9BB7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 429+ 9BB8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 430+ 9BBA
 431+ 9BBA              ; ---------- ---------- ----------
 432+ 9BBA
 433+ 9BBA 3A DD 88     	ld a,(Vel_left)
 434+ 9BBD FE 02        	cp 2
 435+ 9BBF 28 0F        	jr z,1F
 436+ 9BC1 38 04        	jr c,6F
 437+ 9BC3 FE 04        	cp 4
 438+ 9BC5 28 12        	jr z,7F
 439+ 9BC7
 440+ 9BC7              ; ---------- ---------- ----------
 441+ 9BC7
 442+ 9BC7 3A D0 88     6 ld a,(CTRL_DESPLZ)
 443+ 9BCA FE F8        	cp $f8
 444+ 9BCC 20 2A        	jr nz,8F
 445+ 9BCE 18 10        	jr 4F
 446+ 9BD0 3A D0 88     1 ld a,(CTRL_DESPLZ)
 447+ 9BD3 FE F9        	cp $f9
 448+ 9BD5 20 21        	jr nz,8F
 449+ 9BD7 18 07        	jr 4F
 450+ 9BD9 3A D0 88     7 ld a,(CTRL_DESPLZ)
 451+ 9BDC FE FB        	cp $fb
 452+ 9BDE 20 18        	jr nz,8F
 453+ 9BE0
 454+ 9BE0              ; ---------- ---------- ----------
 455+ 9BE0
 456+ 9BE0              4
 457+ 9BE0 CD E6 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 458+ 9BE3              ;	call Reinicio
 459+ 9BE3
 460+ 9BE3              ; ---------- ---------- ----------
 461+ 9BE3
 462+ 9BE3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 463+ 9BE5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 464+ 9BE6
 465+ 9BE6              ;	ld hl,(Indice_Sprite_izq)
 466+ 9BE6              ;	ld (Puntero_DESPLZ_izq),hl
 467+ 9BE6
 468+ 9BE6 CD FF 9B     	call DESPLZ_IZQ
 469+ 9BE9 C1           	pop bc
 470+ 9BEA 10 F9        	djnz 5B
 471+ 9BEC 2A CA 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 472+ 9BEF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 473+ 9BF0 22 CA 88     	ld (Posicion_actual),hl
 474+ 9BF3 CD 4F 9D     	call Genera_coordenadas
 475+ 9BF6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 476+ 9BF8
 477+ 9BF8              ; ---------- ---------- ----------
 478+ 9BF8
 479+ 9BF8              ; Movemos, no hay recolocación.
 480+ 9BF8
 481+ 9BF8 2A CA 88     8 ld hl,(Posicion_actual)
 482+ 9BFB CD FF 9B     	call DESPLZ_IZQ
 483+ 9BFE C9           2 ret
 484+ 9BFF
 485+ 9BFF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 486+ 9BFF              ;
 487+ 9BFF              ;	22/9/22
 488+ 9BFF
 489+ 9BFF              DESPLZ_IZQ
 490+ 9BFF
 491+ 9BFF CD 0E 9C     	call Desplaza_izquierda
 492+ 9C02 CD 5A 9C         call modifica_parametros_1er_DESPLZ
 493+ 9C05 CD 82 9C     	call Ciclo_completo_2
 494+ 9C08 21 F8 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 495+ 9C0B CB BE        	res 7,(hl)
 496+ 9C0D C9           	ret
 497+ 9C0E
 498+ 9C0E              Desplaza_izquierda
 499+ 9C0E
 500+ 9C0E 3A DD 88     	ld a,(Vel_left)
 501+ 9C11 47           	ld b,a
 502+ 9C12 2A D8 88     	ld hl,(Puntero_DESPLZ_izq)
 503+ 9C15 23           1 inc hl
 504+ 9C16 23           	inc hl
 505+ 9C17 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 506+ 9C19 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
 507+ 9C1C CD 3B 8D     	call Extrae_address
 508+ 9C1F 22 CC 88     	ld (Puntero_objeto),hl
 509+ 9C22
 510+ 9C22              ; Modifica (Puntero_DESPLZ_der).
 511+ 9C22
 512+ 9C22              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 513+ 9C22              ; Cuántos movimientos hemos hecho ??
 514+ 9C22              ; DE contiene (Puntero_DESPLZ_izq).
 515+ 9C22
 516+ 9C22 2A D4 88     7 ld hl,(Indice_Sprite_izq)
 517+ 9C25 EB           	ex de,hl
 518+ 9C26 A7           	and a
 519+ 9C27 ED 52        	sbc hl,de
 520+ 9C29 CB 3D        	srl l
 521+ 9C2B 3E 08        6 ld a,8
 522+ 9C2D 95           	sub l
 523+ 9C2E 30 1E        	jr nc,3F
 524+ 9C30
 525+ 9C30              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 526+ 9C30              ; B="0".
 527+ 9C30
 528+ 9C30 04           4 inc b
 529+ 9C31 3C           	inc a
 530+ 9C32 20 FC        	jr nz,4B
 531+ 9C34 78           	ld a,b
 532+ 9C35 08           	ex af,af
 533+ 9C36 2A D4 88     	ld hl,(Indice_Sprite_izq)
 534+ 9C39 23           5 inc hl
 535+ 9C3A 23           	inc hl
 536+ 9C3B 10 FC        	djnz 5B
 537+ 9C3D 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
 538+ 9C40 CD 3B 8D     	call Extrae_address
 539+ 9C43 22 CC 88     	ld (Puntero_objeto),hl
 540+ 9C46
 541+ 9C46              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 542+ 9C46              ; _(Posicion_actual).
 543+ 9C46
 544+ 9C46 21 CA 88     	ld hl,Posicion_actual
 545+ 9C49 35           	dec (hl)
 546+ 9C4A 08           	ex af,af
 547+ 9C4B 6F           	ld l,a
 548+ 9C4C 18 DD        	jr 6B
 549+ 9C4E
 550+ 9C4E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 551+ 9C4E
 552+ 9C4E 47           3 ld b,a
 553+ 9C4F 2A D2 88     	ld hl,(Indice_Sprite_der)
 554+ 9C52 23           2 inc hl
 555+ 9C53 23           	inc hl
 556+ 9C54 10 FC        	djnz 2B
 557+ 9C56 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 558+ 9C59 C9           8 ret
 559+ 9C5A
 560+ 9C5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 561+ 9C5A              ;
 562+ 9C5A              ;	modifica_parametros_1er_DESPLZ
 563+ 9C5A              ;
 564+ 9C5A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 565+ 9C5A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 566+ 9C5A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 567+ 9C5A
 568+ 9C5A 3A D0 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 569+ 9C5D A7           	and a
 570+ 9C5E 20 1E        	jr nz,1F
 571+ 9C60 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 572+ 9C61 32 D0 88         ld (CTRL_DESPLZ),a
 573+ 9C64 21 C9 88     	ld hl,Columns
 574+ 9C67 34           	inc (hl)
 575+ 9C68 3A DC 88     	ld a,(Cuad_objeto)
 576+ 9C6B E6 01        	and 1
 577+ 9C6D 20 0F        	jr nz,1F
 578+ 9C6F 2A CA 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 579+ 9C72 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 580+ 9C73 22 CA 88     	ld (Posicion_actual),hl
 581+ 9C76 CD 4F 9D     	call Genera_coordenadas
 582+ 9C79 CD D5 9C     	call Dec_CTRL_DESPLZ
 583+ 9C7C 18 03        	jr 2F
 584+ 9C7E CD D5 9C     1 call Dec_CTRL_DESPLZ
 585+ 9C81 C9           2 ret
 586+ 9C82
 587+ 9C82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 588+ 9C82
 589+ 9C82 3A D0 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 590+ 9C85 FE F7        	cp $f7
 591+ 9C87 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 592+ 9C89 30 2C        	jr nc,3F
 593+ 9C8B
 594+ 9C8B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 595+ 9C8B
 596+ 9C8B 06 00        	ld b,0
 597+ 9C8D 04           4 inc b
 598+ 9C8E 3C           	inc a
 599+ 9C8F FE F7        	cp $f7
 600+ 9C91 20 FA        	jr nz,4B
 601+ 9C93 3E FF        	ld a,$ff
 602+ 9C95 90           	sub b
 603+ 9C96 32 D0 88     	ld (CTRL_DESPLZ),a
 604+ 9C99 18 1C        	jr 3F
 605+ 9C9B
 606+ 9C9B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 607+ 9C9B
 608+ 9C9B 21 C9 88     1 ld hl,Columns
 609+ 9C9E 35           	dec (hl)
 610+ 9C9F AF           	xor a
 611+ 9CA0 32 D0 88     	ld (CTRL_DESPLZ),a
 612+ 9CA3 3A DC 88     	ld a,(Cuad_objeto)
 613+ 9CA6 E6 01        	and 1
 614+ 9CA8 28 0A        	jr z,2F
 615+ 9CAA 2A CA 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 616+ 9CAD 2B           	dec hl
 617+ 9CAE 22 CA 88     	ld (Posicion_actual),hl
 618+ 9CB1 CD 4F 9D     	call Genera_coordenadas
 619+ 9CB4
 620+ 9CB4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 621+ 9CB4
 622+ 9CB4 CD 65 8D     2 call Inicia_puntero_objeto_izq
 623+ 9CB7 C9           3 ret
 624+ 9CB8
 625+ 9CB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 626+ 9CB8              ;
 627+ 9CB8              ;	19/10/22
 628+ 9CB8              ;
 629+ 9CB8              ;	(cp 29) para un Amadeus de 3 Columns.
 630+ 9CB8              ;	(cp 30)   ""  ""    ""     2 Columns.
 631+ 9CB8
 632+ 9CB8 3A CE 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 633+ 9CBB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 634+ 9CBD C9           	ret
 635+ 9CBE
 636+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 637+ 9CBE              ;
 638+ 9CBE              ;	19/10/22
 639+ 9CBE              ;
 640+ 9CBE              ;	(cp 2) para un Amadeus de 3 Columns.
 641+ 9CBE              ;	(cp 1)   ""  ""    ""     2 Columns.
 642+ 9CBE
 643+ 9CBE 3A CE 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 644+ 9CC1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 645+ 9CC3 C9           	ret
 646+ 9CC4
 647+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 648+ 9CC4              ;
 649+ 9CC4              ;	24/7/22
 650+ 9CC4              ;
 651+ 9CC4              ;	Inc_CTRL_DESPLZ
 652+ 9CC4              ;
 653+ 9CC4              ;
 654+ 9CC4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 655+ 9CC4
 656+ 9CC4 21 D0 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 657+ 9CC7 3A DE 88     	ld a,(Vel_right)
 658+ 9CCA A7           	and a
 659+ 9CCB 28 06        	jr z,1F
 660+ 9CCD 47           	ld b,a
 661+ 9CCE 34           3 inc (hl)
 662+ 9CCF 10 FD        	djnz 3B
 663+ 9CD1 18 01        	jr 2F
 664+ 9CD3 34           1 inc (hl)
 665+ 9CD4 C9           2 ret
 666+ 9CD5
 667+ 9CD5              ; ---------- ---------- ---------- ---------- ---------- ----------
 668+ 9CD5              ;
 669+ 9CD5              ;	5/2/23
 670+ 9CD5              ;
 671+ 9CD5              ;	Dec_CTRL_DESPLZ
 672+ 9CD5              ;
 673+ 9CD5              ;
 674+ 9CD5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 675+ 9CD5
 676+ 9CD5 21 D0 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 677+ 9CD8 3A DD 88     	ld a,(Vel_left)
 678+ 9CDB A7           	and a
 679+ 9CDC 28 06        	jr z,1F
 680+ 9CDE 47           	ld b,a
 681+ 9CDF 35           3 dec (hl)
 682+ 9CE0 10 FD        	djnz 3B
 683+ 9CE2 18 01        	jr 2F
 684+ 9CE4 35           1 dec (hl)
 685+ 9CE5 C9           2 ret
 686+ 9CE6
 687+ 9CE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 688+ 9CE6
 689+ 9CE6 2A CA 88     Reaparece_derecha ld hl,(Posicion_actual)
 690+ 9CE9 01 1F 00     	ld bc,31
 691+ 9CEC A7           	and a
 692+ 9CED ED 4A        	adc hl,bc
 693+ 9CEF 22 CA 88     	ld (Posicion_actual),hl
 694+ 9CF2 21 F8 88     	ld hl,Ctrl_0														; $xxx1
 695+ 9CF5 CB C6        	set 0,(hl)
 696+ 9CF7 C9           	ret
 697+ 9CF8
 698+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 699+ 9CF8
 700+ 9CF8 2A CA 88     Reaparece_izquierda ld hl,(Posicion_actual)
 701+ 9CFB 01 1F 00     	ld bc,31
 702+ 9CFE A7           	and a
 703+ 9CFF ED 42        	sbc hl,bc
 704+ 9D01 22 CA 88     	ld (Posicion_actual),hl 											; $xx1x
 705+ 9D04 21 F8 88     	ld hl,Ctrl_0
 706+ 9D07 CB CE        	set 1,(hl)
 707+ 9D09 C9           	ret
 708+ 9D0A
 709+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 710+ 9D0A
 711+ 9D0A 24           Reaparece_abajo inc h
 712+ 9D0B 01 E0 17     	ld bc,$17e0
 713+ 9D0E A7           	and a
 714+ 9D0F ED 4A        	adc hl,bc
 715+ 9D11 22 CA 88     	ld (Posicion_actual),hl
 716+ 9D14 21 F8 88     	ld hl,Ctrl_0
 717+ 9D17 CB D6        	set 2,(hl)
 718+ 9D19 C9           	ret
 719+ 9D1A
 720+ 9D1A              ; ---------- ---------- ---------- ---------- ---------- ----------
 721+ 9D1A
 722+ 9D1A 01 E0 17     Reaparece_arriba ld bc,$17e0
 723+ 9D1D A7           	and a
 724+ 9D1E ED 42        	sbc hl,bc
 725+ 9D20 22 CA 88     	ld (Posicion_actual),hl
 726+ 9D23 21 F8 88     	ld hl,Ctrl_0
 727+ 9D26 CB DE        	set 3,(hl)
 728+ 9D28 C9           	ret
 729+ 9D29
 730+ 9D29              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 731+ 9D29              ;
 732+ 9D29              ;	15/07/23
 733+ 9D29
 734+ 9D29              Reinicio
 735+ 9D29
 736+ 9D29              ; Vamos a reiniciar los punteros y variables de movimiento.
 737+ 9D29
 738+ 9D29 AF           	xor a
 739+ 9D2A 21 FD 88     	ld hl,Puntero_indice_mov_bucle
 740+ 9D2D CD 4B 9D     	call Limpia_contenido_hl
 741+ 9D30
 742+ 9D30 21 CA 88     	ld hl,Posicion_actual
 743+ 9D33 CD 4B 9D     	call Limpia_contenido_hl
 744+ 9D36
 745+ 9D36 CD 87 A0     	call Inicializa_Puntero_indice_mov
 746+ 9D39 CD 0B A0     	call Inicia_Puntero_mov
 747+ 9D3C
 748+ 9D3C 21 FF 88     	ld hl,Incrementa_puntero
 749+ 9D3F 06 05        	ld b,5
 750+ 9D41 77           1 ld (hl),a
 751+ 9D42 23           	inc hl
 752+ 9D43 10 FC        	djnz 1B
 753+ 9D45
 754+ 9D45 21 09 89     	ld hl,Ctrl_2
 755+ 9D48 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 756+ 9D4A
 757+ 9D4A C9           	ret
 758+ 9D4B
 759+ 9D4B 77           Limpia_contenido_hl	ld (hl),a
 760+ 9D4C 23           	inc hl
 761+ 9D4D 77           	ld (hl),a
 762+ 9D4E C9           	ret
 763+ 9D4F
 764+ 9D4F
# file closed: Direcciones.asm
1842  9D4F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D4F              ; ------------------------------------------------------------------------
   2+ 9D4F              ;
   3+ 9D4F              ;	02/04/23
   4+ 9D4F              ;
   5+ 9D4F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D4F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D4F              ;
   8+ 9D4F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D4F              ;
  10+ 9D4F              ;	Modifica: A,BC y DE.
  11+ 9D4F
  12+ 9D4F C5           Genera_coordenadas push bc
  13+ 9D50 E5           	push hl
  14+ 9D51 D5           	push de
  15+ 9D52
  16+ 9D52 2A CA 88     	ld hl,(Posicion_actual)
  17+ 9D55
  18+ 9D55 7D           	ld a,l
  19+ 9D56 E6 1F        	and $1f
  20+ 9D58 32 CE 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D5B
  22+ 9D5B CD BA 99     	call calcula_tercio
  23+ 9D5E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D5F
  25+ 9D5F 1E 00        	ld e,0
  26+ 9D61 7D           	ld a,l
  27+ 9D62 E6 E0        	and $e0
  28+ 9D64 28 01        	jr z,1F
  29+ 9D66 04           	inc b
  30+ 9D67
  31+ 9D67 04           1 inc b
  32+ 9D68 05           	dec b
  33+ 9D69 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D6B              ;														; _ , salimos.
  35+ 9D6B 1C           3 inc e
  36+ 9D6C D6 20        	sub 32
  37+ 9D6E 20 FB        	jr nz,3B
  38+ 9D70 10 F5        	djnz 1B
  39+ 9D72
  40+ 9D72 7B           2 ld a,e
  41+ 9D73 32 CF 88     	ld (Coordenada_y),a
  42+ 9D76
  43+ 9D76 D1           	pop de
  44+ 9D77 E1           	pop hl
  45+ 9D78 C1           	pop bc
  46+ 9D79
  47+ 9D79 C9           	ret
  48+ 9D7A
  49+ 9D7A              ; ------------------------------------------------------------------------
  50+ 9D7A              ;	28/05/23
  51+ 9D7A              ;
  52+ 9D7A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D7A              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D7A              ;
  55+ 9D7A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D7A              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D7A              ;
  58+ 9D7A              ;		DE="$120d"
  59+ 9D7A              ;
  60+ 9D7A              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D7A              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D7A              ;
  63+ 9D7A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D7A
  65+ 9D7A              ;	Modifica: A,BC y DE.
  66+ 9D7A
  67+ 9D7A
  68+ 9D7A              Genera_coordenadas_disparo
  69+ 9D7A
  70+ 9D7A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D7A
  72+ 9D7A 7D           	ld a,l
  73+ 9D7B E6 1F        	and $1f
  74+ 9D7D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D7E CD BA 99     	call calcula_tercio
  76+ 9D81 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D82 1E 00        	ld e,0
  78+ 9D84 7D           	ld a,l
  79+ 9D85 E6 E0        	and $e0
  80+ 9D87 28 01        	jr z,1F
  81+ 9D89 04           	inc b
  82+ 9D8A 1C           1 inc e
  83+ 9D8B D6 20        	sub 32
  84+ 9D8D 20 FB        	jr nz,1B
  85+ 9D8F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D91 C9           	ret
  87+ 9D92
# file closed: Genera_coordenadas.asm
1843  9D92              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D92              ; Relojes y temporizaciones.
   2+ 9D92
   3+ 9D92              ; ------------------------------------------------------
   4+ 9D92              ;
   5+ 9D92              ;	16/7/23
   6+ 9D92              ;
   7+ 9D92              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D92              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D92              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D92              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D92              ;
  12+ 9D92              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D92              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D92
  15+ 9D92              ; Disparo_entidad db 1
  16+ 9D92              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D92              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D92
  19+ 9D92              Habilita_disparos
  20+ 9D92
  21+ 9D92 7E           	ld a,(hl)
  22+ 9D93 A7           	and a
  23+ 9D94 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D95
  25+ 9D95 EB           	ex de,hl
  26+ 9D96
  27+ 9D96 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D97 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D98
  30+ 9D98              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D98
  32+ 9D98 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D99 7E           	ld a,(hl)
  34+ 9D9A 23           	inc hl
  35+ 9D9B 77           	ld (hl),a
  36+ 9D9C
  37+ 9D9C EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D9D 3E 01        	ld a,1
  39+ 9D9F 77           	ld (hl),a
  40+ 9DA0 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1844  9DA1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DA1
   2+ 9DA1
   3+ 9DA1              ;   07/07/23
   4+ 9DA1              ;
   5+ 9DA1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DA1              ;
   7+ 9DA1              ;   Codificación:
   8+ 9DA1              ;
   9+ 9DA1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DA1              ;
  11+ 9DA1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DA1              ;
  13+ 9DA1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DA1              ;
  15+ 9DA1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DA1              ;
  17+ 9DA1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DA1              ;                               ..... %01000010 Vel_up 4
  19+ 9DA1              ;                                               Vel_down 2
  20+ 9DA1              ;                               ..... $42
  21+ 9DA1              ;
  22+ 9DA1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DA1              ;
  24+ 9DA1              ;                               ..... %01000010 Vel_left 4
  25+ 9DA1              ;                                               Vel_right 2
  26+ 9DA1              ;                               ..... $42
  27+ 9DA1              ;
  28+ 9DA1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DA1              ;
  30+ 9DA1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DA1              ;
  32+ 9DA1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DA1              ;
  34+ 9DA1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DA1              ;                                     $53
  36+ 9DA1              ;
  37+ 9DA1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DA1              ;
  39+ 9DA1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DA1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DA1              ;
  42+ 9DA1              ;                       Arriba ..... $81
  43+ 9DA1              ;                       Arriba - izquierda ..... $a1
  44+ 9DA1              ;                       Arriba - derecha ..... $91
  45+ 9DA1              ;
  46+ 9DA1              ;                       Abajo ..... $41
  47+ 9DA1              ;                       Abajo - izquierda ..... $61
  48+ 9DA1              ;                       Abajo - derecha ..... $51
  49+ 9DA1              ;
  50+ 9DA1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DA1              ;
  52+ 9DA1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DA1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DA1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DA1              ;
  56+ 9DA1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DA1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DA1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DA1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DA1              ;
  61+ 9DA1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DA1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DA1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DA1              ;
  65+ 9DA1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DA1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DA1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DA1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DA1
  70+ 9DA1              ; ----- ----- ----- ----- -----
  71+ 9DA1
  72+ 9DA1 CD 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA3 D5 9D            defw F_1
  74+ 9DA5 DF 9D            defw F_2
  75+ 9DA7 E9 9D            defw Codo_abajo_derecha
  76+ 9DA9 1D 9E            defw Derecha_y_subiendo
  77+ 9DAB 27 9E            defw Derecha_y_subiendo_1
  78+ 9DAD 31 9E            defw F_3
  79+ 9DAF 3B 9E            defw F_4
  80+ 9DB1 45 9E            defw Derecha_y_bajando
  81+ 9DB3 4F 9E            defw Derecha_y_bajando_1
  82+ 9DB5 59 9E            defw Derecha_y_bajando_2
  83+ 9DB7 63 9E            defw Codo_derecha_abajo
  84+ 9DB9 93 9E            defw Codo_abajo_izq.
  85+ 9DBB C7 9E            defw Izquierda_y_subiendo
  86+ 9DBD D1 9E            defw Izquierda_y_subiendo_1
  87+ 9DBF DB 9E            defw F_5
  88+ 9DC1 E5 9E            defw F_6
  89+ 9DC3 EF 9E            defw Izquierda_y_bajando
  90+ 9DC5 F9 9E            defw Izquierda_y_bajando_1
  91+ 9DC7 03 9F            defw Izquierda_y_bajando_2
  92+ 9DC9 0D 9F            defw Codo_izquierda_abajo
  93+ 9DCB 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DCD
  95+ 9DCD 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DD1 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DD5
  98+ 9DD5 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DD9 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DDD 08 00
 100+ 9DDF 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE3 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DE7 0F FE
 102+ 9DE9
 103+ 9DE9 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DED 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DF1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DF5 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DF9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DFD 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E01 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E05 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E09 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E0D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E11 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E15 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E19 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E1D
 117+ 9E1D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E21 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E25 06 00
 119+ 9E27
 120+ 9E27 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E2B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E2F 02 00
 122+ 9E31
 123+ 9E31 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E35 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E39 04 00
 125+ 9E3B 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E3F 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E43 08 00
 127+ 9E45
 128+ 9E45 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E49 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E4D 02 00
 130+ 9E4F
 131+ 9E4F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E53 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E57 06 00
 133+ 9E59
 134+ 9E59 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E5D 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E61 06 00
 136+ 9E63
 137+ 9E63              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E63
 139+ 9E63 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E67 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E6B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E6F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E73 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E77 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E7B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E7F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E83 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E87 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E8B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E8F 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E93
 152+ 9E93 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E97 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E9B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E9F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EA7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EAB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EAF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB3 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EB7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EBB 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EBF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC3 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EC7
 166+ 9EC7 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9ECB 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ECF 06 00
 168+ 9ED1
 169+ 9ED1 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ED5 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ED9 02 00
 171+ 9EDB
 172+ 9EDB 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EDF 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE3 04 00
 174+ 9EE5 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EE9 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EED 08 00
 176+ 9EEF
 177+ 9EEF 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF3 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EF7 02 00
 179+ 9EF9
 180+ 9EF9 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EFD 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F01 06 00
 182+ 9F03
 183+ 9F03 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F07 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F0B 06 00
 185+ 9F0D
 186+ 9F0D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F11 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F15 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F19 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F1D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F21 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F25 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F29 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F2D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F31 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F35 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F39 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F3D
 199+ 9F3D              ; ----- ----- ----- ----- -----
 200+ 9F3D              ;
 201+ 9F3D              ;   28/12/23
 202+ 9F3D
 203+ 9F3D              Movimiento
 204+ 9F3D
 205+ 9F3D              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F3D
 207+ 9F3D 3A 09 89         ld a,(Ctrl_2)
 208+ 9F40 CB 57            bit 2,a
 209+ 9F42 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9F44
 211+ 9F44 2A FB 88         ld hl,(Puntero_mov)
 212+ 9F47 7E               ld a,(hl)
 213+ 9F48
 214+ 9F48              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9F48
 216+ 9F48              Inicia_desplazamiento.
 217+ 9F48
 218+ 9F48              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9F48
 220+ 9F48 CD 48 A0         call Ajusta_velocidad_desplazamiento
 221+ 9F4B
 222+ 9F4B              ; Iniciamos (Repetimos_mov).
 223+ 9F4B
 224+ 9F4B 7E               ld a,(hl)
 225+ 9F4C E6 0F            and $0f
 226+ 9F4E 32 01 89         ld (Repetimos_desplazamiento),a
 227+ 9F51 32 02 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9F54
 229+ 9F54              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9F54
 231+ 9F54 23               inc hl
 232+ 9F55 7E               ld a,(hl)
 233+ 9F56 32 04 89         ld (Cola_de_desplazamiento),a
 234+ 9F59 2B               dec hl
 235+ 9F5A
 236+ 9F5A 21 09 89         ld hl,Ctrl_2
 237+ 9F5D CB D6            set 2,(hl)
 238+ 9F5F
 239+ 9F5F              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9F5F              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9F5F
 242+ 9F5F              Desplazamiento_iniciado
 243+ 9F5F
 244+ 9F5F CD 16 A0         call Aplica_desplazamiento
 245+ 9F62
 246+ 9F62              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F62
 248+ 9F62 3A 2C 89         ld a,(Ctrl_3)
 249+ 9F65 CB 57            bit 2,a
 250+ 9F67 C0               ret nz
 251+ 9F68
 252+ 9F68 3A 09 89         ld a,(Ctrl_2)
 253+ 9F6B CB 67            bit 4,a
 254+ 9F6D C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F6E
 256+ 9F6E 21 01 89     3 ld hl,Repetimos_desplazamiento
 257+ 9F71 35               dec (hl)
 258+ 9F72 C0               ret nz
 259+ 9F73
 260+ 9F73              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F73              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F73              ; Analiza (Cola_de_desplazamiento).
 263+ 9F73
 264+ 9F73 3A 04 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F76 A7               and a
 266+ 9F77 CC 71 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F7A 28 30            jr z,Reinicia_el_movimiento
 268+ 9F7C
 269+ 9F7C FE FF            cp $ff
 270+ 9F7E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F80
 272+ 9F80 FE FE            cp $fe
 273+ 9F82 CC EF 9F         call z,Fijamos_bucle
 274+ 9F85 28 25            jr z,Reinicia_el_movimiento
 275+ 9F87
 276+ 9F87 FE FD            cp $fd
 277+ 9F89 20 11            jr nz,1F
 278+ 9F8B
 279+ 9F8B              ; ---
 280+ 9F8B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F8B
 282+ 9F8B 3A 09 89         ld a,(Ctrl_2)
 283+ 9F8E CB 5F            bit 3,a
 284+ 9F90 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9F92
 286+ 9F92              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9F92
 288+ 9F92 21 09 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9F95 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9F97
 291+ 9F97 CD 00 A0         call Inicia_Repetimos_movimiento
 292+ 9F9A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9F9C              ; ---
 294+ 9F9C
 295+ 9F9C FE 01        1 cp 1
 296+ 9F9E CA D9 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9FA1
 298+ 9FA1 3D               dec a
 299+ 9FA2 32 04 89         ld (Cola_de_desplazamiento),a
 300+ 9FA5
 301+ 9FA5 3A 02 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9FA8 32 01 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9FAB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9FAB C9               ret
 305+ 9FAC
 306+ 9FAC              Reinicia_el_movimiento
 307+ 9FAC
 308+ 9FAC 3A 09 89         ld a,(Ctrl_2)
 309+ 9FAF CB 5F            bit 3,a
 310+ 9FB1 28 1B            jr z,2F
 311+ 9FB3
 312+ 9FB3              ; (Cola_de_desplazamiento)="254".
 313+ 9FB3
 314+ 9FB3 21 03 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FB6 35               dec (hl)
 316+ 9FB7 20 15            jr nz,2F
 317+ 9FB9
 318+ 9FB9              ; Fin de las repeticiones del último movimiento.
 319+ 9FB9
 320+ 9FB9 21 09 89         ld hl,Ctrl_2
 321+ 9FBC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FBE
 323+ 9FBE 2A FB 88         ld hl,(Puntero_mov)
 324+ 9FC1 23               inc hl
 325+ 9FC2 23               inc hl
 326+ 9FC3 23               inc hl
 327+ 9FC4 22 FB 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FC7              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FC7 7E               ld a,(hl)
 330+ 9FC8 32 04 89         ld (Cola_de_desplazamiento),a
 331+ 9FCB
 332+ 9FCB C3 73 9F         jp Cola
 333+ 9FCE
 334+ 9FCE CD 0B A0     2 call Inicia_Puntero_mov
 335+ 9FD1
 336+ 9FD1 21 09 89         ld hl,Ctrl_2
 337+ 9FD4 CB 96            res 2,(hl)
 338+ 9FD6
 339+ 9FD6 C3 3D 9F         jp Movimiento
 340+ 9FD9
 341+ 9FD9              Siguiente_desplazamiento
 342+ 9FD9
 343+ 9FD9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FD9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FD9
 346+ 9FD9 21 09 89         ld hl,Ctrl_2
 347+ 9FDC CB 96            res 2,(hl)
 348+ 9FDE
 349+ 9FDE 2A FB 88         ld hl,(Puntero_mov)
 350+ 9FE1 23               inc hl
 351+ 9FE2 23               inc hl
 352+ 9FE3 22 FB 88         ld (Puntero_mov),hl
 353+ 9FE6
 354+ 9FE6 7E               ld a,(hl)
 355+ 9FE7 A7               and a
 356+ 9FE8 CC 71 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FEB CA AC 9F         jp z,Reinicia_el_movimiento
 358+ 9FEE
 359+ 9FEE C9               ret
 360+ 9FEF
 361+ 9FEF              ; Subrutinas -----------------------------------------
 362+ 9FEF              ; ---------- --------- --------- ---------- ----------
 363+ 9FEF              ;
 364+ 9FEF              ;   24/07/23
 365+ 9FEF              ;
 366+ 9FEF              ;   Fijamos_bucle
 367+ 9FEF              ;
 368+ 9FEF              ;
 369+ 9FEF
 370+ 9FEF              Fijamos_bucle
 371+ 9FEF
 372+ 9FEF 3A FF 88         ld a,(Incrementa_puntero)
 373+ 9FF2 3C               inc a
 374+ 9FF3 32 00 89         ld (Incrementa_puntero_backup),a
 375+ 9FF6
 376+ 9FF6 CD 71 A0         call Incrementa_Puntero_indice_mov
 377+ 9FF9 2A F9 88         ld hl,(Puntero_indice_mov)
 378+ 9FFC 22 FD 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9FFF C9               ret
 380+ A000
 381+ A000              ; ---------- --------- --------- ---------- ----------
 382+ A000              ;
 383+ A000              ;   07/7/23
 384+ A000              ;
 385+ A000              ;   Inicia_Repetimos_movimiento
 386+ A000              ;
 387+ A000              ;
 388+ A000
 389+ A000              Inicia_Repetimos_movimiento
 390+ A000
 391+ A000              ; Iniciamos (Repetimos_movimiento).
 392+ A000
 393+ A000 DD 2A FB 88      ld ix,(Puntero_mov)
 394+ A004 DD 7E 02         ld a,(ix+2)
 395+ A007 32 03 89         ld (Repetimos_movimiento),a
 396+ A00A
 397+ A00A C9               ret
 398+ A00B
 399+ A00B              ; ---------- --------- --------- ---------- ----------
 400+ A00B              ;
 401+ A00B              ;   26/6/23
 402+ A00B              ;
 403+ A00B              ;   Inicia_Puntero_mov
 404+ A00B              ;
 405+ A00B              ;
 406+ A00B
 407+ A00B 2A F9 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ A00E 5E               ld e,(hl)
 409+ A00F 23               inc hl
 410+ A010 56               ld d,(hl)
 411+ A011 EB               ex de,hl
 412+ A012 22 FB 88         ld (Puntero_mov),hl
 413+ A015 C9               ret
 414+ A016
 415+ A016              ; ---------- --------- --------- ---------- ----------
 416+ A016              ;
 417+ A016              ;   27/06/23
 418+ A016              ;
 419+ A016              ;   Aplica_movimiento.
 420+ A016
 421+ A016              Aplica_desplazamiento
 422+ A016
 423+ A016              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ A016
 425+ A016 2A FB 88         ld hl, (Puntero_mov)
 426+ A019
 427+ A019 7E               ld a,(hl)
 428+ A01A E6 F0            and $f0
 429+ A01C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ A01D
 431+ A01D CB 7E            bit 7,(hl)
 432+ A01F 28 03            jr z,1F
 433+ A021 CD 3B 9A         call Mov_up
 434+ A024 2A FB 88     1 ld hl, (Puntero_mov)
 435+ A027 CB 76            bit 6,(hl)
 436+ A029 28 09            jr z,2F
 437+ A02B CD 00 9A         call Mov_down
 438+ A02E
 439+ A02E              ; Se ha aplicado reinicio ???
 440+ A02E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ A02E
 442+ A02E 3A 2C 89         ld a,(Ctrl_3)
 443+ A031 CB 57            bit 2,a
 444+ A033 C0               ret nz
 445+ A034
 446+ A034 2A FB 88     2 ld hl, (Puntero_mov)
 447+ A037 CB 6E            bit 5,(hl)
 448+ A039 28 03            jr z,3F
 449+ A03B CD 9C 9B         call Mov_left
 450+ A03E 2A FB 88     3 ld hl, (Puntero_mov)
 451+ A041 CB 66            bit 4,(hl)
 452+ A043 C8               ret z
 453+ A044 CD 7E 9A         call Mov_right
 454+ A047 C9               ret
 455+ A048
 456+ A048              ; ---------- --------- --------- ---------- ----------
 457+ A048              ;
 458+ A048              ;   26/06/23
 459+ A048              ;
 460+ A048              ;   Ajusta_velocidad_desplazamiento.
 461+ A048
 462+ A048              Ajusta_velocidad_desplazamiento
 463+ A048
 464+ A048              ; 1er byte de la cadena de movimiento.
 465+ A048              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ A048
 467+ A048 CD 66 A0         call Extrae_nibble_alto
 468+ A04B
 469+ A04B 32 DF 88         ld (Vel_up),a
 470+ A04E 79               ld a,c
 471+ A04F E6 0F            and $0f
 472+ A051 32 E0 88         ld (Vel_down),a
 473+ A054
 474+ A054              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ A054              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ A054
 477+ A054 23               inc hl
 478+ A055 CD 66 A0         call Extrae_nibble_alto
 479+ A058
 480+ A058 32 DD 88         ld (Vel_left),a
 481+ A05B 79               ld a,c
 482+ A05C E6 0F            and $0f
 483+ A05E 32 DE 88         ld (Vel_right),a
 484+ A061
 485+ A061              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A061
 487+ A061 23               inc hl
 488+ A062 22 FB 88         ld (Puntero_mov),hl
 489+ A065 C9               ret
 490+ A066
 491+ A066 06 04        Extrae_nibble_alto ld b,4
 492+ A068 7E               ld a,(hl)
 493+ A069 4F               ld c,a
 494+ A06A E6 F0            and $f0
 495+ A06C CB 3F        1 srl a
 496+ A06E 10 FC            djnz 1B
 497+ A070 C9               ret
 498+ A071
 499+ A071              ; ---------- --------- --------- ---------- ----------
 500+ A071              ;
 501+ A071              ;   5/7/23
 502+ A071              ;
 503+ A071              ;   Incrementa_Puntero_indice_mov
 504+ A071
 505+ A071              Incrementa_Puntero_indice_mov
 506+ A071
 507+ A071 21 FF 88         ld hl,Incrementa_puntero
 508+ A074 34               inc (hl)
 509+ A075
 510+ A075 2A F9 88         ld hl,(Puntero_indice_mov)
 511+ A078 01 02 00         ld bc,2
 512+ A07B A7               and a
 513+ A07C 09               add hl,bc
 514+ A07D 22 F9 88         ld (Puntero_indice_mov),hl
 515+ A080
 516+ A080 7E               ld a,(hl)
 517+ A081 A7               and a
 518+ A082
 519+ A082              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A082
 521+ A082              ;    jr z,$
 522+ A082
 523+ A082              ;! Reinicia el Patrón de movimiento.
 524+ A082
 525+ A082 CC 87 A0         call z,Inicializa_Puntero_indice_mov
 526+ A085
 527+ A085 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A086
 529+ A086 C9               ret
 530+ A087
 531+ A087
 532+ A087              ; ---------- --------- --------- ---------- ----------
 533+ A087              ;
 534+ A087              ;   24/07/23
 535+ A087              ;
 536+ A087              ;   Inicializa_Puntero_indice_mov
 537+ A087
 538+ A087              Inicializa_Puntero_indice_mov
 539+ A087
 540+ A087              ; Existe etiqueta de bucle principal???
 541+ A087
 542+ A087 2A FD 88         ld hl,(Puntero_indice_mov_bucle)
 543+ A08A 24               inc h
 544+ A08B 25               dec h
 545+ A08C 28 05            jr z,2F
 546+ A08E
 547+ A08E 22 F9 88         ld (Puntero_indice_mov),hl
 548+ A091 18 14            jr 3F
 549+ A093
 550+ A093              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A093
 552+ A093 3A FF 88     2 ld a,(Incrementa_puntero)
 553+ A096 47               ld b,a
 554+ A097
 555+ A097 2A F9 88         ld hl,(Puntero_indice_mov)
 556+ A09A 2B           1 dec hl
 557+ A09B 2B               dec hl
 558+ A09C 10 FC            djnz 1B
 559+ A09E 22 F9 88         ld (Puntero_indice_mov),hl
 560+ A0A1
 561+ A0A1 AF               xor a
 562+ A0A2 32 FF 88         ld (Incrementa_puntero),a
 563+ A0A5 18 06            jr 4F
 564+ A0A7
 565+ A0A7 3A 00 89     3 ld a,(Incrementa_puntero_backup)
 566+ A0AA 32 FF 88         ld (Incrementa_puntero),a
 567+ A0AD C9           4 ret
 568+ A0AE
 569+ A0AE
 570+ A0AE
# file closed: Patrones_de_mov.asm
1845  A0AE              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0AE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0AE              ;
   3+ A0AE              ;	12/12/23
   4+ A0AE              ;
   5+ A0AE              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0AE
   7+ A0AE              ;	ADC HL,SP	LD (addr),SP
   8+ A0AE              ;	ADD HL,SP	LD SP,(addr)
   9+ A0AE              ;	ADD IX,SP	LD SP,nn
  10+ A0AE              ; 	ADD IY,SP	LD SP,HL
  11+ A0AE              ;				LD SP,IX
  12+ A0AE              ;	DEC SP		LD SP,IY
  13+ A0AE
  14+ A0AE              ;	EX (SP),HL
  15+ A0AE              ;	EX (SP),IX
  16+ A0AE              ;	EX (SP),IY
  17+ A0AE
  18+ A0AE              ;	INC SP
  19+ A0AE
  20+ A0AE                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 1E 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 E8 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 F4 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 0D 89         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 26 89         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A F8 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 2A 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 24 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 0D 89         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 26 89         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A F8 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 2A 89         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 1E 89      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 24 89     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 1E 89  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 24 89         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 24 89         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1846  718B
1847  718B              	SAVESNA "Pruebas.sna", START
1848  718B
1849  718B
1850  718B
1851  718B
# file closed: Banco_de_pruebas.asm
