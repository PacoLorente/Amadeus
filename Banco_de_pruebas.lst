# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 65 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 4E A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 1F 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 8F 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 86 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 8D 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 8D 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 90 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 96 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 36 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C3 89        	defw Caja_1
 154+ 89A9 CF 89        	defw Caja_2
 155+ 89AB DB 89        	defw Caja_3
 156+ 89AD E7 89        	defw Caja_4
 157+ 89AF F3 89        	defw Caja_5
 158+ 89B1 FF 89        	defw Caja_6
 159+ 89B3              ;	defw Caja_7
 160+ 89B3
 161+ 89B3 00 00        	defw 0
 162+ 89B5 00 00        	defw 0
 163+ 89B7
 164+ 89B7              ; -------------------------
 165+ 89B7
 166+ 89B7              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B7
 168+ 89B7              ;	db 0
 169+ 89B7
 170+ 89B7              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B7              ;
 172+ 89B7              ;	28/05/24
 173+ 89B7              ;
 174+ 89B7              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B7              ;
 176+ 89B7              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B7
 178+ 89B7 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89B8 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BA 00           	db 0												; (Contador_de_vueltas).
 181+ 89BB 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BC 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89BE 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C0 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C2 00           	db 0												; (Velocidad).
 186+ 89C3
 187+ 89C3              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C3              ;
 189+ 89C3              ;	22/01/24
 190+ 89C3              ;
 191+ 89C3              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C3
 193+ 89C3 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C6 00           	db 0												; (Contador_de_vueltas).
 195+ 89C7 00           	db 0												; (Impacto).
 196+ 89C8 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89CE 00           	db 0												; (Velocidad).
 200+ 89CF
 201+ 89CF              ; ---------- ---------- ---------- ---------- ----------
 202+ 89CF
 203+ 89CF 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D2 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D3 00           	db 0												; (Impacto).
 206+ 89D4 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DA 00           	db 0												; (Velocidad).
 210+ 89DB
 211+ 89DB              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DB
 213+ 89DB 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89DE 00           	db 0 												; (Contador_de_vueltas).
 215+ 89DF 00           	db 0												; (Impacto).
 216+ 89E0 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E6 00           	db 0												; (Velocidad).
 220+ 89E7
 221+ 89E7              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E7
 223+ 89E7 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EA 00           	db 0 												; (Contador_de_vueltas).
 225+ 89EB 00           	db 0												; (Impacto).
 226+ 89EC 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F2 00           	db 0												; (Velocidad).
 230+ 89F3
 231+ 89F3              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F3
 233+ 89F3 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F6 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F7 00           	db 0												; (Impacto).
 236+ 89F8 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 89FE 00           	db 0												; (Velocidad).
 240+ 89FF
 241+ 89FF              ; ---------- ---------- ---------- ---------- ----------
 242+ 89FF
 243+ 89FF 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A02 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A03 00           	db 0												; (Impacto).
 246+ 8A04 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A06 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A08 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0A 00           	db 0												; (Velocidad).
 250+ 8A0B
 251+ 8A0B              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0B
 253+ 8A0B              ;Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A0B              ;	db 0 												; (Contador_de_vueltas).
 255+ 8A0B              ;	db 0												; (Impacto).
 256+ 8A0B              ;	defw 0												; (Puntero_de_impresion).
 257+ 8A0B              ;	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A0B              ;	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A0B              ;	db 0												; (Velocidad).
 260+ 8A0B
 261+ 8A0B              ; -------------------------------------------------------------------------------------
 262+ 8A0B              ;
 263+ 8A0B              ;	10/11/24
 264+ 8A0B              ;
 265+ 8A0B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A0B              ;
 267+ 8A0B              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A0B              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A0B              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A0B              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A0B
 272+ 8A0B              Indice_de_definiciones_de_entidades
 273+ 8A0B
 274+ 8A0B 0F 8A        	defw Entidad_1
 275+ 8A0D 1C 8A        	defw Entidad_2
 276+ 8A0F
 277+ 8A0F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A0F
 279+ 8A0F              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A0F
 281+ 8A0F 81 02 02     Entidad_1 db $81,2,2		                     		; (Tipo) / (Filas) / (Columns).
 282+ 8A12 01           	db 1												; (Contador_de_vueltas).
 283+ 8A13 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A15 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A17
 286+ 8A17              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A17              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A17
 289+ 8A17 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A19 00           	db 0												; (Cuad_objeto).
 291+ 8A1A
 292+ 8A1A C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A1C
 294+ 8A1C              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A1C
 296+ 8A1C 81 02 02     Entidad_2 db $81,2,2		                   			; (Tipo) / (Filas) / (Columns).
 297+ 8A1F 01           	db 1												; (Contador_de_vueltas).
 298+ 8A20 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A22 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A24 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A26 01           	db 1												; (Cuad_objeto).
 302+ 8A27 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A29
 304+ 8A29              ; -------------------------------------------------------------------------------------
 305+ 8A29              ;
 306+ 8A29              ;	28/05/24
 307+ 8A29              ;
 308+ 8A29              ;	Definición de Amadeus.
 309+ 8A29              ;
 310+ 8A29              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A29              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A29
 313+ 8A29 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A2C 00           	db 0												; (Contador_de_vueltas).
 315+ 8A2D C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A2F D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A31 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A33 03           	db 3												; (Cuad_objeto).
 319+ 8A34 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A36              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A36
   2+ 8A36
   3+ 8A36              ;   07/07/23
   4+ 8A36              ;
   5+ 8A36              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A36              ;
   7+ 8A36              ;   Codificación:
   8+ 8A36              ;
   9+ 8A36              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A36              ;
  11+ 8A36              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A36              ;
  13+ 8A36              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A36              ;
  15+ 8A36              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A36              ;
  17+ 8A36              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A36              ;                               ..... %01000010 Vel_up 4
  19+ 8A36              ;                                               Vel_down 2
  20+ 8A36              ;                               ..... $42
  21+ 8A36              ;
  22+ 8A36              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A36              ;
  24+ 8A36              ;                               ..... %01000010 Vel_left 4
  25+ 8A36              ;                                               Vel_right 2
  26+ 8A36              ;                               ..... $42
  27+ 8A36              ;
  28+ 8A36              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A36              ;
  30+ 8A36              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A36              ;
  32+ 8A36              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A36              ;
  34+ 8A36              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A36              ;                                     $53
  36+ 8A36              ;
  37+ 8A36              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A36              ;
  39+ 8A36              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A36              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A36              ;
  42+ 8A36              ;                       Arriba ..... $81
  43+ 8A36              ;                       Arriba - izquierda ..... $a1
  44+ 8A36              ;                       Arriba - derecha ..... $91
  45+ 8A36              ;
  46+ 8A36              ;                       Abajo ..... $41
  47+ 8A36              ;                       Abajo - izquierda ..... $61
  48+ 8A36              ;                       Abajo - derecha ..... $51
  49+ 8A36              ;
  50+ 8A36              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A36              ;
  52+ 8A36              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A36              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A36              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A36              ;
  56+ 8A36              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A36              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A36              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A36              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A36              ;
  61+ 8A36              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A36              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A36              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A36              ;
  65+ 8A36              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A36              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A36              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A36              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A36
  70+ 8A36              ; ----- ----- ----- ----- -----
  71+ 8A36
  72+ 8A36 62 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A38 6A 8A            defw F_1
  74+ 8A3A 74 8A            defw F_2
  75+ 8A3C 7E 8A            defw Codo_abajo_derecha
  76+ 8A3E B2 8A            defw Derecha_y_subiendo
  77+ 8A40 BC 8A            defw Derecha_y_subiendo_1
  78+ 8A42 C6 8A            defw F_3
  79+ 8A44 D0 8A            defw F_4
  80+ 8A46 DA 8A            defw Derecha_y_bajando
  81+ 8A48 E4 8A            defw Derecha_y_bajando_1
  82+ 8A4A EE 8A            defw Derecha_y_bajando_2
  83+ 8A4C F8 8A            defw Codo_derecha_abajo
  84+ 8A4E 28 8B            defw Codo_abajo_izq.
  85+ 8A50 5C 8B            defw Izquierda_y_subiendo
  86+ 8A52 66 8B            defw Izquierda_y_subiendo_1
  87+ 8A54 70 8B            defw F_5
  88+ 8A56 7A 8B            defw F_6
  89+ 8A58 84 8B            defw Izquierda_y_bajando
  90+ 8A5A 8E 8B            defw Izquierda_y_bajando_1
  91+ 8A5C 98 8B            defw Izquierda_y_bajando_2
  92+ 8A5E A2 8B            defw Codo_izquierda_abajo
  93+ 8A60 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A62
  95+ 8A62 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A66 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A6A
  98+ 8A6A 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A6E 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A72 08 00
 100+ 8A74
 101+ 8A74 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A78 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A7C 0F FE
 103+ 8A7E
 104+ 8A7E 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A82 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A86 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A8A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A8E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A92 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A96 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A9A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A9E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AA2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AA6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AAA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AAE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AB2
 118+ 8AB2 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AB6 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ABA 06 00
 120+ 8ABC
 121+ 8ABC 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AC0 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AC4 02 00
 123+ 8AC6
 124+ 8AC6 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ACA 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ACE 04 00
 126+ 8AD0
 127+ 8AD0 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AD4 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AD8 08 00
 129+ 8ADA
 130+ 8ADA 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8ADE 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AE2 02 00
 132+ 8AE4
 133+ 8AE4 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AE8 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AEC 06 00
 135+ 8AEE
 136+ 8AEE 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AF2 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AF6 06 00
 138+ 8AF8
 139+ 8AF8              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8AF8
 141+ 8AF8 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AFC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B00 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B04 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B08 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B0C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B10 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B14 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B18 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B1C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B20 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B24 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B28
 154+ 8B28 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B2C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B30 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B34 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B38 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B3C 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B40 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B44 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B48 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B4C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B50 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B54 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B58 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B5C
 168+ 8B5C 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B60 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B64 06 00
 170+ 8B66
 171+ 8B66 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B6A 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B6E 02 00
 173+ 8B70
 174+ 8B70 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B74 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B78 04 00
 176+ 8B7A
 177+ 8B7A 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B7E 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B82 08 00
 179+ 8B84
 180+ 8B84 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B88 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B8C 02 00
 182+ 8B8E
 183+ 8B8E 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B92 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B96 06 00
 185+ 8B98
 186+ 8B98 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B9C 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BA0 06 00
 188+ 8BA2
 189+ 8BA2 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BA6 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BAA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BAE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BB2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BB6 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BBA 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BBE 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BC2 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BC6 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BCA 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BCE 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BD2
 202+ 8BD2
 203+ 8BD2
 204+ 8BD2
 205+ 8BD2
 206+ 8BD2
 207+ 8BD2
 208+ 8BD2
 209+ 8BD2
 210+ 8BD2
# file closed: Patrones_de_mov.asm
 149  8BD2              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BD2              ; 19/1/24
   2+ 8BD2
   3+ 8BD2              Indice_de_niveles
   4+ 8BD2
   5+ 8BD2 DA 8B        	defw Nivel_1
   6+ 8BD4 E1 8B        	defw Nivel_2
   7+ 8BD6
   8+ 8BD6              ;	...
   9+ 8BD6              ;	...
  10+ 8BD6              ;	+ Niveles ...
  11+ 8BD6
  12+ 8BD6 00 00        	defw 0
  13+ 8BD8 00 00        	defw 0
  14+ 8BDA
  15+ 8BDA 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BDB 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BDF 01 01
  17+ 8BE1
  18+ 8BE1 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BE2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BE6 01 02
  20+ 8BE8 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BEC 01 02
  21+ 8BEE
# file closed: Niveles.asm
 150  8BEE
 151  8BEE              ; --------------------------------------------------------------------------------
 152  8BEE              ;
 153  8BEE              ; 12/05/24
 154  8BEE              ;
 155  8BEE              ; Parámetros DRAW.
 156  8BEE              ;
 157  8BEE
 158  8BEE              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BEE
 160  8BEE 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BEF              ;															- Patrón de movimiento.
 162  8BEF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BF0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BF1
 165  8BF1 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8BF2              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8BF2
 168  8BF2              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8BF2              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8BF2              ; Ejemplos.
 171  8BF2
 172  8BF2              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8BF2              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8BF2              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8BF2              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8BF2              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8BF2
 178  8BF2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8BF3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8BF3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8BF3
 182  8BF3 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8BF5              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8BF5
 185  8BF5 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8BF7
 187  8BF7              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8BF7
 189  8BF7 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8BF9              ;														; _palabras que componen el "movimiento_masticado".
 191  8BF9
 192  8BF9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8BF9
 194  8BF9 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8BFA              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8BFA              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8BFA              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8BFA              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8BFA
 200  8BFA 00           Ctrl_2 db 0
 201  8BFB              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8BFB              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8BFB              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8BFB              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8BFB              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8BFB              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8BFB              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8BFB              ;
 209  8BFB              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8BFB              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8BFB              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8BFB              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8BFB              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8BFB              ;														BIT 4, ???
 215  8BFB              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8BFB
 217  8BFB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8BFC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8BFC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8BFC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8BFC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8BFC              ;
 223  8BFC              ; 														DESCRIPCIÖN:
 224  8BFC              ;
 225  8BFC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8BFC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8BFC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8BFC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8BFC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8BFC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8BFC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8BFC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8BFC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8BFC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8BFC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8BFC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8BFC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8BFC              ;
 239  8BFC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8BFC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8BFC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8BFC
 243  8BFC              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8BFC
 245  8BFC 00           Filas db 0												; Filas. [DRAW]
 246  8BFD 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8BFE 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C00 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C02
 250  8C02              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C02
 252  8C02 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C03              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C03              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C03
 256  8C03              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C03
 258  8C03              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C03              ;
 260  8C03              ;	COLORES: 0 ..... NEGRO
 261  8C03              ;    		 1 ..... AZUL
 262  8C03              ; 			 2 ..... ROJO
 263  8C03              ;			 3 ..... MAGENTA
 264  8C03              ; 			 4 ..... VERDE
 265  8C03              ; 			 5 ..... CIAN
 266  8C03              ;			 6 ..... AMARILLO
 267  8C03              ; 			 7 ..... BLANCO
 268  8C03
 269  8C03 00 00        Indice_Sprite_der defw 0
 270  8C05 00 00        Indice_Sprite_izq defw 0
 271  8C07 00 00        Puntero_DESPLZ_der defw 0
 272  8C09 00 00        Puntero_DESPLZ_izq defw 0
 273  8C0B
 274  8C0B 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C0D 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C0E 00           Columnas db 0
 277  8C0F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C11              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C11 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C12
 281  8C12              ; variables de control general.
 282  8C12
 283  8C12 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C13
 285  8C13              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C13
 287  8C13              Perfiles_de_velocidad
 288  8C13
 289  8C13 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C14 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C15 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C16 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C17
 294  8C17              ; Contadores de 16 bits.
 295  8C17
 296  8C17 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C19 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C1B 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C1D 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C1F
 301  8C1F              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C1F
 303  8C1F 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C21 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C23 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C25              ;
 307  8C25              ;
 308  8C25 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C26              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C26              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C26 00           Incrementa_puntero_backup db 0
 312  8C27 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C28              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C28 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C29 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C2A 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C2B              ;
 318  8C2B              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C2B              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C2B              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C2B              ;
 322  8C2B              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C2B              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C2B              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C2B              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C2B              ;
 327  8C2B              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C2B              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C2B              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C2B
 331  8C2B 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C2C
 333  8C2C              ;														DESCRIPCIÓN:
 334  8C2C              ;
 335  8C2C              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C2C              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C2C              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C2C              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C2C              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C2C              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C2C
 342  8C2C              ;														BIT 3, Recarga de nueva oleada.
 343  8C2C              ;														BIT 4, Recarga de nueva oleada.
 344  8C2C              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C2C              ;														BIT 6, **** Frame completo.
 346  8C2C              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C2C
 348  8C2C 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C2E              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C2E              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C2E              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C2E
 353  8C2E              ; Gestión de ENTIDADES y CAJAS.
 354  8C2E
 355  8C2E 00 00        Puntero_store_caja defw 0
 356  8C30 00 00        Puntero_restore_caja defw 0
 357  8C32 00 00        Indice_restore_caja defw 0
 358  8C34 00 00        Puntero_indice_master defw 0
 359  8C36
 360  8C36 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C37 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C38 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C39
 364  8C39 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C3B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C3D              ;														; _ puntero (Indice_entidades).
 367  8C3D
 368  8C3D              ;---------------------------------------------------------------------------------------------------------------
 369  8C3D              ;
 370  8C3D              ;	13/10/24
 371  8C3D              ;
 372  8C3D              ;	Álbumes.
 373  8C3D
 374  8C3D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C3F              ;														; _variable para almacenar lo posición del puntero_
 376  8C3F              ; 														; _de pila, SP.
 377  8C3F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C41              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C41
 380  8C41              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C41
 382  8C41 00 00        Album_de_pintado defw 0
 383  8C43 00 00        Album_de_borrado defw 0
 384  8C45 00 00        Album_de_pintado_Amadeus defw 0
 385  8C47 00 00        Album_de_borrado_Amadeus defw 0
 386  8C49
 387  8C49 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C4B 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C4D
 390  8C4D 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C4F 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C51
 393  8C51
 394  8C51 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C53
 396  8C53 00           Num_de_bytes_album_de_disparos db 0
 397  8C54 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C55
 399  8C55 07           Numero_de_disparos_de_entidades db 7
 400  8C56
 401  8C56 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C57 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C58
 404  8C58 00 00        Techo_Scanlines_album defw 0
 405  8C5A 00 00        Techo_Scanlines_album_2 defw 0
 406  8C5C 00           Switch db 0
 407  8C5D 00 00        Techo defw 0
 408  8C5F 00 00        Scanlines_album_SP defw 0
 409  8C61 00 89        India_SP defw Tabla_de_pintado
 410  8C63 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C65
 412  8C65 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C66              ;
 414  8C66              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C66              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C66              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C66              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C66              ;																Habilita el borrado/pintado de sprites.
 419  8C66              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C66              ;																_ a la baja.
 421  8C66              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C66              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C66              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C66              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C66              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C66              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C66
 428  8C66 00           Ctrl_4 db 0
 429  8C67 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C68              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C68              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C68
 433  8C68              ; Gestión de Disparos.
 434  8C68
 435  8C68 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C6A 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C6C 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C6D
 439  8C6D              ;
 440  8C6D              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C6D              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C6D              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C6D              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C6D
 445  8C6D
 446  8C6D
 447  8C6D
 448  8C6D
 449  8C6D
 450  8C6D
 451  8C6D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C6F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C6F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C6F
 455  8C6F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C71              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C71 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C74              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C74 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C77              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C77
 462  8C77              ;---------------------------------------------------------------------------------------------------------------
 463  8C77
 464  8C77              ; Relojes y temporizaciones.
 465  8C77
 466  8C77 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C78 05           Clock_explosion_Amadeus db 5
 468  8C79 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C7A
 470  8C7A F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C7C F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C7E 00           Numero_rnd_disparos db 0
 473  8C7F
 474  8C7F 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C81 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C82              ;																		; Repite la oleada de entidades.
 477  8C82 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C83 A0           CLOCK_disparos_de_entidades db $a0
 479  8C84
 480  8C84              ;---------------------------------------------------------------------------------------------------------------
 481  8C84
 482  8C84              ; Gestión de NIVELES.
 483  8C84
 484  8C84 00           Nivel db 0												; Nivel actual del juego.
 485  8C85 00 00        Puntero_indice_NIVELES defw 0
 486  8C87 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C89              ; 														; _ que definen el NIVEL.
 488  8C89
 489  8C89              ; ---------------------------------------------------------------------------------------------------------------
 490  8C89
 491  8C89              ; Temporizaciones Shield.
 492  8C89
 493  8C89 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C8D 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C8F 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C90 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C91 00           Shield_3 db 0
 498  8C92
 499  8C92 03           Lives db 3
 500  8C93
 501  8C93              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C93              ;
 503  8C93              ;	13/11/24
 504  8C93
 505  8C93              START
 506  8C93
 507  8C93 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C96 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C98 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C9A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C9C F3           	DI
 512  8C9D
 513  8C9D              ; Limpiamos pantalla.
 514  8C9D
 515  8C9D 3E 07        	ld a,%00000111
 516  8C9F CD CC 94     	call Cls
 517  8CA2 CD 7B 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CA5
 519  8CA5              INICIALIZACION
 520  8CA5
 521  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CA7 CD C8 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CAA CD EA 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 7F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicia los álbumes de líneas.
 529  8CB3
 530  8CB3 CD C9 90     	call Inicia_albumes_de_lineas
 531  8CB6 CD D9 90     	call Inicia_albumes_de_lineas_Amadeus
 532  8CB9 CD E6 90     	call Inicia_albumes_de_disparos
 533  8CBC
 534  8CBC              ;	Inicia 1er Nivel.
 535  8CBC
 536  8CBC CD 2A 93     	call Inicializa_1er_Nivel							 ; Inicializa el 1er nivel del juego.
 537  8CBF CD F8 92     	call Genera_movimientos_masticados_del_nivel		 ; Generamos las distintas coreografías de la entidades que componen el nivel. También se inicializan las cajas "Master" para ir_
 538  8CC2              ;														   _reponiendo entidades eliminadas.
 539  8CC2 CD 5E 93     	call Prepara_Cajas_de_Entidades
 540  8CC5
 541  8CC5              4
 542  8CC5
 543  8CC5              ;	call Inicia_Entidades
 544  8CC5 CD B7 93     	call Inicia_Amadeus
 545  8CC8
 546  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8CC8
 550  8CC8 11 B7 89     	ld de,Amadeus_BOX
 551  8CCB CD 9B 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8CCE CD FA 93     	call Limpiamos_bandeja_DRAW
 553  8CD1
 554  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8CD1
 556  8CD1 06 3C        	ld b,60
 557  8CD3 CD 72 9D     2 call Amadeus_a_izquierda
 558  8CD6 10 FB        	djnz 2B
 559  8CD8
 560  8CD8 CD A7 90     	call Genera_datos_de_impresion_Amadeus
 561  8CDB
 562  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8CDB
 564  8CDB CD 02 91     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8CDE
 566  8CDE CD 86 91     	call Inicia_Shield
 567  8CE1
 568  8CE1 2A 5F 8C     6 ld hl,(Scanlines_album_SP)
 569  8CE4 22 58 8C     	ld (Techo_Scanlines_album),hl
 570  8CE7
 571  8CE7 2A 43 8C     	ld hl,(Album_de_borrado)
 572  8CEA 22 5F 8C     	ld (Scanlines_album_SP),hl
 573  8CED
 574  8CED 21 00 89     	ld hl,Tabla_de_pintado
 575  8CF0 22 61 8C     	ld (India_SP),hl
 576  8CF3
 577  8CF3 21 65 8C     	ld hl,Ctrl_3
 578  8CF6 CB C6        	set 0,(hl) 											; Indica Frame completo.
 579  8CF8 CB D6        	set 2,(hl)
 580  8CFA CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 581  8CFC
 582  8CFC FB           	ei 													; Ha de apuntar a $5c3a.
 583  8CFD
 584  8CFD 76           	halt
 585  8CFE
 586  8CFE              ; ------------------------------------
 587  8CFE
 588  8CFE              Main
 589  8CFE              ;
 590  8CFE              ; 07/11/24.
 591  8CFE
 592  8CFE              ; Gestión de disparos.
 593  8CFE
 594  8CFE CD BF 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 595  8D01 CD 65 9F     	call Motor_de_disparos_entidades
 596  8D04 CD FA A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 597  8D07
 598  8D07              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 599  8D07              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 600  8D07              ; Este hecho lo indica el bit2 de (Impacto2).
 601  8D07
 602  8D07 CD 97 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 603  8D0A
 604  8D0A              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 605  8D0A
 606  8D0A 21 83 8C     	ld hl,CLOCK_disparos_de_entidades
 607  8D0D 35           	dec (hl)
 608  8D0E CC 06 8E     	call z,Autoriza_disparo_de_entidades
 609  8D11
 610  8D11 2A 7F 8C     	ld hl,(Clock_next_entity)
 611  8D14 ED 4B 78 5C  	ld bc,(FRAMES)
 612  8D18 A7           	and a
 613  8D19 ED 42        	sbc hl,bc
 614  8D1B 20 16        	jr nz,1F
 615  8D1D
 616  8D1D              ; GESTIÓN DE ENTIDADES.
 617  8D1D
 618  8D1D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 619  8D1D              ; _ (Clock_next_entity) para la siguiente entidad.
 620  8D1D
 621  8D1D              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 622  8D1D              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 623  8D1D              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 624  8D1D
 625  8D1D 21 37 8C     	ld hl,Numero_parcial_de_entidades
 626  8D20 46           	ld b,(hl)
 627  8D21 3A 38 8C     	ld a,(Entidades_en_curso)								; Entidades que hay en pantalla.
 628  8D24 B8           	cp b
 629  8D25 28 0C        	jr z,1F
 630  8D27 30 0A        	jr nc,1F
 631  8D29
 632  8D29              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 633  8D29
 634  8D29 3C           	inc a
 635  8D2A 32 38 8C     	ld (Entidades_en_curso),a
 636  8D2D
 637  8D2D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 638  8D2D
 639  8D2D CD EA 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 640  8D30 CD 06 8F     	call Define_Clock_next_entity
 641  8D33
 642  8D33 3A 38 8C     1 ld a,(Entidades_en_curso)
 643  8D36 A7           	and a
 644  8D37 CA B1 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 645  8D3A 47           	ld b,a												; No hay entidades que gestionar.
 646  8D3B
 647  8D3B              ; ( Código que ejecutamos con cada entidad: ).
 648  8D3B
 649  8D3B              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 650  8D3B              ;
 651  8D3B              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 652  8D3B
 653  8D3B 21 00 89     	ld hl,Tabla_de_pintado
 654  8D3E 22 61 8C     	ld (India_SP),hl
 655  8D41
 656  8D41 21 65 8C     	ld hl,Ctrl_3
 657  8D44 CB D6        	set 2,(hl)
 658  8D46 CD 94 8E     	call Change
 659  8D49
 660  8D49 C5           2 push bc 												; Nº de entidades en curso.
 661  8D4A
 662  8D4A CD 53 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 663  8D4D ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
 664  8D51
 665  8D51              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 666  8D51
 667  8D51              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 668  8D51              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 669  8D51
 670  8D51 3A 6C 8C     	ld a,(Impacto2)
 671  8D54 CB 5F        	bit 3,a
 672  8D56 C4 91 A1     	call nz,Compara_con_coordenadas_de_disparo
 673  8D59
 674  8D59 3A F2 8B     	ld a,(Impacto)
 675  8D5C CB 4F        	bit 1,a
 676  8D5E C4 63 92     	call nz,Genera_explosion
 677  8D61 20 31        	jr nz,Gestiona_siguiente_entidad
 678  8D63
 679  8D63 3A F2 8B     	ld a,(Impacto)
 680  8D66 A7           	and a
 681  8D67 28 0C        	jr z,3F
 682  8D69
 683  8D69              ; IMPACTO en entidad por colisión con Amadeus.
 684  8D69
 685  8D69              ; 5/7/24
 686  8D69              ; Nota importante:
 687  8D69              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 688  8D69              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 689  8D69              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 690  8D69
 691  8D69 3A BB 89     	ld a,(Impacto_Amadeus)
 692  8D6C A7           	and a
 693  8D6D C4 63 92     	call nz,Genera_explosion
 694  8D70 20 22        	jr nz,Gestiona_siguiente_entidad
 695  8D72
 696  8D72              ; Falsa colisión !!!
 697  8D72
 698  8D72 32 F2 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 699  8D75
 700  8D75              ; -------------------------------------------
 701  8D75
 702  8D75 CD 4A 8F     3 call Entidad_a_Tabla_de_pintado					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 703  8D78 CD 72 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 704  8D7B CD 62 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.			ok.
 705  8D7E CD 0C 95     	call Genera_datos_de_impresion
 706  8D81 CD 1D 94     	call Decrementa_Contador_de_mov_masticados
 707  8D84
 708  8D84              ; -------------------------------------------
 709  8D84
 710  8D84              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 711  8D84
 712  8D84 2A F3 8B     	ld hl,(Puntero_de_impresion)
 713  8D87 CD E0 94     	call Genera_coordenadas
 714  8D8A
 715  8D8A              ; TODO: Generamos disparo ???
 716  8D8A
 717  8D8A 3A 57 8C     	ld a,(Permiso_de_disparo_Entidades)
 718  8D8D A7           	and a
 719  8D8E C4 1B 8E     	call nz,Entidad_genera_disparo_si_procede
 720  8D91
 721  8D91 CD 15 A3     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 722  8D94
 723  8D94              Gestiona_siguiente_entidad
 724  8D94
 725  8D94 CD EF 93      	call Store_Restore_cajas
 726  8D97 C1           	pop bc
 727  8D98 10 AF        	djnz 2B
 728  8D9A
 729  8D9A              ; Hemos gestionado todas las entidades.
 730  8D9A              ; ----- ----- -----
 731  8D9A
 732  8D9A CD 5E 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 733  8D9D CD 75 8F     	call Ordena_tabla_de_impresion
 734  8DA0 CD 02 91     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 735  8DA3
 736  8DA3 CD 1B 8F     	call Borra_diferencia
 737  8DA6
 738  8DA6 3A 65 8C     	ld a,(Ctrl_3)
 739  8DA9 CB 5F        	bit 3,a
 740  8DAB 20 04        	jr nz,Gestion_de_Amadeus
 741  8DAD
 742  8DAD EB           	ex de,hl
 743  8DAE 71           	ld (hl),c
 744  8DAF 2C           	inc l
 745  8DB0 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 746  8DB1
 747  8DB1              ;! GESTIONA AMADEUS !!!!!!!!!!
 748  8DB1
 749  8DB1              Gestion_de_Amadeus
 750  8DB1
 751  8DB1 21 65 8C     	ld hl,Ctrl_3
 752  8DB4 CB 76        	bit 6,(hl)
 753  8DB6 28 13        	jr z,Amadeus_vivo
 754  8DB8
 755  8DB8              ; Amadeus ha sido destruido.
 756  8DB8              ; Decrementa (Temp_new_live).
 757  8DB8
 758  8DB8 21 79 8C     	ld hl,Temp_new_live
 759  8DBB 35           	dec (hl)
 760  8DBC 20 26        	jr nz,End_frame
 761  8DBE
 762  8DBE              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 763  8DBE
 764  8DBE 21 92 8C     	ld hl,Lives
 765  8DC1 35           	dec (hl)
 766  8DC2
 767  8DC2              ;! Fin del juego
 768  8DC2
 769  8DC2 F3           	di
 770  8DC3 28 FE        	jr z,$
 771  8DC5 FB           	ei
 772  8DC6
 773  8DC6              ; Nueva nave.
 774  8DC6
 775  8DC6 CD 38 8E     	call Reinicia_Amadeus
 776  8DC9 18 19        	jr End_frame
 777  8DCB
 778  8DCB              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 779  8DCB
 780  8DCB              Amadeus_vivo
 781  8DCB
 782  8DCB 3A BB 89     	ld a,(Impacto_Amadeus)
 783  8DCE A7           	and a
 784  8DCF C4 93 92     	call nz, Genera_explosion_Amadeus
 785  8DD2 20 10        	jr nz, End_frame
 786  8DD4
 787  8DD4 CD 40 92     	call Teclado
 788  8DD7 21 65 8C     	ld hl,Ctrl_3
 789  8DDA
 790  8DDA CB 6E        	bit 5,(hl)
 791  8DDC 28 06        	jr z,End_frame
 792  8DDE
 793  8DDE              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 794  8DDE
 795  8DDE CD AF 8E     	call Change_Amadeus
 796  8DE1 CD A7 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 797  8DE4
 798  8DE4              End_frame
 799  8DE4
 800  8DE4              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 801  8DE4              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 802  8DE4
 803  8DE4 CD BC A0     	call Genera_datos_de_impresion_disparos_Entidades
 804  8DE7 CD 80 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 805  8DEA CD D6 A1     	call Calcula_bytes_pintado_disparos
 806  8DED CD E3 A1     	call Limpia_album_de_pintado_disparos_entidades
 807  8DF0
 808  8DF0              ; ------------ ------------- --------------
 809  8DF0
 810  8DF0 2A 43 8C     	ld hl,(Album_de_borrado)
 811  8DF3 22 5F 8C     	ld (Scanlines_album_SP),hl
 812  8DF6
 813  8DF6 21 65 8C     	ld hl,Ctrl_3
 814  8DF9 CB C6        	set 0,(hl) 											; Indica Frame completo.
 815  8DFB CB 9E        	res 3,(hl)
 816  8DFD CB A6        	res 4,(hl)
 817  8DFF
 818  8DFF AF           	xor a
 819  8E00 D3 FE        	out ($fe),a
 820  8E02
 821  8E02 76           	halt
 822  8E03
 823  8E03              ; ----------------------------------------
 824  8E03
 825  8E03              ;	ld a,(Ctrl_1) 										; Existe Loop?
 826  8E03              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 827  8E03 CA FE 8C     	jp z,Main
 828  8E06
 829  8E06              ;------------------------------------------
 830  8E06              ;
 831  8E06              ;	07/11/24
 832  8E06
 833  8E06              Autoriza_disparo_de_entidades
 834  8E06
 835  8E06 3E 01        	ld a,1
 836  8E08 32 57 8C     	ld (Permiso_de_disparo_Entidades),a
 837  8E0B
 838  8E0B 3A 82 8C     	ld a,(Repone_CLOCK_disparos)
 839  8E0E FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 840  8E10 38 02        	jr c,1F
 841  8E12
 842  8E12              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 843  8E12              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 844  8E12              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 845  8E12
 846  8E12 D6 03        	sub 3
 847  8E14
 848  8E14 32 82 8C     1 ld (Repone_CLOCK_disparos),a
 849  8E17 32 83 8C     	ld (CLOCK_disparos_de_entidades),a
 850  8E1A
 851  8E1A C9           	ret
 852  8E1B
 853  8E1B              ;------------------------------------------
 854  8E1B              ;
 855  8E1B              ;	14/09/24
 856  8E1B              ;
 857  8E1B              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 858  8E1B
 859  8E1B              Entidad_genera_disparo_si_procede
 860  8E1B
 861  8E1B 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 862  8E1E CB 06        	rlc (hl)
 863  8E20
 864  8E20 DC 0C A1     	call c,Genera_disparo_de_entidad_maldosa
 865  8E23
 866  8E23 C9           	ret
 867  8E24
 868  8E24              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 869  8E24              ;
 870  8E24              ;	30/09/24
 871  8E24
 872  8E24              Actuaiza_sp_de_disparos_de_entidades
 873  8E24
 874  8E24 2A 7C 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 875  8E27 23           	inc hl
 876  8E28 22 7C 8C     	ld (Puntero_num_aleatorios_disparos),hl
 877  8E2B
 878  8E2B 11 FD 88     	ld de,Numeros_aleatorios+7
 879  8E2E 7B           	ld a,e
 880  8E2F 95           	sub l
 881  8E30 C0           	ret nz
 882  8E31
 883  8E31 21 F6 88     1 ld hl,Numeros_aleatorios
 884  8E34 22 7C 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 885  8E37 C9           	ret
 886  8E38
 887  8E38              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 888  8E38              ;
 889  8E38              ;	24/07/24
 890  8E38
 891  8E38              Reinicia_Amadeus
 892  8E38
 893  8E38              ;	Reinicia posición y estado.
 894  8E38
 895  8E38 21 CF 50     	ld hl,$50cf
 896  8E3B 22 BC 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 897  8E3E 21 CC DC     	ld hl,$dccc
 898  8E41 22 BE 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 899  8E44 21 3D 00     	ld hl,$003d
 900  8E47 22 C0 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 901  8E4A
 902  8E4A              ;	limpiamos el álbum de borrado.
 903  8E4A
 904  8E4A 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
 905  8E4D
 906  8E4D AF           	xor a
 907  8E4E 77           	ld (hl),a
 908  8E4F
 909  8E4F E5           	push hl
 910  8E50 D1           	pop de
 911  8E51 13           	inc de
 912  8E52
 913  8E52 01 23 00     	ld bc,35
 914  8E55 ED B0        	ldir
 915  8E57
 916  8E57 CD A7 90     	call Genera_datos_de_impresion_Amadeus
 917  8E5A
 918  8E5A              ;	Reinicia temporizaciones.
 919  8E5A
 920  8E5A CD 86 91     	call Inicia_Shield
 921  8E5D
 922  8E5D 3E 5A        	ld a,90
 923  8E5F 32 8F 8C     	ld (Shield),a
 924  8E62
 925  8E62 3E 64        	ld a,100
 926  8E64 32 79 8C     	ld (Temp_new_live),a
 927  8E67
 928  8E67              ; 	Restauramos el FLAG: Amadeus vivo.
 929  8E67
 930  8E67 21 65 8C     	ld hl,Ctrl_3
 931  8E6A CB B6        	res 6,(hl)
 932  8E6C
 933  8E6C              ;	Fuerza la impresión de la nave en el siguiente frame.
 934  8E6C
 935  8E6C 21 65 8C      	ld hl,Ctrl_3
 936  8E6F CB EE        	set 5,(hl)
 937  8E71
 938  8E71 C9           	ret
 939  8E72
 940  8E72              ; --------------------------------------------------------------------------------------------------------------
 941  8E72              ;
 942  8E72              ;	7/11/24
 943  8E72
 944  8E72              Ajusta_velocidad_entidad
 945  8E72
 946  8E72 3A F9 8B     	ld a,(Velocidad)
 947  8E75 A7           	and a
 948  8E76 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 949  8E77              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 950  8E77              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 951  8E77
 952  8E77
 953  8E77              ; Incrementa (Contador_de_vueltas)x2.
 954  8E77              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 955  8E77
 956  8E77              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 957  8E77              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 958  8E77              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 959  8E77              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 960  8E77              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 961  8E77
 962  8E77
 963  8E77 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 964  8E79 32 F9 8B     	ld (Velocidad),a
 965  8E7C E6 10        	and $10
 966  8E7E C8           	ret z
 967  8E7F
 968  8E7F              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 969  8E7F
 970  8E7F 3A F1 8B     	ld a,(Contador_de_vueltas)
 971  8E82 CB 2F        	sra a
 972  8E84 CB 2F        	sra a
 973  8E86 32 F9 8B     	ld (Velocidad),a
 974  8E89
 975  8E89 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 976  8E8C 23           	inc hl
 977  8E8D 23           	inc hl
 978  8E8E 23           	inc hl
 979  8E8F 23           	inc hl
 980  8E90 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 981  8E93
 982  8E93 C9           	ret
 983  8E94
 984  8E94              ; --------------------------------------------------------------------------------------------------------------
 985  8E94              ;
 986  8E94              ;	25/08/24
 987  8E94
 988  8E94              Change
 989  8E94
 990  8E94 3A 5C 8C     	ld a,(Switch)
 991  8E97 EE 01        	xor 1
 992  8E99 32 5C 8C     	ld (Switch),a
 993  8E9C 2A 41 8C     	ld hl,(Album_de_pintado)
 994  8E9F ED 5B 43 8C  	ld de,(Album_de_borrado)
 995  8EA3 EB           	ex de,hl
 996  8EA4 22 41 8C     	ld (Album_de_pintado),hl
 997  8EA7 22 5F 8C     	ld (Scanlines_album_SP),hl
 998  8EAA ED 53 43 8C  	ld (Album_de_borrado),de
 999  8EAE C9           	ret
1000  8EAF
1001  8EAF              Change_Amadeus
1002  8EAF
1003  8EAF 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1004  8EB2 ED 5B 47 8C  	ld de,(Album_de_borrado_Amadeus)
1005  8EB6 EB           	ex de,hl
1006  8EB7 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1007  8EBA ED 53 47 8C  	ld (Album_de_borrado_Amadeus),de
1008  8EBE C9           	ret
1009  8EBF
1010  8EBF              Change_Disparos
1011  8EBF
1012  8EBF              ; Álbumes de Amadeus.
1013  8EBF
1014  8EBF 2A 49 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1015  8EC2 ED 5B 4B 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1016  8EC6 EB           	ex de,hl
1017  8EC7 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1018  8ECA ED 53 4B 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1019  8ECE CD CB A1     	call Limpia_album_de_pintado_disparos_Amadeus
1020  8ED1
1021  8ED1              ; Álbumes de entidades.
1022  8ED1
1023  8ED1 2A 4D 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1024  8ED4 ED 5B 4F 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1025  8ED8 EB           	ex de,hl
1026  8ED9 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1027  8EDC ED 53 4F 8C  	ld (Album_de_borrado_disparos_Entidades),de
1028  8EE0 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1029  8EE3
1030  8EE3 3A 53 8C     	ld a,(Num_de_bytes_album_de_disparos)
1031  8EE6 32 54 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1032  8EE9
1033  8EE9 C9           	ret
1034  8EEA
1035  8EEA              ; ------------------------------------
1036  8EEA              ;
1037  8EEA              ; 1/05/24
1038  8EEA
1039  8EEA              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1040  8EEA              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1041  8EEA
1042  8EEA              ;	DESTRUYE: HL,DE,A
1043  8EEA              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1044  8EEA
1045  8EEA              ;	Variables implicadas: (RND_SP).
1046  8EEA
1047  8EEA              Extrae_numero_aleatorio_y_avanza
1048  8EEA
1049  8EEA 21 00 89     	ld hl,Tabla_de_pintado
1050  8EED EB           	ex de,hl
1051  8EEE 2A 7A 8C     	ld hl,(RND_SP)
1052  8EF1 EB           	ex de,hl
1053  8EF2 A7           	and a
1054  8EF3 ED 52        	sbc hl,de
1055  8EF5
1056  8EF5 2A 7A 8C     	ld hl,(RND_SP)
1057  8EF8 20 06        	jr nz,1F
1058  8EFA
1059  8EFA              ; Sitúa HL al principio de la tabla de nº aleatorios.
1060  8EFA
1061  8EFA 21 F6 88     	ld hl,Numeros_aleatorios
1062  8EFD 22 7A 8C     	ld (RND_SP),HL
1063  8F00
1064  8F00              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1065  8F00
1066  8F00 7E           1 ld a,(hl)
1067  8F01 23           	inc hl
1068  8F02 22 7A 8C     	ld (RND_SP),hl
1069  8F05 C9           	ret
1070  8F06
1071  8F06              ; ------------------------------------
1072  8F06              ;
1073  8F06              ; 1/05/24
1074  8F06
1075  8F06              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1076  8F06              ; (1 a 4 segundos).
1077  8F06              ; Actualizamos (Clock_next_entity) con A.
1078  8F06
1079  8F06              ;	DESTRUYE: A y B.
1080  8F06              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1081  8F06              ;			 Actualiza (Clock_next_entity) con A.
1082  8F06
1083  8F06              ;	Variables implicadas: (Clock_next_entity).
1084  8F06
1085  8F06              ; Notas:
1086  8F06
1087  8F06              ; 	$32 1 seg.
1088  8F06              ; 	$64 2 seg.
1089  8F06              ; 	$96 3 seg.
1090  8F06              ; 	$c8 4 seg.
1091  8F06              ; 	$fa 5 seg.
1092  8F06
1093  8F06              ; $ffff 1310,7 seg, 22 minutos.
1094  8F06
1095  8F06              ;	$0100  5 seg. aproximadamente.
1096  8F06              ;	$0200 10 seg. aproximadamente.
1097  8F06              ;	$0300 15 seg. aproximadamente.
1098  8F06              ;	$0400 20 seg. aproximadamente.
1099  8F06              ;	$0500 25 seg. aproximadamente.
1100  8F06              ;	$0600 30 seg. aproximadamente.
1101  8F06
1102  8F06              Define_Clock_next_entity
1103  8F06
1104  8F06 FE 34        	cp $34
1105  8F08 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1106  8F0A
1107  8F0A              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1108  8F0A
1109  8F0A 4F           3 ld c,a
1110  8F0B 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1111  8F0D 2A 78 5C     	ld hl,(FRAMES)
1112  8F10 A7           	and a
1113  8F11 ED 4A        	adc hl,bc
1114  8F13 22 7F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1115  8F16 C9           	ret
1116  8F17
1117  8F17 3E 34        1 ld a,$34
1118  8F19 18 EF        	jr 3B
1119  8F1B
1120  8F1B              ; ------------------------------------
1121  8F1B              ;
1122  8F1B              ; 18/03/24
1123  8F1B
1124  8F1B              Borra_diferencia
1125  8F1B
1126  8F1B ED 4B 5F 8C  	ld bc,(Scanlines_album_SP)
1127  8F1F
1128  8F1F 3A 5C 8C     	ld a,(Switch)
1129  8F22 A7           	and a
1130  8F23 28 08        	jr z,2F
1131  8F25
1132  8F25 2A 5A 8C     	ld hl,(Techo_Scanlines_album_2)
1133  8F28 11 5A 8C     	ld de,Techo_Scanlines_album_2
1134  8F2B 18 06        	jr 3F
1135  8F2D
1136  8F2D 2A 58 8C     2 ld hl,(Techo_Scanlines_album)
1137  8F30 11 58 8C     	ld de,Techo_Scanlines_album
1138  8F33
1139  8F33              ; Diferencia.
1140  8F33
1141  8F33 ED 42        3 sbc hl,bc
1142  8F35
1143  8F35 C8           	ret z
1144  8F36 D8           	ret c
1145  8F37
1146  8F37              ; Nuevo techo, (más bajo que el anterior).
1147  8F37              ; Fijamos nuevo techo y borramos bytes sobrantes.
1148  8F37
1149  8F37 EB           	ex de,hl
1150  8F38
1151  8F38 71           	ld (hl),c
1152  8F39 2C           	inc l
1153  8F3A 70           	ld (hl),b
1154  8F3B
1155  8F3B AF           	xor a
1156  8F3C 43           	ld b,e
1157  8F3D
1158  8F3D 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1159  8F40
1160  8F40 77           1 ld (hl),a
1161  8F41 23           	inc hl
1162  8F42 10 FC        	djnz 1B
1163  8F44
1164  8F44              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1165  8F44
1166  8F44 21 65 8C     	ld hl,Ctrl_3
1167  8F47 CB DE        	set 3,(hl)
1168  8F49
1169  8F49 C9           	ret
1170  8F4A
1171  8F4A              ; --------------------------------------------------------------------------------------------------------------
1172  8F4A              ;
1173  8F4A              ;	23/11/24
1174  8F4A              ;
1175  8F4A              ;	INPUT: IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
1176  8F4A
1177  8F4A              Entidad_a_Tabla_de_pintado
1178  8F4A
1179  8F4A              ; Almacena la Coordenada Y de la entidad en curso.
1180  8F4A
1181  8F4A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1182  8F4A
1183  8F4A DD 7E 02     	ld a,(ix+2)
1184  8F4D 2A 61 8C     	ld hl,(India_SP)
1185  8F50 77           	ld (hl),a
1186  8F51 2C           	inc l
1187  8F52
1188  8F52              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1189  8F52
1190  8F52 ED 5B 5F 8C  	ld de,(Scanlines_album_SP)
1191  8F56
1192  8F56 73           	ld (hl),e
1193  8F57 2C           	inc l
1194  8F58 72           	ld (hl),d
1195  8F59 2C           	inc l
1196  8F5A
1197  8F5A 22 61 8C     	ld (India_SP),hl
1198  8F5D
1199  8F5D C9           	ret
1200  8F5E
1201  8F5E              ; --------------------------------------------------------------------------------------------------------------
1202  8F5E              ;
1203  8F5E              ;	27/03/24
1204  8F5E              ;
1205  8F5E
1206  8F5E              Inicializa_India_y_limpia_Tabla_de_impresion
1207  8F5E
1208  8F5E 2A 61 8C     	ld hl,(India_SP)
1209  8F61 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1210  8F64
1211  8F64 79           	ld a,c
1212  8F65 95           	sub l
1213  8F66 28 06        	jr z,2F
1214  8F68 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1215  8F69              ;														; _ y pasamos a inicializar (India_SP).
1216  8F69 AF           	xor a
1217  8F6A
1218  8F6A 77           1 ld (hl),a
1219  8F6B 2C           	inc l
1220  8F6C 10 FC        	djnz 1B												; Limpia Tabla.
1221  8F6E
1222  8F6E 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1223  8F71 22 61 8C     	ld (India_SP),hl
1224  8F74
1225  8F74 C9           	ret
1226  8F75
1227  8F75              ; --------------------------------------------------------------------------------------------------------------
1228  8F75              ;
1229  8F75              ;	31/3/24
1230  8F75
1231  8F75              Ordena_tabla_de_impresion
1232  8F75
1233  8F75              ; 5794 T/states.
1234  8F75              ; 6278 T/states.
1235  8F75              ; 5310 T/states.
1236  8F75
1237  8F75              ; Inicializamos punteros (India_SP) e (India_2_SP).
1238  8F75              ; Inicializamos contador de comparaciones, [C].
1239  8F75              ; Cargamos los registros A y B para efectuar comparación.
1240  8F75
1241  8F75 FD 2E 00     	ld iyl,0
1242  8F78
1243  8F78 3A 38 8C     	ld a,(Entidades_en_curso)
1244  8F7B FE 04        	cp 4 	;	4
1245  8F7D D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1246  8F7E
1247  8F7E 3D           	dec a
1248  8F7F 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1249  8F80 51           	ld d,c 										; Copia de respaldo.
1250  8F81
1251  8F81 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1252  8F82
1253  8F82 21 03 89     	ld hl,Tabla_de_pintado+3
1254  8F85 46           	ld b,(hl)
1255  8F86 22 63 8C     	ld (India_2_SP),hl
1256  8F89
1257  8F89 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1258  8F8A DC B2 8F     	call c, Avanza_India_2_SP
1259  8F8D CC B2 8F     	call z, Avanza_India_2_SP
1260  8F90
1261  8F90 FD 2D        	dec iyl
1262  8F92 28 18        	jr z,2F
1263  8F94
1264  8F94
1265  8F94              ; --------------------------------------------------------------------------------------------------------------
1266  8F94              ;
1267  8F94              ;	7/4/24
1268  8F94
1269  8F94              Trueque
1270  8F94
1271  8F94              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1272  8F94              ;  			A contiene en nº de fila de (India_SP).
1273  8F94              ;			HL contiene (India_2_SP).
1274  8F94
1275  8F94 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1276  8F95 E5           	push hl										; Preservo (India_2_SP).
1277  8F96
1278  8F96 ED 5B 61 8C  	ld de,(India_SP)
1279  8F9A EB           	ex de,hl
1280  8F9B 70           	ld (hl),b
1281  8F9C 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1282  8F9D
1283  8F9D CD DE 8F     	call Intercambia_1_byte
1284  8FA0 CD DE 8F     	call Intercambia_1_byte
1285  8FA3
1286  8FA3
1287  8FA3              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1288  8FA3              ; Recuperamos (India_2_SP) en HL.
1289  8FA3
1290  8FA3 2A 61 8C     	ld hl,(India_SP)
1291  8FA6 7E           	ld a,(hl)
1292  8FA7
1293  8FA7 E1           	pop hl
1294  8FA8 D1           	pop de
1295  8FA9
1296  8FA9              ; --------------------------------------------------------------------------------------------------------------
1297  8FA9
1298  8FA9 CD B2 8F     	call Avanza_India_2_SP
1299  8FAC
1300  8FAC 14           2 inc d
1301  8FAD 15           	dec d
1302  8FAE C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1303  8FAF 18 D8        	jr 1B
1304  8FB1
1305  8FB1 C9           	ret
1306  8FB2
1307  8FB2              ; ----- ----- ----- ----- -----
1308  8FB2
1309  8FB2              Avanza_India_2_SP
1310  8FB2
1311  8FB2 0D           	dec c
1312  8FB3 28 0A        	jr z,Avanza_punteros_indios
1313  8FB5
1314  8FB5 FD 2C        	inc iyl
1315  8FB7
1316  8FB7 2C           	inc l
1317  8FB8 2C           	inc l
1318  8FB9 2C           	inc l
1319  8FBA
1320  8FBA 46           	ld b,(hl)
1321  8FBB 22 63 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1322  8FBE
1323  8FBE C9           	ret
1324  8FBF
1325  8FBF              ; ----- ----- ----- ----- -----
1326  8FBF
1327  8FBF              Avanza_punteros_indios
1328  8FBF
1329  8FBF 15           	dec d
1330  8FC0 28 15        	jr z,Prepara_salida
1331  8FC2
1332  8FC2 4A           	ld c,d
1333  8FC3
1334  8FC3 2A 61 8C     	ld hl,(India_SP)
1335  8FC6 2C           	inc l
1336  8FC7 2C           	inc l
1337  8FC8 2C           	inc l
1338  8FC9 7E           	ld a,(hl)
1339  8FCA 22 61 8C     	ld (India_SP),hl
1340  8FCD
1341  8FCD 2C           	inc l
1342  8FCE 2C           	inc l
1343  8FCF 2C           	inc l
1344  8FD0 46           	ld b,(hl)
1345  8FD1 22 63 8C     	ld (India_2_SP),hl
1346  8FD4
1347  8FD4 FD 2C        	inc iyl
1348  8FD6
1349  8FD6 C9           	ret
1350  8FD7
1351  8FD7              Prepara_salida
1352  8FD7
1353  8FD7 21 00 89     	ld hl,Tabla_de_pintado
1354  8FDA 22 61 8C     	ld (India_SP),hl
1355  8FDD C9           	ret
1356  8FDE
1357  8FDE
1358  8FDE 2C           Intercambia_1_byte inc l
1359  8FDF 1C           	inc e
1360  8FE0 46           	ld b,(hl)
1361  8FE1 1A           	ld a,(de)
1362  8FE2 EB           	ex de,hl
1363  8FE3 70           	ld (hl),b
1364  8FE4 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1365  8FE5 C9           	ret
1366  8FE6
1367  8FE6              ; -----------------------------------------------------------------------------------
1368  8FE6              ;
1369  8FE6              ;	20/01/24
1370  8FE6              ;
1371  8FE6              ;
1372  8FE6
1373  8FE6              Construye_movimientos_masticados_entidad
1374  8FE6
1375  8FE6 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1376  8FE9 E5           	push hl
1377  8FEA CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1378  8FED              ;															; _ el (Contador_de_mov_masticados).
1379  8FED CD 1E 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1380  8FF0              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1381  8FF0 CD F8 99     	call Recompone_posicion_inicio
1382  8FF3
1383  8FF3 CD 28 97     1 call Draw
1384  8FF6 CD 12 90     	call Guarda_movimiento_masticado
1385  8FF9
1386  8FF9 CD A5 9D     	call Movimiento
1387  8FFC
1388  8FFC 3A 65 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1389  8FFF CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1390  9001 28 F0        	jr z,1B
1391  9003
1392  9003              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1393  9003              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1394  9003
1395  9003 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1396  9004 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1397  9007
1398  9007              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1399  9007
1400  9007 CD 09 9F     	call Situa_en_contador_general_de_mov_masticados
1401  900A
1402  900A              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1403  900A              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1404  900A
1405  900A ED 4B F7 8B  	ld bc,(Contador_de_mov_masticados)
1406  900E
1407  900E 71           	ld (hl),c
1408  900F 23           	inc hl
1409  9010 70           	ld (hl),b
1410  9011
1411  9011 C9           	ret
1412  9012
1413  9012              ; -----------------------------------------------------------------------------------
1414  9012              ;
1415  9012              ;	28/12/23
1416  9012              ;
1417  9012              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1418  9012              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1419  9012
1420  9012              Guarda_movimiento_masticado
1421  9012
1422  9012 ED 73 3D 8C  	ld (Stack),sp
1423  9016 ED 7B F5 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1424  901A
1425  901A DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1426  901C FD E5            push iy 												; Pushea Puntero_objeto.
1427  901E
1428  901E ED 7B 3D 8C      ld sp,(Stack)
1429  9022
1430  9022 2A F7 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1431  9025 23           	inc hl
1432  9026 22 F7 8B     	ld (Contador_de_mov_masticados),hl
1433  9029
1434  9029 CD 2D 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1435  902C              ;															; _ el (Contador_de_mov_masticados).
1436  902C C9               ret
1437  902D
1438  902D              ; --------------------------------------------------------------------------------------------------------------
1439  902D              ;
1440  902D              ;	12/1/24
1441  902D              ;
1442  902D              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1443  902D
1444  902D              Actualiza_Puntero_de_almacen_de_mov_masticados
1445  902D
1446  902D 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1447  9030 01 04 00     	ld bc,4
1448  9033 A7           	and a
1449  9034 ED 4A        	adc hl,bc
1450  9036 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1451  9039 C9           	ret
1452  903A
1453  903A              ; ------------------------------------------
1454  903A              ;
1455  903A              ;	21/11/24
1456  903A              ;
1457  903A              ;	Almacena (Puntero_de_impresion) y actualiza (Puntero_de_almacen_de_mov_masticados).
1458  903A
1459  903A
1460  903A              Obtenemos_puntero_de_impresion
1461  903A
1462  903A DD 6E 07     	ld l,(ix+7)
1463  903D DD 66 08     	ld h,(ix+8)
1464  9040
1465  9040              ;	hl apunta al .defw (Puntero_de_almacen_de_mov_masticados).
1466  9040
1467  9040 ED 73 3D 8C  	ld (Stack),sp
1468  9044 F9           	ld sp,hl
1469  9045
1470  9045 AF           	xor a
1471  9046 67           	ld h,a
1472  9047 6C           	ld l,h															; ld hl,"0"
1473  9048
1474  9048 C1           	pop bc
1475  9049 C1           	pop bc
1476  904A
1477  904A              ; 	Almacena (Puntero_de_impresion).
1478  904A
1479  904A DD 71 05     	ld (ix+5),c
1480  904D DD 70 06     	ld (ix+6),b
1481  9050
1482  9050              ;	Actualiza (Puntero_de_almacen_de_mov_masticados).
1483  9050
1484  9050 39           	add hl,sp
1485  9051 DD 75 07     	ld (ix+7),l
1486  9054 DD 74 08     	ld (ix+8),h
1487  9057
1488  9057 C1           	pop bc
1489  9058
1490  9058 79           	ld a,c
1491  9059 80           	add b															; Comprueba si ya no hay datos en el almacén.
1492  905A
1493  905A CC 25 94     	call z,Reinicia_entidad_maliciosa
1494  905D
1495  905D ED 7B 3D 8C  	ld sp,(Stack)
1496  9061
1497  9061 C9           	ret
1498  9062
1499  9062              ; -----------------------------------------------------------------------------------
1500  9062
1501  9062              Cargamos_registros_con_mov_masticado
1502  9062
1503  9062              	; DE está situado en el .defw (Puntero_de_almacen_de_mov_masticados) de la entidad.											;
1504  9062
1505  9062 C1           	pop bc 															; BC contiene Puntero_objeto
1506  9063 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1507  9065
1508  9065 AF           	xor a
1509  9066 67           	ld h,a
1510  9067 6C           	ld l,h															; HL="0".
1511  9068
1512  9068 39           	add hl,sp
1513  9069
1514  9069 EB           	ex de,hl														; (Puntero_de_almacen_de_mov_masticados) actualizado en DE.
1515  906A              ;																	; HL está situado en el .defw (Puntero_de_almacen_de_mov_masticados) de la entidad.
1516  906A
1517  906A 73           	ld (hl),e
1518  906B 2C           	inc l
1519  906C 72           	ld (hl),d														; (Puntero_de_almacen_de_mov_masticados) actualizado en entidad.
1520  906D
1521  906D ED 7B 3D 8C  	ld sp,(Stack)
1522  9071
1523  9071 C5           	push bc
1524  9072 D1           	pop de															; (Puntero_objeto) en DE.
1525  9073
1526  9073 7B           	ld a,e
1527  9074 82           	add d															; Comprueba si ya no hay datos en el almacén.
1528  9075
1529  9075 CC 25 94     	call z,Reinicia_entidad_maliciosa
1530  9078
1531  9078 C9           	ret
1532  9079
1533  9079              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1534  9079              ;
1535  9079              ;	22/7/24
1536  9079
1537  9079              Cargamos_registros_con_explosion
1538  9079
1539  9079
1540  9079 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1541  907C CD 18 91     	call Extrae_address
1542  907F
1543  907F 5D           	ld e,l
1544  9080 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1545  9081
1546  9081 DD 2A F3 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1547  9085
1548  9085 C9           	ret
1549  9086
1550  9086
1551  9086              Cargamos_registros_con_explosion_Amadeus
1552  9086
1553  9086 2A BE 89     	ld hl,(Pamm_Amadeus)
1554  9089 CD 18 91     	call Extrae_address
1555  908C
1556  908C 5D           	ld e,l
1557  908D 54           	ld d,h
1558  908E
1559  908E DD 2A BC 89  	ld ix,(p.imp.amadeus)
1560  9092
1561  9092 C9           	ret
1562  9093
1563  9093              ; --------------------------------------------------------------------------------------------------------------
1564  9093              ;
1565  9093              ;	17/06/24
1566  9093              ;
1567  9093              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1568  9093              ;
1569  9093              ;	IX contiene el puntero de impresión.
1570  9093              ;	DE contiene (Puntero_objeto).
1571  9093
1572  9093
1573  9093              Cargamos_registros_con_mov_masticado_Amadeus
1574  9093
1575  9093 ED 73 3D 8C  	ld (Stack),sp
1576  9097 ED 7B BE 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1577  909B D1           	pop de 															; DE contiene Puntero_objeto
1578  909C DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1579  909E DD 22 BC 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1580  90A2 ED 7B 3D 8C  	ld sp,(Stack)
1581  90A6 C9           	ret
1582  90A7
1583  90A7              ; ---------------------------------------------------------------------------------------------------------------------
1584  90A7              ;
1585  90A7              ;	18/6/24
1586  90A7              ;
1587  90A7              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1588  90A7
1589  90A7              Genera_datos_de_impresion_Amadeus
1590  90A7
1591  90A7 3A BB 89     	ld a,(Impacto_Amadeus)
1592  90AA A7           	and a
1593  90AB 20 03        	jr nz,1F
1594  90AD
1595  90AD              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1596  90AD              ; _apuntando a la correspondiente explosión.
1597  90AD
1598  90AD CD 93 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1599  90B0
1600  90B0 DD 7D        1 ld a,ixl
1601  90B2 E6 1F        	and $1f
1602  90B4 32 B8 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1603  90B7
1604  90B7 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1605  90BA E5           	push hl
1606  90BB
1607  90BB 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1608  90BE 22 5F 8C     	ld (Scanlines_album_SP),hl
1609  90C1
1610  90C1 CD 0C 95     	call Genera_datos_de_impresion
1611  90C4
1612  90C4 E1           	pop hl
1613  90C5 22 5F 8C     	ld (Scanlines_album_SP),hl
1614  90C8
1615  90C8 C9           	ret
1616  90C9
1617  90C9              ; ---------------------------------------------------------------------------------------------------------------------
1618  90C9              ;
1619  90C9              ;	13/03/24
1620  90C9              ;
1621  90C9              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1622  90C9
1623  90C9              Inicia_albumes_de_lineas
1624  90C9
1625  90C9 21 00 80     	ld hl,Scanlines_album
1626  90CC 22 41 8C     	ld (Album_de_pintado),hl
1627  90CF 22 5F 8C     	ld (Scanlines_album_SP),hl
1628  90D2
1629  90D2 21 1A 81     	ld hl,Scanlines_album_2
1630  90D5 22 43 8C     	ld (Album_de_borrado),hl
1631  90D8
1632  90D8 C9           	ret
1633  90D9
1634  90D9              Inicia_albumes_de_lineas_Amadeus
1635  90D9
1636  90D9 21 34 82     	ld hl,Amadeus_scanlines_album
1637  90DC 22 45 8C     	ld (Album_de_pintado_Amadeus),hl
1638  90DF 21 58 82     	ld hl,Amadeus_scanlines_album_2
1639  90E2 22 47 8C     	ld (Album_de_borrado_Amadeus),hl
1640  90E5
1641  90E5 C9           	ret
1642  90E6
1643  90E6              Inicia_albumes_de_disparos
1644  90E6
1645  90E6 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1646  90E9 22 49 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1647  90EC 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1648  90EF 22 4B 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1649  90F2
1650  90F2 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1651  90F5 22 4D 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1652  90F8 22 51 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1653  90FB
1654  90FB 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1655  90FE 22 4F 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1656  9101
1657  9101 C9           	ret
1658  9102
1659  9102              ; ---------------------------------------------------------------------------------------------------------------------
1660  9102              ;
1661  9102              ; 8/1/23
1662  9102              ;
1663  9102              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1664  9102              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1665  9102              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1666  9102
1667  9102              ; Destruye HL y DE !!!!!
1668  9102
1669  9102              Inicia_punteros_de_cajas
1670  9102
1671  9102 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1672  9105 CD 18 91         call Extrae_address
1673  9108 22 2E 8C         ld (Puntero_store_caja),hl
1674  910B 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1675  910E 22 32 8C     	ld (Indice_restore_caja),hl
1676  9111 CD 18 91     	call Extrae_address
1677  9114 22 30 8C     	ld (Puntero_restore_caja),hl
1678  9117 C9               ret
1679  9118
1680  9118              ; *************************************************************************************************************************************************************
1681  9118
1682  9118              ;
1683  9118              ; 20/10/22
1684  9118              ;
1685  9118              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1686  9118              ;
1687  9118              ; Destruye el puntero y DE !!!!!
1688  9118
1689  9118 5E           Extrae_address ld e,(hl)
1690  9119 23           	inc hl
1691  911A 56           	ld d,(hl)
1692  911B 2B           	dec hl
1693  911C EB           	ex de,hl
1694  911D C9           	ret
1695  911E
1696  911E              ; *************************************************************************************************************************************************************
1697  911E              ;
1698  911E              ;	20/1/24
1699  911E              ;
1700  911E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1701  911E              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1702  911E              ;
1703  911E              ;   Destruye HL y BC !!!!!,
1704  911E              ;
1705  911E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1706  911E              ;					"0" ..... Izquierda.
1707  911E
1708  911E              Inicia_Puntero_objeto
1709  911E
1710  911E 3A 0D 8C     	ld a,(Cuad_objeto)
1711  9121 E6 01        	and 1
1712  9123 F5           	push af
1713  9124 CC 40 91     	call z,Inicia_puntero_objeto_izq
1714  9127 F1           	pop af
1715  9128 C8           	ret z
1716  9129 CD 2D 91     	call Inicia_puntero_objeto_der
1717  912C C9           	ret
1718  912D
1719  912D              ; Arrancamos desde la parte izquierda de la pantalla.
1720  912D              ; Iniciamos (Indice_Sprite_der).
1721  912D
1722  912D 2A 03 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1723  9130 22 07 8C     	ld (Puntero_DESPLZ_der),hl
1724  9133 CD 18 91     	call Extrae_address
1725  9136 22 00 8C     	ld (Puntero_objeto),hl
1726  9139
1727  9139 2A 05 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1728  913C 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1729  913F C9           	ret
1730  9140
1731  9140              ; Arrancamos desde la parte derecha de la pantalla.
1732  9140              ; Iniciamos (Indice_Sprite_izq).
1733  9140
1734  9140 2A 05 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1735  9143 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
1736  9146 CD 18 91     	call Extrae_address
1737  9149 22 00 8C     	ld (Puntero_objeto),hl
1738  914C
1739  914C 2A 03 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1740  914F 22 07 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1741  9152 C9           	ret
1742  9153
1743  9153              ; **************************************************************************************************
1744  9153              ;
1745  9153              ;	06/07/24
1746  9153              ;
1747  9153              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1748  9153
1749  9153              Restore_entidad
1750  9153
1751  9153 2A 2E 8C     	ld hl,(Puntero_store_caja)
1752  9156 7E           	ld a,(hl)
1753  9157 A7           	and a
1754  9158 CC 66 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1755  915B 28 F6        	jr z,Restore_entidad
1756  915D
1757  915D 11 EE 8B     	ld de,Bandeja_DRAW
1758  9160 01 0C 00     	ld bc,12
1759  9163 ED B0        	ldir
1760  9165 C9           	ret
1761  9166
1762  9166              ; **************************************************************************************************
1763  9166              ;
1764  9166              ;	08/05/23
1765  9166              ;
1766  9166              ;	Incrementamos los dos punteros de entidades. (+1).
1767  9166
1768  9166              Incrementa_punteros_de_cajas
1769  9166
1770  9166 2A 30 8C     	ld hl,(Puntero_restore_caja)
1771  9169 22 2E 8C     	ld (Puntero_store_caja),hl
1772  916C 2A 32 8C     	ld hl,(Indice_restore_caja)
1773  916F 23           	inc hl
1774  9170 23           	inc hl
1775  9171 22 32 8C     	ld (Indice_restore_caja),hl
1776  9174 CD 18 91         call Extrae_address
1777  9177 22 30 8C         ld (Puntero_restore_caja),hl
1778  917A C9               ret
1779  917B
1780  917B              ; -----------------------------------------------------------
1781  917B
1782  917B              ; Teclado.
1783  917B
1784  917B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1785  917D DB FE        	in a,($fe)
1786  917F E6 01        	and $01
1787  9181 28 02        	jr z,1f
1788  9183 18 F6        	jr Pulsa_ENTER
1789  9185 C9           1 ret
1790  9186
1791  9186              ; **************************************************************************************************
1792  9186              ;
1793  9186              ; Temporización.
1794  9186
1795  9186              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1796  9186              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1797  9186              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1798  9186              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1799  9186
1800  9186              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1801  9186              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1802  9186              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1803  9186
1804  9186              ; A partir de $4f61 no hace falta DELAY.
1805  9186
1806  9186              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1807  9186
1808  9186              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1809  9186              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1810  9186              ;	LD A,B
1811  9186              ;	AND A
1812  9186              ;	JR NZ,wait
1813  9186              ;	RET
1814  9186
1815  9186              ; ---------------------------------------------------------------------------------------------------------------
1816  9186              ;
1817  9186              ;	13/07/24
1818  9186              ;
1819  9186
1820  9186              Inicia_Shield
1821  9186
1822  9186 21 89 8C     	ld hl,Datos_Shield
1823  9189 22 8D 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1824  918C
1825  918C 7E           	ld a,(hl)
1826  918D 32 90 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1827  9190
1828  9190 3E 01        	ld a,1
1829  9192 32 91 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1830  9195
1831  9195 C9           	ret
1832  9196
1833  9196              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1834  9196              ;
1835  9196              ;	4/6/24
1836  9196              ;
1837  9196              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1838  9196              ;
1839  9196              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1840  9196              ;
1841  9196
1842  9196              Actualiza_pantalla
1843  9196
1844  9196 3E 02        	ld a,2
1845  9198 D3 FE        	out ($fe),a
1846  919A
1847  919A 3A 65 8C     	ld a,(Ctrl_3)
1848  919D CB 57        	bit 2,a
1849  919F 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1850  91A1
1851  91A1              Borrando_entidades
1852  91A1
1853  91A1 2A 5F 8C     	ld hl,(Scanlines_album_SP)
1854  91A4 CD 18 91     	call Extrae_address
1855  91A7 24           	inc h
1856  91A8 25           	dec h
1857  91A9 28 05        	jr z,Pintando_entidades
1858  91AB CD 05 96     	call Pinta_Sprites
1859  91AE 18 F1        	jr Borrando_entidades
1860  91B0
1861  91B0              Pintando_entidades
1862  91B0
1863  91B0 2A 61 8C     	ld hl,(India_SP)
1864  91B3 2C           	inc l
1865  91B4 CD 18 91     	call Extrae_address
1866  91B7 24           	inc h
1867  91B8 25           	dec h
1868  91B9 28 0E        	jr z,Ejecuta_escudo
1869  91BB 1C           	inc e
1870  91BC 1C           	inc e
1871  91BD ED 53 61 8C  	ld (India_SP),de
1872  91C1 CD 18 91     	call Extrae_address
1873  91C4 CD 05 96     	call Pinta_Sprites
1874  91C7 18 E7        	jr Pintando_entidades
1875  91C9
1876  91C9              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1877  91C9
1878  91C9              Ejecuta_escudo
1879  91C9
1880  91C9 3A 8F 8C     	ld a,(Shield)
1881  91CC A7           	and a
1882  91CD 20 2F        	jr nz,Aplica_Shield
1883  91CF
1884  91CF              Borrando_Amadeus
1885  91CF
1886  91CF 21 65 8C     	ld hl,Ctrl_3
1887  91D2 CB 6E        	bit 5,(hl)
1888  91D4 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1889  91D6
1890  91D6 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1891  91D9 CD 18 91     	call Extrae_address
1892  91DC 24           	inc h
1893  91DD 25           	dec h
1894  91DE 28 03        	jr z,Pintando_Amadeus
1895  91E0 CD 05 96     	call Pinta_Sprites
1896  91E3
1897  91E3              Pintando_Amadeus
1898  91E3
1899  91E3 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1900  91E6 CD 18 91     	call Extrae_address
1901  91E9 24           	inc h
1902  91EA 25           	dec h
1903  91EB 28 03        	jr z,1F
1904  91ED CD 05 96     	call Pinta_Sprites
1905  91F0
1906  91F0              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1907  91F0
1908  91F0 21 65 8C     1 ld hl,Ctrl_3
1909  91F3 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1910  91F5 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1911  91F7 CB AE        	res 5,(hl)
1912  91F9
1913  91F9 3E 01        	ld a,1												; Borde azul.
1914  91FB D3 FE        	out ($fe),a
1915  91FD
1916  91FD C9           	ret
1917  91FE
1918  91FE              Aplica_Shield
1919  91FE
1920  91FE              ;	Bit 1 "1" (Shield_3) Sólo borra.
1921  91FE              ;		  "0"     ""     Borra/Pinta.
1922  91FE              ;	Bit 2    ""  RET.	 No borra, no pinta.
1923  91FE
1924  91FE 21 91 8C     	ld hl,Shield_3
1925  9201
1926  9201 CB 5E        	bit 3,(hl)
1927  9203 20 DE        	jr nz,Pintando_Amadeus
1928  9205
1929  9205 CB 56        	bit 2,(hl)
1930  9207 20 E7        	jr nz,1B
1931  9209
1932  9209 CB 4E        	bit 1,(hl)
1933  920B C4 12 92     	call nz,Borra_Amadeus_shield
1934  920E
1935  920E 28 BF        	jr z,Borrando_Amadeus
1936  9210 18 DE        	jr 1B
1937  9212
1938  9212              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1939  9212
1940  9212              Borra_Amadeus_shield
1941  9212
1942  9212 3A 65 8C     	ld a,(Ctrl_3)
1943  9215 CB 6F        	bit 5,a
1944  9217 28 08        	jr z,1F
1945  9219
1946  9219 2A 47 8C     	ld hl,(Album_de_borrado_Amadeus)
1947  921C CD 18 91     	call Extrae_address
1948  921F 18 06        	jr 2F
1949  9221
1950  9221 2A 45 8C     1 ld hl,(Album_de_pintado_Amadeus)
1951  9224 CD 18 91     	call Extrae_address
1952  9227
1953  9227 CD 05 96     2 call Pinta_Sprites
1954  922A
1955  922A AF           	xor a
1956  922B 3C           	inc a											; Asegura NZ en la salida de la rutina.
1957  922C
1958  922C C9           	ret
1959  922D
1960  922D              Pinta_Amadeus_shield
1961  922D
1962  922D 2A 45 8C     	ld hl,(Album_de_pintado_Amadeus)
1963  9230 CD 18 91     	call Extrae_address
1964  9233 CD 05 96     	call Pinta_Sprites
1965  9236
1966  9236 AF           	xor a
1967  9237 3C           	inc a											; Asegura NZ en la salida de la rutina.
1968  9238
1969  9238 C9           	ret
1970  9239
1971  9239              Borra_Pinta_Amadeus_shield
1972  9239
1973  9239 CD 12 92     	call Borra_Amadeus_shield
1974  923C CD 2D 92     	call Pinta_Amadeus_shield
1975  923F C9           	ret
1976  9240
1977  9240              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1978  9240              ;
1979  9240              ;	19/6/24
1980  9240              ;
1981  9240
1982  9240              Teclado
1983  9240
1984  9240              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1985  9240
1986  9240 3E F7        	ld a,$f7												; "5" para disparar.
1987  9242 DB FE        	in a,($fe)
1988  9244 E6 10        	and $10
1989  9246
1990  9246 CC 9F A2     	call z,Genera_disparo_Amadeus
1991  9249
1992  9249 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1993  924B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1994  924D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1995  924F CC 72 9D         call z,Amadeus_a_izquierda
1996  9252
1997  9252 3E F7        	ld a,$f7
1998  9254 DB FE        	in a,($fe)
1999  9256 E6 01        	and $01
2000  9258 C8           	ret z
2001  9259
2002  9259 3E F7        	ld a,$f7
2003  925B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2004  925D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2005  925F CC 8A 9D     	call z,Amadeus_a_derecha
2006  9262
2007  9262 C9           	ret
2008  9263
2009  9263              ; ------------------------------------------------------------------------------------------------------------------------
2010  9263              ;
2011  9263              ;	06/07/24
2012  9263              ;
2013  9263
2014  9263              Genera_explosion
2015  9263
2016  9263 21 77 8C     	ld hl,Clock_explosion
2017  9266 35           	dec (hl)
2018  9267 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2019  9269
2020  9269              Borra_entidad_colisionada
2021  9269
2022  9269 CD 4A 8F     	call Entidad_a_Tabla_de_pintado					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2023  926C CD 79 90     	call Cargamos_registros_con_explosion
2024  926F CD 0C 95     	call Genera_datos_de_impresion
2025  9272
2026  9272 AF           	xor a
2027  9273 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2028  9274
2029  9274 C9           	ret
2030  9275
2031  9275              Siguiente_frame_explosion
2032  9275
2033  9275 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2034  9277
2035  9277              ; Avanza Frame de explosión.
2036  9277
2037  9277 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2038  927A 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2039  927D
2040  927D 79           	ld a,c
2041  927E 95           	sub l
2042  927F 20 0B        	jr nz,1F
2043  9281
2044  9281              ; Fín de la entidad !!!!!!!!!!!!!
2045  9281
2046  9281 21 37 8C     	ld hl,Numero_parcial_de_entidades
2047  9284 35           	dec (hl)
2048  9285 23           	inc hl
2049  9286 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2050  9287
2051  9287 CD FA 93     	call Limpiamos_bandeja_DRAW
2052  928A 18 DD        	jr Borra_entidad_colisionada
2053  928C
2054  928C 23           1 inc hl
2055  928D 23           	inc hl
2056  928E 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2057  9291 18 D6        	jr Borra_entidad_colisionada
2058  9293
2059  9293              ; ----- ----- ----- ----- -----
2060  9293
2061  9293              Genera_explosion_Amadeus
2062  9293
2063  9293 21 78 8C     	ld hl,Clock_explosion_Amadeus
2064  9296 35           	dec (hl)
2065  9297 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2066  9299
2067  9299              Borra_Amadeus_impactado
2068  9299
2069  9299 CD AF 8E     	call Change_Amadeus
2070  929C CD 86 90     	call Cargamos_registros_con_explosion_Amadeus
2071  929F CD A7 90     	call Genera_datos_de_impresion_Amadeus
2072  92A2
2073  92A2 21 65 8C     	ld hl,Ctrl_3
2074  92A5 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2075  92A7
2076  92A7 AF           	xor a
2077  92A8 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2078  92A9
2079  92A9 C9           	ret
2080  92AA
2081  92AA              Siguiente_frame_explosion_Amadeus
2082  92AA
2083  92AA 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2084  92AC
2085  92AC              ; Avanza Frame de explosión.
2086  92AC
2087  92AC 2A BE 89     	ld hl,(Pamm_Amadeus)
2088  92AF 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2089  92B2
2090  92B2 79           	ld a,c
2091  92B3 95           	sub l
2092  92B4 20 0B        	jr nz,1F
2093  92B6
2094  92B6              ; Fín de Amadeus !!!!!!!!!!!!!
2095  92B6              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2096  92B6
2097  92B6 AF           	xor a
2098  92B7 32 BB 89     	ld (Impacto_Amadeus),a
2099  92BA 21 65 8C     	ld hl,Ctrl_3
2100  92BD CB F6        	set 6,(hl)
2101  92BF
2102  92BF 18 D8        	jr Borra_Amadeus_impactado
2103  92C1
2104  92C1 23           1 inc hl
2105  92C2 23           	inc hl
2106  92C3 22 BE 89     	ld (Pamm_Amadeus),hl
2107  92C6 18 D1        	jr Borra_Amadeus_impactado
2108  92C8
2109  92C8              ; ---------------------------------------------------------------
2110  92C8
2111  92C8              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92C8              ; ******************************************************************************************************************************************************************************************
   2+ 92C8              ;
   3+ 92C8              ;   21/04/24
   4+ 92C8              ;
   5+ 92C8              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92C8              ;   (XOR) bit a bit.
   7+ 92C8              ;
   8+ 92C8              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92C8
  10+ 92C8              Derivando_RND
  11+ 92C8
  12+ 92C8 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92CB
  14+ 92CB ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92CD C5               push bc
  16+ 92CE              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92CE 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92D1              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92D1
  20+ 92D1 A7           6 and a                                 ; Carry a "0".
  21+ 92D2 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92D4 30 02            jr nc,1F
  23+ 92D6
  24+ 92D6 CB C1            set 0,c
  25+ 92D8
  26+ 92D8 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92D9 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92DB 5F               ld e,a
  29+ 92DC
  30+ 92DC 7A               ld a,d
  31+ 92DD E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92DF 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92E1
  34+ 92E1 CB 3F            srl a
  35+ 92E3
  36+ 92E3 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92E4
  38+ 92E4 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92E5 28 04            jr z,4F
  40+ 92E7
  41+ 92E7 CB FF            set 7,a
  42+ 92E9 18 02            jr 5F
  43+ 92EB
  44+ 92EB CB BF        4 res 7,a
  45+ 92ED
  46+ 92ED CB 21        5 sla c
  47+ 92EF 10 E0            djnz 6B
  48+ 92F1
  49+ 92F1 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92F2
  51+ 92F2 77               ld (hl),a
  52+ 92F3 23               inc hl
  53+ 92F4 C1               pop bc
  54+ 92F5 10 D4            djnz 3B
  55+ 92F7
  56+ 92F7 C9               ret
  57+ 92F8
  58+ 92F8
  59+ 92F8
# file closed: RND_Derivando.asm
2112  92F8              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92F8              ;---------------------------------------------------------------------------------------------------------------
   2+ 92F8              ;
   3+ 92F8              ;   13/11/24
   4+ 92F8
   5+ 92F8              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92F8
   7+ 92F8              Genera_movimientos_masticados_del_nivel
   8+ 92F8
   9+ 92F8              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  10+ 92F8
  11+ 92F8              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  12+ 92F8              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  13+ 92F8              ;	HL contiene (Datos_de_nivel), apunta al .db, (tipo) de la 1ª entidad del Nivel.
  14+ 92F8
  15+ 92F8 2D           	dec l
  16+ 92F9 46           	ld b,(hl)													; B contiene (Numero_de_entidades).
  17+ 92FA 2C           	inc l														; C contiene (Tipo) de la 1ª entidad del nivel.
  18+ 92FB 4E           	ld c,(hl)
  19+ 92FC
  20+ 92FC E5           1 push hl														; Push (Datos_de_nivel).
  21+ 92FD C5           	push bc														; Push (Numero_de_entidades)/(Tipo).
  22+ 92FE
  23+ 92FE              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  24+ 92FE
  25+ 92FE 79           	ld a,c														; (Tipo) de la entidad en A.
  26+ 92FF
  27+ 92FF CD 3D 93     	call Situa_en_Caja_Master									; Situa HL en el 1er .db de la "Caja Master" que corresponde a este (Tipo) de entidad.
  28+ 9302
  29+ 9302              ;	Caja Master inicializada ???
  30+ 9302
  31+ 9302 7E           	ld a,(hl)
  32+ 9303 A7           	and a
  33+ 9304 20 1D        	jr nz,Movimientos_masticados_construidos
  34+ 9306
  35+ 9306              ;	Construimos movimientos masticados de este (Tipo) de entidad.
  36+ 9306
  37+ 9306 C1           	pop bc
  38+ 9307 79           	ld a,c														; (Tipo) de la entidad en A.
  39+ 9308 C5           	push bc
  40+ 9309
  41+ 9309 CD E5 93     	call Definicion_segun_tipo									; HL apunta al 1er .db que define la entidad.
  42+ 930C CD 6E 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  43+ 930F
  44+ 930F 3A EE 8B     	ld a,(Tipo)
  45+ 9312 CD 4D 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  46+ 9315
  47+ 9315              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  48+ 9315
  49+ 9315              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  50+ 9315              ;	ld a,(hl)
  51+ 9315              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  52+ 9315
  53+ 9315              ;	ld hl,Posicion_inicio
  54+ 9315              ;	ld (hl),a
  55+ 9315
  56+ 9315              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  57+ 9315              ;	Generamos "Movimientos masticados" de la entidad.
  58+ 9315
  59+ 9315 CD E6 8F     	call Construye_movimientos_masticados_entidad
  60+ 9318
  61+ 9318 2A 34 8C     	ld hl,(Puntero_indice_master)
  62+ 931B CD 18 91     	call Extrae_address
  63+ 931E
  64+ 931E 5D           	ld e,l
  65+ 931F 54           	ld d,h
  66+ 9320
  67+ 9320 CD 9B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  68+ 9323
  69+ 9323              Movimientos_masticados_construidos
  70+ 9323
  71+ 9323 C1           	pop bc														; Pop (Numero_de_entidades)/(Tipo).
  72+ 9324
  73+ 9324 E1           	pop hl														; Pop (Datos_de_nivel).
  74+ 9325 2C           	inc l														; Datos_de_nivel +1 en HL.
  75+ 9326
  76+ 9326 4E           	ld c,(hl)													; (Tipo) de la siguiente entidad en C.
  77+ 9327 10 D3        	djnz 1B														; dec (Numero_de_entidades).
  78+ 9329
  79+ 9329 C9           	ret
  80+ 932A
  81+ 932A              ;---------------------------------------------------------------------------------------------------------------
  82+ 932A              ;
  83+ 932A              ;   9/11/24
  84+ 932A              ;
  85+ 932A              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  86+ 932A              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  87+ 932A              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  88+ 932A              ;	_ de la 1ª entidad del Nivel.
  89+ 932A              ;
  90+ 932A              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  91+ 932A
  92+ 932A              ;	MODIFICA: HL,DE y A.
  93+ 932A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  94+ 932A
  95+ 932A              Inicializa_1er_Nivel
  96+ 932A
  97+ 932A              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
  98+ 932A
  99+ 932A 21 D2 8B     	ld hl,Indice_de_niveles
 100+ 932D CD 18 91     	call Extrae_address
 101+ 9330 ED 53 85 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 102+ 9334
 103+ 9334 7E           	ld a,(hl)
 104+ 9335 32 36 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 105+ 9338
 106+ 9338 2C           	inc l
 107+ 9339 22 87 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 108+ 933C
 109+ 933C C9           	ret
 110+ 933D
 111+ 933D              ; ----------------------
 112+ 933D              ;
 113+ 933D              ;	13/11/24
 114+ 933D              ;
 115+ 933D
 116+ 933D              Situa_en_Caja_Master
 117+ 933D
 118+ 933D CD 59 94         call Calcula_salto_en_BC
 119+ 9340 21 61 89         ld hl,Indice_de_cajas_master
 120+ 9343 A7               and a
 121+ 9344 ED 4A            adc hl,bc
 122+ 9346 22 34 8C       	ld (Puntero_indice_master),hl
 123+ 9349 CD 18 91     	call Extrae_address
 124+ 934C C9           	ret
 125+ 934D
 126+ 934D              ; ----------------------
 127+ 934D
 128+ 934D              ; Fija_velocidades ld de,Perfiles_de_velocidad
 129+ 934D              ; 	ld bc,4
 130+ 934D              ; 	ldir
 131+ 934D              ; 	ret
 132+ 934D
 133+ 934D 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 134+ 934E CD 59 94         call Calcula_salto_en_BC
 135+ 9351 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 136+ 9354 A7               and a
 137+ 9355 ED 4A            adc hl,bc
 138+ 9357 CD 18 91         call Extrae_address
 139+ 935A 22 1F 8C         ld (Puntero_indice_mov),hl
 140+ 935D C9               ret
 141+ 935E
 142+ 935E              ;---------------------------------------------------------------------------------------------------------------
 143+ 935E              ;
 144+ 935E              ;   13/11/24
 145+ 935E              ;
 146+ 935E              ;	Esta rutina se encarga de prepara todas las cajas de entidades. Cuando comienza un nivel han de estar todas completas.
 147+ 935E
 148+ 935E
 149+ 935E              Prepara_Cajas_de_Entidades
 150+ 935E
 151+ 935E              ; Preparamos los punteros de las cajas de entidades:
 152+ 935E
 153+ 935E CD 02 91     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 154+ 9361              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 155+ 9361 CD A4 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 156+ 9364
 157+ 9364 2A 87 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 158+ 9367
 159+ 9367              ; En este punto:
 160+ 9367              ;
 161+ 9367              ; HL está situado en el 1er .db del Nivel que indica el `tipo´ de entidad a volcar en la 1ª caja de entidades.
 162+ 9367              ; B contiene (Numero_parcial_de_entidades).
 163+ 9367
 164+ 9367 C5           1 push bc 														; Push (Numero_parcial_de_entidades).
 165+ 9368
 166+ 9368 7E           	ld a,(hl)
 167+ 9369
 168+ 9369 CD 3D 93     	call Situa_en_Caja_Master									; HL apunta al 1er .db, (Tipo) de la "Caja Master" correspondiente al (Tipo) de entidad.
 169+ 936C
 170+ 936C ED 5B 2E 8C  	ld de,(Puntero_store_caja)									; DE apunta al 1er .db de la "Caja de entidades" en curso.
 171+ 9370
 172+ 9370 D5           	push de
 173+ 9371 DD E1        	pop ix 														;! A partir de ahora IX apunta al 1er .db (Tipo) de la entidad, (caja de entidades correspondiente).
 174+ 9373
 175+ 9373 01 0C 00     	ld bc,12
 176+ 9376 ED B0        	ldir														; Caja de entidades completa. HL apuntará ahora al 1er .db de la siguiente caja "Master".
 177+ 9378              ;																; DE apunta ahora al 1er .db de la siguiente caja de entidades.
 178+ 9378
 179+ 9378              ; En este punto debemos generar coordenadas y puntero de impresión.:
 180+ 9378              ;
 181+ 9378              ;
 182+ 9378              ; ------------------------------------------------------ IX
 183+ 9378              ; ------------------------------------------------------ IX
 184+ 9378              ; ------------------------------------------------------ IX
 185+ 9378              ; ------------------------------------------------------ IX
 186+ 9378
 187+ 9378 CD 3A 90     	call Obtenemos_puntero_de_impresion
 188+ 937B
 189+ 937B DD 6E 05     	ld l,(ix+5)
 190+ 937E 2C           	inc l
 191+ 937F DD 66 06     	ld h,(ix+6)													; (Puntero_de_impresion) en HL.
 192+ 9382
 193+ 9382 CD E0 94     	call Genera_coordenadas
 194+ 9385
 195+ 9385 ED 4B EF 8B  	ld bc,(Coordenada_X)
 196+ 9389
 197+ 9389 DD 71 01     	ld (ix+1),c
 198+ 938C DD 70 02     	ld (ix+2),b													; (Coordenada_X) y (Coordenada_Y) en caja de entidad.
 199+ 938F
 200+ 938F              ; ------------------------------------------------------
 201+ 938F              ; ------------------------------------------------------
 202+ 938F              ; ------------------------------------------------------
 203+ 938F              ; ------------------------------------------------------
 204+ 938F
 205+ 938F CD 4A 8F     	call Entidad_a_Tabla_de_pintado								; Almacena la (Coordenada_Y) y dirección dentro de (Scanlines_album_SP) de la entidad en curso.
 206+ 9392
 207+ 9392 18 FE        	jr $
 208+ 9394
 209+ 9394 CD 0C 95     	call Genera_datos_de_impresion
 210+ 9397              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 211+ 9397              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 212+ 9397              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 213+ 9397              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 214+ 9397
 215+ 9397 CD 1D 94     	call Decrementa_Contador_de_mov_masticados
 216+ 939A
 217+ 939A              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 218+ 939A
 219+ 939A ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 220+ 939E CD 9B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 221+ 93A1
 222+ 93A1 CD FA 93     	call Limpiamos_bandeja_DRAW
 223+ 93A4 CD 66 91     	call Incrementa_punteros_de_cajas
 224+ 93A7
 225+ 93A7              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 226+ 93A7              ; _ entidad del Nivel.
 227+ 93A7
 228+ 93A7 3A 66 8C     	ld a,(Ctrl_4)
 229+ 93AA E6 F0        	and $f0
 230+ 93AC 32 66 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 231+ 93AF
 232+ 93AF              ; Siguiente entidad del Nivel.
 233+ 93AF
 234+ 93AF 2A 87 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 235+ 93B2 23           	inc hl 														; _ entidad del Nivel.
 236+ 93B3
 237+ 93B3 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 238+ 93B4
 239+ 93B4 10 B1        	djnz 1B
 240+ 93B6
 241+ 93B6 C9           	ret
 242+ 93B7
 243+ 93B7              ; -------------------------------------------------------------------------------------------------------------------
 244+ 93B7              ;
 245+ 93B7              ;	27/5/24
 246+ 93B7              ;
 247+ 93B7              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 248+ 93B7              ;
 249+ 93B7
 250+ 93B7              ; 	Cargamos la definición de Amadeus en DRAW.
 251+ 93B7              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 252+ 93B7
 253+ 93B7 21 29 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 254+ 93BA CD 6E 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 255+ 93BD
 256+ 93BD
 257+ 93BD              Construye_movimientos_masticados_Amadeus
 258+ 93BD
 259+ 93BD 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 260+ 93C0 CD 2D 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 261+ 93C3              ;															; _ el (Contador_de_mov_masticados).
 262+ 93C3 CD 1E 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 263+ 93C6              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 264+ 93C6
 265+ 93C6              ; Generamos movimientos masticados de Amadeus.
 266+ 93C6
 267+ 93C6 06 79        	ld b,121												; $0079, 121d.
 268+ 93C8
 269+ 93C8 C5           1 push bc
 270+ 93C9 CD 28 97     	call Draw
 271+ 93CC CD 12 90     	call Guarda_movimiento_masticado
 272+ 93CF
 273+ 93CF CD 9C 9A     	call Mov_right
 274+ 93D2 CD 9C 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 275+ 93D5
 276+ 93D5 C1           	pop bc
 277+ 93D6 10 F0        	djnz 1B
 278+ 93D8
 279+ 93D8              ; Todos los movimientos masticados de Amadeus se han creado.
 280+ 93D8
 281+ 93D8              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 282+ 93D8              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 283+ 93D8
 284+ 93D8 2A F5 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 285+ 93DB 01 08 00     	ld bc,8
 286+ 93DE A7           	and a
 287+ 93DF ED 42        	sbc hl,bc
 288+ 93E1 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 289+ 93E4
 290+ 93E4 C9           	ret
 291+ 93E5
 292+ 93E5              ; ---------------------------------------------------------------------
 293+ 93E5              ;
 294+ 93E5              ;	10/02/24
 295+ 93E5              ;
 296+ 93E5              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 297+ 93E5              ;
 298+ 93E5              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 299+ 93E5
 300+ 93E5              Definicion_segun_tipo
 301+ 93E5
 302+ 93E5 CD 59 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 303+ 93E8 21 0B 8A     	ld hl,Indice_de_definiciones_de_entidades
 304+ 93EB CD 64 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 305+ 93EE C9           	ret
 306+ 93EF
 307+ 93EF              ; ---------------------------------------------------------------------
 308+ 93EF              ;
 309+ 93EF              ;	6/7/24
 310+ 93EF
 311+ 93EF
 312+ 93EF              Store_Restore_cajas
 313+ 93EF
 314+ 93EF ED 5B 2E 8C  	ld de,(Puntero_store_caja)
 315+ 93F3 CD 9B 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 316+ 93F6 CD 66 91     	call Incrementa_punteros_de_cajas
 317+ 93F9 C9           	ret
 318+ 93FA
 319+ 93FA              ; ---------------------------------------------------------------------
 320+ 93FA              ;
 321+ 93FA              ;	23/6/24
 322+ 93FA              ;
 323+ 93FA              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 324+ 93FA              ;
 325+ 93FA              ;	MODIFY: HL
 326+ 93FA
 327+ 93FA              Limpiamos_bandeja_DRAW
 328+ 93FA
 329+ 93FA ED 73 3D 8C  	ld (Stack),sp
 330+ 93FE 31 13 8C     	ld sp,Vel_left
 331+ 9401
 332+ 9401 AF           	xor a
 333+ 9402 67           	ld h,a
 334+ 9403 6F           	ld l,a
 335+ 9404
 336+ 9404 E5           	push hl
 337+ 9405 E5           	push hl
 338+ 9406 E5           	push hl
 339+ 9407 E5           	push hl
 340+ 9408 E5           	push hl
 341+ 9409 E5           	push hl
 342+ 940A E5           	push hl
 343+ 940B E5           	push hl
 344+ 940C E5           	push hl
 345+ 940D E5           	push hl
 346+ 940E E5           	push hl
 347+ 940F E5           	push hl
 348+ 9410 E5           	push hl
 349+ 9411 E5           	push hl
 350+ 9412 E5           	push hl
 351+ 9413 E5           	push hl
 352+ 9414 E5           	push hl
 353+ 9415 E5           	push hl
 354+ 9416
 355+ 9416 33           	inc sp
 356+ 9417
 357+ 9417 E5           	push hl
 358+ 9418 ED 7B 3D 8C  	ld sp,(Stack)
 359+ 941C
 360+ 941C C9           	ret
 361+ 941D
 362+ 941D              ; ---------------------------------------------------------------------
 363+ 941D              ;
 364+ 941D              ;	24/03/24
 365+ 941D
 366+ 941D 2A F7 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 367+ 9420 2B           	dec hl
 368+ 9421 22 F7 8B     	ld (Contador_de_mov_masticados),hl
 369+ 9424 C9           	ret
 370+ 9425
 371+ 9425              ; ---------------------------------------------------------------------
 372+ 9425              ;
 373+ 9425              ;	7/11/24
 374+ 9425
 375+ 9425              Reinicia_entidad_maliciosa
 376+ 9425
 377+ 9425              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 378+ 9425
 379+ 9425 CD 09 9F     	call Situa_en_contador_general_de_mov_masticados
 380+ 9428 CD 16 9F     	call Transfiere_datos_de_contadores
 381+ 942B
 382+ 942B              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 383+ 942B
 384+ 942B 3A EE 8B     	ld a,(Tipo)
 385+ 942E CD E5 93     	call Definicion_segun_tipo
 386+ 9431
 387+ 9431 E5           	push hl
 388+ 9432 DD E1        	pop ix
 389+ 9434
 390+ 9434 DD 6E 0B     	ld l,(ix+11)
 391+ 9437 DD 66 0C     	ld h,(ix+12)
 392+ 943A
 393+ 943A 22 F5 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 394+ 943D
 395+ 943D CD 62 90     	call Cargamos_registros_con_mov_masticado
 396+ 9440
 397+ 9440              ; Incrementa (Contador_de_vueltas)x2.
 398+ 9440              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 399+ 9440
 400+ 9440              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 401+ 9440              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 402+ 9440              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 403+ 9440              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 404+ 9440              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 405+ 9440
 406+ 9440 21 F1 8B     	ld hl,Contador_de_vueltas
 407+ 9443 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 408+ 9445
 409+ 9445 7E           	ld a,(hl)
 410+ 9446 CB 2F        	sra a
 411+ 9448 CB 2F        	sra a
 412+ 944A
 413+ 944A 32 F9 8B     	ld (Velocidad),a
 414+ 944D
 415+ 944D 3E 40        	ld a,$40
 416+ 944F BE           	cp (hl)
 417+ 9450 C0           	ret nz
 418+ 9451
 419+ 9451              ; Límitador.
 420+ 9451
 421+ 9451              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 422+ 9451
 423+ 9451 CB 2E        	sra (hl)
 424+ 9453 21 F9 8B     	ld hl,Velocidad
 425+ 9456 CB 2E        	sra (hl)
 426+ 9458
 427+ 9458 C9           	ret
 428+ 9459
 429+ 9459              ;	------------------------------------------------------------------------------------
 430+ 9459              ;
 431+ 9459              ;	09/11/24
 432+ 9459              ;
 433+ 9459              ;	INPUTS:	A contiene el (Tipo) de entidad.
 434+ 9459              ;
 435+ 9459              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 436+ 9459              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 437+ 9459
 438+ 9459 A7           Calcula_salto_en_BC and a
 439+ 945A 28 04        	jr z,1F
 440+ 945C CB 27        	sla a
 441+ 945E D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 442+ 9460 4F           1 ld c,a
 443+ 9461 06 00        	ld b,0
 444+ 9463 C9           	ret
 445+ 9464
 446+ 9464              ; ------------------------------------------------------------------
 447+ 9464              ;
 448+ 9464              ;	19/1/24
 449+ 9464              ;
 450+ 9464              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 451+ 9464              ;	Actualiza (Datos_de_entidad) con esa dirección.
 452+ 9464
 453+ 9464 A7           Situa_en_datos_de_definicion and a
 454+ 9465 ED 4A        	adc hl,bc
 455+ 9467 CD 18 91     	call Extrae_address
 456+ 946A 22 3B 8C         ld (Datos_de_entidad),hl
 457+ 946D C9           	ret
 458+ 946E
 459+ 946E              ; ------------------------------------------------------------------
 460+ 946E
 461+ 946E              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 462+ 946E              ; 	inc de
 463+ 946E              ; 	inc de
 464+ 946E              ; 	ex de,hl
 465+ 946E              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 466+ 946E              ; 	ret
 467+ 946E
 468+ 946E              ; ----------------------------------------------------------------------------------------------------------
 469+ 946E              ;
 470+ 946E              ;	24/6/24
 471+ 946E              ;
 472+ 946E              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 473+ 946E              ;	_ de entidad.
 474+ 946E              ;
 475+ 946E              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 476+ 946E              ;
 477+ 946E              ;
 478+ 946E              ;	MODIFICA: HL,DE y BC
 479+ 946E
 480+ 946E
 481+ 946E              Definicion_de_entidad_a_bandeja_DRAW
 482+ 946E
 483+ 946E 11 EE 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 484+ 9471 7E           	ld a,(hl) 									; Volcamos Tipo.
 485+ 9472 12           	ld (de),a
 486+ 9473 23           	inc hl
 487+ 9474              ;
 488+ 9474 11 FC 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 489+ 9477 01 02 00     	ld bc,2
 490+ 947A ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 491+ 947C              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 492+ 947C 11 F1 8B     	ld de,Contador_de_vueltas
 493+ 947F 7E           	ld a,(hl)
 494+ 9480 12           	ld (de),a
 495+ 9481 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 496+ 9482
 497+ 9482 11 03 8C     	ld de,Indice_Sprite_der
 498+ 9485 01 04 00     	ld bc,4
 499+ 9488 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 500+ 948A
 501+ 948A 11 0B 8C     	ld de,Posicion_inicio
 502+ 948D 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 503+ 9490 ED B0        	ldir 									; Vuelco (Frames_explosion).
 504+ 9492
 505+ 9492 11 F5 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 506+ 9495 01 02 00     	ld bc,2
 507+ 9498 ED B0        	ldir
 508+ 949A
 509+ 949A C9           	ret
 510+ 949B
 511+ 949B              ; ----------------------------------------------------------------------------------------------------------
 512+ 949B              ;
 513+ 949B              ;	1/8/24
 514+ 949B              ;
 515+ 949B
 516+ 949B              Parametros_de_bandeja_DRAW_a_caja
 517+ 949B
 518+ 949B 21 EE 8B     	ld hl,Bandeja_DRAW
 519+ 949E 01 0C 00     	ld bc,12
 520+ 94A1 ED B0        	ldir
 521+ 94A3 C9           	ret
 522+ 94A4
 523+ 94A4              ;---------------------------------------------------------------------------------------------------------------
 524+ 94A4              ;
 525+ 94A4              ;	13/11/24
 526+ 94A4              ;
 527+ 94A4              ;	INICIALIZA (Numero_parcial_de_entidades).
 528+ 94A4              ;
 529+ 94A4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 6, (Numero_parcial_de_entidades)="6".
 530+ 94A4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 6, (Numero_parcial_de_entidades)=(Numero_de_entidades).
 531+ 94A4
 532+ 94A4              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 533+ 94A4              ;			- Actualiza (Numero_de_entidades).
 534+ 94A4
 535+ 94A4              ;	MODIFICA: A y B.
 536+ 94A4
 537+ 94A4
 538+ 94A4              Inicializa_Numero_parcial_de_entidades
 539+ 94A4
 540+ 94A4 3A 36 8C     	ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 541+ 94A7 FE 06        	cp 6												 ; "6" es el nº total de cajas de entidades de las que disponemos.
 542+ 94A9 38 0E        	jr c,1F
 543+ 94AB 28 0C        	jr z,1F
 544+ 94AD
 545+ 94AD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 546+ 94AD              ; Actualizamos variables.
 547+ 94AD
 548+ 94AD D6 06        	sub 6
 549+ 94AF 32 36 8C     	ld (Numero_de_entidades),a
 550+ 94B2 3E 06        	ld a,6
 551+ 94B4 32 37 8C     	ld (Numero_parcial_de_entidades),a
 552+ 94B7 47           	ld b,a
 553+ 94B8 C9           	ret
 554+ 94B9
 555+ 94B9              ; El nº total de entidades no supera el nº de cajas de entidades.
 556+ 94B9              ; (Numero_de_entidades)="0".
 557+ 94B9
 558+ 94B9 32 37 8C     1 ld (Numero_parcial_de_entidades),a
 559+ 94BC 47           	ld b,a
 560+ 94BD AF           	xor a
 561+ 94BE 32 36 8C     	ld (Numero_de_entidades),a
 562+ 94C1 C9           	ret
 563+ 94C2
# file closed: Rutinas_de_inicio_y_niveles.asm
2113  94C2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C2              ;
   3+ 94C2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C2              ;
   5+ 94C2              ; *****************************************************************************************************************************************************************************************
   6+ 94C2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C2
   8+ 94C2 7C           calcula_tercio ld a,h
   9+ 94C3 E6 18        	and $18
  10+ 94C5 CB 2F        	sra a
  11+ 94C7 CB 2F        	sra a
  12+ 94C9 CB 2F        	sra a
  13+ 94CB C9           	ret
  14+ 94CC
# file closed: calcula_tercio.asm
2114  94CC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94CC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94CC              ;
   3+ 94CC              ;
   4+ 94CC              ;	CLS.
   5+ 94CC              ;
   6+ 94CC              ;	Limpia la pantalla y define sus atributos.
   7+ 94CC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94CC              ;
   9+ 94CC              ;	COLORES: 0 ..... NEGRO
  10+ 94CC              ;    		 1 ..... AZUL
  11+ 94CC              ; 			 2 ..... ROJO
  12+ 94CC              ;			 3 ..... MAGENTA
  13+ 94CC              ; 			 4 ..... VERDE
  14+ 94CC              ; 			 5 ..... CIAN
  15+ 94CC              ;			 6 ..... AMARILLO
  16+ 94CC              ; 			 7 ..... BLANCO
  17+ 94CC              ;
  18+ 94CC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94CC              ;
  20+ 94CC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94CC
  22+ 94CC
  23+ 94CC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94CF 11 01 40     	LD DE,$4001
  25+ 94D2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94D7 ED B0        	LDIR
  28+ 94D9 01 FF 02     	LD BC,767
  29+ 94DC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94DD ED B0        	LDIR
  31+ 94DF C9           	ret
  32+ 94E0
# file closed: Cls.asm
2115  94E0              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E0              ; ------------------------------------------------------------------------
   2+ 94E0              ;
   3+ 94E0              ;	30/1/24
   4+ 94E0              ;
   5+ 94E0              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E0              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E0              ;
   8+ 94E0              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E0              ;
  10+ 94E0              ;	Modifica: A,BC y DE.
  11+ 94E0
  12+ 94E0              Genera_coordenadas
  13+ 94E0
  14+ 94E0 7D           	ld a,l
  15+ 94E1 E6 1F        	and $1f
  16+ 94E3
  17+ 94E3 32 EF 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  18+ 94E6
  19+ 94E6 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  20+ 94E7 FE 40        	cp $40
  21+ 94E9 38 1C        	jr c,4F
  22+ 94EB
  23+ 94EB CD C2 94     	call calcula_tercio
  24+ 94EE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  25+ 94EF
  26+ 94EF 1E 00        	ld e,0
  27+ 94F1 7D           	ld a,l
  28+ 94F2 E6 E0        	and $e0
  29+ 94F4 28 01        	jr z,1F
  30+ 94F6 04           	inc b
  31+ 94F7
  32+ 94F7 04           1 inc b
  33+ 94F8 05           	dec b
  34+ 94F9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  35+ 94FB              ;														; _ , salimos.
  36+ 94FB 1C           3 inc e
  37+ 94FC D6 20        	sub 32
  38+ 94FE 20 FB        	jr nz,3B
  39+ 9500 10 F5        	djnz 1B
  40+ 9502
  41+ 9502 7B           2 ld a,e
  42+ 9503 32 F0 8B     	ld (Coordenada_y),a
  43+ 9506 C9           	ret
  44+ 9507
  45+ 9507 AF           4 xor a
  46+ 9508 32 F0 8B     	ld (Coordenada_y),a
  47+ 950B C9           	ret
  48+ 950C
# file closed: Genera_coordenadas.asm
2116  950C              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 950C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 950C              ;
   3+ 950C              ;	20/09/24
   4+ 950C              ;
   5+ 950C              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 950C              ;   DE contiene Puntero_objeto.
   7+ 950C              ;   IX contiene el Puntero de impresión.
   8+ 950C
   9+ 950C              Genera_datos_de_impresion
  10+ 950C
  11+ 950C ED 73 3D 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9510
  13+ 9510 31 F5 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9513 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9515
  16+ 9515 2A 5F 8C         ld hl,(Scanlines_album_SP)
  17+ 9518
  18+ 9518 3E 05            ld a,5
  19+ 951A 85               add l
  20+ 951B 6F               ld l,a
  21+ 951C
  22+ 951C F9               ld sp,hl
  23+ 951D 22 5F 8C         ld (Scanlines_album_SP),hl
  24+ 9520
  25+ 9520 21 00 00         ld hl,0
  26+ 9523
  27+ 9523 DD E5            push ix
  28+ 9525 3B               dec sp
  29+ 9526 ED 7A            adc hl,sp
  30+ 9528 D5               push de
  31+ 9529
  32+ 9529              ; Recuperamos SP.
  33+ 9529
  34+ 9529 ED 7B 3D 8C      ld sp,(Stack)
  35+ 952D
  36+ 952D E5               push hl
  37+ 952E F1               pop af
  38+ 952F 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9530
  40+ 9530              ; Tenemos el encabezado listo.
  41+ 9530              ; Preparamos registros para generar los scanlines.
  42+ 9530
  43+ 9530 DD E5            push ix
  44+ 9532 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9533
  46+ 9533 ED 5B 5F 8C      ld de,(Scanlines_album_SP)
  47+ 9537
  48+ 9537              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9537              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9537
  51+ 9537 7C               ld a,h
  52+ 9538 FE 50            cp $50
  53+ 953A 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 953C
  55+ 953C 20 05            jr nz,2F
  56+ 953E
  57+ 953E 7D               ld a,l
  58+ 953F FE E0            cp $e0
  59+ 9541 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9543
  61+ 9543 7D           2 ld a,l
  62+ 9544 FE C0            cp $c0
  63+ 9546 D2 DC 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9549
  65+ 9549              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9549
  67+ 9549 CD DA 99         call NextScan
  68+ 954C EB               ex de,hl
  69+ 954D
  70+ 954D 73               ld (hl),e
  71+ 954E 23               inc hl
  72+ 954F 72               ld (hl),d
  73+ 9550 23               inc hl
  74+ 9551
  75+ 9551 EB               ex de,hl
  76+ 9552
  77+ 9552 CD DA 99         call NextScan
  78+ 9555 EB               ex de,hl
  79+ 9556
  80+ 9556 73               ld (hl),e
  81+ 9557 23               inc hl
  82+ 9558 72               ld (hl),d
  83+ 9559 23               inc hl
  84+ 955A
  85+ 955A EB               ex de,hl
  86+ 955B
  87+ 955B CD DA 99         call NextScan
  88+ 955E EB               ex de,hl
  89+ 955F
  90+ 955F 73               ld (hl),e
  91+ 9560 23               inc hl
  92+ 9561 72               ld (hl),d
  93+ 9562 23               inc hl
  94+ 9563
  95+ 9563 EB               ex de,hl
  96+ 9564
  97+ 9564 CD DA 99         call NextScan
  98+ 9567 EB               ex de,hl
  99+ 9568
 100+ 9568 73               ld (hl),e
 101+ 9569 23               inc hl
 102+ 956A 72               ld (hl),d
 103+ 956B 23               inc hl
 104+ 956C
 105+ 956C EB               ex de,hl
 106+ 956D
 107+ 956D CD DA 99         call NextScan
 108+ 9570 EB               ex de,hl
 109+ 9571
 110+ 9571 73               ld (hl),e
 111+ 9572 23               inc hl
 112+ 9573 72               ld (hl),d
 113+ 9574 23               inc hl
 114+ 9575
 115+ 9575 EB               ex de,hl
 116+ 9576
 117+ 9576 CD DA 99         call NextScan
 118+ 9579 EB               ex de,hl
 119+ 957A
 120+ 957A 73               ld (hl),e
 121+ 957B 23               inc hl
 122+ 957C 72               ld (hl),d
 123+ 957D 23               inc hl
 124+ 957E
 125+ 957E EB               ex de,hl
 126+ 957F
 127+ 957F CD DA 99         call NextScan
 128+ 9582 EB               ex de,hl
 129+ 9583
 130+ 9583 73               ld (hl),e
 131+ 9584 23               inc hl
 132+ 9585 72               ld (hl),d
 133+ 9586 23               inc hl
 134+ 9587
 135+ 9587 EB               ex de,hl
 136+ 9588
 137+ 9588 CD DA 99         call NextScan
 138+ 958B EB               ex de,hl
 139+ 958C
 140+ 958C 73               ld (hl),e
 141+ 958D 23               inc hl
 142+ 958E 72               ld (hl),d
 143+ 958F 23               inc hl
 144+ 9590
 145+ 9590 EB               ex de,hl
 146+ 9591
 147+ 9591 CD DA 99         call NextScan
 148+ 9594 EB               ex de,hl
 149+ 9595
 150+ 9595 73               ld (hl),e
 151+ 9596 23               inc hl
 152+ 9597 72               ld (hl),d
 153+ 9598 23               inc hl
 154+ 9599
 155+ 9599 EB               ex de,hl
 156+ 959A
 157+ 959A CD DA 99         call NextScan
 158+ 959D EB               ex de,hl
 159+ 959E
 160+ 959E 73               ld (hl),e
 161+ 959F 23               inc hl
 162+ 95A0 72               ld (hl),d
 163+ 95A1 23               inc hl
 164+ 95A2
 165+ 95A2 EB               ex de,hl
 166+ 95A3
 167+ 95A3 CD DA 99         call NextScan
 168+ 95A6 EB               ex de,hl
 169+ 95A7
 170+ 95A7 73               ld (hl),e
 171+ 95A8 23               inc hl
 172+ 95A9 72               ld (hl),d
 173+ 95AA 23               inc hl
 174+ 95AB
 175+ 95AB EB               ex de,hl
 176+ 95AC
 177+ 95AC CD DA 99         call NextScan
 178+ 95AF EB               ex de,hl
 179+ 95B0
 180+ 95B0 73               ld (hl),e
 181+ 95B1 23               inc hl
 182+ 95B2 72               ld (hl),d
 183+ 95B3 23               inc hl
 184+ 95B4
 185+ 95B4 EB               ex de,hl
 186+ 95B5
 187+ 95B5 CD DA 99         call NextScan
 188+ 95B8 EB               ex de,hl
 189+ 95B9
 190+ 95B9 73               ld (hl),e
 191+ 95BA 23               inc hl
 192+ 95BB 72               ld (hl),d
 193+ 95BC 23               inc hl
 194+ 95BD
 195+ 95BD EB               ex de,hl
 196+ 95BE
 197+ 95BE CD DA 99         call NextScan
 198+ 95C1 EB               ex de,hl
 199+ 95C2
 200+ 95C2 73               ld (hl),e
 201+ 95C3 23               inc hl
 202+ 95C4 72               ld (hl),d
 203+ 95C5 23               inc hl
 204+ 95C6
 205+ 95C6 EB               ex de,hl
 206+ 95C7
 207+ 95C7 CD DA 99         call NextScan
 208+ 95CA EB               ex de,hl
 209+ 95CB
 210+ 95CB              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95CB              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95CB              ;   _ generar sus scanlines.
 213+ 95CB
 214+ 95CB              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95CB
 216+ 95CB 73               ld (hl),e
 217+ 95CC 23               inc hl
 218+ 95CD 72               ld (hl),d
 219+ 95CE 23               inc hl
 220+ 95CF
 221+ 95CF              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95CF
 223+ 95CF 22 5F 8C         ld (Scanlines_album_SP),hl
 224+ 95D2
 225+ 95D2 EB               ex de,hl
 226+ 95D3
 227+ 95D3              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D3
 229+ 95D3              ;    call NextScan
 230+ 95D3              ;    call NextScan
 231+ 95D3
 232+ 95D3 22 6A 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D6
 234+ 95D6              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D6
 236+ 95D6 08               ex af,af
 237+ 95D7
 238+ 95D7 F5               push af
 239+ 95D8 E1               pop hl
 240+ 95D9
 241+ 95D9 36 10            ld (hl),16
 242+ 95DB
 243+ 95DB C9               ret
 244+ 95DC
 245+ 95DC              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95DC
 247+ 95DC              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95DC
 249+ 95DC 3E 57            ld a,$57
 250+ 95DE 94               sub h
 251+ 95DF 47               ld b,a
 252+ 95E0
 253+ 95E0 3E DF            ld a,$df
 254+ 95E2 BD               cp l
 255+ 95E3 38 04            jr c,1F
 256+ 95E5
 257+ 95E5 3E 08            ld a,8
 258+ 95E7 80               add b
 259+ 95E8 47               ld b,a
 260+ 95E9
 261+ 95E9              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95E9              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95E9
 264+ 95E9 48           1 ld c,b
 265+ 95EA 0C               inc c
 266+ 95EB
 267+ 95EB 04               inc b
 268+ 95EC 05               dec b
 269+ 95ED 20 02            jr nz,3F
 270+ 95EF
 271+ 95EF 18 0B            jr 6F
 272+ 95F1
 273+ 95F1 CD DA 99     3 call NextScan
 274+ 95F4 EB               ex de,hl
 275+ 95F5
 276+ 95F5 73               ld (hl),e
 277+ 95F6 23               inc hl
 278+ 95F7 72               ld (hl),d
 279+ 95F8 23               inc hl
 280+ 95F9
 281+ 95F9 EB               ex de,hl
 282+ 95FA 10 F5            djnz 3B
 283+ 95FC
 284+ 95FC ED 53 5F 8C  6 ld (Scanlines_album_SP),de
 285+ 9600
 286+ 9600 08           5 ex af,af
 287+ 9601 F5               push af
 288+ 9602 E1               pop hl
 289+ 9603
 290+ 9603 71               ld (hl),c
 291+ 9604
 292+ 9604 C9               ret
 293+ 9605
# file closed: Genera_datos_de_impresion.asm
2117  9605              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9605              ; -----------------------------------------------------------------------------
   2+ 9605              ;
   3+ 9605              ;   11/03/24
   4+ 9605              ;
   5+ 9605
   6+ 9605              Pinta_Sprites
   7+ 9605
   8+ 9605              ;    ld hl,(Scanlines_album_SP)
   9+ 9605              ;    call Extrae_address
  10+ 9605
  11+ 9605              ;    inc h
  12+ 9605              ;    dec h
  13+ 9605              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9605
  15+ 9605 ED 73 3D 8C      ld (Stack),sp
  16+ 9609
  17+ 9609 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 960A              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 960A 2C               inc l
  20+ 960B 2C               inc l
  21+ 960C
  22+ 960C 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 960D
  24+ 960D 2C               inc l
  25+ 960E F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 960F
  27+ 960F              ;   Seleccionamos rutina de impresión:
  28+ 960F
  29+ 960F 3E 10            ld a,16
  30+ 9611 B8               cp b
  31+ 9612 C2 0E 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9615
  33+ 9615              ;   Rutinas:
  34+ 9615
  35+ 9615              Pinta_rapido    ;   1520 t/states.
  36+ 9615
  37+ 9615 E1               pop hl
  38+ 9616
  39+ 9616 1A               ld a,(de)
  40+ 9617 AE               xor (hl)
  41+ 9618 77               ld (hl),a
  42+ 9619 2C               inc l
  43+ 961A 1C               inc e
  44+ 961B 1A               ld a,(de)
  45+ 961C AE               xor (hl)
  46+ 961D 77               ld (hl),a
  47+ 961E 2C               inc l
  48+ 961F 1C               inc e
  49+ 9620 1A               ld a,(de)
  50+ 9621 AE               xor (hl)
  51+ 9622 77               ld (hl),a
  52+ 9623 13               inc de
  53+ 9624
  54+ 9624 E1               pop hl
  55+ 9625
  56+ 9625 1A               ld a,(de)
  57+ 9626 AE               xor (hl)
  58+ 9627 77               ld (hl),a
  59+ 9628 2C               inc l
  60+ 9629 1C               inc e
  61+ 962A 1A               ld a,(de)
  62+ 962B AE               xor (hl)
  63+ 962C 77               ld (hl),a
  64+ 962D 2C               inc l
  65+ 962E 1C               inc e
  66+ 962F 1A               ld a,(de)
  67+ 9630 AE               xor (hl)
  68+ 9631 77               ld (hl),a
  69+ 9632 13               inc de
  70+ 9633
  71+ 9633 E1               pop hl
  72+ 9634
  73+ 9634 1A               ld a,(de)
  74+ 9635 AE               xor (hl)
  75+ 9636 77               ld (hl),a
  76+ 9637 2C               inc l
  77+ 9638 1C               inc e
  78+ 9639 1A               ld a,(de)
  79+ 963A AE               xor (hl)
  80+ 963B 77               ld (hl),a
  81+ 963C 2C               inc l
  82+ 963D 1C               inc e
  83+ 963E 1A               ld a,(de)
  84+ 963F AE               xor (hl)
  85+ 9640 77               ld (hl),a
  86+ 9641 13               inc de
  87+ 9642
  88+ 9642 E1               pop hl
  89+ 9643
  90+ 9643 1A               ld a,(de)
  91+ 9644 AE               xor (hl)
  92+ 9645 77               ld (hl),a
  93+ 9646 2C               inc l
  94+ 9647 1C               inc e
  95+ 9648 1A               ld a,(de)
  96+ 9649 AE               xor (hl)
  97+ 964A 77               ld (hl),a
  98+ 964B 2C               inc l
  99+ 964C 1C               inc e
 100+ 964D 1A               ld a,(de)
 101+ 964E AE               xor (hl)
 102+ 964F 77               ld (hl),a
 103+ 9650 13               inc de
 104+ 9651
 105+ 9651 E1               pop hl
 106+ 9652
 107+ 9652 1A               ld a,(de)
 108+ 9653 AE               xor (hl)
 109+ 9654 77               ld (hl),a
 110+ 9655 2C               inc l
 111+ 9656 1C               inc e
 112+ 9657 1A               ld a,(de)
 113+ 9658 AE               xor (hl)
 114+ 9659 77               ld (hl),a
 115+ 965A 2C               inc l
 116+ 965B 1C               inc e
 117+ 965C 1A               ld a,(de)
 118+ 965D AE               xor (hl)
 119+ 965E 77               ld (hl),a
 120+ 965F 13               inc de
 121+ 9660
 122+ 9660 E1               pop hl
 123+ 9661
 124+ 9661 1A               ld a,(de)
 125+ 9662 AE               xor (hl)
 126+ 9663 77               ld (hl),a
 127+ 9664 2C               inc l
 128+ 9665 1C               inc e
 129+ 9666 1A               ld a,(de)
 130+ 9667 AE               xor (hl)
 131+ 9668 77               ld (hl),a
 132+ 9669 2C               inc l
 133+ 966A 1C               inc e
 134+ 966B 1A               ld a,(de)
 135+ 966C AE               xor (hl)
 136+ 966D 77               ld (hl),a
 137+ 966E 13               inc de
 138+ 966F
 139+ 966F E1               pop hl
 140+ 9670
 141+ 9670 1A               ld a,(de)
 142+ 9671 AE               xor (hl)
 143+ 9672 77               ld (hl),a
 144+ 9673 2C               inc l
 145+ 9674 1C               inc e
 146+ 9675 1A               ld a,(de)
 147+ 9676 AE               xor (hl)
 148+ 9677 77               ld (hl),a
 149+ 9678 2C               inc l
 150+ 9679 1C               inc e
 151+ 967A 1A               ld a,(de)
 152+ 967B AE               xor (hl)
 153+ 967C 77               ld (hl),a
 154+ 967D 13               inc de
 155+ 967E
 156+ 967E E1               pop hl
 157+ 967F
 158+ 967F 1A               ld a,(de)
 159+ 9680 AE               xor (hl)
 160+ 9681 77               ld (hl),a
 161+ 9682 2C               inc l
 162+ 9683 1C               inc e
 163+ 9684 1A               ld a,(de)
 164+ 9685 AE               xor (hl)
 165+ 9686 77               ld (hl),a
 166+ 9687 2C               inc l
 167+ 9688 1C               inc e
 168+ 9689 1A               ld a,(de)
 169+ 968A AE               xor (hl)
 170+ 968B 77               ld (hl),a
 171+ 968C 13               inc de
 172+ 968D
 173+ 968D E1               pop hl
 174+ 968E
 175+ 968E 1A               ld a,(de)
 176+ 968F AE               xor (hl)
 177+ 9690 77               ld (hl),a
 178+ 9691 2C               inc l
 179+ 9692 1C               inc e
 180+ 9693 1A               ld a,(de)
 181+ 9694 AE               xor (hl)
 182+ 9695 77               ld (hl),a
 183+ 9696 2C               inc l
 184+ 9697 1C               inc e
 185+ 9698 1A               ld a,(de)
 186+ 9699 AE               xor (hl)
 187+ 969A 77               ld (hl),a
 188+ 969B 13               inc de
 189+ 969C
 190+ 969C E1               pop hl
 191+ 969D
 192+ 969D 1A               ld a,(de)
 193+ 969E AE               xor (hl)
 194+ 969F 77               ld (hl),a
 195+ 96A0 2C               inc l
 196+ 96A1 1C               inc e
 197+ 96A2 1A               ld a,(de)
 198+ 96A3 AE               xor (hl)
 199+ 96A4 77               ld (hl),a
 200+ 96A5 2C               inc l
 201+ 96A6 1C               inc e
 202+ 96A7 1A               ld a,(de)
 203+ 96A8 AE               xor (hl)
 204+ 96A9 77               ld (hl),a
 205+ 96AA 13               inc de
 206+ 96AB
 207+ 96AB E1               pop hl
 208+ 96AC
 209+ 96AC 1A               ld a,(de)
 210+ 96AD AE               xor (hl)
 211+ 96AE 77               ld (hl),a
 212+ 96AF 2C               inc l
 213+ 96B0 1C               inc e
 214+ 96B1 1A               ld a,(de)
 215+ 96B2 AE               xor (hl)
 216+ 96B3 77               ld (hl),a
 217+ 96B4 2C               inc l
 218+ 96B5 1C               inc e
 219+ 96B6 1A               ld a,(de)
 220+ 96B7 AE               xor (hl)
 221+ 96B8 77               ld (hl),a
 222+ 96B9 13               inc de
 223+ 96BA
 224+ 96BA E1               pop hl
 225+ 96BB
 226+ 96BB 1A               ld a,(de)
 227+ 96BC AE               xor (hl)
 228+ 96BD 77               ld (hl),a
 229+ 96BE 2C               inc l
 230+ 96BF 1C               inc e
 231+ 96C0 1A               ld a,(de)
 232+ 96C1 AE               xor (hl)
 233+ 96C2 77               ld (hl),a
 234+ 96C3 2C               inc l
 235+ 96C4 1C               inc e
 236+ 96C5 1A               ld a,(de)
 237+ 96C6 AE               xor (hl)
 238+ 96C7 77               ld (hl),a
 239+ 96C8 13               inc de
 240+ 96C9
 241+ 96C9 E1               pop hl
 242+ 96CA
 243+ 96CA 1A               ld a,(de)
 244+ 96CB AE               xor (hl)
 245+ 96CC 77               ld (hl),a
 246+ 96CD 2C               inc l
 247+ 96CE 1C               inc e
 248+ 96CF 1A               ld a,(de)
 249+ 96D0 AE               xor (hl)
 250+ 96D1 77               ld (hl),a
 251+ 96D2 2C               inc l
 252+ 96D3 1C               inc e
 253+ 96D4 1A               ld a,(de)
 254+ 96D5 AE               xor (hl)
 255+ 96D6 77               ld (hl),a
 256+ 96D7 13               inc de
 257+ 96D8
 258+ 96D8 E1               pop hl
 259+ 96D9
 260+ 96D9 1A               ld a,(de)
 261+ 96DA AE               xor (hl)
 262+ 96DB 77               ld (hl),a
 263+ 96DC 2C               inc l
 264+ 96DD 1C               inc e
 265+ 96DE 1A               ld a,(de)
 266+ 96DF AE               xor (hl)
 267+ 96E0 77               ld (hl),a
 268+ 96E1 2C               inc l
 269+ 96E2 1C               inc e
 270+ 96E3 1A               ld a,(de)
 271+ 96E4 AE               xor (hl)
 272+ 96E5 77               ld (hl),a
 273+ 96E6 13               inc de
 274+ 96E7
 275+ 96E7 E1               pop hl
 276+ 96E8
 277+ 96E8 1A               ld a,(de)
 278+ 96E9 AE               xor (hl)
 279+ 96EA 77               ld (hl),a
 280+ 96EB 2C               inc l
 281+ 96EC 1C               inc e
 282+ 96ED 1A               ld a,(de)
 283+ 96EE AE               xor (hl)
 284+ 96EF 77               ld (hl),a
 285+ 96F0 2C               inc l
 286+ 96F1 1C               inc e
 287+ 96F2 1A               ld a,(de)
 288+ 96F3 AE               xor (hl)
 289+ 96F4 77               ld (hl),a
 290+ 96F5 13               inc de
 291+ 96F6
 292+ 96F6 E1               pop hl
 293+ 96F7
 294+ 96F7 1A               ld a,(de)
 295+ 96F8 AE               xor (hl)
 296+ 96F9 77               ld (hl),a
 297+ 96FA 2C               inc l
 298+ 96FB 1C               inc e
 299+ 96FC 1A               ld a,(de)
 300+ 96FD AE               xor (hl)
 301+ 96FE 77               ld (hl),a
 302+ 96FF 2C               inc l
 303+ 9700 1C               inc e
 304+ 9701 1A               ld a,(de)
 305+ 9702 AE               xor (hl)
 306+ 9703 77               ld (hl),a
 307+ 9704 13               inc de
 308+ 9705
 309+ 9705 ED 73 5F 8C      ld (Scanlines_album_SP),sp
 310+ 9709 ED 7B 3D 8C      ld sp,(Stack)
 311+ 970D C9               ret
 312+ 970E
 313+ 970E              Pinta_lento
 314+ 970E
 315+ 970E E1           1 pop hl
 316+ 970F
 317+ 970F 1A               ld a,(de)
 318+ 9710 AE               xor (hl)
 319+ 9711 77               ld (hl),a
 320+ 9712 2C               inc l
 321+ 9713 1C               inc e
 322+ 9714 1A               ld a,(de)
 323+ 9715 AE               xor (hl)
 324+ 9716 77               ld (hl),a
 325+ 9717 2C               inc l
 326+ 9718 1C               inc e
 327+ 9719 1A               ld a,(de)
 328+ 971A AE               xor (hl)
 329+ 971B 77               ld (hl),a
 330+ 971C 13               inc de
 331+ 971D
 332+ 971D 10 EF            djnz 1B
 333+ 971F
 334+ 971F ED 73 5F 8C      ld (Scanlines_album_SP),sp
 335+ 9723 ED 7B 3D 8C      ld sp,(Stack)
 336+ 9727 C9               ret
# file closed: Pinta_Sprites.asm
2118  9728              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9728              ; ******************************************************************************************************************************************************************************************
   2+ 9728              ;
   3+ 9728              ; 26/06/23
   4+ 9728              ;
   5+ 9728              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9728
   7+ 9728              Draw
   8+ 9728
   9+ 9728 CD CE 99     	call Prepara_draw
  10+ 972B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 972C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 972D 28 05        	jr z,2F
  13+ 972F
  14+ 972F 3A 0D 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9732 18 0C        	jr 1F
  16+ 9734
  17+ 9734 2A 0B 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9737 22 FE 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 973A CD C6 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 973D              ;													; _la esquina superior izquierda de la pantalla.
  21+ 973D
  22+ 973D CD 6D 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9740
  24+ 9740 3A FB 8B     1 ld a,(Ctrl_0)
  25+ 9743 CB 6F        	bit 5,a
  26+ 9745 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9747
  28+ 9747 CD 5C 97     	call Comprueba_limite_horizontal
  29+ 974A CD EC 97     	call Comprueba_limite_vertical
  30+ 974D
  31+ 974D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 974D              ; -----------------------
  33+ 974D              ; -----------------------
  34+ 974D              ; -----------------------
  35+ 974D
  36+ 974D CD 42 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9750 CD 79 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9753
  39+ 9753 3A FB 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9756 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9758 32 FB 8B     	ld (Ctrl_0),a
  42+ 975B
  43+ 975B C9           	ret
  44+ 975C
  45+ 975C              ; *******************************************************************************************************************************************************************************************
  46+ 975C              ;	21/01/23
  47+ 975C              ;
  48+ 975C              ; 	Comprueba_limite_horizontal.
  49+ 975C              ;
  50+ 975C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 975C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 975C              ;
  53+ 975C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 975C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 975C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 975C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 975C
  58+ 975C
  59+ 975C
  60+ 975C 3A FB 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 975F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9761 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9763 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9765 32 FB 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9768 18 09            jr 6F
  66+ 976A CB 5F        1 bit 3,a
  67+ 976C 28 0A            jr z,2F
  68+ 976E E6 F7            and $f7
  69+ 9770 32 FB 8B         ld (Ctrl_0),a
  70+ 9773 CD C6 98     6 call Inicializacion
  71+ 9776 18 5B            jr 5F
  72+ 9778 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9779
  74+ 9779              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9779              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9779
  77+ 9779 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 977A 2A 0F 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 977D CD C2 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9780 67           	ld h,a
  81+ 9781 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9782 CD C2 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9785 67           	ld h,a
  84+ 9786 A7           	and a
  85+ 9787 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9789 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 978A 3A 0D 8C     	ld a,(Cuad_objeto)
  88+ 978D FE 02        	cp 2
  89+ 978F 38 1E        	jr c,3F
  90+ 9791 28 1C        	jr z,3F
  91+ 9793 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9794 28 23            jr z,7F
  93+ 9796 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9798 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 979A E1           	pop hl
  96+ 979B
  97+ 979B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 979B              ; _para indicar con E="2" en caso necesario.
  99+ 979B
 100+ 979B E5               push hl
 101+ 979C C5               push bc
 102+ 979D CD C2 94     	call calcula_tercio
 103+ 97A0 FE 01        	cp 1
 104+ 97A2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A4 CD D4 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97A7 28 26            jr z,9F
 107+ 97A9 38 24            jr c,9F
 108+ 97AB 1E 00        11 ld e,0
 109+ 97AD 18 22            jr 8F
 110+ 97AF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97B0 28 07        	jr z, 7F
 112+ 97B2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B4 1E 00         	ld e,0
 114+ 97B6 E1           	pop hl
 115+ 97B7 18 04        	jr 4F
 116+ 97B9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97BB 18 15            jr 10F
 118+ 97BD
 119+ 97BD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97BD              ; _para indicar con E="2" en caso necesario.
 121+ 97BD
 122+ 97BD E5           4 push hl
 123+ 97BE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97BF CD C2 94     	call calcula_tercio
 125+ 97C2 FE 01        	cp 1
 126+ 97C4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C6 CD D4 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97C9 28 04            jr z,9F
 129+ 97CB 30 02            jr nc,9F
 130+ 97CD 18 02        	jr 8F
 131+ 97CF 1E 02        9 ld e,2
 132+ 97D1 C1           8 pop bc
 133+ 97D2 E1           10 pop hl
 134+ 97D3 C9           5 ret
 135+ 97D4
 136+ 97D4              ; --------------------
 137+ 97D4              ;
 138+ 97D4              ; 25/08/22
 139+ 97D4
 140+ 97D4 CD C2 94     Comprueba_centro call calcula_tercio
 141+ 97D7 67               ld h,a
 142+ 97D8 08           	ex af,af
 143+ 97D9 FE 02        	cp 2
 144+ 97DB 38 07        	jr c,1F
 145+ 97DD 28 05        	jr z,1F
 146+ 97DF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E2 18 03        	jr 2F
 148+ 97E4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97E7 08           2 ex af,af
 150+ 97E8 A7               and a
 151+ 97E9 ED 42            sbc hl,bc
 152+ 97EB C9               ret
 153+ 97EC
 154+ 97EC              ; *********************************************************************************************************************************************************************************************
 155+ 97EC              ;
 156+ 97EC              ;   16/8/22
 157+ 97EC              ;
 158+ 97EC              ;	Comprueba_limite_vertical
 159+ 97EC              ;
 160+ 97EC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97EC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97EC              ;
 163+ 97EC
 164+ 97EC 2A FE 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97EF 7D           	ld a,l
 166+ 97F0 E6 1F        	and $1F
 167+ 97F2 57           	ld d,a
 168+ 97F3 3A 11 8C     	ld a,(Limite_vertical)
 169+ 97F6 BA           	cp d 											; Límite - Posición.
 170+ 97F7 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97F8 3A 0D 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97FB CB 47        	bit 0,a
 173+ 97FD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97FF
 175+ 97FF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97FF
 177+ 97FF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9800 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9802
 180+ 9802              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9802              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9802
 183+ 9802 3A EF 8B         ld a,(Coordenada_X)
 184+ 9805 16 0F            ld d,Centro_izquierda
 185+ 9807 A7               and a
 186+ 9808 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9809 28 1E            jr z,3F
 188+ 980B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 980D              ;                                                    ; _salimos sin modificar nada.
 190+ 980D 18 0E            jr 2F
 191+ 980F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9810 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9812
 194+ 9812              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9812              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9812
 197+ 9812 3A EF 8B         ld a,(Coordenada_X)
 198+ 9815 16 10            ld d,Centro_derecha
 199+ 9817 A7               and a
 200+ 9818 92               sub d
 201+ 9819 28 0E            jr z,3F
 202+ 981B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 981D              ;                                                    ; _salimos sin modificar nada.
 204+ 981D CB 43        2 bit 0,e
 205+ 981F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9821 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9822 CD B6 98         call Modificaccionne
 208+ 9825 C1           	pop bc
 209+ 9826 CD C6 98         call Inicializacion
 210+ 9829 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 982A
 212+ 982A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 982A
 214+ 982A C5           4 push bc
 215+ 982B 01 FD 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 982E 0A           	ld a,(bc)
 217+ 982F 3D           	dec a
 218+ 9830 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9831 7D           	ld a,l
 220+ 9832 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9833 CB 47        	bit 0,a
 222+ 9835 28 03        	jr z,5F
 223+ 9837 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9838 18 2E        	jr 7F
 225+ 983A
 226+ 983A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 983A
 228+ 983A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 983B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 983C 3A FB 8B     	ld a,(Ctrl_0)
 231+ 983F CB 4F        	bit 1,a
 232+ 9841 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9843 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9844
 235+ 9844              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9844
 237+ 9844 1C               inc e
 238+ 9845 1D               dec e
 239+ 9846 20 07            jr nz,12F
 240+ 9848 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9849 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 984A 22 FE 8B     	ld (Posicion_actual),hl
 243+ 984D 18 44        13 jr 9F
 244+ 984F CB 43        12 bit 0,e
 245+ 9851 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9853              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9853 C1           	pop bc
 248+ 9854 18 D3        	jr 3B
 249+ 9856 80           14 add b
 250+ 9857 6F               ld l,a
 251+ 9858 22 FE 8B     	ld (Posicion_actual),hl
 252+ 985B CD B6 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 985E 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9860 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9862 32 FB 8B         ld (Ctrl_0),a
 256+ 9865 F1           	pop af
 257+ 9866 18 2B        	jr 9F
 258+ 9868
 259+ 9868              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9868
 261+ 9868 F5           7 push af
 262+ 9869 3A FB 8B     	ld a,(Ctrl_0)
 263+ 986C CB 47        	bit 0,a
 264+ 986E 20 1D        	jr nz,8F
 265+ 9870 F1           	pop af
 266+ 9871
 267+ 9871              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9871
 269+ 9871 1C           	inc e
 270+ 9872 1D               dec e
 271+ 9873 20 07            jr nz,10F
 272+ 9875 90           	sub b
 273+ 9876 6F               ld l,a
 274+ 9877 22 FE 8B     	ld (Posicion_actual),hl
 275+ 987A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 987C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 987C CB 43        10 bit 0,e
 278+ 987E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9880              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9880 C1           	pop bc
 281+ 9881 18 A6        	jr 3B
 282+ 9883 90           16 sub b
 283+ 9884 6F               ld l,a
 284+ 9885 22 FE 8B     	ld (Posicion_actual),hl
 285+ 9888 CD B6 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 988B 18 06            jr 9F
 287+ 988D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 988F 32 FB 8B         ld (Ctrl_0),a
 289+ 9892 F1           	pop af
 290+ 9893 C1           9 pop bc
 291+ 9894 1E 00        	ld e,0
 292+ 9896 CD C6 98         call Inicializacion
 293+ 9899 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 989A 08           	ex af,af
 295+ 989B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 989C 18 8B            jr 3B
 297+ 989E
 298+ 989E              ; --------------------
 299+ 989E
 300+ 989E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98A0 CD E9 99     1 call PreviousScan
 302+ 98A3 10 FB            djnz 1B
 303+ 98A5 22 FE 8B     	ld (Posicion_actual),hl
 304+ 98A8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98A9 C9           	ret
 306+ 98AA
 307+ 98AA              ; --------------------
 308+ 98AA
 309+ 98AA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98AC CD DA 99     1 call NextScan
 311+ 98AF 10 FB            djnz 1B
 312+ 98B1 22 FE 8B     	ld (Posicion_actual),hl
 313+ 98B4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B5 C9           	ret
 315+ 98B6
 316+ 98B6              ; --------------------
 317+ 98B6              ;
 318+ 98B6              ;	22/01/23
 319+ 98B6              ;
 320+ 98B6              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B6
 324+ 98B6
 325+ 98B6              Modificaccionne
 326+ 98B6
 327+ 98B6 3A 0D 8C     	ld a,(Cuad_objeto)
 328+ 98B9 FE 02        	cp 2
 329+ 98BB CC 9E 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98BE DC 9E 98         call c,Modifica_Pos_actual
 331+ 98C1 C8           	ret z
 332+ 98C2 CD AA 98         call Modifica_Pos_actual2
 333+ 98C5 C9               ret
 334+ 98C6
 335+ 98C6              ; *************************************************************************************************************************************************************************************************
 336+ 98C6              ;
 337+ 98C6              ;	13/8/22
 338+ 98C6              ;
 339+ 98C6              ;	Inicializacion
 340+ 98C6              ;
 341+ 98C6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C6              ;
 345+ 98C6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C6              ;	_ desaparece/aparece.
 348+ 98C6
 349+ 98C6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C6              ;
 352+ 98C6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C6              ; 		   [E] ="0"
 355+ 98C6
 356+ 98C6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C6
 358+ 98C6 CD C2 94     Inicializacion call calcula_tercio
 359+ 98C9 28 36        	jr z,primit
 360+ 98CB E6 02        	and 2
 361+ 98CD 20 07        	jr nz,segmit
 362+ 98CF 7D           	ld a,l
 363+ 98D0 FE 7F        	cp $7f
 364+ 98D2 38 2D        	jr c,primit
 365+ 98D4 28 2B        	jr z,primit
 366+ 98D6 CD 3C 99     segmit call column
 367+ 98D9 38 13        	jr c,tercuad
 368+ 98DB 3E 04        cuarcuad ld a,4
 369+ 98DD 32 0D 8C     	ld (Cuad_objeto),a
 370+ 98E0 21 20 48     	ld hl,$4820
 371+ 98E3 22 0F 8C     	ld (Limite_horizontal),hl
 372+ 98E6 21 11 8C     	ld hl,Limite_vertical
 373+ 98E9 36 0D        	ld (hl),$0d
 374+ 98EB 08           	ex af,af
 375+ 98EC 18 3C        	jr 1F
 376+ 98EE              tercuad
 377+ 98EE 3E 03        	ld a,3
 378+ 98F0 32 0D 8C     	ld (Cuad_objeto),a
 379+ 98F3 21 20 48     	ld hl,$4820
 380+ 98F6 22 0F 8C     	ld (Limite_horizontal),hl
 381+ 98F9 21 11 8C     	ld hl,Limite_vertical
 382+ 98FC 36 12        	ld (hl),$12
 383+ 98FE 08           	ex af,af
 384+ 98FF 18 29        	jr 1F
 385+ 9901 CD 3C 99     primit call column
 386+ 9904 38 13        	jr c, primcuad
 387+ 9906              segcuad
 388+ 9906 3E 02        	ld a,2
 389+ 9908 32 0D 8C     	ld (Cuad_objeto),a
 390+ 990B 21 C0 4F     	ld hl,$4fc0
 391+ 990E 22 0F 8C     	ld (Limite_horizontal),hl
 392+ 9911 21 11 8C     	ld hl,Limite_vertical
 393+ 9914 36 0D        	ld (hl),$0d
 394+ 9916 08           	ex af,af
 395+ 9917 18 11        	jr 1F
 396+ 9919              primcuad
 397+ 9919 3E 01        	ld a,1
 398+ 991B 32 0D 8C     	ld (Cuad_objeto),a
 399+ 991E 21 C0 4F     	ld hl,$4fc0
 400+ 9921 22 0F 8C     	ld (Limite_horizontal),hl
 401+ 9924 21 11 8C     	ld hl,Limite_vertical
 402+ 9927 36 12        	ld (hl),$12
 403+ 9929 08           	ex af,af
 404+ 992A
 405+ 992A C5           1 push bc
 406+ 992B E5           	push hl
 407+ 992C D5           	push de
 408+ 992D
 409+ 992D 2A FE 8B     	ld hl,(Posicion_actual)
 410+ 9930 CD E0 94     	call Genera_coordenadas
 411+ 9933
 412+ 9933 D1           	pop de
 413+ 9934 E1           	pop hl
 414+ 9935 C1           	pop bc
 415+ 9936
 416+ 9936 21 FB 8B     	ld hl,Ctrl_0
 417+ 9939 CB EE        	set 5,(hl)
 418+ 993B C9           	ret
 419+ 993C
 420+ 993C              ; ------------------------------------------------------------------------------------------------------------------
 421+ 993C
 422+ 993C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 993C              ;
 424+ 993C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 993C
 426+ 993C 7D           column ld a,l
 427+ 993D E6 1F        	and $1f
 428+ 993F FE 10         	cp $10
 429+ 9941 C9            	ret
 430+ 9942
 431+ 9942              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9942              ;
 433+ 9942              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9942              ;
 435+ 9942              ; 14/12/22
 436+ 9942              ;
 437+ 9942              ;	Modifica: A y BC.
 438+ 9942
 439+ 9942 3A 0D 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9945 E6 01        	and 1
 441+ 9947 28 17        	jr z,1F
 442+ 9949
 443+ 9949              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9949
 445+ 9949 3A EF 8B     	ld a,(Coordenada_X)
 446+ 994C 47           	ld b,a
 447+ 994D 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 994E 79           	ld a,c
 449+ 994F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9950 38 08        	jr c,2F
 451+ 9952 47           	ld b,a
 452+ 9953 79           	ld a,c
 453+ 9954 90           	sub b
 454+ 9955 32 0E 8C     	ld (Columnas),a
 455+ 9958 18 1B        	jr 4F
 456+ 995A 79           2 ld a,c
 457+ 995B 32 0E 8C     	ld (Columnas),a
 458+ 995E 18 15        	jr 4F
 459+ 9960
 460+ 9960              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9960
 462+ 9960 3A EF 8B     1 ld a,(Coordenada_X)
 463+ 9963 81           	add c
 464+ 9964 3D           	dec a
 465+ 9965 D6 1F        	sub $1f
 466+ 9967 38 08        	jr c,3F
 467+ 9969 47           	ld b,a
 468+ 996A 79           	ld a,c
 469+ 996B 90           	sub b
 470+ 996C 32 0E 8C     	ld (Columnas),a
 471+ 996F 18 04        	jr 4F
 472+ 9971 79           3 ld a,c
 473+ 9972 32 0E 8C     	ld (Columnas),a
 474+ 9975 D9           4 exx
 475+ 9976 4F           	ld c,a
 476+ 9977 D9           	exx
 477+ 9978 C9            ret
 478+ 9979
 479+ 9979              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9979              ;
 481+ 9979              ;   19/7/23
 482+ 9979              ;
 483+ 9979              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9979              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9979              ;
 486+ 9979              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9979              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9979              ;
 489+ 9979              ;	DESTRUYE: HL,B Y A.
 490+ 9979
 491+ 9979 3A 0D 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 997C FE 02        	cp 2
 493+ 997E 38 18        	jr c,1F
 494+ 9980 28 16        	jr z,1F
 495+ 9982 E6 01        	and 1
 496+ 9984 28 0D        	jr z,3F
 497+ 9986
 498+ 9986              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9986
 500+ 9986 CD C2 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9989
 502+ 9989 7D           9 ld a,l
 503+ 998A E6 1F        	and $1f
 504+ 998C 28 2A        	jr z,7F
 505+ 998E 2B           	dec hl
 506+ 998F 10 F8        	djnz 9B
 507+ 9991 18 25        	jr 7F
 508+ 9993
 509+ 9993              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9993
 511+ 9993 2A FE 8B     3 ld hl,(Posicion_actual)
 512+ 9996 18 20        	jr 7F
 513+ 9998
 514+ 9998 28 14        1 jr z,2F
 515+ 999A
 516+ 999A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 999A
 518+ 999A CD C2 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 999D
 520+ 999D 7D           4 ld a,l
 521+ 999E E6 1F        	and $1f
 522+ 99A0 28 03        	jr z,6F
 523+ 99A2 2B           	dec hl
 524+ 99A3 10 F8        	djnz 4B
 525+ 99A5 06 0F        6 ld b,15
 526+ 99A7 CD E9 99     5 call PreviousScan
 527+ 99AA 10 FB        	djnz 5B
 528+ 99AC 18 0A        	jr 7F
 529+ 99AE
 530+ 99AE              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99AE
 532+ 99AE CD C2 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B1 06 0F        	ld b,15
 534+ 99B3 CD E9 99     8 call PreviousScan
 535+ 99B6 10 FB        	djnz 8B
 536+ 99B8
 537+ 99B8 E5           7 push hl
 538+ 99B9 DD E1        	pop ix
 539+ 99BB
 540+ 99BB 2A 00 8C     	ld hl,(Puntero_objeto)
 541+ 99BE E5           	push hl
 542+ 99BF FD E1        	pop iy
 543+ 99C1
 544+ 99C1 C9           	ret
 545+ 99C2
 546+ 99C2              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C2              ;
 548+ 99C2              ;	2/1/23
 549+ 99C2              ;
 550+ 99C2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C2              ;
 552+ 99C2              ;	Tras esta rutina tenemos:
 553+ 99C2              ;
 554+ 99C2              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C2              ;
 557+ 99C2              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C2
 559+ 99C2 2A FE 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C5 3A 0E 8C     	ld a,(Columnas)
 561+ 99C8 3D           	dec a
 562+ 99C9 20 01        	jr nz,1F
 563+ 99CB 3C           	inc a
 564+ 99CC 47           1 ld b,a
 565+ 99CD C9           	ret
 566+ 99CE
 567+ 99CE              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99CE              ;
 569+ 99CE              ;	Prepara_draw
 570+ 99CE              ;
 571+ 99CE              ;	Es una rutina de carga.
 572+ 99CE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99CE              ;
 574+ 99CE              ;	FUNCIONAMIENTO:
 575+ 99CE              ;
 576+ 99CE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99CE              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99CE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99CE              ;
 580+ 99CE              ;	DESTRUYE:
 581+ 99CE              ;
 582+ 99CE              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99CE
 584+ 99CE 21 FC 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D3 4E           	ld c,(hl)
 588+ 99D4 2A FE 8B     	ld hl,(Posicion_actual)
 589+ 99D7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99D9 C9           	ret
 591+ 99DA
 592+ 99DA              ;----------------------------------------------------------------------------------------------------------------
 593+ 99DA              ;
 594+ 99DA              ;	5/08/22
 595+ 99DA              ;
 596+ 99DA              ;   NextScan.
 597+ 99DA              ;
 598+ 99DA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99DA              ;
 600+ 99DA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99DA              ;
 602+ 99DA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99DA              ;
 604+ 99DA              ;       DESTRUIDOS: AF y HL !!!
 605+ 99DA              ;
 606+ 99DA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99DA              ;
 608+ 99DA
 609+ 99DA 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99DB 7C               ld a,h
 611+ 99DC E6 07            and 7
 612+ 99DE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99DF
 614+ 99DF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99E0 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E2 6F               ld l,a
 617+ 99E3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E4
 619+ 99E4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99E7 67               ld h,a
 622+ 99E8 C9               ret
 623+ 99E9
 624+ 99E9              ;----------------------------------------------------------------------------------------------------------------
 625+ 99E9              ;
 626+ 99E9              ;	5/08/22
 627+ 99E9              ;
 628+ 99E9              ;   PreviousScan.
 629+ 99E9              ;
 630+ 99E9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99E9              ;
 632+ 99E9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99E9              ;
 634+ 99E9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99E9              ;
 636+ 99E9              ;       DESTRUIDOS: AF y HL !!!
 637+ 99E9              ;
 638+ 99E9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99E9              ;
 640+ 99E9
 641+ 99E9 7C           PreviousScan ld a,h
 642+ 99EA 25               dec h               ; Dec H.
 643+ 99EB E6 07            and 7
 644+ 99ED C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99EE
 646+ 99EE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99EF D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F1 6F               ld l,a
 649+ 99F2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F3
 651+ 99F3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F6 67               ld h,a
 654+ 99F7 C9               ret
 655+ 99F8
 656+ 99F8
 657+ 99F8
 658+ 99F8
 659+ 99F8
 660+ 99F8
 661+ 99F8
 662+ 99F8
 663+ 99F8
 664+ 99F8
 665+ 99F8
 666+ 99F8
# file closed: Draw_XOR.asm
2119  99F8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99F8
   2+ 99F8              ; ******************************************************************************************************************************************************************************************
   3+ 99F8              ;
   4+ 99F8              ;   20/05/23
   5+ 99F8              ;
   6+ 99F8              ;	Recompone_posicion_inicio
   7+ 99F8              ;
   8+ 99F8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99F8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99F8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99F8              ;	_ a una u otra rutina.
  12+ 99F8
  13+ 99F8              Recompone_posicion_inicio
  14+ 99F8
  15+ 99F8 2A 0B 8C     	ld hl,(Posicion_inicio)
  16+ 99FB 7D           	ld a,l
  17+ 99FC E6 1F        	and $1f
  18+ 99FE 28 16        	jr z,1F
  19+ 9A00
  20+ 9A00 FE 1F        	cp $1f
  21+ 9A02 28 0D        	jr z,3F
  22+ 9A04
  23+ 9A04 21 FA 8B     	ld hl,Ctrl_2
  24+ 9A07 CB C6        	set 0,(hl)
  25+ 9A09 2A 00 8C     	ld hl,(Puntero_objeto)
  26+ 9A0C 22 2C 8C     	ld (Repone_puntero_objeto),hl
  27+ 9A0F 18 08        	jr 2F
  28+ 9A11
  29+ 9A11 CD BF 9B     3 call Mov_left
  30+ 9A14 18 03        	jr 2F
  31+ 9A16
  32+ 9A16 CD 9C 9A     1 call Mov_right
  33+ 9A19 21 80 F8     2 ld hl,Sprite_vacio
  34+ 9A1C 22 00 8C     	ld (Puntero_objeto),hl
  35+ 9A1F C9           	ret
  36+ 9A20
  37+ 9A20              ; ******************************************************************************************************************************************************************************************
  38+ 9A20              ;
  39+ 9A20              ;   27/05/23
  40+ 9A20              ;
  41+ 9A20              ;	Mov_down
  42+ 9A20              ;
  43+ 9A20              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A20              ;
  45+ 9A20              ;
  46+ 9A20              Mov_down
  47+ 9A20
  48+ 9A20 CD 8A 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A23              ;																	; _ repone (Puntero_objeto).
  50+ 9A23 21 FB 8B     	ld hl,Ctrl_0
  51+ 9A26 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A28              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A28              ; 																	; _ en el caso de que no lo haya.
  54+ 9A28 3A 16 8C     	ld a,(Vel_down)
  55+ 9A2B 47           	ld b,a
  56+ 9A2C 2A FE 8B         ld hl,(Posicion_actual)
  57+ 9A2F CD C2 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A32 E6 02        	and 2
  59+ 9A34 28 17        	jr z,1F
  60+ 9A36
  61+ 9A36              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A36              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A36
  64+ 9A36 7C           	ld a,h
  65+ 9A37 FE 57        	cp $57
  66+ 9A39 20 12        	jr nz,1F
  67+ 9A3B
  68+ 9A3B 7D           	ld a,l
  69+ 9A3C C6 20        	add $20
  70+ 9A3E 30 0D        	jr nc,1F
  71+ 9A40
  72+ 9A40              ; ------------------------------
  73+ 9A40              ;
  74+ 9A40              ;	12/01/24
  75+ 9A40
  76+ 9A40              ;	call Reaparece_arriba
  77+ 9A40 CD 4C 9D     	call Reinicio
  78+ 9A43
  79+ 9A43              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A43
  81+ 9A43 3A 65 8C     	ld a,(Ctrl_3)
  82+ 9A46 CB CF        	set 1,a
  83+ 9A48 32 65 8C     	ld (Ctrl_3),a
  84+ 9A4B
  85+ 9A4B 18 08        	jr 3F
  86+ 9A4D              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A4D              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A4D              ; ------------------------------
  89+ 9A4D
  90+ 9A4D CD DA 99     1 call NextScan
  91+ 9A50 22 FE 8B     	ld (Posicion_actual),hl
  92+ 9A53 10 DA            djnz 2B
  93+ 9A55 CD E0 94     3 call Genera_coordenadas
  94+ 9A58 C9           	ret
  95+ 9A59
  96+ 9A59              ; ******************************************************************************************************************************************************************************************
  97+ 9A59              ;
  98+ 9A59              ;   27/05/23
  99+ 9A59              ;
 100+ 9A59              ;	Mov_up
 101+ 9A59              ;
 102+ 9A59              ; 	Mueve el Sprite hacia arriba.
 103+ 9A59              ;
 104+ 9A59              ;
 105+ 9A59              Mov_up
 106+ 9A59
 107+ 9A59 CD 8A 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A5C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A5C 21 FB 8B     	ld hl,Ctrl_0
 110+ 9A5F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A61              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A61              ; 																		; _ en el caso de que no lo haya.
 113+ 9A61 3A 15 8C     	ld a,(Vel_up)
 114+ 9A64 47           	ld b,a
 115+ 9A65 2A FE 8B     	ld hl,(Posicion_actual)
 116+ 9A68 CD C2 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A6B A7           	and a
 118+ 9A6C 20 10        	jr nz,1F
 119+ 9A6E
 120+ 9A6E              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A6E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A6E
 123+ 9A6E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A6F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A71 20 0B            jr nz,1F
 126+ 9A73 7D               ld a,l
 127+ 9A74 D6 20            sub $20
 128+ 9A76 30 06            jr nc,1F
 129+ 9A78 25               dec h
 130+ 9A79
 131+ 9A79              ; -----------------------------
 132+ 9A79 CD 2D 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A7C              ;	call Reinicio
 134+ 9A7C              ; -----------------------------
 135+ 9A7C
 136+ 9A7C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A7E CD E9 99     1 call PreviousScan
 138+ 9A81 22 FE 8B     	ld (Posicion_actual),hl
 139+ 9A84 10 E2            djnz 3B
 140+ 9A86 CD E0 94     2 call Genera_coordenadas
 141+ 9A89 C9           	ret
 142+ 9A8A
 143+ 9A8A              ; -----------------------------
 144+ 9A8A              ;
 145+ 9A8A              ;	27/5/23
 146+ 9A8A              ;
 147+ 9A8A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A8A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A8A              ;
 150+ 9A8A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A8A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A8A              ;
 153+ 9A8A              ;	Modifica: A y (Puntero_objeto).
 154+ 9A8A
 155+ 9A8A 3A FA 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A8D CB 47        	bit 0,a
 157+ 9A8F C8           	ret z
 158+ 9A90 CB 87        	res 0,a
 159+ 9A92 32 FA 8B     	ld (Ctrl_2),a
 160+ 9A95 2A 2C 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A98 22 00 8C     	ld (Puntero_objeto),hl
 162+ 9A9B C9           	ret
 163+ 9A9C
 164+ 9A9C              ; ******************************************************************************************************************************************************************************************
 165+ 9A9C              ;
 166+ 9A9C              ;	19/10/22
 167+ 9A9C              ;
 168+ 9A9C              ;	Mov_right.
 169+ 9A9C              ;
 170+ 9A9C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A9C              ;
 172+ 9A9C
 173+ 9A9C 3A FB 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A9F CB 77        	bit 6,a
 175+ 9AA1 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA3
 177+ 9AA3 CD DB 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA6 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AA7
 180+ 9AA7 21 FB 8B     	ld hl,Ctrl_0
 181+ 9AAA CB E6        	set 4,(hl)
 182+ 9AAC 18 52        	jr 8F
 183+ 9AAE
 184+ 9AAE 21 FB 8B     10 ld hl,Ctrl_0
 185+ 9AB1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB3              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB3 3A EF 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB6 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AB8 20 46        	jr nz,8F
 191+ 9ABA
 192+ 9ABA 3A 02 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9ABD A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9ABE 28 40        	jr z,8F
 195+ 9AC0
 196+ 9AC0              ; ---------- ---------- ----------
 197+ 9AC0              ;
 198+ 9AC0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AC0
 200+ 9AC0 3A 14 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC5 28 11        	jr z,1F
 203+ 9AC7 38 06        	jr c,6F
 204+ 9AC9 FE 04        	cp 4
 205+ 9ACB 28 14        	jr z,7F
 206+ 9ACD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9ACF
 208+ 9ACF              ; ---------- ---------- ----------
 209+ 9ACF              ;
 210+ 9ACF              ; Perfiles de velocidad
 211+ 9ACF              ;
 212+ 9ACF
 213+ 9ACF 3A 02 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD2 FE FE        	cp $fe
 215+ 9AD4 20 2A        	jr nz,8F
 216+ 9AD6 18 10        	jr 3F
 217+ 9AD8 3A 02 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ADB FE FD        	cp $fd
 219+ 9ADD 20 21        	jr nz,8F
 220+ 9ADF 18 07        	jr 3F
 221+ 9AE1 3A 02 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE4 FE FB        	cp $fb
 223+ 9AE6 20 18        	jr nz,8F
 224+ 9AE8
 225+ 9AE8              ; ---------- ---------- ----------
 226+ 9AE8
 227+ 9AE8              3
 228+ 9AE8 CD 1B 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AEB              ;	call Reinicio
 230+ 9AEB
 231+ 9AEB              ; ---------- ---------- ----------
 232+ 9AEB              ;
 233+ 9AEB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AEB
 235+ 9AEB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AED C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AEE CD 07 9B     	call DESPLZ_DER
 238+ 9AF1 C1           	pop bc
 239+ 9AF2 10 F9        	djnz 5B
 240+ 9AF4 2A FE 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AF7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AF8 22 FE 8B     	ld (Posicion_actual),hl
 243+ 9AFB CD E0 94     	call Genera_coordenadas
 244+ 9AFE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B00
 246+ 9B00              ; ---------- ---------- ----------
 247+ 9B00
 248+ 9B00 2A FE 8B     8 ld hl,(Posicion_actual)
 249+ 9B03 CD 07 9B     	call DESPLZ_DER
 250+ 9B06 C9           2 ret
 251+ 9B07
 252+ 9B07              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B07              ;
 254+ 9B07              ;	22/9/22
 255+ 9B07              ;
 256+ 9B07
 257+ 9B07 CD 16 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B0A CD 62 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B0D CD 8B 9B         call Ciclo_completo
 260+ 9B10 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B13 CB FE        	set 7,(hl)
 262+ 9B15 C9           	ret
 263+ 9B16
 264+ 9B16              ; ******************************************************************************************************************************************************************************************
 265+ 9B16              ;	15/02/23
 266+ 9B16              ;
 267+ 9B16
 268+ 9B16 3A 14 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9B19 47           	ld b,a
 270+ 9B1A 2A 07 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B1D 23           1 inc hl
 272+ 9B1E 23           	inc hl
 273+ 9B1F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B21 22 07 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B24 CD 18 91     	call Extrae_address
 276+ 9B27 22 00 8C     	ld (Puntero_objeto),hl
 277+ 9B2A
 278+ 9B2A              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B2A
 280+ 9B2A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B2A              ; Cuántos movimientos hemos hecho ??
 282+ 9B2A              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B2A
 284+ 9B2A 2A 03 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B2D EB           	ex de,hl
 286+ 9B2E A7           	and a
 287+ 9B2F ED 52        	sbc hl,de
 288+ 9B31 CB 3D        	srl l
 289+ 9B33 3E 08        6 ld a,8
 290+ 9B35 95           	sub l
 291+ 9B36 30 1E        	jr nc,3F
 292+ 9B38
 293+ 9B38              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B38              ; B="0".
 295+ 9B38
 296+ 9B38 04           4 inc b
 297+ 9B39 3C           	inc a
 298+ 9B3A 20 FC        	jr nz,4B
 299+ 9B3C 78           	ld a,b
 300+ 9B3D 08           	ex af,af
 301+ 9B3E 2A 03 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B41 23           5 inc hl
 303+ 9B42 23           	inc hl
 304+ 9B43 10 FC        	djnz 5B
 305+ 9B45 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B48 CD 18 91     	call Extrae_address
 307+ 9B4B 22 00 8C     	ld (Puntero_objeto),hl
 308+ 9B4E
 309+ 9B4E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B4E              ; _(Posicion_actual).
 311+ 9B4E
 312+ 9B4E 21 FE 8B     	ld hl,Posicion_actual
 313+ 9B51 34           	inc (hl)
 314+ 9B52 08               ex af,af
 315+ 9B53 6F           	ld l,a
 316+ 9B54 18 DD        	jr 6B
 317+ 9B56
 318+ 9B56              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B56
 320+ 9B56 47           3 ld b,a
 321+ 9B57 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B5A 23           2 inc hl
 323+ 9B5B 23           	inc hl
 324+ 9B5C 10 FC        	djnz 2B
 325+ 9B5E 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B61 C9           8 ret
 327+ 9B62
 328+ 9B62              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B62              ;
 330+ 9B62              ;	24/7/22
 331+ 9B62              ;
 332+ 9B62              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B62              ;
 334+ 9B62              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B62              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B62              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B62
 338+ 9B62 3A 02 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B65 A7           	and a
 340+ 9B66 20 1F        	jr nz,1F
 341+ 9B68 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B6A 32 02 8C         ld (CTRL_DESPLZ),a
 343+ 9B6D
 344+ 9B6D 21 FD 8B     	ld hl,Columns
 345+ 9B70 34           	inc (hl)
 346+ 9B71 3A 0D 8C     	ld a,(Cuad_objeto)
 347+ 9B74 E6 01        	and 1
 348+ 9B76 28 0F        	jr z,1F
 349+ 9B78 2A FE 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B7B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B7C 22 FE 8B     	ld (Posicion_actual),hl
 352+ 9B7F CD E0 94     	call Genera_coordenadas
 353+ 9B82 CD E7 9C     	call Inc_CTRL_DESPLZ
 354+ 9B85 18 03        	jr 2F
 355+ 9B87 CD E7 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B8A C9           2 ret
 357+ 9B8B
 358+ 9B8B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B8B              ;
 360+ 9B8B              ;	24/7/22
 361+ 9B8B              ;
 362+ 9B8B              ;	Ciclo_completo.
 363+ 9B8B              ;
 364+ 9B8B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B8B              ;
 366+ 9B8B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B8B              ; 	Decrementamos (Columns).
 368+ 9B8B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B8B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B8B
 371+ 9B8B
 372+ 9B8B 3A 02 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B8E FE FF        	cp $ff
 374+ 9B90 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B92 E6 F0        	and $f0
 376+ 9B94 20 28        	jr nz,3F
 377+ 9B96
 378+ 9B96              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B96
 380+ 9B96 3A 02 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B99 47           	ld b,a
 382+ 9B9A 3E F8        	ld a,$f8
 383+ 9B9C 80           	add b
 384+ 9B9D 32 02 8C     	ld (CTRL_DESPLZ),a
 385+ 9BA0 18 1C        	jr 3F
 386+ 9BA2 21 FD 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BA7 32 02 8C     	ld (CTRL_DESPLZ),a
 390+ 9BAA 3A 0D 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BAD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BAF 20 0A        	jr nz,2F
 393+ 9BB1 2A FE 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB4 23           	inc hl
 395+ 9BB5 22 FE 8B     	ld (Posicion_actual),hl
 396+ 9BB8 CD E0 94     	call Genera_coordenadas
 397+ 9BBB
 398+ 9BBB              ; Inicia el puntero de Sprite.
 399+ 9BBB
 400+ 9BBB CD 2D 91     2 call Inicia_puntero_objeto_der
 401+ 9BBE C9           3 ret
 402+ 9BBF
 403+ 9BBF              ; ******************************************************************************************************************************************************************************************
 404+ 9BBF              ;
 405+ 9BBF              ;	15/02/23
 406+ 9BBF              ;
 407+ 9BBF              ;	Mov_left.
 408+ 9BBF              ;
 409+ 9BBF              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BBF              ;
 411+ 9BBF              Mov_left
 412+ 9BBF
 413+ 9BBF 21 FB 8B     	ld hl,Ctrl_0
 414+ 9BC2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC4              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC4 3A FB 8B     	ld a,(Ctrl_0)
 418+ 9BC7 CB 77        	bit 6,a
 419+ 9BC9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BCB
 421+ 9BCB CD E1 9C     	call Stop_Amadeus_left
 422+ 9BCE C8           	ret z
 423+ 9BCF 20 4A        	jr nz,8F
 424+ 9BD1
 425+ 9BD1 3A EF 8B     11 ld a,(Coordenada_X)
 426+ 9BD4 A7           	and a
 427+ 9BD5 20 44        	jr nz,8F
 428+ 9BD7
 429+ 9BD7 3A 02 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BDA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BDB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BDD
 433+ 9BDD              ; ---------- ---------- ----------
 434+ 9BDD
 435+ 9BDD 3A 13 8C     	ld a,(Vel_left)
 436+ 9BE0 FE 02        	cp 2
 437+ 9BE2 28 0F        	jr z,1F
 438+ 9BE4 38 04        	jr c,6F
 439+ 9BE6 FE 04        	cp 4
 440+ 9BE8 28 12        	jr z,7F
 441+ 9BEA
 442+ 9BEA              ; ---------- ---------- ----------
 443+ 9BEA
 444+ 9BEA 3A 02 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BED FE F8        	cp $f8
 446+ 9BEF 20 2A        	jr nz,8F
 447+ 9BF1 18 10        	jr 4F
 448+ 9BF3 3A 02 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BF6 FE F9        	cp $f9
 450+ 9BF8 20 21        	jr nz,8F
 451+ 9BFA 18 07        	jr 4F
 452+ 9BFC 3A 02 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BFF FE FB        	cp $fb
 454+ 9C01 20 18        	jr nz,8F
 455+ 9C03
 456+ 9C03              ; ---------- ---------- ----------
 457+ 9C03
 458+ 9C03              4
 459+ 9C03 CD 09 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C06              ;	call Reinicio
 461+ 9C06
 462+ 9C06              ; ---------- ---------- ----------
 463+ 9C06
 464+ 9C06 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C08 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C09
 467+ 9C09              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C09              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C09
 470+ 9C09 CD 22 9C     	call DESPLZ_IZQ
 471+ 9C0C C1           	pop bc
 472+ 9C0D 10 F9        	djnz 5B
 473+ 9C0F 2A FE 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C12 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C13 22 FE 8B     	ld (Posicion_actual),hl
 476+ 9C16 CD E0 94     	call Genera_coordenadas
 477+ 9C19 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C1B
 479+ 9C1B              ; ---------- ---------- ----------
 480+ 9C1B
 481+ 9C1B              ; Movemos, no hay recolocación.
 482+ 9C1B
 483+ 9C1B 2A FE 8B     8 ld hl,(Posicion_actual)
 484+ 9C1E CD 22 9C     	call DESPLZ_IZQ
 485+ 9C21 C9           2 ret
 486+ 9C22
 487+ 9C22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C22              ;
 489+ 9C22              ;	22/9/22
 490+ 9C22
 491+ 9C22              DESPLZ_IZQ
 492+ 9C22
 493+ 9C22 CD 31 9C     	call Desplaza_izquierda
 494+ 9C25 CD 7D 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C28 CD A5 9C     	call Ciclo_completo_2
 496+ 9C2B 21 FB 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C2E CB BE        	res 7,(hl)
 498+ 9C30 C9           	ret
 499+ 9C31
 500+ 9C31              Desplaza_izquierda
 501+ 9C31
 502+ 9C31 3A 13 8C     	ld a,(Vel_left)
 503+ 9C34 47           	ld b,a
 504+ 9C35 2A 09 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C38 23           1 inc hl
 506+ 9C39 23           	inc hl
 507+ 9C3A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C3C 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C3F CD 18 91     	call Extrae_address
 510+ 9C42 22 00 8C     	ld (Puntero_objeto),hl
 511+ 9C45
 512+ 9C45              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C45
 514+ 9C45              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C45              ; Cuántos movimientos hemos hecho ??
 516+ 9C45              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C45
 518+ 9C45 2A 05 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C48 EB           	ex de,hl
 520+ 9C49 A7           	and a
 521+ 9C4A ED 52        	sbc hl,de
 522+ 9C4C CB 3D        	srl l
 523+ 9C4E 3E 08        6 ld a,8
 524+ 9C50 95           	sub l
 525+ 9C51 30 1E        	jr nc,3F
 526+ 9C53
 527+ 9C53              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C53              ; B="0".
 529+ 9C53
 530+ 9C53 04           4 inc b
 531+ 9C54 3C           	inc a
 532+ 9C55 20 FC        	jr nz,4B
 533+ 9C57 78           	ld a,b
 534+ 9C58 08           	ex af,af
 535+ 9C59 2A 05 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C5C 23           5 inc hl
 537+ 9C5D 23           	inc hl
 538+ 9C5E 10 FC        	djnz 5B
 539+ 9C60 22 09 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C63 CD 18 91     	call Extrae_address
 541+ 9C66 22 00 8C     	ld (Puntero_objeto),hl
 542+ 9C69
 543+ 9C69              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C69              ; _(Posicion_actual).
 545+ 9C69
 546+ 9C69 21 FE 8B     	ld hl,Posicion_actual
 547+ 9C6C 35           	dec (hl)
 548+ 9C6D 08           	ex af,af
 549+ 9C6E 6F           	ld l,a
 550+ 9C6F 18 DD        	jr 6B
 551+ 9C71
 552+ 9C71              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C71
 554+ 9C71 47           3 ld b,a
 555+ 9C72 2A 03 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C75 23           2 inc hl
 557+ 9C76 23           	inc hl
 558+ 9C77 10 FC        	djnz 2B
 559+ 9C79 22 07 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C7C C9           8 ret
 561+ 9C7D
 562+ 9C7D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C7D              ;
 564+ 9C7D              ;	modifica_parametros_1er_DESPLZ
 565+ 9C7D              ;
 566+ 9C7D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C7D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C7D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C7D
 570+ 9C7D 3A 02 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C80 A7           	and a
 572+ 9C81 20 1E        	jr nz,1F
 573+ 9C83 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C84 32 02 8C         ld (CTRL_DESPLZ),a
 575+ 9C87 21 FD 8B     	ld hl,Columns
 576+ 9C8A 34           	inc (hl)
 577+ 9C8B 3A 0D 8C     	ld a,(Cuad_objeto)
 578+ 9C8E E6 01        	and 1
 579+ 9C90 20 0F        	jr nz,1F
 580+ 9C92 2A FE 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C95 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C96 22 FE 8B     	ld (Posicion_actual),hl
 583+ 9C99 CD E0 94     	call Genera_coordenadas
 584+ 9C9C CD F8 9C     	call Dec_CTRL_DESPLZ
 585+ 9C9F 18 03        	jr 2F
 586+ 9CA1 CD F8 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA4 C9           2 ret
 588+ 9CA5
 589+ 9CA5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA5
 591+ 9CA5 3A 02 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CA8 FE F7        	cp $f7
 593+ 9CAA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CAC 30 2C        	jr nc,3F
 595+ 9CAE
 596+ 9CAE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CAE
 598+ 9CAE 06 00        	ld b,0
 599+ 9CB0 04           4 inc b
 600+ 9CB1 3C           	inc a
 601+ 9CB2 FE F7        	cp $f7
 602+ 9CB4 20 FA        	jr nz,4B
 603+ 9CB6 3E FF        	ld a,$ff
 604+ 9CB8 90           	sub b
 605+ 9CB9 32 02 8C     	ld (CTRL_DESPLZ),a
 606+ 9CBC 18 1C        	jr 3F
 607+ 9CBE
 608+ 9CBE              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CBE
 610+ 9CBE 21 FD 8B     1 ld hl,Columns
 611+ 9CC1 35           	dec (hl)
 612+ 9CC2 AF           	xor a
 613+ 9CC3 32 02 8C     	ld (CTRL_DESPLZ),a
 614+ 9CC6 3A 0D 8C     	ld a,(Cuad_objeto)
 615+ 9CC9 E6 01        	and 1
 616+ 9CCB 28 0A        	jr z,2F
 617+ 9CCD 2A FE 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CD0 2B           	dec hl
 619+ 9CD1 22 FE 8B     	ld (Posicion_actual),hl
 620+ 9CD4 CD E0 94     	call Genera_coordenadas
 621+ 9CD7
 622+ 9CD7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CD7
 624+ 9CD7 CD 40 91     2 call Inicia_puntero_objeto_izq
 625+ 9CDA C9           3 ret
 626+ 9CDB
 627+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CDB              ;
 629+ 9CDB              ;	19/10/22
 630+ 9CDB              ;
 631+ 9CDB              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CDB              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CDB
 634+ 9CDB 3A EF 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CDE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CE0 C9           	ret
 637+ 9CE1
 638+ 9CE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE1              ;
 640+ 9CE1              ;	19/10/22
 641+ 9CE1              ;
 642+ 9CE1              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE1              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE1
 645+ 9CE1 3A EF 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE6 C9           	ret
 648+ 9CE7
 649+ 9CE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CE7              ;
 651+ 9CE7              ;	24/7/22
 652+ 9CE7              ;
 653+ 9CE7              ;	Inc_CTRL_DESPLZ
 654+ 9CE7              ;
 655+ 9CE7              ;
 656+ 9CE7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CE7
 658+ 9CE7 21 02 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CEA 3A 14 8C     	ld a,(Vel_right)
 660+ 9CED A7           	and a
 661+ 9CEE 28 06        	jr z,1F
 662+ 9CF0 47           	ld b,a
 663+ 9CF1 34           3 inc (hl)
 664+ 9CF2 10 FD        	djnz 3B
 665+ 9CF4 18 01        	jr 2F
 666+ 9CF6 34           1 inc (hl)
 667+ 9CF7 C9           2 ret
 668+ 9CF8
 669+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CF8              ;
 671+ 9CF8              ;	5/2/23
 672+ 9CF8              ;
 673+ 9CF8              ;	Dec_CTRL_DESPLZ
 674+ 9CF8              ;
 675+ 9CF8              ;
 676+ 9CF8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CF8
 678+ 9CF8 21 02 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CFB 3A 13 8C     	ld a,(Vel_left)
 680+ 9CFE A7           	and a
 681+ 9CFF 28 06        	jr z,1F
 682+ 9D01 47           	ld b,a
 683+ 9D02 35           3 dec (hl)
 684+ 9D03 10 FD        	djnz 3B
 685+ 9D05 18 01        	jr 2F
 686+ 9D07 35           1 dec (hl)
 687+ 9D08 C9           2 ret
 688+ 9D09
 689+ 9D09              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D09
 691+ 9D09 2A FE 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D0C 01 1F 00     	ld bc,31
 693+ 9D0F A7           	and a
 694+ 9D10 ED 4A        	adc hl,bc
 695+ 9D12 22 FE 8B     	ld (Posicion_actual),hl
 696+ 9D15 21 FB 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D18 CB C6        	set 0,(hl)
 698+ 9D1A C9           	ret
 699+ 9D1B
 700+ 9D1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D1B
 702+ 9D1B 2A FE 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D1E 01 1F 00     	ld bc,31
 704+ 9D21 A7           	and a
 705+ 9D22 ED 42        	sbc hl,bc
 706+ 9D24 22 FE 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D27 21 FB 8B     	ld hl,Ctrl_0
 708+ 9D2A CB CE        	set 1,(hl)
 709+ 9D2C C9           	ret
 710+ 9D2D
 711+ 9D2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D2D
 713+ 9D2D 24           Reaparece_abajo inc h
 714+ 9D2E 01 E0 17     	ld bc,$17e0
 715+ 9D31 A7           	and a
 716+ 9D32 ED 4A        	adc hl,bc
 717+ 9D34 22 FE 8B     	ld (Posicion_actual),hl
 718+ 9D37 21 FB 8B     	ld hl,Ctrl_0
 719+ 9D3A CB D6        	set 2,(hl)
 720+ 9D3C C9           	ret
 721+ 9D3D
 722+ 9D3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D3D
 724+ 9D3D 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D40 A7           	and a
 726+ 9D41 ED 42        	sbc hl,bc
 727+ 9D43 22 FE 8B     	ld (Posicion_actual),hl
 728+ 9D46 21 FB 8B     	ld hl,Ctrl_0
 729+ 9D49 CB DE        	set 3,(hl)
 730+ 9D4B C9           	ret
 731+ 9D4C
 732+ 9D4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D4C              ;
 734+ 9D4C              ;	15/07/23
 735+ 9D4C
 736+ 9D4C              Reinicio
 737+ 9D4C
 738+ 9D4C              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D4C
 740+ 9D4C AF           	xor a
 741+ 9D4D 21 23 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D50 CD 6E 9D     	call Limpia_contenido_hl
 743+ 9D53
 744+ 9D53 21 FE 8B     	ld hl,Posicion_actual
 745+ 9D56 CD 6E 9D     	call Limpia_contenido_hl
 746+ 9D59
 747+ 9D59 CD 4D 93     	call Situa_Puntero_indice_mov
 748+ 9D5C CD 6D 9E     	call Inicia_Puntero_mov
 749+ 9D5F
 750+ 9D5F 21 25 8C     	ld hl,Incrementa_puntero
 751+ 9D62 06 05        	ld b,5
 752+ 9D64 77           1 ld (hl),a
 753+ 9D65 23           	inc hl
 754+ 9D66 10 FC        	djnz 1B
 755+ 9D68
 756+ 9D68 21 FA 8B     	ld hl,Ctrl_2
 757+ 9D6B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D6D
 759+ 9D6D C9           	ret
 760+ 9D6E
 761+ 9D6E 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D6F 23           	inc hl
 763+ 9D70 77           	ld (hl),a
 764+ 9D71 C9           	ret
 765+ 9D72
 766+ 9D72              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D72              ;
 768+ 9D72              ;	18/6/24
 769+ 9D72              ;
 770+ 9D72
 771+ 9D72              Amadeus_a_izquierda
 772+ 9D72
 773+ 9D72              ;	Actualiza contador de movimientos.
 774+ 9D72
 775+ 9D72 21 C0 89     	ld hl,Comm_Amadeus
 776+ 9D75 35           	dec (hl)
 777+ 9D76 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D78
 779+ 9D78 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D7B 2B           	dec hl
 781+ 9D7C 2B           	dec hl
 782+ 9D7D 2B           	dec hl
 783+ 9D7E 2B           	dec hl
 784+ 9D7F 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D82
 786+ 9D82 21 65 8C     	ld hl,Ctrl_3
 787+ 9D85 CB EE        	set 5,(hl)
 788+ 9D87
 789+ 9D87 C9           	ret
 790+ 9D88
 791+ 9D88 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D89 C9           	ret
 793+ 9D8A
 794+ 9D8A
 795+ 9D8A              Amadeus_a_derecha
 796+ 9D8A
 797+ 9D8A              ;	Actualiza contador de movimientos.
 798+ 9D8A
 799+ 9D8A 21 C0 89     	ld hl,Comm_Amadeus
 800+ 9D8D 34           	inc (hl)
 801+ 9D8E 3E 7A        	ld a,$7a
 802+ 9D90 BE           	cp (hl)
 803+ 9D91 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D93
 805+ 9D93 2A BE 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D96 23           	inc hl
 807+ 9D97 23           	inc hl
 808+ 9D98 23           	inc hl
 809+ 9D99 23           	inc hl
 810+ 9D9A 22 BE 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D9D
 812+ 9D9D 21 65 8C     	ld hl,Ctrl_3
 813+ 9DA0 CB EE        	set 5,(hl)
 814+ 9DA2 C9           	ret
 815+ 9DA3
 816+ 9DA3 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA4 C9           	ret
# file closed: Direcciones.asm
2120  9DA5              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA5              ; ----- ----- ----- ----- -----
   2+ 9DA5              ;
   3+ 9DA5              ;   28/12/23
   4+ 9DA5
   5+ 9DA5              Movimiento
   6+ 9DA5
   7+ 9DA5              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA5
   9+ 9DA5 3A FA 8B         ld a,(Ctrl_2)
  10+ 9DA8 CB 57            bit 2,a
  11+ 9DAA 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DAC
  13+ 9DAC 2A 21 8C         ld hl,(Puntero_mov)
  14+ 9DAF 7E               ld a,(hl)
  15+ 9DB0
  16+ 9DB0              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DB0
  18+ 9DB0              Inicia_desplazamiento.
  19+ 9DB0
  20+ 9DB0              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DB0
  22+ 9DB0 CD A3 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB3
  24+ 9DB3              ; Iniciamos (Repetimos_mov).
  25+ 9DB3
  26+ 9DB3 7E               ld a,(hl)
  27+ 9DB4 E6 0F            and $0f
  28+ 9DB6 32 27 8C         ld (Repetimos_desplazamiento),a
  29+ 9DB9 32 28 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9DBC
  31+ 9DBC              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DBC
  33+ 9DBC 23               inc hl
  34+ 9DBD 7E               ld a,(hl)
  35+ 9DBE 32 2A 8C         ld (Cola_de_desplazamiento),a
  36+ 9DC1 2B               dec hl
  37+ 9DC2
  38+ 9DC2 21 FA 8B         ld hl,Ctrl_2
  39+ 9DC5 CB D6            set 2,(hl)
  40+ 9DC7
  41+ 9DC7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DC7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DC7
  44+ 9DC7              Desplazamiento_iniciado
  45+ 9DC7
  46+ 9DC7 CD 77 9E         call Aplica_desplazamiento
  47+ 9DCA
  48+ 9DCA              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DCA
  50+ 9DCA 3A 65 8C         ld a,(Ctrl_3)
  51+ 9DCD CB 4F            bit 1,a
  52+ 9DCF C0               ret nz
  53+ 9DD0
  54+ 9DD0 21 27 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DD3 35               dec (hl)
  56+ 9DD4 C0               ret nz
  57+ 9DD5
  58+ 9DD5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD5              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD5              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD5
  62+ 9DD5 3A 2A 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DD8 A7               and a
  64+ 9DD9 CC CC 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DDC 28 30            jr z,Reinicia_el_movimiento
  66+ 9DDE
  67+ 9DDE FE FF            cp $ff
  68+ 9DE0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE2
  70+ 9DE2 FE FE            cp $fe
  71+ 9DE4 CC 51 9E         call z,Fijamos_bucle
  72+ 9DE7 28 25            jr z,Reinicia_el_movimiento
  73+ 9DE9
  74+ 9DE9 FE FD            cp $fd
  75+ 9DEB 20 11            jr nz,1F
  76+ 9DED
  77+ 9DED              ; ---
  78+ 9DED              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DED
  80+ 9DED 3A FA 8B         ld a,(Ctrl_2)
  81+ 9DF0 CB 5F            bit 3,a
  82+ 9DF2 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF4
  84+ 9DF4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF4
  86+ 9DF4 21 FA 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DF7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DF9
  89+ 9DF9 CD 62 9E         call Inicia_Repetimos_movimiento
  90+ 9DFC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DFE              ; ---
  92+ 9DFE
  93+ 9DFE FE 01        1 cp 1
  94+ 9E00 CA 3B 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E03
  96+ 9E03 3D               dec a
  97+ 9E04 32 2A 8C         ld (Cola_de_desplazamiento),a
  98+ 9E07
  99+ 9E07 3A 28 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E0A 32 27 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E0D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E0D C9               ret
 103+ 9E0E
 104+ 9E0E              Reinicia_el_movimiento
 105+ 9E0E
 106+ 9E0E 3A FA 8B         ld a,(Ctrl_2)
 107+ 9E11 CB 5F            bit 3,a
 108+ 9E13 28 1B            jr z,2F
 109+ 9E15
 110+ 9E15              ; (Cola_de_desplazamiento)="254".
 111+ 9E15
 112+ 9E15 21 29 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E18 35               dec (hl)
 114+ 9E19 20 15            jr nz,2F
 115+ 9E1B
 116+ 9E1B              ; Fin de las repeticiones del último movimiento.
 117+ 9E1B
 118+ 9E1B 21 FA 8B         ld hl,Ctrl_2
 119+ 9E1E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E20
 121+ 9E20 2A 21 8C         ld hl,(Puntero_mov)
 122+ 9E23 23               inc hl
 123+ 9E24 23               inc hl
 124+ 9E25 23               inc hl
 125+ 9E26 22 21 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E29              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E29 7E               ld a,(hl)
 128+ 9E2A 32 2A 8C         ld (Cola_de_desplazamiento),a
 129+ 9E2D
 130+ 9E2D C3 D5 9D         jp Cola
 131+ 9E30
 132+ 9E30 CD 6D 9E     2 call Inicia_Puntero_mov
 133+ 9E33
 134+ 9E33 21 FA 8B         ld hl,Ctrl_2
 135+ 9E36 CB 96            res 2,(hl)
 136+ 9E38
 137+ 9E38 C3 A5 9D         jp Movimiento
 138+ 9E3B
 139+ 9E3B              Siguiente_desplazamiento
 140+ 9E3B
 141+ 9E3B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E3B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E3B
 144+ 9E3B 21 FA 8B         ld hl,Ctrl_2
 145+ 9E3E CB 96            res 2,(hl)
 146+ 9E40
 147+ 9E40 2A 21 8C         ld hl,(Puntero_mov)
 148+ 9E43 23               inc hl
 149+ 9E44 23               inc hl
 150+ 9E45 22 21 8C         ld (Puntero_mov),hl
 151+ 9E48
 152+ 9E48 7E               ld a,(hl)
 153+ 9E49 A7               and a
 154+ 9E4A CC CC 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E4D CA 0E 9E         jp z,Reinicia_el_movimiento
 156+ 9E50
 157+ 9E50 C9               ret
 158+ 9E51
 159+ 9E51              ; Subrutinas -----------------------------------------
 160+ 9E51              ; ---------- --------- --------- ---------- ----------
 161+ 9E51              ;
 162+ 9E51              ;   24/07/23
 163+ 9E51              ;
 164+ 9E51              ;   Fijamos_bucle
 165+ 9E51              ;
 166+ 9E51              ;
 167+ 9E51
 168+ 9E51              Fijamos_bucle
 169+ 9E51
 170+ 9E51 3A 25 8C         ld a,(Incrementa_puntero)
 171+ 9E54 3C               inc a
 172+ 9E55 32 26 8C         ld (Incrementa_puntero_backup),a
 173+ 9E58
 174+ 9E58 CD CC 9E         call Incrementa_Puntero_indice_mov
 175+ 9E5B 2A 1F 8C         ld hl,(Puntero_indice_mov)
 176+ 9E5E 22 23 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E61 C9               ret
 178+ 9E62
 179+ 9E62              ; ---------- --------- --------- ---------- ----------
 180+ 9E62              ;
 181+ 9E62              ;   07/7/23
 182+ 9E62              ;
 183+ 9E62              ;   Inicia_Repetimos_movimiento
 184+ 9E62              ;
 185+ 9E62              ;
 186+ 9E62
 187+ 9E62              Inicia_Repetimos_movimiento
 188+ 9E62
 189+ 9E62              ; Iniciamos (Repetimos_movimiento).
 190+ 9E62
 191+ 9E62 DD 2A 21 8C      ld ix,(Puntero_mov)
 192+ 9E66 DD 7E 02         ld a,(ix+2)
 193+ 9E69 32 29 8C         ld (Repetimos_movimiento),a
 194+ 9E6C
 195+ 9E6C C9               ret
 196+ 9E6D
 197+ 9E6D              ; ---------- --------- --------- ---------- ----------
 198+ 9E6D              ;
 199+ 9E6D              ;   26/6/23
 200+ 9E6D              ;
 201+ 9E6D              ;   Inicia_Puntero_mov
 202+ 9E6D              ;
 203+ 9E6D              ;
 204+ 9E6D
 205+ 9E6D 2A 1F 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E70 CD 18 91         call Extrae_address
 207+ 9E73 22 21 8C         ld (Puntero_mov),hl
 208+ 9E76 C9               ret
 209+ 9E77
 210+ 9E77              ; ---------- --------- --------- ---------- ----------
 211+ 9E77              ;
 212+ 9E77              ;   27/06/23
 213+ 9E77              ;
 214+ 9E77              ;   Aplica_movimiento.
 215+ 9E77
 216+ 9E77              Aplica_desplazamiento
 217+ 9E77
 218+ 9E77              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E77
 220+ 9E77 2A 21 8C         ld hl, (Puntero_mov)
 221+ 9E7A
 222+ 9E7A 7E               ld a,(hl)
 223+ 9E7B E6 F0            and $f0
 224+ 9E7D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E7E
 226+ 9E7E CB 7E            bit 7,(hl)
 227+ 9E80 28 03            jr z,1F
 228+ 9E82 CD 59 9A         call Mov_up
 229+ 9E85 2A 21 8C     1 ld hl, (Puntero_mov)
 230+ 9E88 CB 76            bit 6,(hl)
 231+ 9E8A 28 03            jr z,2F
 232+ 9E8C CD 20 9A         call Mov_down
 233+ 9E8F
 234+ 9E8F              ; Se ha aplicado reinicio ???
 235+ 9E8F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E8F
 237+ 9E8F              ;    ld a,(Ctrl_3)
 238+ 9E8F              ;    bit 1,a
 239+ 9E8F              ;    ret nz
 240+ 9E8F
 241+ 9E8F 2A 21 8C     2 ld hl, (Puntero_mov)
 242+ 9E92 CB 6E            bit 5,(hl)
 243+ 9E94 28 03            jr z,3F
 244+ 9E96 CD BF 9B         call Mov_left
 245+ 9E99 2A 21 8C     3 ld hl, (Puntero_mov)
 246+ 9E9C CB 66            bit 4,(hl)
 247+ 9E9E C8               ret z
 248+ 9E9F CD 9C 9A         call Mov_right
 249+ 9EA2 C9               ret
 250+ 9EA3
 251+ 9EA3              ; ---------- --------- --------- ---------- ----------
 252+ 9EA3              ;
 253+ 9EA3              ;   26/06/23
 254+ 9EA3              ;
 255+ 9EA3              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA3
 257+ 9EA3              Ajusta_velocidad_desplazamiento
 258+ 9EA3
 259+ 9EA3              ; 1er byte de la cadena de movimiento.
 260+ 9EA3              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA3
 262+ 9EA3 CD C1 9E         call Extrae_nibble_alto
 263+ 9EA6
 264+ 9EA6 32 15 8C         ld (Vel_up),a
 265+ 9EA9 79               ld a,c
 266+ 9EAA E6 0F            and $0f
 267+ 9EAC 32 16 8C         ld (Vel_down),a
 268+ 9EAF
 269+ 9EAF              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EAF              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EAF
 272+ 9EAF 23               inc hl
 273+ 9EB0 CD C1 9E         call Extrae_nibble_alto
 274+ 9EB3
 275+ 9EB3 32 13 8C         ld (Vel_left),a
 276+ 9EB6 79               ld a,c
 277+ 9EB7 E6 0F            and $0f
 278+ 9EB9 32 14 8C         ld (Vel_right),a
 279+ 9EBC
 280+ 9EBC              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EBC
 282+ 9EBC 23               inc hl
 283+ 9EBD 22 21 8C         ld (Puntero_mov),hl
 284+ 9EC0 C9               ret
 285+ 9EC1
 286+ 9EC1 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC3 7E               ld a,(hl)
 288+ 9EC4 4F               ld c,a
 289+ 9EC5 E6 F0            and $f0
 290+ 9EC7 CB 3F        1 srl a
 291+ 9EC9 10 FC            djnz 1B
 292+ 9ECB C9               ret
 293+ 9ECC
 294+ 9ECC              ; ---------- --------- --------- ---------- ----------
 295+ 9ECC              ;
 296+ 9ECC              ;   5/7/23
 297+ 9ECC              ;
 298+ 9ECC              ;   Incrementa_Puntero_indice_mov
 299+ 9ECC
 300+ 9ECC              Incrementa_Puntero_indice_mov
 301+ 9ECC
 302+ 9ECC 21 25 8C         ld hl,Incrementa_puntero
 303+ 9ECF 34               inc (hl)
 304+ 9ED0
 305+ 9ED0 2A 1F 8C         ld hl,(Puntero_indice_mov)
 306+ 9ED3 01 02 00         ld bc,2
 307+ 9ED6 A7               and a
 308+ 9ED7 09               add hl,bc
 309+ 9ED8 22 1F 8C         ld (Puntero_indice_mov),hl
 310+ 9EDB
 311+ 9EDB 7E               ld a,(hl)
 312+ 9EDC A7               and a
 313+ 9EDD
 314+ 9EDD              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EDD
 316+ 9EDD              ;    jr z,$
 317+ 9EDD
 318+ 9EDD              ;! Reinicia el Patrón de movimiento.
 319+ 9EDD
 320+ 9EDD CC E2 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EE0
 322+ 9EE0 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE1
 324+ 9EE1 C9               ret
 325+ 9EE2
 326+ 9EE2              ; ---------- --------- --------- ---------- ----------
 327+ 9EE2              ;
 328+ 9EE2              ;   15/01/24
 329+ 9EE2              ;
 330+ 9EE2              ;   Inicializa_Puntero_indice_mov
 331+ 9EE2
 332+ 9EE2              Inicializa_Puntero_indice_mov_2
 333+ 9EE2
 334+ 9EE2              ; Existe etiqueta de bucle principal???
 335+ 9EE2
 336+ 9EE2 2A 23 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE5 24               inc h
 338+ 9EE6 25               dec h
 339+ 9EE7 28 05            jr z,2F
 340+ 9EE9
 341+ 9EE9 22 1F 8C         ld (Puntero_indice_mov),hl
 342+ 9EEC 18 14            jr 3F
 343+ 9EEE
 344+ 9EEE              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EEE
 346+ 9EEE 3A 25 8C     2 ld a,(Incrementa_puntero)
 347+ 9EF1 47               ld b,a
 348+ 9EF2
 349+ 9EF2 2A 1F 8C         ld hl,(Puntero_indice_mov)
 350+ 9EF5 2B           1 dec hl
 351+ 9EF6 2B               dec hl
 352+ 9EF7 10 FC            djnz 1B
 353+ 9EF9 22 1F 8C         ld (Puntero_indice_mov),hl
 354+ 9EFC
 355+ 9EFC AF               xor a
 356+ 9EFD 32 25 8C         ld (Incrementa_puntero),a
 357+ 9F00 18 06            jr 4F
 358+ 9F02
 359+ 9F02 3A 26 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9F05 32 25 8C         ld (Incrementa_puntero),a
 361+ 9F08 C9           4 ret
 362+ 9F09
 363+ 9F09              ; ----------------------------------------------------------------------
 364+ 9F09              ;
 365+ 9F09              ;   30/01/24
 366+ 9F09              ;
 367+ 9F09              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F09
 369+ 9F09 3A EE 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F0C CD 59 94         call Calcula_salto_en_BC
 371+ 9F0F 21 17 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F12 A7               and a
 373+ 9F13 ED 4A            adc hl,bc
 374+ 9F15 C9               ret
 375+ 9F16
 376+ 9F16              ; ----------------------------------------------------------------------
 377+ 9F16              ;
 378+ 9F16              ;   30/01/24
 379+ 9F16              ;
 380+ 9F16              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F16              ;
 382+ 9F16              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F16
 384+ 9F16 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F17 23               inc hl
 386+ 9F18 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F19 69               ld l,c
 388+ 9F1A 60               ld h,b
 389+ 9F1B 22 F7 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F1E C9               ret
 391+ 9F1F
# file closed: Movimiento.asm
2121  9F1F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F1F              ; --------------------------------------------------------------------------------------
   2+ 9F1F              ;
   3+ 9F1F              ;   25/10/24
   4+ 9F1F              ;
   5+ 9F1F
   6+ 9F1F              Pinta_disparos_Entidades
   7+ 9F1F
   8+ 9F1F ED 73 3D 8C      ld (Stack),sp
   9+ 9F23 ED 7B 4F 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F27
  11+ 9F27 3E 02            ld a,2
  12+ 9F29 08               ex af,af
  13+ 9F2A
  14+ 9F2A 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F2C              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F2C              ;                                     _ No encontraría "0".
  17+ 9F2C FD E1        4 pop iy
  18+ 9F2E D1               pop de                          ; 1er .db IYL
  19+ 9F2F              ;                                   ; 2º  .db IYH
  20+ 9F2F              ;                                   ; 3er .db E.
  21+ 9F2F              ;   Album vacío ???
  22+ 9F2F
  23+ 9F2F FD 7D            ld a,iyl
  24+ 9F31 FD 84            add iyh
  25+ 9F33 83               add e
  26+ 9F34 28 1F            jr z,1F
  27+ 9F36
  28+ 9F36              ;   Imprime album, (contiene datos).
  29+ 9F36
  30+ 9F36 3B               dec sp
  31+ 9F37
  32+ 9F37 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F38
  34+ 9F38              ; Imprime el 1er scanline del disparo.
  35+ 9F38
  36+ 9F38 FD 7D            ld a,iyl
  37+ 9F3A AE               xor (hl)
  38+ 9F3B 77               ld (hl),a
  39+ 9F3C
  40+ 9F3C 2C               inc l
  41+ 9F3D
  42+ 9F3D FD 7C            ld a,iyh
  43+ 9F3F AE               xor (hl)
  44+ 9F40 77               ld (hl),a
  45+ 9F41
  46+ 9F41 2C               inc l
  47+ 9F42
  48+ 9F42 7B               ld a,e
  49+ 9F43 AE               xor (hl)
  50+ 9F44 77               ld (hl),a
  51+ 9F45
  52+ 9F45              ; Imprime el 2º scanline del disparo.
  53+ 9F45
  54+ 9F45 E1               pop hl
  55+ 9F46
  56+ 9F46 FD 7D            ld a,iyl
  57+ 9F48 AE               xor (hl)
  58+ 9F49 77               ld (hl),a
  59+ 9F4A
  60+ 9F4A 2C               inc l
  61+ 9F4B
  62+ 9F4B FD 7C            ld a,iyh
  63+ 9F4D AE               xor (hl)
  64+ 9F4E 77               ld (hl),a
  65+ 9F4F
  66+ 9F4F 2C               inc l
  67+ 9F50
  68+ 9F50 7B               ld a,e
  69+ 9F51 AE               xor (hl)
  70+ 9F52 77               ld (hl),a
  71+ 9F53
  72+ 9F53 10 D7            djnz 4B
  73+ 9F55
  74+ 9F55 08           1 ex af,af
  75+ 9F56 3D               dec a
  76+ 9F57 20 05            jr nz,2F
  77+ 9F59
  78+ 9F59 ED 7B 3D 8C      ld sp,(Stack)
  79+ 9F5D C9               ret
  80+ 9F5E
  81+ 9F5E ED 7B 4D 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F62 08               ex af,af
  83+ 9F63 18 C5            jr 3B
  84+ 9F65
  85+ 9F65              ; --------------------------------------------------------------------------------------
  86+ 9F65              ;
  87+ 9F65              ;   30/10/24
  88+ 9F65              ;
  89+ 9F65
  90+ 9F65              Motor_de_disparos_entidades
  91+ 9F65
  92+ 9F65 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F68 FE 07            cp 7
  94+ 9F6A C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F6B
  96+ 9F6B 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F6D 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F70
  99+ 9F70 CD 18 91     1 call Extrae_address
 100+ 9F73 1C               inc e
 101+ 9F74 1C               inc e
 102+ 9F75 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F79
 104+ 9F79               ; Caja vacía ???
 105+ 9F79
 106+ 9F79 2D               dec l
 107+ 9F7A 7E               ld a,(hl)
 108+ 9F7B A7               and a
 109+ 9F7C 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F7E
 111+ 9F7E              ; --- Trabajamos con caja:
 112+ 9F7E
 113+ 9F7E 2C               inc l
 114+ 9F7F
 115+ 9F7F              ; --- Existe posibilidad de impacto ???
 116+ 9F7F
 117+ 9F7F CB 46            bit 0,(hl)
 118+ 9F81 C4 C1 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F84 20 37            jr nz,3F
 120+ 9F86
 121+ 9F86 CD 48 A0         call Rota_disparo_si_procede
 122+ 9F89
 123+ 9F89              ; ------------------------------------------------------------
 124+ 9F89
 125+ 9F89 2D               dec l
 126+ 9F8A 2D               dec l
 127+ 9F8B
 128+ 9F8B CD 18 91         call Extrae_address
 129+ 9F8E
 130+ 9F8E              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F8E              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F8E
 133+ 9F8E 3A 67 8C         ld a,(Ctrl_5)
 134+ 9F91 CB 57            bit 2,a
 135+ 9F93 28 09            jr z,4F
 136+ 9F95
 137+ 9F95 CB 97            res 2,a
 138+ 9F97 32 67 8C         ld (Ctrl_5),a
 139+ 9F9A 2C               inc l
 140+ 9F9B 2C               inc l
 141+ 9F9C 18 0C            jr 5F
 142+ 9F9E
 143+ 9F9E CB 5F        4 bit 3,a
 144+ 9FA0 28 08            jr z,5F
 145+ 9FA2
 146+ 9FA2 CB 9F            res 3,a
 147+ 9FA4 32 67 8C         ld (Ctrl_5),a
 148+ 9FA7 2D               dec l
 149+ 9FA8 2D               dec l
 150+ 9FA9 2D               dec l
 151+ 9FAA
 152+ 9FAA              ; ---------------------------------------------------------------------
 153+ 9FAA
 154+ 9FAA              ;! Velocidad del disparo de entidades.
 155+ 9FAA
 156+ 9FAA CD DA 99     5 call NextScan
 157+ 9FAD CD DA 99         call NextScan
 158+ 9FB0
 159+ 9FB0              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9FB0
 161+ 9FB0 CD 25 A0         call Fin_de_disparo_de_entidad
 162+ 9FB3
 163+ 9FB3 EB               ex de,hl
 164+ 9FB4
 165+ 9FB4 73               ld (hl),e
 166+ 9FB5 23               inc hl
 167+ 9FB6 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9FB7
 169+ 9FB7 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9FBA 18 02            jr 2F
 171+ 9FBC
 172+ 9FBC C9               ret
 173+ 9FBD
 174+ 9FBD EB           3 ex de,hl
 175+ 9FBE 10 B0        2 djnz 1B
 176+ 9FC0
 177+ 9FC0 C9               ret
 178+ 9FC1
 179+ 9FC1              ; ------------- ------------- ------------
 180+ 9FC1              ;
 181+ 9FC1              ;   1/11/24
 182+ 9FC1
 183+ 9FC1              Comprueba_impacto_con_Amadeus
 184+ 9FC1
 185+ 9FC1              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FC1              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FC1
 188+ 9FC1              ;   Modificamos registros, así que guardamos ...
 189+ 9FC1
 190+ 9FC1 C5               push bc
 191+ 9FC2 E5               push hl
 192+ 9FC3 D5               push de
 193+ 9FC4
 194+ 9FC4 2D               dec l
 195+ 9FC5 2D               dec l
 196+ 9FC6
 197+ 9FC6 CD 18 91         call Extrae_address
 198+ 9FC9
 199+ 9FC9 3A B8 89         ld a,(CX_Amadeus)
 200+ 9FCC 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FCD
 202+ 9FCD 7D               ld a,l
 203+ 9FCE E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FD0
 205+ 9FD0 06 03            ld b,3
 206+ 9FD2
 207+ 9FD2 B9           1 cp c
 208+ 9FD3 28 15            jr z,Coincidencia
 209+ 9FD5 0C               inc c
 210+ 9FD6 10 FA            djnz 1B
 211+ 9FD8
 212+ 9FD8 0D               dec c
 213+ 9FD9 0D               dec c
 214+ 9FDA 0D               dec c
 215+ 9FDB
 216+ 9FDB 3C               inc a
 217+ 9FDC B9               cp c
 218+ 9FDD 28 0B            jr z,Coincidencia
 219+ 9FDF
 220+ 9FDF 3C               inc a
 221+ 9FE0 B9               cp c
 222+ 9FE1 28 07            jr z,Coincidencia
 223+ 9FE3
 224+ 9FE3 D1           2 pop de
 225+ 9FE4 E1               pop hl
 226+ 9FE5 C1               pop bc
 227+ 9FE6
 228+ 9FE6              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FE6
 230+ 9FE6 CB 86            res 0,(hl)
 231+ 9FE8 AF               xor a                       ; Z before RET.
 232+ 9FE9 C9               ret
 233+ 9FEA
 234+ 9FEA              Coincidencia
 235+ 9FEA
 236+ 9FEA              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FEA              ;   Existe posibilidad de impacto.
 238+ 9FEA              ;   Vamos a averiguarlo ...
 239+ 9FEA
 240+ 9FEA 1D               dec e
 241+ 9FEB 1D               dec e
 242+ 9FEC 1D               dec e
 243+ 9FED
 244+ 9FED              ; DE en Puntero_objeto del disparo.
 245+ 9FED              ; HL en Puntero_de_impresión del disparo.
 246+ 9FED
 247+ 9FED              ; Comparador:
 248+ 9FED
 249+ 9FED 06 03            ld b,3
 250+ 9FEF
 251+ 9FEF 1A           3 ld a,(de)
 252+ 9FF0 4F               ld c,a
 253+ 9FF1 A6               and (hl)
 254+ 9FF2 B9               cp c
 255+ 9FF3 20 06            jr nz,Amadeus_impactado
 256+ 9FF5
 257+ 9FF5 2C               inc l
 258+ 9FF6 1C               inc e
 259+ 9FF7
 260+ 9FF7 10 F6            djnz 3B
 261+ 9FF9
 262+ 9FF9 18 E8            jr 2B
 263+ 9FFB
 264+ 9FFB              Amadeus_impactado
 265+ 9FFB
 266+ 9FFB              ; Borramos disparo.
 267+ 9FFB
 268+ 9FFB D1               pop de
 269+ 9FFC E1               pop hl
 270+ 9FFD
 271+ 9FFD E5               push hl
 272+ 9FFE D5               push de
 273+ 9FFF
 274+ 9FFF CD B3 A0         call Borra_6_bytes
 275+ A002
 276+ A002 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 277+ A005 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ A006
 279+ A006              ; Iniciamos el proceso de explosión de Amadeus.
 280+ A006
 281+ A006 21 BB 89         ld hl,Impacto_Amadeus
 282+ A009 36 01            ld (hl),1
 283+ A00B
 284+ A00B              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ A00B              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ A00B
 287+ A00B 3A BC 89         ld a,(p.imp.amadeus)
 288+ A00E FE DE            cp $de
 289+ A010 20 04            jr nz,1F
 290+ A012
 291+ A012 3D               dec a
 292+ A013 32 BC 89         ld (p.imp.amadeus),a
 293+ A016
 294+ A016              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ A016
 296+ A016 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ A019 21 BE 89         ld hl,Pamm_Amadeus
 298+ A01C
 299+ A01C 73               ld (hl),e
 300+ A01D 23               inc hl
 301+ A01E 72               ld (hl),d
 302+ A01F
 303+ A01F D1               pop de
 304+ A020 E1               pop hl
 305+ A021 C1               pop bc
 306+ A022
 307+ A022 AF               xor a
 308+ A023 3C               inc a               ; NZ before RET.
 309+ A024 C9               ret
 310+ A025
 311+ A025              ; ------------- ------------- ------------
 312+ A025              ;
 313+ A025              ;   31/10/24
 314+ A025
 315+ A025              Fin_de_disparo_de_entidad
 316+ A025
 317+ A025              ; Estamos en zona de Amadeus ??
 318+ A025
 319+ A025 7C               ld a,h
 320+ A026 FE 54            cp $54
 321+ A028 38 0D            jr c,1F
 322+ A02A
 323+ A02A D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A02B
 325+ A02B 5D               ld e,l
 326+ A02C 54               ld d,h
 327+ A02D
 328+ A02D 21 E0 57         ld hl,$57e0
 329+ A030 ED 52            sbc hl,de
 330+ A032
 331+ A032 38 6F            jr c,Elimina_disparo_entidad
 332+ A034
 333+ A034 6B               ld l,e
 334+ A035 62               ld h,d
 335+ A036
 336+ A036 D1               pop de
 337+ A037
 338+ A037 7C           1 ld a,h
 339+ A038 FE 50            cp $50
 340+ A03A D8               ret c
 341+ A03B
 342+ A03B 7D               ld a,l
 343+ A03C FE C0            cp $c0
 344+ A03E D8               ret c
 345+ A03F
 346+ A03F              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A03F              ; Así podremos comprobar si hay colisión más adelante.
 348+ A03F
 349+ A03F 1C               inc e
 350+ A040 1C               inc e
 351+ A041
 352+ A041 EB               ex de,hl
 353+ A042 CB C6            set 0,(hl)
 354+ A044 EB               ex de,hl
 355+ A045
 356+ A045 1D               dec e
 357+ A046 1D               dec e
 358+ A047
 359+ A047 C9               ret
 360+ A048
 361+ A048              ; ----------------------------------------------------------
 362+ A048              ;
 363+ A048              ;   08/10/24
 364+ A048
 365+ A048              ;   Estructura de un disparo de entidades.
 366+ A048
 367+ A048              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A048              ; 	defw 0											; Puntero de impresión.
 369+ A048              ;	defw 0											; Control.
 370+ A048
 371+ A048              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A048              ;   _de la entidad en el momento de disparar.
 373+ A048
 374+ A048              ;   El byte alto muestra la siguiente información:
 375+ A048              ;
 376+ A048              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A048              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A048              ;
 379+ A048              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A048              ;
 381+ A048              ;                        10xx ..... Izquierda.
 382+ A048              ;                        01xx ..... Derecha.
 383+ A048              ;                        00xx ..... Recto.
 384+ A048
 385+ A048              Rota_disparo_si_procede
 386+ A048
 387+ A048              ;   Nos situamos en el byte alto de (Control).
 388+ A048
 389+ A048 CB 76            bit 6,(hl)
 390+ A04A 20 2D            jr nz,Rota_a_derecha
 391+ A04C CB 7E            bit 7,(hl)
 392+ A04E C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A04F
 394+ A04F              Rota_a_izq
 395+ A04F
 396+ A04F E5               push hl
 397+ A050
 398+ A050 7D               ld a,l
 399+ A051 D6 05            sub 5
 400+ A053 6F               ld l,a
 401+ A054
 402+ A054 E5               push hl
 403+ A055 FD E1            pop iy
 404+ A057
 405+ A057 A7               and a
 406+ A058
 407+ A058 FD CB 02 16      rl (iy+02)
 408+ A05C FD CB 01 16      rl (iy+01)
 409+ A060 FD CB 00 16      rl (iy+00)
 410+ A064
 411+ A064 30 3B            jr nc,Exit
 412+ A066
 413+ A066              ; Desplazamiento completo hasta Carry.
 414+ A066              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A066
 416+ A066 FD 36 02 03      ld (iy+02),$03
 417+ A06A FD 36 01 00      ld (iy+01),$00
 418+ A06E FD 36 00 00      ld (iy+00),$00
 419+ A072
 420+ A072 21 67 8C         ld hl,Ctrl_5
 421+ A075 CB DE            set 3,(hl)
 422+ A077
 423+ A077 18 28            jr Exit
 424+ A079
 425+ A079              Rota_a_derecha
 426+ A079
 427+ A079 E5               push hl
 428+ A07A
 429+ A07A 7D               ld a,l
 430+ A07B D6 05            sub 5
 431+ A07D 6F               ld l,a
 432+ A07E
 433+ A07E E5               push hl
 434+ A07F FD E1            pop iy
 435+ A081
 436+ A081 A7               and a
 437+ A082
 438+ A082 FD CB 00 1E      rr (iy+00)
 439+ A086 FD CB 01 1E      rr (iy+01)
 440+ A08A FD CB 02 1E      rr (iy+02)
 441+ A08E
 442+ A08E 30 11            jr nc,Exit
 443+ A090
 444+ A090              ; Desplazamiento completo hasta Carry.
 445+ A090              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A090
 447+ A090 FD 36 00 01      ld (iy+00),$01
 448+ A094 FD 36 01 80      ld (iy+01),$80
 449+ A098 FD 36 02 00      ld (iy+02),$00
 450+ A09C
 451+ A09C 21 67 8C         ld hl,Ctrl_5
 452+ A09F CB D6            set 2,(hl)
 453+ A0A1
 454+ A0A1 E1           Exit pop hl
 455+ A0A2 C9               ret
 456+ A0A3
 457+ A0A3              ; ------------ ----------- ------------
 458+ A0A3              ;
 459+ A0A3              ;   25/9/24
 460+ A0A3
 461+ A0A3              Elimina_disparo_entidad
 462+ A0A3
 463+ A0A3 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A0A6 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A0A7
 466+ A0A7 E1               pop hl
 467+ A0A8 E5               push hl
 468+ A0A9
 469+ A0A9 2C               inc l
 470+ A0AA 2C               inc l
 471+ A0AB
 472+ A0AB CD B3 A0         call Borra_6_bytes
 473+ A0AE
 474+ A0AE D1               pop de
 475+ A0AF
 476+ A0AF 21 00 00         ld hl,0
 477+ A0B2
 478+ A0B2 C9               ret
 479+ A0B3
 480+ A0B3              ; ----- ----- ----- ----- -----
 481+ A0B3
 482+ A0B3              Borra_6_bytes
 483+ A0B3
 484+ A0B3 16 06            ld d,6                                                    ; Contador
 485+ A0B5 AF               xor a                                                     ; Borrador
 486+ A0B6 77           1 ld (hl),a
 487+ A0B7 2D               dec l
 488+ A0B8 15               dec d
 489+ A0B9 20 FB            jr nz,1B
 490+ A0BB
 491+ A0BB C9               ret
 492+ A0BC
 493+ A0BC              ; --------------------------------------------------------------------------------------
 494+ A0BC              ;
 495+ A0BC              ;   12/10/24
 496+ A0BC              ;
 497+ A0BC
 498+ A0BC              Genera_datos_de_impresion_disparos_Entidades
 499+ A0BC
 500+ A0BC 3E 07            ld a,7
 501+ A0BE 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0BF
 503+ A0BF              ; ---------------
 504+ A0BF
 505+ A0BF              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0BF
 507+ A0BF 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0C2
 509+ A0C2 CD 18 91     1 call Extrae_address
 510+ A0C5
 511+ A0C5 13               inc de
 512+ A0C6 13               inc de
 513+ A0C7
 514+ A0C7 ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0CB
 516+ A0CB 2D               dec l
 517+ A0CC 7E               ld a,(hl)
 518+ A0CD A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0CE 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0D0
 521+ A0D0              ; ----- ----- ----- -----
 522+ A0D0
 523+ A0D0 2D               dec l
 524+ A0D1 CD 18 91         call Extrae_address
 525+ A0D4 E5               push hl
 526+ A0D5
 527+ A0D5 1D               dec e
 528+ A0D6
 529+ A0D6 EB               ex de,hl
 530+ A0D7
 531+ A0D7 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0D8 2D               dec l
 533+ A0D9 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0DA 2D               dec l
 535+ A0DB 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0DC
 537+ A0DC E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0DD
 539+ A0DD              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0DD
 541+ A0DD FD 2A 51 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0E1 FD 73 00         ld (iy+0),e
 543+ A0E4 FD 70 01         ld (iy+1),b
 544+ A0E7 FD 71 02         ld (iy+2),c
 545+ A0EA
 546+ A0EA FD 75 03         ld (iy+3),l
 547+ A0ED FD 74 04         ld (iy+4),h
 548+ A0F0
 549+ A0F0 CD DA 99         call NextScan
 550+ A0F3
 551+ A0F3 FD 75 05         ld (iy+5),l
 552+ A0F6 FD 74 06         ld (iy+6),h
 553+ A0F9
 554+ A0F9 FD E5            push iy
 555+ A0FB E1               pop hl
 556+ A0FC
 557+ A0FC 3E 07            ld a,7
 558+ A0FE 85               add l
 559+ A0FF 6F               ld l,a
 560+ A100
 561+ A100 22 51 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A103
 563+ A103              ; ----- ----- ----- -----
 564+ A103
 565+ A103              Situa_en_siguiente_caja
 566+ A103
 567+ A103 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A104 3D               dec a
 569+ A105 C8               ret z
 570+ A106
 571+ A106 08               ex af,af
 572+ A107 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A10A 18 B6            jr 1B
 574+ A10C
 575+ A10C              ; --------------------------------------------------------------------------------------
 576+ A10C              ;
 577+ A10C              ;   12/10/24
 578+ A10C              ;
 579+ A10C
 580+ A10C              Genera_disparo_de_entidad_maldosa
 581+ A10C
 582+ A10C              ;   Estructura de un disparo de entidades.
 583+ A10C
 584+ A10C              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A10C              ; 	defw 0											; Puntero de impresión.
 586+ A10C              ;	defw 0											; Control.
 587+ A10C
 588+ A10C              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A10C              ;   _de la entidad en el momento de disparar.
 590+ A10C
 591+ A10C              ;   El byte de control muestra la siguiente información:
 592+ A10C
 593+ A10C              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A10C              ;
 595+ A10C              ;                        10xx ..... Izquierda.
 596+ A10C              ;                        01xx ..... Derecha.
 597+ A10C              ;                        00xx ..... Recto.
 598+ A10C
 599+ A10C              ;*  Exclusiones.
 600+ A10C
 601+ A10C              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A10C              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A10C
 604+ A10C 3A 55 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A10F A7               and a
 606+ A110 C8               ret z
 607+ A111
 608+ A111 3A F0 8B         ld a,(Coordenada_y)
 609+ A114 A7               and a
 610+ A115 C8               ret z
 611+ A116
 612+ A116 3D               dec a
 613+ A117 C8               ret z
 614+ A118
 615+ A118 FE 10            cp 16
 616+ A11A D0               ret nc
 617+ A11B
 618+ A11B              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A11B              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A11B              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A11B
 622+ A11B 21 57 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A11E 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A11F
 625+ A11F              ;   Decrementa el numero de disparos de entidades.
 626+ A11F
 627+ A11F 21 55 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A122 35               dec (hl)
 629+ A123
 630+ A123 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A126
 632+ A126 CD 18 91     1 call Extrae_address
 633+ A129
 634+ A129 13               inc de
 635+ A12A 13               inc de
 636+ A12B
 637+ A12B ED 53 68 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A12F
 639+ A12F              ;   Comprobamos si la caja está vacía.
 640+ A12F
 641+ A12F 2D               dec l
 642+ A130 7E               ld a,(hl)
 643+ A131 A7               and a
 644+ A132 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A134 2C               inc l
 646+ A135
 647+ A135              ;   Caja vacía, vamos a generar un disparo.
 648+ A135              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A135
 650+ A135 CD 56 A1         call Genera_byte_inclinacion
 651+ A138
 652+ A138 7E               ld a,(hl)
 653+ A139 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A13A
 655+ A13A 2D               dec l
 656+ A13B
 657+ A13B CD 72 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A13E
 659+ A13E 70               ld (hl),b
 660+ A13F 2D               dec l
 661+ A140 71               ld (hl),c
 662+ A141
 663+ A141 2D               dec l
 664+ A142
 665+ A142              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A142
 667+ A142 FD 7E 02         ld a,(iy+02)
 668+ A145 77               ld (hl),a
 669+ A146 2D               dec l
 670+ A147
 671+ A147 FD 7E 01         ld a,(iy+01)
 672+ A14A 77               ld (hl),a
 673+ A14B 2D               dec l
 674+ A14C
 675+ A14C FD 7E 00         ld a,(iy+00)
 676+ A14F 77               ld (hl),a
 677+ A150
 678+ A150 C9               ret
 679+ A151
 680+ A151              ;   --- --- ---
 681+ A151
 682+ A151              Situa_en_siguiente_disparo
 683+ A151
 684+ A151 2A 68 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A154 18 D0            jr 1B
 686+ A156
 687+ A156              ; --------------------------------------------------------------------------------------
 688+ A156              ;
 689+ A156              ;   09/10/24
 690+ A156              ;
 691+ A156
 692+ A156              Genera_byte_inclinacion
 693+ A156
 694+ A156              ; Determina tendencia del disparo.
 695+ A156
 696+ A156 3A B8 89         ld a,(CX_Amadeus)
 697+ A159 47               ld b,a
 698+ A15A 3A EF 8B         ld a,(Coordenada_X)
 699+ A15D 90               sub b
 700+ A15E 38 07            jr c,Disparo_a_derecha
 701+ A160
 702+ A160 FE 06        Disparo_a_izquierda cp 6
 703+ A162
 704+ A162 D8               ret c
 705+ A163 C8               ret z
 706+ A164
 707+ A164 CB FE            set 7,(hl)
 708+ A166 C9               ret
 709+ A167
 710+ A167 47           Disparo_a_derecha ld b,a
 711+ A168 3E FF            ld a,$ff
 712+ A16A 90               sub b
 713+ A16B
 714+ A16B FE 05            cp 5
 715+ A16D
 716+ A16D D8               ret c
 717+ A16E C8               ret z
 718+ A16F
 719+ A16F CB F6            set 6,(hl)
 720+ A171 C9               ret
 721+ A172
 722+ A172              ; --------------------------------------------------------------------------------------
 723+ A172              ;
 724+ A172              ;   09/10/24
 725+ A172              ;
 726+ A172
 727+ A172              Modifica_puntero_de_impresion
 728+ A172
 729+ A172              ;   Puntero de impresión del disparo en BC.
 730+ A172
 731+ A172 E5               push hl
 732+ A173
 733+ A173 2A 6A 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A176 CD DA 99         call NextScan
 735+ A179
 736+ A179 4D               ld c,l
 737+ A17A 44               ld b,h
 738+ A17B
 739+ A17B E1               pop hl
 740+ A17C
 741+ A17C 08               ex af,af
 742+ A17D CB 77            bit 6,a
 743+ A17F 28 06            jr z,1F
 744+ A181
 745+ A181 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A185 0C               inc c
 747+ A186 C9               ret
 748+ A187
 749+ A187 CB 7F        1 bit 7,a
 750+ A189 28 F6            jr z,2B
 751+ A18B
 752+ A18B FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A18F 0D               dec c
 754+ A190
 755+ A190 C9               ret
 756+ A191
 757+ A191              ; --------------------------------------------------------------------------------------
 758+ A191              ;
 759+ A191              ;   31/08/24
 760+ A191              ;
 761+ A191
 762+ A191              Compara_con_coordenadas_de_disparo
 763+ A191
 764+ A191 3A F0 8B         ld a,(Coordenada_y)
 765+ A194 47               ld b,a
 766+ A195 3A 6F 8C         ld a,(Coordenadas_disparo_certero)
 767+ A198 90               sub b
 768+ A199
 769+ A199              ; A = "0" ok
 770+ A199              ; A = "1" ok
 771+ A199
 772+ A199 28 08            jr z,Comprueba_coordenada_X
 773+ A19B 3D               dec a
 774+ A19C 28 05            jr z,Comprueba_coordenada_X
 775+ A19E
 776+ A19E              ; A = "$ff" ok
 777+ A19E
 778+ A19E FE FE            cp $fe
 779+ A1A0 28 01            jr z,Comprueba_coordenada_X
 780+ A1A2
 781+ A1A2 C9               ret
 782+ A1A3
 783+ A1A3              Comprueba_coordenada_X
 784+ A1A3
 785+ A1A3 3A EF 8B         ld a,(Coordenada_X)
 786+ A1A6 47               ld b,a
 787+ A1A7 21 70 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A1AA 7E               ld a,(hl)
 789+ A1AB 90               sub b
 790+ A1AC
 791+ A1AC              ; A = "0" ok
 792+ A1AC              ; A = "1" ok
 793+ A1AC
 794+ A1AC 28 09            jr z,Activa_Impacto_en_entidad
 795+ A1AE 3D               dec a
 796+ A1AF 28 06            jr z,Activa_Impacto_en_entidad
 797+ A1B1
 798+ A1B1              ; A = "2" ok
 799+ A1B1
 800+ A1B1 3D               dec a
 801+ A1B2 28 03            jr z,Activa_Impacto_en_entidad
 802+ A1B4
 803+ A1B4              ; A = "$ff"
 804+ A1B4
 805+ A1B4 FE FD            cp $fd
 806+ A1B6 C0               ret nz
 807+ A1B7
 808+ A1B7              Activa_Impacto_en_entidad
 809+ A1B7
 810+ A1B7              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A1B7
 812+ A1B7 3E 02            ld a,2
 813+ A1B9 32 F2 8B         ld (Impacto),a
 814+ A1BC
 815+ A1BC              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A1BC
 817+ A1BC 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1BF 21 F5 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1C2
 820+ A1C2 73               ld (hl),e
 821+ A1C3 23               inc hl
 822+ A1C4 72               ld (hl),d
 823+ A1C5
 824+ A1C5              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1C5
 826+ A1C5 21 6C 8C         ld hl,Impacto2
 827+ A1C8 CB 9E            res 3,(hl)
 828+ A1CA
 829+ A1CA C9               ret
 830+ A1CB
 831+ A1CB              ; --------------------------------------------------------------------------------------
 832+ A1CB              ;
 833+ A1CB              ;   13/10/24
 834+ A1CB              ;
 835+ A1CB
 836+ A1CB              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1CB
 838+ A1CB              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1CB
 840+ A1CB 2A 49 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1CE 06 06            ld b,6
 842+ A1D0 AF               xor a
 843+ A1D1 77           1 ld (hl),a
 844+ A1D2 2C               inc l
 845+ A1D3 10 FC            djnz 1B
 846+ A1D5
 847+ A1D5 C9               ret
 848+ A1D6
 849+ A1D6              ; --------------------------------------------------------------------------------------
 850+ A1D6              ;
 851+ A1D6              ;   29/09/24
 852+ A1D6              ;
 853+ A1D6
 854+ A1D6              Calcula_bytes_pintado_disparos
 855+ A1D6
 856+ A1D6 2A 4D 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1D9 45               ld b,l
 858+ A1DA 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1DD 7D               ld a,l
 860+ A1DE
 861+ A1DE 90               sub b
 862+ A1DF 32 53 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1E2
 864+ A1E2 C9               ret
 865+ A1E3
 866+ A1E3              ; --------------------------------------------------------------------------------------
 867+ A1E3              ;
 868+ A1E3              ;   26/10/24
 869+ A1E3              ;
 870+ A1E3              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1E3              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1E3              ;   _disparos que el álbum del FRAME actual).
 873+ A1E3
 874+ A1E3              Limpia_album_de_pintado_disparos_entidades
 875+ A1E3
 876+ A1E3 21 54 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1E6 7E               ld a,(hl)
 878+ A1E7 2D               dec l
 879+ A1E8 46               ld b,(hl)
 880+ A1E9 90               sub b
 881+ A1EA
 882+ A1EA D8               ret c
 883+ A1EB C8               ret z
 884+ A1EC
 885+ A1EC F5               push af
 886+ A1ED 80               add b
 887+ A1EE 77               ld (hl),a
 888+ A1EF F1               pop af
 889+ A1F0
 890+ A1F0              ; Clean.
 891+ A1F0
 892+ A1F0 47           2 ld b,a
 893+ A1F1 AF               xor a
 894+ A1F2 2A 51 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1F5 77           1 ld (hl),a
 896+ A1F6 23               inc hl
 897+ A1F7 10 FC            djnz 1B
 898+ A1F9
 899+ A1F9 C9               ret
 900+ A1FA
 901+ A1FA              ; --------------------------------------------------------------------------------------
 902+ A1FA              ;
 903+ A1FA              ;   29/09/24
 904+ A1FA              ;
 905+ A1FA
 906+ A1FA              Motor_Disparos_Amadeus
 907+ A1FA
 908+ A1FA 21 26 89         ld hl,Disparo_Amad+1
 909+ A1FD
 910+ A1FD 34               inc (hl)
 911+ A1FE 35               dec (hl)
 912+ A1FF
 913+ A1FF C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A200
 915+ A200              ;   Esta caja contiene un disparo.
 916+ A200
 917+ A200 CD 07 A2         call Consulta_Impacto
 918+ A203 CC 20 A2         call z,Mueve_disparo_Amadeus
 919+ A206
 920+ A206 C9               ret
 921+ A207
 922+ A207              ; ----------------------
 923+ A207              ;
 924+ A207              ;
 925+ A207              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A207              ;
 927+ A207              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A207
 929+ A207
 930+ A207              Consulta_Impacto
 931+ A207
 932+ A207              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A207              ;   _sea lo más coherente posible.
 934+ A207
 935+ A207 E5               push hl
 936+ A208 2B               dec hl
 937+ A209 CD FC A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A20C E1               pop hl
 939+ A20D 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A20E
 941+ A20E C8               ret z
 942+ A20F
 943+ A20F 3A 6C 8C         ld a,(Impacto2)
 944+ A212 CB DF            set 3,a
 945+ A214 32 6C 8C         ld (Impacto2),a
 946+ A217
 947+ A217 E5               push hl
 948+ A218 CD E9 A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A21B E1               pop hl
 950+ A21C CD 39 A2         call Elimina_disparo_Amadeus
 951+ A21F
 952+ A21F C9               ret
 953+ A220
 954+ A220              ; ----------------------
 955+ A220              ;
 956+ A220              ;
 957+ A220              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A220
 959+ A220              Mueve_disparo_Amadeus
 960+ A220
 961+ A220 CD 18 91         call Extrae_address
 962+ A223
 963+ A223 CD E9 99         call PreviousScan
 964+ A226 CD E9 99         call PreviousScan
 965+ A229 CD E9 99         call PreviousScan
 966+ A22C CD E9 99         call PreviousScan
 967+ A22F
 968+ A22F              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A22F
 970+ A22F 7C               ld a,h
 971+ A230 D6 40            sub $40
 972+ A232 EB               ex de,hl
 973+ A233 38 04            jr c,Elimina_disparo_Amadeus
 974+ A235
 975+ A235               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A235
 977+ A235 73               ld (hl),e
 978+ A236 23               inc hl
 979+ A237 72               ld (hl),d
 980+ A238
 981+ A238 C9               ret
 982+ A239
 983+ A239              ; ----------------------
 984+ A239              ;
 985+ A239              ;   29/9/24
 986+ A239
 987+ A239              Elimina_disparo_Amadeus
 988+ A239
 989+ A239              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A239              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A239
 992+ A239              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A239              ;   	defw 0											; Puntero de impresión.
 994+ A239
 995+ A239 2B               dec hl
 996+ A23A 2B               dec hl
 997+ A23B
 998+ A23B AF               xor a
 999+ A23C 77               ld (hl),a
1000+ A23D 23               inc hl
1001+ A23E 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A23F
1003+ A23F 23               inc hl
1004+ A240 77               ld (hl),a
1005+ A241 23               inc hl
1006+ A242 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A243
1008+ A243 3E 01            ld a,1
1009+ A245 32 56 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A248
1011+ A248 CD CB A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A24B
1013+ A24B AF               xor a
1014+ A24C 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A24D
1016+ A24D C9               ret
1017+ A24E
1018+ A24E              ; --------------------------------------------------------------------------------------
1019+ A24E              ;
1020+ A24E              ;   13/10/24
1021+ A24E              ;
1022+ A24E
1023+ A24E              Pinta_disparos_Amadeus
1024+ A24E
1025+ A24E 06 02            ld b,2
1026+ A250 ED 73 3D 8C      ld (Stack),sp
1027+ A254 ED 7B 4B 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A258 D1           3 pop de
1029+ A259 14               inc d
1030+ A25A 15               dec d
1031+ A25B 28 1C            jr z,1F
1032+ A25D E1               pop hl
1033+ A25E
1034+ A25E              Imprime_scanlines_en_pantalla
1035+ A25E
1036+ A25E              ; 1er scanline
1037+ A25E
1038+ A25E 1A               ld a,(de)
1039+ A25F AE               xor (hl)
1040+ A260 77               ld (hl),a
1041+ A261
1042+ A261 1C               inc e
1043+ A262 2C               inc l
1044+ A263
1045+ A263 1A               ld a,(de)
1046+ A264 AE               xor (hl)
1047+ A265 77               ld (hl),a
1048+ A266
1049+ A266 1D               dec e
1050+ A267 E1               pop hl
1051+ A268
1052+ A268              ; 2º scanline
1053+ A268
1054+ A268 1A               ld a,(de)
1055+ A269 AE               xor (hl)
1056+ A26A 77               ld (hl),a
1057+ A26B
1058+ A26B 1C               inc e
1059+ A26C 2C               inc l
1060+ A26D
1061+ A26D 1A               ld a,(de)
1062+ A26E AE               xor (hl)
1063+ A26F 77               ld (hl),a
1064+ A270
1065+ A270 1D               dec e
1066+ A271
1067+ A271 18 06            jr 1F
1068+ A273
1069+ A273 ED 7B 49 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A277 18 DF            jr 3B
1071+ A279 10 F8        1 djnz 2B
1072+ A27B ED 7B 3D 8C      ld sp,(Stack)
1073+ A27F C9               ret
1074+ A280
1075+ A280              ; --------------------------------------------------------------------------------------
1076+ A280              ;
1077+ A280              ;   13/10/24
1078+ A280              ;
1079+ A280              ;   Modifica: HL,BC y DE.
1080+ A280
1081+ A280
1082+ A280              Genera_datos_de_impresion_disparos_Amadeus
1083+ A280
1084+ A280 ED 73 3D 8C      ld (Stack),sp
1085+ A284 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A287 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A288
1088+ A288 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A289 15               dec d
1090+ A28A
1091+ A28A 28 0E            jr z,Salida
1092+ A28C
1093+ A28C              Genera_scanlines_de_disparo_Amadeus
1094+ A28C
1095+ A28C E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A28D              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A28D ED 7B 49 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A291
1099+ A291 C1               pop bc
1100+ A292 C1               pop bc
1101+ A293 C1               pop bc
1102+ A294
1103+ A294 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A295 CD E9 99         call PreviousScan
1105+ A298 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A299 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A29A
1108+ A29A              Salida
1109+ A29A
1110+ A29A ED 7B 3D 8C      ld sp,(Stack)
1111+ A29E
1112+ A29E C9               ret
1113+ A29F
1114+ A29F              ; --------------------------------------------------------------------------------------
1115+ A29F              ;
1116+ A29F              ;   12/09/24
1117+ A29F              ;
1118+ A29F
1119+ A29F              Genera_disparo_Amadeus
1120+ A29F
1121+ A29F              ;*  Exclusiones.
1122+ A29F
1123+ A29F 3A 56 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A2A2 A7               and a
1125+ A2A3 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A2A4
1127+ A2A4 3D               dec a
1128+ A2A5 32 56 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A2A8
1130+ A2A8              Define_puntero_objeto_disparo
1131+ A2A8
1132+ A2A8              ;   Inicializamos contador.
1133+ A2A8
1134+ A2A8 06 00            ld b,0
1135+ A2AA
1136+ A2AA 2A BC 89         ld hl,(p.imp.amadeus)
1137+ A2AD 2C               inc l
1138+ A2AE
1139+ A2AE 3E 80            ld a,$80
1140+ A2B0 BE               cp (hl)
1141+ A2B1 28 0D            jr z,1F
1142+ A2B3
1143+ A2B3 04               inc b
1144+ A2B4
1145+ A2B4 3E 60            ld a,$60
1146+ A2B6 BE               cp (hl)
1147+ A2B7 28 07            jr z,1F
1148+ A2B9
1149+ A2B9
1150+ A2B9 04               inc b
1151+ A2BA
1152+ A2BA 3E 18            ld a,$18
1153+ A2BC BE               cp (hl)
1154+ A2BD 28 01            jr z,1F
1155+ A2BF
1156+ A2BF 04               inc b
1157+ A2C0
1158+ A2C0              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2C0
1160+ A2C0              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2C0
1162+ A2C0 CD E9 99     1 call PreviousScan
1163+ A2C3
1164+ A2C3 78               ld a,b
1165+ A2C4 CB 3F            srl a
1166+ A2C6 28 03            jr z,4F
1167+ A2C8
1168+ A2C8              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2C8 E5               push hl
1170+ A2C9 18 02            jr 5F
1171+ A2CB 2D           4 dec l
1172+ A2CC E5               push hl
1173+ A2CD              ; ---
1174+ A2CD
1175+ A2CD              ;   Calcula el Puntero_objeto del disparo.
1176+ A2CD
1177+ A2CD 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2D0 04               inc b
1179+ A2D1 05               dec b
1180+ A2D2 28 04            jr z,2F
1181+ A2D4
1182+ A2D4              ;   Nos desplazamos por el índice de disparos.
1183+ A2D4
1184+ A2D4 2C           3 inc l
1185+ A2D5 2C               inc l
1186+ A2D6 10 FC            djnz 3B
1187+ A2D8
1188+ A2D8              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2D8 CD 18 91     2 call Extrae_address
1190+ A2DB E5               push hl
1191+ A2DC              ; ---
1192+ A2DC
1193+ A2DC              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2DC              ; HL en el 1er .db de la caja.
1195+ A2DC
1196+ A2DC 21 25 89         ld hl,Disparo_Amad
1197+ A2DF
1198+ A2DF 06 02            ld b,2
1199+ A2E1
1200+ A2E1 D1           6 pop de
1201+ A2E2 73               ld (hl),e
1202+ A2E3 23               inc hl
1203+ A2E4 72               ld (hl),d
1204+ A2E5 23               inc hl
1205+ A2E6
1206+ A2E6 10 F9            djnz 6B
1207+ A2E8
1208+ A2E8 C9               ret
1209+ A2E9
1210+ A2E9              Genera_coordenadas_de_disparo_Amadeus
1211+ A2E9
1212+ A2E9              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2E9              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2E9              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2E9
1216+ A2E9 CD 18 91         call Extrae_address
1217+ A2EC CD E0 94         call Genera_coordenadas
1218+ A2EF
1219+ A2EF 3D               dec a
1220+ A2F0
1221+ A2F0 21 6F 8C         ld hl,Coordenadas_disparo_certero
1222+ A2F3 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2F4 23               inc hl
1224+ A2F5 3A EF 8B         ld a,(Coordenada_X)
1225+ A2F8 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2F9
1227+ A2F9 AF               xor a
1228+ A2FA 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2FB
1230+ A2FB C9               ret
1231+ A2FC
1232+ A2FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2FC              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2FC
1236+ A2FC              ; ----------------------------------------------
1237+ A2FC              ;
1238+ A2FC              ;   27/08/24
1239+ A2FC              ;
1240+ A2FC              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2FC              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2FC
1243+ A2FC              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2FC
1245+ A2FC              Extraccion_de_datos
1246+ A2FC
1247+ A2FC 13               inc de
1248+ A2FD 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2FE
1250+ A2FE 5E               ld e,(hl)
1251+ A2FF 23               inc hl
1252+ A300 56               ld d,(hl)
1253+ A301
1254+ A301 23               inc hl
1255+ A302
1256+ A302 4E               ld c,(hl)
1257+ A303 23               inc hl
1258+ A304 46               ld b,(hl)
1259+ A305
1260+ A305 C5               push bc
1261+ A306 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A307
1263+ A307              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A307
1265+ A307 CD E9 99         call PreviousScan
1266+ A30A CD E9 99         call PreviousScan
1267+ A30D
1268+ A30D              Detecta_impacto_
1269+ A30D
1270+ A30D 1A               ld a,(de)
1271+ A30E A6               and (hl)
1272+ A30F C0               ret nz
1273+ A310
1274+ A310 13               inc de
1275+ A311 23               inc hl
1276+ A312
1277+ A312 1A               ld a,(de)
1278+ A313 A6               and (hl)
1279+ A314 C9               ret
1280+ A315
1281+ A315              ; -------------------------------------------------------------------------------------------------------------
1282+ A315              ;
1283+ A315              ;   8/8/24
1284+ A315              ;
1285+ A315              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A315              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A315              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A315              ;
1289+ A315              ;   MODIFICA: HL,DE,BC y A.
1290+ A315              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A315              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A315
1293+ A315              Colision_Entidad_Amadeus
1294+ A315
1295+ A315              ; Posible contacto de entidad con Amadeus. ?????
1296+ A315
1297+ A315              ; Exclusiones:
1298+ A315
1299+ A315 3A 8F 8C         ld a,(Shield)
1300+ A318 A7               and a
1301+ A319 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A31A
1303+ A31A 21 65 8C         ld hl,Ctrl_3
1304+ A31D CB 76            bit 6,(hl)
1305+ A31F C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A320
1307+ A320 21 6C 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A323 CB 56            bit 2,(hl)
1309+ A325 C0               ret nz
1310+ A326
1311+ A326 3A F0 8B     	ld a,(Coordenada_y)
1312+ A329 FE 14        	cp $14
1313+ A32B D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A32C
1315+ A32C 3A BB 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A32F A7               and a
1317+ A330 C0               ret nz
1318+ A331
1319+ A331              Genera_coordenadas_X
1320+ A331
1321+ A331              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A331              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A331
1324+ A331              ;   Limpiamos almacenes.
1325+ A331
1326+ A331              ;    call Limpia_Coordenadas_X
1327+ A331
1328+ A331              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A331
1330+ A331 21 71 8C         ld hl,Coordenadas_X_Entidad
1331+ A334 3A EF 8B         ld a,(Coordenada_X)
1332+ A337 CD 59 A3         call Guarda_coordenadas_X
1333+ A33A
1334+ A33A              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A33A
1336+ A33A 3A B8 89         ld a,(CX_Amadeus)
1337+ A33D CD 59 A3         call Guarda_coordenadas_X
1338+ A340 CD 6D A3         call Compara_coordenadas_X
1339+ A343 C0               ret nz
1340+ A344
1341+ A344 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A346 32 F2 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A349
1344+ A349 2A 2E 8C         ld hl,(Puntero_store_caja)
1345+ A34C 2C               inc l
1346+ A34D 2C               inc l
1347+ A34E 2C               inc l
1348+ A34F 2C               inc l
1349+ A350 22 6D 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A353
1351+ A353 21 6C 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A356 CB D6            set 2,(hl)
1353+ A358
1354+ A358 C9               ret
1355+ A359
1356+ A359               ; ----- ----- ----- ----- -----
1357+ A359
1358+ A359 77           Guarda_coordenadas_X ld (hl),a
1359+ A35A 3C               inc a
1360+ A35B 2C               inc l
1361+ A35C 77               ld (hl),a
1362+ A35D 3C               inc a
1363+ A35E 2C               inc l
1364+ A35F 77               ld (hl),a
1365+ A360 2C               inc l
1366+ A361 C9               ret
1367+ A362
1368+ A362 AF           Limpia_Coordenadas_X xor a
1369+ A363 06 06            ld b,6
1370+ A365 21 74 8C         ld hl,Coordenadas_X_Amadeus
1371+ A368 77           1 ld (hl),a
1372+ A369 23               inc hl
1373+ A36A 10 FC            djnz 1B
1374+ A36C C9               ret
1375+ A36D
1376+ A36D              ; ----- ----- ----- ----- -----
1377+ A36D
1378+ A36D              Compara_coordenadas_X
1379+ A36D
1380+ A36D DD 21 71 8C      ld ix,Coordenadas_X_Entidad
1381+ A371 DD 7E 00         ld a,(ix+0)
1382+ A374 CD 82 A3         call Comparando
1383+ A377 C8               ret z
1384+ A378
1385+ A378 3C               inc a
1386+ A379 CD 91 A3         call Comparando_1
1387+ A37C C8               ret z
1388+ A37D
1389+ A37D 3C               inc a
1390+ A37E CD 91 A3         call Comparando_1
1391+ A381 C9               ret
1392+ A382
1393+ A382              ; ----- ----- ----- ----- -----
1394+ A382              ;
1395+ A382              ;   4/12/23
1396+ A382              ;
1397+ A382              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A382
1399+ A382              Comparando
1400+ A382
1401+ A382 DD 2C            inc ixl
1402+ A384 DD 2C            inc ixl
1403+ A386 DD 2C            inc ixl
1404+ A388
1405+ A388 DD 46 00         ld b,(ix+0)
1406+ A38B DD 4E 01         ld c,(ix+1)
1407+ A38E DD 56 02         ld d,(ix+2)
1408+ A391
1409+ A391 B8           Comparando_1 cp b
1410+ A392 C8               ret z
1411+ A393 B9               cp c
1412+ A394 C8               ret z
1413+ A395 BA               cp d
1414+ A396 C9               ret
1415+ A397
1416+ A397              ; -----------------------------------------------------------------------
1417+ A397              ;
1418+ A397              ;   04/7/24
1419+ A397              ;
1420+ A397
1421+ A397              Detecta_colision_nave_entidad
1422+ A397
1423+ A397              ; Exclusiones:
1424+ A397
1425+ A397              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A397
1427+ A397 21 6C 8C     	ld hl,Impacto2
1428+ A39A CB 56        	bit 2,(hl)
1429+ A39C C8           	ret z
1430+ A39D
1431+ A39D              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A39D
1433+ A39D 2A BE 89         ld hl,(Pamm_Amadeus)
1434+ A3A0 CD 18 91         call Extrae_address
1435+ A3A3 54               ld d,h
1436+ A3A4 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A3A5
1438+ A3A5 2A BC 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A3A8 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A3AA FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A3AD
1442+ A3AD C5           1 push bc
1443+ A3AE 06 03            ld b,3
1444+ A3B0 E5               push hl
1445+ A3B1
1446+ A3B1              ; .db
1447+ A3B1
1448+ A3B1 1A           3 ld a,(de)
1449+ A3B2 A7               and a
1450+ A3B3 20 03            jr nz,4F
1451+ A3B5
1452+ A3B5 2C               inc l
1453+ A3B6 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A3B8
1455+ A3B8 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A3BA 28 04            jr z,2F
1457+ A3BC
1458+ A3BC              ; Impacto.
1459+ A3BC FD 2D            dec iyl
1460+ A3BE 28 22            jr z,5F
1461+ A3C0
1462+ A3C0 1C           2 inc e
1463+ A3C1 10 EE            djnz 3B
1464+ A3C3
1465+ A3C3 E1               pop hl
1466+ A3C4
1467+ A3C4              ; Hay salto de línea en el puntero de impresión ???
1468+ A3C4
1469+ A3C4 7C               ld a,h
1470+ A3C5 D6 57            sub $57
1471+ A3C7 20 0A            jr nz,6F
1472+ A3C9
1473+ A3C9              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3C9
1475+ A3C9 2A BC 89         ld hl,(p.imp.amadeus)
1476+ A3CC 3E 20            ld a,$20
1477+ A3CE A7               and a
1478+ A3CF 85               add l
1479+ A3D0 6F               ld l,a
1480+ A3D1 18 01            jr 7F
1481+ A3D3
1482+ A3D3 24           6 inc h
1483+ A3D4
1484+ A3D4 C1           7 pop bc
1485+ A3D5 10 D6            djnz 1B
1486+ A3D7
1487+ A3D7              ;   Fin de la comparativa.
1488+ A3D7
1489+ A3D7              ;   NO HAY COLISIÓN !!!!!.
1490+ A3D7              ;
1491+ A3D7              ;   .db (Impacto) de Amadeus a "0".
1492+ A3D7              ;   RES el bit2 de (Impacto2).
1493+ A3D7              ;
1494+ A3D7              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3D7              ;   Lo colocamos a "0".
1496+ A3D7
1497+ A3D7 21 6C 8C         ld hl,Impacto2
1498+ A3DA CB 96            res 2,(hl)
1499+ A3DC 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3DF 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3E1 C9               ret
1502+ A3E2
1503+ A3E2              ;   COLISIÓN !!!!!.
1504+ A3E2              ;
1505+ A3E2              ;   .db (Impacto) de Amadeus a "1".
1506+ A3E2              ;   SET el bit3 de (Impacto2).
1507+ A3E2              ;
1508+ A3E2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3E2
1510+ A3E2 E1           5 pop hl
1511+ A3E3 C1               pop bc
1512+ A3E4
1513+ A3E4 21 BB 89         ld hl,Impacto_Amadeus
1514+ A3E7 36 01            ld (hl),1
1515+ A3E9 21 6C 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3EC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3EE
1518+ A3EE 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3F1 2A 6D 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3F4
1521+ A3F4 23               inc hl
1522+ A3F5 23               inc hl
1523+ A3F6 23               inc hl
1524+ A3F7
1525+ A3F7 73               ld (hl),e
1526+ A3F8 23               inc hl
1527+ A3F9 72               ld (hl),d
1528+ A3FA
1529+ A3FA              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3FA
1531+ A3FA 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3FD 21 BE 89         ld hl,Pamm_Amadeus
1533+ A400
1534+ A400 73               ld (hl),e
1535+ A401 23               inc hl
1536+ A402 72               ld (hl),d
1537+ A403
1538+ A403 C9               ret
1539+ A404
1540+ A404
1541+ A404
# file closed: Disparo.asm
2122  A404
2123  A404              	SAVESNA "Pruebas.sna", START
2124  A404
2125  A404
2126  A404
2127  A404
# file closed: Banco_de_pruebas.asm
