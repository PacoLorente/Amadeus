# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E2 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A E8 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 03        	jr z,1F
  42  AA20
  43  AA20              ;	call Borra_sprites
  44  AA20
  45  AA20              ;	exx
  46  AA20              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
  47  AA20              ;	exx
  48  AA20
  49  AA20 CD 3E 91     	call Pinta_Sprites
  50  AA23              ;	call Extrae_Scanlines_album
  51  AA23
  52  AA23              ;	ld a,6
  53  AA23              ;	out ($fe),a
  54  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  55  AA23
  56  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  57  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  58  AA23
  59  AA23              ;	ld a,7
  60  AA23              ;	out ($fe),a												; Borde blanco.
  61  AA23              ;	call Guarda_parametros_DRAW
  62  AA23              ;	call Restore_Amadeus
  63  AA23
  64  AA23              ; Posible colisión Entidad-Amadeus ???
  65  AA23
  66  AA23              ;	ld a,(Impacto2)
  67  AA23              ;	bit 2,a
  68  AA23              ;	jr z,1F
  69  AA23
  70  AA23              ;	call Detecta_colision_nave_entidad
  71  AA23
  72  AA23              ;1 ld a,4
  73  AA23              ;	out ($fe),a
  74  AA23              ;	call Gestiona_Amadeus
  75  AA23
  76  AA23              ;	ld a,7
  77  AA23              ;	out ($fe),a											; Borde blanco.
  78  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  79  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  80  AA23
  81  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  82  AA23
  83  AA23              ;	call Recupera_parametros_DRAW
  84  AA23
  85  AA23 CD DF 8B     1 call Actualiza_relojes
  86  AA26
  87  AA26 21 E8 89     	ld hl,Ctrl_3
  88  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  89  AA2B
  90  AA2B FD E1        	pop iy
  91  AA2D DD E1        	pop ix
  92  AA2F F1           	pop af
  93  AA30 C1           	pop bc
  94  AA31 D1           	pop de
  95  AA32 E1           	pop hl
  96  AA33 D9           	exx
  97  AA34 C1           	pop bc
  98  AA35 D1           	pop de
  99  AA36 E1           	pop hl
 100  AA37 08           	ex af,af'
 101  AA38 F1           	pop af
 102  AA39 08           	ex af,af'
 103  AA3A D9           	exx
 104  AA3B
 105  AA3B ED 7B E2 89  	ld sp,(Stack_3)
 106  AA3F
 107  AA3F FB           	ei
 108  AA40
 109  AA40 3E 01        	ld a,1												; Borde azul.
 110  AA42 D3 FE        	out ($fe),a
 111  AA44
 112  AA44 C9           	ret
 113  AA45
 114  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 115  AA45
 116  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 117  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD E3 51        	defw $51e3	                                     	; (Posicion_inicio).
 272+ 87BF 03           	db 3												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 118  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 119  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 7A 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 02           Nivel_1 db 2									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 897A
  19+ 897A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8983 01 02
  22+ 8985 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8989 01 02
  23+ 898B
# file closed: Niveles.asm
 120  898B
 121  898B              ; ******************************************************************************************************************************************************************************************
 122  898B              ; Constantes.
 123  898B              ; ******************************************************************************************************************************************************************************************
 124  898B              ;
 125  898B              ; 09/03/24
 126  898B
 127  898B              ;
 128  898B              ; Constantes.
 129  898B              ;
 130  898B
 131  898B              Sprite_vacio equ $eae0
 132  898B
 133  898B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 134  898B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 135  898B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 136  898B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 137  898B
 138  898B              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 139  898B              ;Almacen_de_scanlines_masticados equ $e900
 140  898B              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 141  898B              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 142  898B              ;
 143  898B              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 144  898B
 145  898B              ;                                                       ;	35 bytes por entidad.
 146  898B              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 147  898B              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 148  898B              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 149  898B              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 150  898B
 151  898B
 152  898B              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 153  898B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 154  898B              ;														; 55 Bytes.
 155  898B
 156  898B              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 157  898B
 158  898B              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 159  898B
 160  898B
 161  898B              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 162  898B
 163  898B              ; ******************************************************************************************************************************************************************************************
 164  898B              ; Variables.
 165  898B              ; ******************************************************************************************************************************************************************************************
 166  898B              ;
 167  898B              ; 18/01/24
 168  898B              ;
 169  898B              ; Variables de DRAW. (Motor principal).	42 Bytes.
 170  898B              ;
 171  898B
 172  898B              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 173  898B
 174  898B 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 175  898C              ;															- Patrón de movimiento.
 176  898C              ;															- Aspecto
 177  898C 00           Filas db 0												; Filas. [DRAW]
 178  898D 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 179  898E 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 180  8990 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 181  8992 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 182  8993 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 183  8994
 184  8994              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 185  8994
 186  8994 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 187  8995              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 188  8995              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 189  8995 00           Attr db 0												; Atributos de la entidad:
 190  8996
 191  8996              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 192  8996              ;
 193  8996              ;	COLORES: 0 ..... NEGRO
 194  8996              ;    		 1 ..... AZUL
 195  8996              ; 			 2 ..... ROJO
 196  8996              ;			 3 ..... MAGENTA
 197  8996              ; 			 4 ..... VERDE
 198  8996              ; 			 5 ..... CIAN
 199  8996              ;			 6 ..... AMARILLO
 200  8996              ; 			 7 ..... BLANCO
 201  8996
 202  8996 00 00        Indice_Sprite_der defw 0
 203  8998 00 00        Indice_Sprite_izq defw 0
 204  899A 00 00        Puntero_DESPLZ_der defw 0
 205  899C 00 00        Puntero_DESPLZ_izq defw 0
 206  899E
 207  899E 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 208  89A0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 209  89A1
 210  89A1              ; Variables de objeto. (Características).
 211  89A1
 212  89A1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 213  89A2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 214  89A2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 215  89A2 00 00 00...  Variables_de_borrado ds 6
 216  89A8
 217  89A8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 218  89AA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 219  89AA
 220  89AA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 221  89AC
 222  89AC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 223  89AC              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 224  89AC
 225  89AC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 226  89AE              ;														; _palabras que componen el "movimiento_masticado".
 227  89AE
 228  89AE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 229  89AE
 230  89AE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 231  89AF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 232  89AF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 233  89AF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 234  89AF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 235  89AF              ;
 236  89AF              ; 														DESCRIPCIÖN:
 237  89AF              ;
 238  89AF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 239  89AF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 240  89AF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 241  89AF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 242  89AF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 243  89AF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 244  89AF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 245  89AF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 246  89AF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 247  89AF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 248  89AF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 249  89AF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 250  89AF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 251  89AF              ;
 252  89AF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 253  89AF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 254  89AF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 255  89AF
 256  89AF              ; Variables de funcionamiento. [DRAW].
 257  89AF
 258  89AF 00           Columnas db 0
 259  89B0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 260  89B2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 261  89B2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 262  89B3
 263  89B3              ; variables de control general.
 264  89B3
 265  89B3 00           Ctrl_2 db 0
 266  89B4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 267  89B4              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 268  89B4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 269  89B4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 270  89B4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 271  89B4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 272  89B4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 273  89B4              ;
 274  89B4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 275  89B4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 276  89B4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 277  89B4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 278  89B4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 279  89B4              ;														BIT 4, ???
 280  89B4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 281  89B4
 282  89B4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  89B5
 284  89B5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 285  89B5
 286  89B5              ;					         		---------;      ;---------
 287  89B5
 288  89B5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 289  89B5
 290  89B5              Perfiles_de_velocidad
 291  89B5
 292  89B5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 293  89B6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 294  89B7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 295  89B8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 296  89B9
 297  89B9              ; Contadores de 16 bits.
 298  89B9
 299  89B9 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 300  89BB 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 301  89BD 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 302  89BF 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 303  89C1
 304  89C1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 305  89C1
 306  89C1              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 307  89C1              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 308  89C1              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 309  89C1
 310  89C1              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 311  89C1
 312  89C1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 313  89C3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 314  89C5 00 00        Puntero_indice_mov_bucle defw 0							;
 315  89C7              ;
 316  89C7              ;
 317  89C7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 318  89C8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 319  89C8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 320  89C8 00           Incrementa_puntero_backup db 0
 321  89C9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 322  89CA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 323  89CA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 324  89CB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 325  89CC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 326  89CD              ;
 327  89CD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 328  89CD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 329  89CD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 330  89CD              ;
 331  89CD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 332  89CD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 333  89CD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 334  89CD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 335  89CD              ;
 336  89CD              ;														;	"$ff" ..... Bucle infinito de repetición.
 337  89CD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 338  89CD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 339  89CD              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 340  89CD
 341  89CD 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 342  89CE
 343  89CE              ;														DESCRIPCIÓN:
 344  89CE              ;
 345  89CE              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 346  89CE              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 347  89CE              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 348  89CE              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 349  89CE              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 350  89CE              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 351  89CE
 352  89CE              ;														BIT 3, Recarga de nueva oleada.
 353  89CE              ;														BIT 4, Recarga de nueva oleada.
 354  89CE              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 355  89CE              ;														BIT 6, **** Frame completo.
 356  89CE              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 357  89CE
 358  89CE 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 359  89D0              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 360  89D0              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 361  89D0              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 362  89D0
 363  89D0              ; Gestión de ENTIDADES y CAJAS.
 364  89D0
 365  89D0 00 00        Puntero_store_caja defw 0
 366  89D2 00 00        Puntero_restore_caja defw 0
 367  89D4 00 00        Indice_restore_caja defw 0
 368  89D6 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 369  89D7 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 370  89D8 00           Entidades_en_curso db 0									; ..... ..... .....
 371  89D9 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 372  89DA              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 373  89DA              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 374  89DA              ;														; _ (Numero_de_malotes)="0".
 375  89DA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 376  89DC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 377  89DE              ;														; _ puntero (Indice_entidades).
 378  89DE
 379  89DE              ;---------------------------------------------------------------------------------------------------------------
 380  89DE              ;
 381  89DE              ;	11/01/24
 382  89DE              ;
 383  89DE              ;	Álbumes.
 384  89DE
 385  89DE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 386  89E0              ;														; _variable para almacenar lo posición del puntero_
 387  89E0              ; 														; _de pila, SP.
 388  89E0 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 389  89E2              ;														; La utiliza la rutina [Extrae_foto_registros].
 390  89E2 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 391  89E4
 392  89E4 00 80        Scanlines_album_SP defw Scanlines_album
 393  89E6
 394  89E6              ;Scanlines_album_disparos_SP defw Scanlines_album_disparos
 395  89E6
 396  89E6 00 80        End_Snapshot defw Scanlines_album
 397  89E8              ;														; Inicialmente está situado el la posición $7000, Scanlines_album.
 398  89E8              ;End_Snapshot_disparos defw Scanlines_album_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 399  89E8              ;														; _el snapshot de los registros del siguiente disparo.
 400  89E8              ;														; Inicialmente está situado en la posición $7060, Scanlines_album_disparos.
 401  89E8              ;End_Snapshot_Amadeus defw Scanlines_album_Amadeus
 402  89E8
 403  89E8 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 404  89E9              ;
 405  89E9              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 406  89E9              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 407  89E9              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 408  89E9
 409  89E9 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 410  89EA              ;
 411  89EA              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 412  89EA              ;
 413  89EA              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 414  89EA              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 415  89EA              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 416  89EA              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 417  89EA              ;
 418  89EA              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 419  89EA              ;															_ masticados ya generados.
 420  89EA              ;
 421  89EA              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 422  89EA              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 423  89EA              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 424  89EA              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 425  89EA
 426  89EA
 427  89EA              ; Gestión de Disparos.
 428  89EA
 429  89EA              ;;Numero_de_disparotes db 0
 430  89EA              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 431  89EA              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 432  89EA              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 433  89EA              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 434  89EA              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 435  89EA              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 436  89EA              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 437  89EA              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 438  89EA              ;														; _produzca colisión.
 439  89EA              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 440  89EA              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 441  89EA              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 442  89EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 443  89EA 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 444  89ED              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 445  89ED              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 446  89ED
 447  89ED              ;---------------------------------------------------------------------------------------------------------------
 448  89ED
 449  89ED              ; Relojes y temporizaciones.
 450  89ED
 451  89ED 00           Contador_de_frames db 0
 452  89EE 00           Contador_de_frames_2 db 0
 453  89EF
 454  89EF              ;Clock_explosion db 4
 455  89EF 14           Clock_Entidades_en_curso db 20
 456  89F0 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 457  89F1              ;														; Repite la oleada de entidades.
 458  89F1              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 459  89F1              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 460  89F1              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 461  89F1
 462  89F1              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 463  89F1              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 464  89F1              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 465  89F1
 466  89F1              ;---------------------------------------------------------------------------------------------------------------
 467  89F1
 468  89F1              ; Gestión de NIVELES.
 469  89F1
 470  89F1 00           Nivel db 0												; Nivel actual del juego.
 471  89F2 00 00        Puntero_indice_NIVELES defw 0
 472  89F4 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 473  89F6              ; 														; _ que definen el NIVEL.
 474  89F6              ; Y todo comienza aquí .....
 475  89F6              ;
 476  89F6              ; 	INICIO  *************************************************************************************************************************************************************************
 477  89F6              ;
 478  89F6              ;	5/1/24
 479  89F6
 480  89F6              START
 481  89F6
 482  89F6 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 483  89F9 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 484  89FB ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 485  89FD ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 486  89FF F3           	DI
 487  8A00
 488  8A00              ;	ld a,%00000111
 489  8A00              ;	call Cls
 490  8A00 CD CB 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 491  8A03
 492  8A03              ; INICIALIZACIÓN.
 493  8A03
 494  8A03              ;	Inicializa 1er Nivel.
 495  8A03
 496  8A03 21 6B 89     	ld hl,Indice_de_niveles
 497  8A06 22 F2 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 498  8A09 CD F1 8B     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 499  8A0C              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 500  8A0C              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 501  8A0C              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 502  8A0C
 503  8A0C              ;	Provisional, (para desarrollo).
 504  8A0C              	;-
 505  8A0C              ;	ld hl,Numero_parcial_de_entidades
 506  8A0C              ;	ld b,(hl)
 507  8A0C              ;	inc b
 508  8A0C              ;	dec b
 509  8A0C              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 510  8A0C
 511  8A0C CD 36 8C     4 call Inicia_Entidades
 512  8A0F
 513  8A0F CD 21 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 514  8A12
 515  8A12              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 516  8A12              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 517  8A12              ; (Esto se dá cuando se inicia una nueva oleada).
 518  8A12
 519  8A12              ;	ld a,(Ctrl_1)
 520  8A12              ;	bit 3,a
 521  8A12              ;	jr nz,5F											; Loop
 522  8A12
 523  8A12              ; 	INICIA AMADEUS !!!!!
 524  8A12
 525  8A12              ;3 call Restore_Amadeus
 526  8A12              ;	call Inicia_Puntero_objeto
 527  8A12              ;	call Draw
 528  8A12
 529  8A12              ;	call Guarda_movimiento_masticado	;! Provisional
 530  8A12
 531  8A12              ;	call Genera_datos_de_impresion
 532  8A12              ;	call Guarda_datos_de_borrado_Amadeus
 533  8A12
 534  8A12              ;	ld de,Amadeus_db
 535  8A12              ;	call Store_Amadeus
 536  8A12
 537  8A12              ; 	INICIA DISPAROS !!!!!
 538  8A12
 539  8A12              ;	call Inicia_Puntero_Disparo_Entidades
 540  8A12              ;	call Inicia_Puntero_Disparo_Amadeus
 541  8A12
 542  8A12              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 543  8A12
 544  8A12              ;5 call Inicia_punteros_de_cajas
 545  8A12              ;	call Restore_entidad
 546  8A12
 547  8A12              ;	ld a,(Ctrl_1)
 548  8A12              ;	bit 3,a
 549  8A12              ;	jr z,6F
 550  8A12
 551  8A12              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 552  8A12
 553  8A12              ;	ld hl,Ctrl_1
 554  8A12              ;	res 3,(hl)
 555  8A12              ;	jr Main
 556  8A12
 557  8A12              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 558  8A12
 559  8A12 CD 37 8B     6 call Calcula_numero_de_malotes
 560  8A15
 561  8A15 18 FE        	jr $
 562  8A17
 563  8A17 21 E8 89     	ld hl,Ctrl_3
 564  8A1A CB C6        	set 0,(hl)											; Frame completo.
 565  8A1C FB           	ei
 566  8A1D 76           	halt
 567  8A1E
 568  8A1E              ; ------------------------------------
 569  8A1E
 570  8A1E              Main
 571  8A1E              ;
 572  8A1E              ;	11/12/23
 573  8A1E
 574  8A1E              ; Aparece nueva entidad ???
 575  8A1E
 576  8A1E              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 577  8A1E              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 578  8A1E              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 579  8A1E              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 580  8A1E              ;														; _un 2º bloque.
 581  8A1E
 582  8A1E              ;	call Genera_scanlines_masticados_a_borrar
 583  8A1E              ;	call Limpia_Almacen_de_scanlines_masticados
 584  8A1E
 585  8A1E              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 586  8A1E              ; 													 	; _(Scanlines_album_SP).
 587  8A1E
 588  8A1E 3A EF 89     	ld a,(Clock_Entidades_en_curso)
 589  8A21 47           	ld b,a
 590  8A22 3A ED 89     	ld a,(Contador_de_frames)
 591  8A25 B8           	cp b
 592  8A26 20 1E        	jr nz,13F
 593  8A28
 594  8A28              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 595  8A28              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 596  8A28
 597  8A28 3A D7 89     21 ld a,(Numero_parcial_de_entidades)
 598  8A2B 47           	ld b,a
 599  8A2C 3A D8 89     	ld a,(Entidades_en_curso)
 600  8A2F B8           	cp b
 601  8A30 28 14        	jr z,13F
 602  8A32 30 12        	jr nc,13F
 603  8A34
 604  8A34 3C           	inc a
 605  8A35 32 D8 89     	ld (Entidades_en_curso),a
 606  8A38
 607  8A38 FE 02        	cp 2
 608  8A3A F3           	di
 609  8A3B 28 FE        	jr z,$
 610  8A3D FB           	ei
 611  8A3E
 612  8A3E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 613  8A3E
 614  8A3E 3A EF 89     	ld a,(Clock_Entidades_en_curso)
 615  8A41              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 616  8A41              ;! _ IMPREDECIBLE !!!!
 617  8A41 C6 64        	add 100
 618  8A43 32 EF 89     	ld (Clock_Entidades_en_curso),a
 619  8A46
 620  8A46              ; -------------------------------------------------------------------------------------------------------------
 621  8A46
 622  8A46              ; Habilita disparos.
 623  8A46
 624  8A46              13
 625  8A46
 626  8A46              ;	ld hl,Disparo_Amadeus
 627  8A46              ;	ld de,CLOCK_repone_disparo_Amadeus
 628  8A46              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 629  8A46
 630  8A46              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 631  8A46              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 632  8A46              ;	call Habilita_disparos
 633  8A46
 634  8A46              ; COLISIONES.
 635  8A46
 636  8A46              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 637  8A46
 638  8A46              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 639  8A46              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 640  8A46              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 641  8A46
 642  8A46              ;	xor a
 643  8A46              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 644  8A46
 645  8A46              ;	call Inicia_punteros_de_cajas
 646  8A46              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 647  8A46              ; 														; _ en DRAW.
 648  8A46
 649  8A46              ;	ld a,(Filas)
 650  8A46              ;	and a
 651  8A46              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 652  8A46              ;	call Incrementa_punteros_de_cajas
 653  8A46              ;	jr 12B
 654  8A46
 655  8A46              ; ---------------------------------------------------------------------------------------
 656  8A46
 657  8A46 3A D7 89     10 ld a,(Numero_parcial_de_entidades)
 658  8A49 47               ld b,a
 659  8A4A A7           	and a
 660  8A4B 20 00        	jr nz,11F
 661  8A4D
 662  8A4D              ;	ld hl,Ctrl_1;
 663  8A4D              ;	bit 4,(hl)
 664  8A4D              ;	jp nz,16F
 665  8A4D
 666  8A4D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 667  8A4D
 668  8A4D              ;	ld hl,Ctrl_1
 669  8A4D              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 670  8A4D
 671  8A4D              ;	ld a,(Contador_de_frames)
 672  8A4D              ;	inc a
 673  8A4D              ;	ld (Activa_recarga_cajas),a
 674  8A4D
 675  8A4D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 676  8A4D
 677  8A4D 3A D8 89     11 ld a,(Entidades_en_curso)
 678  8A50 A7           	and a
 679  8A51 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 680  8A53 47           	ld b,a												; No hay entidades que gestionar.
 681  8A54
 682  8A54              ; ( Código que ejecutamos con cada entidad: ).
 683  8A54
 684  8A54              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 685  8A54
 686  8A54 C5           15 push bc 												; Nº de entidades en curso.
 687  8A55
 688  8A55 CD 8A 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 689  8A58
 690  8A58 3A E8 89     	ld a,(Ctrl_3)
 691  8A5B CB 57        	bit 2,a
 692  8A5D F3           	di
 693  8A5E 20 FE        	jr nz,$
 694  8A60 FB           	ei
 695  8A61
 696  8A61              ; Existe "Entidad_guía" ???.
 697  8A61              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 698  8A61
 699  8A61              ;	ld a,(Ctrl_3)
 700  8A61              ;	bit 1,a
 701  8A61              ;	jr nz,22F
 702  8A61
 703  8A61              ; Almacén de "Movimientos_masticados" lleno ???
 704  8A61              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 705  8A61              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 706  8A61
 707  8A61              ;;	ld a,(Ctrl_3)
 708  8A61              ;;	bit 3,a
 709  8A61              ;;	jr nz,22F
 710  8A61
 711  8A61              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 712  8A61
 713  8A61              ;	ld hl,Ctrl_2
 714  8A61              ;	set 5,(hl)
 715  8A61              ;	ld hl,Ctrl_3
 716  8A61              ;	set 1,(hl)
 717  8A61
 718  8A61              ; Impacto ???
 719  8A61
 720  8A61              ;22 ld a,(Impacto)
 721  8A61              ;	and a
 722  8A61              ;	jr z,8F
 723  8A61
 724  8A61              ; Hay Impacto en esta entidad.
 725  8A61
 726  8A61              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 727  8A61              ;	dec (hl)
 728  8A61              ;	jp nz,17F
 729  8A61
 730  8A61              ;! Velocidad de la animación de la explosión.
 731  8A61
 732  8A61              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 733  8A61              ;														; _,(velocidad de la explosión).
 734  8A61              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 735  8A61
 736  8A61              ;	call Repone_datos_de_borrado
 737  8A61              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 738  8A61
 739  8A61              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 740  8A61
 741  8A61              ;	ld a,(Ctrl_2)
 742  8A61              ;	bit 1,a
 743  8A61              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 744  8A61
 745  8A61              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 746  8A61
 747  8A61              ;	ld a,(CTRL_DESPLZ)
 748  8A61              ;	and a
 749  8A61              ;	jr nz,18F
 750  8A61
 751  8A61              ;	ld hl,Indice_Explosion_2x2-2
 752  8A61              ;	ld (Puntero_DESPLZ_der),hl
 753  8A61              ;	jr 19F
 754  8A61
 755  8A61              ;18 ld hl,Indice_Explosion_2x3-2
 756  8A61              ;	ld (Puntero_DESPLZ_der),hl
 757  8A61
 758  8A61              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 759  8A61              ;	set 1,(hl)
 760  8A61              ;	jr 7F
 761  8A61
 762  8A61              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 763  8A61              ; _con las coordenadas de la entidad almacenada en DRAW.
 764  8A61
 765  8A61              ;8 ld a,(Ctrl_1)
 766  8A61              ;	bit 2,a
 767  8A61              ;	jr z,7F
 768  8A61
 769  8A61              ;	ld hl,(Coordenadas_disparo_certero)
 770  8A61              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 771  8A61              ;														; E contiene la coordenada_X del disparo.
 772  8A61              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 773  8A61              ;														; H FILA, (Coordenada_y de la entidad).
 774  8A61              ;	and a
 775  8A61              ;	sbc hl,de
 776  8A61
 777  8A61              ;	call Determina_resultado_comparativa
 778  8A61
 779  8A61              ;	ld a,b
 780  8A61              ;	and a
 781  8A61              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 782  8A61
 783  8A61              ; ----- ----- -----
 784  8A61
 785  8A61              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 786  8A61              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 787  8A61
 788  8A61              ;	ld hl,Ctrl_1
 789  8A61              ;	res 2,(hl)
 790  8A61
 791  8A61 CD 80 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 792  8A64
 793  8A64              ;	ld a,(Ctrl_0)
 794  8A64              ;	bit 4,a
 795  8A64              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 796  8A64
 797  8A64              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 798  8A64              ; [[[
 799  8A64              ;	call Detecta_disparo_entidad
 800  8A64              ; ]]]
 801  8A64
 802  8A64 CD A0 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 803  8A67
 804  8A67              ;	ld hl,Ctrl_0
 805  8A67              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 806  8A67
 807  8A67 CD 90 8C     17 call Store_Restore_cajas
 808  8A6A
 809  8A6A C1           	pop bc
 810  8A6B
 811  8A6B 10 E7        	djnz 15B
 812  8A6D
 813  8A6D CD 21 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 814  8A70
 815  8A70              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 816  8A70              ; Hemos gestionado todas las unidades.
 817  8A70              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 818  8A70
 819  8A70              ;	ld hl,Ctrl_1
 820  8A70              ;	res 2,(hl)
 821  8A70
 822  8A70
 823  8A70              16
 824  8A70 CD 37 8B     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados. No ha habido movimiento.
 825  8A73
 826  8A73 21 E8 89     	ld hl,Ctrl_3
 827  8A76 CB C6        	set 0,(hl)											; Frame completo.
 828  8A78
 829  8A78 AF           	xor a
 830  8A79 D3 FE        	out ($fe),a
 831  8A7B 76           	halt
 832  8A7C
 833  8A7C              ; ----------------------------------------
 834  8A7C
 835  8A7C              ;	ld a,(Ctrl_1) 										; Existe Loop?
 836  8A7C              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 837  8A7C CA 1E 8A     	jp z,Main
 838  8A7F
 839  8A7F              ; RECARGA DE NUEVA OLEADA.
 840  8A7F
 841  8A7F              ;	ld a,(Contador_de_frames)
 842  8A7F              ;	ld b,a
 843  8A7F              ;	ld a,(Activa_recarga_cajas)
 844  8A7F              ;	cp b
 845  8A7F              ;	jr z,20F
 846  8A7F
 847  8A7F              ;	ld hl,Ctrl_1
 848  8A7F              ;	set 4,(hl)
 849  8A7F              ;	jp Main
 850  8A7F
 851  8A7F              ;20 ld hl,Ctrl_1
 852  8A7F              ;	res 4,(hl)
 853  8A7F
 854  8A7F              ;	ld a,(Contador_de_frames)
 855  8A7F
 856  8A7F              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 857  8A7F              ;! _ IMPREDECIBLE !!!!
 858  8A7F
 859  8A7F              ;	add 10
 860  8A7F              ;	ld (Clock_Entidades_en_curso),a
 861  8A7F
 862  8A7F              ;	jp 4B
 863  8A7F
 864  8A7F C9           	ret
 865  8A80
 866  8A80              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 867  8A80              ;
 868  8A80              ;	16/11/23
 869  8A80
 870  8A80              ;;Gestiona_Amadeus
 871  8A80
 872  8A80              ;! Activa/desactiva impacto con Amadeus.
 873  8A80
 874  8A80              ;	ld a,(Impacto)
 875  8A80              ;	and a
 876  8A80              ;	jr nz,2F
 877  8A80
 878  8A80              ;;	call Mov_Amadeus
 879  8A80
 880  8A80              ;;2 ld a,(Ctrl_0)
 881  8A80              ;;	bit 4,a
 882  8A80              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 883  8A80
 884  8A80              ;;	call Guarda_foto_entidad_a_pintar
 885  8A80              ;;	call Guarda_datos_de_borrado_Amadeus
 886  8A80
 887  8A80              ;;1 ld hl,Ctrl_0
 888  8A80              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 889  8A80
 890  8A80              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 891  8A80
 892  8A80              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 893  8A80
 894  8A80              ;	call Calcula_numero_de_disparotes
 895  8A80
 896  8A80              ;;	ret
 897  8A80
 898  8A80              ; -----------------------------
 899  8A80              ;
 900  8A80              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 901  8A80              ;
 902  8A80              ;	INPUTS: B a de estar a "0".
 903  8A80
 904  8A80              ;Prepara_Borra_sprites
 905  8A80
 906  8A80              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 907  8A80              ;	ld a,l
 908  8A80              ;	ret z
 909  8A80
 910  8A80              ;	srl a
 911  8A80
 912  8A80              ;2 sub 16
 913  8A80              ;	jr z,1F
 914  8A80              ;	inc b
 915  8A80              ;	jr 2B
 916  8A80
 917  8A80              ;1 inc b
 918  8A80
 919  8A80              ;	exx
 920  8A80              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 921  8A80              ;	exx
 922  8A80
 923  8A80              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 924  8A80              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 925  8A80
 926  8A80              ;	ret
 927  8A80
 928  8A80              ; --------------------------------------------------------------------------------------------------------------
 929  8A80              ;
 930  8A80              ;	15/12/23
 931  8A80
 932  8A80              Mov_obj
 933  8A80
 934  8A80              ;	ld a,(Ctrl_2)
 935  8A80              ;	bit 1,a
 936  8A80              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 937  8A80
 938  8A80              ; Explosión:
 939  8A80
 940  8A80              ;	ld a,(Frames_explosion)
 941  8A80              ;	and a
 942  8A80              ;	jr nz,4F
 943  8A80
 944  8A80              ;!  Una alimaña menos!!!!!!!!!1
 945  8A80
 946  8A80              ; Se trataba de una Entidad_guía ???
 947  8A80
 948  8A80              ;	ld a,(Ctrl_2)
 949  8A80              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 950  8A80              ;	jr z,5F
 951  8A80
 952  8A80              ;	ld hl,Ctrl_3
 953  8A80              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 954  8A80
 955  8A80              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 956  8A80              ;!! _generado puede ser distinto, (aletoriedad).
 957  8A80
 958  8A80              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 959  8A80              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 960  8A80              ;	dec (hl)
 961  8A80              ;	ld hl,Entidades_en_curso
 962  8A80              ;	dec (hl)
 963  8A80              ;	ld hl,Numero_de_entidades
 964  8A80              ;	dec (hl)
 965  8A80              ;	jr 3F
 966  8A80
 967  8A80              ; -----
 968  8A80
 969  8A80              ;	`Movemos´ la explosión.
 970  8A80
 971  8A80              ;4 ld hl,(Puntero_DESPLZ_der)
 972  8A80              ;	inc hl
 973  8A80              ;	inc hl
 974  8A80              ;	call Extrae_address
 975  8A80              ;;	ld (Puntero_objeto),hl
 976  8A80
 977  8A80              ;;	ld hl,Frames_explosion
 978  8A80              ;;	dec (hl)
 979  8A80
 980  8A80              ;;	ld hl,Ctrl_0
 981  8A80              ;;	set 4,(hl);;
 982  8A80
 983  8A80              ;;	jr 3F
 984  8A80
 985  8A80              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 986  8A80
 987  8A80              ;2 xor a
 988  8A80              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 989  8A80
 990  8A80              ; Movemos Entidades malignas.
 991  8A80              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 992  8A80
 993  8A80              ;	ld a,(Ctrl_2)
 994  8A80              ;	bit 5,a
 995  8A80              ;	jr nz,8F
 996  8A80
 997  8A80              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 998  8A80              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 999  8A80              ;	jr 7F
1000  8A80
1001  8A80              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1002  8A80
1003  8A80              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1004  8A80              ;	bit 4,a
1005  8A80              ;	ret z
1006  8A80
1007  8A80              ; Ha habido desplazamiento de la entidad maligna.
1008  8A80              ; Ha llegado a zona de AMADEUS ???
1009  8A80
1010  8A80              ;7 ld a,(Coordenada_y)
1011  8A80              ;	cp $14
1012  8A80              ;	jr c,1F
1013  8A80
1014  8A80              ; ---------
1015  8A80
1016  8A80              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1017  8A80              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1018  8A80
1019  8A80              ;	di
1020  8A80              ;	call Genera_coordenadas_X
1021  8A80              ;	call Compara_coordenadas_X
1022  8A80              ;	ei
1023  8A80
1024  8A80              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1025  8A80
1026  8A80              ; ---------
1027  8A80
1028  8A80              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1029  8A80              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1030  8A80              ;	call Limpia_Variables_de_borrado
1031  8A80
1032  8A80 C9           3 ret
1033  8A81
1034  8A81              ; --------------------------------------------------------------------------------------------------------------
1035  8A81              ;
1036  8A81              ;	29/1/23
1037  8A81
1038  8A81              ;Mov_Amadeus
1039  8A81
1040  8A81              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1041  8A81
1042  8A81              ;	call Mov_right
1043  8A81
1044  8A81              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1045  8A81              ;	bit 4,a
1046  8A81              ;	ret z
1047  8A81
1048  8A81              ; ---------
1049  8A81
1050  8A81              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1051  8A81              ;	call Repone_datos_de_borrado_Amadeus
1052  8A81              ;	call Limpia_Variables_de_borrado
1053  8A81
1054  8A81              ;	ret
1055  8A81
1056  8A81              ; -----------------------------------------------------------------------------------
1057  8A81              ;
1058  8A81              ;	20/01/24
1059  8A81              ;
1060  8A81              ;
1061  8A81
1062  8A81              Construye_movimientos_masticados_entidad
1063  8A81
1064  8A81 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1065  8A84 E5           	push hl
1066  8A85 CD C5 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1067  8A88              ;															; _ el (Contador_de_mov_masticados).
1068  8A88 CD 55 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1069  8A8B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1070  8A8B              ;	call Recompone_posicion_inicio
1071  8A8B
1072  8A8B CD E7 8D     1 call Draw
1073  8A8E CD AA 8A     	call Guarda_movimiento_masticado
1074  8A91
1075  8A91 CD CF 97     	call Movimiento
1076  8A94
1077  8A94 3A E8 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1078  8A97 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1079  8A99 28 F0        	jr z,1B
1080  8A9B
1081  8A9B              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1082  8A9B              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1083  8A9B
1084  8A9B E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1085  8A9C 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1086  8A9F
1087  8A9F              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1088  8A9F
1089  8A9F CD 33 99     	call Situa_en_contador_general_de_mov_masticados
1090  8AA2
1091  8AA2              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1092  8AA2              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1093  8AA2
1094  8AA2 ED 4B AC 89  	ld bc,(Contador_de_mov_masticados)
1095  8AA6 71           	ld (hl),c
1096  8AA7 23           	inc hl
1097  8AA8 70           	ld (hl),b
1098  8AA9
1099  8AA9 C9           	ret
1100  8AAA
1101  8AAA              ; -----------------------------------------------------------------------------------
1102  8AAA              ;
1103  8AAA              ;	28/12/23
1104  8AAA              ;
1105  8AAA              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1106  8AAA              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1107  8AAA
1108  8AAA              Guarda_movimiento_masticado
1109  8AAA
1110  8AAA ED 73 DE 89  	ld (Stack),sp
1111  8AAE ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1112  8AB2
1113  8AB2              ;	push hl
1114  8AB2 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1115  8AB4 FD E5            push iy 												; Pushea Puntero_objeto.
1116  8AB6
1117  8AB6 ED 7B DE 89      ld sp,(Stack)
1118  8ABA
1119  8ABA 2A AC 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1120  8ABD 23           	inc hl
1121  8ABE 22 AC 89     	ld (Contador_de_mov_masticados),hl
1122  8AC1
1123  8AC1 CD C5 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1124  8AC4              ;															; _ el (Contador_de_mov_masticados).
1125  8AC4 C9               ret
1126  8AC5
1127  8AC5              ; --------------------------------------------------------------------------------------------------------------
1128  8AC5              ;
1129  8AC5              ;	12/1/24
1130  8AC5              ;
1131  8AC5              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1132  8AC5
1133  8AC5              Actualiza_Puntero_de_almacen_de_mov_masticados
1134  8AC5
1135  8AC5 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1136  8AC8 01 04 00     	ld bc,4
1137  8ACB A7           	and a
1138  8ACC ED 4A        	adc hl,bc
1139  8ACE 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1140  8AD1 C9           	ret
1141  8AD2
1142  8AD2              ; --------------------------------------------------------------------------------------------------------------
1143  8AD2              ;
1144  8AD2              ;	09/03/24
1145  8AD2              ;
1146  8AD2              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1147  8AD2              ;
1148  8AD2              ;	IX contiene el puntero de impresión.
1149  8AD2              ;	DE contiene (Puntero_objeto).
1150  8AD2
1151  8AD2
1152  8AD2 ED 73 DE 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1153  8AD6 ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1154  8ADA
1155  8ADA D1           	pop de 															; DE contiene Puntero_objeto
1156  8ADB DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1157  8ADD
1158  8ADD ED 73 AA 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1159  8AE1
1160  8AE1 ED 7B DE 89  	ld sp,(Stack)
1161  8AE5
1162  8AE5 C9           	ret
1163  8AE6
1164  8AE6              ; --------------------------------------------------------------------------------------------------------------
1165  8AE6              ;
1166  8AE6              ;	28/12/23
1167  8AE6              ;
1168  8AE6              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1169  8AE6              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1170  8AE6
1171  8AE6              Guarda_foto_entidad_a_pintar
1172  8AE6
1173  8AE6 3A AE 89     	ld a,(Ctrl_0)
1174  8AE9 CB 77        	bit 6,a
1175  8AEB 28 04        	jr z,5F
1176  8AED
1177  8AED              ;	Guarda la foto de Amadeus.
1178  8AED
1179  8AED              ;	call Draw
1180  8AED              ;	call Guarda_movimiento_masticado	;! Provisional
1181  8AED CD BF 80     	call Genera_datos_de_impresion
1182  8AF0 C9           	ret
1183  8AF1
1184  8AF1              ; ENTIDADES!
1185  8AF1              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1186  8AF1
1187  8AF1 3A E8 89     5 ld a,(Ctrl_3)
1188  8AF4 CB 5F        	bit 3,a
1189  8AF6 28 01        	jr z,1F
1190  8AF8
1191  8AF8              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1192  8AF8
1193  8AF8              4
1194  8AF8              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1195  8AF8 C9           	ret
1196  8AF9
1197  8AF9              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1198  8AF9
1199  8AF9 3A E8 89     1 ld a,(Ctrl_3)
1200  8AFC CB 57        	bit 2,a
1201  8AFE 20 10        	jr nz,6F
1202  8B00
1203  8B00              ; Entidad guía o fantasma ???
1204  8B00
1205  8B00 3A B3 89     	ld a,(Ctrl_2)
1206  8B03 CB 6F        	bit 5,a
1207  8B05 20 10        	jr nz,3F
1208  8B07
1209  8B07              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1210  8B07
1211  8B07 18 EF        	jr 4B
1212  8B09
1213  8B09              ; ENTIDAD_GUÍA:
1214  8B09              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1215  8B09              ; _guardando "movimientos_masticados".
1216  8B09
1217  8B09 3A E8 89     2 ld a,(Ctrl_3)
1218  8B0C CB 57        	bit 2,a
1219  8B0E 28 07        	jr z,3F
1220  8B10
1221  8B10              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1222  8B10              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1223  8B10
1224  8B10 CB 97        6 res 2,a
1225  8B12 CB DF        	set 3,a
1226  8B14 32 E8 89     	ld (Ctrl_3),a
1227  8B17
1228  8B17
1229  8B17              ;	Esto sólo lo ejecuta una entidad guía.
1230  8B17
1231  8B17 CD E7 8D     3 	call Draw
1232  8B1A CD AA 8A     	call Guarda_movimiento_masticado
1233  8B1D CD BF 80     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1234  8B20
1235  8B20              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1236  8B20              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1237  8B20
1238  8B20              ;	call Convierte_guia_en_fantasma
1239  8B20 C9           	ret
1240  8B21
1241  8B21              ; *************************************************************************************************************************************************************
1242  8B21              ;
1243  8B21              ; 8/1/23
1244  8B21              ;
1245  8B21              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1246  8B21              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1247  8B21              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1248  8B21
1249  8B21              ; Destruye HL y DE !!!!!
1250  8B21
1251  8B21              Inicia_punteros_de_cajas
1252  8B21
1253  8B21 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1254  8B24 CD 4F 8B         call Extrae_address
1255  8B27 22 D0 89         ld (Puntero_store_caja),hl
1256  8B2A 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1257  8B2D 22 D4 89     	ld (Indice_restore_caja),hl
1258  8B30 CD 4F 8B     	call Extrae_address
1259  8B33 22 D2 89     	ld (Puntero_restore_caja),hl
1260  8B36 C9               ret
1261  8B37
1262  8B37              ; *************************************************************************************************************************************************************
1263  8B37              ;
1264  8B37              ; 8/1/23
1265  8B37              ;
1266  8B37              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1267  8B37
1268  8B37              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1269  8B37              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1270  8B37              ;	ret
1271  8B37              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1272  8B37              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1273  8B37              ;	ret
1274  8B37
1275  8B37              ; -------------------------------------------------------------------------------------------------------------
1276  8B37              ;
1277  8B37              ; 21/9/23
1278  8B37              ;
1279  8B37
1280  8B37              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1281  8B37
1282  8B37              ;;Limpia_album_Amadeus
1283  8B37              ;
1284  8B37              ;;	ld hl,Scanlines_album_Amadeus
1285  8B37              ;;	ld a,(hl)
1286  8B37              ;;	and a
1287  8B37              ;;	ret z
1288  8B37
1289  8B37              ;;	ld hl,Scanlines_album_Amadeus;
1290  8B37              ;;	ld de,Scanlines_album_Amadeus+1
1291  8B37              ;;	ld bc,11
1292  8B37              ;;	xor a
1293  8B37              ;;	ld (hl),a
1294  8B37              ;;	ldir
1295  8B37
1296  8B37              ;;	ld hl,Scanlines_album_Amadeus
1297  8B37              ;;	ld (End_Snapshot_Amadeus),hl
1298  8B37
1299  8B37              ;;	ret
1300  8B37
1301  8B37              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1302  8B37              ;	ld de,Variables_de_borrado+1
1303  8B37              ;	ld bc,5
1304  8B37              ;	xor a
1305  8B37              ;	ld (hl),a
1306  8B37              ;	ldir
1307  8B37              ;	ret
1308  8B37
1309  8B37              ; -------------------------------------------------------------------------------------------------------------
1310  8B37              ;
1311  8B37              ; 	21/02/24
1312  8B37              ;
1313  8B37              ;	MODIFICA: AF,HL,BC,DE
1314  8B37              ;
1315  8B37              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1316  8B37              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1317  8B37
1318  8B37              Calcula_numero_de_malotes
1319  8B37
1320  8B37 21 00 80     	ld hl,Scanlines_album
1321  8B3A EB           	ex de,hl
1322  8B3B 2A E4 89     	ld hl,(Scanlines_album_SP)
1323  8B3E
1324  8B3E 06 00        	ld b,0
1325  8B40 7D           	ld a,l
1326  8B41 93           	sub e
1327  8B42 28 07        	jr z,1F
1328  8B44
1329  8B44              ; Nº de malotes no es "0".
1330  8B44
1331  8B44 D6 06        2 sub 6
1332  8B46 04           	inc b
1333  8B47 A7           	and a
1334  8B48 20 FA        	jr nz,2B
1335  8B4A 78           	ld a,b
1336  8B4B
1337  8B4B 32 D9 89     1 ld (Numero_de_malotes),a
1338  8B4E C9           	ret
1339  8B4F
1340  8B4F              ; -------------------------------------------------------------------------------------------------------------
1341  8B4F              ;
1342  8B4F              ; 8/9/23
1343  8B4F              ;
1344  8B4F
1345  8B4F              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1346  8B4F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1347  8B4F
1348  8B4F              ;Calcula_malotes_Amadeus
1349  8B4F
1350  8B4F              ;	ld hl,Scanlines_album_Amadeus
1351  8B4F              ;	ex de,hl
1352  8B4F              ;	ld hl,(End_Snapshot_Amadeus)
1353  8B4F
1354  8B4F              ;	ld a,h
1355  8B4F              ;	and a
1356  8B4F              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1357  8B4F
1358  8B4F              ;	ld b,0
1359  8B4F              ;	ld a,l
1360  8B4F              ;	sub e
1361  8B4F              ;	jr z,1F
1362  8B4F
1363  8B4F              ; Nº de malotes no es "0".
1364  8B4F
1365  8B4F              ;2 sub 6
1366  8B4F              ;	inc b
1367  8B4F              ;	and a
1368  8B4F              ;	jr nz,2B
1369  8B4F              ;	ld a,b
1370  8B4F
1371  8B4F              ;1 ld (Numero_de_malotes),a
1372  8B4F              ;	ret
1373  8B4F
1374  8B4F              ; -------------------------------------------------------------------------------------------------------------
1375  8B4F              ;
1376  8B4F              ; 28/2/23
1377  8B4F              ;
1378  8B4F
1379  8B4F              ;;Calcula_numero_de_disparotes
1380  8B4F
1381  8B4F              ;	ld hl,Scanlines_album_disparos
1382  8B4F              ;	ex de,hl
1383  8B4F              ;	ld hl,(End_Snapshot_disparos)
1384  8B4F
1385  8B4F              ;	ld b,0
1386  8B4F              ;	ld a,l
1387  8B4F              ;	sub e
1388  8B4F              ;	jr z,1F
1389  8B4F
1390  8B4F              ; Nº de malotes no es "0".
1391  8B4F
1392  8B4F              ;2 sub 6
1393  8B4F              ;	inc b
1394  8B4F              ;	and a
1395  8B4F              ;	jr nz,2B
1396  8B4F              ;	ld a,b
1397  8B4F
1398  8B4F              ;1 ld (Numero_de_disparotes),a
1399  8B4F              ;	ret
1400  8B4F
1401  8B4F              ; *************************************************************************************************************************************************************
1402  8B4F              ;
1403  8B4F              ; 20/10/22
1404  8B4F              ;
1405  8B4F              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1406  8B4F              ;
1407  8B4F              ; Destruye el puntero y DE !!!!!
1408  8B4F
1409  8B4F 5E           Extrae_address ld e,(hl)
1410  8B50 23           	inc hl
1411  8B51 56           	ld d,(hl)
1412  8B52 2B           	dec hl
1413  8B53 EB           	ex de,hl
1414  8B54 C9           	ret
1415  8B55
1416  8B55              ; *************************************************************************************************************************************************************
1417  8B55              ;
1418  8B55              ;	20/1/24
1419  8B55              ;
1420  8B55              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1421  8B55              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1422  8B55              ;
1423  8B55              ;   Destruye HL y BC !!!!!,
1424  8B55              ;
1425  8B55              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1426  8B55              ;					"0" ..... Izquierda.
1427  8B55
1428  8B55              Inicia_Puntero_objeto
1429  8B55
1430  8B55 3A A0 89     	ld a,(Cuad_objeto)
1431  8B58 E6 01        	and 1
1432  8B5A F5           	push af
1433  8B5B CC 77 8B     	call z,Inicia_puntero_objeto_izq
1434  8B5E F1           	pop af
1435  8B5F C8           	ret z
1436  8B60 CD 64 8B     	call Inicia_puntero_objeto_der
1437  8B63 C9           	ret
1438  8B64
1439  8B64              ; Arrancamos desde la parte izquierda de la pantalla.
1440  8B64              ; Iniciamos (Indice_Sprite_der).
1441  8B64
1442  8B64 2A 96 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1443  8B67 22 9A 89     	ld (Puntero_DESPLZ_der),hl
1444  8B6A CD 4F 8B     	call Extrae_address
1445  8B6D 22 90 89     	ld (Puntero_objeto),hl
1446  8B70
1447  8B70 2A 98 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1448  8B73 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1449  8B76 C9           	ret
1450  8B77
1451  8B77              ; Arrancamos desde la parte derecha de la pantalla.
1452  8B77              ; Iniciamos (Indice_Sprite_izq).
1453  8B77
1454  8B77 2A 98 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1455  8B7A 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1456  8B7D CD 4F 8B     	call Extrae_address
1457  8B80 22 90 89     	ld (Puntero_objeto),hl
1458  8B83
1459  8B83 2A 96 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1460  8B86 22 9A 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1461  8B89 C9           	ret
1462  8B8A
1463  8B8A              ; **************************************************************************************************
1464  8B8A              ;
1465  8B8A              ;	31/01/24
1466  8B8A              ;
1467  8B8A              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1468  8B8A
1469  8B8A              Restore_entidad
1470  8B8A
1471  8B8A 2A D0 89     	ld hl,(Puntero_store_caja)
1472  8B8D 11 8B 89     	ld de,Bandeja_DRAW
1473  8B90 7E           	ld a,(hl)
1474  8B91 12           	ld (de),a
1475  8B92 23           	inc hl 											; (Tipo).
1476  8B93
1477  8B93 11 92 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1478  8B96 01 02 00     	ld bc,2
1479  8B99 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1480  8B9B
1481  8B9B 13           	inc de
1482  8B9C 7E           	ld a,(hl)
1483  8B9D 12           	ld (de),a 										; Transferimos (Attr).
1484  8B9E 23           	inc hl
1485  8B9F
1486  8B9F 11 A1 89     	ld de,Impacto
1487  8BA2
1488  8BA2 7E           	ld a,(hl)
1489  8BA3 12           	ld (de),a 										; Transferimos (Impacto).
1490  8BA4 23           	inc hl
1491  8BA5
1492  8BA5 13           	inc de
1493  8BA6
1494  8BA6 01 06 00     	ld bc,6
1495  8BA9 ED B0        	ldir
1496  8BAB
1497  8BAB 01 07 00     	ld bc,7
1498  8BAE ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1499  8BB0              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1500  8BB0 11 B3 89     	ld de,Ctrl_2
1501  8BB3
1502  8BB3 7E           	ld a,(hl)
1503  8BB4 12           	ld (de),a 										; Transferimos (Ctrl_2).
1504  8BB5
1505  8BB5 C9           	ret
1506  8BB6
1507  8BB6              ; **************************************************************************************************
1508  8BB6              ;
1509  8BB6              ;	08/05/23
1510  8BB6              ;
1511  8BB6              ;	Incrementamos los dos punteros de entidades. (+1).
1512  8BB6
1513  8BB6              Incrementa_punteros_de_cajas
1514  8BB6
1515  8BB6 2A D2 89     	ld hl,(Puntero_restore_caja)
1516  8BB9 22 D0 89     	ld (Puntero_store_caja),hl
1517  8BBC 2A D4 89     	ld hl,(Indice_restore_caja)
1518  8BBF 23           	inc hl
1519  8BC0 23           	inc hl
1520  8BC1 22 D4 89     	ld (Indice_restore_caja),hl
1521  8BC4 CD 4F 8B         call Extrae_address
1522  8BC7 22 D2 89         ld (Puntero_restore_caja),hl
1523  8BCA C9               ret
1524  8BCB
1525  8BCB              ; **************************************************************************************************
1526  8BCB              ;
1527  8BCB              ;	21/12/23
1528  8BCB              ;
1529  8BCB              ;	Restore_Amadeus
1530  8BCB              ;
1531  8BCB              ;	Cargamos en DRAW los parámetros de Amadeus.
1532  8BCB              ;
1533  8BCB
1534  8BCB              ;Restore_Amadeus	push hl
1535  8BCB              ;	push de
1536  8BCB              ; 	push bc
1537  8BCB              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1538  8BCB              ;	ld de,Bandeja_DRAW
1539  8BCB              ;	ld bc,42
1540  8BCB              ;	ldir
1541  8BCB              ;	pop bc
1542  8BCB              ;	pop de
1543  8BCB              ;	pop hl
1544  8BCB              ;	ret
1545  8BCB
1546  8BCB              ; *************************************************************************************************************************************************************
1547  8BCB              ;
1548  8BCB              ;	21/12/23
1549  8BCB              ;
1550  8BCB              ;	Store_Amadeus
1551  8BCB              ;
1552  8BCB              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1553  8BCB              ;
1554  8BCB              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1555  8BCB              ;
1556  8BCB              ;	DESTRUYE: HL y BC y DE.
1557  8BCB
1558  8BCB              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1559  8BCB              ;	ld bc,42
1560  8BCB              ;	ldir
1561  8BCB              ;	ret
1562  8BCB
1563  8BCB              ; -----------------------------------------------------------
1564  8BCB              ;
1565  8BCB              ;	21/12/23
1566  8BCB              ;
1567  8BCB              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1568  8BCB              ;
1569  8BCB              ;	Destruye: HL,BC,DE,A
1570  8BCB
1571  8BCB              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1572  8BCB              ;	ld bc,41
1573  8BCB              ;	xor a
1574  8BCB              ;	ld (hl),a;
1575  8BCB              ;	ld de,Bandeja_DRAW+1
1576  8BCB              ;	ldir
1577  8BCB              ;	ret
1578  8BCB
1579  8BCB              ; -----------------------------------------------------------
1580  8BCB
1581  8BCB              ; Teclado.
1582  8BCB
1583  8BCB 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1584  8BCD DB FE        	in a,($fe)
1585  8BCF E6 01        	and $01
1586  8BD1 28 02        	jr z,1f
1587  8BD3 18 F6        	jr Pulsa_ENTER
1588  8BD5 C9           1 ret
1589  8BD6
1590  8BD6              ; **************************************************************************************************
1591  8BD6              ;
1592  8BD6              ; Temporización.
1593  8BD6
1594  8BD6              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1595  8BD6              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1596  8BD6              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1597  8BD6              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1598  8BD6
1599  8BD6              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1600  8BD6              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1601  8BD6              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1602  8BD6
1603  8BD6              ; A partir de $4f61 no hace falta DELAY.
1604  8BD6
1605  8BD6              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1606  8BD6
1607  8BD6 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1608  8BD9 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1609  8BDA 78           	LD A,B
1610  8BDB A7           	AND A
1611  8BDC 20 FB        	JR NZ,wait
1612  8BDE C9           	RET
1613  8BDF
1614  8BDF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1615  8BDF              ;
1616  8BDF              ;	5/3/23
1617  8BDF              ;
1618  8BDF              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1619  8BDF
1620  8BDF              ;Movimiento_Amadeus
1621  8BDF
1622  8BDF              ; Disparo.
1623  8BDF
1624  8BDF              ;	ld a,(Disparo_Amadeus)
1625  8BDF              ;	and a
1626  8BDF              ;	jr nz,1F
1627  8BDF              ;	jr 2F
1628  8BDF
1629  8BDF              ;1 ld a,$f7													; "5" para disparar.
1630  8BDF              ;	in a,($fe)
1631  8BDF              ;	and $10
1632  8BDF
1633  8BDF              ;	push af
1634  8BDF              ;	call z,Genera_disparo
1635  8BDF              ;	pop af
1636  8BDF              ;	jr nz,2F
1637  8BDF
1638  8BDF              ;	ld a,(Disparo_Amadeus)
1639  8BDF              ;	xor 1
1640  8BDF              ;	ld (Disparo_Amadeus),a
1641  8BDF              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1642  8BDF              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1643  8BDF              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1644  8BDF              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1645  8BDF
1646  8BDF              ;	ld a,$f7
1647  8BDF              ;	in a,($fe)
1648  8BDF              ;	and $01
1649  8BDF              ;	ret z
1650  8BDF
1651  8BDF              ;	ld a,$f7
1652  8BDF              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1653  8BDF              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1654  8BDF              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1655  8BDF              ;	ret
1656  8BDF
1657  8BDF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1658  8BDF              ;
1659  8BDF              ;	Rutina provisional para que los malotes cagen balas.
1660  8BDF
1661  8BDF              ;Detecta_disparo_entidad
1662  8BDF
1663  8BDF              ;	ld a,(Disparo_entidad)
1664  8BDF              ;	and a
1665  8BDF              ;	ret z
1666  8BDF
1667  8BDF              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1668  8BDF
1669  8BDF              ;	ld a,$7f				; Detecta SPACE.
1670  8BDF              ;	in a,($fe)
1671  8BDF              ;	and 1
1672  8BDF              ;	ret nz
1673  8BDF
1674  8BDF              ;	call Genera_disparo
1675  8BDF              ;	ret
1676  8BDF
1677  8BDF              ; ----------------------------------------------------------------------
1678  8BDF              ;
1679  8BDF              ;	8/9/23
1680  8BDF
1681  8BDF              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1682  8BDF              ; 	dec hl
1683  8BDF              ;	ld a,(hl)
1684  8BDF              ;	and a
1685  8BDF              ;	ret z										; Salimos si es álbum está vacío.
1686  8BDF
1687  8BDF              ;	ld de,Variables_de_borrado+5
1688  8BDF              ;	ld bc,6
1689  8BDF              ;	lddr
1690  8BDF              ;	ret
1691  8BDF
1692  8BDF              ; ----------------------------------------------------------------------
1693  8BDF              ;
1694  8BDF              ;	9/9/23
1695  8BDF
1696  8BDF              ;Repone_datos_de_borrado_Amadeus
1697  8BDF
1698  8BDF              ;	ld hl,Variables_de_borrado
1699  8BDF              ;	ld de,Scanlines_album_Amadeus
1700  8BDF              ;	ld bc,6
1701  8BDF              ;	ldir
1702  8BDF
1703  8BDF              ;	ex de,hl
1704  8BDF              ;	ld (End_Snapshot_Amadeus),hl
1705  8BDF
1706  8BDF              ;	ret
1707  8BDF
1708  8BDF              ; ----------------------------------------------------------------------
1709  8BDF              ;
1710  8BDF              ;	27/10/23
1711  8BDF              ;
1712  8BDF
1713  8BDF              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1714  8BDF              ;	_ Scanlines_album correspondiente.
1715  8BDF
1716  8BDF              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1717  8BDF              ;	_ durante el proceso de escritura.
1718  8BDF
1719  8BDF              ;Repone_datos_de_borrado
1720  8BDF
1721  8BDF              ;	ld de,(Scanlines_album_SP)
1722  8BDF              ;	ld hl,Variables_de_borrado
1723  8BDF              ;	ld bc,6
1724  8BDF              ;	ldir
1725  8BDF
1726  8BDF              ;	ex de,hl
1727  8BDF              ;	ld (Scanlines_album_SP),hl
1728  8BDF
1729  8BDF              ;	ret
1730  8BDF
1731  8BDF              ; --------------------------------------------------------------------------------------
1732  8BDF
1733  8BDF              ;Pinta_Amadeus
1734  8BDF
1735  8BDF              ;   	call Calcula_malotes_Amadeus
1736  8BDF              ;	call Extrae_foto_Amadeus
1737  8BDF              ;	call Limpia_album_Amadeus
1738  8BDF
1739  8BDF              ;	ret
1740  8BDF
1741  8BDF              ; -----------------------------------------------------------------------------------
1742  8BDF              ;
1743  8BDF              ;	10/12/23
1744  8BDF              ;
1745  8BDF              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1746  8BDF
1747  8BDF              Actualiza_relojes
1748  8BDF
1749  8BDF 3A E8 89     	ld a,(Ctrl_3)
1750  8BE2 CB 47        	bit 0,a
1751  8BE4 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1752  8BE5
1753  8BE5 21 ED 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1754  8BE8 34           	inc (hl)
1755  8BE9
1756  8BE9 34           	inc (hl)
1757  8BEA 35           	dec (hl)
1758  8BEB C0           	ret nz
1759  8BEC
1760  8BEC 21 EE 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1761  8BEF 34           	inc (hl)
1762  8BF0 C9           	ret
1763  8BF1
1764  8BF1              ; ---------------------------------------------------------------
1765  8BF1
1766  8BF1              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8BF1              ;---------------------------------------------------------------------------------------------------------------
   2+ 8BF1              ;
   3+ 8BF1              ;   8/3/24
   4+ 8BF1              ;
   5+ 8BF1              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8BF1              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8BF1              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8BF1              ;	_ de la 1ª entidad del Nivel.
   9+ 8BF1              ;
  10+ 8BF1              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8BF1
  12+ 8BF1              ;	MODIFICA: HL,DE y A.
  13+ 8BF1              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8BF1
  15+ 8BF1              Inicializa_Nivel
  16+ 8BF1
  17+ 8BF1 2A F2 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8BF4 CD 4F 8B     	call Extrae_address
  19+ 8BF7 7E           	ld a,(hl)
  20+ 8BF8 32 D6 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8BFB 23           	inc hl
  22+ 8BFC CD 09 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8BFF 22 F4 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C02 CD 12 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C05
  26+ 8C05 CD 23 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C08 C9           	ret
  28+ 8C09
  29+ 8C09              ; ----------------------
  30+ 8C09
  31+ 8C09 11 B5 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C0C 01 04 00     	ld bc,4
  33+ 8C0F ED B0        	ldir
  34+ 8C11 C9           	ret
  35+ 8C12
  36+ 8C12 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C13 CD 63 8D         call Calcula_salto_en_BC
  38+ 8C16 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C19 A7               and a
  40+ 8C1A ED 4A            adc hl,bc
  41+ 8C1C CD 4F 8B         call Extrae_address
  42+ 8C1F 22 C1 89         ld (Puntero_indice_mov),hl
  43+ 8C22 C9               ret
  44+ 8C23
  45+ 8C23 3A 8B 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C26 CD 63 8D     	call Calcula_salto_en_BC
  47+ 8C29 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C2C A7               and a
  49+ 8C2D ED 4A            adc hl,bc
  50+ 8C2F CD 4F 8B         call Extrae_address
  51+ 8C32 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C35 C9           	ret
  53+ 8C36
  54+ 8C36              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C36              ;
  56+ 8C36              ;   5/1/24
  57+ 8C36              ;
  58+ 8C36              ;	Destruye A,BC,HL,DE
  59+ 8C36
  60+ 8C36              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C36              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C36
  63+ 8C36              Inicia_Entidades
  64+ 8C36
  65+ 8C36              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C36
  67+ 8C36 CD 21 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C39              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C39 CD CA 8D     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C3C
  71+ 8C3C 2A F4 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C3F
  73+ 8C3F 22 F4 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C42
  75+ 8C42 CD 11 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C45
  77+ 8C45 2A F4 89     	ld hl,(Datos_de_nivel)
  78+ 8C48
  79+ 8C48              ; En este punto:
  80+ 8C48              ;
  81+ 8C48              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C48              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C48
  84+ 8C48 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C49
  86+ 8C49 7E           	ld a,(hl)
  87+ 8C4A CD 86 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8C4D
  89+ 8C4D CD 75 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8C50
  91+ 8C50              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8C50
  93+ 8C50 CD 33 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8C53
  95+ 8C53 A7           	and a
  96+ 8C54 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8C56
  98+ 8C56              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8C56
 100+ 8C56              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8C56              ;	_ de este tipo de entidad.
 102+ 8C56
 103+ 8C56 CD 33 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8C59 CD 40 99     	call Transfiere_datos_de_contadores
 105+ 8C5C
 106+ 8C5C 18 06        	jr 4F
 107+ 8C5E
 108+ 8C5E CD 81 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8C61
 110+ 8C61              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8C61              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8C61              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8C61              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8C61              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8C61
 116+ 8C61 CD F1 8C     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8C64              ;																; _ Mov_masticados ya generados.
 118+ 8C64 CD A0 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8C67
 120+ 8C67              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8C67
 122+ 8C67 2A A8 89     	ld hl,(Puntero_de_impresion)
 123+ 8C6A CD 76 99     	call Genera_coordenadas
 124+ 8C6D CD 9C 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8C70 CD AA 8C     	call Limpiamos_bandeja_DRAW
 126+ 8C73 CD B6 8B     	call Incrementa_punteros_de_cajas
 127+ 8C76
 128+ 8C76              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8C76              ; _ entidad del Nivel.
 130+ 8C76
 131+ 8C76 3A E9 89     	ld a,(Ctrl_4)
 132+ 8C79 E6 F0        	and $f0
 133+ 8C7B 32 E9 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8C7E
 135+ 8C7E              ; Siguiente entidad del Nivel.
 136+ 8C7E
 137+ 8C7E 2A F4 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8C81 23           	inc hl 														; _ entidad del Nivel.
 139+ 8C82
 140+ 8C82 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8C83
 142+ 8C83 10 BA        	djnz 2B
 143+ 8C85
 144+ 8C85 C9           	ret
 145+ 8C86
 146+ 8C86              ; ---------------------------------------------------------------------
 147+ 8C86              ;
 148+ 8C86              ;	10/02/24
 149+ 8C86              ;
 150+ 8C86              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8C86              ;
 152+ 8C86              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8C86
 154+ 8C86              Definicion_segun_tipo
 155+ 8C86
 156+ 8C86 CD 63 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8C89 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8C8C CD 6B 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8C8F C9           	ret
 160+ 8C90
 161+ 8C90              ; ---------------------------------------------------------------------
 162+ 8C90              ;
 163+ 8C90              ;	30/01/24
 164+ 8C90
 165+ 8C90
 166+ 8C90              Store_Restore_cajas
 167+ 8C90
 168+ 8C90              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8C90
 170+ 8C90 2A A8 89     	ld hl,(Puntero_de_impresion)
 171+ 8C93 CD 76 99     	call Genera_coordenadas
 172+ 8C96
 173+ 8C96 CD 9C 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8C99 CD AA 8C     	call Limpiamos_bandeja_DRAW
 175+ 8C9C
 176+ 8C9C              ; 	Entidad_sospechosa. 20/4/23
 177+ 8C9C
 178+ 8C9C              ;	ld a,(Impacto)
 179+ 8C9C              ;	and a
 180+ 8C9C              ;	jr z,1F
 181+ 8C9C
 182+ 8C9C              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8C9C              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8C9C              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8C9C              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8C9C              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8C9C
 188+ 8C9C
 189+ 8C9C              ;1 ld hl,(Puntero_restore_caja)
 190+ 8C9C              ;	ld a,(hl)
 191+ 8C9C              ;	and a
 192+ 8C9C              ;	push af
 193+ 8C9C              ;	jr z,2F
 194+ 8C9C
 195+ 8C9C              ;	di
 196+ 8C9C              ;	ld de,Bandeja_DRAW
 197+ 8C9C              ;	ld bc,42
 198+ 8C9C              ;	ldir
 199+ 8C9C              ;	ei
 200+ 8C9C
 201+ 8C9C CD B6 8B     2 call Incrementa_punteros_de_cajas
 202+ 8C9F C9           	ret
 203+ 8CA0
 204+ 8CA0
 205+ 8CA0              ; ---------------------------------------------------------------------
 206+ 8CA0              ;
 207+ 8CA0              ;	29/01/24
 208+ 8CA0
 209+ 8CA0              Guarda_foto_de_mov_masticado
 210+ 8CA0
 211+ 8CA0 CD D2 8A     	call Cargamos_registros_con_mov_masticado
 212+ 8CA3 CD BF 80     	call Genera_datos_de_impresion
 213+ 8CA6              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8CA6              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CA6              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8CA6              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CA6
 218+ 8CA6 CD B5 8C     	call Decrementa_Contador_de_mov_masticados
 219+ 8CA9 C9           	ret
 220+ 8CAA
 221+ 8CAA              ; ---------------------------------------------------------------------
 222+ 8CAA              ;
 223+ 8CAA              ;	25/01/24
 224+ 8CAA
 225+ 8CAA 21 8B 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8CAD 06 2A        	ld b,42
 227+ 8CAF AF           	xor a
 228+ 8CB0
 229+ 8CB0 77           1 ld (hl),a
 230+ 8CB1 23           	inc hl
 231+ 8CB2 10 FC        	djnz 1B
 232+ 8CB4
 233+ 8CB4 C9           	ret
 234+ 8CB5
 235+ 8CB5              ; ---------------------------------------------------------------------
 236+ 8CB5              ;
 237+ 8CB5              ;	22/01/24
 238+ 8CB5
 239+ 8CB5 2A AC 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8CB8 2B           	dec hl
 241+ 8CB9
 242+ 8CB9 24           	inc h
 243+ 8CBA 25           	dec h
 244+ 8CBB
 245+ 8CBB FC C2 8C     	call m,Reinicia_entidad_maliciosa
 246+ 8CBE
 247+ 8CBE              ;	jr nz,1F
 248+ 8CBE
 249+ 8CBE              ;	inc l
 250+ 8CBE              ;	dec l
 251+ 8CBE
 252+ 8CBE              ;	di
 253+ 8CBE              ;	jr z,$
 254+ 8CBE              ;	ei
 255+ 8CBE
 256+ 8CBE 22 AC 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8CC1 C9           	ret
 258+ 8CC2
 259+ 8CC2              ; ---------------------------------------------------------------------
 260+ 8CC2              ;
 261+ 8CC2              ;	10/2/24
 262+ 8CC2
 263+ 8CC2              Reinicia_entidad_maliciosa
 264+ 8CC2
 265+ 8CC2              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8CC2
 267+ 8CC2 CD 33 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8CC5 CD 40 99     	call Transfiere_datos_de_contadores
 269+ 8CC8
 270+ 8CC8              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8CC8
 272+ 8CC8 3A 8B 89     	ld a,(Tipo)
 273+ 8CCB CD 86 8C     	call Definicion_segun_tipo
 274+ 8CCE
 275+ 8CCE E5           	push hl
 276+ 8CCF DD E1        	pop ix
 277+ 8CD1
 278+ 8CD1 DD 6E 0B     	ld l,(ix+11)
 279+ 8CD4 DD 66 0C     	ld h,(ix+12)
 280+ 8CD7
 281+ 8CD7 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8CDA
 283+ 8CDA              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8CDA              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8CDA
 286+ 8CDA 2A E4 89     	ld hl,(Scanlines_album_SP)
 287+ 8CDD 01 06 00     	ld bc,6
 288+ 8CE0 A7           	and a
 289+ 8CE1 ED 42        	sbc hl,bc
 290+ 8CE3 22 E4 89     	ld (Scanlines_album_SP),hl
 291+ 8CE6
 292+ 8CE6 CD D2 8A     	call Cargamos_registros_con_mov_masticado
 293+ 8CE9 CD BF 80     	call Genera_datos_de_impresion
 294+ 8CEC
 295+ 8CEC 2A AC 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8CEF 2B           	dec hl
 297+ 8CF0
 298+ 8CF0 C9           	ret
 299+ 8CF1
 300+ 8CF1
 301+ 8CF1
 302+ 8CF1
 303+ 8CF1              ; ---------------------------------------------------------------------
 304+ 8CF1              ;
 305+ 8CF1              ;	22/01/24
 306+ 8CF1
 307+ 8CF1 21 E9 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8CF4 CB 46        	bit 0,(hl)
 309+ 8CF6 20 0D        	jr nz,1F
 310+ 8CF8 CB 4E        	bit 1,(hl)
 311+ 8CFA 20 0C        	jr nz,2F
 312+ 8CFC CB 56        	bit 2,(hl)
 313+ 8CFE 20 0B        	jr nz,3F
 314+ 8D00 CB 5E        	bit 3,(hl)
 315+ 8D02 20 0A        	jr nz,4F
 316+ 8D04 C9           	ret
 317+ 8D05
 318+ 8D05 CB E6        1 set 4,(hl)
 319+ 8D07 C9           	ret
 320+ 8D08 CB EE        2 set 5,(hl)
 321+ 8D0A C9           	ret
 322+ 8D0B CB F6        3 set 6,(hl)
 323+ 8D0D C9           	ret
 324+ 8D0E CB FE        4 set 7,(hl)
 325+ 8D10 C9           	ret
 326+ 8D11
 327+ 8D11              ; ---------------------------------------------------------------------
 328+ 8D11              ;
 329+ 8D11              ;	23/01/24
 330+ 8D11              ;
 331+ 8D11              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D11              ;
 333+ 8D11              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D11              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D11              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D11              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D11
 338+ 8D11              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D11
 340+ 8D11 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D12 3D           	dec a
 342+ 8D13 20 06        	jr nz,1F
 343+ 8D15
 344+ 8D15              ; --- Tipo_1
 345+ 8D15
 346+ 8D15 21 E9 89     	ld hl,Ctrl_4
 347+ 8D18 CB C6        	set 0,(hl)
 348+ 8D1A C9           	ret
 349+ 8D1B
 350+ 8D1B 3D           1 dec a
 351+ 8D1C 20 06        	jr nz,2F
 352+ 8D1E
 353+ 8D1E              ; --- Tipo_2
 354+ 8D1E
 355+ 8D1E 21 E9 89     	ld hl,Ctrl_4
 356+ 8D21 CB CE        	set 1,(hl)
 357+ 8D23 C9           	ret
 358+ 8D24
 359+ 8D24 3D           2 dec a
 360+ 8D25 20 06        	jr nz,3F
 361+ 8D27
 362+ 8D27              ; --- Tipo_3
 363+ 8D27
 364+ 8D27 21 E9 89     	ld hl,Ctrl_4
 365+ 8D2A CB D6        	set 2,(hl)
 366+ 8D2C C9           	ret
 367+ 8D2D
 368+ 8D2D              ; --- Tipo_3
 369+ 8D2D
 370+ 8D2D 21 E9 89     3 ld hl,Ctrl_4
 371+ 8D30 CB D6        	set 2,(hl)
 372+ 8D32 C9           	ret
 373+ 8D33
 374+ 8D33              ; ---------------------------------------------------------------------
 375+ 8D33              ;
 376+ 8D33              ;	22/01/24
 377+ 8D33
 378+ 8D33 21 E9 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D36 CB 46        	bit 0,(hl)
 380+ 8D38 20 0E        	jr nz,1F
 381+ 8D3A
 382+ 8D3A CB 4E        	bit 1,(hl)
 383+ 8D3C 20 10        	jr nz,2F
 384+ 8D3E
 385+ 8D3E CB 56        	bit 2,(hl)
 386+ 8D40 20 12        	jr nz,3F
 387+ 8D42
 388+ 8D42 CB 5E        	bit 3,(hl)
 389+ 8D44 20 14        	jr nz,4F
 390+ 8D46 18 19        	jr 6F
 391+ 8D48
 392+ 8D48              ; Entidad_de_Tipo_1.
 393+ 8D48
 394+ 8D48 CB 66        1 bit 4,(hl)
 395+ 8D4A 28 15        	jr z,6F
 396+ 8D4C 18 10        	jr 5F
 397+ 8D4E
 398+ 8D4E              ; Entidad_de_Tipo_2.
 399+ 8D4E
 400+ 8D4E CB 6E        2 bit 5,(hl)
 401+ 8D50 28 0F        	jr z,6F
 402+ 8D52 18 0A        	jr 5F
 403+ 8D54
 404+ 8D54              ; Entidad_de_Tipo_3.
 405+ 8D54
 406+ 8D54 CB 76        3 bit 6,(hl)
 407+ 8D56 28 09        	jr z,6F
 408+ 8D58 18 04        	jr 5F
 409+ 8D5A
 410+ 8D5A              ; Entidad_de_Tipo_4.
 411+ 8D5A
 412+ 8D5A CB 7E        4 bit 7,(hl)
 413+ 8D5C 28 03        	jr z,6F
 414+ 8D5E
 415+ 8D5E              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8D5E
 417+ 8D5E AF           5 xor a
 418+ 8D5F 3C           	inc a
 419+ 8D60 C9           	ret
 420+ 8D61
 421+ 8D61              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8D61
 423+ 8D61 AF           6 xor a
 424+ 8D62 C9           	ret
 425+ 8D63
 426+ 8D63              ;	------------------------------------------------------------------------------------
 427+ 8D63              ;
 428+ 8D63              ;	12/01/24
 429+ 8D63              ;
 430+ 8D63              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8D63              ;
 432+ 8D63              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8D63              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8D63
 435+ 8D63 CB 27        Calcula_salto_en_BC sla a
 436+ 8D65 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8D67 4F           	ld c,a
 438+ 8D68 06 00        	ld b,0
 439+ 8D6A C9           	ret
 440+ 8D6B
 441+ 8D6B              ; ------------------------------------------------------------------
 442+ 8D6B              ;
 443+ 8D6B              ;	19/1/24
 444+ 8D6B              ;
 445+ 8D6B              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8D6B              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8D6B
 448+ 8D6B A7           Situa_en_datos_de_definicion and a
 449+ 8D6C ED 4A        	adc hl,bc
 450+ 8D6E CD 4F 8B     	call Extrae_address
 451+ 8D71 22 DC 89         ld (Datos_de_entidad),hl
 452+ 8D74 C9           	ret
 453+ 8D75
 454+ 8D75              ; ------------------------------------------------------------------
 455+ 8D75
 456+ 8D75              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8D75              ; 	inc de
 458+ 8D75              ; 	inc de
 459+ 8D75              ; 	ex de,hl
 460+ 8D75              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8D75              ; 	ret
 462+ 8D75
 463+ 8D75              ; ----------------------------------------------------------------------------------------------------------
 464+ 8D75              ;
 465+ 8D75              ;	31/1/24
 466+ 8D75              ;
 467+ 8D75              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8D75              ;	_ de entidad.
 469+ 8D75              ;
 470+ 8D75              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8D75              ;
 472+ 8D75              ;
 473+ 8D75              ;	MODIFICA: HL,DE y BC
 474+ 8D75
 475+ 8D75
 476+ 8D75              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8D75
 478+ 8D75 11 8B 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8D78 01 03 00     	ld bc,3
 480+ 8D7B ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8D7D              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8D7D 11 95 89     	ld de,Attr									; DE en (Attr).
 483+ 8D80 01 05 00     	ld bc,5
 484+ 8D83 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8D85              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8D85 11 9E 89     	ld de,Posicion_inicio
 487+ 8D88 01 03 00     	ld bc,3
 488+ 8D8B ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8D8D              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8D8D 11 AA 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8D90 01 02 00     	ld bc,2
 492+ 8D93 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8D95
 494+ 8D95 11 B4 89     	ld de,Frames_explosion
 495+ 8D98 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8D9A 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8D9B
 498+ 8D9B C9           	ret
 499+ 8D9C
 500+ 8D9C              ; ----------------------------------------------------------------------------------------------------------
 501+ 8D9C              ;
 502+ 8D9C              ;	22/01/24
 503+ 8D9C              ;
 504+ 8D9C              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8D9C              ;
 506+ 8D9C              ;	Las cajas contienen entidades iniciadas:
 507+ 8D9C              ;
 508+ 8D9C              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8D9C              ;
 510+ 8D9C              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8D9C              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8D9C              ;
 513+ 8D9C              ;	MODIFICA: HL,DE y BC
 514+ 8D9C
 515+ 8D9C 21 8B 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8D9F ED 5B D0 89  	ld de,(Puntero_store_caja)
 517+ 8DA3 7E           	ld a,(hl)
 518+ 8DA4 12           	ld (de),a
 519+ 8DA5 13           	inc de 													; (Tipo).
 520+ 8DA6
 521+ 8DA6 21 92 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DA9 01 02 00     	ld bc,2
 523+ 8DAC ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8DAE              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8DAE 23           	inc hl
 526+ 8DAF 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8DB0 12           	ld (de),a
 528+ 8DB1 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8DB2
 530+ 8DB2 21 A1 89     	ld hl,Impacto
 531+ 8DB5 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8DB6 12           	ld (de),a
 533+ 8DB7 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8DB8              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8DB8 23           	inc hl
 536+ 8DB9 01 06 00     	ld bc,6
 537+ 8DBC ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8DBE              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8DBE 01 07 00     	ld bc,7
 540+ 8DC1 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8DC3              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8DC3              ;															; HL apunta ahora a (Columnas).
 543+ 8DC3 21 B3 89     	ld hl,Ctrl_2
 544+ 8DC6 7E           	ld a,(hl)
 545+ 8DC7 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8DC8 13           	inc de
 547+ 8DC9
 548+ 8DC9 C9           	ret
 549+ 8DCA
 550+ 8DCA              ;---------------------------------------------------------------------------------------------------------------
 551+ 8DCA              ;
 552+ 8DCA              ;	5/1/24
 553+ 8DCA              ;
 554+ 8DCA              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8DCA              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8DCA              ;
 557+ 8DCA              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8DCA              ;
 559+ 8DCA              ;	(Numero_parcial_de_entidades)="7".
 560+ 8DCA              ;
 561+ 8DCA              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8DCA              ;
 563+ 8DCA              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8DCA              ;
 565+ 8DCA              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8DCA              ;	MODIFICA: A y B.
 567+ 8DCA              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8DCA
 569+ 8DCA              Inicializa_Numero_parcial_de_entidades
 570+ 8DCA
 571+ 8DCA              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8DCA
 573+ 8DCA 3A D6 89     	ld a,(Numero_de_entidades)
 574+ 8DCD A7           	and a
 575+ 8DCE
 576+ 8DCE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8DCE              ;	jr z,$
 578+ 8DCE              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8DCE
 580+ 8DCE 20 03        	jr nz,3F
 581+ 8DD0
 582+ 8DD0              ; ---------- ---------- ----------
 583+ 8DD0
 584+ 8DD0              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8DD0              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8DD0
 587+ 8DD0 CD F1 8B     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8DD3
 589+ 8DD3              ; ---------- ---------- ----------
 590+ 8DD3
 591+ 8DD3 3A D6 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8DD6 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8DD8 38 08        	jr c,1F
 594+ 8DDA
 595+ 8DDA              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8DDA              ; Actualizamos variables.
 597+ 8DDA
 598+ 8DDA 3E 07        	ld a,7
 599+ 8DDC 32 D7 89     	ld (Numero_parcial_de_entidades),a
 600+ 8DDF 47           	ld b,a
 601+ 8DE0 18 04        	jr 2F
 602+ 8DE2
 603+ 8DE2              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8DE2              ; (Numero_de_entidades)="0".
 605+ 8DE2
 606+ 8DE2 32 D7 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8DE5 47           	ld b,a
 608+ 8DE6 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1767  8DE7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DE7              ; ******************************************************************************************************************************************************************************************
   2+ 8DE7              ;
   3+ 8DE7              ; 26/06/23
   4+ 8DE7              ;
   5+ 8DE7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DE7
   7+ 8DE7              Draw
   8+ 8DE7
   9+ 8DE7 CD D1 90     	call Prepara_draw
  10+ 8DEA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8DEB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8DEC 28 05        	jr z,2F
  13+ 8DEE
  14+ 8DEE 3A A0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8DF1 18 0C        	jr 1F
  16+ 8DF3
  17+ 8DF3 2A 9E 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8DF6 22 8E 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8DF9 CD 85 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8DFC              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8DFC
  22+ 8DFC CD 97 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8DFF
  24+ 8DFF 3A AE 89     1 ld a,(Ctrl_0)
  25+ 8E02 CB 6F        	bit 5,a
  26+ 8E04 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E06
  28+ 8E06 CD 1B 8E     	call Comprueba_limite_horizontal
  29+ 8E09 CD AB 8E     	call Comprueba_limite_vertical
  30+ 8E0C
  31+ 8E0C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E0C              ; -----------------------
  33+ 8E0C              ; -----------------------
  34+ 8E0C              ; -----------------------
  35+ 8E0C
  36+ 8E0C CD 01 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E0F CD 38 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E12              ;	call Define_rutina_de_impresion
  39+ 8E12
  40+ 8E12 3A AE 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E15 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E17 32 AE 89     	ld (Ctrl_0),a
  43+ 8E1A
  44+ 8E1A C9           	ret
  45+ 8E1B
  46+ 8E1B              ; *******************************************************************************************************************************************************************************************
  47+ 8E1B              ;	21/01/23
  48+ 8E1B              ;
  49+ 8E1B              ; 	Comprueba_limite_horizontal.
  50+ 8E1B              ;
  51+ 8E1B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E1B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E1B              ;
  54+ 8E1B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E1B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E1B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E1B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E1B
  59+ 8E1B
  60+ 8E1B
  61+ 8E1B 3A AE 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E1E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E20 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E22 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E24 32 AE 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E27 18 09            jr 6F
  67+ 8E29 CB 5F        1 bit 3,a
  68+ 8E2B 28 0A            jr z,2F
  69+ 8E2D E6 F7            and $f7
  70+ 8E2F 32 AE 89         ld (Ctrl_0),a
  71+ 8E32 CD 85 8F     6 call Inicializacion
  72+ 8E35 18 5B            jr 5F
  73+ 8E37 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E38
  75+ 8E38              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E38              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E38
  78+ 8E38 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E39 2A B0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E3C CD 58 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E3F 67           	ld h,a
  82+ 8E40 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E41 CD 58 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E44 67           	ld h,a
  85+ 8E45 A7           	and a
  86+ 8E46 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E48 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E49 3A A0 89     	ld a,(Cuad_objeto)
  89+ 8E4C FE 02        	cp 2
  90+ 8E4E 38 1E        	jr c,3F
  91+ 8E50 28 1C        	jr z,3F
  92+ 8E52 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8E53 28 23            jr z,7F
  94+ 8E55 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8E57 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8E59 E1           	pop hl
  97+ 8E5A
  98+ 8E5A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8E5A              ; _para indicar con E="2" en caso necesario.
 100+ 8E5A
 101+ 8E5A E5               push hl
 102+ 8E5B C5               push bc
 103+ 8E5C CD 58 99     	call calcula_tercio
 104+ 8E5F FE 01        	cp 1
 105+ 8E61 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8E63 CD 93 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8E66 28 26            jr z,9F
 108+ 8E68 38 24            jr c,9F
 109+ 8E6A 1E 00        11 ld e,0
 110+ 8E6C 18 22            jr 8F
 111+ 8E6E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8E6F 28 07        	jr z, 7F
 113+ 8E71 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8E73 1E 00         	ld e,0
 115+ 8E75 E1           	pop hl
 116+ 8E76 18 04        	jr 4F
 117+ 8E78 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8E7A 18 15            jr 10F
 119+ 8E7C
 120+ 8E7C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8E7C              ; _para indicar con E="2" en caso necesario.
 122+ 8E7C
 123+ 8E7C E5           4 push hl
 124+ 8E7D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8E7E CD 58 99     	call calcula_tercio
 126+ 8E81 FE 01        	cp 1
 127+ 8E83 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8E85 CD 93 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8E88 28 04            jr z,9F
 130+ 8E8A 30 02            jr nc,9F
 131+ 8E8C 18 02        	jr 8F
 132+ 8E8E 1E 02        9 ld e,2
 133+ 8E90 C1           8 pop bc
 134+ 8E91 E1           10 pop hl
 135+ 8E92 C9           5 ret
 136+ 8E93
 137+ 8E93              ; --------------------
 138+ 8E93              ;
 139+ 8E93              ; 25/08/22
 140+ 8E93
 141+ 8E93 CD 58 99     Comprueba_centro call calcula_tercio
 142+ 8E96 67               ld h,a
 143+ 8E97 08           	ex af,af
 144+ 8E98 FE 02        	cp 2
 145+ 8E9A 38 07        	jr c,1F
 146+ 8E9C 28 05        	jr z,1F
 147+ 8E9E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EA1 18 03        	jr 2F
 149+ 8EA3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8EA6 08           2 ex af,af
 151+ 8EA7 A7               and a
 152+ 8EA8 ED 42            sbc hl,bc
 153+ 8EAA C9               ret
 154+ 8EAB
 155+ 8EAB              ; *********************************************************************************************************************************************************************************************
 156+ 8EAB              ;
 157+ 8EAB              ;   16/8/22
 158+ 8EAB              ;
 159+ 8EAB              ;	Comprueba_limite_vertical
 160+ 8EAB              ;
 161+ 8EAB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8EAB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8EAB              ;
 164+ 8EAB
 165+ 8EAB 2A 8E 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8EAE 7D           	ld a,l
 167+ 8EAF E6 1F        	and $1F
 168+ 8EB1 57           	ld d,a
 169+ 8EB2 3A B2 89     	ld a,(Limite_vertical)
 170+ 8EB5 BA           	cp d 											; Límite - Posición.
 171+ 8EB6 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8EB7 3A A0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8EBA CB 47        	bit 0,a
 174+ 8EBC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8EBE
 176+ 8EBE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8EBE
 178+ 8EBE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8EBF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8EC1
 181+ 8EC1              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8EC1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8EC1
 184+ 8EC1 3A 92 89         ld a,(Coordenada_X)
 185+ 8EC4 16 0F            ld d,Centro_izquierda
 186+ 8EC6 A7               and a
 187+ 8EC7 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8EC8 28 1E            jr z,3F
 189+ 8ECA 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8ECC              ;                                                    ; _salimos sin modificar nada.
 191+ 8ECC 18 0E            jr 2F
 192+ 8ECE 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8ECF 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8ED1
 195+ 8ED1              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8ED1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8ED1
 198+ 8ED1 3A 92 89         ld a,(Coordenada_X)
 199+ 8ED4 16 10            ld d,Centro_derecha
 200+ 8ED6 A7               and a
 201+ 8ED7 92               sub d
 202+ 8ED8 28 0E            jr z,3F
 203+ 8EDA 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8EDC              ;                                                    ; _salimos sin modificar nada.
 205+ 8EDC CB 43        2 bit 0,e
 206+ 8EDE 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8EE0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8EE1 CD 75 8F         call Modificaccionne
 209+ 8EE4 C1           	pop bc
 210+ 8EE5 CD 85 8F         call Inicializacion
 211+ 8EE8 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8EE9
 213+ 8EE9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8EE9
 215+ 8EE9 C5           4 push bc
 216+ 8EEA 01 8D 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8EED 0A           	ld a,(bc)
 218+ 8EEE 3D           	dec a
 219+ 8EEF 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8EF0 7D           	ld a,l
 221+ 8EF1 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8EF2 CB 47        	bit 0,a
 223+ 8EF4 28 03        	jr z,5F
 224+ 8EF6 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8EF7 18 2E        	jr 7F
 226+ 8EF9
 227+ 8EF9              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8EF9
 229+ 8EF9 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8EFA F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8EFB 3A AE 89     	ld a,(Ctrl_0)
 232+ 8EFE CB 4F        	bit 1,a
 233+ 8F00 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F02 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F03
 236+ 8F03              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F03
 238+ 8F03 1C               inc e
 239+ 8F04 1D               dec e
 240+ 8F05 20 07            jr nz,12F
 241+ 8F07 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F08 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F09 22 8E 89     	ld (Posicion_actual),hl
 244+ 8F0C 18 44        13 jr 9F
 245+ 8F0E CB 43        12 bit 0,e
 246+ 8F10 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F12              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F12 C1           	pop bc
 249+ 8F13 18 D3        	jr 3B
 250+ 8F15 80           14 add b
 251+ 8F16 6F               ld l,a
 252+ 8F17 22 8E 89     	ld (Posicion_actual),hl
 253+ 8F1A CD 75 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F1D 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F1F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F21 32 AE 89         ld (Ctrl_0),a
 257+ 8F24 F1           	pop af
 258+ 8F25 18 2B        	jr 9F
 259+ 8F27
 260+ 8F27              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F27
 262+ 8F27 F5           7 push af
 263+ 8F28 3A AE 89     	ld a,(Ctrl_0)
 264+ 8F2B CB 47        	bit 0,a
 265+ 8F2D 20 1D        	jr nz,8F
 266+ 8F2F F1           	pop af
 267+ 8F30
 268+ 8F30              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F30
 270+ 8F30 1C           	inc e
 271+ 8F31 1D               dec e
 272+ 8F32 20 07            jr nz,10F
 273+ 8F34 90           	sub b
 274+ 8F35 6F               ld l,a
 275+ 8F36 22 8E 89     	ld (Posicion_actual),hl
 276+ 8F39 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F3B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F3B CB 43        10 bit 0,e
 279+ 8F3D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F3F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F3F C1           	pop bc
 282+ 8F40 18 A6        	jr 3B
 283+ 8F42 90           16 sub b
 284+ 8F43 6F               ld l,a
 285+ 8F44 22 8E 89     	ld (Posicion_actual),hl
 286+ 8F47 CD 75 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F4A 18 06            jr 9F
 288+ 8F4C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8F4E 32 AE 89         ld (Ctrl_0),a
 290+ 8F51 F1           	pop af
 291+ 8F52 C1           9 pop bc
 292+ 8F53 1E 00        	ld e,0
 293+ 8F55 CD 85 8F         call Inicializacion
 294+ 8F58 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8F59 08           	ex af,af
 296+ 8F5A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8F5B 18 8B            jr 3B
 298+ 8F5D
 299+ 8F5D              ; --------------------
 300+ 8F5D
 301+ 8F5D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8F5F CD EC 90     1 call PreviousScan
 303+ 8F62 10 FB            djnz 1B
 304+ 8F64 22 8E 89     	ld (Posicion_actual),hl
 305+ 8F67 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8F68 C9           	ret
 307+ 8F69
 308+ 8F69              ; --------------------
 309+ 8F69
 310+ 8F69 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8F6B CD DD 90     1 call NextScan
 312+ 8F6E 10 FB            djnz 1B
 313+ 8F70 22 8E 89     	ld (Posicion_actual),hl
 314+ 8F73 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8F74 C9           	ret
 316+ 8F75
 317+ 8F75              ; --------------------
 318+ 8F75              ;
 319+ 8F75              ;	22/01/23
 320+ 8F75              ;
 321+ 8F75              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8F75              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8F75              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8F75
 325+ 8F75
 326+ 8F75              Modificaccionne
 327+ 8F75
 328+ 8F75 3A A0 89     	ld a,(Cuad_objeto)
 329+ 8F78 FE 02        	cp 2
 330+ 8F7A CC 5D 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8F7D DC 5D 8F         call c,Modifica_Pos_actual
 332+ 8F80 C8           	ret z
 333+ 8F81 CD 69 8F         call Modifica_Pos_actual2
 334+ 8F84 C9               ret
 335+ 8F85
 336+ 8F85              ; *************************************************************************************************************************************************************************************************
 337+ 8F85              ;
 338+ 8F85              ;	13/8/22
 339+ 8F85              ;
 340+ 8F85              ;	Inicializacion
 341+ 8F85              ;
 342+ 8F85              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8F85              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8F85              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8F85              ;
 346+ 8F85              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8F85              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8F85              ;	_ desaparece/aparece.
 349+ 8F85
 350+ 8F85              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8F85              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8F85              ;
 353+ 8F85              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8F85              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8F85              ; 		   [E] ="0"
 356+ 8F85
 357+ 8F85              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8F85
 359+ 8F85 CD 58 99     Inicializacion call calcula_tercio
 360+ 8F88 28 36        	jr z,primit
 361+ 8F8A E6 02        	and 2
 362+ 8F8C 20 07        	jr nz,segmit
 363+ 8F8E 7D           	ld a,l
 364+ 8F8F FE 7F        	cp $7f
 365+ 8F91 38 2D        	jr c,primit
 366+ 8F93 28 2B        	jr z,primit
 367+ 8F95 CD FB 8F     segmit call column
 368+ 8F98 38 13        	jr c,tercuad
 369+ 8F9A 3E 04        cuarcuad ld a,4
 370+ 8F9C 32 A0 89     	ld (Cuad_objeto),a
 371+ 8F9F 21 20 48     	ld hl,$4820
 372+ 8FA2 22 B0 89     	ld (Limite_horizontal),hl
 373+ 8FA5 21 B2 89     	ld hl,Limite_vertical
 374+ 8FA8 36 0D        	ld (hl),$0d
 375+ 8FAA 08           	ex af,af
 376+ 8FAB 18 3C        	jr 1F
 377+ 8FAD              tercuad
 378+ 8FAD 3E 03        	ld a,3
 379+ 8FAF 32 A0 89     	ld (Cuad_objeto),a
 380+ 8FB2 21 20 48     	ld hl,$4820
 381+ 8FB5 22 B0 89     	ld (Limite_horizontal),hl
 382+ 8FB8 21 B2 89     	ld hl,Limite_vertical
 383+ 8FBB 36 12        	ld (hl),$12
 384+ 8FBD 08           	ex af,af
 385+ 8FBE 18 29        	jr 1F
 386+ 8FC0 CD FB 8F     primit call column
 387+ 8FC3 38 13        	jr c, primcuad
 388+ 8FC5              segcuad
 389+ 8FC5 3E 02        	ld a,2
 390+ 8FC7 32 A0 89     	ld (Cuad_objeto),a
 391+ 8FCA 21 C0 4F     	ld hl,$4fc0
 392+ 8FCD 22 B0 89     	ld (Limite_horizontal),hl
 393+ 8FD0 21 B2 89     	ld hl,Limite_vertical
 394+ 8FD3 36 0D        	ld (hl),$0d
 395+ 8FD5 08           	ex af,af
 396+ 8FD6 18 11        	jr 1F
 397+ 8FD8              primcuad
 398+ 8FD8 3E 01        	ld a,1
 399+ 8FDA 32 A0 89     	ld (Cuad_objeto),a
 400+ 8FDD 21 C0 4F     	ld hl,$4fc0
 401+ 8FE0 22 B0 89     	ld (Limite_horizontal),hl
 402+ 8FE3 21 B2 89     	ld hl,Limite_vertical
 403+ 8FE6 36 12        	ld (hl),$12
 404+ 8FE8 08           	ex af,af
 405+ 8FE9
 406+ 8FE9 C5           1 push bc
 407+ 8FEA E5           	push hl
 408+ 8FEB D5           	push de
 409+ 8FEC
 410+ 8FEC 2A 8E 89     	ld hl,(Posicion_actual)
 411+ 8FEF CD 76 99     	call Genera_coordenadas
 412+ 8FF2
 413+ 8FF2 D1           	pop de
 414+ 8FF3 E1           	pop hl
 415+ 8FF4 C1           	pop bc
 416+ 8FF5
 417+ 8FF5 21 AE 89     	ld hl,Ctrl_0
 418+ 8FF8 CB EE        	set 5,(hl)
 419+ 8FFA C9           	ret
 420+ 8FFB
 421+ 8FFB              ; ------------------------------------------------------------------------------------------------------------------
 422+ 8FFB
 423+ 8FFB              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 8FFB              ;
 425+ 8FFB              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 8FFB
 427+ 8FFB 7D           column ld a,l
 428+ 8FFC E6 1F        	and $1f
 429+ 8FFE FE 10         	cp $10
 430+ 9000 C9            	ret
 431+ 9001
 432+ 9001              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9001              ;
 434+ 9001              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9001              ;
 436+ 9001              ; 14/12/22
 437+ 9001              ;
 438+ 9001              ;	Modifica: A y BC.
 439+ 9001
 440+ 9001 3A A0 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9004 E6 01        	and 1
 442+ 9006 28 17        	jr z,1F
 443+ 9008
 444+ 9008              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9008
 446+ 9008 3A 92 89     	ld a,(Coordenada_X)
 447+ 900B 47           	ld b,a
 448+ 900C 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 900D 79           	ld a,c
 450+ 900E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 900F 38 08        	jr c,2F
 452+ 9011 47           	ld b,a
 453+ 9012 79           	ld a,c
 454+ 9013 90           	sub b
 455+ 9014 32 AF 89     	ld (Columnas),a
 456+ 9017 18 1B        	jr 4F
 457+ 9019 79           2 ld a,c
 458+ 901A 32 AF 89     	ld (Columnas),a
 459+ 901D 18 15        	jr 4F
 460+ 901F
 461+ 901F              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 901F
 463+ 901F 3A 92 89     1 ld a,(Coordenada_X)
 464+ 9022 81           	add c
 465+ 9023 3D           	dec a
 466+ 9024 D6 1F        	sub $1f
 467+ 9026 38 08        	jr c,3F
 468+ 9028 47           	ld b,a
 469+ 9029 79           	ld a,c
 470+ 902A 90           	sub b
 471+ 902B 32 AF 89     	ld (Columnas),a
 472+ 902E 18 04        	jr 4F
 473+ 9030 79           3 ld a,c
 474+ 9031 32 AF 89     	ld (Columnas),a
 475+ 9034 D9           4 exx
 476+ 9035 4F           	ld c,a
 477+ 9036 D9           	exx
 478+ 9037 C9            ret
 479+ 9038
 480+ 9038              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9038              ;
 482+ 9038              ;   19/7/23
 483+ 9038              ;
 484+ 9038              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9038              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9038              ;
 487+ 9038              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9038              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9038              ;
 490+ 9038              ;	DESTRUYE: HL,B Y A.
 491+ 9038
 492+ 9038 3A A0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 903B FE 02        	cp 2
 494+ 903D 38 18        	jr c,1F
 495+ 903F 28 16        	jr z,1F
 496+ 9041 E6 01        	and 1
 497+ 9043 28 0D        	jr z,3F
 498+ 9045
 499+ 9045              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9045
 501+ 9045 CD 8B 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9048
 503+ 9048 7D           9 ld a,l
 504+ 9049 E6 1F        	and $1f
 505+ 904B 28 2A        	jr z,7F
 506+ 904D 2B           	dec hl
 507+ 904E 10 F8        	djnz 9B
 508+ 9050 18 25        	jr 7F
 509+ 9052
 510+ 9052              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9052
 512+ 9052 2A 8E 89     3 ld hl,(Posicion_actual)
 513+ 9055 18 20        	jr 7F
 514+ 9057
 515+ 9057 28 14        1 jr z,2F
 516+ 9059
 517+ 9059              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9059
 519+ 9059 CD 8B 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 905C
 521+ 905C 7D           4 ld a,l
 522+ 905D E6 1F        	and $1f
 523+ 905F 28 03        	jr z,6F
 524+ 9061 2B           	dec hl
 525+ 9062 10 F8        	djnz 4B
 526+ 9064 06 0F        6 ld b,15
 527+ 9066 CD EC 90     5 call PreviousScan
 528+ 9069 10 FB        	djnz 5B
 529+ 906B 18 0A        	jr 7F
 530+ 906D
 531+ 906D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 906D
 533+ 906D CD 8B 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9070 06 0F        	ld b,15
 535+ 9072 CD EC 90     8 call PreviousScan
 536+ 9075 10 FB        	djnz 8B
 537+ 9077
 538+ 9077 E5           7 push hl
 539+ 9078 DD E1        	pop ix
 540+ 907A
 541+ 907A 2A 90 89     	ld hl,(Puntero_objeto)
 542+ 907D E5           	push hl
 543+ 907E FD E1        	pop iy
 544+ 9080
 545+ 9080              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9080
 547+ 9080 3A AE 89     	ld a,(Ctrl_0)
 548+ 9083 CB 77        	bit 6,a
 549+ 9085 C8           	ret z
 550+ 9086
 551+ 9086              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9086              ; _ entidad / Amadeus´.
 553+ 9086
 554+ 9086 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 908A
 556+ 908A C9           	ret
 557+ 908B
 558+ 908B              ; --------------------------------------------------------------------------------------------------------------------
 559+ 908B              ;
 560+ 908B              ;	2/1/23
 561+ 908B              ;
 562+ 908B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 908B              ;
 564+ 908B              ;	Tras esta rutina tenemos:
 565+ 908B              ;
 566+ 908B              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 908B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 908B              ;
 569+ 908B              ;	DESTRUYE!!!!! HL,B y A.
 570+ 908B
 571+ 908B 2A 8E 89     Operandos ld hl,(Posicion_actual)
 572+ 908E 3A AF 89     	ld a,(Columnas)
 573+ 9091 3D           	dec a
 574+ 9092 20 01        	jr nz,1F
 575+ 9094 3C           	inc a
 576+ 9095 47           1 ld b,a
 577+ 9096 C9           	ret
 578+ 9097
 579+ 9097              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9097              ;
 581+ 9097              ;	3/1/23
 582+ 9097              ;
 583+ 9097              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9097              ;
 585+ 9097              ;	Destruye: A,B,HL y DE.
 586+ 9097
 587+ 9097              Define_rutina_de_impresion
 588+ 9097
 589+ 9097 3A 8D 89     	ld a,(Columns)
 590+ 909A 47           	ld b,a
 591+ 909B 3A AF 89     	ld a,(Columnas)
 592+ 909E B8           	cp b
 593+ 909F 20 0D        	jr nz,2f
 594+ 90A1
 595+ 90A1              ;	La entidad se imprime entera.
 596+ 90A1
 597+ 90A1 21 40 91     	ld hl, Indice_entidades_completas
 598+ 90A4 E6 01        	and 1
 599+ 90A6 28 02        	jr z,1F
 600+ 90A8
 601+ 90A8 23           	inc hl
 602+ 90A9 23           	inc hl
 603+ 90AA
 604+ 90AA CD 4F 8B     1 call Extrae_address
 605+ 90AD C9           	ret		;	ret
 606+ 90AE
 607+ 90AE              ;	La entidad no se imprime entera en pantalla.
 608+ 90AE
 609+ 90AE 3A A0 89     2 ld a,(Cuad_objeto)
 610+ 90B1 E6 01        	and 1
 611+ 90B3 28 17        	jr z,3F
 612+ 90B5
 613+ 90B5              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 90B5
 615+ 90B5 21 44 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 90B8 3A 8D 89     4 ld a,(Columns)
 617+ 90BB E6 01        	and 1
 618+ 90BD 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 90BF
 620+ 90BF 23           	inc hl
 621+ 90C0 23           	inc hl
 622+ 90C1
 623+ 90C1 3A AF 89     	ld a,(Columnas)
 624+ 90C4 E6 01        	and 1
 625+ 90C6 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 90C8
 627+ 90C8 23           	inc hl
 628+ 90C9 23           	inc hl
 629+ 90CA
 630+ 90CA 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 90CC
 632+ 90CC 21 4A 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 90CF 18 E7        	jr 4B
 634+ 90D1
 635+ 90D1              ; --------------------------------------------------------------------------------------------------------------------
 636+ 90D1              ;
 637+ 90D1              ;	Prepara_draw
 638+ 90D1              ;
 639+ 90D1              ;	Es una rutina de carga.
 640+ 90D1              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 90D1              ;
 642+ 90D1              ;	FUNCIONAMIENTO:
 643+ 90D1              ;
 644+ 90D1              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 90D1              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 90D1              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 90D1              ;
 648+ 90D1              ;	DESTRUYE:
 649+ 90D1              ;
 650+ 90D1              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 90D1
 652+ 90D1 21 8C 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 90D4 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 90D5 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 90D6 4E           	ld c,(hl)
 656+ 90D7 2A 8E 89     	ld hl,(Posicion_actual)
 657+ 90DA 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 90DC C9           	ret
 659+ 90DD
 660+ 90DD              ;----------------------------------------------------------------------------------------------------------------
 661+ 90DD              ;
 662+ 90DD              ;	5/08/22
 663+ 90DD              ;
 664+ 90DD              ;   NextScan.
 665+ 90DD              ;
 666+ 90DD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 90DD              ;
 668+ 90DD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 90DD              ;
 670+ 90DD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 90DD              ;
 672+ 90DD              ;       DESTRUIDOS: AF y HL !!!
 673+ 90DD              ;
 674+ 90DD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 90DD              ;
 676+ 90DD
 677+ 90DD 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 90DE 7C               ld a,h
 679+ 90DF E6 07            and 7
 680+ 90E1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 90E2
 682+ 90E2 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 90E3 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 90E5 6F               ld l,a
 685+ 90E6 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 90E7
 687+ 90E7 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 90E8 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 90EA 67               ld h,a
 690+ 90EB C9               ret
 691+ 90EC
 692+ 90EC              ;----------------------------------------------------------------------------------------------------------------
 693+ 90EC              ;
 694+ 90EC              ;	5/08/22
 695+ 90EC              ;
 696+ 90EC              ;   PreviousScan.
 697+ 90EC              ;
 698+ 90EC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 90EC              ;
 700+ 90EC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 90EC              ;
 702+ 90EC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 90EC              ;
 704+ 90EC              ;       DESTRUIDOS: AF y HL !!!
 705+ 90EC              ;
 706+ 90EC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 90EC              ;
 708+ 90EC
 709+ 90EC 7C           PreviousScan ld a,h
 710+ 90ED 25               dec h               ; Dec H.
 711+ 90EE E6 07            and 7
 712+ 90F0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 90F1
 714+ 90F1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 90F2 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 90F4 6F               ld l,a
 717+ 90F5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 90F6
 719+ 90F6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 90F7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 90F9 67               ld h,a
 722+ 90FA C9               ret
 723+ 90FB
 724+ 90FB              ; -----------------------------------------------------------------------------------
 725+ 90FB              ;
 726+ 90FB              ;	31/7/23
 727+ 90FB              ;
 728+ 90FB              ;	Rutina principal de pintado de entidades.
 729+ 90FB              ;	Extrae la foto del frame, (entidades).
 730+ 90FB
 731+ 90FB              Extrae_Scanlines_album
 732+ 90FB
 733+ 90FB 21 01 80     	ld hl,Scanlines_album+1
 734+ 90FE 7E           	ld a,(hl)
 735+ 90FF A7           	and a
 736+ 9100 C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 9101
 738+ 9101              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9101
 740+ 9101 3A D9 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9104 A7           	and a
 742+ 9105 C8           	ret z
 743+ 9106
 744+ 9106              ; -----------------------------------
 745+ 9106
 746+ 9106 ED 73 DE 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 910A 31 00 80     	ld sp,Scanlines_album
 748+ 910D
 749+ 910D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 910F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9110 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9111
 753+ 9111 ED 73 E0 89  	ld (Stack_2),sp
 754+ 9115 ED 7B DE 89  	ld sp,(Stack)
 755+ 9119
 756+ 9119              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9119
 758+ 9119 3E CD        	ld a,$cd
 759+ 911B 32 23 91     	ld (Imprime),a
 760+ 911E EB           	ex de,hl
 761+ 911F 22 24 91     	ld (Imprime+1),hl
 762+ 9122 EB           	ex de,hl
 763+ 9123
 764+ 9123              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9123
 766+ 9123 00 00 00     Imprime db 0,0,0
 767+ 9126
 768+ 9126 ED 73 DE 89  	ld (Stack),sp
 769+ 912A
 770+ 912A 3A D9 89     	ld a,(Numero_de_malotes)
 771+ 912D 3D           	dec a
 772+ 912E 28 09        	jr z,1F
 773+ 9130 32 D9 89      	ld (Numero_de_malotes),a
 774+ 9133
 775+ 9133 ED 7B E0 89  	ld sp,(Stack_2)
 776+ 9137 18 D4        	jr 2B
 777+ 9139
 778+ 9139 AF           1 xor a
 779+ 913A 32 E0 89     	ld (Stack_2),a
 780+ 913D
 781+ 913D C9           	ret
 782+ 913E
 783+ 913E              ; -----------------------------------------------------------------------------------
 784+ 913E              ;
 785+ 913E              ;	28/2/23
 786+ 913E              ;
 787+ 913E              ;	Pinta los disparos generados.
 788+ 913E
 789+ 913E              ;Extrae_foto_disparos
 790+ 913E
 791+ 913E              ;	ld hl,Scanlines_album_disparos+1
 792+ 913E              ;    ld a,(hl)
 793+ 913E              ;    and a
 794+ 913E              ;    ret z
 795+ 913E
 796+ 913E              ;	ld a,(Numero_de_disparotes)
 797+ 913E              ;	and a
 798+ 913E              ;	ret z
 799+ 913E              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 913E              ;	ld sp,Scanlines_album_disparos
 801+ 913E
 802+ 913E              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 913E              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 913E              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 913E
 806+ 913E              ;	ld (Stack_2),sp
 807+ 913E              ;	ld sp,(Stack)
 808+ 913E
 809+ 913E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 913E
 811+ 913E              ;	ld a,$cd
 812+ 913E              ;	ld (Imprime2),a
 813+ 913E              ;	ex de,hl
 814+ 913E              ;	ld (Imprime2+1),hl
 815+ 913E              ;	ex de,hl
 816+ 913E
 817+ 913E              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 913E
 819+ 913E              ;Imprime2 db 0,0,0
 820+ 913E
 821+ 913E              ;	ld a,(Numero_de_disparotes)
 822+ 913E              ;	dec a
 823+ 913E              ;	jr z,1F
 824+ 913E              ; 	ld (Numero_de_disparotes),a
 825+ 913E
 826+ 913E              ;	ld sp,(Stack_2)
 827+ 913E              ;	jr 2B
 828+ 913E
 829+ 913E              ;1 xor a
 830+ 913E              ;	ld (Stack_2),a
 831+ 913E              ;	ret
 832+ 913E
 833+ 913E              ; -----------------------------------------------------------------------------------
 834+ 913E              ;
 835+ 913E              ;	4/9/23
 836+ 913E              ;
 837+ 913E              ;	Rutina principal de pintado de Amadeus.
 838+ 913E              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 913E
 840+ 913E              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 913E              ;	ld a,(hl)
 842+ 913E              ;	and a
 843+ 913E              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 913E
 845+ 913E              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 913E              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 913E              ;	ret z
 848+ 913E
 849+ 913E              ; -----------------------------------
 850+ 913E
 851+ 913E              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 913E              ;	ld sp,Scanlines_album_Amadeus
 853+ 913E
 854+ 913E              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 913E              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 913E              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 913E
 858+ 913E              ;	ld (Stack_2),sp
 859+ 913E              ;	ld sp,(Stack)
 860+ 913E
 861+ 913E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 913E
 863+ 913E              ;	ld a,$cd
 864+ 913E              ;	ld (Imprime_Amadeus),a
 865+ 913E              ;	ex de,hl
 866+ 913E              ;	ld (Imprime_Amadeus+1),hl
 867+ 913E              ;	ex de,hl
 868+ 913E
 869+ 913E              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 913E
 871+ 913E              ;Imprime_Amadeus db 0,0,0
 872+ 913E
 873+ 913E              ;	ld (Stack),sp
 874+ 913E
 875+ 913E              ;	ld a,(Numero_de_malotes)
 876+ 913E              ;	dec a
 877+ 913E              ;	jr z,1F
 878+ 913E              ; 	ld (Numero_de_malotes),a
 879+ 913E
 880+ 913E              ;	ld sp,(Stack_2)
 881+ 913E              ;	jr 2B
 882+ 913E
 883+ 913E              ;1 xor a
 884+ 913E              ;	ld (Stack_2),a
 885+ 913E
 886+ 913E              ;	ret
 887+ 913E
 888+ 913E              ; -----------------------------------------------------------------------------------
 889+ 913E              ;
 890+ 913E              ;	04/03/24
 891+ 913E              ;
 892+ 913E              ;	Borra los sprites impresos en pantalla.
 893+ 913E              ;
 894+ 913E
 895+ 913E              ;Limpia_semaforo
 896+ 913E
 897+ 913E              ;	xor a
 898+ 913E              ;	ld b,8
 899+ 913E              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 900+ 913E              ;1 ld (hl),a
 901+ 913E              ;	inc l
 902+ 913E              ;	djnz 1B
 903+ 913E              ;	ret
 904+ 913E
 905+ 913E              ; -----------------------------------------------------------------------------------
 906+ 913E              ;
 907+ 913E              ;	06/03/24
 908+ 913E              ;
 909+ 913E              ;
 910+ 913E              ;
 911+ 913E
 912+ 913E 18 FE        Pinta_Sprites jr $
 913+ 9140
 914+ 9140
 915+ 9140
 916+ 9140
 917+ 9140
 918+ 9140              ; -----------------------------------------------------------------------------------
 919+ 9140              ;
 920+ 9140              ;	01/03/24
 921+ 9140              ;
 922+ 9140              ;	Borra los sprites impresos en pantalla.
 923+ 9140              ;
 924+ 9140
 925+ 9140              ;Borra_sprites
 926+ 9140
 927+ 9140              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 928+ 9140              ;	ld a,(hl)
 929+ 9140              ;	and a
 930+ 9140              ;	ret z 																	; Salimos si no hay scanlines en el álbum.
 931+ 9140
 932+ 9140              ;	No hay datos, (entidades para pintar en este frame).
 933+ 9140
 934+ 9140              ;	ld a,(Numero_de_malotes)												; No se ha producido movimiento.
 935+ 9140              ;	and a																	; NO BORRAMOS !!!
 936+ 9140              ;	ret z
 937+ 9140
 938+ 9140              ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 939+ 9140
 940+ 9140              ;Retorno	exx
 941+ 9140              ;	ld a,(hl)
 942+ 9140              ;	inc l
 943+ 9140              ;	exx
 944+ 9140              ;	dec a
 945+ 9140
 946+ 9140              ;	jr z,Borra_2x2
 947+ 9140              ;	jp Borra_3x2
 948+ 9140
 949+ 9140
# file closed: Draw_XOR.asm
1768  9140              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9140              ;   índices de Rutinas de impresión.
   2+ 9140
   3+ 9140 50 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9142 E4 91            defw Pinta_Amadeus_3x2
   5+ 9144
   6+ 9144 B8 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9146 58 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9148 0C 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 914A
  10+ 914A E2 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 914C E6 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 914E 9A 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9150
  14+ 9150
  15+ 9150              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9150              ;
  17+ 9150              ;   28/2/24
  18+ 9150              ;
  19+ 9150              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 9150              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9150              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 9150              ;
  23+ 9150              ;   Modifica: AF,HL,BC y DE.
  24+ 9150
  25+ 9150              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 9150
  27+ 9150 D9               exx
  28+ 9151 36 01            ld (hl),1
  29+ 9153 2C               inc l
  30+ 9154 D9               exx
  31+ 9155
  32+ 9155 FD E5            push iy
  33+ 9157 D1               pop de
  34+ 9158
  35+ 9158 ED 73 DE 89      ld (Stack),sp
  36+ 915C F9           	ld sp,hl
  37+ 915D 06 10            ld b,16
  38+ 915F
  39+ 915F E1               pop hl
  40+ 9160 1A               ld a,(de)
  41+ 9161 77               ld (hl),a
  42+ 9162 1C           	inc e
  43+ 9163 2C               inc l
  44+ 9164 1A               ld a,(de)
  45+ 9165 77               ld (hl),a
  46+ 9166 1C               inc e
  47+ 9167
  48+ 9167 E1               pop hl
  49+ 9168 1A               ld a,(de)
  50+ 9169 77               ld (hl),a
  51+ 916A 1C           	inc e
  52+ 916B 2C               inc l
  53+ 916C 1A               ld a,(de)
  54+ 916D 77               ld (hl),a
  55+ 916E 1C               inc e
  56+ 916F
  57+ 916F E1               pop hl
  58+ 9170 1A               ld a,(de)
  59+ 9171 77               ld (hl),a
  60+ 9172 1C           	inc e
  61+ 9173 2C               inc l
  62+ 9174 1A               ld a,(de)
  63+ 9175 77               ld (hl),a
  64+ 9176 1C               inc e
  65+ 9177
  66+ 9177 E1               pop hl
  67+ 9178 1A               ld a,(de)
  68+ 9179 77               ld (hl),a
  69+ 917A 1C           	inc e
  70+ 917B 2C               inc l
  71+ 917C 1A               ld a,(de)
  72+ 917D 77               ld (hl),a
  73+ 917E 1C               inc e
  74+ 917F
  75+ 917F E1               pop hl
  76+ 9180 1A               ld a,(de)
  77+ 9181 77               ld (hl),a
  78+ 9182 1C           	inc e
  79+ 9183 2C               inc l
  80+ 9184 1A               ld a,(de)
  81+ 9185 77               ld (hl),a
  82+ 9186 1C               inc e
  83+ 9187
  84+ 9187 E1               pop hl
  85+ 9188 1A               ld a,(de)
  86+ 9189 77               ld (hl),a
  87+ 918A 1C           	inc e
  88+ 918B 2C               inc l
  89+ 918C 1A               ld a,(de)
  90+ 918D 77               ld (hl),a
  91+ 918E 1C               inc e
  92+ 918F
  93+ 918F E1               pop hl
  94+ 9190 1A               ld a,(de)
  95+ 9191 77               ld (hl),a
  96+ 9192 1C           	inc e
  97+ 9193 2C               inc l
  98+ 9194 1A               ld a,(de)
  99+ 9195 77               ld (hl),a
 100+ 9196 1C               inc e
 101+ 9197
 102+ 9197 E1               pop hl
 103+ 9198 1A               ld a,(de)
 104+ 9199 77               ld (hl),a
 105+ 919A 1C           	inc e
 106+ 919B 2C               inc l
 107+ 919C 1A               ld a,(de)
 108+ 919D 77               ld (hl),a
 109+ 919E 1C               inc e
 110+ 919F
 111+ 919F E1               pop hl
 112+ 91A0 1A               ld a,(de)
 113+ 91A1 77               ld (hl),a
 114+ 91A2 1C           	inc e
 115+ 91A3 2C               inc l
 116+ 91A4 1A               ld a,(de)
 117+ 91A5 77               ld (hl),a
 118+ 91A6 1C               inc e
 119+ 91A7
 120+ 91A7 E1               pop hl
 121+ 91A8 1A               ld a,(de)
 122+ 91A9 77               ld (hl),a
 123+ 91AA 1C           	inc e
 124+ 91AB 2C               inc l
 125+ 91AC 1A               ld a,(de)
 126+ 91AD 77               ld (hl),a
 127+ 91AE 1C               inc e
 128+ 91AF
 129+ 91AF E1               pop hl
 130+ 91B0 1A               ld a,(de)
 131+ 91B1 77               ld (hl),a
 132+ 91B2 1C           	inc e
 133+ 91B3 2C               inc l
 134+ 91B4 1A               ld a,(de)
 135+ 91B5 77               ld (hl),a
 136+ 91B6 1C               inc e
 137+ 91B7
 138+ 91B7 E1               pop hl
 139+ 91B8 1A               ld a,(de)
 140+ 91B9 77               ld (hl),a
 141+ 91BA 1C           	inc e
 142+ 91BB 2C               inc l
 143+ 91BC 1A               ld a,(de)
 144+ 91BD 77               ld (hl),a
 145+ 91BE 1C               inc e
 146+ 91BF
 147+ 91BF E1               pop hl
 148+ 91C0 1A               ld a,(de)
 149+ 91C1 77               ld (hl),a
 150+ 91C2 1C           	inc e
 151+ 91C3 2C               inc l
 152+ 91C4 1A               ld a,(de)
 153+ 91C5 77               ld (hl),a
 154+ 91C6 1C               inc e
 155+ 91C7
 156+ 91C7 E1               pop hl
 157+ 91C8 1A               ld a,(de)
 158+ 91C9 77               ld (hl),a
 159+ 91CA 1C           	inc e
 160+ 91CB 2C               inc l
 161+ 91CC 1A               ld a,(de)
 162+ 91CD 77               ld (hl),a
 163+ 91CE 1C               inc e
 164+ 91CF
 165+ 91CF E1               pop hl
 166+ 91D0 1A               ld a,(de)
 167+ 91D1 77               ld (hl),a
 168+ 91D2 1C           	inc e
 169+ 91D3 2C               inc l
 170+ 91D4 1A               ld a,(de)
 171+ 91D5 77               ld (hl),a
 172+ 91D6 1C               inc e
 173+ 91D7
 174+ 91D7 E1               pop hl
 175+ 91D8 1A               ld a,(de)
 176+ 91D9 77               ld (hl),a
 177+ 91DA 1C           	inc e
 178+ 91DB 2C               inc l
 179+ 91DC 1A               ld a,(de)
 180+ 91DD 77               ld (hl),a
 181+ 91DE 1C               inc e
 182+ 91DF
 183+ 91DF ED 7B DE 89      ld sp,(Stack)
 184+ 91E3
 185+ 91E3 C9           	ret
 186+ 91E4
 187+ 91E4              Pinta_Amadeus_3x2
 188+ 91E4
 189+ 91E4 D9               exx
 190+ 91E5 36 02            ld (hl),2
 191+ 91E7 2C               inc l
 192+ 91E8 D9               exx
 193+ 91E9
 194+ 91E9 FD E5            push iy
 195+ 91EB D1               pop de
 196+ 91EC
 197+ 91EC ED 73 DE 89      ld (Stack),sp
 198+ 91F0 F9               ld sp,hl
 199+ 91F1 06 10            ld b,16
 200+ 91F3
 201+ 91F3 E1               pop hl
 202+ 91F4 1A               ld a,(de)
 203+ 91F5 77               ld (hl),a
 204+ 91F6 1C               inc e
 205+ 91F7 2C               inc l
 206+ 91F8 1A               ld a,(de)
 207+ 91F9 77               ld (hl),a
 208+ 91FA 1C               inc e
 209+ 91FB 2C               inc l
 210+ 91FC 1A               ld a,(de)
 211+ 91FD 77               ld (hl),a
 212+ 91FE 1C               inc e
 213+ 91FF
 214+ 91FF E1               pop hl
 215+ 9200 1A               ld a,(de)
 216+ 9201 77               ld (hl),a
 217+ 9202 1C               inc e
 218+ 9203 2C               inc l
 219+ 9204 1A               ld a,(de)
 220+ 9205 77               ld (hl),a
 221+ 9206 1C               inc e
 222+ 9207 2C               inc l
 223+ 9208 1A               ld a,(de)
 224+ 9209 77               ld (hl),a
 225+ 920A 1C               inc e
 226+ 920B
 227+ 920B E1               pop hl
 228+ 920C 1A               ld a,(de)
 229+ 920D 77               ld (hl),a
 230+ 920E 1C               inc e
 231+ 920F 2C               inc l
 232+ 9210 1A               ld a,(de)
 233+ 9211 77               ld (hl),a
 234+ 9212 1C               inc e
 235+ 9213 2C               inc l
 236+ 9214 1A               ld a,(de)
 237+ 9215 77               ld (hl),a
 238+ 9216 1C               inc e
 239+ 9217
 240+ 9217 E1               pop hl
 241+ 9218 1A               ld a,(de)
 242+ 9219 77               ld (hl),a
 243+ 921A 1C               inc e
 244+ 921B 2C               inc l
 245+ 921C 1A               ld a,(de)
 246+ 921D 77               ld (hl),a
 247+ 921E 1C               inc e
 248+ 921F 2C               inc l
 249+ 9220 1A               ld a,(de)
 250+ 9221 77               ld (hl),a
 251+ 9222 1C               inc e
 252+ 9223
 253+ 9223 E1               pop hl
 254+ 9224 1A               ld a,(de)
 255+ 9225 77               ld (hl),a
 256+ 9226 1C               inc e
 257+ 9227 2C               inc l
 258+ 9228 1A               ld a,(de)
 259+ 9229 77               ld (hl),a
 260+ 922A 1C               inc e
 261+ 922B 2C               inc l
 262+ 922C 1A               ld a,(de)
 263+ 922D 77               ld (hl),a
 264+ 922E 1C               inc e
 265+ 922F
 266+ 922F E1               pop hl
 267+ 9230 1A               ld a,(de)
 268+ 9231 77               ld (hl),a
 269+ 9232 1C               inc e
 270+ 9233 2C               inc l
 271+ 9234 1A               ld a,(de)
 272+ 9235 77               ld (hl),a
 273+ 9236 1C               inc e
 274+ 9237 2C               inc l
 275+ 9238 1A               ld a,(de)
 276+ 9239 77               ld (hl),a
 277+ 923A 1C               inc e
 278+ 923B
 279+ 923B E1               pop hl
 280+ 923C 1A               ld a,(de)
 281+ 923D 77               ld (hl),a
 282+ 923E 1C               inc e
 283+ 923F 2C               inc l
 284+ 9240 1A               ld a,(de)
 285+ 9241 77               ld (hl),a
 286+ 9242 1C               inc e
 287+ 9243 2C               inc l
 288+ 9244 1A               ld a,(de)
 289+ 9245 77               ld (hl),a
 290+ 9246 1C               inc e
 291+ 9247
 292+ 9247 E1               pop hl
 293+ 9248 1A               ld a,(de)
 294+ 9249 77               ld (hl),a
 295+ 924A 1C               inc e
 296+ 924B 2C               inc l
 297+ 924C 1A               ld a,(de)
 298+ 924D 77               ld (hl),a
 299+ 924E 1C               inc e
 300+ 924F 2C               inc l
 301+ 9250 1A               ld a,(de)
 302+ 9251 77               ld (hl),a
 303+ 9252 1C               inc e
 304+ 9253
 305+ 9253 E1               pop hl
 306+ 9254 1A               ld a,(de)
 307+ 9255 77               ld (hl),a
 308+ 9256 1C               inc e
 309+ 9257 2C               inc l
 310+ 9258 1A               ld a,(de)
 311+ 9259 77               ld (hl),a
 312+ 925A 1C               inc e
 313+ 925B 2C               inc l
 314+ 925C 1A               ld a,(de)
 315+ 925D 77               ld (hl),a
 316+ 925E 1C               inc e
 317+ 925F
 318+ 925F E1               pop hl
 319+ 9260 1A               ld a,(de)
 320+ 9261 77               ld (hl),a
 321+ 9262 1C               inc e
 322+ 9263 2C               inc l
 323+ 9264 1A               ld a,(de)
 324+ 9265 77               ld (hl),a
 325+ 9266 1C               inc e
 326+ 9267 2C               inc l
 327+ 9268 1A               ld a,(de)
 328+ 9269 77               ld (hl),a
 329+ 926A 1C               inc e
 330+ 926B
 331+ 926B E1               pop hl
 332+ 926C 1A               ld a,(de)
 333+ 926D 77               ld (hl),a
 334+ 926E 1C               inc e
 335+ 926F 2C               inc l
 336+ 9270 1A               ld a,(de)
 337+ 9271 77               ld (hl),a
 338+ 9272 1C               inc e
 339+ 9273 2C               inc l
 340+ 9274 1A               ld a,(de)
 341+ 9275 77               ld (hl),a
 342+ 9276 1C               inc e
 343+ 9277
 344+ 9277 E1               pop hl
 345+ 9278 1A               ld a,(de)
 346+ 9279 77               ld (hl),a
 347+ 927A 1C               inc e
 348+ 927B 2C               inc l
 349+ 927C 1A               ld a,(de)
 350+ 927D 77               ld (hl),a
 351+ 927E 1C               inc e
 352+ 927F 2C               inc l
 353+ 9280 1A               ld a,(de)
 354+ 9281 77               ld (hl),a
 355+ 9282 1C               inc e
 356+ 9283
 357+ 9283 E1               pop hl
 358+ 9284 1A               ld a,(de)
 359+ 9285 77               ld (hl),a
 360+ 9286 1C               inc e
 361+ 9287 2C               inc l
 362+ 9288 1A               ld a,(de)
 363+ 9289 77               ld (hl),a
 364+ 928A 1C               inc e
 365+ 928B 2C               inc l
 366+ 928C 1A               ld a,(de)
 367+ 928D 77               ld (hl),a
 368+ 928E 1C               inc e
 369+ 928F
 370+ 928F E1               pop hl
 371+ 9290 1A               ld a,(de)
 372+ 9291 77               ld (hl),a
 373+ 9292 1C               inc e
 374+ 9293 2C               inc l
 375+ 9294 1A               ld a,(de)
 376+ 9295 77               ld (hl),a
 377+ 9296 1C               inc e
 378+ 9297 2C               inc l
 379+ 9298 1A               ld a,(de)
 380+ 9299 77               ld (hl),a
 381+ 929A 1C               inc e
 382+ 929B
 383+ 929B E1               pop hl
 384+ 929C 1A               ld a,(de)
 385+ 929D 77               ld (hl),a
 386+ 929E 1C               inc e
 387+ 929F 2C               inc l
 388+ 92A0 1A               ld a,(de)
 389+ 92A1 77               ld (hl),a
 390+ 92A2 1C               inc e
 391+ 92A3 2C               inc l
 392+ 92A4 1A               ld a,(de)
 393+ 92A5 77               ld (hl),a
 394+ 92A6 1C               inc e
 395+ 92A7
 396+ 92A7 E1               pop hl
 397+ 92A8 1A               ld a,(de)
 398+ 92A9 77               ld (hl),a
 399+ 92AA 1C               inc e
 400+ 92AB 2C               inc l
 401+ 92AC 1A               ld a,(de)
 402+ 92AD 77               ld (hl),a
 403+ 92AE 1C               inc e
 404+ 92AF 2C               inc l
 405+ 92B0 1A               ld a,(de)
 406+ 92B1 77               ld (hl),a
 407+ 92B2 1C               inc e
 408+ 92B3
 409+ 92B3 ED 7B DE 89      ld sp,(Stack)
 410+ 92B7
 411+ 92B7 C9               ret
 412+ 92B8
 413+ 92B8              ; ---------------------------------------------------
 414+ 92B8
 415+ 92B8 ED 73 DE 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 92BC FD F9        	ld sp,iy
 417+ 92BE
 418+ 92BE              ; >>>
 419+ 92BE
 420+ 92BE 06 10            ld b,16
 421+ 92C0 D1           1 pop de
 422+ 92C1 7A           	ld a,d
 423+ 92C2 AE           	xor (hl)
 424+ 92C3 77           	ld (hl),a
 425+ 92C4 24           	inc h
 426+ 92C5 7C               ld a,h
 427+ 92C6 E6 07            and 7
 428+ 92C8 20 0C            jr nz,2F
 429+ 92CA 7D               ld a,l
 430+ 92CB C6 20            add a,$20
 431+ 92CD 6F               ld l,a
 432+ 92CE 38 06            jr c,2F
 433+ 92D0 7C               ld a,h
 434+ 92D1 D6 08            sub 8
 435+ 92D3 67               ld h,a
 436+ 92D4 18 00            jr 2F
 437+ 92D6 7C           2 ld a,h
 438+ 92D7 FE 58            cp $58
 439+ 92D9 28 02            jr z,3F
 440+ 92DB 10 E3            djnz 1B
 441+ 92DD ED 7B DE 89  3 ld sp,(Stack)
 442+ 92E1 C9           	ret
 443+ 92E2
 444+ 92E2 ED 73 DE 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 92E6 FD F9        	ld sp,iy
 446+ 92E8
 447+ 92E8              ; >>>
 448+ 92E8
 449+ 92E8 06 10            ld b,16
 450+ 92EA D1           1 pop de
 451+ 92EB 7B           	ld a,e
 452+ 92EC AE           	xor (hl)
 453+ 92ED 77           	ld (hl),a
 454+ 92EE 24           	inc h
 455+ 92EF 7C               ld a,h
 456+ 92F0 E6 07            and 7
 457+ 92F2 20 0C            jr nz,2F
 458+ 92F4 7D               ld a,l
 459+ 92F5 C6 20            add a,$20
 460+ 92F7 6F               ld l,a
 461+ 92F8 38 06            jr c,2F
 462+ 92FA 7C               ld a,h
 463+ 92FB D6 08            sub 8
 464+ 92FD 67               ld h,a
 465+ 92FE 18 00            jr 2F
 466+ 9300 7C           2 ld a,h
 467+ 9301 FE 58            cp $58
 468+ 9303 28 02            jr z,3F
 469+ 9305 10 E3            djnz 1B
 470+ 9307 ED 7B DE 89  3 ld sp,(Stack)
 471+ 930B C9           	ret
 472+ 930C
 473+ 930C              ; ---------------------------------------------------
 474+ 930C
 475+ 930C ED 73 DE 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 9310 FD F9        	ld sp,iy
 477+ 9312 06 08            ld b,8
 478+ 9314 D1           1 pop de
 479+ 9315 7A           	ld a,d
 480+ 9316 AE           	xor (hl)
 481+ 9317 77           	ld (hl),a
 482+ 9318 23           	inc hl
 483+ 9319 D1           	pop de
 484+ 931A 7B           	ld a,e
 485+ 931B AE           	xor (hl)
 486+ 931C 77           	ld (hl),a
 487+ 931D 2B           	dec hl
 488+ 931E 24            	inc h
 489+ 931F 7C               ld a,h
 490+ 9320 E6 07            and 7
 491+ 9322 20 0A            jr nz,2F
 492+ 9324 7D               ld a,l
 493+ 9325 C6 20            add a,$20
 494+ 9327 6F               ld l,a
 495+ 9328 38 04            jr c,2F
 496+ 932A 7C               ld a,h
 497+ 932B D6 08            sub 8
 498+ 932D 67               ld h,a
 499+ 932E 7C           2 ld a,h
 500+ 932F FE 58            cp $58
 501+ 9331 28 20            jr z,4F
 502+ 9333 D1               pop de
 503+ 9334 7B           	ld a,e
 504+ 9335 AE           	xor (hl)
 505+ 9336 77           	ld (hl),a
 506+ 9337 23           	inc hl
 507+ 9338 7A           	ld a,d
 508+ 9339 AE           	xor (hl)
 509+ 933A 77           	ld (hl),a
 510+ 933B 2B           	dec hl
 511+ 933C 24           	inc h
 512+ 933D 7C               ld a,h
 513+ 933E E6 07            and 7
 514+ 9340 20 0A            jr nz,3F
 515+ 9342 7D               ld a,l
 516+ 9343 C6 20            add a,$20
 517+ 9345 6F               ld l,a
 518+ 9346 38 04            jr c,3F
 519+ 9348 7C               ld a,h
 520+ 9349 D6 08            sub 8
 521+ 934B 67               ld h,a
 522+ 934C 7C           3 ld a,h
 523+ 934D FE 58            cp $58
 524+ 934F 28 02            jr z,4F
 525+ 9351 10 C1            djnz 1B
 526+ 9353 ED 7B DE 89  4 ld sp,(Stack)
 527+ 9357 C9           	ret
 528+ 9358
 529+ 9358 ED 73 DE 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 935C FD F9        	ld sp,iy
 531+ 935E 06 08            ld b,8
 532+ 9360 D1           1 pop de
 533+ 9361 D1           	pop de
 534+ 9362 7B           	ld a,e
 535+ 9363 AE           	xor (hl)
 536+ 9364 77           	ld (hl),a
 537+ 9365 24            	inc h
 538+ 9366 7C               ld a,h
 539+ 9367 E6 07            and 7
 540+ 9369 20 0A            jr nz,2F
 541+ 936B 7D               ld a,l
 542+ 936C C6 20            add a,$20
 543+ 936E 6F               ld l,a
 544+ 936F 38 04            jr c,2F
 545+ 9371 7C               ld a,h
 546+ 9372 D6 08            sub 8
 547+ 9374 67               ld h,a
 548+ 9375 7C           2 ld a,h
 549+ 9376 FE 58            cp $58
 550+ 9378 28 1B            jr z,4F
 551+ 937A D1               pop de
 552+ 937B 7A           	ld a,d
 553+ 937C AE           	xor (hl)
 554+ 937D 77           	ld (hl),a
 555+ 937E 24           	inc h
 556+ 937F 7C               ld a,h
 557+ 9380 E6 07            and 7
 558+ 9382 20 0A            jr nz,3F
 559+ 9384 7D               ld a,l
 560+ 9385 C6 20            add a,$20
 561+ 9387 6F               ld l,a
 562+ 9388 38 04            jr c,3F
 563+ 938A 7C               ld a,h
 564+ 938B D6 08            sub 8
 565+ 938D 67               ld h,a
 566+ 938E 7C           3 ld a,h
 567+ 938F FE 58            cp $58
 568+ 9391 28 02            jr z,4F
 569+ 9393 10 CB            djnz 1B
 570+ 9395 ED 7B DE 89  4 ld sp,(Stack)
 571+ 9399 C9           	ret
 572+ 939A
 573+ 939A ED 73 DE 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 939E FD F9        	ld sp,iy
 575+ 93A0 06 08            ld b,8
 576+ 93A2 D1           1 pop de
 577+ 93A3 7B           	ld a,e
 578+ 93A4 AE           	xor (hl)
 579+ 93A5 77           	ld (hl),a
 580+ 93A6 23           	inc hl
 581+ 93A7 7A           	ld a,d
 582+ 93A8 AE           	xor (hl)
 583+ 93A9 77           	ld (hl),a
 584+ 93AA 2B           	dec hl
 585+ 93AB 24             	inc h
 586+ 93AC 7C               ld a,h
 587+ 93AD E6 07            and 7
 588+ 93AF 20 0A            jr nz,2F
 589+ 93B1 7D               ld a,l
 590+ 93B2 C6 20            add a,$20
 591+ 93B4 6F               ld l,a
 592+ 93B5 38 04            jr c,2F
 593+ 93B7 7C               ld a,h
 594+ 93B8 D6 08            sub 8
 595+ 93BA 67               ld h,a
 596+ 93BB 7C           2 ld a,h
 597+ 93BC FE 58            cp $58
 598+ 93BE 28 21            jr z,4F
 599+ 93C0 D1               pop de
 600+ 93C1 7A           	ld a,d
 601+ 93C2 AE           	xor (hl)
 602+ 93C3 77           	ld (hl),a
 603+ 93C4 23           	inc hl
 604+ 93C5 D1               pop de
 605+ 93C6 7B           	ld a,e
 606+ 93C7 AE           	xor (hl)
 607+ 93C8 77           	ld (hl),a
 608+ 93C9 2B           	dec hl
 609+ 93CA 24           	inc h
 610+ 93CB 7C               ld a,h
 611+ 93CC E6 07            and 7
 612+ 93CE 20 0A            jr nz,3F
 613+ 93D0 7D               ld a,l
 614+ 93D1 C6 20            add a,$20
 615+ 93D3 6F               ld l,a
 616+ 93D4 38 04            jr c,3F
 617+ 93D6 7C               ld a,h
 618+ 93D7 D6 08            sub 8
 619+ 93D9 67               ld h,a
 620+ 93DA 7C           3 ld a,h
 621+ 93DB FE 58            cp $58
 622+ 93DD 28 02            jr z,4F
 623+ 93DF 10 C1            djnz 1B
 624+ 93E1 ED 7B DE 89  4 ld sp,(Stack)
 625+ 93E5 C9           	ret
 626+ 93E6
 627+ 93E6 ED 73 DE 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 93EA FD F9        	ld sp,iy
 629+ 93EC 06 08            ld b,8
 630+ 93EE D1           1 pop de
 631+ 93EF 7B           	ld a,e
 632+ 93F0 AE           	xor (hl)
 633+ 93F1 77           	ld (hl),a
 634+ 93F2 24            	inc h
 635+ 93F3 7C               ld a,h
 636+ 93F4 E6 07            and 7
 637+ 93F6 20 0A            jr nz,2F
 638+ 93F8 7D               ld a,l
 639+ 93F9 C6 20            add a,$20
 640+ 93FB 6F               ld l,a
 641+ 93FC 38 04            jr c,2F
 642+ 93FE 7C               ld a,h
 643+ 93FF D6 08            sub 8
 644+ 9401 67               ld h,a
 645+ 9402 7C           2 ld a,h
 646+ 9403 FE 58            cp $58
 647+ 9405 28 1C            jr z,4F
 648+ 9407 D1               pop de
 649+ 9408 7A           	ld a,d
 650+ 9409 AE           	xor (hl)
 651+ 940A 77           	ld (hl),a
 652+ 940B 24           	inc h
 653+ 940C 7C               ld a,h
 654+ 940D E6 07            and 7
 655+ 940F 20 0A            jr nz,3F
 656+ 9411 7D               ld a,l
 657+ 9412 C6 20            add a,$20
 658+ 9414 6F               ld l,a
 659+ 9415 38 04            jr c,3F
 660+ 9417 7C               ld a,h
 661+ 9418 D6 08            sub 8
 662+ 941A 67               ld h,a
 663+ 941B 7C           3 ld a,h
 664+ 941C FE 58            cp $58
 665+ 941E 28 03            jr z,4F
 666+ 9420 D1               pop de
 667+ 9421 10 CB            djnz 1B
 668+ 9423 ED 7B DE 89  4 ld sp,(Stack)
 669+ 9427 C9           	ret
 670+ 9428
 671+ 9428              ; ---------------------------------------------------
 672+ 9428              ;
 673+ 9428              ;   27/02/23
 674+ 9428              ;
 675+ 9428              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9428              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9428              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9428
 679+ 9428 ED 73 DE 89  Pinta_Disparo ld (Stack),sp
 680+ 942C FD F9            ld sp,iy
 681+ 942E 06 03            ld b,3
 682+ 9430 D1           1 pop de
 683+ 9431 7B               ld a,e
 684+ 9432 AE               xor (hl)
 685+ 9433 77               ld (hl),a
 686+ 9434 23               inc hl
 687+ 9435 7A               ld a,d
 688+ 9436 AE               xor (hl)
 689+ 9437 77               ld (hl),a
 690+ 9438 2B               dec hl
 691+ 9439
 692+ 9439 24               inc h
 693+ 943A 7C               ld a,h
 694+ 943B E6 07            and 7
 695+ 943D 20 0A            jr nz,2F
 696+ 943F 7D               ld a,l
 697+ 9440 C6 20            add a,$20
 698+ 9442 6F               ld l,a
 699+ 9443 38 04            jr c,2F
 700+ 9445 7C               ld a,h
 701+ 9446 D6 08            sub 8
 702+ 9448 67               ld h,a
 703+ 9449 7C           2 ld a,h
 704+ 944A FE 58            cp $58
 705+ 944C 28 02            jr z,3F
 706+ 944E
 707+ 944E 10 E0            djnz 1B
 708+ 9450 ED 7B DE 89  3 ld sp,(Stack)
 709+ 9454 C9               ret
 710+ 9455
# file closed: Rutinas_de_impresion_sprites.asm
1769  9455              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9455
   2+ 9455              ; ******************************************************************************************************************************************************************************************
   3+ 9455              ;
   4+ 9455              ;   20/05/23
   5+ 9455              ;
   6+ 9455              ;	Recompone_posicion_inicio
   7+ 9455              ;
   8+ 9455              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9455              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9455              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9455              ;	_ a una u otra rutina.
  12+ 9455
  13+ 9455              Recompone_posicion_inicio
  14+ 9455
  15+ 9455 2A 9E 89     	ld hl,(Posicion_inicio)
  16+ 9458 7D           	ld a,l
  17+ 9459 E6 1F        	and $1f
  18+ 945B 28 16        	jr z,1F
  19+ 945D
  20+ 945D FE 1F        	cp $1f
  21+ 945F 28 0D        	jr z,3F
  22+ 9461
  23+ 9461 21 B3 89     	ld hl,Ctrl_2
  24+ 9464 CB C6        	set 0,(hl)
  25+ 9466 2A 90 89     	ld hl,(Puntero_objeto)
  26+ 9469 22 CE 89     	ld (Repone_puntero_objeto),hl
  27+ 946C 18 08        	jr 2F
  28+ 946E
  29+ 946E CD 1C 96     3 call Mov_left
  30+ 9471 18 03        	jr 2F
  31+ 9473
  32+ 9473 CD F9 94     1 call Mov_right
  33+ 9476 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9479 22 90 89     	ld (Puntero_objeto),hl
  35+ 947C C9           	ret
  36+ 947D
  37+ 947D              ; ******************************************************************************************************************************************************************************************
  38+ 947D              ;
  39+ 947D              ;   27/05/23
  40+ 947D              ;
  41+ 947D              ;	Mov_down
  42+ 947D              ;
  43+ 947D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 947D              ;
  45+ 947D              ;
  46+ 947D              Mov_down
  47+ 947D
  48+ 947D CD E7 94     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9480              ;																	; _ repone (Puntero_objeto).
  50+ 9480 21 AE 89     	ld hl,Ctrl_0
  51+ 9483 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9485              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9485              ; 																	; _ en el caso de que no lo haya.
  54+ 9485 3A B8 89     	ld a,(Vel_down)
  55+ 9488 47           	ld b,a
  56+ 9489 2A 8E 89         ld hl,(Posicion_actual)
  57+ 948C CD 58 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 948F E6 02        	and 2
  59+ 9491 28 17        	jr z,1F
  60+ 9493
  61+ 9493              ; Nos encontramos en el último tercio de pantalla.
  62+ 9493              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9493
  64+ 9493 7C           	ld a,h
  65+ 9494 FE 57        	cp $57
  66+ 9496 20 12        	jr nz,1F
  67+ 9498
  68+ 9498 7D           	ld a,l
  69+ 9499 C6 20        	add $20
  70+ 949B 30 0D        	jr nc,1F
  71+ 949D
  72+ 949D              ; ------------------------------
  73+ 949D              ;
  74+ 949D              ;	12/01/24
  75+ 949D
  76+ 949D              ;	call Reaparece_arriba
  77+ 949D CD A9 97     	call Reinicio
  78+ 94A0
  79+ 94A0              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94A0
  81+ 94A0 3A E8 89     	ld a,(Ctrl_3)
  82+ 94A3 CB CF        	set 1,a
  83+ 94A5 32 E8 89     	ld (Ctrl_3),a
  84+ 94A8
  85+ 94A8 18 08        	jr 3F
  86+ 94AA              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94AA              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94AA              ; ------------------------------
  89+ 94AA
  90+ 94AA CD DD 90     1 call NextScan
  91+ 94AD 22 8E 89     	ld (Posicion_actual),hl
  92+ 94B0 10 DA            djnz 2B
  93+ 94B2 CD 76 99     3 call Genera_coordenadas
  94+ 94B5 C9           	ret
  95+ 94B6
  96+ 94B6              ; ******************************************************************************************************************************************************************************************
  97+ 94B6              ;
  98+ 94B6              ;   27/05/23
  99+ 94B6              ;
 100+ 94B6              ;	Mov_up
 101+ 94B6              ;
 102+ 94B6              ; 	Mueve el Sprite hacia arriba.
 103+ 94B6              ;
 104+ 94B6              ;
 105+ 94B6              Mov_up
 106+ 94B6
 107+ 94B6 CD E7 94     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 94B9              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 94B9 21 AE 89     	ld hl,Ctrl_0
 110+ 94BC CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 94BE              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 94BE              ; 																		; _ en el caso de que no lo haya.
 113+ 94BE 3A B7 89     	ld a,(Vel_up)
 114+ 94C1 47           	ld b,a
 115+ 94C2 2A 8E 89     	ld hl,(Posicion_actual)
 116+ 94C5 CD 58 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 94C8 A7           	and a
 118+ 94C9 20 10        	jr nz,1F
 119+ 94CB
 120+ 94CB              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 94CB              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 94CB
 123+ 94CB 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 94CC FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 94CE 20 0B            jr nz,1F
 126+ 94D0 7D               ld a,l
 127+ 94D1 D6 20            sub $20
 128+ 94D3 30 06            jr nc,1F
 129+ 94D5 25               dec h
 130+ 94D6
 131+ 94D6              ; -----------------------------
 132+ 94D6 CD 8A 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 94D9              ;	call Reinicio
 134+ 94D9              ; -----------------------------
 135+ 94D9
 136+ 94D9 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 94DB CD EC 90     1 call PreviousScan
 138+ 94DE 22 8E 89     	ld (Posicion_actual),hl
 139+ 94E1 10 E2            djnz 3B
 140+ 94E3 CD 76 99     2 call Genera_coordenadas
 141+ 94E6 C9           	ret
 142+ 94E7
 143+ 94E7              ; -----------------------------
 144+ 94E7              ;
 145+ 94E7              ;	27/5/23
 146+ 94E7              ;
 147+ 94E7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 94E7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 94E7              ;
 150+ 94E7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 94E7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 94E7              ;
 153+ 94E7              ;	Modifica: A y (Puntero_objeto).
 154+ 94E7
 155+ 94E7 3A B3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 94EA CB 47        	bit 0,a
 157+ 94EC C8           	ret z
 158+ 94ED CB 87        	res 0,a
 159+ 94EF 32 B3 89     	ld (Ctrl_2),a
 160+ 94F2 2A CE 89     	ld hl,(Repone_puntero_objeto)
 161+ 94F5 22 90 89     	ld (Puntero_objeto),hl
 162+ 94F8 C9           	ret
 163+ 94F9
 164+ 94F9              ; ******************************************************************************************************************************************************************************************
 165+ 94F9              ;
 166+ 94F9              ;	19/10/22
 167+ 94F9              ;
 168+ 94F9              ;	Mov_right.
 169+ 94F9              ;
 170+ 94F9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 94F9              ;
 172+ 94F9
 173+ 94F9 3A AE 89     Mov_right ld a,(Ctrl_0)
 174+ 94FC CB 77        	bit 6,a
 175+ 94FE 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9500
 177+ 9500 CD 38 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9503 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9504
 180+ 9504 21 AE 89     	ld hl,Ctrl_0
 181+ 9507 CB E6        	set 4,(hl)
 182+ 9509 18 52        	jr 8F
 183+ 950B
 184+ 950B 21 AE 89     10 ld hl,Ctrl_0
 185+ 950E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9510              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9510              ; 																	; _ en el caso de que no lo haya.
 188+ 9510 3A 92 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9513 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9515 20 46        	jr nz,8F
 191+ 9517
 192+ 9517 3A 94 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 951A A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 951B 28 40        	jr z,8F
 195+ 951D
 196+ 951D              ; ---------- ---------- ----------
 197+ 951D              ;
 198+ 951D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 951D
 200+ 951D 3A B6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9520 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9522 28 11        	jr z,1F
 203+ 9524 38 06        	jr c,6F
 204+ 9526 FE 04        	cp 4
 205+ 9528 28 14        	jr z,7F
 206+ 952A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 952C
 208+ 952C              ; ---------- ---------- ----------
 209+ 952C              ;
 210+ 952C              ; Perfiles de velocidad
 211+ 952C              ;
 212+ 952C
 213+ 952C 3A 94 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 952F FE FE        	cp $fe
 215+ 9531 20 2A        	jr nz,8F
 216+ 9533 18 10        	jr 3F
 217+ 9535 3A 94 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9538 FE FD        	cp $fd
 219+ 953A 20 21        	jr nz,8F
 220+ 953C 18 07        	jr 3F
 221+ 953E 3A 94 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9541 FE FB        	cp $fb
 223+ 9543 20 18        	jr nz,8F
 224+ 9545
 225+ 9545              ; ---------- ---------- ----------
 226+ 9545
 227+ 9545              3
 228+ 9545 CD 78 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9548              ;	call Reinicio
 230+ 9548
 231+ 9548              ; ---------- ---------- ----------
 232+ 9548              ;
 233+ 9548              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9548
 235+ 9548 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 954A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 954B CD 64 95     	call DESPLZ_DER
 238+ 954E C1           	pop bc
 239+ 954F 10 F9        	djnz 5B
 240+ 9551 2A 8E 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9554 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9555 22 8E 89     	ld (Posicion_actual),hl
 243+ 9558 CD 76 99     	call Genera_coordenadas
 244+ 955B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 955D
 246+ 955D              ; ---------- ---------- ----------
 247+ 955D
 248+ 955D 2A 8E 89     8 ld hl,(Posicion_actual)
 249+ 9560 CD 64 95     	call DESPLZ_DER
 250+ 9563 C9           2 ret
 251+ 9564
 252+ 9564              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9564              ;
 254+ 9564              ;	22/9/22
 255+ 9564              ;
 256+ 9564
 257+ 9564 CD 73 95     DESPLZ_DER call Desplaza_derecha
 258+ 9567 CD BF 95         call modifica_parametros_1er_DESPLZ_2
 259+ 956A CD E8 95         call Ciclo_completo
 260+ 956D 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9570 CB FE        	set 7,(hl)
 262+ 9572 C9           	ret
 263+ 9573
 264+ 9573              ; ******************************************************************************************************************************************************************************************
 265+ 9573              ;	15/02/23
 266+ 9573              ;
 267+ 9573
 268+ 9573 3A B6 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9576 47           	ld b,a
 270+ 9577 2A 9A 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 957A 23           1 inc hl
 272+ 957B 23           	inc hl
 273+ 957C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 957E 22 9A 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9581 CD 4F 8B     	call Extrae_address
 276+ 9584 22 90 89     	ld (Puntero_objeto),hl
 277+ 9587
 278+ 9587              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9587
 280+ 9587              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9587              ; Cuántos movimientos hemos hecho ??
 282+ 9587              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9587
 284+ 9587 2A 96 89     7 ld hl,(Indice_Sprite_der)
 285+ 958A EB           	ex de,hl
 286+ 958B A7           	and a
 287+ 958C ED 52        	sbc hl,de
 288+ 958E CB 3D        	srl l
 289+ 9590 3E 08        6 ld a,8
 290+ 9592 95           	sub l
 291+ 9593 30 1E        	jr nc,3F
 292+ 9595
 293+ 9595              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9595              ; B="0".
 295+ 9595
 296+ 9595 04           4 inc b
 297+ 9596 3C           	inc a
 298+ 9597 20 FC        	jr nz,4B
 299+ 9599 78           	ld a,b
 300+ 959A 08           	ex af,af
 301+ 959B 2A 96 89     	ld hl,(Indice_Sprite_der)
 302+ 959E 23           5 inc hl
 303+ 959F 23           	inc hl
 304+ 95A0 10 FC        	djnz 5B
 305+ 95A2 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95A5 CD 4F 8B     	call Extrae_address
 307+ 95A8 22 90 89     	ld (Puntero_objeto),hl
 308+ 95AB
 309+ 95AB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95AB              ; _(Posicion_actual).
 311+ 95AB
 312+ 95AB 21 8E 89     	ld hl,Posicion_actual
 313+ 95AE 34           	inc (hl)
 314+ 95AF 08               ex af,af
 315+ 95B0 6F           	ld l,a
 316+ 95B1 18 DD        	jr 6B
 317+ 95B3
 318+ 95B3              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 95B3
 320+ 95B3 47           3 ld b,a
 321+ 95B4 2A 98 89     	ld hl,(Indice_Sprite_izq)
 322+ 95B7 23           2 inc hl
 323+ 95B8 23           	inc hl
 324+ 95B9 10 FC        	djnz 2B
 325+ 95BB 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 95BE C9           8 ret
 327+ 95BF
 328+ 95BF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 95BF              ;
 330+ 95BF              ;	24/7/22
 331+ 95BF              ;
 332+ 95BF              ;	modifica_parametros_1er_DESPLZ_2
 333+ 95BF              ;
 334+ 95BF              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 95BF              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 95BF              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 95BF
 338+ 95BF 3A 94 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 95C2 A7           	and a
 340+ 95C3 20 1F        	jr nz,1F
 341+ 95C5 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 95C7 32 94 89         ld (CTRL_DESPLZ),a
 343+ 95CA
 344+ 95CA 21 8D 89     	ld hl,Columns
 345+ 95CD 34           	inc (hl)
 346+ 95CE 3A A0 89     	ld a,(Cuad_objeto)
 347+ 95D1 E6 01        	and 1
 348+ 95D3 28 0F        	jr z,1F
 349+ 95D5 2A 8E 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 95D8 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 95D9 22 8E 89     	ld (Posicion_actual),hl
 352+ 95DC CD 76 99     	call Genera_coordenadas
 353+ 95DF CD 44 97     	call Inc_CTRL_DESPLZ
 354+ 95E2 18 03        	jr 2F
 355+ 95E4 CD 44 97     1 call Inc_CTRL_DESPLZ
 356+ 95E7 C9           2 ret
 357+ 95E8
 358+ 95E8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 95E8              ;
 360+ 95E8              ;	24/7/22
 361+ 95E8              ;
 362+ 95E8              ;	Ciclo_completo.
 363+ 95E8              ;
 364+ 95E8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 95E8              ;
 366+ 95E8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 95E8              ; 	Decrementamos (Columns).
 368+ 95E8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 95E8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 95E8
 371+ 95E8
 372+ 95E8 3A 94 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 95EB FE FF        	cp $ff
 374+ 95ED 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 95EF E6 F0        	and $f0
 376+ 95F1 20 28        	jr nz,3F
 377+ 95F3
 378+ 95F3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 95F3
 380+ 95F3 3A 94 89     	ld a,(CTRL_DESPLZ)
 381+ 95F6 47           	ld b,a
 382+ 95F7 3E F8        	ld a,$f8
 383+ 95F9 80           	add b
 384+ 95FA 32 94 89     	ld (CTRL_DESPLZ),a
 385+ 95FD 18 1C        	jr 3F
 386+ 95FF 21 8D 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9602 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9603 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9604 32 94 89     	ld (CTRL_DESPLZ),a
 390+ 9607 3A A0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 960A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 960C 20 0A        	jr nz,2F
 393+ 960E 2A 8E 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9611 23           	inc hl
 395+ 9612 22 8E 89     	ld (Posicion_actual),hl
 396+ 9615 CD 76 99     	call Genera_coordenadas
 397+ 9618
 398+ 9618              ; Inicia el puntero de Sprite.
 399+ 9618
 400+ 9618 CD 64 8B     2 call Inicia_puntero_objeto_der
 401+ 961B C9           3 ret
 402+ 961C
 403+ 961C              ; ******************************************************************************************************************************************************************************************
 404+ 961C              ;
 405+ 961C              ;	15/02/23
 406+ 961C              ;
 407+ 961C              ;	Mov_left.
 408+ 961C              ;
 409+ 961C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 961C              ;
 411+ 961C              Mov_left
 412+ 961C
 413+ 961C 21 AE 89     	ld hl,Ctrl_0
 414+ 961F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9621              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9621              ; 																	; _ en el caso de que no lo haya.
 417+ 9621 3A AE 89     	ld a,(Ctrl_0)
 418+ 9624 CB 77        	bit 6,a
 419+ 9626 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9628
 421+ 9628 CD 3E 97     	call Stop_Amadeus_left
 422+ 962B C8           	ret z
 423+ 962C 20 4A        	jr nz,8F
 424+ 962E
 425+ 962E 3A 92 89     11 ld a,(Coordenada_X)
 426+ 9631 A7           	and a
 427+ 9632 20 44        	jr nz,8F
 428+ 9634
 429+ 9634 3A 94 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9637 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9638 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 963A
 433+ 963A              ; ---------- ---------- ----------
 434+ 963A
 435+ 963A 3A B5 89     	ld a,(Vel_left)
 436+ 963D FE 02        	cp 2
 437+ 963F 28 0F        	jr z,1F
 438+ 9641 38 04        	jr c,6F
 439+ 9643 FE 04        	cp 4
 440+ 9645 28 12        	jr z,7F
 441+ 9647
 442+ 9647              ; ---------- ---------- ----------
 443+ 9647
 444+ 9647 3A 94 89     6 ld a,(CTRL_DESPLZ)
 445+ 964A FE F8        	cp $f8
 446+ 964C 20 2A        	jr nz,8F
 447+ 964E 18 10        	jr 4F
 448+ 9650 3A 94 89     1 ld a,(CTRL_DESPLZ)
 449+ 9653 FE F9        	cp $f9
 450+ 9655 20 21        	jr nz,8F
 451+ 9657 18 07        	jr 4F
 452+ 9659 3A 94 89     7 ld a,(CTRL_DESPLZ)
 453+ 965C FE FB        	cp $fb
 454+ 965E 20 18        	jr nz,8F
 455+ 9660
 456+ 9660              ; ---------- ---------- ----------
 457+ 9660
 458+ 9660              4
 459+ 9660 CD 66 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9663              ;	call Reinicio
 461+ 9663
 462+ 9663              ; ---------- ---------- ----------
 463+ 9663
 464+ 9663 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9665 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9666
 467+ 9666              ;	ld hl,(Indice_Sprite_izq)
 468+ 9666              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9666
 470+ 9666 CD 7F 96     	call DESPLZ_IZQ
 471+ 9669 C1           	pop bc
 472+ 966A 10 F9        	djnz 5B
 473+ 966C 2A 8E 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 966F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9670 22 8E 89     	ld (Posicion_actual),hl
 476+ 9673 CD 76 99     	call Genera_coordenadas
 477+ 9676 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9678
 479+ 9678              ; ---------- ---------- ----------
 480+ 9678
 481+ 9678              ; Movemos, no hay recolocación.
 482+ 9678
 483+ 9678 2A 8E 89     8 ld hl,(Posicion_actual)
 484+ 967B CD 7F 96     	call DESPLZ_IZQ
 485+ 967E C9           2 ret
 486+ 967F
 487+ 967F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 967F              ;
 489+ 967F              ;	22/9/22
 490+ 967F
 491+ 967F              DESPLZ_IZQ
 492+ 967F
 493+ 967F CD 8E 96     	call Desplaza_izquierda
 494+ 9682 CD DA 96         call modifica_parametros_1er_DESPLZ
 495+ 9685 CD 02 97     	call Ciclo_completo_2
 496+ 9688 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 968B CB BE        	res 7,(hl)
 498+ 968D C9           	ret
 499+ 968E
 500+ 968E              Desplaza_izquierda
 501+ 968E
 502+ 968E 3A B5 89     	ld a,(Vel_left)
 503+ 9691 47           	ld b,a
 504+ 9692 2A 9C 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9695 23           1 inc hl
 506+ 9696 23           	inc hl
 507+ 9697 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9699 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 969C CD 4F 8B     	call Extrae_address
 510+ 969F 22 90 89     	ld (Puntero_objeto),hl
 511+ 96A2
 512+ 96A2              ; Modifica (Puntero_DESPLZ_der).
 513+ 96A2
 514+ 96A2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96A2              ; Cuántos movimientos hemos hecho ??
 516+ 96A2              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96A2
 518+ 96A2 2A 98 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96A5 EB           	ex de,hl
 520+ 96A6 A7           	and a
 521+ 96A7 ED 52        	sbc hl,de
 522+ 96A9 CB 3D        	srl l
 523+ 96AB 3E 08        6 ld a,8
 524+ 96AD 95           	sub l
 525+ 96AE 30 1E        	jr nc,3F
 526+ 96B0
 527+ 96B0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 96B0              ; B="0".
 529+ 96B0
 530+ 96B0 04           4 inc b
 531+ 96B1 3C           	inc a
 532+ 96B2 20 FC        	jr nz,4B
 533+ 96B4 78           	ld a,b
 534+ 96B5 08           	ex af,af
 535+ 96B6 2A 98 89     	ld hl,(Indice_Sprite_izq)
 536+ 96B9 23           5 inc hl
 537+ 96BA 23           	inc hl
 538+ 96BB 10 FC        	djnz 5B
 539+ 96BD 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 96C0 CD 4F 8B     	call Extrae_address
 541+ 96C3 22 90 89     	ld (Puntero_objeto),hl
 542+ 96C6
 543+ 96C6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 96C6              ; _(Posicion_actual).
 545+ 96C6
 546+ 96C6 21 8E 89     	ld hl,Posicion_actual
 547+ 96C9 35           	dec (hl)
 548+ 96CA 08           	ex af,af
 549+ 96CB 6F           	ld l,a
 550+ 96CC 18 DD        	jr 6B
 551+ 96CE
 552+ 96CE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 96CE
 554+ 96CE 47           3 ld b,a
 555+ 96CF 2A 96 89     	ld hl,(Indice_Sprite_der)
 556+ 96D2 23           2 inc hl
 557+ 96D3 23           	inc hl
 558+ 96D4 10 FC        	djnz 2B
 559+ 96D6 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 560+ 96D9 C9           8 ret
 561+ 96DA
 562+ 96DA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 96DA              ;
 564+ 96DA              ;	modifica_parametros_1er_DESPLZ
 565+ 96DA              ;
 566+ 96DA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 96DA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 96DA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 96DA
 570+ 96DA 3A 94 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 96DD A7           	and a
 572+ 96DE 20 1E        	jr nz,1F
 573+ 96E0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 96E1 32 94 89         ld (CTRL_DESPLZ),a
 575+ 96E4 21 8D 89     	ld hl,Columns
 576+ 96E7 34           	inc (hl)
 577+ 96E8 3A A0 89     	ld a,(Cuad_objeto)
 578+ 96EB E6 01        	and 1
 579+ 96ED 20 0F        	jr nz,1F
 580+ 96EF 2A 8E 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 96F2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 96F3 22 8E 89     	ld (Posicion_actual),hl
 583+ 96F6 CD 76 99     	call Genera_coordenadas
 584+ 96F9 CD 55 97     	call Dec_CTRL_DESPLZ
 585+ 96FC 18 03        	jr 2F
 586+ 96FE CD 55 97     1 call Dec_CTRL_DESPLZ
 587+ 9701 C9           2 ret
 588+ 9702
 589+ 9702              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9702
 591+ 9702 3A 94 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9705 FE F7        	cp $f7
 593+ 9707 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9709 30 2C        	jr nc,3F
 595+ 970B
 596+ 970B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 970B
 598+ 970B 06 00        	ld b,0
 599+ 970D 04           4 inc b
 600+ 970E 3C           	inc a
 601+ 970F FE F7        	cp $f7
 602+ 9711 20 FA        	jr nz,4B
 603+ 9713 3E FF        	ld a,$ff
 604+ 9715 90           	sub b
 605+ 9716 32 94 89     	ld (CTRL_DESPLZ),a
 606+ 9719 18 1C        	jr 3F
 607+ 971B
 608+ 971B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 971B
 610+ 971B 21 8D 89     1 ld hl,Columns
 611+ 971E 35           	dec (hl)
 612+ 971F AF           	xor a
 613+ 9720 32 94 89     	ld (CTRL_DESPLZ),a
 614+ 9723 3A A0 89     	ld a,(Cuad_objeto)
 615+ 9726 E6 01        	and 1
 616+ 9728 28 0A        	jr z,2F
 617+ 972A 2A 8E 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 972D 2B           	dec hl
 619+ 972E 22 8E 89     	ld (Posicion_actual),hl
 620+ 9731 CD 76 99     	call Genera_coordenadas
 621+ 9734
 622+ 9734              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9734
 624+ 9734 CD 77 8B     2 call Inicia_puntero_objeto_izq
 625+ 9737 C9           3 ret
 626+ 9738
 627+ 9738              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9738              ;
 629+ 9738              ;	19/10/22
 630+ 9738              ;
 631+ 9738              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9738              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9738
 634+ 9738 3A 92 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 973B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 973D C9           	ret
 637+ 973E
 638+ 973E              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 973E              ;
 640+ 973E              ;	19/10/22
 641+ 973E              ;
 642+ 973E              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 973E              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 973E
 645+ 973E 3A 92 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9741 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9743 C9           	ret
 648+ 9744
 649+ 9744              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9744              ;
 651+ 9744              ;	24/7/22
 652+ 9744              ;
 653+ 9744              ;	Inc_CTRL_DESPLZ
 654+ 9744              ;
 655+ 9744              ;
 656+ 9744              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9744
 658+ 9744 21 94 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9747 3A B6 89     	ld a,(Vel_right)
 660+ 974A A7           	and a
 661+ 974B 28 06        	jr z,1F
 662+ 974D 47           	ld b,a
 663+ 974E 34           3 inc (hl)
 664+ 974F 10 FD        	djnz 3B
 665+ 9751 18 01        	jr 2F
 666+ 9753 34           1 inc (hl)
 667+ 9754 C9           2 ret
 668+ 9755
 669+ 9755              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9755              ;
 671+ 9755              ;	5/2/23
 672+ 9755              ;
 673+ 9755              ;	Dec_CTRL_DESPLZ
 674+ 9755              ;
 675+ 9755              ;
 676+ 9755              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9755
 678+ 9755 21 94 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9758 3A B5 89     	ld a,(Vel_left)
 680+ 975B A7           	and a
 681+ 975C 28 06        	jr z,1F
 682+ 975E 47           	ld b,a
 683+ 975F 35           3 dec (hl)
 684+ 9760 10 FD        	djnz 3B
 685+ 9762 18 01        	jr 2F
 686+ 9764 35           1 dec (hl)
 687+ 9765 C9           2 ret
 688+ 9766
 689+ 9766              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9766
 691+ 9766 2A 8E 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9769 01 1F 00     	ld bc,31
 693+ 976C A7           	and a
 694+ 976D ED 4A        	adc hl,bc
 695+ 976F 22 8E 89     	ld (Posicion_actual),hl
 696+ 9772 21 AE 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9775 CB C6        	set 0,(hl)
 698+ 9777 C9           	ret
 699+ 9778
 700+ 9778              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9778
 702+ 9778 2A 8E 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 977B 01 1F 00     	ld bc,31
 704+ 977E A7           	and a
 705+ 977F ED 42        	sbc hl,bc
 706+ 9781 22 8E 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9784 21 AE 89     	ld hl,Ctrl_0
 708+ 9787 CB CE        	set 1,(hl)
 709+ 9789 C9           	ret
 710+ 978A
 711+ 978A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 978A
 713+ 978A 24           Reaparece_abajo inc h
 714+ 978B 01 E0 17     	ld bc,$17e0
 715+ 978E A7           	and a
 716+ 978F ED 4A        	adc hl,bc
 717+ 9791 22 8E 89     	ld (Posicion_actual),hl
 718+ 9794 21 AE 89     	ld hl,Ctrl_0
 719+ 9797 CB D6        	set 2,(hl)
 720+ 9799 C9           	ret
 721+ 979A
 722+ 979A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 979A
 724+ 979A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 979D A7           	and a
 726+ 979E ED 42        	sbc hl,bc
 727+ 97A0 22 8E 89     	ld (Posicion_actual),hl
 728+ 97A3 21 AE 89     	ld hl,Ctrl_0
 729+ 97A6 CB DE        	set 3,(hl)
 730+ 97A8 C9           	ret
 731+ 97A9
 732+ 97A9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97A9              ;
 734+ 97A9              ;	15/07/23
 735+ 97A9
 736+ 97A9              Reinicio
 737+ 97A9
 738+ 97A9              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97A9
 740+ 97A9 AF           	xor a
 741+ 97AA 21 C5 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97AD CD CB 97     	call Limpia_contenido_hl
 743+ 97B0
 744+ 97B0 21 8E 89     	ld hl,Posicion_actual
 745+ 97B3 CD CB 97     	call Limpia_contenido_hl
 746+ 97B6
 747+ 97B6 CD 12 8C     	call Inicializa_Puntero_indice_mov
 748+ 97B9 CD 97 98     	call Inicia_Puntero_mov
 749+ 97BC
 750+ 97BC 21 C7 89     	ld hl,Incrementa_puntero
 751+ 97BF 06 05        	ld b,5
 752+ 97C1 77           1 ld (hl),a
 753+ 97C2 23           	inc hl
 754+ 97C3 10 FC        	djnz 1B
 755+ 97C5
 756+ 97C5 21 B3 89     	ld hl,Ctrl_2
 757+ 97C8 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 97CA
 759+ 97CA C9           	ret
 760+ 97CB
 761+ 97CB 77           Limpia_contenido_hl	ld (hl),a
 762+ 97CC 23           	inc hl
 763+ 97CD 77           	ld (hl),a
 764+ 97CE C9           	ret
 765+ 97CF
 766+ 97CF
# file closed: Direcciones.asm
1770  97CF              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 97CF              ; ----- ----- ----- ----- -----
   2+ 97CF              ;
   3+ 97CF              ;   28/12/23
   4+ 97CF
   5+ 97CF              Movimiento
   6+ 97CF
   7+ 97CF              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 97CF
   9+ 97CF 3A B3 89         ld a,(Ctrl_2)
  10+ 97D2 CB 57            bit 2,a
  11+ 97D4 20 1B            jr nz, Desplazamiento_iniciado
  12+ 97D6
  13+ 97D6 2A C3 89         ld hl,(Puntero_mov)
  14+ 97D9 7E               ld a,(hl)
  15+ 97DA
  16+ 97DA              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 97DA
  18+ 97DA              Inicia_desplazamiento.
  19+ 97DA
  20+ 97DA              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 97DA
  22+ 97DA CD CD 98         call Ajusta_velocidad_desplazamiento
  23+ 97DD
  24+ 97DD              ; Iniciamos (Repetimos_mov).
  25+ 97DD
  26+ 97DD 7E               ld a,(hl)
  27+ 97DE E6 0F            and $0f
  28+ 97E0 32 C9 89         ld (Repetimos_desplazamiento),a
  29+ 97E3 32 CA 89         ld (Repetimos_desplazamiento_backup),a
  30+ 97E6
  31+ 97E6              ; Iniciamos (Cola_de_desplazamiento).
  32+ 97E6
  33+ 97E6 23               inc hl
  34+ 97E7 7E               ld a,(hl)
  35+ 97E8 32 CC 89         ld (Cola_de_desplazamiento),a
  36+ 97EB 2B               dec hl
  37+ 97EC
  38+ 97EC 21 B3 89         ld hl,Ctrl_2
  39+ 97EF CB D6            set 2,(hl)
  40+ 97F1
  41+ 97F1              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 97F1              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 97F1
  44+ 97F1              Desplazamiento_iniciado
  45+ 97F1
  46+ 97F1 CD A1 98         call Aplica_desplazamiento
  47+ 97F4
  48+ 97F4              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 97F4
  50+ 97F4 3A E8 89         ld a,(Ctrl_3)
  51+ 97F7 CB 4F            bit 1,a
  52+ 97F9 C0               ret nz
  53+ 97FA
  54+ 97FA 21 C9 89     3 ld hl,Repetimos_desplazamiento
  55+ 97FD 35               dec (hl)
  56+ 97FE C0               ret nz
  57+ 97FF
  58+ 97FF              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 97FF              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 97FF              ; Analiza (Cola_de_desplazamiento).
  61+ 97FF
  62+ 97FF 3A CC 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9802 A7               and a
  64+ 9803 CC F6 98         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9806 28 30            jr z,Reinicia_el_movimiento
  66+ 9808
  67+ 9808 FE FF            cp $ff
  68+ 980A 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 980C
  70+ 980C FE FE            cp $fe
  71+ 980E CC 7B 98         call z,Fijamos_bucle
  72+ 9811 28 25            jr z,Reinicia_el_movimiento
  73+ 9813
  74+ 9813 FE FD            cp $fd
  75+ 9815 20 11            jr nz,1F
  76+ 9817
  77+ 9817              ; ---
  78+ 9817              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9817
  80+ 9817 3A B3 89         ld a,(Ctrl_2)
  81+ 981A CB 5F            bit 3,a
  82+ 981C 20 1A            jr nz,Reinicia_el_movimiento
  83+ 981E
  84+ 981E              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 981E
  86+ 981E 21 B3 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9821 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9823
  89+ 9823 CD 8C 98         call Inicia_Repetimos_movimiento
  90+ 9826 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9828              ; ---
  92+ 9828
  93+ 9828 FE 01        1 cp 1
  94+ 982A CA 65 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 982D
  96+ 982D 3D               dec a
  97+ 982E 32 CC 89         ld (Cola_de_desplazamiento),a
  98+ 9831
  99+ 9831 3A CA 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9834 32 C9 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9837              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9837 C9               ret
 103+ 9838
 104+ 9838              Reinicia_el_movimiento
 105+ 9838
 106+ 9838 3A B3 89         ld a,(Ctrl_2)
 107+ 983B CB 5F            bit 3,a
 108+ 983D 28 1B            jr z,2F
 109+ 983F
 110+ 983F              ; (Cola_de_desplazamiento)="254".
 111+ 983F
 112+ 983F 21 CB 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9842 35               dec (hl)
 114+ 9843 20 15            jr nz,2F
 115+ 9845
 116+ 9845              ; Fin de las repeticiones del último movimiento.
 117+ 9845
 118+ 9845 21 B3 89         ld hl,Ctrl_2
 119+ 9848 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 984A
 121+ 984A 2A C3 89         ld hl,(Puntero_mov)
 122+ 984D 23               inc hl
 123+ 984E 23               inc hl
 124+ 984F 23               inc hl
 125+ 9850 22 C3 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9853              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9853 7E               ld a,(hl)
 128+ 9854 32 CC 89         ld (Cola_de_desplazamiento),a
 129+ 9857
 130+ 9857 C3 FF 97         jp Cola
 131+ 985A
 132+ 985A CD 97 98     2 call Inicia_Puntero_mov
 133+ 985D
 134+ 985D 21 B3 89         ld hl,Ctrl_2
 135+ 9860 CB 96            res 2,(hl)
 136+ 9862
 137+ 9862 C3 CF 97         jp Movimiento
 138+ 9865
 139+ 9865              Siguiente_desplazamiento
 140+ 9865
 141+ 9865              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9865              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9865
 144+ 9865 21 B3 89         ld hl,Ctrl_2
 145+ 9868 CB 96            res 2,(hl)
 146+ 986A
 147+ 986A 2A C3 89         ld hl,(Puntero_mov)
 148+ 986D 23               inc hl
 149+ 986E 23               inc hl
 150+ 986F 22 C3 89         ld (Puntero_mov),hl
 151+ 9872
 152+ 9872 7E               ld a,(hl)
 153+ 9873 A7               and a
 154+ 9874 CC F6 98         call z,Incrementa_Puntero_indice_mov
 155+ 9877 CA 38 98         jp z,Reinicia_el_movimiento
 156+ 987A
 157+ 987A C9               ret
 158+ 987B
 159+ 987B              ; Subrutinas -----------------------------------------
 160+ 987B              ; ---------- --------- --------- ---------- ----------
 161+ 987B              ;
 162+ 987B              ;   24/07/23
 163+ 987B              ;
 164+ 987B              ;   Fijamos_bucle
 165+ 987B              ;
 166+ 987B              ;
 167+ 987B
 168+ 987B              Fijamos_bucle
 169+ 987B
 170+ 987B 3A C7 89         ld a,(Incrementa_puntero)
 171+ 987E 3C               inc a
 172+ 987F 32 C8 89         ld (Incrementa_puntero_backup),a
 173+ 9882
 174+ 9882 CD F6 98         call Incrementa_Puntero_indice_mov
 175+ 9885 2A C1 89         ld hl,(Puntero_indice_mov)
 176+ 9888 22 C5 89         ld (Puntero_indice_mov_bucle),hl
 177+ 988B C9               ret
 178+ 988C
 179+ 988C              ; ---------- --------- --------- ---------- ----------
 180+ 988C              ;
 181+ 988C              ;   07/7/23
 182+ 988C              ;
 183+ 988C              ;   Inicia_Repetimos_movimiento
 184+ 988C              ;
 185+ 988C              ;
 186+ 988C
 187+ 988C              Inicia_Repetimos_movimiento
 188+ 988C
 189+ 988C              ; Iniciamos (Repetimos_movimiento).
 190+ 988C
 191+ 988C DD 2A C3 89      ld ix,(Puntero_mov)
 192+ 9890 DD 7E 02         ld a,(ix+2)
 193+ 9893 32 CB 89         ld (Repetimos_movimiento),a
 194+ 9896
 195+ 9896 C9               ret
 196+ 9897
 197+ 9897              ; ---------- --------- --------- ---------- ----------
 198+ 9897              ;
 199+ 9897              ;   26/6/23
 200+ 9897              ;
 201+ 9897              ;   Inicia_Puntero_mov
 202+ 9897              ;
 203+ 9897              ;
 204+ 9897
 205+ 9897 2A C1 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 989A CD 4F 8B         call Extrae_address
 207+ 989D 22 C3 89         ld (Puntero_mov),hl
 208+ 98A0 C9               ret
 209+ 98A1
 210+ 98A1              ; ---------- --------- --------- ---------- ----------
 211+ 98A1              ;
 212+ 98A1              ;   27/06/23
 213+ 98A1              ;
 214+ 98A1              ;   Aplica_movimiento.
 215+ 98A1
 216+ 98A1              Aplica_desplazamiento
 217+ 98A1
 218+ 98A1              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98A1
 220+ 98A1 2A C3 89         ld hl, (Puntero_mov)
 221+ 98A4
 222+ 98A4 7E               ld a,(hl)
 223+ 98A5 E6 F0            and $f0
 224+ 98A7 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98A8
 226+ 98A8 CB 7E            bit 7,(hl)
 227+ 98AA 28 03            jr z,1F
 228+ 98AC CD B6 94         call Mov_up
 229+ 98AF 2A C3 89     1 ld hl, (Puntero_mov)
 230+ 98B2 CB 76            bit 6,(hl)
 231+ 98B4 28 03            jr z,2F
 232+ 98B6 CD 7D 94         call Mov_down
 233+ 98B9
 234+ 98B9              ; Se ha aplicado reinicio ???
 235+ 98B9              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 98B9
 237+ 98B9              ;    ld a,(Ctrl_3)
 238+ 98B9              ;    bit 1,a
 239+ 98B9              ;    ret nz
 240+ 98B9
 241+ 98B9 2A C3 89     2 ld hl, (Puntero_mov)
 242+ 98BC CB 6E            bit 5,(hl)
 243+ 98BE 28 03            jr z,3F
 244+ 98C0 CD 1C 96         call Mov_left
 245+ 98C3 2A C3 89     3 ld hl, (Puntero_mov)
 246+ 98C6 CB 66            bit 4,(hl)
 247+ 98C8 C8               ret z
 248+ 98C9 CD F9 94         call Mov_right
 249+ 98CC C9               ret
 250+ 98CD
 251+ 98CD              ; ---------- --------- --------- ---------- ----------
 252+ 98CD              ;
 253+ 98CD              ;   26/06/23
 254+ 98CD              ;
 255+ 98CD              ;   Ajusta_velocidad_desplazamiento.
 256+ 98CD
 257+ 98CD              Ajusta_velocidad_desplazamiento
 258+ 98CD
 259+ 98CD              ; 1er byte de la cadena de movimiento.
 260+ 98CD              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 98CD
 262+ 98CD CD EB 98         call Extrae_nibble_alto
 263+ 98D0
 264+ 98D0 32 B7 89         ld (Vel_up),a
 265+ 98D3 79               ld a,c
 266+ 98D4 E6 0F            and $0f
 267+ 98D6 32 B8 89         ld (Vel_down),a
 268+ 98D9
 269+ 98D9              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 98D9              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 98D9
 272+ 98D9 23               inc hl
 273+ 98DA CD EB 98         call Extrae_nibble_alto
 274+ 98DD
 275+ 98DD 32 B5 89         ld (Vel_left),a
 276+ 98E0 79               ld a,c
 277+ 98E1 E6 0F            and $0f
 278+ 98E3 32 B6 89         ld (Vel_right),a
 279+ 98E6
 280+ 98E6              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 98E6
 282+ 98E6 23               inc hl
 283+ 98E7 22 C3 89         ld (Puntero_mov),hl
 284+ 98EA C9               ret
 285+ 98EB
 286+ 98EB 06 04        Extrae_nibble_alto ld b,4
 287+ 98ED 7E               ld a,(hl)
 288+ 98EE 4F               ld c,a
 289+ 98EF E6 F0            and $f0
 290+ 98F1 CB 3F        1 srl a
 291+ 98F3 10 FC            djnz 1B
 292+ 98F5 C9               ret
 293+ 98F6
 294+ 98F6              ; ---------- --------- --------- ---------- ----------
 295+ 98F6              ;
 296+ 98F6              ;   5/7/23
 297+ 98F6              ;
 298+ 98F6              ;   Incrementa_Puntero_indice_mov
 299+ 98F6
 300+ 98F6              Incrementa_Puntero_indice_mov
 301+ 98F6
 302+ 98F6 21 C7 89         ld hl,Incrementa_puntero
 303+ 98F9 34               inc (hl)
 304+ 98FA
 305+ 98FA 2A C1 89         ld hl,(Puntero_indice_mov)
 306+ 98FD 01 02 00         ld bc,2
 307+ 9900 A7               and a
 308+ 9901 09               add hl,bc
 309+ 9902 22 C1 89         ld (Puntero_indice_mov),hl
 310+ 9905
 311+ 9905 7E               ld a,(hl)
 312+ 9906 A7               and a
 313+ 9907
 314+ 9907              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9907
 316+ 9907              ;    jr z,$
 317+ 9907
 318+ 9907              ;! Reinicia el Patrón de movimiento.
 319+ 9907
 320+ 9907 CC 0C 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 990A
 322+ 990A AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 990B
 324+ 990B C9               ret
 325+ 990C
 326+ 990C              ; ---------- --------- --------- ---------- ----------
 327+ 990C              ;
 328+ 990C              ;   15/01/24
 329+ 990C              ;
 330+ 990C              ;   Inicializa_Puntero_indice_mov
 331+ 990C
 332+ 990C              Inicializa_Puntero_indice_mov_2
 333+ 990C
 334+ 990C              ; Existe etiqueta de bucle principal???
 335+ 990C
 336+ 990C 2A C5 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 990F 24               inc h
 338+ 9910 25               dec h
 339+ 9911 28 05            jr z,2F
 340+ 9913
 341+ 9913 22 C1 89         ld (Puntero_indice_mov),hl
 342+ 9916 18 14            jr 3F
 343+ 9918
 344+ 9918              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9918
 346+ 9918 3A C7 89     2 ld a,(Incrementa_puntero)
 347+ 991B 47               ld b,a
 348+ 991C
 349+ 991C 2A C1 89         ld hl,(Puntero_indice_mov)
 350+ 991F 2B           1 dec hl
 351+ 9920 2B               dec hl
 352+ 9921 10 FC            djnz 1B
 353+ 9923 22 C1 89         ld (Puntero_indice_mov),hl
 354+ 9926
 355+ 9926 AF               xor a
 356+ 9927 32 C7 89         ld (Incrementa_puntero),a
 357+ 992A 18 06            jr 4F
 358+ 992C
 359+ 992C 3A C8 89     3 ld a,(Incrementa_puntero_backup)
 360+ 992F 32 C7 89         ld (Incrementa_puntero),a
 361+ 9932 C9           4 ret
 362+ 9933
 363+ 9933              ; ----------------------------------------------------------------------
 364+ 9933              ;
 365+ 9933              ;   30/01/24
 366+ 9933              ;
 367+ 9933              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9933
 369+ 9933 3A 8B 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9936 CD 63 8D         call Calcula_salto_en_BC
 371+ 9939 21 B9 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 993C A7               and a
 373+ 993D ED 4A            adc hl,bc
 374+ 993F C9               ret
 375+ 9940
 376+ 9940              ; ----------------------------------------------------------------------
 377+ 9940              ;
 378+ 9940              ;   30/01/24
 379+ 9940              ;
 380+ 9940              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9940              ;
 382+ 9940              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9940
 384+ 9940 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9941 23               inc hl
 386+ 9942 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9943 69               ld l,c
 388+ 9944 60               ld h,b
 389+ 9945 22 AC 89         ld (Contador_de_mov_masticados),hl
 390+ 9948 C9               ret
 391+ 9949
# file closed: Movimiento.asm
1771  9949              ;	include "Disparo.asm"
1772  9949              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9949              ; Relojes y temporizaciones.
   2+ 9949
   3+ 9949              ; ------------------------------------------------------
   4+ 9949              ;
   5+ 9949              ;	16/7/23
   6+ 9949              ;
   7+ 9949              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9949              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9949              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9949              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9949              ;
  12+ 9949              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9949              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9949
  15+ 9949              ; Disparo_entidad db 1
  16+ 9949              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9949              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9949
  19+ 9949              Habilita_disparos
  20+ 9949
  21+ 9949 7E           	ld a,(hl)
  22+ 994A A7           	and a
  23+ 994B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 994C
  25+ 994C EB           	ex de,hl
  26+ 994D
  27+ 994D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 994E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 994F
  30+ 994F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 994F
  32+ 994F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9950 7E           	ld a,(hl)
  34+ 9951 23           	inc hl
  35+ 9952 77           	ld (hl),a
  36+ 9953
  37+ 9953 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9954 3E 01        	ld a,1
  39+ 9956 77           	ld (hl),a
  40+ 9957 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1773  9958              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9958              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9958              ;
   3+ 9958              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9958              ;
   5+ 9958              ; *****************************************************************************************************************************************************************************************
   6+ 9958              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9958
   8+ 9958 7C           calcula_tercio ld a,h
   9+ 9959 E6 18        	and $18
  10+ 995B CB 2F        	sra a
  11+ 995D CB 2F        	sra a
  12+ 995F CB 2F        	sra a
  13+ 9961 C9           	ret
  14+ 9962
# file closed: calcula_tercio.asm
1774  9962              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9962              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9962              ;
   3+ 9962              ;
   4+ 9962              ;	CLS.
   5+ 9962              ;
   6+ 9962              ;	Limpia la pantalla y define sus atributos.
   7+ 9962              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9962              ;
   9+ 9962              ;	COLORES: 0 ..... NEGRO
  10+ 9962              ;    		 1 ..... AZUL
  11+ 9962              ; 			 2 ..... ROJO
  12+ 9962              ;			 3 ..... MAGENTA
  13+ 9962              ; 			 4 ..... VERDE
  14+ 9962              ; 			 5 ..... CIAN
  15+ 9962              ;			 6 ..... AMARILLO
  16+ 9962              ; 			 7 ..... BLANCO
  17+ 9962              ;
  18+ 9962              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9962              ;
  20+ 9962              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9962
  22+ 9962
  23+ 9962 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9965 11 01 40     	LD DE,$4001
  25+ 9968 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 996B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 996D ED B0        	LDIR
  28+ 996F 01 FF 02     	LD BC,767
  29+ 9972 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9973 ED B0        	LDIR
  31+ 9975 C9           	ret
  32+ 9976
# file closed: Cls.asm
1775  9976              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9976              ; ------------------------------------------------------------------------
   2+ 9976              ;
   3+ 9976              ;	30/1/24
   4+ 9976              ;
   5+ 9976              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9976              ;	Fila superior "0", Columna izquierda "0".
   7+ 9976              ;
   8+ 9976              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9976              ;
  10+ 9976              ;	Modifica: A,BC y DE.
  11+ 9976
  12+ 9976 7D           Genera_coordenadas ld a,l
  13+ 9977 E6 1F        	and $1f
  14+ 9979 32 92 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 997C
  16+ 997C 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 997D FE 40        	cp $40
  18+ 997F 38 1C        	jr c,4F
  19+ 9981
  20+ 9981 CD 58 99     	call calcula_tercio
  21+ 9984 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9985
  23+ 9985 1E 00        	ld e,0
  24+ 9987 7D           	ld a,l
  25+ 9988 E6 E0        	and $e0
  26+ 998A 28 01        	jr z,1F
  27+ 998C 04           	inc b
  28+ 998D
  29+ 998D 04           1 inc b
  30+ 998E 05           	dec b
  31+ 998F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9991              ;														; _ , salimos.
  33+ 9991 1C           3 inc e
  34+ 9992 D6 20        	sub 32
  35+ 9994 20 FB        	jr nz,3B
  36+ 9996 10 F5        	djnz 1B
  37+ 9998
  38+ 9998 7B           2 ld a,e
  39+ 9999 32 93 89     	ld (Coordenada_y),a
  40+ 999C C9           	ret
  41+ 999D
  42+ 999D AF           4 xor a
  43+ 999E 32 93 89     	ld (Coordenada_y),a
  44+ 99A1 C9           	ret
  45+ 99A2
  46+ 99A2              ; ------------------------------------------------------------------------
  47+ 99A2              ;	28/05/23
  48+ 99A2              ;
  49+ 99A2              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99A2              ;	Fila superior "0", Columna izquierda "0".
  51+ 99A2              ;
  52+ 99A2              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99A2              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99A2              ;
  55+ 99A2              ;		DE="$120d"
  56+ 99A2              ;
  57+ 99A2              ;		D, (Coordenada_X), Columnas, $12
  58+ 99A2              ;		E, (Coordenada_y), Filas, $0d
  59+ 99A2              ;
  60+ 99A2              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99A2
  62+ 99A2              ;	Modifica: A,BC y DE.
  63+ 99A2
  64+ 99A2
  65+ 99A2              Genera_coordenadas_disparo
  66+ 99A2
  67+ 99A2              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99A2
  69+ 99A2 7D           	ld a,l
  70+ 99A3 E6 1F        	and $1f
  71+ 99A5 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99A6 CD 58 99     	call calcula_tercio
  73+ 99A9 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99AA 1E 00        	ld e,0
  75+ 99AC 7D           	ld a,l
  76+ 99AD E6 E0        	and $e0
  77+ 99AF 28 01        	jr z,1F
  78+ 99B1 04           	inc b
  79+ 99B2 1C           1 inc e
  80+ 99B3 D6 20        	sub 32
  81+ 99B5 20 FB        	jr nz,1B
  82+ 99B7 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 99B9 C9           	ret
  84+ 99BA
# file closed: Genera_coordenadas.asm
1776  99BA              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 99BA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99BA              ;
   3+ 99BA              ;	12/12/23
   4+ 99BA              ;
   5+ 99BA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 99BA
   7+ 99BA              ;	ADC HL,SP	LD (addr),SP
   8+ 99BA              ;	ADD HL,SP	LD SP,(addr)
   9+ 99BA              ;	ADD IX,SP	LD SP,nn
  10+ 99BA              ; 	ADD IY,SP	LD SP,HL
  11+ 99BA              ;				LD SP,IX
  12+ 99BA              ;	DEC SP		LD SP,IY
  13+ 99BA
  14+ 99BA              ;	EX (SP),HL
  15+ 99BA              ;	EX (SP),IX
  16+ 99BA              ;	EX (SP),IY
  17+ 99BA
  18+ 99BA              ;	INC SP
  19+ 99BA
  20+ 99BA                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo del Scanlines_album.
  23+ 80BF              ;   DE contiene Puntero_objeto.
  24+ 80BF              ;   IX contiene el Puntero de impresión.
  25+ 80BF
  26+ 80BF              Genera_datos_de_impresion
  27+ 80BF
  28+ 80BF ED 73 DE 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  29+ 80C3 31 AA 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  30+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  31+ 80C8
  32+ 80C8 2A E4 89         ld hl,(Scanlines_album_SP)
  33+ 80CB
  34+ 80CB 3E 05            ld a,5
  35+ 80CD 85               add l
  36+ 80CE 6F               ld l,a
  37+ 80CF
  38+ 80CF F9               ld sp,hl
  39+ 80D0 22 E4 89         ld (Scanlines_album_SP),hl
  40+ 80D3
  41+ 80D3 21 00 00         ld hl,0
  42+ 80D6
  43+ 80D6 DD E5            push ix
  44+ 80D8 3B               dec sp
  45+ 80D9 ED 7A            adc hl,sp
  46+ 80DB D5               push de
  47+ 80DC
  48+ 80DC              ; Recuperamos SP.
  49+ 80DC
  50+ 80DC ED 7B DE 89      ld sp,(Stack)
  51+ 80E0
  52+ 80E0 E5               push hl
  53+ 80E1 F1               pop af
  54+ 80E2 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  55+ 80E3
  56+ 80E3              ; Tenemos el encabezado listo.
  57+ 80E3              ; Preparamos registros para generar los scanlines.
  58+ 80E3
  59+ 80E3 DD E5            push ix
  60+ 80E5 E1               pop hl                                          ; 1er scanline en HL.
  61+ 80E6
  62+ 80E6 ED 5B E4 89      ld de,(Scanlines_album_SP)
  63+ 80EA
  64+ 80EA              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  65+ 80EA              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  66+ 80EA
  67+ 80EA 7C               ld a,h
  68+ 80EB FE 50            cp $50
  69+ 80ED 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  70+ 80EF
  71+ 80EF 20 05            jr nz,2F
  72+ 80F1
  73+ 80F1 7D               ld a,l
  74+ 80F2 FE E0            cp $e0
  75+ 80F4 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  76+ 80F6
  77+ 80F6 7D           2 ld a,l
  78+ 80F7 FE C0            cp $c0
  79+ 80F9 D2 8B 81         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  80+ 80FC
  81+ 80FC              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  82+ 80FC
  83+ 80FC CD DD 90         call NextScan
  84+ 80FF EB               ex de,hl
  85+ 8100
  86+ 8100 73               ld (hl),e
  87+ 8101 2C               inc l
  88+ 8102 72               ld (hl),d
  89+ 8103 2C               inc l
  90+ 8104
  91+ 8104 EB               ex de,hl
  92+ 8105
  93+ 8105 CD DD 90         call NextScan
  94+ 8108 EB               ex de,hl
  95+ 8109
  96+ 8109 73               ld (hl),e
  97+ 810A 2C               inc l
  98+ 810B 72               ld (hl),d
  99+ 810C 2C               inc l
 100+ 810D
 101+ 810D EB               ex de,hl
 102+ 810E
 103+ 810E CD DD 90         call NextScan
 104+ 8111 EB               ex de,hl
 105+ 8112
 106+ 8112 73               ld (hl),e
 107+ 8113 2C               inc l
 108+ 8114 72               ld (hl),d
 109+ 8115 2C               inc l
 110+ 8116
 111+ 8116 EB               ex de,hl
 112+ 8117
 113+ 8117 CD DD 90         call NextScan
 114+ 811A EB               ex de,hl
 115+ 811B
 116+ 811B 73               ld (hl),e
 117+ 811C 2C               inc l
 118+ 811D 72               ld (hl),d
 119+ 811E 2C               inc l
 120+ 811F
 121+ 811F EB               ex de,hl
 122+ 8120
 123+ 8120 CD DD 90         call NextScan
 124+ 8123 EB               ex de,hl
 125+ 8124
 126+ 8124 73               ld (hl),e
 127+ 8125 2C               inc l
 128+ 8126 72               ld (hl),d
 129+ 8127 2C               inc l
 130+ 8128
 131+ 8128 EB               ex de,hl
 132+ 8129
 133+ 8129 CD DD 90         call NextScan
 134+ 812C EB               ex de,hl
 135+ 812D
 136+ 812D 73               ld (hl),e
 137+ 812E 2C               inc l
 138+ 812F 72               ld (hl),d
 139+ 8130 2C               inc l
 140+ 8131
 141+ 8131 EB               ex de,hl
 142+ 8132
 143+ 8132 CD DD 90         call NextScan
 144+ 8135 EB               ex de,hl
 145+ 8136
 146+ 8136 73               ld (hl),e
 147+ 8137 2C               inc l
 148+ 8138 72               ld (hl),d
 149+ 8139 2C               inc l
 150+ 813A
 151+ 813A EB               ex de,hl
 152+ 813B
 153+ 813B CD DD 90         call NextScan
 154+ 813E EB               ex de,hl
 155+ 813F
 156+ 813F 73               ld (hl),e
 157+ 8140 2C               inc l
 158+ 8141 72               ld (hl),d
 159+ 8142 2C               inc l
 160+ 8143
 161+ 8143 EB               ex de,hl
 162+ 8144
 163+ 8144 CD DD 90         call NextScan
 164+ 8147 EB               ex de,hl
 165+ 8148
 166+ 8148 73               ld (hl),e
 167+ 8149 2C               inc l
 168+ 814A 72               ld (hl),d
 169+ 814B 2C               inc l
 170+ 814C
 171+ 814C EB               ex de,hl
 172+ 814D
 173+ 814D CD DD 90         call NextScan
 174+ 8150 EB               ex de,hl
 175+ 8151
 176+ 8151 73               ld (hl),e
 177+ 8152 2C               inc l
 178+ 8153 72               ld (hl),d
 179+ 8154 2C               inc l
 180+ 8155
 181+ 8155 EB               ex de,hl
 182+ 8156
 183+ 8156 CD DD 90         call NextScan
 184+ 8159 EB               ex de,hl
 185+ 815A
 186+ 815A 73               ld (hl),e
 187+ 815B 2C               inc l
 188+ 815C 72               ld (hl),d
 189+ 815D 2C               inc l
 190+ 815E
 191+ 815E EB               ex de,hl
 192+ 815F
 193+ 815F CD DD 90         call NextScan
 194+ 8162 EB               ex de,hl
 195+ 8163
 196+ 8163 73               ld (hl),e
 197+ 8164 2C               inc l
 198+ 8165 72               ld (hl),d
 199+ 8166 2C               inc l
 200+ 8167
 201+ 8167 EB               ex de,hl
 202+ 8168
 203+ 8168 CD DD 90         call NextScan
 204+ 816B EB               ex de,hl
 205+ 816C
 206+ 816C 73               ld (hl),e
 207+ 816D 2C               inc l
 208+ 816E 72               ld (hl),d
 209+ 816F 2C               inc l
 210+ 8170
 211+ 8170 EB               ex de,hl
 212+ 8171
 213+ 8171 CD DD 90         call NextScan
 214+ 8174 EB               ex de,hl
 215+ 8175
 216+ 8175 73               ld (hl),e
 217+ 8176 2C               inc l
 218+ 8177 72               ld (hl),d
 219+ 8178 2C               inc l
 220+ 8179
 221+ 8179 EB               ex de,hl
 222+ 817A
 223+ 817A CD DD 90         call NextScan
 224+ 817D EB               ex de,hl
 225+ 817E
 226+ 817E 73               ld (hl),e
 227+ 817F 2C               inc l
 228+ 8180 72               ld (hl),d
 229+ 8181 2C               inc l
 230+ 8182
 231+ 8182              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 232+ 8182
 233+ 8182 22 E4 89         ld (Scanlines_album_SP),hl
 234+ 8185
 235+ 8185              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 236+ 8185
 237+ 8185 08               ex af,af
 238+ 8186
 239+ 8186 F5               push af
 240+ 8187 E1               pop hl
 241+ 8188
 242+ 8188 36 10            ld (hl),16
 243+ 818A
 244+ 818A C9               ret
 245+ 818B
 246+ 818B              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 247+ 818B
 248+ 818B              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 249+ 818B
 250+ 818B 3E 58            ld a,$58
 251+ 818D 94               sub h
 252+ 818E 47               ld b,a
 253+ 818F
 254+ 818F 3E DF            ld a,$df
 255+ 8191 BD               cp l
 256+ 8192 38 04            jr c,1F
 257+ 8194
 258+ 8194 3E 08            ld a,8
 259+ 8196 80               add b
 260+ 8197 47               ld b,a
 261+ 8198
 262+ 8198              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite. Imprimimos.
 263+ 8198
 264+ 8198 18 FE        1 jr $
 265+ 819A
 266+ 819A
 267+ 819A
 268+ 819A
 269+ 819A
 270+ 819A
 271+ 819A
 272+ 819A
 273+ 819A
 274+ 819A
 275+ 819A
 276+ 819A
 277+ 819A
 278+ 819A
 279+ 819A
 280+ 819A
 281+ 819A
 282+ 819A
 283+ 819A
 284+ 819A              ; -----------------------------------------------------------------------------
 285+ 819A              ;
 286+ 819A              ;   21/11/23
 287+ 819A
 288+ 819A              Limpia_y_reinicia_Scanlines_album
 289+ 819A
 290+ 819A              ;   Limpia Scanlines_album.
 291+ 819A
 292+ 819A 2A E4 89         ld hl,(Scanlines_album_SP)
 293+ 819D 7D               ld a,l
 294+ 819E A7               and a
 295+ 819F C8               ret z   ;   Salimos si el álbum está vacío.
 296+ 81A0
 297+ 81A0 47               ld b,a
 298+ 81A1 04               inc b
 299+ 81A2
 300+ 81A2 36 00        1 ld (hl),0
 301+ 81A4 2D               dec l
 302+ 81A5 10 FB            djnz 1B
 303+ 81A7
 304+ 81A7              ;   Reinicializa (Scanlines_album_SP).
 305+ 81A7
 306+ 81A7 21 00 80         ld hl,Scanlines_album
 307+ 81AA 22 E4 89         ld (Scanlines_album_SP),hl
 308+ 81AD
 309+ 81AD C9               ret
# file closed: Genera_datos_de_impresion.asm
1777  81AE
1778  81AE              	SAVESNA "Pruebas.sna", START
1779  81AE
1780  81AE
1781  81AE
1782  81AE
# file closed: Banco_de_pruebas.asm
