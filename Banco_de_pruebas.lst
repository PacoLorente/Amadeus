# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 2C 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD A4 8E     	call Pinta_entidades
  44  AA1C CD 96 8E     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD C6 8E     	call Guarda_parametros_DRAW
  49  AA26 CD E6 8D     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 3C 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD E9 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD F7 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD F8 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD D2 8E     	call Recupera_parametros_DRAW
  66  AA3F CD B4 8E     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 36 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 2C 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C3 85        	defw Caja_1
 103+ 856E 08 86        	defw Caja_2
 104+ 8570 4D 86        	defw Caja_3
 105+ 8572 92 86        	defw Caja_4
 106+ 8574 D7 86        	defw Caja_5
 107+ 8576 1C 87        	defw Caja_6
 108+ 8578 61 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 148+ 85B0
 149+ 85B0 00           	db 0											; (Autoriza_movimiento).
 150+ 85B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 150+ 85B5 00 00
 151+ 85B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 152+ 85BA
 153+ 85BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 154+ 85BC 00           	db 0											; (Cola_de_desplazamiento).
 155+ 85BD
 156+ 85BD 00           	db 0 											; (Columnas).
 157+ 85BE 00 00        	defw 0											; (Limite_horizontal).
 158+ 85C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 159+ 85C3
 160+ 85C3              ; ---------- ---------- ---------- ---------- ----------
 161+ 85C3
 162+ 85C3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 163+ 85C5 00 00        	defw 0											; (Posicion_actual).
 164+ 85C7 00 00        	defw 0 											; (Puntero_objeto).
 165+ 85C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 166+ 85CC
 167+ 85CC 00           	db %00000000 									; (Attr).
 168+ 85CD
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_der).
 170+ 85CF 00 00        	defw 0											; (Indice_Sprite_izq).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 172+ 85D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 173+ 85D5
 174+ 85D5 00 00        	defw 0											; (Posicion_inicio).
 175+ 85D7 00           	db 0											; (Cuad_objeto).
 176+ 85D8
 177+ 85D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 178+ 85DC
 179+ 85DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 180+ 85DD
 181+ 85DD 00 00 00...  	ds 6											; Variables_de_borrado
 182+ 85E3
 183+ 85E3 00 00        	db 0,0											; Variables_de_pintado
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00        	defw 0											;	" " " " " " "
 186+ 85E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 187+ 85ED
 188+ 85ED 00 00        	defw 0 											; Puntero_de_impresion.
 189+ 85EF
 190+ 85EF D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 191+ 85F1 00 00        	defw 0 											; Contador_de_mov_masticados
 192+ 85F3
 193+ 85F3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 194+ 85F5
 195+ 85F5 00           	db 0											; (Autoriza_movimiento).
 196+ 85F6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 196+ 85FA 00 00
 197+ 85FC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 198+ 85FF
 199+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 200+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 201+ 8602
 202+ 8602 00           	db 0 											; (Columnas).
 203+ 8603 00 00        	defw 0											; (Limite_horizontal).
 204+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 205+ 8608
 206+ 8608              ; ---------- ---------- ---------- ---------- ----------
 207+ 8608
 208+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 209+ 860A 00 00        	defw 0											; (Posicion_actual).
 210+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 211+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 212+ 8611
 213+ 8611 00           	db %00000000 									; (Attr).
 214+ 8612
 215+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 216+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 217+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 218+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 219+ 861A
 220+ 861A 00 00        	defw 0											; (Posicion_inicio).
 221+ 861C 00           	db 0											; (Cuad_objeto).
 222+ 861D
 223+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 224+ 8621
 225+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 226+ 8622
 227+ 8622 00 00 00...  	ds 6											; Variables_de_borrado
 228+ 8628
 229+ 8628 00 00        	db 0,0											; Variables_de_pintado
 230+ 862A 00 00        	defw 0											;	" " " " " " "
 231+ 862C 00 00        	defw 0											;	" " " " " " "
 232+ 862E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 233+ 8632
 234+ 8632 00 00        	defw 0 											; Puntero_de_impresion.
 235+ 8634
 236+ 8634 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 237+ 8636 00 00        	defw 0 											; Contador_de_mov_masticados
 238+ 8638
 239+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 240+ 863A
 241+ 863A 00           	db 0											; (Autoriza_movimiento).
 242+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 242+ 863F 00 00
 243+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 244+ 8644
 245+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 246+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 247+ 8647
 248+ 8647 00           	db 0 											; (Columnas).
 249+ 8648 00 00        	defw 0											; (Limite_horizontal).
 250+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 251+ 864D
 252+ 864D              ; ---------- ---------- ---------- ---------- ----------
 253+ 864D
 254+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 255+ 864F 00 00        	defw 0											; (Posicion_actual).
 256+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 257+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 258+ 8656
 259+ 8656 00           	db %00000000 									; (Attr).
 260+ 8657
 261+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 262+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 263+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 264+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 265+ 865F
 266+ 865F 00 00        	defw 0											; (Posicion_inicio).
 267+ 8661 00           	db 0											; (Cuad_objeto).
 268+ 8662
 269+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 270+ 8666
 271+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 272+ 8667
 273+ 8667 00 00 00...  	ds 6											; Variables_de_borrado
 274+ 866D
 275+ 866D 00 00        	db 0,0											; Variables_de_pintado
 276+ 866F 00 00        	defw 0											;	" " " " " " "
 277+ 8671 00 00        	defw 0											;	" " " " " " "
 278+ 8673 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 279+ 8677
 280+ 8677 00 00        	defw 0 											; Puntero_de_impresion.
 281+ 8679
 282+ 8679 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 283+ 867B 00 00        	defw 0 											; Contador_de_mov_masticados
 284+ 867D
 285+ 867D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 286+ 867F
 287+ 867F 00           	db 0											; (Autoriza_movimiento).
 288+ 8680 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 288+ 8684 00 00
 289+ 8686 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 290+ 8689
 291+ 8689 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 292+ 868B 00           	db 0											; (Cola_de_desplazamiento).
 293+ 868C
 294+ 868C 00           	db 0 											; (Columnas).
 295+ 868D 00 00        	defw 0											; (Limite_horizontal).
 296+ 868F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 297+ 8692
 298+ 8692              ; ---------- ---------- ---------- ---------- ----------
 299+ 8692
 300+ 8692 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 301+ 8694 00 00        	defw 0											; (Posicion_actual).
 302+ 8696 00 00        	defw 0 											; (Puntero_objeto).
 303+ 8698 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 304+ 869B
 305+ 869B 00           	db %00000000 									; (Attr).
 306+ 869C
 307+ 869C 00 00        	defw 0											; (Indice_Sprite_der).
 308+ 869E 00 00        	defw 0											; (Indice_Sprite_izq).
 309+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 310+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 311+ 86A4
 312+ 86A4 00 00        	defw 0											; (Posicion_inicio).
 313+ 86A6 00           	db 0											; (Cuad_objeto).
 314+ 86A7
 315+ 86A7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 316+ 86AB
 317+ 86AB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 318+ 86AC
 319+ 86AC 00 00 00...  	ds 6											; Variables_de_borrado
 320+ 86B2
 321+ 86B2 00 00        	db 0,0											; Variables_de_pintado
 322+ 86B4 00 00        	defw 0											;	" " " " " " "
 323+ 86B6 00 00        	defw 0											;	" " " " " " "
 324+ 86B8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 325+ 86BC
 326+ 86BC 00 00        	defw 0 											; Puntero_de_impresion.
 327+ 86BE
 328+ 86BE D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 329+ 86C0 00 00        	defw 0 											; Contador_de_mov_masticados
 330+ 86C2
 331+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 332+ 86C4
 333+ 86C4 00           	db 0											; (Autoriza_movimiento).
 334+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 334+ 86C9 00 00
 335+ 86CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 336+ 86CE
 337+ 86CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 338+ 86D0 00           	db 0											; (Cola_de_desplazamiento).
 339+ 86D1
 340+ 86D1 00           	db 0 											; (Columnas).
 341+ 86D2 00 00        	defw 0											; (Limite_horizontal).
 342+ 86D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 343+ 86D7
 344+ 86D7              ; ---------- ---------- ---------- ---------- ----------
 345+ 86D7
 346+ 86D7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 347+ 86D9 00 00        	defw 0											; (Posicion_actual).
 348+ 86DB 00 00        	defw 0 											; (Puntero_objeto).
 349+ 86DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 350+ 86E0
 351+ 86E0 00           	db %00000000 									; (Attr).
 352+ 86E1
 353+ 86E1 00 00        	defw 0											; (Indice_Sprite_der).
 354+ 86E3 00 00        	defw 0											; (Indice_Sprite_izq).
 355+ 86E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 356+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 357+ 86E9
 358+ 86E9 00 00        	defw 0											; (Posicion_inicio).
 359+ 86EB 00           	db 0											; (Cuad_objeto).
 360+ 86EC
 361+ 86EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 362+ 86F0
 363+ 86F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 364+ 86F1
 365+ 86F1 00 00 00...  	ds 6											; Variables_de_borrado
 366+ 86F7
 367+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 368+ 86F9 00 00        	defw 0											;	" " " " " " "
 369+ 86FB 00 00        	defw 0											;	" " " " " " "
 370+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 371+ 8701
 372+ 8701 00 00        	defw 0 											; Puntero_de_impresion.
 373+ 8703
 374+ 8703 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 375+ 8705 00 00        	defw 0 											; Contador_de_mov_masticados
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 378+ 8709
 379+ 8709 00           	db 0											; (Autoriza_movimiento).
 380+ 870A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 380+ 870E 00 00
 381+ 8710 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 382+ 8713
 383+ 8713 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 384+ 8715 00           	db 0											; (Cola_de_desplazamiento).
 385+ 8716
 386+ 8716 00           	db 0 											; (Columnas).
 387+ 8717 00 00        	defw 0											; (Limite_horizontal).
 388+ 8719 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 389+ 871C
 390+ 871C              ; ---------- ---------- ---------- ---------- ----------
 391+ 871C
 392+ 871C 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 393+ 871E 00 00        	defw 0											; (Posicion_actual).
 394+ 8720 00 00        	defw 0 											; (Puntero_objeto).
 395+ 8722 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 396+ 8725
 397+ 8725 00           	db %00000000 									; (Attr).
 398+ 8726
 399+ 8726 00 00        	defw 0											; (Indice_Sprite_der).
 400+ 8728 00 00        	defw 0											; (Indice_Sprite_izq).
 401+ 872A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 402+ 872C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 403+ 872E
 404+ 872E 00 00        	defw 0											; (Posicion_inicio).
 405+ 8730 00           	db 0											; (Cuad_objeto).
 406+ 8731
 407+ 8731 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 8735
 409+ 8735 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 410+ 8736
 411+ 8736 00 00 00...  	ds 6											; Variables_de_borrado
 412+ 873C
 413+ 873C 00 00        	db 0,0											; Variables_de_pintado
 414+ 873E 00 00        	defw 0											;	" " " " " " "
 415+ 8740 00 00        	defw 0											;	" " " " " " "
 416+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8746
 418+ 8746 00 00        	defw 0 											; Puntero_de_impresion.
 419+ 8748
 420+ 8748 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 421+ 874A 00 00        	defw 0 											; Contador_de_mov_masticados
 422+ 874C
 423+ 874C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 424+ 874E
 425+ 874E 00           	db 0											; (Autoriza_movimiento).
 426+ 874F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 426+ 8753 00 00
 427+ 8755 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 428+ 8758
 429+ 8758 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 430+ 875A 00           	db 0											; (Cola_de_desplazamiento).
 431+ 875B
 432+ 875B 00           	db 0 											; (Columnas).
 433+ 875C 00 00        	defw 0											; (Limite_horizontal).
 434+ 875E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 8761
 436+ 8761              ; ---------- ---------- ---------- ---------- ----------
 437+ 8761
 438+ 8761 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 439+ 8763 00 00        	defw 0											; (Posicion_actual).
 440+ 8765 00 00        	defw 0 											; (Puntero_objeto).
 441+ 8767 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 442+ 876A
 443+ 876A 00           	db %00000000 									; (Attr).
 444+ 876B
 445+ 876B 00 00        	defw 0											; (Indice_Sprite_der).
 446+ 876D 00 00        	defw 0											; (Indice_Sprite_izq).
 447+ 876F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 448+ 8771 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 449+ 8773
 450+ 8773 00 00        	defw 0											; (Posicion_inicio).
 451+ 8775 00           	db 0											; (Cuad_objeto).
 452+ 8776
 453+ 8776 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 454+ 877A
 455+ 877A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 456+ 877B
 457+ 877B 00 00 00...  	ds 6											; Variables_de_borrado
 458+ 8781
 459+ 8781 00 00        	db 0,0											; Variables_de_pintado
 460+ 8783 00 00        	defw 0											;	" " " " " " "
 461+ 8785 00 00        	defw 0											;	" " " " " " "
 462+ 8787 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 463+ 878B
 464+ 878B 00 00        	defw 0 											; Puntero_de_impresion.
 465+ 878D
 466+ 878D D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 467+ 878F 00 00        	defw 0 											; Contador_de_mov_masticados
 468+ 8791
 469+ 8791 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 470+ 8793
 471+ 8793 00           	db 0											; (Autoriza_movimiento).
 472+ 8794 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 472+ 8798 00 00
 473+ 879A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 474+ 879D
 475+ 879D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 476+ 879F 00           	db 0											; (Cola_de_desplazamiento).
 477+ 87A0
 478+ 87A0 00           	db 0 											; (Columnas).
 479+ 87A1 00 00        	defw 0											; (Limite_horizontal).
 480+ 87A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 481+ 87A6
 482+ 87A6              ; -------------------------------------------------------------------------------------
 483+ 87A6              ;
 484+ 87A6              ;	20/05/23
 485+ 87A6              ;
 486+ 87A6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 487+ 87A6              ;
 488+ 87A6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 489+ 87A6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 490+ 87A6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 491+ 87A6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 492+ 87A6
 493+ 87A6              Indice_de_entidades
 494+ 87A6
 495+ 87A6 AA 87        	defw Entidad_1
 496+ 87A8 BA 87        	defw Entidad_2
 497+ 87AA
 498+ 87AA              ;	BADSAT, (Satélite malvado).
 499+ 87AA
 500+ 87AA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 501+ 87AC 04           	db %00000100									; (Attr).
 502+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 503+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 504+ 87B1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 505+ 87B3 01           	db 1											; (Cuad_objeto).
 506+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 507+ 87B8 9E 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 508+ 87BA
 509+ 87BA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 510+ 87BC 02           	db %00000010									; (Attr).
 511+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 512+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 513+ 87C1 40 50        	defw $5040                                      ; (Posicion_inicio).
 514+ 87C3 01           	db 1											; (Cuad_objeto).
 515+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 516+ 87C8 9E 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 517+ 87CA
# file closed: Cajas_y_disparos.asm
  97  87CA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87CA              ; 13/05/23
   2+ 87CA
   3+ 87CA              Indice_de_niveles
   4+ 87CA
   5+ 87CA D8 87        	defw Nivel_1
   6+ 87CC DA 87        	defw Nivel_2
   7+ 87CE E7 87        	defw Nivel_3
   8+ 87D0 F7 87        	defw Nivel_4
   9+ 87D2 09 88        	defw Nivel_5
  10+ 87D4              ;	...
  11+ 87D4              ;	...
  12+ 87D4              ;	+ Niveles ...
  13+ 87D4
  14+ 87D4 00 00        	defw 0
  15+ 87D6 00 00        	defw 0
  16+ 87D8
  17+ 87D8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87D9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87DA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87DB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87DF 01 02
  21+ 87E1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87E5 01 02
  22+ 87E7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87E8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87EC 01
  24+ 87ED 03 01 01 01  	db 3,1,1,1,1
  24+ 87F1 01
  25+ 87F2 03 01 01 01  	db 3,1,1,1,1
  25+ 87F6 01
  26+ 87F7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87F8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87FC 01
  28+ 87FD 04 01 01 01  	db 4,1,1,1,1
  28+ 8801 01
  29+ 8802 04 01 01 01  	db 4,1,1,1,1
  29+ 8806 01
  30+ 8807 02 03        	db 2,3
  31+ 8809 14           Nivel_5 db 20									; Nº de entidades.
  32+ 880A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 880E 01
  33+ 880F 05 01 01 01  	db 5,1,1,1,1
  33+ 8813 01
  34+ 8814 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8818 01
  35+ 8819 05 01 01 01  	db 5,1,1,1,1
  35+ 881D 01
  36+ 881E
  37+ 881E              ;---------------------------------------------------------------------------------------------------------------
  38+ 881E              ;
  39+ 881E              ;   3/9/23
  40+ 881E              ;
  41+ 881E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 881E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 881E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 881E              ;	_en la caja DRAW correspondiente.
  45+ 881E              ;
  46+ 881E              ;	MODIFICA: HL,DE y A.
  47+ 881E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 881E
  49+ 881E              Inicializa_Punteros_de_nivel
  50+ 881E
  51+ 881E 21 CA 87     	ld hl,Indice_de_niveles
  52+ 8821 22 54 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8824 CD 36 8D     	call Extrae_address
  54+ 8827 7E           	ld a,(hl)
  55+ 8828 32 20 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 882B 23           	inc hl
  57+ 882C 22 56 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 882F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8830
  60+ 8830              ;---------------------------------------------------------------------------------------------------------------
  61+ 8830              ;
  62+ 8830              ;   13/5/23
  63+ 8830              ;
  64+ 8830              ;	Destruye A,BC,HL,DE
  65+ 8830
  66+ 8830              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8830              ;	_del juego.
  68+ 8830
  69+ 8830              Prepara_cajas
  70+ 8830
  71+ 8830              ; Preparamos los punteros de las cajas.
  72+ 8830
  73+ 8830 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8833 CD 36 8D     	call Extrae_address
  75+ 8836 CD 73 88     	call Avanza_caja
  76+ 8839
  77+ 8839 CD B7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 883C
  79+ 883C 2A 56 89     	ld hl,(Datos_de_nivel)
  80+ 883F
  81+ 883F              ; HL está en los datos del nivel correspondiente.
  82+ 883F              ; B actuará como contador de cajas.
  83+ 883F
  84+ 883F C5           1 push bc
  85+ 8840
  86+ 8840 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8841 CD 64 88     	call PreparaBC
  88+ 8844
  89+ 8844 21 A6 87     	ld hl,Indice_de_entidades
  90+ 8847 CD 6C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 884A 22 26 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 884D
  93+ 884D CD 7D 88     	call Datos_de_entidad_a_caja
  94+ 8850
  95+ 8850 2A 1E 89     	ld hl,(Indice_restore_caja)
  96+ 8853 CD 36 8D     	call Extrae_address
  97+ 8856 CD 73 88     	call Avanza_caja
  98+ 8859
  99+ 8859 2A 56 89     	ld hl,(Datos_de_nivel)
 100+ 885C 23           	inc hl
 101+ 885D 22 56 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8860
 103+ 8860 C1           	pop bc
 104+ 8861 10 DC        	djnz 1B
 105+ 8863 C9           	ret
 106+ 8864
 107+ 8864 CB 27        PreparaBC sla a
 108+ 8866 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8868 4F           	ld c,a
 110+ 8869 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 886B C9           	ret
 112+ 886C
 113+ 886C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 886D ED 4A        	adc hl,bc
 115+ 886F CD 36 8D     	call Extrae_address
 116+ 8872 C9           	ret
 117+ 8873
 118+ 8873 22 1A 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8876 13           	inc de
 120+ 8877 13           	inc de
 121+ 8878 EB           	ex de,hl
 122+ 8879 22 1E 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 887C C9           	ret
 124+ 887D
 125+ 887D              Datos_de_entidad_a_caja
 126+ 887D
 127+ 887D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 887D
 129+ 887D
 130+ 887D ED 5B 1A 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8881
 132+ 8881 01 02 00     	ld bc,2
 133+ 8884 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8886
 135+ 8886 01 07 00     	ld bc,7
 136+ 8889 CD B1 88     	call Situa_DE
 137+ 888C
 138+ 888C 01 05 00     	ld bc,5
 139+ 888F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8891
 141+ 8891 01 04 00     	ld bc,4
 142+ 8894 CD B1 88     	call Situa_DE
 143+ 8897
 144+ 8897 01 07 00     	ld bc,7
 145+ 889A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 889C
 147+ 889C 01 18 00     	ld bc,24
 148+ 889F CD B1 88     	call Situa_DE
 149+ 88A2
 150+ 88A2 01 02 00     	ld bc,2
 151+ 88A5 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88A7
 153+ 88A7              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88A7              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88A7
 156+ 88A7 01 0F 00     	ld bc,15									; *****
 157+ 88AA CD B1 88     	call Situa_DE
 158+ 88AD
 159+ 88AD 3E 03        	ld a,3
 160+ 88AF 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88B0
 162+ 88B0 C9           	ret
 163+ 88B1
 164+ 88B1 EB           Situa_DE ex de,hl
 165+ 88B2 A7           	and a
 166+ 88B3 ED 4A        	adc hl,bc
 167+ 88B5 EB           	ex de,hl
 168+ 88B6 C9           	ret
 169+ 88B7
 170+ 88B7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88B7              ;
 172+ 88B7              ;	21/5/23
 173+ 88B7              ;
 174+ 88B7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88B7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88B7              ;
 177+ 88B7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88B7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88B7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88B7              ;
 181+ 88B7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88B7              ;	MODIFICA: A y B.
 183+ 88B7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88B7
 185+ 88B7              Admin_num_entidades
 186+ 88B7
 187+ 88B7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88B7
 189+ 88B7 3A 20 89     	ld a,(Numero_de_entidades)
 190+ 88BA A7           	and a
 191+ 88BB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88BB              ;	jr z,$
 193+ 88BB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88BB
 195+ 88BB 20 03        	jr nz,3F
 196+ 88BD
 197+ 88BD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88BD
 199+ 88BD CD 1E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88C0
 201+ 88C0 3A 20 89     3 ld a,(Numero_de_entidades)
 202+ 88C3 FE 07        	cp 7
 203+ 88C5 38 08        	jr c,1F
 204+ 88C7
 205+ 88C7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88C7              ; Actualizamos variables.
 207+ 88C7
 208+ 88C7 3E 07        	ld a,7
 209+ 88C9 32 21 89     	ld (Numero_parcial_de_entidades),a
 210+ 88CC 47           	ld b,a
 211+ 88CD 18 04        	jr 2F
 212+ 88CF
 213+ 88CF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88CF              ; (Numero_de_entidades)="0".
 215+ 88CF
 216+ 88CF 32 21 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88D2 47           	ld b,a
 218+ 88D3 C9           2 ret
# file closed: Niveles.asm
  98  88D4
  99  88D4              ; ******************************************************************************************************************************************************************************************
 100  88D4              ; Constantes.
 101  88D4              ; ******************************************************************************************************************************************************************************************
 102  88D4              ;
 103  88D4              ; 25/12/23
 104  88D4
 105  88D4              ;
 106  88D4              ; Constantes.
 107  88D4              ;
 108  88D4
 109  88D4              Sprite_vacio equ $f000
 110  88D4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88D4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88D4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88D4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88D4
 115  88D4              Almacen_de_movimientos_masticados_Entidad_1 equ $5cd0	; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88D4              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 117  88D4              ;														; 4799 bytes, 4,8Kb.
 118  88D4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 119  88D4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 120  88D4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 121  88D4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 122  88D4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 123  88D4
 124  88D4              ;														; 55 Bytes.
 125  88D4
 126  88D4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 127  88D4              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 128  88D4
 129  88D4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 130  88D4
 131  88D4              ; ******************************************************************************************************************************************************************************************
 132  88D4              ; Variables.
 133  88D4              ; ******************************************************************************************************************************************************************************************
 134  88D4              ;
 135  88D4              ; 25/12//23
 136  88D4              ;
 137  88D4              ; Variables de DRAW. (Motor principal).
 138  88D4              ;
 139  88D4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 140  88D4
 141  88D4 00           Filas db 0												; Filas. [DRAW]
 142  88D5 00           Columns db 0  											; Nº de columnas. [DRAW]
 143  88D6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 144  88D8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 145  88DA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 146  88DB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 147  88DC
 148  88DC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 149  88DC
 150  88DC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 151  88DD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 152  88DD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 153  88DD 00           Attr db 0												; Atributos de la entidad:
 154  88DE
 155  88DE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 156  88DE              ;
 157  88DE              ;	COLORES: 0 ..... NEGRO
 158  88DE              ;    		 1 ..... AZUL
 159  88DE              ; 			 2 ..... ROJO
 160  88DE              ;			 3 ..... MAGENTA
 161  88DE              ; 			 4 ..... VERDE
 162  88DE              ; 			 5 ..... CIAN
 163  88DE              ;			 6 ..... AMARILLO
 164  88DE              ; 			 7 ..... BLANCO
 165  88DE
 166  88DE 00 00        Indice_Sprite_der defw 0
 167  88E0 00 00        Indice_Sprite_izq defw 0
 168  88E2 00 00        Puntero_DESPLZ_der defw 0
 169  88E4 00 00        Puntero_DESPLZ_izq defw 0
 170  88E6
 171  88E6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 172  88E8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 173  88E9
 174  88E9              ; Variables de objeto. (Características).
 175  88E9
 176  88E9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 177  88EA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 178  88EB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 179  88EC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 180  88ED
 181  88ED 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 182  88EE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 183  88EE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 184  88EE 00 00 00...  Variables_de_borrado ds 6
 185  88F4
 186  88F4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 187  88F6 00 00        	defw 0
 188  88F8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 189  88FA 00 00 00 00  	db 0,0,0,0
 190  88FE
 191  88FE 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 192  8900              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 193  8900
 194  8900 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
 195  8902
 196  8902              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 197  8902              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 198  8902
 199  8902 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 200  8904              ;														; _palabras que componen el "movimiento_masticado".
 201  8904
 202  8904              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 203  8904
 204  8904 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 205  8905              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 206  8905              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 207  8905              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 208  8905              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 209  8905              ;
 210  8905              ; 														DESCRIPCIÖN:
 211  8905              ;
 212  8905              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 213  8905              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 214  8905              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 215  8905              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 216  8905              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 217  8905              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 218  8905              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 219  8905              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 220  8905              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 221  8905              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 222  8905              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 223  8905              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 224  8905              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 225  8905              ;
 226  8905              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 227  8905              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 228  8905              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 229  8905
 230  8905              ; Movimiento. ------------------------------------------------------------------------------------------------------
 231  8905
 232  8905 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 233  8907 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 234  8909 00 00        Puntero_indice_mov_bucle defw 0							;
 235  890B              ;
 236  890B              ;
 237  890B 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 238  890C              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 239  890C              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 240  890C 00           Incrementa_puntero_backup db 0
 241  890D 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 242  890E              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 243  890E 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 244  890F 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 245  8910 00           Cola_de_desplazamiento db 0								; Este byte indica:
 246  8911              ;
 247  8911              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 248  8911              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 249  8911              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 250  8911              ;
 251  8911              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 252  8911              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 253  8911              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 254  8911              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 255  8911              ;
 256  8911              ;														;	"$ff" ..... Bucle infinito de repetición.
 257  8911              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 258  8911              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 259  8911
 260  8911
 261  8911              ; Variables de funcionamiento. [DRAW].
 262  8911
 263  8911 00           Columnas db 0
 264  8912 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 265  8914              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 266  8914 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 267  8915
 268  8915              ; variables de control general.
 269  8915
 270  8915 00           Ctrl_2 db 0
 271  8916              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 272  8916              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 273  8916              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 274  8916              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 275  8916              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 276  8916              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 277  8916              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 278  8916              ;
 279  8916              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 280  8916              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 281  8916              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 282  8916              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 283  8916              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 284  8916              ;														BIT 4, ???
 285  8916              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 286  8916
 287  8916 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 288  8917
 289  8917              ;! 67 Bytes por entidad.
 290  8917
 291  8917              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 292  8917              ;					         		---------;      ;---------
 293  8917
 294  8917
 295  8917              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 296  8917
 297  8917              ;Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 298  8917
 299  8917 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 300  8918
 301  8918              ;														DESCRIPCIÓN:
 302  8918              ;
 303  8918              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 304  8918              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 305  8918              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 306  8918              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 307  8918              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 308  8918              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 309  8918
 310  8918              ;														BIT 3, Recarga de nueva oleada.
 311  8918              ;														BIT 4, Recarga de nueva oleada.
 312  8918              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 313  8918              ;														BIT 6, **** Frame completo.
 314  8918              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 315  8918
 316  8918 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 317  891A              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 318  891A              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 319  891A              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 320  891A
 321  891A              ; Gestión de ENTIDADES y CAJAS.
 322  891A
 323  891A 00 00        Puntero_store_caja defw 0
 324  891C 00 00        Puntero_restore_caja defw 0
 325  891E 00 00        Indice_restore_caja defw 0
 326  8920 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 327  8921 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 328  8922 00           Entidades_en_curso db 0									; ..... ..... .....
 329  8923 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 330  8924              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 331  8924              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 332  8924              ;														; _ (Numero_de_malotes)="0".
 333  8924 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 334  8926 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 335  8928              ;														; _ puntero (Indice_entidades).
 336  8928
 337  8928              ;---------------------------------------------------------------------------------------------------------------
 338  8928              ;
 339  8928              ;	18/11/23
 340  8928              ;
 341  8928              ;	Álbumes.
 342  8928
 343  8928 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 344  892A              ;														; _variable para almacenar lo posición del puntero_
 345  892A              ; 														; _de pila, SP.
 346  892A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 347  892C              ;														; La utiliza la rutina [Extrae_foto_registros].
 348  892C 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 349  892E 00 70        Stack_snapshot defw Album_de_fotos
 350  8930 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 351  8932
 352  8932              ;End_Snapshot defw Album_de_fotos
 353  8932              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 354  8932 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 355  8934              ;														; _el snapshot de los registros del siguiente disparo.
 356  8934              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 357  8934 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 358  8936
 359  8936 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 360  8937              ;
 361  8937              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 362  8937              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 363  8937              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 364  8937              ;																_ no se inicia una nueva "Entidad_guía".
 365  8937              ; Gestión de Disparos.
 366  8937
 367  8937 00           Numero_de_disparotes db 0
 368  8938 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 369  893A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 370  893C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 371  893D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 372  893D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 373  893D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 374  893F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 375  893F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 376  893F              ;														; _produzca colisión.
 377  893F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 378  8941              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 379  8941 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 380  8944              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 381  8944 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 382  8947              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 383  8947 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 384  8948
 385  8948              ;---------------------------------------------------------------------------------------------------------------
 386  8948
 387  8948              ; Relojes y temporizaciones.
 388  8948
 389  8948 00           Contador_de_frames db 0
 390  8949 00           Contador_de_frames_2 db 0
 391  894A
 392  894A 04           Clock_explosion db 4
 393  894B 1E           Clock_Entidades_en_curso db 30
 394  894C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 395  894D              ;														; Repite la oleada de entidades.
 396  894D 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 397  894E 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 398  894F 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 399  8950
 400  8950 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 401  8951 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 402  8952 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 403  8953
 404  8953              ;---------------------------------------------------------------------------------------------------------------
 405  8953
 406  8953              ; Gestión de NIVELES.
 407  8953
 408  8953 00           Nivel db 0												; Nivel actual del juego.
 409  8954 00 00        Puntero_indice_NIVELES defw 0
 410  8956 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 411  8958              ; 														; _ que definen el NIVEL.
 412  8958              ; Y todo comienza aquí .....
 413  8958              ;
 414  8958              ; Rutina principal *************************************************************************************************************************************************************************
 415  8958              ;
 416  8958              ;	16/11/22
 417  8958
 418  8958              START
 419  8958
 420  8958 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 421  895B 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 422  895D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 423  895F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 424  8961 F3           	DI
 425  8962
 426  8962 3E 07        	ld a,%00000111
 427  8964 CD BF 99     	call Cls
 428  8967
 429  8967 CD 0F 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 430  896A
 431  896A              ; INICIALIZACIÓN.
 432  896A
 433  896A CD 1E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 434  896D CD 30 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 435  8970 CD 9E 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 436  8973              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 437  8973
 438  8973 CD BF 8D     	call Restore_entidad								 ; Vuelca en DRAW los parámetros de la 1º entidad, (Caja_1).
 439  8976
 440  8976 21 21 89     	ld hl,Numero_parcial_de_entidades
 441  8979 46           	ld b,(hl)
 442  897A 04           	inc b
 443  897B 05           	dec b
 444  897C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 445  897E
 446  897E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 447  897E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 448  897E              ;	Pintamos el resto de entidades:
 449  897E
 450  897E              ;	INICIA ENTIDADES !!!!!
 451  897E
 452  897E C5           1 push bc  												; Guardo el contador de entidades.
 453  897F CD 9D 8B     	call Inicia_entidad
 454  8982 C1           	pop bc
 455  8983 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 456  8985
 457  8985              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 458  8985              ; (Esto se dá cuando se inicia una nueva oleada).
 459  8985
 460  8985 3A 17 89     	ld a,(Ctrl_1)
 461  8988 CB 5F        	bit 3,a
 462  898A 20 1B        	jr nz,5F											; Loop
 463  898C
 464  898C              ; 	INICIA AMADEUS !!!!!
 465  898C
 466  898C CD E6 8D     3 call Restore_Amadeus
 467  898F CD 3C 8D     	call Inicia_Puntero_objeto
 468  8992 CD B2 93     	call Draw
 469  8995 CD 16 71     	call Guarda_foto_registros
 470  8998 CD 63 8E     	call Guarda_datos_de_borrado_Amadeus
 471  899B
 472  899B 11 7E 85     	ld de,Amadeus_db
 473  899E CD F8 8D     	call Store_Amadeus
 474  89A1
 475  89A1              ; 	INICIA DISPAROS !!!!!
 476  89A1
 477  89A1 CD B4 8C     	call Inicia_Puntero_Disparo_Entidades
 478  89A4 CD BB 8C     	call Inicia_Puntero_Disparo_Amadeus
 479  89A7
 480  89A7              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 481  89A7
 482  89A7 CD 9E 8C     5 call Inicia_punteros_de_cajas
 483  89AA CD BF 8D     	call Restore_entidad
 484  89AD
 485  89AD 3A 17 89     	ld a,(Ctrl_1)
 486  89B0 CB 5F        	bit 3,a
 487  89B2 28 07        	jr z,6F
 488  89B4
 489  89B4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 490  89B4
 491  89B4 21 17 89     	ld hl,Ctrl_1
 492  89B7 CB 9E        	res 3,(hl)
 493  89B9 18 07        	jr Main
 494  89BB
 495  89BB              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 496  89BB
 497  89BB 21 36 89     6 ld hl,Ctrl_3
 498  89BE CB C6        	set 0,(hl)											; Frame completo.
 499  89C0 FB           	ei
 500  89C1 76           	halt
 501  89C2
 502  89C2              ; ------------------------------------
 503  89C2
 504  89C2              Main
 505  89C2              ;
 506  89C2              ;	11/12/23
 507  89C2
 508  89C2              ; Aparece nueva entidad ???
 509  89C2
 510  89C2              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 511  89C2              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 512  89C2              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 513  89C2              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 514  89C2              ;														; _un 2º bloque.
 515  89C2
 516  89C2 3A 4B 89     	ld a,(Clock_Entidades_en_curso)
 517  89C5 47           	ld b,a
 518  89C6 3A 48 89     	ld a,(Contador_de_frames)
 519  89C9 B8           	cp b
 520  89CA 20 18        	jr nz,13F
 521  89CC
 522  89CC              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 523  89CC              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 524  89CC              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 525  89CC              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 526  89CC
 527  89CC              ;	inc a
 528  89CC              ;	cp b
 529  89CC              ;	jr nz,13F
 530  89CC
 531  89CC
 532  89CC              ;23 ld (Contador_de_frames),a
 533  89CC
 534  89CC              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 535  89CC              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 536  89CC
 537  89CC 3A 21 89     21 ld a,(Numero_parcial_de_entidades)
 538  89CF 47           	ld b,a
 539  89D0 3A 22 89     	ld a,(Entidades_en_curso)
 540  89D3 B8           	cp b
 541  89D4 28 0E        	jr z,13F
 542  89D6 30 0C        	jr nc,13F
 543  89D8
 544  89D8              ; --- --- --- --- ---
 545  89D8
 546  89D8 3C           	inc a
 547  89D9 32 22 89     	ld (Entidades_en_curso),a
 548  89DC
 549  89DC              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 550  89DC
 551  89DC 3A 4B 89     	ld a,(Clock_Entidades_en_curso)
 552  89DF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 553  89DF              ;! _ IMPREDECIBLE !!!!
 554  89DF C6 32        	add 50
 555  89E1 32 4B 89     	ld (Clock_Entidades_en_curso),a
 556  89E4
 557  89E4              ; -------------------------------------------------------------------------------------------------------------
 558  89E4
 559  89E4              ; Habilita disparos.
 560  89E4
 561  89E4 21 4D 89     13 ld hl,Disparo_Amadeus
 562  89E7 11 4F 89     	ld de,CLOCK_repone_disparo_Amadeus
 563  89EA CD 8F 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 564  89ED
 565  89ED 21 50 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 566  89F0 11 52 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 567  89F3 CD 8F 9D     	call Habilita_disparos
 568  89F6
 569  89F6              ; COLISIONES.
 570  89F6
 571  89F6 CD B2 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 572  89F9
 573  89F9              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 574  89F9              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 575  89F9              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 576  89F9
 577  89F9 AF           	xor a
 578  89FA 32 3C 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 579  89FD
 580  89FD CD 9E 8C     	call Inicia_punteros_de_cajas
 581  8A00 CD BF 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 582  8A03              ; 														; _ en DRAW.
 583  8A03 3A D4 88     	ld a,(Filas)
 584  8A06 A7           	and a
 585  8A07 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 586  8A09 CD D1 8D     	call Incrementa_punteros_de_cajas
 587  8A0C 18 F2        	jr 12B
 588  8A0E
 589  8A0E              ; ---------------------------------------------------------------------------------------
 590  8A0E
 591  8A0E 3A 21 89     10 ld a,(Numero_parcial_de_entidades)
 592  8A11 47               ld b,a
 593  8A12 A7           	and a
 594  8A13 20 14        	jr nz,11F
 595  8A15
 596  8A15 21 17 89     	ld hl,Ctrl_1
 597  8A18 CB 66        	bit 4,(hl)
 598  8A1A C2 C2 8A     	jp nz,16F
 599  8A1D
 600  8A1D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 601  8A1D
 602  8A1D 21 17 89     	ld hl,Ctrl_1
 603  8A20 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 604  8A22
 605  8A22 3A 48 89     	ld a,(Contador_de_frames)
 606  8A25 3C           	inc a
 607  8A26 32 4C 89     	ld (Activa_recarga_cajas),a
 608  8A29
 609  8A29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 610  8A29
 611  8A29 3A 22 89     11 ld a,(Entidades_en_curso)
 612  8A2C A7           	and a
 613  8A2D CA C2 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 614  8A30 47           	ld b,a												; No hay entidades que gestionar.
 615  8A31
 616  8A31              ; ( Código que ejecutamos con cada entidad: ).
 617  8A31
 618  8A31              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 619  8A31
 620  8A31 C5           15 push bc 												; Nº de entidades en curso.
 621  8A32
 622  8A32              ; Existe "Entidad_guía" ???.
 623  8A32              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 624  8A32
 625  8A32 3A 36 89     	ld a,(Ctrl_3)
 626  8A35 CB 4F        	bit 1,a
 627  8A37 20 11        	jr nz,22F
 628  8A39
 629  8A39              ; Almacén de "Movimientos_masticados" lleno ???
 630  8A39              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 631  8A39              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 632  8A39
 633  8A39 3A 36 89     	ld a,(Ctrl_3)
 634  8A3C CB 57        	bit 2,a
 635  8A3E 20 0A        	jr nz,22F
 636  8A40
 637  8A40              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 638  8A40
 639  8A40 21 15 89     	ld hl,Ctrl_2
 640  8A43 CB EE        	set 5,(hl)
 641  8A45 21 36 89     	ld hl,Ctrl_3
 642  8A48 CB CE        	set 1,(hl)
 643  8A4A
 644  8A4A              ; Impacto ???
 645  8A4A
 646  8A4A 3A ED 88     22 ld a,(Impacto)
 647  8A4D A7           	and a
 648  8A4E 28 31        	jr z,8F
 649  8A50
 650  8A50              ; Hay Impacto en esta entidad.
 651  8A50
 652  8A50 21 4A 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 653  8A53 35           	dec (hl)
 654  8A54 C2 B5 8A     	jp nz,17F
 655  8A57
 656  8A57              ;! Velocidad de la animación de la explosión.
 657  8A57
 658  8A57 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 659  8A59              ;														; _,(velocidad de la explosión).
 660  8A59              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 661  8A59
 662  8A59 CD 83 8E     	call Repone_datos_de_borrado
 663  8A5C CD DC 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 664  8A5F
 665  8A5F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 666  8A5F
 667  8A5F 3A 15 89     	ld a,(Ctrl_2)
 668  8A62 CB 4F        	bit 1,a
 669  8A64 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 670  8A66
 671  8A66              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 672  8A66
 673  8A66 3A DC 88     	ld a,(CTRL_DESPLZ)
 674  8A69 A7           	and a
 675  8A6A 20 08        	jr nz,18F
 676  8A6C
 677  8A6C 21 84 84     	ld hl,Indice_Explosion_2x2-2
 678  8A6F 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 679  8A72 18 06        	jr 19F
 680  8A74
 681  8A74 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 682  8A77 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 683  8A7A
 684  8A7A 21 15 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 685  8A7D CB CE        	set 1,(hl)
 686  8A7F 18 22        	jr 7F
 687  8A81
 688  8A81              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 689  8A81              ; _con las coordenadas de la entidad almacenada en DRAW.
 690  8A81
 691  8A81 3A 17 89     8 ld a,(Ctrl_1)
 692  8A84 CB 57        	bit 2,a
 693  8A86 28 1B        	jr z,7F
 694  8A88
 695  8A88 2A 3F 89     	ld hl,(Coordenadas_disparo_certero)
 696  8A8B EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 697  8A8C              ;														; E contiene la coordenada_X del disparo.
 698  8A8C 2A DA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 699  8A8F              ;														; H FILA, (Coordenada_y de la entidad).
 700  8A8F A7           	and a
 701  8A90 ED 52        	sbc hl,de
 702  8A92
 703  8A92 CD CB 92     	call Determina_resultado_comparativa
 704  8A95
 705  8A95 78           	ld a,b
 706  8A96 A7           	and a
 707  8A97 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 708  8A99
 709  8A99              ; ----- ----- -----
 710  8A99
 711  8A99 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 712  8A9B 32 ED 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 713  8A9E
 714  8A9E 21 17 89     	ld hl,Ctrl_1
 715  8AA1 CB 96        	res 2,(hl)
 716  8AA3
 717  8AA3 CD 13 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 718  8AA6
 719  8AA6 3A 04 89     	ld a,(Ctrl_0)
 720  8AA9 CB 67        	bit 4,a
 721  8AAB 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 722  8AAD
 723  8AAD              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 724  8AAD              ; [[[
 725  8AAD              ;	call Detecta_disparo_entidad
 726  8AAD              ; ]]]
 727  8AAD
 728  8AAD CD 0F 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 729  8AB0
 730  8AB0 21 04 89     	ld hl,Ctrl_0
 731  8AB3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 732  8AB5
 733  8AB5 CD 84 8D     17 call Store_Restore_cajas
 734  8AB8
 735  8AB8 C1           	pop bc
 736  8AB9
 737  8AB9 05           	dec b
 738  8ABA C2 31 8A     	jp nz,15B
 739  8ABD
 740  8ABD              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 741  8ABD              ; Hemos gestionado todas las unidades.
 742  8ABD              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 743  8ABD
 744  8ABD 21 17 89     	ld hl,Ctrl_1
 745  8AC0 CB 96        	res 2,(hl)
 746  8AC2
 747  8AC2 21 36 89     16 ld hl,Ctrl_3
 748  8AC5 CB C6        	set 0,(hl)											; Frame completo.
 749  8AC7 AF           	xor a
 750  8AC8 D3 FE        	out ($fe),a
 751  8ACA FB           	ei
 752  8ACB 76           	halt
 753  8ACC
 754  8ACC              ; ----------------------------------------
 755  8ACC
 756  8ACC 3A 17 89     	ld a,(Ctrl_1) 										; Existe Loop?
 757  8ACF CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 758  8AD1 CA C2 89     	jp z,Main
 759  8AD4
 760  8AD4              ; RECARGA DE NUEVA OLEADA.
 761  8AD4
 762  8AD4 3A 48 89     	ld a,(Contador_de_frames)
 763  8AD7 47           	ld b,a
 764  8AD8 3A 4C 89     	ld a,(Activa_recarga_cajas)
 765  8ADB B8           	cp b
 766  8ADC 28 08        	jr z,20F
 767  8ADE
 768  8ADE 21 17 89     	ld hl,Ctrl_1
 769  8AE1 CB E6        	set 4,(hl)
 770  8AE3 C3 C2 89     	jp Main
 771  8AE6
 772  8AE6 21 17 89     20 ld hl,Ctrl_1
 773  8AE9 CB A6        	res 4,(hl)
 774  8AEB
 775  8AEB 3A 48 89     	ld a,(Contador_de_frames)
 776  8AEE
 777  8AEE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 778  8AEE              ;! _ IMPREDECIBLE !!!!
 779  8AEE
 780  8AEE C6 0A        	add 10
 781  8AF0 32 4B 89     	ld (Clock_Entidades_en_curso),a
 782  8AF3
 783  8AF3 C3 6D 89     	jp 4B
 784  8AF6
 785  8AF6 C9           	ret
 786  8AF7
 787  8AF7              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 788  8AF7              ;
 789  8AF7              ;	16/11/23
 790  8AF7
 791  8AF7              Gestiona_Amadeus
 792  8AF7
 793  8AF7              ;! Activa/desactiva impacto con Amadeus.
 794  8AF7
 795  8AF7              ;	ld a,(Impacto)
 796  8AF7              ;	and a
 797  8AF7              ;	jr nz,2F
 798  8AF7
 799  8AF7 CD 8A 8B     	call Mov_Amadeus
 800  8AFA
 801  8AFA 3A 04 89     2 ld a,(Ctrl_0)
 802  8AFD CB 67        	bit 4,a
 803  8AFF 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 804  8B01
 805  8B01 CD 0F 8C     	call Guarda_foto_entidad_a_pintar
 806  8B04 CD 63 8E     	call Guarda_datos_de_borrado_Amadeus
 807  8B07
 808  8B07 21 04 89     1 ld hl,Ctrl_0
 809  8B0A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 810  8B0C
 811  8B0C CD 56 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 812  8B0F
 813  8B0F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 814  8B0F
 815  8B0F CD 1E 8D     	call Calcula_numero_de_disparotes
 816  8B12
 817  8B12 C9           	ret
 818  8B13
 819  8B13              ; --------------------------------------------------------------------------------------------------------------
 820  8B13              ;
 821  8B13              ;	15/12/23
 822  8B13
 823  8B13              Mov_obj
 824  8B13
 825  8B13 3A 15 89     	ld a,(Ctrl_2)
 826  8B16 CB 4F        	bit 1,a
 827  8B18 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 828  8B1A
 829  8B1A              ; Explosión:
 830  8B1A
 831  8B1A 3A 16 89     	ld a,(Frames_explosion)
 832  8B1D A7           	and a
 833  8B1E 20 1D        	jr nz,4F
 834  8B20
 835  8B20              ; Una alimaña menos!!!!!!!!!1
 836  8B20
 837  8B20              ; Se trataba de una Entidad_guía ???
 838  8B20
 839  8B20 3A 15 89     	ld a,(Ctrl_2)
 840  8B23 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 841  8B25 28 05        	jr z,5F
 842  8B27
 843  8B27 21 36 89     	ld hl,Ctrl_3
 844  8B2A CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 845  8B2C
 846  8B2C CD 01 8E     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 847  8B2F 21 21 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 848  8B32 35           	dec (hl)
 849  8B33 21 22 89     	ld hl,Entidades_en_curso
 850  8B36 35           	dec (hl)
 851  8B37 21 20 89     	ld hl,Numero_de_entidades
 852  8B3A 35           	dec (hl)
 853  8B3B 18 4C        	jr 3F
 854  8B3D
 855  8B3D              ; -----
 856  8B3D
 857  8B3D              ;	`Movemos´ la explosión.
 858  8B3D
 859  8B3D 2A E2 88     4 ld hl,(Puntero_DESPLZ_der)
 860  8B40 23           	inc hl
 861  8B41 23           	inc hl
 862  8B42 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 863  8B45 CD 36 8D     	call Extrae_address
 864  8B48 22 D8 88     	ld (Puntero_objeto),hl
 865  8B4B
 866  8B4B 21 16 89     	ld hl,Frames_explosion
 867  8B4E 35           	dec (hl)
 868  8B4F
 869  8B4F 21 04 89     	ld hl,Ctrl_0
 870  8B52 CB E6        	set 4,(hl)
 871  8B54
 872  8B54 18 33        	jr 3F
 873  8B56
 874  8B56              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 875  8B56
 876  8B56 AF           2 xor a
 877  8B57 32 04 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 878  8B5A
 879  8B5A              ; Movemos Entidades malignas.
 880  8B5A              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 881  8B5A
 882  8B5A 3A 15 89     	ld a,(Ctrl_2)
 883  8B5D CB 6F        	bit 5,a
 884  8B5F 20 07        	jr nz,8F
 885  8B61
 886  8B61 21 04 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 887  8B64 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 888  8B66 18 09        	jr 7F
 889  8B68
 890  8B68 CD 3A 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 891  8B6B
 892  8B6B 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 893  8B6E CB 67        	bit 4,a
 894  8B70 C8           	ret z
 895  8B71
 896  8B71              ; Ha habido desplazamiento de la entidad maligna.
 897  8B71              ; Ha llegado a zona de AMADEUS ???
 898  8B71
 899  8B71 3A DB 88     7 ld a,(Coordenada_y)
 900  8B74 FE 14        	cp $14
 901  8B76 38 08        	jr c,1F
 902  8B78
 903  8B78              ; ---------
 904  8B78
 905  8B78              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 906  8B78              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 907  8B78
 908  8B78 F3           	di
 909  8B79 CD 7B 90     	call Genera_coordenadas_X
 910  8B7C CD B7 90     	call Compara_coordenadas_X
 911  8B7F FB           	ei
 912  8B80
 913  8B80              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 914  8B80
 915  8B80              ; ---------
 916  8B80
 917  8B80 CD 86 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 918  8B83 CD 83 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 919  8B86 CD DC 8C     	call Limpia_Variables_de_borrado
 920  8B89
 921  8B89 C9           3 ret
 922  8B8A
 923  8B8A              ; --------------------------------------------------------------------------------------------------------------
 924  8B8A              ;
 925  8B8A              ;	29/1/23
 926  8B8A
 927  8B8A              Mov_Amadeus
 928  8B8A
 929  8B8A CD 23 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 930  8B8D
 931  8B8D 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 932  8B90 CB 67        	bit 4,a
 933  8B92 C8           	ret z
 934  8B93
 935  8B93              ; ---------
 936  8B93
 937  8B93 CD 86 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 938  8B96 CD 73 8E     	call Repone_datos_de_borrado_Amadeus
 939  8B99 CD DC 8C     	call Limpia_Variables_de_borrado
 940  8B9C
 941  8B9C C9           	ret
 942  8B9D
 943  8B9D              ; -----------------------------------------------------------------------------------
 944  8B9D              ;
 945  8B9D              ;	12/12/23
 946  8B9D              ;
 947  8B9D              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 948  8B9D
 949  8B9D              Inicia_entidad
 950  8B9D
 951  8B9D CD E1 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 952  8BA0 CD 3C 8D     	call Inicia_Puntero_objeto
 953  8BA3 CD D3 99     	call Recompone_posicion_inicio
 954  8BA6 CD B2 93     	call Draw
 955  8BA9 CD B4 8B     	call Guarda_movimiento_masticado
 956  8BAC CD 16 71     	call Guarda_foto_registros
 957  8BAF F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 958  8BB0              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 959  8BB0              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 960  8BB0 CD 84 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 961  8BB3 C9           	ret
 962  8BB4
 963  8BB4
 964  8BB4              ; -----------------------------------------------------------------------------------
 965  8BB4              ;
 966  8BB4              ;	21/12/23
 967  8BB4              ;
 968  8BB4              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 969  8BB4              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 970  8BB4
 971  8BB4 3A 15 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 972  8BB7 CB 6F        	bit 5,a
 973  8BB9 C8           	ret z 												; Salimos si NO se trata de una entidad guía.
 974  8BBA
 975  8BBA ED 73 28 89  	ld (Stack),sp
 976  8BBE ED 7B 00 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)		; Guardamos el movimiento masticado en el almacén.
 977  8BC2
 978  8BC2 E5           	push hl
 979  8BC3 DD E5            push ix
 980  8BC5 FD E5            push iy
 981  8BC7
 982  8BC7 ED 7B 28 89      ld sp,(Stack)
 983  8BCB
 984  8BCB E5               push hl
 985  8BCC
 986  8BCC 2A 02 89        	ld hl,(Contador_de_mov_masticados)					; Incrementa en una unidad el (Contador_de_mov_masticados).
 987  8BCF 23           	inc hl
 988  8BD0 22 02 89     	ld (Contador_de_mov_masticados),hl
 989  8BD3
 990  8BD3 E1           	pop hl
 991  8BD4
 992  8BD4              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
 993  8BD4              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
 994  8BD4
 995  8BD4 3A 36 89     	ld a,(Ctrl_3)
 996  8BD7 CB 5F        	bit 3,a
 997  8BD9
 998  8BD9              ;! Debugggg
 999  8BD9 F3           	di
1000  8BDA 20 FE        	jr nz,$
1001  8BDC FB           	ei
1002  8BDD
1003  8BDD              ;! Tengo k convertir la entidad_guía en entidad_fantasma. Reinicializar el (Contador_de_mov_masticados) a "0". Poner el (Puntero_de_almacen_de_mov_masticados) al principio del almacén...
1004  8BDD
1005  8BDD CD F8 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados ; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1006  8BE0              ;														; _ el (Contador_de_mov_masticados).
1007  8BE0 C9               ret
1008  8BE1
1009  8BE1              ; --------------------------------------------------------------------------------------------------------------
1010  8BE1              ;
1011  8BE1              ;	12/12/23
1012  8BE1              ;
1013  8BE1
1014  8BE1              Inicia_entidad_guia
1015  8BE1
1016  8BE1              ; Existe "Entidad_guía" ???
1017  8BE1
1018  8BE1 3A 36 89     	ld a,(Ctrl_3)
1019  8BE4 CB 4F        	bit 1,a
1020  8BE6 C0           	ret nz
1021  8BE7
1022  8BE7              ; Inicia Entidad_guía:
1023  8BE7
1024  8BE7 21 15 89     	ld hl,Ctrl_2
1025  8BEA CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1026  8BEC 21 36 89     	ld hl,Ctrl_3
1027  8BEF CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1028  8BF1
1029  8BF1 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1+6
1030  8BF4 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1031  8BF7
1032  8BF7 C9           	ret
1033  8BF8
1034  8BF8              ; --------------------------------------------------------------------------------------------------------------
1035  8BF8              ;
1036  8BF8              ;	21/12/23
1037  8BF8              ;
1038  8BF8
1039  8BF8              Actualiza_Puntero_de_almacen_de_mov_masticados
1040  8BF8
1041  8BF8              ;	Entidad_guía ???
1042  8BF8
1043  8BF8 3A 15 89     	ld a,(Ctrl_2)
1044  8BFB CB 6F        	bit 5,a
1045  8BFD C8           	ret z												; Salimos si NO se trata de una entidad guía.
1046  8BFE
1047  8BFE E5           	push hl
1048  8BFF C5           	push bc
1049  8C00
1050  8C00 2A 00 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1051  8C03 01 06 00     	ld bc,6
1052  8C06 A7           	and a
1053  8C07 ED 4A        	adc hl,bc
1054  8C09 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1055  8C0C
1056  8C0C C1           	pop bc
1057  8C0D E1           	pop hl
1058  8C0E
1059  8C0E C9           	ret
1060  8C0F
1061  8C0F              ; --------------------------------------------------------------------------------------------------------------
1062  8C0F              ;
1063  8C0F              ;	28/12/23
1064  8C0F              ;
1065  8C0F              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1066  8C0F              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1067  8C0F
1068  8C0F              Guarda_foto_entidad_a_pintar
1069  8C0F
1070  8C0F              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
1071  8C0F
1072  8C0F 3A 04 89     	ld a,(Ctrl_0)
1073  8C12 CB 77        	bit 6,a
1074  8C14 28 07        	jr z,5F
1075  8C16
1076  8C16              ; Guarda la foto de Amadeus.
1077  8C16
1078  8C16 CD B2 93     	call Draw
1079  8C19 CD 16 71     	call Guarda_foto_registros
1080  8C1C
1081  8C1C C9           	ret
1082  8C1D
1083  8C1D              ; ENTIDADES!
1084  8C1D              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1085  8C1D
1086  8C1D 3A 36 89     5 ld a,(Ctrl_3)
1087  8C20 CB 5F        	bit 3,a
1088  8C22 28 04        	jr z,1F
1089  8C24
1090  8C24              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1091  8C24
1092  8C24 CD 50 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1093  8C27 C9           	ret
1094  8C28
1095  8C28              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1096  8C28
1097  8C28 3A 36 89     1 ld a,(Ctrl_3)
1098  8C2B CB 57        	bit 2,a
1099  8C2D 20 10        	jr nz,6F
1100  8C2F
1101  8C2F              ; Entidad guía o fantasma ???
1102  8C2F
1103  8C2F 3A 15 89     	ld a,(Ctrl_2)
1104  8C32 CB 6F        	bit 5,a
1105  8C34 20 10        	jr nz,3F
1106  8C36
1107  8C36              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1108  8C36
1109  8C36 18 EC        	jr 4B
1110  8C38
1111  8C38              ; ENTIDAD_GUÍA:
1112  8C38              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1113  8C38              ; _guardando "movimientos_masticados".
1114  8C38
1115  8C38 3A 36 89     2 ld a,(Ctrl_3)
1116  8C3B CB 57        	bit 2,a
1117  8C3D 28 07        	jr z,3F
1118  8C3F
1119  8C3F              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1120  8C3F              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1121  8C3F
1122  8C3F CB 97        6 res 2,a
1123  8C41 CB DF        	set 3,a
1124  8C43 32 36 89     	ld (Ctrl_3),a
1125  8C46
1126  8C46 CD B2 93     3 call Draw
1127  8C49 CD B4 8B     	call Guarda_movimiento_masticado
1128  8C4C CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1129  8C4F
1130  8C4F C9           	ret
1131  8C50
1132  8C50              ; --------------------------------------------------------------------------------------------------------------
1133  8C50              ;
1134  8C50              ;	21/12/23
1135  8C50              ;
1136  8C50              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1137  8C50              ;
1138  8C50              ;		IY contiene (Puntero_objeto).
1139  8C50              ;		IX contiene el puntero de impresión.
1140  8C50              ;		HL contiene la dirección de la rutina de impresión.
1141  8C50              ;
1142  8C50              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1143  8C50              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1144  8C50              ;	Decrementa el (Contador_de_mov_masticados)
1145  8C50              ;
1146  8C50              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1147  8C50              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1148  8C50              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1149  8C50
1150  8C50
1151  8C50 ED 73 28 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1152  8C54 ED 7B 00 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1153  8C58
1154  8C58 FD E1        	pop iy
1155  8C5A DD E1        	pop ix
1156  8C5C E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1157  8C5D
1158  8C5D ED 73 00 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1159  8C61 ED 7B 28 89  	ld sp,(Stack)
1160  8C65
1161  8C65 CD 16 71     	call Guarda_foto_registros
1162  8C68
1163  8C68 E5           	push hl
1164  8C69
1165  8C69 2A 02 89     	ld hl,(Contador_de_mov_masticados)
1166  8C6C 2B           	dec hl
1167  8C6D 22 02 89     	ld (Contador_de_mov_masticados),hl 							; Decrementamos (Contador_de_mov_masticados). Ha llegado a "0" ?.
1168  8C70
1169  8C70              ; "0" ??
1170  8C70
1171  8C70 24           	inc h
1172  8C71 25           	dec h
1173  8C72 20 10        	jr nz,1F
1174  8C74 2C           	inc l
1175  8C75 2D           	dec l
1176  8C76 20 0C        	jr nz,1F
1177  8C78
1178  8C78              ; El (Contador_de_mov_masticados) a llegado a "0". Situamos el (Puntero_de_almacen_de_mov_masticados) al principio del almacén.
1179  8C78              ; Reinicializamos (Contador_de_mov_masticados).
1180  8C78
1181  8C78 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1182  8C7B 22 00 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1183  8C7E
1184  8C7E 21 20 03     	ld hl,$0320
1185  8C81 22 02 89     	ld (Contador_de_mov_masticados),hl
1186  8C84
1187  8C84              ;	di
1188  8C84              ;	jr $
1189  8C84              ;	ei
1190  8C84
1191  8C84 E1           1 pop hl
1192  8C85
1193  8C85 C9           	ret
1194  8C86
1195  8C86              ; --------------------------------------------------------------------------------------------------------------
1196  8C86              ;
1197  8C86              ;	19/9/23
1198  8C86
1199  8C86 21 D4 88     Prepara_var_pintado ld hl,Filas
1200  8C89 11 F4 88     	ld de,Variables_de_pintado
1201  8C8C 01 08 00     	ld bc,8
1202  8C8F ED B0        	ldir
1203  8C91 C9           	ret
1204  8C92
1205  8C92              ; --------------------------------------------------------------------------------------------------------------
1206  8C92
1207  8C92 21 F4 88     Repone_pintar ld hl,Variables_de_pintado
1208  8C95 11 D4 88     	ld de,Filas
1209  8C98 01 08 00     	ld bc,8
1210  8C9B ED B0        	ldir
1211  8C9D C9           	ret
1212  8C9E
1213  8C9E              ; *************************************************************************************************************************************************************
1214  8C9E              ;
1215  8C9E              ; 8/1/23
1216  8C9E              ;
1217  8C9E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1218  8C9E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1219  8C9E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1220  8C9E
1221  8C9E              ; Destruye HL y DE !!!!!
1222  8C9E
1223  8C9E              Inicia_punteros_de_cajas
1224  8C9E
1225  8C9E 21 6C 85     	ld hl,Indice_de_cajas
1226  8CA1 CD 36 8D         call Extrae_address
1227  8CA4 22 1A 89         ld (Puntero_store_caja),hl
1228  8CA7 21 6E 85     	ld hl,Indice_de_cajas+2
1229  8CAA 22 1E 89     	ld (Indice_restore_caja),hl
1230  8CAD CD 36 8D     	call Extrae_address
1231  8CB0 22 1C 89     	ld (Puntero_restore_caja),hl
1232  8CB3 C9               ret
1233  8CB4
1234  8CB4              ; *************************************************************************************************************************************************************
1235  8CB4              ;
1236  8CB4              ; 8/1/23
1237  8CB4              ;
1238  8CB4              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1239  8CB4
1240  8CB4 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1241  8CB7 22 38 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1242  8CBA C9           	ret
1243  8CBB 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1244  8CBE 22 3A 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1245  8CC1 C9           	ret
1246  8CC2
1247  8CC2              ; -------------------------------------------------------------------------------------------------------------
1248  8CC2              ;
1249  8CC2              ; 21/9/23
1250  8CC2              ;
1251  8CC2
1252  8CC2              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1253  8CC2
1254  8CC2              Limpia_album_Amadeus
1255  8CC2
1256  8CC2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1257  8CC5 7E           	ld a,(hl)
1258  8CC6 A7           	and a
1259  8CC7 C8           	ret z
1260  8CC8
1261  8CC8 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1262  8CCB 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1263  8CCE 01 0B 00     	ld bc,11
1264  8CD1 AF           	xor a
1265  8CD2 77           	ld (hl),a
1266  8CD3 ED B0        	ldir
1267  8CD5
1268  8CD5 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1269  8CD8 22 34 89     	ld (End_Snapshot_Amadeus),hl
1270  8CDB
1271  8CDB C9           	ret
1272  8CDC
1273  8CDC 21 EE 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1274  8CDF 11 EF 88     	ld de,Variables_de_borrado+1
1275  8CE2 01 05 00     	ld bc,5
1276  8CE5 AF           	xor a
1277  8CE6 77           	ld (hl),a
1278  8CE7 ED B0        	ldir
1279  8CE9 C9           	ret
1280  8CEA
1281  8CEA              ; -------------------------------------------------------------------------------------------------------------
1282  8CEA              ;
1283  8CEA              ; 8/9/23
1284  8CEA              ;
1285  8CEA
1286  8CEA              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1287  8CEA              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1288  8CEA
1289  8CEA              Calcula_numero_de_malotes
1290  8CEA
1291  8CEA 21 00 70     	ld hl,Album_de_fotos
1292  8CED EB           	ex de,hl
1293  8CEE 2A 2E 89     	ld hl,(Stack_snapshot)
1294  8CF1
1295  8CF1 06 00        	ld b,0
1296  8CF3 7D           	ld a,l
1297  8CF4 93           	sub e
1298  8CF5 28 07        	jr z,1F
1299  8CF7
1300  8CF7              ; Nº de malotes no es "0".
1301  8CF7
1302  8CF7 D6 06        2 sub 6
1303  8CF9 04           	inc b
1304  8CFA A7           	and a
1305  8CFB 20 FA        	jr nz,2B
1306  8CFD 78           	ld a,b
1307  8CFE
1308  8CFE 32 23 89     1 ld (Numero_de_malotes),a
1309  8D01 C9           	ret
1310  8D02
1311  8D02              ; -------------------------------------------------------------------------------------------------------------
1312  8D02              ;
1313  8D02              ; 8/9/23
1314  8D02              ;
1315  8D02
1316  8D02              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1317  8D02              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1318  8D02
1319  8D02              Calcula_malotes_Amadeus
1320  8D02
1321  8D02 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1322  8D05 EB           	ex de,hl
1323  8D06 2A 34 89     	ld hl,(End_Snapshot_Amadeus)
1324  8D09
1325  8D09 7C           	ld a,h
1326  8D0A A7           	and a
1327  8D0B 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1328  8D0D
1329  8D0D 06 00        	ld b,0
1330  8D0F 7D           	ld a,l
1331  8D10 93           	sub e
1332  8D11 28 07        	jr z,1F
1333  8D13
1334  8D13              ; Nº de malotes no es "0".
1335  8D13
1336  8D13 D6 06        2 sub 6
1337  8D15 04           	inc b
1338  8D16 A7           	and a
1339  8D17 20 FA        	jr nz,2B
1340  8D19 78           	ld a,b
1341  8D1A
1342  8D1A 32 23 89     1 ld (Numero_de_malotes),a
1343  8D1D C9           	ret
1344  8D1E
1345  8D1E              ; -------------------------------------------------------------------------------------------------------------
1346  8D1E              ;
1347  8D1E              ; 28/2/23
1348  8D1E              ;
1349  8D1E
1350  8D1E              Calcula_numero_de_disparotes
1351  8D1E
1352  8D1E 21 56 70     	ld hl,Album_de_fotos_disparos
1353  8D21 EB           	ex de,hl
1354  8D22 2A 32 89     	ld hl,(End_Snapshot_disparos)
1355  8D25
1356  8D25 06 00        	ld b,0
1357  8D27 7D           	ld a,l
1358  8D28 93           	sub e
1359  8D29 28 07        	jr z,1F
1360  8D2B
1361  8D2B              ; Nº de malotes no es "0".
1362  8D2B
1363  8D2B D6 06        2 sub 6
1364  8D2D 04           	inc b
1365  8D2E A7           	and a
1366  8D2F 20 FA        	jr nz,2B
1367  8D31 78           	ld a,b
1368  8D32
1369  8D32 32 37 89     1 ld (Numero_de_disparotes),a
1370  8D35 C9           	ret
1371  8D36
1372  8D36              ; *************************************************************************************************************************************************************
1373  8D36              ;
1374  8D36              ; 20/10/22
1375  8D36              ;
1376  8D36              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1377  8D36              ;
1378  8D36              ; Destruye el puntero y DE !!!!!
1379  8D36
1380  8D36 5E           Extrae_address ld e,(hl)
1381  8D37 23           	inc hl
1382  8D38 56           	ld d,(hl)
1383  8D39 2B           	dec hl
1384  8D3A EB           	ex de,hl
1385  8D3B C9           	ret
1386  8D3C
1387  8D3C              ; *************************************************************************************************************************************************************
1388  8D3C              ;
1389  8D3C              ;	7/2/23
1390  8D3C              ;
1391  8D3C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1392  8D3C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1393  8D3C              ;
1394  8D3C              ;   Destruye HL y BC !!!!!,
1395  8D3C              ;
1396  8D3C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1397  8D3C              ;					"0" ..... Izquierda.
1398  8D3C
1399  8D3C              Inicia_Puntero_objeto
1400  8D3C
1401  8D3C 3A E8 88     	ld a,(Cuad_objeto)
1402  8D3F E6 01        	and 1
1403  8D41 F5           	push af
1404  8D42 CC 60 8D     	call z,Inicia_puntero_objeto_izq
1405  8D45 F1           	pop af
1406  8D46 28 2B        	jr z,1F
1407  8D48 CD 4D 8D     	call Inicia_puntero_objeto_der
1408  8D4B 18 26        	jr 1F
1409  8D4D
1410  8D4D              ; Arrancamos desde la parte izquierda de la pantalla.
1411  8D4D              ; Iniciamos (Indice_Sprite_der).
1412  8D4D
1413  8D4D 2A DE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1414  8D50 22 E2 88     	ld (Puntero_DESPLZ_der),hl
1415  8D53 CD 36 8D     	call Extrae_address
1416  8D56 22 D8 88     	ld (Puntero_objeto),hl
1417  8D59
1418  8D59 2A E0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1419  8D5C 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
1420  8D5F C9           	ret
1421  8D60
1422  8D60              ; Arrancamos desde la parte derecha de la pantalla.
1423  8D60              ; Iniciamos (Indice_Sprite_izq).
1424  8D60
1425  8D60 2A E0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1426  8D63 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
1427  8D66 CD 36 8D     	call Extrae_address
1428  8D69 22 D8 88     	ld (Puntero_objeto),hl
1429  8D6C
1430  8D6C 2A DE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1431  8D6F 22 E2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1432  8D72 C9           	ret
1433  8D73
1434  8D73              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1435  8D73
1436  8D73 21 40 83     1 ld hl,Amadeus
1437  8D76 ED 4B D8 88  	ld bc,(Puntero_objeto)
1438  8D7A B7 ED 42     	sub hl,bc
1439  8D7D C0           	ret nz
1440  8D7E 21 04 89     	ld hl,Ctrl_0
1441  8D81 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1442  8D83 C9           	ret 												; _de nuestra nave en los extremos.
1443  8D84
1444  8D84              ; *************************************************************************************************************************************************************
1445  8D84              ;
1446  8D84              ;	21/12/23
1447  8D84              ;
1448  8D84              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1449  8D84              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1450  8D84
1451  8D84              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1452  8D84              ;	_de la 2ª y 3ª entidad respectivamente.
1453  8D84
1454  8D84              Store_Restore_cajas
1455  8D84
1456  8D84 E5           	push hl
1457  8D85 D5           	push de
1458  8D86 C5            	push bc
1459  8D87
1460  8D87              ;	STORE !!!!!
1461  8D87              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1462  8D87
1463  8D87 21 D4 88     	ld hl,Filas
1464  8D8A ED 5B 1A 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1465  8D8E 01 43 00     	ld bc,67
1466  8D91 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1467  8D93
1468  8D93              ; 	Entidad_sospechosa. 20/4/23
1469  8D93
1470  8D93 3A ED 88     	ld a,(Impacto)
1471  8D96 A7           	and a
1472  8D97 28 0C        	jr z,1F
1473  8D99
1474  8D99 2A 1A 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1475  8D9C 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1476  8D9F A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1477  8DA0 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1478  8DA2 22 3D 89     	ld (Entidad_sospechosa_de_colision),hl
1479  8DA5
1480  8DA5              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1481  8DA5
1482  8DA5 2A 1C 89     1 ld hl,(Puntero_restore_caja)
1483  8DA8 7E           	ld a,(hl)
1484  8DA9 A7           	and a
1485  8DAA F5           	push af
1486  8DAB 28 08        	jr z,2F
1487  8DAD
1488  8DAD 11 D4 88     	ld de,Filas
1489  8DB0 01 43 00     	ld bc,67
1490  8DB3 ED B0        	ldir
1491  8DB5
1492  8DB5 CD D1 8D     2 call Incrementa_punteros_de_cajas
1493  8DB8
1494  8DB8 F1           	pop af
1495  8DB9 28 EA        	jr z,1B
1496  8DBB
1497  8DBB C1           	pop bc
1498  8DBC D1           	pop de
1499  8DBD E1           	pop hl
1500  8DBE
1501  8DBE C9           	ret
1502  8DBF
1503  8DBF              ; **************************************************************************************************
1504  8DBF              ;
1505  8DBF              ;	21/12/23
1506  8DBF              ;
1507  8DBF              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1508  8DBF
1509  8DBF E5           Restore_entidad push hl
1510  8DC0 D5           	push de
1511  8DC1 C5            	push bc
1512  8DC2
1513  8DC2 2A 1A 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1514  8DC5 11 D4 88     	ld de,Filas
1515  8DC8 01 43 00     	ld bc,67
1516  8DCB ED B0        	ldir
1517  8DCD
1518  8DCD C1           	pop bc
1519  8DCE D1           	pop de
1520  8DCF E1           	pop hl
1521  8DD0 C9           	ret
1522  8DD1
1523  8DD1              ; **************************************************************************************************
1524  8DD1              ;
1525  8DD1              ;	08/05/23
1526  8DD1              ;
1527  8DD1              ;	Incrementamos los dos punteros de entidades. (+1).
1528  8DD1
1529  8DD1              Incrementa_punteros_de_cajas
1530  8DD1
1531  8DD1 2A 1C 89     	ld hl,(Puntero_restore_caja)
1532  8DD4 22 1A 89     	ld (Puntero_store_caja),hl
1533  8DD7 2A 1E 89     	ld hl,(Indice_restore_caja)
1534  8DDA 23           	inc hl
1535  8DDB 23           	inc hl
1536  8DDC 22 1E 89     	ld (Indice_restore_caja),hl
1537  8DDF CD 36 8D         call Extrae_address
1538  8DE2 22 1C 89         ld (Puntero_restore_caja),hl
1539  8DE5 C9               ret
1540  8DE6
1541  8DE6              ; **************************************************************************************************
1542  8DE6              ;
1543  8DE6              ;	21/12/23
1544  8DE6              ;
1545  8DE6              ;	Restore_Amadeus
1546  8DE6              ;
1547  8DE6              ;	Cargamos en DRAW los parámetros de Amadeus.
1548  8DE6              ;
1549  8DE6
1550  8DE6 E5           Restore_Amadeus	push hl
1551  8DE7 D5           	push de
1552  8DE8 C5            	push bc
1553  8DE9 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1554  8DEC 11 D4 88     	ld de,Filas
1555  8DEF 01 43 00     	ld bc,67
1556  8DF2 ED B0        	ldir
1557  8DF4 C1           	pop bc
1558  8DF5 D1           	pop de
1559  8DF6 E1           	pop hl
1560  8DF7 C9           	ret
1561  8DF8
1562  8DF8              ; *************************************************************************************************************************************************************
1563  8DF8              ;
1564  8DF8              ;	21/12/23
1565  8DF8              ;
1566  8DF8              ;	Store_Amadeus
1567  8DF8              ;
1568  8DF8              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1569  8DF8              ;
1570  8DF8              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1571  8DF8              ;
1572  8DF8              ;	DESTRUYE: HL y BC y DE.
1573  8DF8
1574  8DF8 21 D4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1575  8DFB 01 43 00     	ld bc,67
1576  8DFE ED B0        	ldir
1577  8E00 C9           	ret
1578  8E01
1579  8E01              ; -----------------------------------------------------------
1580  8E01              ;
1581  8E01              ;	21/12/23
1582  8E01              ;
1583  8E01              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1584  8E01              ;
1585  8E01              ;	Destruye: HL,BC,DE,A
1586  8E01
1587  8E01 21 D4 88     Borra_datos_entidad ld hl,Filas
1588  8E04 01 42 00     	ld bc,66
1589  8E07 AF           	xor a
1590  8E08 77           	ld (hl),a
1591  8E09 11 D5 88     	ld de,Filas+1
1592  8E0C ED B0        	ldir
1593  8E0E C9           	ret
1594  8E0F
1595  8E0F              ; -----------------------------------------------------------
1596  8E0F
1597  8E0F              ; Teclado.
1598  8E0F
1599  8E0F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1600  8E11 DB FE        	in a,($fe)
1601  8E13 E6 01        	and $01
1602  8E15 28 02        	jr z,1f
1603  8E17 18 F6        	jr Pulsa_ENTER
1604  8E19 C9           1 ret
1605  8E1A
1606  8E1A              ; **************************************************************************************************
1607  8E1A              ;
1608  8E1A              ; Temporización.
1609  8E1A
1610  8E1A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1611  8E1A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1612  8E1A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1613  8E1A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1614  8E1A
1615  8E1A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1616  8E1A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1617  8E1A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1618  8E1A
1619  8E1A              ; A partir de $4f61 no hace falta DELAY.
1620  8E1A
1621  8E1A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1622  8E1A
1623  8E1A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1624  8E1D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1625  8E1E 78           	LD A,B
1626  8E1F A7           	AND A
1627  8E20 20 FB        	JR NZ,wait
1628  8E22 C9           	RET
1629  8E23
1630  8E23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1631  8E23              ;
1632  8E23              ;	5/3/23
1633  8E23              ;
1634  8E23              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1635  8E23
1636  8E23              Movimiento_Amadeus
1637  8E23
1638  8E23              ; Disparo.
1639  8E23
1640  8E23 3A 4D 89     	ld a,(Disparo_Amadeus)
1641  8E26 A7           	and a
1642  8E27 20 02        	jr nz,1F
1643  8E29 18 15        	jr 2F
1644  8E2B
1645  8E2B 3E F7        1 ld a,$f7													; "5" para disparar.
1646  8E2D DB FE        	in a,($fe)
1647  8E2F E6 10        	and $10
1648  8E31
1649  8E31 F5           	push af
1650  8E32 CC DE 8E     	call z,Genera_disparo
1651  8E35 F1           	pop af
1652  8E36 20 08        	jr nz,2F
1653  8E38
1654  8E38 3A 4D 89     	ld a,(Disparo_Amadeus)
1655  8E3B EE 01        	xor 1
1656  8E3D 32 4D 89     	ld (Disparo_Amadeus),a
1657  8E40 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1658  8E42 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1659  8E44 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1660  8E46 CC 99 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1661  8E49
1662  8E49 3E F7        	ld a,$f7
1663  8E4B DB FE        	in a,($fe)
1664  8E4D E6 01        	and $01
1665  8E4F C8           	ret z
1666  8E50
1667  8E50 3E F7        	ld a,$f7
1668  8E52 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1669  8E54 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1670  8E56 CC 7B 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1671  8E59 C9           	ret
1672  8E5A
1673  8E5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1674  8E5A              ;
1675  8E5A              ;	Rutina provisional para que los malotes cagen balas.
1676  8E5A
1677  8E5A              Detecta_disparo_entidad
1678  8E5A
1679  8E5A 3A 50 89     	ld a,(Disparo_entidad)
1680  8E5D A7           	and a
1681  8E5E C8           	ret z
1682  8E5F
1683  8E5F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1684  8E5F
1685  8E5F              ;	ld a,$7f				; Detecta SPACE.
1686  8E5F              ;	in a,($fe)
1687  8E5F              ;	and 1
1688  8E5F              ;	ret nz
1689  8E5F
1690  8E5F CD DE 8E     	call Genera_disparo
1691  8E62 C9           	ret
1692  8E63
1693  8E63              ; ----------------------------------------------------------------------
1694  8E63              ;
1695  8E63              ;	8/9/23
1696  8E63
1697  8E63 2A 34 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1698  8E66 2B            	dec hl
1699  8E67 7E           	ld a,(hl)
1700  8E68 A7           	and a
1701  8E69 C8           	ret z										; Salimos si es álbum está vacío.
1702  8E6A
1703  8E6A 11 F3 88     	ld de,Variables_de_borrado+5
1704  8E6D 01 06 00     	ld bc,6
1705  8E70 ED B8        	lddr
1706  8E72 C9           	ret
1707  8E73
1708  8E73              ; ----------------------------------------------------------------------
1709  8E73              ;
1710  8E73              ;	9/9/23
1711  8E73
1712  8E73              Repone_datos_de_borrado_Amadeus
1713  8E73
1714  8E73 21 EE 88     	ld hl,Variables_de_borrado
1715  8E76 11 AC 70     	ld de,Album_de_fotos_Amadeus
1716  8E79 01 06 00     	ld bc,6
1717  8E7C ED B0        	ldir
1718  8E7E
1719  8E7E EB           	ex de,hl
1720  8E7F 22 34 89     	ld (End_Snapshot_Amadeus),hl
1721  8E82
1722  8E82 C9           	ret
1723  8E83
1724  8E83              ; ----------------------------------------------------------------------
1725  8E83              ;
1726  8E83              ;	27/10/23
1727  8E83              ;
1728  8E83
1729  8E83              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1730  8E83              ;	_ Album_de_fotos correspondiente.
1731  8E83
1732  8E83              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1733  8E83              ;	_ durante el proceso de escritura.
1734  8E83
1735  8E83              Repone_datos_de_borrado
1736  8E83
1737  8E83 F3           	di
1738  8E84 ED 5B 2E 89  	ld de,(Stack_snapshot)
1739  8E88 21 EE 88     	ld hl,Variables_de_borrado
1740  8E8B 01 06 00     	ld bc,6
1741  8E8E ED B0        	ldir
1742  8E90 FB           	ei
1743  8E91
1744  8E91 EB           	ex de,hl
1745  8E92 22 2E 89     	ld (Stack_snapshot),hl
1746  8E95
1747  8E95 C9           	ret
1748  8E96
1749  8E96              ; --------------------------------------------------------------------------------------
1750  8E96
1751  8E96              Pinta_Amadeus
1752  8E96
1753  8E96 3E 06        	ld a,6
1754  8E98 D3 FE            out ($fe),a										; Amarillo
1755  8E9A
1756  8E9A CD 02 8D        	call Calcula_malotes_Amadeus
1757  8E9D CD 42 97     	call Extrae_foto_Amadeus
1758  8EA0 CD C2 8C     	call Limpia_album_Amadeus
1759  8EA3
1760  8EA3 C9           	ret
1761  8EA4
1762  8EA4              Pinta_entidades
1763  8EA4
1764  8EA4              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1765  8EA4
1766  8EA4 3A 36 89     	ld a,(Ctrl_3)
1767  8EA7 CB 47        	bit 0,a
1768  8EA9 C8           	ret z
1769  8EAA
1770  8EAA CD EA 8C     	call Calcula_numero_de_malotes
1771  8EAD CD C0 96     	call Extrae_foto_entidades
1772  8EB0 CD 77 71     	call Limpia_y_reinicia_Stack_Snapshot
1773  8EB3
1774  8EB3 C9           	ret
1775  8EB4
1776  8EB4              ; -----------------------------------------------------------------------------------
1777  8EB4              ;
1778  8EB4              ;	10/12/23
1779  8EB4              ;
1780  8EB4              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1781  8EB4
1782  8EB4              Actualiza_relojes
1783  8EB4
1784  8EB4 3A 36 89     	ld a,(Ctrl_3)
1785  8EB7 CB 47        	bit 0,a
1786  8EB9 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1787  8EBA
1788  8EBA 21 48 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1789  8EBD 34           	inc (hl)
1790  8EBE
1791  8EBE 34           	inc (hl)
1792  8EBF 35           	dec (hl)
1793  8EC0 C0           	ret nz
1794  8EC1
1795  8EC1 21 49 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1796  8EC4 34           	inc (hl)
1797  8EC5 C9           	ret
1798  8EC6
1799  8EC6              ; ---------------------------------------------------------------
1800  8EC6              ;
1801  8EC6              ;	21/12/23
1802  8EC6
1803  8EC6              Guarda_parametros_DRAW
1804  8EC6
1805  8EC6 21 D4 88     	ld hl,Filas
1806  8EC9 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1807  8ECC 01 43 00     	ld bc,67
1808  8ECF ED B0        	ldir
1809  8ED1 C9           	ret
1810  8ED2
1811  8ED2              Recupera_parametros_DRAW
1812  8ED2
1813  8ED2 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1814  8ED5 11 D4 88     	ld de,Filas
1815  8ED8 01 43 00     	ld bc,67
1816  8EDB ED B0        	ldir
1817  8EDD C9           	ret
1818  8EDE
1819  8EDE              ; ---------------------------------------------------------------
1820  8EDE
1821  8EDE              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EDE              ; ******************************************************************************************************************************************************************************************
   2+ 8EDE              ;
   3+ 8EDE              ;   21/07/23
   4+ 8EDE              ;
   5+ 8EDE              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EDE              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EDE              ;
   8+ 8EDE              ;
   9+ 8EDE              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EDE              ;
  11+ 8EDE              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EDE              ;               _ hacen las entidades hacia abajo.
  13+ 8EDE              ;
  14+ 8EDE              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EDE              ;
  16+ 8EDE              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EDE              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EDE              ;
  19+ 8EDE              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EDE              ;           _ la bala.
  21+ 8EDE              ;
  22+ 8EDE              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EDE              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EDE              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EDE              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EDE              ;           _ en el momento de generarse la bala)).
  27+ 8EDE
  28+ 8EDE              Genera_disparo
  29+ 8EDE
  30+ 8EDE              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EDE              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EDE              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EDE              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EDE              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EDE              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EDE              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EDE
  38+ 8EDE              ; Exclusiones:
  39+ 8EDE
  40+ 8EDE 3A EC 88         ld a,(Vel_down)
  41+ 8EE1 47               ld b,a
  42+ 8EE2 3A 47 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EE5 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EE6 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EE7 3A 11 89         ld a,(Columnas)
  46+ 8EEA 47               ld b,a
  47+ 8EEB 3A D5 88         ld a,(Columns)
  48+ 8EEE B8               cp b
  49+ 8EEF C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EF0
  51+ 8EF0              ; ----- ----- -----
  52+ 8EF0
  53+ 8EF0 3A 04 89         ld a,(Ctrl_0)
  54+ 8EF3 CB 77            bit 6,a
  55+ 8EF5 20 06            jr nz,14F
  56+ 8EF7
  57+ 8EF7 3A DB 88         ld a,(Coordenada_y)
  58+ 8EFA FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EFC D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EFD
  61+ 8EFD 21 00 80     14 ld hl,Indice_disparo
  62+ 8F00 3A DC 88         ld a,(CTRL_DESPLZ)
  63+ 8F03 4F               ld c,a
  64+ 8F04 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F06              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F06              ;                                            ""        ""       "f9", B="1"
  67+ 8F06              ;                                            ""        ""       "fb", B="2"
  68+ 8F06              ;                                            ""        ""       "fb", B="3"
  69+ 8F06 A7               and a
  70+ 8F07 28 10            jr z,1F
  71+ 8F09 E6 01            and 1
  72+ 8F0B C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F0C
  74+ 8F0C 79               ld a,c
  75+ 8F0D 16 F9            ld d,$f9
  76+ 8F0F 23           2 inc hl
  77+ 8F10 23               inc hl
  78+ 8F11 04               inc b
  79+ 8F12 BA               cp d
  80+ 8F13 28 04            jr z,1F
  81+ 8F15 14               inc d
  82+ 8F16 14               inc d
  83+ 8F17 18 F6            jr 2B
  84+ 8F19
  85+ 8F19 CD 36 8D     1 call Extrae_address
  86+ 8F1C E5               push hl
  87+ 8F1D FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F1F DD 21 88 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F23
  90+ 8F23              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F23              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F23
  93+ 8F23 3A 04 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F26 CB 77            bit 6,a
  95+ 8F28 20 04            jr nz,19F
  96+ 8F2A
  97+ 8F2A AF               xor a
  98+ 8F2B 32 50 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F2E
 100+ 8F2E 3A E8 88     19 ld a,(Cuad_objeto)
 101+ 8F31 FE 02            cp 2
 102+ 8F33 38 66            jr c,3F
 103+ 8F35 28 64            jr z,3F
 104+ 8F37
 105+ 8F37              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F37
 107+ 8F37 E6 01            and 1
 108+ 8F39 28 30            jr z,4F
 109+ 8F3B
 110+ 8F3B              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F3B              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F3B              ;
 113+ 8F3B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F3B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F3B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F3B
 117+ 8F3B 2A D6 88     	ld hl,(Posicion_actual)
 118+ 8F3E
 119+ 8F3E              ;   Amadeus o entidad ???.
 120+ 8F3E
 121+ 8F3E 3A 04 89         ld a,(Ctrl_0)
 122+ 8F41 CB 77            bit 6,a
 123+ 8F43 28 0A            jr z,8F
 124+ 8F45
 125+ 8F45              ; 	Dispara Amadeus.
 126+ 8F45
 127+ 8F45 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F47 CD B1 96         call PreviousScan
 129+ 8F4A CD B1 96         call PreviousScan
 130+ 8F4D
 131+ 8F4D              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F4D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F4D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F4D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F4D
 136+ 8F4D 18 11            jr 10F
 137+ 8F4F
 138+ 8F4F              ; 	Dispara Entidad.
 139+ 8F4F
 140+ 8F4F 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F52              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F52
 143+ 8F52              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F52              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F52
 146+ 8F52 C5               push bc
 147+ 8F53 06 10            ld b,16
 148+ 8F55 CD A2 96     9 call NextScan
 149+ 8F58 10 FB            djnz 9B
 150+ 8F5A C1               pop bc
 151+ 8F5B CD C5 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F5E 18 06            jr 17F
 153+ 8F60
 154+ 8F60              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F60              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F60              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F60              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F60
 159+ 8F60 CD C5 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F63 CD 3A 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F66              ;                                                      ; _al generar el disparo.
 162+ 8F66
 163+ 8F66              ; 	LLegados a este punto tendremos:
 164+ 8F66              ;
 165+ 8F66              ;       Puntero_objeto_disparo en IY.
 166+ 8F66              ;       Rutinas_de_impresion en IX.
 167+ 8F66              ;       Puntero_de_impresion en HL.
 168+ 8F66              ;       Impacto/Dirección en BC.
 169+ 8F66
 170+ 8F66 CD CD 8F     17 call Almacena_disparo
 171+ 8F69 18 52            jr 6F                                             ; RET.
 172+ 8F6B
 173+ 8F6B              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F6B              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F6B              ;
 176+ 8F6B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F6B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F6B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F6B
 180+ 8F6B 2A D6 88     4 ld hl,(Posicion_actual)
 181+ 8F6E
 182+ 8F6E              ;   Amadeus o entidad ???.
 183+ 8F6E
 184+ 8F6E 3A 04 89         ld a,(Ctrl_0)
 185+ 8F71 CB 77            bit 6,a
 186+ 8F73 28 0A            jr z,11F
 187+ 8F75
 188+ 8F75              ; 	Dispara Amadeus.
 189+ 8F75
 190+ 8F75 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F77 CD B1 96         call PreviousScan
 192+ 8F7A CD B1 96         call PreviousScan
 193+ 8F7D
 194+ 8F7D              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F7D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F7D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F7D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F7D
 199+ 8F7D 18 11            jr 13F
 200+ 8F7F
 201+ 8F7F              ; 	Dispara Entidad.
 202+ 8F7F
 203+ 8F7F 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F82              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F82
 206+ 8F82              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F82              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F82
 209+ 8F82 C5               push bc
 210+ 8F83 06 10            ld b,16
 211+ 8F85 CD A2 96     12 call NextScan
 212+ 8F88 10 FB            djnz 12B
 213+ 8F8A C1               pop bc
 214+ 8F8B
 215+ 8F8B CD BE 8F         call Ajusta_disparo_parte_derecha
 216+ 8F8E 18 06            jr 18F
 217+ 8F90
 218+ 8F90              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F90              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F90              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F90              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F90
 223+ 8F90 CD BE 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F93 CD 3A 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F96              ;                                                       ; _al generar el disparo.
 226+ 8F96
 227+ 8F96              ; LLegados a este punto tendremos:
 228+ 8F96              ;
 229+ 8F96              ;       Puntero_objeto_disparo en IY.
 230+ 8F96              ;       Rutinas_de_impresion en IX.
 231+ 8F96              ;       Puntero_de_impresion en HL.
 232+ 8F96              ;       Impacto/Dirección en BC.
 233+ 8F96
 234+ 8F96 CD CD 8F     18 call Almacena_disparo
 235+ 8F99 18 22            jr 6F                                               ; RET.
 236+ 8F9B
 237+ 8F9B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F9B
 239+ 8F9B 28 11        3 jr z,5F
 240+ 8F9D
 241+ 8F9D              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F9D              ;
 243+ 8F9D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F9D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F9D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F9D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F9D
 248+ 8F9D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F9D              ;	   ""        ""       "f9", B="1"
 250+ 8F9D              ;	   ""        ""       "fb", B="2"
 251+ 8F9D              ; 	   ""        ""       "fb", B="3"
 252+ 8F9D
 253+ 8F9D 2A D6 88     	ld hl,(Posicion_actual)
 254+ 8FA0 CD A2 96     	call NextScan
 255+ 8FA3
 256+ 8FA3              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FA3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FA3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FA3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FA3
 261+ 8FA3 CD C5 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FA6
 263+ 8FA6              ; 	No se produce impacto. B="$80"
 264+ 8FA6              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FA6
 266+ 8FA6 01 80 80         ld bc,$8080
 267+ 8FA9
 268+ 8FA9              ; 	LLegados a este punto tendremos:
 269+ 8FA9              ;
 270+ 8FA9              ;       Puntero_objeto_disparo en IY.
 271+ 8FA9              ;       Rutinas_de_impresion en IX.
 272+ 8FA9              ;       Puntero_de_impresion en HL.
 273+ 8FA9              ;       Impacto/Dirección en BC.
 274+ 8FA9
 275+ 8FA9 CD CD 8F         call Almacena_disparo
 276+ 8FAC 18 0F            jr 6F                                           ; RET.
 277+ 8FAE
 278+ 8FAE              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FAE              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FAE              ;
 281+ 8FAE              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FAE              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FAE              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FAE              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FAE
 286+ 8FAE 2A D6 88     5 ld hl,(Posicion_actual)
 287+ 8FB1 CD A2 96     	call NextScan
 288+ 8FB4
 289+ 8FB4              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FB4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FB4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FB4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FB4
 294+ 8FB4 CD BE 8F         call Ajusta_disparo_parte_derecha
 295+ 8FB7
 296+ 8FB7              ; 	No se produce impacto. B="$80"
 297+ 8FB7              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FB7
 299+ 8FB7 01 80 80     15 ld bc,$8080
 300+ 8FBA
 301+ 8FBA              ; 	LLegados a este punto tendremos:
 302+ 8FBA              ;
 303+ 8FBA              ;       Puntero_objeto_disparo en IY.
 304+ 8FBA              ;       Rutinas_de_impresion en IX.
 305+ 8FBA              ;       Puntero_de_impresion en HL.
 306+ 8FBA              ;       Impacto/Dirección en BC.
 307+ 8FBA
 308+ 8FBA CD CD 8F         call Almacena_disparo
 309+ 8FBD
 310+ 8FBD C9           6 ret
 311+ 8FBE
 312+ 8FBE              ; ----------------------------------------------------------------
 313+ 8FBE              ;
 314+ 8FBE              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FBE              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FBE              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FBE
 318+ 8FBE 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FBF FE 02            cp 2
 320+ 8FC1 38 01            jr c,1F
 321+ 8FC3 23               inc hl
 322+ 8FC4 C9           1 ret
 323+ 8FC5
 324+ 8FC5 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FC6 FE 01        	cp 1
 326+ 8FC8 20 01        	jr nz,1F
 327+ 8FCA 2B           	dec hl
 328+ 8FCB 2B           1 dec hl
 329+ 8FCC C9               ret
 330+ 8FCD
 331+ 8FCD              ; ----------------------------------------------------------------
 332+ 8FCD              ;
 333+ 8FCD              ;   25/02/23
 334+ 8FCD              ;
 335+ 8FCD              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FCD              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FCD              ;
 338+ 8FCD              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FCD              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FCD
 341+ 8FCD              Almacena_disparo
 342+ 8FCD
 343+ 8FCD E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FCE F1               pop af
 345+ 8FCF 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FD0
 347+ 8FD0 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FD1 E6 01            and 1
 349+ 8FD3 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FD5              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FD5              ; 	Dispara AMADEUS.
 352+ 8FD5
 353+ 8FD5              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FD5              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FD5              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FD5              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FD5
 358+ 8FD5 C5               push bc
 359+ 8FD6 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FD9 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FDC A7               and a
 362+ 8FDD ED 42            sbc hl,bc
 363+ 8FDF CC BB 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FE2 C1               pop bc
 365+ 8FE3 28 54            jr z,4F
 366+ 8FE5
 367+ 8FE5 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FE8 23               inc hl
 369+ 8FE9 23               inc hl
 370+ 8FEA 22 3A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FED              ;                                                   ; _ Disparo_(+1).
 372+ 8FED 18 18            jr 2F
 373+ 8FEF
 374+ 8FEF              ; Dispara una entidad.
 375+ 8FEF
 376+ 8FEF C5           1 push bc
 377+ 8FF0 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FF3 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FF6 A7               and a
 380+ 8FF7 ED 42            sbc hl,bc
 381+ 8FF9 CC B4 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FFC C1               pop bc
 383+ 8FFD 28 3A            jr z,4F
 384+ 8FFF
 385+ 8FFF 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9002 23               inc hl
 387+ 9003 23               inc hl
 388+ 9004 22 38 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9007              ;                                                   ; _ Disparo_(+1).
 390+ 9007 CD 36 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 900A              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 900A              ;
 393+ 900A              ;                                                     Puntero_objeto_disparo en IY.
 394+ 900A              ;                                                     Rutinas_de_impresion en IX.
 395+ 900A              ;                                                     Puntero_de_impresion en HL.
 396+ 900A              ;                                                     Impacto/Dirección en BC.
 397+ 900A
 398+ 900A 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 900B 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 900C 23               inc hl                                          ; _ al siguiente.
 401+ 900D A7               and a
 402+ 900E 20 C0            jr nz,3B
 403+ 9010
 404+ 9010 08               ex af,af
 405+ 9011 ED 73 28 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9015 F9               ld sp,hl
 407+ 9016
 408+ 9016 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9018 F5               push af                                         ; Puntero de impresión.
 410+ 9019 FD E5            push iy                                         ; Puntero objeto.
 411+ 901B C5               push bc                                         ; Control.
 412+ 901C
 413+ 901C ED 7B 28 89      ld sp,(Stack)
 414+ 9020
 415+ 9020              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9020
 417+ 9020 21 17 89     	ld hl,Ctrl_1
 418+ 9023 CB C6        	set 0,(hl)
 419+ 9025
 420+ 9025 DD E5        	push ix
 421+ 9027 E1               pop hl
 422+ 9028 F5               push af
 423+ 9029 DD E1            pop ix
 424+ 902B
 425+ 902B CD 16 71     	call Guarda_foto_registros
 426+ 902E
 427+ 902E 21 17 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9031 CB 86        	res 0,(hl)
 429+ 9033
 430+ 9033              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9033              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9033
 433+ 9033 CD BB 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9036 CD B4 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9039
 436+ 9039 C9           4 ret
 437+ 903A
 438+ 903A              ; ----------------------------------------------------------------
 439+ 903A              ;
 440+ 903A              ;   4/3/23
 441+ 903A              ;
 442+ 903A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 903A              ;   _ al generarse el disparo.
 444+ 903A              ;
 445+ 903A              ;       "$80" ..... No se produce colisión.
 446+ 903A              ;       "$81" ..... Se produce colisión.
 447+ 903A              ;
 448+ 903A              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 903A              ;         _ que forman el disparo.
 450+ 903A
 451+ 903A
 452+ 903A              Comprueba_Colision
 453+ 903A
 454+ 903A              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 903A
 456+ 903A FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 903C E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 903D
 459+ 903D CD 73 90         call Modifica_H_Velocidad_disparo
 460+ 9040
 461+ 9040 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9041 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9043 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9045
 465+ 9045 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9047 CD 63 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 904A
 468+ 904A 7B               ld a,e
 469+ 904B E6 01            and 1
 470+ 904D 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 904F              ;                                                  ; _ para activar IMPACTO.
 472+ 904F E1               pop hl
 473+ 9050 E5               push hl
 474+ 9051 CD A2 96         call NextScan
 475+ 9054
 476+ 9054 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9055 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9057 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9059              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9059 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 905B CD 63 90         call Bucle_2
 482+ 905E
 483+ 905E 43           1 ld b,e
 484+ 905F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9060 FD E1            pop iy
 486+ 9062 C9               ret
 487+ 9063
 488+ 9063              ; ---------- ----------
 489+ 9063
 490+ 9063 06 02        Bucle_2 ld b,2
 491+ 9065 FD 7E 00     2 ld a,(iy)
 492+ 9068 A6               and (hl)
 493+ 9069 28 02            jr z,1F
 494+ 906B 1E 81            ld e,$81
 495+ 906D 23           1 inc hl
 496+ 906E FD 23            inc iy
 497+ 9070 10 F3            djnz 2B
 498+ 9072 C9               ret
 499+ 9073
 500+ 9073              ; ---------- ----------
 501+ 9073              ;
 502+ 9073              ;   21/7/23
 503+ 9073
 504+ 9073              Modifica_H_Velocidad_disparo
 505+ 9073
 506+ 9073 3A 47 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9076 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9078 D0               ret nc                                         ; _ incrementamos H.
 509+ 9079 24               inc h
 510+ 907A
 511+ 907A C9               ret
 512+ 907B
 513+ 907B              ; -------------------------------------------------------------------------------------------------------------
 514+ 907B              ;
 515+ 907B              ;   04/12/23
 516+ 907B              ;
 517+ 907B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 907B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 907B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 907B              ;
 521+ 907B              ;   MODIFICA: HL,DE,B y A.
 522+ 907B
 523+ 907B              Genera_coordenadas_X
 524+ 907B
 525+ 907B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 907B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 907B
 528+ 907B              ;   Limpiamos almacenes.
 529+ 907B
 530+ 907B CD AC 90         call Limpia_Coordenadas_X
 531+ 907E
 532+ 907E              ;   Almacenamos coordenadas X.
 533+ 907E
 534+ 907E              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 907E
 536+ 907E 2A FE 88         ld hl,(Puntero_de_impresion)
 537+ 9081 11 44 89         ld de,Coordenadas_X_Entidad
 538+ 9084 06 02            ld b,2
 539+ 9086
 540+ 9086 3A DC 88         ld a,(CTRL_DESPLZ)
 541+ 9089 A7               and a
 542+ 908A 28 01            jr z,1F
 543+ 908C 04               inc b
 544+ 908D
 545+ 908D CD A3 90     1 call Guarda_coordenadas_X
 546+ 9090
 547+ 9090              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9090
 549+ 9090 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 9093 11 41 89         ld de,Coordenadas_X_Amadeus
 551+ 9096 06 02            ld b,2
 552+ 9098
 553+ 9098 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 909B A7               and a
 555+ 909C 28 01            jr z,2F
 556+ 909E 04               inc b
 557+ 909F
 558+ 909F CD A3 90     2 call Guarda_coordenadas_X
 559+ 90A2
 560+ 90A2              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 90A2
 562+ 90A2 C9               ret
 563+ 90A3
 564+ 90A3              ; ----- ----- ----- ----- -----
 565+ 90A3
 566+ 90A3 7D           Guarda_coordenadas_X  ld a,l
 567+ 90A4 E6 1F            and $1f
 568+ 90A6 12           1 ld (de),a
 569+ 90A7 3C               inc a
 570+ 90A8 13               inc de
 571+ 90A9 10 FB            djnz 1B
 572+ 90AB C9               ret
 573+ 90AC
 574+ 90AC AF           Limpia_Coordenadas_X xor a
 575+ 90AD 06 06            ld b,6
 576+ 90AF 21 41 89         ld hl,Coordenadas_X_Amadeus
 577+ 90B2 77           1 ld (hl),a
 578+ 90B3 23               inc hl
 579+ 90B4 10 FC            djnz 1B
 580+ 90B6 C9               ret
 581+ 90B7
 582+ 90B7              ; ----- ----- ----- ----- -----
 583+ 90B7
 584+ 90B7              Compara_coordenadas_X
 585+ 90B7
 586+ 90B7 06 03            ld b,3
 587+ 90B9 11 46 89         ld de,Coordenadas_X_Entidad+2
 588+ 90BC
 589+ 90BC 1A               ld a,(de)
 590+ 90BD A7               and a
 591+ 90BE 20 01            jr nz,2F
 592+ 90C0 05               dec b
 593+ 90C1
 594+ 90C1 1B           2 dec de
 595+ 90C2 1B               dec de
 596+ 90C3 21 41 89         ld hl,Coordenadas_X_Amadeus
 597+ 90C6
 598+ 90C6 D5           1 push de
 599+ 90C7 E5               push hl
 600+ 90C8 C5               push bc
 601+ 90C9
 602+ 90C9 CD D3 90         call Comparando
 603+ 90CC
 604+ 90CC C1               pop bc
 605+ 90CD E1               pop hl
 606+ 90CE D1               pop de
 607+ 90CF
 608+ 90CF 13               inc de
 609+ 90D0 10 F4            djnz 1B
 610+ 90D2
 611+ 90D2 C9               ret
 612+ 90D3
 613+ 90D3              ; ----- ----- ----- ----- -----
 614+ 90D3              ;
 615+ 90D3              ;   4/12/23
 616+ 90D3              ;
 617+ 90D3              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90D3
 619+ 90D3 06 03        Comparando ld b,3
 620+ 90D5 1A               ld a,(de)
 621+ 90D6 4E           2 ld c,(hl)
 622+ 90D7 B9               cp c
 623+ 90D8 28 04            jr z,1F
 624+ 90DA 23               inc hl
 625+ 90DB 10 F9            djnz 2B
 626+ 90DD C9               ret
 627+ 90DE
 628+ 90DE 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90E0 32 ED 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90E3 21 3C 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90E6 CB D6            set 2,(hl)
 632+ 90E8 C9               ret
 633+ 90E9
 634+ 90E9              ; -----------------------------------------------------------------------
 635+ 90E9              ;
 636+ 90E9              ;   7/12/23
 637+ 90E9              ;
 638+ 90E9
 639+ 90E9              Detecta_colision_nave_entidad
 640+ 90E9
 641+ 90E9              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90E9
 643+ 90E9 FD 2A D8 88      ld iy,(Puntero_objeto)
 644+ 90ED 2A FE 88         ld hl,(Puntero_de_impresion)
 645+ 90F0
 646+ 90F0 E5               push hl
 647+ 90F1
 648+ 90F1              ; ----- ----- -----
 649+ 90F1 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90F3 06 0A            ld b,10
 651+ 90F5 CD 25 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90F8 7B               ld a,e
 653+ 90F9 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 90FB 38 0E            jr c,3F
 655+ 90FD
 656+ 90FD              ; LLegados a este punto:
 657+ 90FD              ;
 658+ 90FD              ;   HAY COLISIÓN !!!!!.
 659+ 90FD              ;
 660+ 90FD              ;   .db (Impacto) de Amadeus a "1".
 661+ 90FD              ;   SET el bit3 de (Impacto2).
 662+ 90FD              ;
 663+ 90FD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90FD
 665+ 90FD 21 ED 88         ld hl,Impacto
 666+ 9100 36 01            ld (hl),1
 667+ 9102 21 3C 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9105 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9107 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9109
 671+ 9109 18 18            jr 1F
 672+ 910B
 673+ 910B              ; -----
 674+ 910B
 675+ 910B E1           3 pop hl
 676+ 910C CD A2 96         call NextScan
 677+ 910F E5               push hl
 678+ 9110 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9111 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9113 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9115 30 0C            jr nc,1F
 682+ 9117              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9117 10 DC            djnz 2B
 684+ 9119
 685+ 9119              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9119
 687+ 9119              ; LLegados a este punto:
 688+ 9119              ;
 689+ 9119              ;   NO HAY COLISIÓN !!!!!.
 690+ 9119              ;
 691+ 9119              ;   .db (Impacto) de Amadeus a "0".
 692+ 9119              ;   RES el bit2 de (Impacto2).
 693+ 9119              ;
 694+ 9119              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9119              ;   Lo colocamos a "0".
 696+ 9119
 697+ 9119 21 3C 89         ld hl,Impacto2
 698+ 911C CB 96            res 2,(hl)
 699+ 911E 2A 3D 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9121 36 00            ld (hl),0
 701+ 9123
 702+ 9123 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9124 C9               ret
 704+ 9125
 705+ 9125               ; ---------- ----------
 706+ 9125
 707+ 9125 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9126 3A D5 88         ld a,(Columns)
 709+ 9129 47               ld b,a
 710+ 912A FD 7E 00     2 ld a,(iy)
 711+ 912D BE               cp (hl)
 712+ 912E 28 01            jr z,1F
 713+ 9130
 714+ 9130 1C               inc e
 715+ 9131
 716+ 9131 23           1 inc hl
 717+ 9132 FD 23            inc iy
 718+ 9134 10 F4            djnz 2B
 719+ 9136 C1               pop bc
 720+ 9137 C9               ret
 721+ 9138
 722+ 9138              ; -------------------------------------------------------------------------------------------------------------
 723+ 9138              ;
 724+ 9138              ;   13/03/23
 725+ 9138              ;
 726+ 9138              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9138              ;
 728+ 9138              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9138
 730+ 9138 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 913B 7E               ld a,(hl)
 732+ 913C A7               and a
 733+ 913D C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 913E
 735+ 913E 44               ld b,h
 736+ 913F 4D               ld c,l
 737+ 9140 2A 30 89         ld hl,(Stack_snapshot_disparos)
 738+ 9143 E5               push hl
 739+ 9144 A7               and a
 740+ 9145 ED 42            sbc hl,bc
 741+ 9147 E5               push hl
 742+ 9148 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9149
 744+ 9149 E1               pop hl
 745+ 914A 54               ld d,h
 746+ 914B 5D               ld e,l
 747+ 914C 1B               dec de
 748+ 914D ED B8            lddr                                                ; Limpiamos.
 749+ 914F
 750+ 914F 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9152 22 30 89         ld (Stack_snapshot_disparos),hl
 752+ 9155
 753+ 9155 C9               ret
 754+ 9156
 755+ 9156              ; -------------------------------------------------------------------------------------------------------------
 756+ 9156              ;
 757+ 9156              ;   18/07/23
 758+ 9156              ;
 759+ 9156
 760+ 9156              Motor_de_disparos
 761+ 9156
 762+ 9156              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9156
 764+ 9156 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9159 2A 3A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 915C
 767+ 915C CD 36 8D     2 call Extrae_address
 768+ 915F 7E               ld a,(hl)
 769+ 9160 A7               and a
 770+ 9161 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9163
 772+ 9163              ; ----- ----- ----- ----- ----- -----
 773+ 9163
 774+ 9163 C5               push bc
 775+ 9164 CD 28 92         call foto_disparo_a_borrar
 776+ 9167
 777+ 9167              ; Existe colisión con este disparo???
 778+ 9167
 779+ 9167 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9168 7E               ld a,(hl)
 781+ 9169 2B               dec hl
 782+ 916A E6 01            and 1
 783+ 916C 28 1D            jr z,9F
 784+ 916E
 785+ 916E              ;   En este punto:
 786+ 916E              ;
 787+ 916E              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 916E              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 916E              ;   _con la entidad).
 790+ 916E              ;
 791+ 916E              ;   Disparo_2A defw 0                                ; Control.
 792+ 916E              ;    defw 0                                          ; Puntero objeto.
 793+ 916E              ;    defw 0                                          ; Puntero de impresión.
 794+ 916E              ;    defw 0                                          ; Rutina de impresión.
 795+ 916E
 796+ 916E E5               push hl
 797+ 916F
 798+ 916F 06 04            ld b,4
 799+ 9171 23           19 inc hl
 800+ 9172 10 FD            djnz 19B
 801+ 9174
 802+ 9174 CD 36 8D         call Extrae_address
 803+ 9177 CD 77 9D         call Genera_coordenadas_disparo
 804+ 917A
 805+ 917A              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 917A
 807+ 917A 21 3F 89         ld hl,Coordenadas_disparo_certero
 808+ 917D 72               ld (hl),d
 809+ 917E 23               inc hl
 810+ 917F 73               ld (hl),e
 811+ 9180
 812+ 9180              ; Elimino el disparo de la base de datos.
 813+ 9180
 814+ 9180 E1               pop hl
 815+ 9181 CD A7 92         call Elimina_disparo_de_base_de_datos
 816+ 9184 21 3C 89         ld hl,Impacto2
 817+ 9187 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9189
 819+ 9189 18 06            jr 11F
 820+ 918B
 821+ 918B CD 51 92     9 call Mueve_disparo
 822+ 918E CD 28 92         call foto_disparo_a_borrar
 823+ 9191
 824+ 9191 C1           11 pop bc
 825+ 9192 18 04            jr 7F
 826+ 9194
 827+ 9194              ; ----- ----- ----- ----- ----- -----
 828+ 9194
 829+ 9194 ED 42        1 sbc hl,bc
 830+ 9196 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9198
 832+ 9198 2A 3A 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 919B 23               inc hl
 834+ 919C 23               inc hl
 835+ 919D 22 3A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 91A0 18 BA            jr 2B
 837+ 91A2
 838+ 91A2 CD BB 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 91A5              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 91A5
 841+ 91A5              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 91A5
 843+ 91A5 01 6A 85         ld bc,Disparo_11
 844+ 91A8 2A 38 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 91AB
 846+ 91AB CD 36 8D     5 call Extrae_address
 847+ 91AE 7E               ld a,(hl)
 848+ 91AF A7               and a
 849+ 91B0 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91B2
 851+ 91B2              ; ----- ----- ----- ----- ----- -----
 852+ 91B2
 853+ 91B2 C5               push bc
 854+ 91B3 CD 28 92         call foto_disparo_a_borrar
 855+ 91B6
 856+ 91B6              ; Existe colisión con este disparo???
 857+ 91B6
 858+ 91B6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91B7 7E               ld a,(hl)
 860+ 91B8 2B               dec hl
 861+ 91B9 E6 01            and 1
 862+ 91BB 28 4D            jr z,10F
 863+ 91BD
 864+ 91BD              ;! La colisión se produce con Amadeus???
 865+ 91BD              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91BD
 867+ 91BD E5               push hl
 868+ 91BE
 869+ 91BE 06 04            ld b,4
 870+ 91C0 23           16 inc hl
 871+ 91C1 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91C3
 873+ 91C3 CD 36 8D         call Extrae_address
 874+ 91C6 CD 77 9D         call Genera_coordenadas_disparo
 875+ 91C9
 876+ 91C9 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91CA FE 16            cp $16
 878+ 91CC 38 2A            jr c,15F
 879+ 91CE
 880+ 91CE
 881+ 91CE              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91CE
 883+ 91CE D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91CF
 885+ 91CF              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91CF
 887+ 91CF 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91D2
 889+ 91D2              ; Coordenada X de Amadeus en D.
 890+ 91D2
 891+ 91D2 7D               ld a,l
 892+ 91D3 E6 1F            and $1F
 893+ 91D5 57               ld d,a
 894+ 91D6
 895+ 91D6 21 86 85         ld hl,Amadeus_db+8
 896+ 91D9 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91DA
 898+ 91DA 21 41 89         ld hl,Coordenadas_X_Amadeus
 899+ 91DD CD A3 90         call Guarda_coordenadas_X
 900+ 91E0
 901+ 91E0 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91E1
 903+ 91E1              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91E1
 905+ 91E1 06 02            ld b,2
 906+ 91E3 C5           20 push bc
 907+ 91E4
 908+ 91E4 06 03            ld b,3
 909+ 91E6 21 41 89         ld hl,Coordenadas_X_Amadeus
 910+ 91E9 7E           18 ld a,(hl)
 911+ 91EA BA               cp d
 912+ 91EB 20 04            jr nz,17F
 913+ 91ED
 914+ 91ED              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91ED
 916+ 91ED C1               pop bc
 917+ 91EE E1               pop hl
 918+ 91EF 18 0D            jr 14F
 919+ 91F1
 920+ 91F1 23           17 inc hl
 921+ 91F2 10 F5            djnz 18B
 922+ 91F4
 923+ 91F4 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91F5
 925+ 91F5 C1               pop bc
 926+ 91F6 10 EB            djnz 20B
 927+ 91F8
 928+ 91F8
 929+ 91F8              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91F8              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91F8
 932+ 91F8 E1           15 pop hl
 933+ 91F9 23               inc hl
 934+ 91FA 35               dec (hl)
 935+ 91FB 2B               dec hl
 936+ 91FC 18 0C            jr 10F
 937+ 91FE
 938+ 91FE              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 91FE              ; _ almacén de coordenadas_X de Amadeus.
 940+ 91FE
 941+ 91FE E5           14 push hl
 942+ 91FF CD A7 92         call Elimina_disparo_de_base_de_datos
 943+ 9202 21 3C 89         ld hl,Impacto2
 944+ 9205 CB CE            set 1,(hl)
 945+ 9207 E1               pop hl
 946+ 9208 18 06            jr 12F
 947+ 920A
 948+ 920A              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 920A
 950+ 920A CD 51 92     10 call Mueve_disparo
 951+ 920D CD 28 92         call foto_disparo_a_borrar
 952+ 9210 C1           12 pop bc
 953+ 9211
 954+ 9211 18 04            jr 8F
 955+ 9213
 956+ 9213              ; ----- ----- ----- ----- ----- -----
 957+ 9213
 958+ 9213 ED 42        4 sbc hl,bc
 959+ 9215 28 0A            jr z,6F
 960+ 9217
 961+ 9217 2A 38 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 921A 23               inc hl
 963+ 921B 23               inc hl
 964+ 921C 22 38 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 921F 18 8A            jr 5B
 966+ 9221
 967+ 9221 CD B4 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9224 CD AC 90         call Limpia_Coordenadas_X
 969+ 9227 C9               ret
 970+ 9228
 971+ 9228              ; ------------------------------------------------------------------
 972+ 9228
 973+ 9228              foto_disparo_a_borrar
 974+ 9228
 975+ 9228 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9229 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 922A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 922B
 979+ 922B E5               push hl
 980+ 922C 23               inc hl
 981+ 922D 23               inc hl
 982+ 922E ED 73 28 89      ld (Stack),sp
 983+ 9232 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9233 FD E1            pop iy
 985+ 9235 DD E1            pop ix
 986+ 9237 E1               pop hl
 987+ 9238 ED 7B 28 89      ld sp,(Stack)
 988+ 923C 3A 17 89         ld a,(Ctrl_1)
 989+ 923F CB C7            set 0,a
 990+ 9241 32 17 89         ld (Ctrl_1),a
 991+ 9244 CD 16 71         call Guarda_foto_registros
 992+ 9247 3A 17 89         ld a,(Ctrl_1)
 993+ 924A CB 87            res 0,a
 994+ 924C 32 17 89         ld (Ctrl_1),a
 995+ 924F E1               pop hl
 996+ 9250 C9               ret
 997+ 9251
 998+ 9251              ;---------------------------------------------------
 999+ 9251              ;
1000+ 9251              ;   18/07/23
1001+ 9251              ;
1002+ 9251
1003+ 9251              Mueve_disparo
1004+ 9251
1005+ 9251              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9251              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9251              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9251
1009+ 9251 E5               push hl
1010+ 9252
1011+ 9252 7E               ld a,(hl)
1012+ 9253
1013+ 9253 06 04            ld b,4
1014+ 9255 23           1 inc hl
1015+ 9256 10 FD            djnz 1B
1016+ 9258
1017+ 9258              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9258
1019+ 9258 CD 36 8D         call Extrae_address
1020+ 925B
1021+ 925B E6 01            and 1
1022+ 925D 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 925F
1024+ 925F              ; Disparo hacia arriba, (Amadeus).
1025+ 925F
1026+ 925F              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 925F              ; _ de la dificultad.
1028+ 925F
1029+ 925F CD B1 96         call PreviousScan
1030+ 9262 CD B1 96         call PreviousScan
1031+ 9265 CD B1 96         call PreviousScan
1032+ 9268 CD B1 96         call PreviousScan
1033+ 926B
1034+ 926B              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 926B
1036+ 926B 7C               ld a,h
1037+ 926C FE 40            cp $40
1038+ 926E 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9270
1040+ 9270              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9270
1042+ 9270 EB               ex de,hl
1043+ 9271 06 04            ld b,4
1044+ 9273 2B           6 dec hl
1045+ 9274 10 FD            djnz 6B
1046+ 9276
1047+ 9276 CD A7 92         call Elimina_disparo_de_base_de_datos
1048+ 9279 E1               pop hl
1049+ 927A 18 10            jr 7F
1050+ 927C
1051+ 927C              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 927C              ; HL contiene el puntero de impresión del disparo.
1053+ 927C              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 927C
1055+ 927C D5           3 push de
1056+ 927D C5               push bc
1057+ 927E
1058+ 927E CD 3A 90         call Comprueba_Colision
1059+ 9281
1060+ 9281              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9281
1062+ 9281 78               ld a,b
1063+ 9282
1064+ 9282 C1               pop bc
1065+ 9283 D1               pop de
1066+ 9284
1067+ 9284 EB               ex de,hl
1068+ 9285
1069+ 9285 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9286 23               inc hl                                      ; _ movimiento.
1071+ 9287 72               ld (hl),d
1072+ 9288
1073+ 9288 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9289
1075+ 9289 23               inc hl                                      ; _ en curso.
1076+ 928A 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 928B 2B               dec hl
1078+ 928C
1079+ 928C C9           7 ret
1080+ 928D
1081+ 928D              ; Disparo hacia abajo, (Entidad).
1082+ 928D
1083+ 928D 3A 47 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9290 47               ld b,a
1085+ 9291
1086+ 9291 CD A2 96     4 call NextScan
1087+ 9294 10 FB            djnz 4B
1088+ 9296
1089+ 9296              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9296
1091+ 9296 7C               ld a,h
1092+ 9297 FE 58            cp $58
1093+ 9299 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 929B
1095+ 929B EB               ex de,hl
1096+ 929C 06 04            ld b,4
1097+ 929E 2B           5 dec hl
1098+ 929F 10 FD            djnz 5B
1099+ 92A1
1100+ 92A1 CD A7 92         call Elimina_disparo_de_base_de_datos
1101+ 92A4 E1               pop hl
1102+ 92A5 18 E5            jr 7B
1103+ 92A7
1104+ 92A7              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 92A7
1106+ 92A7 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 92AA AF               xor a
1108+ 92AB 77               ld (hl),a
1109+ 92AC 54               ld d,h
1110+ 92AD 5D               ld e,l
1111+ 92AE 13               inc de
1112+ 92AF ED B0            ldir
1113+ 92B1 C9               ret
1114+ 92B2
1115+ 92B2              ; -----------------------------------------------------------------
1116+ 92B2              ;
1117+ 92B2              ;   7/12/23
1118+ 92B2              ;
1119+ 92B2
1120+ 92B2 3A 3C 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92B5 A7               and a
1122+ 92B6 C8               ret z
1123+ 92B7
1124+ 92B7              ; Analizamos si hay impacto por disparos.
1125+ 92B7
1126+ 92B7              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92B7
1128+ 92B7 CB 4F            bit 1,a
1129+ 92B9 28 07            jr z,1F
1130+ 92BB
1131+ 92BB 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92BE 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92C0 18 08            jr 2F
1134+ 92C2
1135+ 92C2 CB 47        1 bit 0,a
1136+ 92C4 C8               ret z
1137+ 92C5
1138+ 92C5              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92C5
1140+ 92C5 21 17 89         ld hl,Ctrl_1
1141+ 92C8 CB D6            set 2,(hl)
1142+ 92CA
1143+ 92CA C9           2 ret
1144+ 92CB
1145+ 92CB              ; -----------------------------------------------------------------
1146+ 92CB              ;
1147+ 92CB              ;   25/04/23
1148+ 92CB              ;
1149+ 92CB
1150+ 92CB              Determina_resultado_comparativa
1151+ 92CB
1152+ 92CB              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92CB              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92CB              ;
1155+ 92CB              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92CB              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92CB              ;
1158+ 92CB              ;   SBC HL,DE
1159+ 92CB
1160+ 92CB              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92CB              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92CB
1163+ 92CB              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92CB              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92CB
1166+ 92CB
1167+ 92CB 3A E8 88         ld a,(Cuad_objeto)
1168+ 92CE FE 02            cp 2
1169+ 92D0 28 26            jr z,2F
1170+ 92D2 38 24            jr c,2F
1171+ 92D4
1172+ 92D4              ; Cuadrantes 3º y 4º
1173+ 92D4
1174+ 92D4 E6 01            and 1
1175+ 92D6 28 10            jr z,4F
1176+ 92D8
1177+ 92D8              ; Cuadrante 3º
1178+ 92D8
1179+ 92D8 7C               ld a,h
1180+ 92D9 06 00            ld b,0
1181+ 92DB
1182+ 92DB CD 66 93         call Compara_cositas_H3
1183+ 92DE
1184+ 92DE 04               inc b
1185+ 92DF 05               dec b
1186+ 92E0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92E1
1188+ 92E1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92E2 06 00            ld b,0
1190+ 92E4
1191+ 92E4 CD 78 93         call Compara_cositas_L3
1192+ 92E7 C9               ret
1193+ 92E8
1194+ 92E8              ; Cuadrante 4º
1195+ 92E8
1196+ 92E8 7C           4 ld a,h
1197+ 92E9 06 00            ld b,0
1198+ 92EB
1199+ 92EB CD 8A 93         call Compara_cositas_H4
1200+ 92EE
1201+ 92EE 04               inc b
1202+ 92EF 05               dec b
1203+ 92F0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92F1
1205+ 92F1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92F2 06 00            ld b,0
1207+ 92F4
1208+ 92F4 CD A0 93         call Compara_cositas_L4
1209+ 92F7 C9               ret
1210+ 92F8
1211+ 92F8              ; Cuadrantes 1º y 2º.
1212+ 92F8
1213+ 92F8 28 10        2 jr z,3F
1214+ 92FA
1215+ 92FA              ; 1er Cuadrante
1216+ 92FA
1217+ 92FA 7C               ld a,h
1218+ 92FB 06 00            ld b,0
1219+ 92FD
1220+ 92FD CD 3E 93         call Compara_cositas_H1
1221+ 9300
1222+ 9300 04               inc b
1223+ 9301 05               dec b
1224+ 9302 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9303
1226+ 9303 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9304 06 00            ld b,0
1228+ 9306
1229+ 9306 CD 54 93         call Compara_cositas_L1
1230+ 9309 C9               ret
1231+ 930A
1232+ 930A
1233+ 930A              ; 2º Cuadrante
1234+ 930A
1235+ 930A 7C           3 ld a,h
1236+ 930B 06 00            ld b,0
1237+ 930D
1238+ 930D CD 1A 93         call Compara_cositas_H2
1239+ 9310
1240+ 9310 04               inc b
1241+ 9311 05               dec b
1242+ 9312 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9313
1244+ 9313 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9314 06 00            ld b,0
1246+ 9316
1247+ 9316 CD 2C 93         call Compara_cositas_L2
1248+ 9319 C9               ret
1249+ 931A
1250+ 931A A7           Compara_cositas_H2 and a
1251+ 931B 28 0D            jr z,1F
1252+ 931D              ;    cp $fd
1253+ 931D              ;    jr z,1F
1254+ 931D              ;    cp $fe
1255+ 931D              ;    jr z,1F
1256+ 931D FE FF            cp $ff
1257+ 931F 28 09            jr z,1F
1258+ 9321 FE 01            cp $01
1259+ 9323 28 05            jr z,1F
1260+ 9325 FE 02            cp $02
1261+ 9327 28 01            jr z,1F
1262+ 9329 C0               ret nz
1263+ 932A 04           1 inc b
1264+ 932B C9               ret
1265+ 932C
1266+ 932C A7           Compara_cositas_L2 and a
1267+ 932D 28 0D            jr z,1F
1268+ 932F              ;    cp $fd
1269+ 932F              ;    jr z,1F
1270+ 932F FE FE            cp $fe
1271+ 9331 28 09            jr z,1F
1272+ 9333 FE FF            cp $ff
1273+ 9335 28 05            jr z,1F
1274+ 9337 FE 01            cp $01
1275+ 9339 28 01            jr z,1F
1276+ 933B              ;    cp $02
1277+ 933B              ;    jr z,1F
1278+ 933B C0               ret nz
1279+ 933C 04           1 inc b
1280+ 933D C9               ret
1281+ 933E
1282+ 933E A7           Compara_cositas_H1 and a
1283+ 933F 28 11            jr z,1F
1284+ 9341              ;    cp $fd
1285+ 9341              ;    jr z,1F
1286+ 9341              ;    cp $fe
1287+ 9341              ;    jr z,1F
1288+ 9341 FE FF            cp $ff
1289+ 9343 28 0D            jr z,1F
1290+ 9345 FE 01            cp $01
1291+ 9347 28 09            jr z,1F
1292+ 9349 FE 02            cp $02
1293+ 934B 28 05            jr z,1F
1294+ 934D FE 03            cp $03
1295+ 934F 28 01            jr z,1F
1296+ 9351 C0               ret nz
1297+ 9352 04           1 inc b
1298+ 9353 C9               ret
1299+ 9354
1300+ 9354 A7           Compara_cositas_L1 and a
1301+ 9355 28 0D            jr z,1F
1302+ 9357              ;    cp $fd
1303+ 9357              ;    jr z,1F
1304+ 9357              ;    cp $fe
1305+ 9357              ;    jr z,1F
1306+ 9357              ;    cp $ff
1307+ 9357              ;    jr z,1F
1308+ 9357 FE 01            cp $01
1309+ 9359 28 09            jr z,1F
1310+ 935B FE 02            cp $02
1311+ 935D 28 05            jr z,1F
1312+ 935F FE 03            cp $03
1313+ 9361 28 01            jr z,1F
1314+ 9363 C0               ret nz
1315+ 9364 04           1 inc b
1316+ 9365 C9               ret
1317+ 9366
1318+ 9366 A7           Compara_cositas_H3 and a
1319+ 9367 28 0D            jr z,1F
1320+ 9369              ;    cp $fd
1321+ 9369              ;    jr z,1F
1322+ 9369 FE FE            cp $fe
1323+ 936B 28 09            jr z,1F
1324+ 936D FE FF            cp $ff
1325+ 936F 28 05            jr z,1F
1326+ 9371 FE 01            cp $01
1327+ 9373 28 01            jr z,1F
1328+ 9375              ;    cp $02
1329+ 9375              ;    jr z,1F
1330+ 9375              ;    cp $03
1331+ 9375              ;    jr z,1F
1332+ 9375 C0               ret nz
1333+ 9376 04           1 inc b
1334+ 9377 C9               ret
1335+ 9378
1336+ 9378 A7           Compara_cositas_L3 and a
1337+ 9379 28 0D            jr z,1F
1338+ 937B              ;    cp $fd
1339+ 937B              ;    jr z,1F
1340+ 937B              ;    cp $fe
1341+ 937B              ;    jr z,1F
1342+ 937B              ;    cp $ff
1343+ 937B              ;    jr z,1F
1344+ 937B FE 01            cp $01
1345+ 937D 28 09            jr z,1F
1346+ 937F FE 02            cp $02
1347+ 9381 28 05            jr z,1F
1348+ 9383 FE 03            cp $03
1349+ 9385 28 01            jr z,1F
1350+ 9387 C0               ret nz
1351+ 9388 04           1 inc b
1352+ 9389 C9               ret
1353+ 938A
1354+ 938A A7           Compara_cositas_H4 and a
1355+ 938B 28 11            jr z,1F
1356+ 938D FE FD            cp $fd
1357+ 938F 28 0D            jr z,1F
1358+ 9391 FE FE            cp $fe
1359+ 9393 28 09            jr z,1F
1360+ 9395 FE FF            cp $ff
1361+ 9397 28 05            jr z,1F
1362+ 9399 FE 01            cp $01
1363+ 939B 28 01            jr z,1F
1364+ 939D              ;    cp $02
1365+ 939D              ;    jr z,1F
1366+ 939D              ;    cp $03
1367+ 939D              ;    jr z,1F
1368+ 939D C0               ret nz
1369+ 939E 04           1 inc b
1370+ 939F C9               ret
1371+ 93A0
1372+ 93A0 A7           Compara_cositas_L4 and a
1373+ 93A1 28 0D            jr z,1F
1374+ 93A3              ;    cp $fd
1375+ 93A3              ;    jr z,1F
1376+ 93A3 FE FE            cp $fe
1377+ 93A5 28 09            jr z,1F
1378+ 93A7 FE FF            cp $ff
1379+ 93A9 28 05            jr z,1F
1380+ 93AB FE 01            cp $01
1381+ 93AD 28 01            jr z,1F
1382+ 93AF              ;    cp $02
1383+ 93AF              ;    jr z,1F
1384+ 93AF              ;    cp $03
1385+ 93AF              ;    jr z,1F
1386+ 93AF C0               ret nz
1387+ 93B0 04           1 inc b
1388+ 93B1 C9               ret
# file closed: Disparo.asm
1822  93B2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93B2              ; ******************************************************************************************************************************************************************************************
   2+ 93B2              ;
   3+ 93B2              ; 26/06/23
   4+ 93B2              ;
   5+ 93B2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93B2
   7+ 93B2              Draw
   8+ 93B2
   9+ 93B2 CD 96 96     	call Prepara_draw
  10+ 93B5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93B6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93B7 28 05        	jr z,2F
  13+ 93B9
  14+ 93B9 3A E8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93BC 18 0C        	jr 1F
  16+ 93BE
  17+ 93BE 2A E6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93C1 22 D6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93C4 CD 53 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93C7              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93C7 CD 08 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93CA
  23+ 93CA 3A 04 89     1 ld a,(Ctrl_0)
  24+ 93CD CB 6F        	bit 5,a
  25+ 93CF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93D1
  27+ 93D1 CD E9 93     	call Comprueba_limite_horizontal
  28+ 93D4 CD 79 94     	call Comprueba_limite_vertical
  29+ 93D7
  30+ 93D7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93D7              ; -----------------------
  32+ 93D7              ; -----------------------
  33+ 93D7              ; -----------------------
  34+ 93D7
  35+ 93D7 CD C6 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93DA CD FD 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93DD CD 5C 96     	call Define_rutina_de_impresion
  38+ 93E0
  39+ 93E0 3A 04 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93E3 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93E5 32 04 89     	ld (Ctrl_0),a
  42+ 93E8
  43+ 93E8 C9           	ret
  44+ 93E9
  45+ 93E9              ; *******************************************************************************************************************************************************************************************
  46+ 93E9              ;	21/01/23
  47+ 93E9              ;
  48+ 93E9              ; 	Comprueba_limite_horizontal.
  49+ 93E9              ;
  50+ 93E9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93E9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93E9              ;
  53+ 93E9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93E9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93E9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93E9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93E9
  58+ 93E9
  59+ 93E9
  60+ 93E9 3A 04 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93EC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93EE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93F0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93F2 32 04 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93F5 18 09            jr 6F
  66+ 93F7 CB 5F        1 bit 3,a
  67+ 93F9 28 0A            jr z,2F
  68+ 93FB E6 F7            and $f7
  69+ 93FD 32 04 89         ld (Ctrl_0),a
  70+ 9400 CD 53 95     6 call Inicializacion
  71+ 9403 18 5B            jr 5F
  72+ 9405 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9406
  74+ 9406              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9406              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9406
  77+ 9406 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9407 2A 12 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 940A CD B5 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 940D 67           	ld h,a
  81+ 940E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 940F CD B5 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9412 67           	ld h,a
  84+ 9413 A7           	and a
  85+ 9414 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9416 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9417 3A E8 88     	ld a,(Cuad_objeto)
  88+ 941A FE 02        	cp 2
  89+ 941C 38 1E        	jr c,3F
  90+ 941E 28 1C        	jr z,3F
  91+ 9420 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9421 28 23            jr z,7F
  93+ 9423 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9425 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9427 E1           	pop hl
  96+ 9428
  97+ 9428              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9428              ; _para indicar con E="2" en caso necesario.
  99+ 9428
 100+ 9428 E5               push hl
 101+ 9429 C5               push bc
 102+ 942A CD B5 99     	call calcula_tercio
 103+ 942D FE 01        	cp 1
 104+ 942F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9431 CD 61 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9434 28 26            jr z,9F
 107+ 9436 38 24            jr c,9F
 108+ 9438 1E 00        11 ld e,0
 109+ 943A 18 22            jr 8F
 110+ 943C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 943D 28 07        	jr z, 7F
 112+ 943F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9441 1E 00         	ld e,0
 114+ 9443 E1           	pop hl
 115+ 9444 18 04        	jr 4F
 116+ 9446 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9448 18 15            jr 10F
 118+ 944A
 119+ 944A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 944A              ; _para indicar con E="2" en caso necesario.
 121+ 944A
 122+ 944A E5           4 push hl
 123+ 944B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 944C CD B5 99     	call calcula_tercio
 125+ 944F FE 01        	cp 1
 126+ 9451 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9453 CD 61 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9456 28 04            jr z,9F
 129+ 9458 30 02            jr nc,9F
 130+ 945A 18 02        	jr 8F
 131+ 945C 1E 02        9 ld e,2
 132+ 945E C1           8 pop bc
 133+ 945F E1           10 pop hl
 134+ 9460 C9           5 ret
 135+ 9461
 136+ 9461              ; --------------------
 137+ 9461              ;
 138+ 9461              ; 25/08/22
 139+ 9461
 140+ 9461 CD B5 99     Comprueba_centro call calcula_tercio
 141+ 9464 67               ld h,a
 142+ 9465 08           	ex af,af
 143+ 9466 FE 02        	cp 2
 144+ 9468 38 07        	jr c,1F
 145+ 946A 28 05        	jr z,1F
 146+ 946C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 946F 18 03        	jr 2F
 148+ 9471 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9474 08           2 ex af,af
 150+ 9475 A7               and a
 151+ 9476 ED 42            sbc hl,bc
 152+ 9478 C9               ret
 153+ 9479
 154+ 9479              ; *********************************************************************************************************************************************************************************************
 155+ 9479              ;
 156+ 9479              ;   16/8/22
 157+ 9479              ;
 158+ 9479              ;	Comprueba_limite_vertical
 159+ 9479              ;
 160+ 9479              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9479              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9479              ;
 163+ 9479
 164+ 9479 2A D6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 947C 7D           	ld a,l
 166+ 947D E6 1F        	and $1F
 167+ 947F 57           	ld d,a
 168+ 9480 3A 14 89     	ld a,(Limite_vertical)
 169+ 9483 BA           	cp d 											; Límite - Posición.
 170+ 9484 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9485 3A E8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9488 CB 47        	bit 0,a
 173+ 948A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 948C
 175+ 948C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 948C
 177+ 948C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 948D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 948F
 180+ 948F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 948F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 948F
 183+ 948F 3A DA 88         ld a,(Coordenada_X)
 184+ 9492 16 0F            ld d,Centro_izquierda
 185+ 9494 A7               and a
 186+ 9495 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9496 28 1E            jr z,3F
 188+ 9498 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 949A              ;                                                    ; _salimos sin modificar nada.
 190+ 949A 18 0E            jr 2F
 191+ 949C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 949D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 949F
 194+ 949F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 949F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 949F
 197+ 949F 3A DA 88         ld a,(Coordenada_X)
 198+ 94A2 16 10            ld d,Centro_derecha
 199+ 94A4 A7               and a
 200+ 94A5 92               sub d
 201+ 94A6 28 0E            jr z,3F
 202+ 94A8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 94AA              ;                                                    ; _salimos sin modificar nada.
 204+ 94AA CB 43        2 bit 0,e
 205+ 94AC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 94AE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 94AF CD 43 95         call Modificaccionne
 208+ 94B2 C1           	pop bc
 209+ 94B3 CD 53 95         call Inicializacion
 210+ 94B6 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94B7
 212+ 94B7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94B7
 214+ 94B7 C5           4 push bc
 215+ 94B8 01 D5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94BB 0A           	ld a,(bc)
 217+ 94BC 3D           	dec a
 218+ 94BD 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94BE 7D           	ld a,l
 220+ 94BF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94C0 CB 47        	bit 0,a
 222+ 94C2 28 03        	jr z,5F
 223+ 94C4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94C5 18 2E        	jr 7F
 225+ 94C7
 226+ 94C7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94C7
 228+ 94C7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94C8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94C9 3A 04 89     	ld a,(Ctrl_0)
 231+ 94CC CB 4F        	bit 1,a
 232+ 94CE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94D0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94D1
 235+ 94D1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94D1
 237+ 94D1 1C               inc e
 238+ 94D2 1D               dec e
 239+ 94D3 20 07            jr nz,12F
 240+ 94D5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94D6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94D7 22 D6 88     	ld (Posicion_actual),hl
 243+ 94DA 18 44        13 jr 9F
 244+ 94DC CB 43        12 bit 0,e
 245+ 94DE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94E0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94E0 C1           	pop bc
 248+ 94E1 18 D3        	jr 3B
 249+ 94E3 80           14 add b
 250+ 94E4 6F               ld l,a
 251+ 94E5 22 D6 88     	ld (Posicion_actual),hl
 252+ 94E8 CD 43 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94EB 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94ED E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94EF 32 04 89         ld (Ctrl_0),a
 256+ 94F2 F1           	pop af
 257+ 94F3 18 2B        	jr 9F
 258+ 94F5
 259+ 94F5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94F5
 261+ 94F5 F5           7 push af
 262+ 94F6 3A 04 89     	ld a,(Ctrl_0)
 263+ 94F9 CB 47        	bit 0,a
 264+ 94FB 20 1D        	jr nz,8F
 265+ 94FD F1           	pop af
 266+ 94FE
 267+ 94FE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 94FE
 269+ 94FE 1C           	inc e
 270+ 94FF 1D               dec e
 271+ 9500 20 07            jr nz,10F
 272+ 9502 90           	sub b
 273+ 9503 6F               ld l,a
 274+ 9504 22 D6 88     	ld (Posicion_actual),hl
 275+ 9507 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9509              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9509 CB 43        10 bit 0,e
 278+ 950B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 950D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 950D C1           	pop bc
 281+ 950E 18 A6        	jr 3B
 282+ 9510 90           16 sub b
 283+ 9511 6F               ld l,a
 284+ 9512 22 D6 88     	ld (Posicion_actual),hl
 285+ 9515 CD 43 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9518 18 06            jr 9F
 287+ 951A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 951C 32 04 89         ld (Ctrl_0),a
 289+ 951F F1           	pop af
 290+ 9520 C1           9 pop bc
 291+ 9521 1E 00        	ld e,0
 292+ 9523 CD 53 95         call Inicializacion
 293+ 9526 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9527 08           	ex af,af
 295+ 9528 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9529 18 8B            jr 3B
 297+ 952B
 298+ 952B              ; --------------------
 299+ 952B
 300+ 952B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 952D CD B1 96     1 call PreviousScan
 302+ 9530 10 FB            djnz 1B
 303+ 9532 22 D6 88     	ld (Posicion_actual),hl
 304+ 9535 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9536 C9           	ret
 306+ 9537
 307+ 9537              ; --------------------
 308+ 9537
 309+ 9537 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9539 CD A2 96     1 call NextScan
 311+ 953C 10 FB            djnz 1B
 312+ 953E 22 D6 88     	ld (Posicion_actual),hl
 313+ 9541 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9542 C9           	ret
 315+ 9543
 316+ 9543              ; --------------------
 317+ 9543              ;
 318+ 9543              ;	22/01/23
 319+ 9543              ;
 320+ 9543              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9543              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9543              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9543
 324+ 9543
 325+ 9543              Modificaccionne
 326+ 9543
 327+ 9543 3A E8 88     	ld a,(Cuad_objeto)
 328+ 9546 FE 02        	cp 2
 329+ 9548 CC 2B 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 954B DC 2B 95         call c,Modifica_Pos_actual
 331+ 954E C8           	ret z
 332+ 954F CD 37 95         call Modifica_Pos_actual2
 333+ 9552 C9               ret
 334+ 9553
 335+ 9553              ; *************************************************************************************************************************************************************************************************
 336+ 9553              ;
 337+ 9553              ;	13/8/22
 338+ 9553              ;
 339+ 9553              ;	Inicializacion
 340+ 9553              ;
 341+ 9553              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9553              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9553              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9553              ;
 345+ 9553              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9553              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9553              ;	_ desaparece/aparece.
 348+ 9553
 349+ 9553              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9553              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9553              ;
 352+ 9553              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9553              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9553              ; 		   [E] ="0"
 355+ 9553
 356+ 9553              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9553
 358+ 9553 CD B5 99     Inicializacion call calcula_tercio
 359+ 9556 28 36        	jr z,primit
 360+ 9558 E6 02        	and 2
 361+ 955A 20 07        	jr nz,segmit
 362+ 955C 7D           	ld a,l
 363+ 955D FE 7F        	cp $7f
 364+ 955F 38 2D        	jr c,primit
 365+ 9561 28 2B        	jr z,primit
 366+ 9563 CD C0 95     segmit call column
 367+ 9566 38 13        	jr c,tercuad
 368+ 9568 3E 04        cuarcuad ld a,4
 369+ 956A 32 E8 88     	ld (Cuad_objeto),a
 370+ 956D 21 20 48     	ld hl,$4820
 371+ 9570 22 12 89     	ld (Limite_horizontal),hl
 372+ 9573 21 14 89     	ld hl,Limite_vertical
 373+ 9576 36 0D        	ld (hl),$0d
 374+ 9578 08           	ex af,af
 375+ 9579 18 3C        	jr 1F
 376+ 957B              tercuad
 377+ 957B 3E 03        	ld a,3
 378+ 957D 32 E8 88     	ld (Cuad_objeto),a
 379+ 9580 21 20 48     	ld hl,$4820
 380+ 9583 22 12 89     	ld (Limite_horizontal),hl
 381+ 9586 21 14 89     	ld hl,Limite_vertical
 382+ 9589 36 12        	ld (hl),$12
 383+ 958B 08           	ex af,af
 384+ 958C 18 29        	jr 1F
 385+ 958E CD C0 95     primit call column
 386+ 9591 38 13        	jr c, primcuad
 387+ 9593              segcuad
 388+ 9593 3E 02        	ld a,2
 389+ 9595 32 E8 88     	ld (Cuad_objeto),a
 390+ 9598 21 C0 4F     	ld hl,$4fc0
 391+ 959B 22 12 89     	ld (Limite_horizontal),hl
 392+ 959E 21 14 89     	ld hl,Limite_vertical
 393+ 95A1 36 0D        	ld (hl),$0d
 394+ 95A3 08           	ex af,af
 395+ 95A4 18 11        	jr 1F
 396+ 95A6              primcuad
 397+ 95A6 3E 01        	ld a,1
 398+ 95A8 32 E8 88     	ld (Cuad_objeto),a
 399+ 95AB 21 C0 4F     	ld hl,$4fc0
 400+ 95AE 22 12 89     	ld (Limite_horizontal),hl
 401+ 95B1 21 14 89     	ld hl,Limite_vertical
 402+ 95B4 36 12        	ld (hl),$12
 403+ 95B6 08           	ex af,af
 404+ 95B7 CD 4C 9D     1 call Genera_coordenadas
 405+ 95BA 21 04 89     	ld hl,Ctrl_0
 406+ 95BD CB EE        	set 5,(hl)
 407+ 95BF C9           	ret
 408+ 95C0
 409+ 95C0              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95C0
 411+ 95C0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95C0              ;
 413+ 95C0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95C0
 415+ 95C0 7D           column ld a,l
 416+ 95C1 E6 1F        	and $1f
 417+ 95C3 FE 10         	cp $10
 418+ 95C5 C9            	ret
 419+ 95C6
 420+ 95C6              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95C6              ;
 422+ 95C6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95C6              ;
 424+ 95C6              ; 14/12/22
 425+ 95C6              ;
 426+ 95C6              ;	Modifica: A y BC.
 427+ 95C6
 428+ 95C6 3A E8 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95C9 E6 01        	and 1
 430+ 95CB 28 17        	jr z,1F
 431+ 95CD
 432+ 95CD              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95CD
 434+ 95CD 3A DA 88     	ld a,(Coordenada_X)
 435+ 95D0 47           	ld b,a
 436+ 95D1 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95D2 79           	ld a,c
 438+ 95D3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95D4 38 08        	jr c,2F
 440+ 95D6 47           	ld b,a
 441+ 95D7 79           	ld a,c
 442+ 95D8 90           	sub b
 443+ 95D9 32 11 89     	ld (Columnas),a
 444+ 95DC 18 1B        	jr 4F
 445+ 95DE 79           2 ld a,c
 446+ 95DF 32 11 89     	ld (Columnas),a
 447+ 95E2 18 15        	jr 4F
 448+ 95E4
 449+ 95E4              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95E4
 451+ 95E4 3A DA 88     1 ld a,(Coordenada_X)
 452+ 95E7 81           	add c
 453+ 95E8 3D           	dec a
 454+ 95E9 D6 1F        	sub $1f
 455+ 95EB 38 08        	jr c,3F
 456+ 95ED 47           	ld b,a
 457+ 95EE 79           	ld a,c
 458+ 95EF 90           	sub b
 459+ 95F0 32 11 89     	ld (Columnas),a
 460+ 95F3 18 04        	jr 4F
 461+ 95F5 79           3 ld a,c
 462+ 95F6 32 11 89     	ld (Columnas),a
 463+ 95F9 D9           4 exx
 464+ 95FA 4F           	ld c,a
 465+ 95FB D9           	exx
 466+ 95FC C9            ret
 467+ 95FD
 468+ 95FD              ; --------------------------------------------------------------------------------------------------------------------
 469+ 95FD              ;
 470+ 95FD              ;   19/7/23
 471+ 95FD              ;
 472+ 95FD              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 95FD              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 95FD              ;
 475+ 95FD              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 95FD              ;			HL e IY Contienen (Puntero_objeto).
 477+ 95FD              ;
 478+ 95FD              ;	DESTRUYE: HL,B Y A.
 479+ 95FD
 480+ 95FD 3A E8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9600 FE 02        	cp 2
 482+ 9602 38 18        	jr c,1F
 483+ 9604 28 16        	jr z,1F
 484+ 9606 E6 01        	and 1
 485+ 9608 28 0D        	jr z,3F
 486+ 960A
 487+ 960A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 960A
 489+ 960A CD 50 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 960D
 491+ 960D 7D           9 ld a,l
 492+ 960E E6 1F        	and $1f
 493+ 9610 28 2A        	jr z,7F
 494+ 9612 2B           	dec hl
 495+ 9613 10 F8        	djnz 9B
 496+ 9615 18 25        	jr 7F
 497+ 9617
 498+ 9617              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 9617
 500+ 9617 2A D6 88     3 ld hl,(Posicion_actual)
 501+ 961A 18 20        	jr 7F
 502+ 961C
 503+ 961C 28 14        1 jr z,2F
 504+ 961E
 505+ 961E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 961E
 507+ 961E CD 50 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9621
 509+ 9621 7D           4 ld a,l
 510+ 9622 E6 1F        	and $1f
 511+ 9624 28 03        	jr z,6F
 512+ 9626 2B           	dec hl
 513+ 9627 10 F8        	djnz 4B
 514+ 9629 06 0F        6 ld b,15
 515+ 962B CD B1 96     5 call PreviousScan
 516+ 962E 10 FB        	djnz 5B
 517+ 9630 18 0A        	jr 7F
 518+ 9632
 519+ 9632              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9632
 521+ 9632 CD 50 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 9635 06 0F        	ld b,15
 523+ 9637 CD B1 96     8 call PreviousScan
 524+ 963A 10 FB        	djnz 8B
 525+ 963C
 526+ 963C E5           7 push hl
 527+ 963D DD E1        	pop ix
 528+ 963F
 529+ 963F 2A D8 88     	ld hl,(Puntero_objeto)
 530+ 9642 E5           	push hl
 531+ 9643 FD E1        	pop iy
 532+ 9645
 533+ 9645              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 9645
 535+ 9645 3A 04 89     	ld a,(Ctrl_0)
 536+ 9648 CB 77        	bit 6,a
 537+ 964A C8           	ret z
 538+ 964B
 539+ 964B              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 964B              ; _ entidad / Amadeus´.
 541+ 964B
 542+ 964B DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 964F
 544+ 964F C9           	ret
 545+ 9650
 546+ 9650              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9650              ;
 548+ 9650              ;	2/1/23
 549+ 9650              ;
 550+ 9650              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9650              ;
 552+ 9650              ;	Tras esta rutina tenemos:
 553+ 9650              ;
 554+ 9650              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9650              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9650              ;
 557+ 9650              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9650
 559+ 9650 2A D6 88     Operandos ld hl,(Posicion_actual)
 560+ 9653 3A 11 89     	ld a,(Columnas)
 561+ 9656 3D           	dec a
 562+ 9657 20 01        	jr nz,1F
 563+ 9659 3C           	inc a
 564+ 965A 47           1 ld b,a
 565+ 965B C9           	ret
 566+ 965C
 567+ 965C              ; --------------------------------------------------------------------------------------------------------------------
 568+ 965C              ;
 569+ 965C              ;	3/1/23
 570+ 965C              ;
 571+ 965C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 965C              ;
 573+ 965C              ;	Destruye: A,B,HL y DE.
 574+ 965C
 575+ 965C              Define_rutina_de_impresion
 576+ 965C
 577+ 965C 3A D5 88     	ld a,(Columns)
 578+ 965F 47           	ld b,a
 579+ 9660 3A 11 89     	ld a,(Columnas)
 580+ 9663 B8           	cp b
 581+ 9664 20 0D        	jr nz,2f
 582+ 9666
 583+ 9666              ;	La entidad se imprime entera.
 584+ 9666
 585+ 9666 21 85 97     	ld hl, Indice_entidades_completas
 586+ 9669 E6 01        	and 1
 587+ 966B 28 02        	jr z,1F
 588+ 966D
 589+ 966D 23           	inc hl
 590+ 966E 23           	inc hl
 591+ 966F
 592+ 966F CD 36 8D     1 call Extrae_address
 593+ 9672 C9           	ret		;	ret
 594+ 9673
 595+ 9673              ;	La entidad no se imprime entera en pantalla.
 596+ 9673
 597+ 9673 3A E8 88     2 ld a,(Cuad_objeto)
 598+ 9676 E6 01        	and 1
 599+ 9678 28 17        	jr z,3F
 600+ 967A
 601+ 967A              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 967A
 603+ 967A 21 89 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 967D 3A D5 88     4 ld a,(Columns)
 605+ 9680 E6 01        	and 1
 606+ 9682 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 9684
 608+ 9684 23           	inc hl
 609+ 9685 23           	inc hl
 610+ 9686
 611+ 9686 3A 11 89     	ld a,(Columnas)
 612+ 9689 E6 01        	and 1
 613+ 968B 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 968D
 615+ 968D 23           	inc hl
 616+ 968E 23           	inc hl
 617+ 968F
 618+ 968F 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9691
 620+ 9691 21 8F 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 9694 18 E7        	jr 4B
 622+ 9696
 623+ 9696              ; --------------------------------------------------------------------------------------------------------------------
 624+ 9696              ;
 625+ 9696              ;	Prepara_draw
 626+ 9696              ;
 627+ 9696              ;	Es una rutina de carga.
 628+ 9696              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 9696              ;
 630+ 9696              ;	FUNCIONAMIENTO:
 631+ 9696              ;
 632+ 9696              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 9696              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 9696              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 9696              ;
 636+ 9696              ;	DESTRUYE:
 637+ 9696              ;
 638+ 9696              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 9696
 640+ 9696 21 D4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 9699 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 969A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 969B 4E           	ld c,(hl)
 644+ 969C 2A D6 88     	ld hl,(Posicion_actual)
 645+ 969F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 96A1 C9           	ret
 647+ 96A2
 648+ 96A2              ;----------------------------------------------------------------------------------------------------------------
 649+ 96A2              ;
 650+ 96A2              ;	5/08/22
 651+ 96A2              ;
 652+ 96A2              ;   NextScan.
 653+ 96A2              ;
 654+ 96A2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 96A2              ;
 656+ 96A2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 96A2              ;
 658+ 96A2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 96A2              ;
 660+ 96A2              ;       DESTRUIDOS: AF y HL !!!
 661+ 96A2              ;
 662+ 96A2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 96A2              ;
 664+ 96A2
 665+ 96A2 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 96A3 7C               ld a,h
 667+ 96A4 E6 07            and 7
 668+ 96A6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 96A7
 670+ 96A7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 96A8 C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 96AA 6F               ld l,a
 673+ 96AB D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 96AC
 675+ 96AC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 96AD D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 96AF 67               ld h,a
 678+ 96B0 C9               ret
 679+ 96B1
 680+ 96B1              ;----------------------------------------------------------------------------------------------------------------
 681+ 96B1              ;
 682+ 96B1              ;	5/08/22
 683+ 96B1              ;
 684+ 96B1              ;   PreviousScan.
 685+ 96B1              ;
 686+ 96B1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96B1              ;
 688+ 96B1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96B1              ;
 690+ 96B1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96B1              ;
 692+ 96B1              ;       DESTRUIDOS: AF y HL !!!
 693+ 96B1              ;
 694+ 96B1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96B1              ;
 696+ 96B1
 697+ 96B1 7C           PreviousScan ld a,h
 698+ 96B2 25               dec h               ; Dec H.
 699+ 96B3 E6 07            and 7
 700+ 96B5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96B6
 702+ 96B6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96B7 D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96B9 6F               ld l,a
 705+ 96BA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96BB
 707+ 96BB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96BC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96BE 67               ld h,a
 710+ 96BF C9               ret
 711+ 96C0
 712+ 96C0              ; -----------------------------------------------------------------------------------
 713+ 96C0              ;
 714+ 96C0              ;	31/7/23
 715+ 96C0              ;
 716+ 96C0              ;	Rutina principal de pintado de entidades.
 717+ 96C0              ;	Extrae la foto del frame, (entidades).
 718+ 96C0
 719+ 96C0              Extrae_foto_entidades
 720+ 96C0
 721+ 96C0 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96C3 7E           	ld a,(hl)
 723+ 96C4 A7           	and a
 724+ 96C5 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96C6
 726+ 96C6              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96C6
 728+ 96C6 3A 23 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96C9 A7           	and a
 730+ 96CA C8           	ret z
 731+ 96CB
 732+ 96CB              ; -----------------------------------
 733+ 96CB
 734+ 96CB ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96CF 31 00 70     	ld sp,Album_de_fotos
 736+ 96D2
 737+ 96D2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96D4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96D5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96D6
 741+ 96D6 ED 73 2A 89  	ld (Stack_2),sp
 742+ 96DA ED 7B 28 89  	ld sp,(Stack)
 743+ 96DE
 744+ 96DE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96DE
 746+ 96DE 3E CD        	ld a,$cd
 747+ 96E0 32 E8 96     	ld (Imprime),a
 748+ 96E3 EB           	ex de,hl
 749+ 96E4 22 E9 96     	ld (Imprime+1),hl
 750+ 96E7 EB           	ex de,hl
 751+ 96E8
 752+ 96E8              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96E8
 754+ 96E8 00 00 00     Imprime db 0,0,0
 755+ 96EB
 756+ 96EB ED 73 28 89  	ld (Stack),sp
 757+ 96EF
 758+ 96EF 3A 23 89     	ld a,(Numero_de_malotes)
 759+ 96F2 3D           	dec a
 760+ 96F3 28 09        	jr z,1F
 761+ 96F5 32 23 89      	ld (Numero_de_malotes),a
 762+ 96F8
 763+ 96F8 ED 7B 2A 89  	ld sp,(Stack_2)
 764+ 96FC 18 D4        	jr 2B
 765+ 96FE
 766+ 96FE AF           1 xor a
 767+ 96FF 32 2A 89     	ld (Stack_2),a
 768+ 9702
 769+ 9702 C9           	ret
 770+ 9703
 771+ 9703              ; -----------------------------------------------------------------------------------
 772+ 9703              ;
 773+ 9703              ;	28/2/23
 774+ 9703              ;
 775+ 9703              ;	Pinta los disparos generados.
 776+ 9703
 777+ 9703              Extrae_foto_disparos
 778+ 9703
 779+ 9703 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 9706 7E               ld a,(hl)
 781+ 9707 A7               and a
 782+ 9708 C8               ret z
 783+ 9709
 784+ 9709 3A 37 89     	ld a,(Numero_de_disparotes)
 785+ 970C A7           	and a
 786+ 970D C8           	ret z
 787+ 970E ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9712 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 9715
 790+ 9715 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 9717 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 9718 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9719
 794+ 9719 ED 73 2A 89  	ld (Stack_2),sp
 795+ 971D ED 7B 28 89  	ld sp,(Stack)
 796+ 9721
 797+ 9721              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9721
 799+ 9721 3E CD        	ld a,$cd
 800+ 9723 32 2B 97     	ld (Imprime2),a
 801+ 9726 EB           	ex de,hl
 802+ 9727 22 2C 97     	ld (Imprime2+1),hl
 803+ 972A EB           	ex de,hl
 804+ 972B
 805+ 972B              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 972B
 807+ 972B 00 00 00     Imprime2 db 0,0,0
 808+ 972E
 809+ 972E 3A 37 89     	ld a,(Numero_de_disparotes)
 810+ 9731 3D           	dec a
 811+ 9732 28 09        	jr z,1F
 812+ 9734 32 37 89      	ld (Numero_de_disparotes),a
 813+ 9737
 814+ 9737 ED 7B 2A 89  	ld sp,(Stack_2)
 815+ 973B 18 D8        	jr 2B
 816+ 973D
 817+ 973D AF           1 xor a
 818+ 973E 32 2A 89     	ld (Stack_2),a
 819+ 9741 C9           	ret
 820+ 9742
 821+ 9742              ; -----------------------------------------------------------------------------------
 822+ 9742              ;
 823+ 9742              ;	4/9/23
 824+ 9742              ;
 825+ 9742              ;	Rutina principal de pintado de Amadeus.
 826+ 9742              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9742
 828+ 9742 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 9745 7E           	ld a,(hl)
 830+ 9746 A7           	and a
 831+ 9747 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 9748
 833+ 9748 3A 23 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 974B A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 974C C8           	ret z
 836+ 974D
 837+ 974D              ; -----------------------------------
 838+ 974D
 839+ 974D ED 73 28 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9751 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 9754
 842+ 9754 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 9756 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 9757 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 9758
 846+ 9758 ED 73 2A 89  	ld (Stack_2),sp
 847+ 975C ED 7B 28 89  	ld sp,(Stack)
 848+ 9760
 849+ 9760              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9760
 851+ 9760 3E CD        	ld a,$cd
 852+ 9762 32 6A 97     	ld (Imprime_Amadeus),a
 853+ 9765 EB           	ex de,hl
 854+ 9766 22 6B 97     	ld (Imprime_Amadeus+1),hl
 855+ 9769 EB           	ex de,hl
 856+ 976A
 857+ 976A              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 976A
 859+ 976A 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 976D
 861+ 976D ED 73 28 89  	ld (Stack),sp
 862+ 9771
 863+ 9771 3A 23 89     	ld a,(Numero_de_malotes)
 864+ 9774 3D           	dec a
 865+ 9775 28 09        	jr z,1F
 866+ 9777 32 23 89      	ld (Numero_de_malotes),a
 867+ 977A
 868+ 977A ED 7B 2A 89  	ld sp,(Stack_2)
 869+ 977E 18 D4        	jr 2B
 870+ 9780
 871+ 9780 AF           1 xor a
 872+ 9781 32 2A 89     	ld (Stack_2),a
 873+ 9784
 874+ 9784 C9           	ret
# file closed: Draw_XOR.asm
1823  9785              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9785              ;   índices de Rutinas de impresión.
   2+ 9785
   3+ 9785 95 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9787 C2 97            defw Pinta_Amadeus_3x2
   5+ 9789
   6+ 9789 18 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 978B B8 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 978D 6C 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 978F
  10+ 978F 42 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9791 46 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9793 FA 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9795
  14+ 9795
  15+ 9795              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9795              ;
  17+ 9795              ;   12/12/22
  18+ 9795              ;
  19+ 9795              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9795              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9795              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9795              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9795              ;
  24+ 9795              ;   Modifica: DE y HL.
  25+ 9795
  26+ 9795 ED 73 28 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9799 FD F9        	ld sp,iy
  28+ 979B 06 10            ld b,16
  29+ 979D D1           1 pop de
  30+ 979E 7B               ld a,e
  31+ 979F AE               xor (hl)
  32+ 97A0 77           	ld (hl),a
  33+ 97A1 23           	inc hl
  34+ 97A2 7A               ld a,d
  35+ 97A3 AE               xor (hl)
  36+ 97A4 77           	ld (hl),a
  37+ 97A5 2B           	dec hl
  38+ 97A6 24           	inc h
  39+ 97A7 7C               ld a,h
  40+ 97A8 E6 07            and 7
  41+ 97AA 20 0A            jr nz,2F
  42+ 97AC 7D               ld a,l
  43+ 97AD C6 20            add a,$20
  44+ 97AF 6F               ld l,a
  45+ 97B0 38 04            jr c,2F
  46+ 97B2 7C               ld a,h
  47+ 97B3 D6 08            sub 8
  48+ 97B5 67               ld h,a
  49+ 97B6 7C           2 ld a,h
  50+ 97B7 FE 58            cp $58
  51+ 97B9 28 02            jr z,3F
  52+ 97BB 10 E0            djnz 1B
  53+ 97BD ED 7B 28 89  3 ld sp,(Stack)
  54+ 97C1 C9           	ret
  55+ 97C2
  56+ 97C2 ED 73 28 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97C6 FD F9        	ld sp,iy
  58+ 97C8 06 08            ld b,8
  59+ 97CA D1           1 pop de
  60+ 97CB 7B               ld a,e
  61+ 97CC AE               xor (hl)
  62+ 97CD 77           	ld (hl),a
  63+ 97CE 23           	inc hl
  64+ 97CF 7A               ld a,d
  65+ 97D0 AE               xor (hl)
  66+ 97D1 77           	ld (hl),a
  67+ 97D2 23           	inc hl
  68+ 97D3 D1           	pop de
  69+ 97D4 7B               ld a,e
  70+ 97D5 AE               xor (hl)
  71+ 97D6 77           	ld (hl),a
  72+ 97D7 2B           	dec hl
  73+ 97D8 2B           	dec hl
  74+ 97D9 24           	inc h
  75+ 97DA 7C               ld a,h
  76+ 97DB E6 07            and 7
  77+ 97DD 20 0A            jr nz,2F
  78+ 97DF 7D               ld a,l
  79+ 97E0 C6 20            add a,$20
  80+ 97E2 6F               ld l,a
  81+ 97E3 38 04            jr c,2F
  82+ 97E5 7C               ld a,h
  83+ 97E6 D6 08            sub 8
  84+ 97E8 67               ld h,a
  85+ 97E9 7C           2 ld a,h
  86+ 97EA FE 58            cp $58
  87+ 97EC 28 25            jr z,4F
  88+ 97EE 7A               ld a,d
  89+ 97EF AE               xor (hl)
  90+ 97F0 77               ld (hl),a
  91+ 97F1 D1           	pop de
  92+ 97F2 23           	inc hl
  93+ 97F3 7B               ld a,e
  94+ 97F4 AE               xor (hl)
  95+ 97F5 77           	ld (hl),a
  96+ 97F6 23           	inc hl
  97+ 97F7 7A               ld a,d
  98+ 97F8 AE               xor (hl)
  99+ 97F9 77           	ld (hl),a
 100+ 97FA 2B           	dec hl
 101+ 97FB 2B           	dec hl
 102+ 97FC 24           	inc h
 103+ 97FD 7C               ld a,h
 104+ 97FE E6 07            and 7
 105+ 9800 20 0A            jr nz,3F
 106+ 9802 7D               ld a,l
 107+ 9803 C6 20            add a,$20
 108+ 9805 6F               ld l,a
 109+ 9806 38 04            jr c,3F
 110+ 9808 7C               ld a,h
 111+ 9809 D6 08            sub 8
 112+ 980B 67               ld h,a
 113+ 980C 7C           3 ld a,h
 114+ 980D FE 58            cp $58
 115+ 980F 28 02            jr z,4F
 116+ 9811 10 B7            djnz 1B
 117+ 9813 ED 7B 28 89  4 ld sp,(Stack)
 118+ 9817 C9           	ret
 119+ 9818
 120+ 9818              ; ---------------------------------------------------
 121+ 9818
 122+ 9818 ED 73 28 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 981C FD F9        	ld sp,iy
 124+ 981E
 125+ 981E              ; >>>
 126+ 981E
 127+ 981E 06 10            ld b,16
 128+ 9820 D1           1 pop de
 129+ 9821 7A           	ld a,d
 130+ 9822 AE           	xor (hl)
 131+ 9823 77           	ld (hl),a
 132+ 9824 24           	inc h
 133+ 9825 7C               ld a,h
 134+ 9826 E6 07            and 7
 135+ 9828 20 0C            jr nz,2F
 136+ 982A 7D               ld a,l
 137+ 982B C6 20            add a,$20
 138+ 982D 6F               ld l,a
 139+ 982E 38 06            jr c,2F
 140+ 9830 7C               ld a,h
 141+ 9831 D6 08            sub 8
 142+ 9833 67               ld h,a
 143+ 9834 18 00            jr 2F
 144+ 9836 7C           2 ld a,h
 145+ 9837 FE 58            cp $58
 146+ 9839 28 02            jr z,3F
 147+ 983B 10 E3            djnz 1B
 148+ 983D ED 7B 28 89  3 ld sp,(Stack)
 149+ 9841 C9           	ret
 150+ 9842
 151+ 9842 ED 73 28 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9846 FD F9        	ld sp,iy
 153+ 9848
 154+ 9848              ; >>>
 155+ 9848
 156+ 9848 06 10            ld b,16
 157+ 984A D1           1 pop de
 158+ 984B 7B           	ld a,e
 159+ 984C AE           	xor (hl)
 160+ 984D 77           	ld (hl),a
 161+ 984E 24           	inc h
 162+ 984F 7C               ld a,h
 163+ 9850 E6 07            and 7
 164+ 9852 20 0C            jr nz,2F
 165+ 9854 7D               ld a,l
 166+ 9855 C6 20            add a,$20
 167+ 9857 6F               ld l,a
 168+ 9858 38 06            jr c,2F
 169+ 985A 7C               ld a,h
 170+ 985B D6 08            sub 8
 171+ 985D 67               ld h,a
 172+ 985E 18 00            jr 2F
 173+ 9860 7C           2 ld a,h
 174+ 9861 FE 58            cp $58
 175+ 9863 28 02            jr z,3F
 176+ 9865 10 E3            djnz 1B
 177+ 9867 ED 7B 28 89  3 ld sp,(Stack)
 178+ 986B C9           	ret
 179+ 986C
 180+ 986C              ; ---------------------------------------------------
 181+ 986C
 182+ 986C ED 73 28 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9870 FD F9        	ld sp,iy
 184+ 9872 06 08            ld b,8
 185+ 9874 D1           1 pop de
 186+ 9875 7A           	ld a,d
 187+ 9876 AE           	xor (hl)
 188+ 9877 77           	ld (hl),a
 189+ 9878 23           	inc hl
 190+ 9879 D1           	pop de
 191+ 987A 7B           	ld a,e
 192+ 987B AE           	xor (hl)
 193+ 987C 77           	ld (hl),a
 194+ 987D 2B           	dec hl
 195+ 987E 24            	inc h
 196+ 987F 7C               ld a,h
 197+ 9880 E6 07            and 7
 198+ 9882 20 0A            jr nz,2F
 199+ 9884 7D               ld a,l
 200+ 9885 C6 20            add a,$20
 201+ 9887 6F               ld l,a
 202+ 9888 38 04            jr c,2F
 203+ 988A 7C               ld a,h
 204+ 988B D6 08            sub 8
 205+ 988D 67               ld h,a
 206+ 988E 7C           2 ld a,h
 207+ 988F FE 58            cp $58
 208+ 9891 28 20            jr z,4F
 209+ 9893 D1               pop de
 210+ 9894 7B           	ld a,e
 211+ 9895 AE           	xor (hl)
 212+ 9896 77           	ld (hl),a
 213+ 9897 23           	inc hl
 214+ 9898 7A           	ld a,d
 215+ 9899 AE           	xor (hl)
 216+ 989A 77           	ld (hl),a
 217+ 989B 2B           	dec hl
 218+ 989C 24           	inc h
 219+ 989D 7C               ld a,h
 220+ 989E E6 07            and 7
 221+ 98A0 20 0A            jr nz,3F
 222+ 98A2 7D               ld a,l
 223+ 98A3 C6 20            add a,$20
 224+ 98A5 6F               ld l,a
 225+ 98A6 38 04            jr c,3F
 226+ 98A8 7C               ld a,h
 227+ 98A9 D6 08            sub 8
 228+ 98AB 67               ld h,a
 229+ 98AC 7C           3 ld a,h
 230+ 98AD FE 58            cp $58
 231+ 98AF 28 02            jr z,4F
 232+ 98B1 10 C1            djnz 1B
 233+ 98B3 ED 7B 28 89  4 ld sp,(Stack)
 234+ 98B7 C9           	ret
 235+ 98B8
 236+ 98B8 ED 73 28 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98BC FD F9        	ld sp,iy
 238+ 98BE 06 08            ld b,8
 239+ 98C0 D1           1 pop de
 240+ 98C1 D1           	pop de
 241+ 98C2 7B           	ld a,e
 242+ 98C3 AE           	xor (hl)
 243+ 98C4 77           	ld (hl),a
 244+ 98C5 24            	inc h
 245+ 98C6 7C               ld a,h
 246+ 98C7 E6 07            and 7
 247+ 98C9 20 0A            jr nz,2F
 248+ 98CB 7D               ld a,l
 249+ 98CC C6 20            add a,$20
 250+ 98CE 6F               ld l,a
 251+ 98CF 38 04            jr c,2F
 252+ 98D1 7C               ld a,h
 253+ 98D2 D6 08            sub 8
 254+ 98D4 67               ld h,a
 255+ 98D5 7C           2 ld a,h
 256+ 98D6 FE 58            cp $58
 257+ 98D8 28 1B            jr z,4F
 258+ 98DA D1               pop de
 259+ 98DB 7A           	ld a,d
 260+ 98DC AE           	xor (hl)
 261+ 98DD 77           	ld (hl),a
 262+ 98DE 24           	inc h
 263+ 98DF 7C               ld a,h
 264+ 98E0 E6 07            and 7
 265+ 98E2 20 0A            jr nz,3F
 266+ 98E4 7D               ld a,l
 267+ 98E5 C6 20            add a,$20
 268+ 98E7 6F               ld l,a
 269+ 98E8 38 04            jr c,3F
 270+ 98EA 7C               ld a,h
 271+ 98EB D6 08            sub 8
 272+ 98ED 67               ld h,a
 273+ 98EE 7C           3 ld a,h
 274+ 98EF FE 58            cp $58
 275+ 98F1 28 02            jr z,4F
 276+ 98F3 10 CB            djnz 1B
 277+ 98F5 ED 7B 28 89  4 ld sp,(Stack)
 278+ 98F9 C9           	ret
 279+ 98FA
 280+ 98FA ED 73 28 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98FE FD F9        	ld sp,iy
 282+ 9900 06 08            ld b,8
 283+ 9902 D1           1 pop de
 284+ 9903 7B           	ld a,e
 285+ 9904 AE           	xor (hl)
 286+ 9905 77           	ld (hl),a
 287+ 9906 23           	inc hl
 288+ 9907 7A           	ld a,d
 289+ 9908 AE           	xor (hl)
 290+ 9909 77           	ld (hl),a
 291+ 990A 2B           	dec hl
 292+ 990B 24             	inc h
 293+ 990C 7C               ld a,h
 294+ 990D E6 07            and 7
 295+ 990F 20 0A            jr nz,2F
 296+ 9911 7D               ld a,l
 297+ 9912 C6 20            add a,$20
 298+ 9914 6F               ld l,a
 299+ 9915 38 04            jr c,2F
 300+ 9917 7C               ld a,h
 301+ 9918 D6 08            sub 8
 302+ 991A 67               ld h,a
 303+ 991B 7C           2 ld a,h
 304+ 991C FE 58            cp $58
 305+ 991E 28 21            jr z,4F
 306+ 9920 D1               pop de
 307+ 9921 7A           	ld a,d
 308+ 9922 AE           	xor (hl)
 309+ 9923 77           	ld (hl),a
 310+ 9924 23           	inc hl
 311+ 9925 D1               pop de
 312+ 9926 7B           	ld a,e
 313+ 9927 AE           	xor (hl)
 314+ 9928 77           	ld (hl),a
 315+ 9929 2B           	dec hl
 316+ 992A 24           	inc h
 317+ 992B 7C               ld a,h
 318+ 992C E6 07            and 7
 319+ 992E 20 0A            jr nz,3F
 320+ 9930 7D               ld a,l
 321+ 9931 C6 20            add a,$20
 322+ 9933 6F               ld l,a
 323+ 9934 38 04            jr c,3F
 324+ 9936 7C               ld a,h
 325+ 9937 D6 08            sub 8
 326+ 9939 67               ld h,a
 327+ 993A 7C           3 ld a,h
 328+ 993B FE 58            cp $58
 329+ 993D 28 02            jr z,4F
 330+ 993F 10 C1            djnz 1B
 331+ 9941 ED 7B 28 89  4 ld sp,(Stack)
 332+ 9945 C9           	ret
 333+ 9946
 334+ 9946 ED 73 28 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 994A FD F9        	ld sp,iy
 336+ 994C 06 08            ld b,8
 337+ 994E D1           1 pop de
 338+ 994F 7B           	ld a,e
 339+ 9950 AE           	xor (hl)
 340+ 9951 77           	ld (hl),a
 341+ 9952 24            	inc h
 342+ 9953 7C               ld a,h
 343+ 9954 E6 07            and 7
 344+ 9956 20 0A            jr nz,2F
 345+ 9958 7D               ld a,l
 346+ 9959 C6 20            add a,$20
 347+ 995B 6F               ld l,a
 348+ 995C 38 04            jr c,2F
 349+ 995E 7C               ld a,h
 350+ 995F D6 08            sub 8
 351+ 9961 67               ld h,a
 352+ 9962 7C           2 ld a,h
 353+ 9963 FE 58            cp $58
 354+ 9965 28 1C            jr z,4F
 355+ 9967 D1               pop de
 356+ 9968 7A           	ld a,d
 357+ 9969 AE           	xor (hl)
 358+ 996A 77           	ld (hl),a
 359+ 996B 24           	inc h
 360+ 996C 7C               ld a,h
 361+ 996D E6 07            and 7
 362+ 996F 20 0A            jr nz,3F
 363+ 9971 7D               ld a,l
 364+ 9972 C6 20            add a,$20
 365+ 9974 6F               ld l,a
 366+ 9975 38 04            jr c,3F
 367+ 9977 7C               ld a,h
 368+ 9978 D6 08            sub 8
 369+ 997A 67               ld h,a
 370+ 997B 7C           3 ld a,h
 371+ 997C FE 58            cp $58
 372+ 997E 28 03            jr z,4F
 373+ 9980 D1               pop de
 374+ 9981 10 CB            djnz 1B
 375+ 9983 ED 7B 28 89  4 ld sp,(Stack)
 376+ 9987 C9           	ret
 377+ 9988
 378+ 9988              ; ---------------------------------------------------
 379+ 9988              ;
 380+ 9988              ;   27/02/23
 381+ 9988              ;
 382+ 9988              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9988              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9988              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9988
 386+ 9988 ED 73 28 89  Pinta_Disparo ld (Stack),sp
 387+ 998C FD F9            ld sp,iy
 388+ 998E 06 03            ld b,3
 389+ 9990 D1           1 pop de
 390+ 9991 7B               ld a,e
 391+ 9992 AE               xor (hl)
 392+ 9993 77               ld (hl),a
 393+ 9994 23               inc hl
 394+ 9995 7A               ld a,d
 395+ 9996 AE               xor (hl)
 396+ 9997 77               ld (hl),a
 397+ 9998 2B               dec hl
 398+ 9999
 399+ 9999 24               inc h
 400+ 999A 7C               ld a,h
 401+ 999B E6 07            and 7
 402+ 999D 20 0A            jr nz,2F
 403+ 999F 7D               ld a,l
 404+ 99A0 C6 20            add a,$20
 405+ 99A2 6F               ld l,a
 406+ 99A3 38 04            jr c,2F
 407+ 99A5 7C               ld a,h
 408+ 99A6 D6 08            sub 8
 409+ 99A8 67               ld h,a
 410+ 99A9 7C           2 ld a,h
 411+ 99AA FE 58            cp $58
 412+ 99AC 28 02            jr z,3F
 413+ 99AE
 414+ 99AE 10 E0            djnz 1B
 415+ 99B0 ED 7B 28 89  3 ld sp,(Stack)
 416+ 99B4 C9               ret
 417+ 99B5
# file closed: Rutinas_de_impresion_sprites.asm
1824  99B5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99B5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99B5              ;
   3+ 99B5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99B5              ;
   5+ 99B5              ; *****************************************************************************************************************************************************************************************
   6+ 99B5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99B5
   8+ 99B5 7C           calcula_tercio ld a,h
   9+ 99B6 E6 18        	and $18
  10+ 99B8 CB 2F        	sra a
  11+ 99BA CB 2F        	sra a
  12+ 99BC CB 2F        	sra a
  13+ 99BE C9           	ret
  14+ 99BF
# file closed: calcula_tercio.asm
1825  99BF              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99BF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99BF              ;
   3+ 99BF              ;
   4+ 99BF              ;	CLS.
   5+ 99BF              ;
   6+ 99BF              ;	Limpia la pantalla y define sus atributos.
   7+ 99BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99BF              ;
   9+ 99BF              ;	COLORES: 0 ..... NEGRO
  10+ 99BF              ;    		 1 ..... AZUL
  11+ 99BF              ; 			 2 ..... ROJO
  12+ 99BF              ;			 3 ..... MAGENTA
  13+ 99BF              ; 			 4 ..... VERDE
  14+ 99BF              ; 			 5 ..... CIAN
  15+ 99BF              ;			 6 ..... AMARILLO
  16+ 99BF              ; 			 7 ..... BLANCO
  17+ 99BF              ;
  18+ 99BF              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99BF              ;
  20+ 99BF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99BF
  22+ 99BF
  23+ 99BF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99C2 11 01 40     	LD DE,$4001
  25+ 99C5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99C8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99CA ED B0        	LDIR
  28+ 99CC 01 FF 02     	LD BC,767
  29+ 99CF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99D0 ED B0        	LDIR
  31+ 99D2 C9           	ret
  32+ 99D3
# file closed: Cls.asm
1826  99D3              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D3              ; ******************************************************************************************************************************************************************************************
   2+ 99D3              ;
   3+ 99D3              ;   20/05/23
   4+ 99D3              ;
   5+ 99D3              ;	Recompone_posicion_inicio
   6+ 99D3              ;
   7+ 99D3              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99D3              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99D3              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99D3              ;	_ a una u otra rutina.
  11+ 99D3
  12+ 99D3              Recompone_posicion_inicio
  13+ 99D3
  14+ 99D3 2A E6 88     	ld hl,(Posicion_inicio)
  15+ 99D6 7D           	ld a,l
  16+ 99D7 E6 1F        	and $1f
  17+ 99D9 28 16        	jr z,1F
  18+ 99DB
  19+ 99DB FE 1F        	cp $1f
  20+ 99DD 28 0D        	jr z,3F
  21+ 99DF
  22+ 99DF 21 15 89     	ld hl,Ctrl_2
  23+ 99E2 CB C6        	set 0,(hl)
  24+ 99E4 2A D8 88     	ld hl,(Puntero_objeto)
  25+ 99E7 22 18 89     	ld (Repone_puntero_objeto),hl
  26+ 99EA 18 08        	jr 2F
  27+ 99EC
  28+ 99EC CD 99 9B     3 call Mov_left
  29+ 99EF 18 03        	jr 2F
  30+ 99F1
  31+ 99F1 CD 7B 9A     1 call Mov_right
  32+ 99F4 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99F7 22 D8 88     	ld (Puntero_objeto),hl
  34+ 99FA C9           	ret
  35+ 99FB
  36+ 99FB              ; ******************************************************************************************************************************************************************************************
  37+ 99FB              ;
  38+ 99FB              ;   27/05/23
  39+ 99FB              ;
  40+ 99FB              ;	Mov_down
  41+ 99FB              ;
  42+ 99FB              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99FB              ;
  44+ 99FB              ;
  45+ 99FB              Mov_down
  46+ 99FB
  47+ 99FB CD 69 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99FE              ;																	; _ repone (Puntero_objeto).
  49+ 99FE 21 04 89     	ld hl,Ctrl_0
  50+ 9A01 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A03              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A03              ; 																	; _ en el caso de que no lo haya.
  53+ 9A03 3A EC 88     	ld a,(Vel_down)
  54+ 9A06 47           	ld b,a
  55+ 9A07 2A D6 88         ld hl,(Posicion_actual)
  56+ 9A0A CD B5 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A0D E6 02        	and 2
  58+ 9A0F 28 1B        	jr z,1F
  59+ 9A11
  60+ 9A11              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A11              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A11
  63+ 9A11 7C           	ld a,h
  64+ 9A12 FE 57        	cp $57
  65+ 9A14 20 16        	jr nz,1F
  66+ 9A16
  67+ 9A16 7D           	ld a,l
  68+ 9A17 C6 20        	add $20
  69+ 9A19 30 11        	jr nc,1F
  70+ 9A1B
  71+ 9A1B              ; ------------------------------
  72+ 9A1B              ;
  73+ 9A1B              ;	28/12/15
  74+ 9A1B
  75+ 9A1B              ;	call Reaparece_arriba
  76+ 9A1B CD 26 9D     	call Reinicio
  77+ 9A1E
  78+ 9A1E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9A1E              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  80+ 9A1E
  81+ 9A1E 3A 36 89     	ld a,(Ctrl_3)
  82+ 9A21 CB 5F        	bit 3,a
  83+ 9A23 20 0F        	jr nz,3F
  84+ 9A25              ;	bit 2,a
  85+ 9A25              ;	jr nz,3F
  86+ 9A25
  87+ 9A25              ;	ld a,(Ctrl_2)
  88+ 9A25              ;	bit 5,a
  89+ 9A25              ;	jr z,3F
  90+ 9A25
  91+ 9A25              ;	res 5,a
  92+ 9A25              ;	ld (Ctrl_2),a
  93+ 9A25
  94+ 9A25 21 36 89     	ld hl,Ctrl_3
  95+ 9A28              ;	res 1,(hl)
  96+ 9A28 CB D6        	set 2,(hl)												; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  97+ 9A2A 18 08        	jr 3F
  98+ 9A2C              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  99+ 9A2C              ;															; _a la siguiente entidad como "Entidad_guía".
 100+ 9A2C              ; ------------------------------
 101+ 9A2C
 102+ 9A2C CD A2 96     1 call NextScan
 103+ 9A2F 22 D6 88     	ld (Posicion_actual),hl
 104+ 9A32 10 D6            djnz 2B
 105+ 9A34 CD 4C 9D     3 call Genera_coordenadas
 106+ 9A37 C9           	ret
 107+ 9A38
 108+ 9A38              ; ******************************************************************************************************************************************************************************************
 109+ 9A38              ;
 110+ 9A38              ;   27/05/23
 111+ 9A38              ;
 112+ 9A38              ;	Mov_up
 113+ 9A38              ;
 114+ 9A38              ; 	Mueve el Sprite hacia arriba.
 115+ 9A38              ;
 116+ 9A38              ;
 117+ 9A38              Mov_up
 118+ 9A38
 119+ 9A38 CD 69 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 120+ 9A3B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 121+ 9A3B 21 04 89     	ld hl,Ctrl_0
 122+ 9A3E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 123+ 9A40              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 124+ 9A40              ; 																		; _ en el caso de que no lo haya.
 125+ 9A40 3A EB 88     	ld a,(Vel_up)
 126+ 9A43 47           	ld b,a
 127+ 9A44 2A D6 88     	ld hl,(Posicion_actual)
 128+ 9A47 CD B5 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 129+ 9A4A A7           	and a
 130+ 9A4B 20 10        	jr nz,1F
 131+ 9A4D
 132+ 9A4D              ; Nos encontramos en el 1er tercio de pantalla.
 133+ 9A4D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 134+ 9A4D
 135+ 9A4D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 136+ 9A4E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 137+ 9A50 20 0B            jr nz,1F
 138+ 9A52 7D               ld a,l
 139+ 9A53 D6 20            sub $20
 140+ 9A55 30 06            jr nc,1F
 141+ 9A57 25               dec h
 142+ 9A58
 143+ 9A58              ; -----------------------------
 144+ 9A58 CD 07 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 145+ 9A5B              ;	call Reinicio
 146+ 9A5B              ; -----------------------------
 147+ 9A5B
 148+ 9A5B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 149+ 9A5D CD B1 96     1 call PreviousScan
 150+ 9A60 22 D6 88     	ld (Posicion_actual),hl
 151+ 9A63 10 E2            djnz 3B
 152+ 9A65 CD 4C 9D     2 call Genera_coordenadas
 153+ 9A68 C9           	ret
 154+ 9A69
 155+ 9A69              ; -----------------------------
 156+ 9A69              ;
 157+ 9A69              ;	27/5/23
 158+ 9A69              ;
 159+ 9A69              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 160+ 9A69              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 161+ 9A69              ;
 162+ 9A69              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 163+ 9A69              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 164+ 9A69              ;
 165+ 9A69              ;	Modifica: A y (Puntero_objeto).
 166+ 9A69
 167+ 9A69 3A 15 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 168+ 9A6C CB 47        	bit 0,a
 169+ 9A6E C8           	ret z
 170+ 9A6F CB 87        	res 0,a
 171+ 9A71 32 15 89     	ld (Ctrl_2),a
 172+ 9A74 2A 18 89     	ld hl,(Repone_puntero_objeto)
 173+ 9A77 22 D8 88     	ld (Puntero_objeto),hl
 174+ 9A7A C9           	ret
 175+ 9A7B
 176+ 9A7B              ; ******************************************************************************************************************************************************************************************
 177+ 9A7B              ;
 178+ 9A7B              ;	19/10/22
 179+ 9A7B              ;
 180+ 9A7B              ;	Mov_right.
 181+ 9A7B              ;
 182+ 9A7B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 183+ 9A7B              ;
 184+ 9A7B
 185+ 9A7B 21 04 89     Mov_right ld hl,Ctrl_0
 186+ 9A7E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 187+ 9A80              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 188+ 9A80              ; 																	; _ en el caso de que no lo haya.
 189+ 9A80 3A 04 89     	ld a,(Ctrl_0)
 190+ 9A83 CB 77        	bit 6,a
 191+ 9A85 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 192+ 9A87
 193+ 9A87 CD B5 9C     	call Stop_Amadeus_right
 194+ 9A8A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 195+ 9A8B 18 4D        	jr 8F
 196+ 9A8D
 197+ 9A8D 3A DA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 198+ 9A90 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 199+ 9A92 20 46        	jr nz,8F
 200+ 9A94
 201+ 9A94 3A DC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 202+ 9A97 A7           	and a 															; _[3] para continuar con el DESPLZ.
 203+ 9A98 28 40        	jr z,8F
 204+ 9A9A
 205+ 9A9A              ; ---------- ---------- ----------
 206+ 9A9A              ;
 207+ 9A9A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 208+ 9A9A
 209+ 9A9A 3A EA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 210+ 9A9D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 211+ 9A9F 28 11        	jr z,1F
 212+ 9AA1 38 06        	jr c,6F
 213+ 9AA3 FE 04        	cp 4
 214+ 9AA5 28 14        	jr z,7F
 215+ 9AA7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 216+ 9AA9
 217+ 9AA9              ; ---------- ---------- ----------
 218+ 9AA9              ;
 219+ 9AA9              ; Perfiles de velocidad
 220+ 9AA9              ;
 221+ 9AA9
 222+ 9AA9 3A DC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 223+ 9AAC FE FE        	cp $fe
 224+ 9AAE 20 2A        	jr nz,8F
 225+ 9AB0 18 10        	jr 3F
 226+ 9AB2 3A DC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 227+ 9AB5 FE FD        	cp $fd
 228+ 9AB7 20 21        	jr nz,8F
 229+ 9AB9 18 07        	jr 3F
 230+ 9ABB 3A DC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 231+ 9ABE FE FB        	cp $fb
 232+ 9AC0 20 18        	jr nz,8F
 233+ 9AC2
 234+ 9AC2              ; ---------- ---------- ----------
 235+ 9AC2
 236+ 9AC2              3
 237+ 9AC2 CD F5 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 238+ 9AC5              ;	call Reinicio
 239+ 9AC5
 240+ 9AC5              ; ---------- ---------- ----------
 241+ 9AC5              ;
 242+ 9AC5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 243+ 9AC5
 244+ 9AC5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 245+ 9AC7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 246+ 9AC8 CD E1 9A     	call DESPLZ_DER
 247+ 9ACB C1           	pop bc
 248+ 9ACC 10 F9        	djnz 5B
 249+ 9ACE 2A D6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 250+ 9AD1 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 251+ 9AD2 22 D6 88     	ld (Posicion_actual),hl
 252+ 9AD5 CD 4C 9D     	call Genera_coordenadas
 253+ 9AD8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 254+ 9ADA
 255+ 9ADA              ; ---------- ---------- ----------
 256+ 9ADA
 257+ 9ADA 2A D6 88     8 ld hl,(Posicion_actual)
 258+ 9ADD CD E1 9A     	call DESPLZ_DER
 259+ 9AE0 C9           2 ret
 260+ 9AE1
 261+ 9AE1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 262+ 9AE1              ;
 263+ 9AE1              ;	22/9/22
 264+ 9AE1              ;
 265+ 9AE1
 266+ 9AE1 CD F0 9A     DESPLZ_DER call Desplaza_derecha
 267+ 9AE4 CD 3C 9B         call modifica_parametros_1er_DESPLZ_2
 268+ 9AE7 CD 65 9B         call Ciclo_completo
 269+ 9AEA 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 270+ 9AED CB FE        	set 7,(hl)
 271+ 9AEF C9           	ret
 272+ 9AF0
 273+ 9AF0              ; ******************************************************************************************************************************************************************************************
 274+ 9AF0              ;	15/02/23
 275+ 9AF0              ;
 276+ 9AF0
 277+ 9AF0 3A EA 88     Desplaza_derecha ld a,(Vel_right)
 278+ 9AF3 47           	ld b,a
 279+ 9AF4 2A E2 88     	ld hl,(Puntero_DESPLZ_der)
 280+ 9AF7 23           1 inc hl
 281+ 9AF8 23           	inc hl
 282+ 9AF9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 283+ 9AFB 22 E2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 284+ 9AFE CD 36 8D     	call Extrae_address
 285+ 9B01 22 D8 88     	ld (Puntero_objeto),hl
 286+ 9B04
 287+ 9B04              ; Modifica (Puntero_DESPLZ_izq).
 288+ 9B04
 289+ 9B04              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 290+ 9B04              ; Cuántos movimientos hemos hecho ??
 291+ 9B04              ; DE contiene (Puntero_DESPLZ_der).
 292+ 9B04
 293+ 9B04 2A DE 88     7 ld hl,(Indice_Sprite_der)
 294+ 9B07 EB           	ex de,hl
 295+ 9B08 A7           	and a
 296+ 9B09 ED 52        	sbc hl,de
 297+ 9B0B CB 3D        	srl l
 298+ 9B0D 3E 08        6 ld a,8
 299+ 9B0F 95           	sub l
 300+ 9B10 30 1E        	jr nc,3F
 301+ 9B12
 302+ 9B12              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 303+ 9B12              ; B="0".
 304+ 9B12
 305+ 9B12 04           4 inc b
 306+ 9B13 3C           	inc a
 307+ 9B14 20 FC        	jr nz,4B
 308+ 9B16 78           	ld a,b
 309+ 9B17 08           	ex af,af
 310+ 9B18 2A DE 88     	ld hl,(Indice_Sprite_der)
 311+ 9B1B 23           5 inc hl
 312+ 9B1C 23           	inc hl
 313+ 9B1D 10 FC        	djnz 5B
 314+ 9B1F 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 315+ 9B22 CD 36 8D     	call Extrae_address
 316+ 9B25 22 D8 88     	ld (Puntero_objeto),hl
 317+ 9B28
 318+ 9B28              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 319+ 9B28              ; _(Posicion_actual).
 320+ 9B28
 321+ 9B28 21 D6 88     	ld hl,Posicion_actual
 322+ 9B2B 34           	inc (hl)
 323+ 9B2C 08               ex af,af
 324+ 9B2D 6F           	ld l,a
 325+ 9B2E 18 DD        	jr 6B
 326+ 9B30
 327+ 9B30              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 328+ 9B30
 329+ 9B30 47           3 ld b,a
 330+ 9B31 2A E0 88     	ld hl,(Indice_Sprite_izq)
 331+ 9B34 23           2 inc hl
 332+ 9B35 23           	inc hl
 333+ 9B36 10 FC        	djnz 2B
 334+ 9B38 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 335+ 9B3B C9           8 ret
 336+ 9B3C
 337+ 9B3C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 338+ 9B3C              ;
 339+ 9B3C              ;	24/7/22
 340+ 9B3C              ;
 341+ 9B3C              ;	modifica_parametros_1er_DESPLZ_2
 342+ 9B3C              ;
 343+ 9B3C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 344+ 9B3C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 345+ 9B3C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 346+ 9B3C
 347+ 9B3C 3A DC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 348+ 9B3F A7           	and a
 349+ 9B40 20 1F        	jr nz,1F
 350+ 9B42 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 351+ 9B44 32 DC 88         ld (CTRL_DESPLZ),a
 352+ 9B47
 353+ 9B47 21 D5 88     	ld hl,Columns
 354+ 9B4A 34           	inc (hl)
 355+ 9B4B 3A E8 88     	ld a,(Cuad_objeto)
 356+ 9B4E E6 01        	and 1
 357+ 9B50 28 0F        	jr z,1F
 358+ 9B52 2A D6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 359+ 9B55 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 360+ 9B56 22 D6 88     	ld (Posicion_actual),hl
 361+ 9B59 CD 4C 9D     	call Genera_coordenadas
 362+ 9B5C CD C1 9C     	call Inc_CTRL_DESPLZ
 363+ 9B5F 18 03        	jr 2F
 364+ 9B61 CD C1 9C     1 call Inc_CTRL_DESPLZ
 365+ 9B64 C9           2 ret
 366+ 9B65
 367+ 9B65              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 368+ 9B65              ;
 369+ 9B65              ;	24/7/22
 370+ 9B65              ;
 371+ 9B65              ;	Ciclo_completo.
 372+ 9B65              ;
 373+ 9B65              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 374+ 9B65              ;
 375+ 9B65              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 376+ 9B65              ; 	Decrementamos (Columns).
 377+ 9B65              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 378+ 9B65              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 379+ 9B65
 380+ 9B65
 381+ 9B65 3A DC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 382+ 9B68 FE FF        	cp $ff
 383+ 9B6A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 384+ 9B6C E6 F0        	and $f0
 385+ 9B6E 20 28        	jr nz,3F
 386+ 9B70
 387+ 9B70              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 388+ 9B70
 389+ 9B70 3A DC 88     	ld a,(CTRL_DESPLZ)
 390+ 9B73 47           	ld b,a
 391+ 9B74 3E F8        	ld a,$f8
 392+ 9B76 80           	add b
 393+ 9B77 32 DC 88     	ld (CTRL_DESPLZ),a
 394+ 9B7A 18 1C        	jr 3F
 395+ 9B7C 21 D5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 396+ 9B7F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 397+ 9B80 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 398+ 9B81 32 DC 88     	ld (CTRL_DESPLZ),a
 399+ 9B84 3A E8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 400+ 9B87 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 401+ 9B89 20 0A        	jr nz,2F
 402+ 9B8B 2A D6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 403+ 9B8E 23           	inc hl
 404+ 9B8F 22 D6 88     	ld (Posicion_actual),hl
 405+ 9B92 CD 4C 9D     	call Genera_coordenadas
 406+ 9B95
 407+ 9B95              ; Inicia el puntero de Sprite.
 408+ 9B95
 409+ 9B95 CD 4D 8D     2 call Inicia_puntero_objeto_der
 410+ 9B98 C9           3 ret
 411+ 9B99
 412+ 9B99              ; ******************************************************************************************************************************************************************************************
 413+ 9B99              ;
 414+ 9B99              ;	15/02/23
 415+ 9B99              ;
 416+ 9B99              ;	Mov_left.
 417+ 9B99              ;
 418+ 9B99              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 419+ 9B99              ;
 420+ 9B99              Mov_left
 421+ 9B99
 422+ 9B99 21 04 89     	ld hl,Ctrl_0
 423+ 9B9C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 424+ 9B9E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 425+ 9B9E              ; 																	; _ en el caso de que no lo haya.
 426+ 9B9E 3A 04 89     	ld a,(Ctrl_0)
 427+ 9BA1 CB 77        	bit 6,a
 428+ 9BA3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 429+ 9BA5
 430+ 9BA5 CD BB 9C     	call Stop_Amadeus_left
 431+ 9BA8 C8           	ret z
 432+ 9BA9 20 4A        	jr nz,8F
 433+ 9BAB
 434+ 9BAB 3A DA 88     11 ld a,(Coordenada_X)
 435+ 9BAE A7           	and a
 436+ 9BAF 20 44        	jr nz,8F
 437+ 9BB1
 438+ 9BB1 3A DC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 439+ 9BB4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 440+ 9BB5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 441+ 9BB7
 442+ 9BB7              ; ---------- ---------- ----------
 443+ 9BB7
 444+ 9BB7 3A E9 88     	ld a,(Vel_left)
 445+ 9BBA FE 02        	cp 2
 446+ 9BBC 28 0F        	jr z,1F
 447+ 9BBE 38 04        	jr c,6F
 448+ 9BC0 FE 04        	cp 4
 449+ 9BC2 28 12        	jr z,7F
 450+ 9BC4
 451+ 9BC4              ; ---------- ---------- ----------
 452+ 9BC4
 453+ 9BC4 3A DC 88     6 ld a,(CTRL_DESPLZ)
 454+ 9BC7 FE F8        	cp $f8
 455+ 9BC9 20 2A        	jr nz,8F
 456+ 9BCB 18 10        	jr 4F
 457+ 9BCD 3A DC 88     1 ld a,(CTRL_DESPLZ)
 458+ 9BD0 FE F9        	cp $f9
 459+ 9BD2 20 21        	jr nz,8F
 460+ 9BD4 18 07        	jr 4F
 461+ 9BD6 3A DC 88     7 ld a,(CTRL_DESPLZ)
 462+ 9BD9 FE FB        	cp $fb
 463+ 9BDB 20 18        	jr nz,8F
 464+ 9BDD
 465+ 9BDD              ; ---------- ---------- ----------
 466+ 9BDD
 467+ 9BDD              4
 468+ 9BDD CD E3 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 469+ 9BE0              ;	call Reinicio
 470+ 9BE0
 471+ 9BE0              ; ---------- ---------- ----------
 472+ 9BE0
 473+ 9BE0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 474+ 9BE2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 475+ 9BE3
 476+ 9BE3              ;	ld hl,(Indice_Sprite_izq)
 477+ 9BE3              ;	ld (Puntero_DESPLZ_izq),hl
 478+ 9BE3
 479+ 9BE3 CD FC 9B     	call DESPLZ_IZQ
 480+ 9BE6 C1           	pop bc
 481+ 9BE7 10 F9        	djnz 5B
 482+ 9BE9 2A D6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 483+ 9BEC 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 484+ 9BED 22 D6 88     	ld (Posicion_actual),hl
 485+ 9BF0 CD 4C 9D     	call Genera_coordenadas
 486+ 9BF3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 487+ 9BF5
 488+ 9BF5              ; ---------- ---------- ----------
 489+ 9BF5
 490+ 9BF5              ; Movemos, no hay recolocación.
 491+ 9BF5
 492+ 9BF5 2A D6 88     8 ld hl,(Posicion_actual)
 493+ 9BF8 CD FC 9B     	call DESPLZ_IZQ
 494+ 9BFB C9           2 ret
 495+ 9BFC
 496+ 9BFC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 497+ 9BFC              ;
 498+ 9BFC              ;	22/9/22
 499+ 9BFC
 500+ 9BFC              DESPLZ_IZQ
 501+ 9BFC
 502+ 9BFC CD 0B 9C     	call Desplaza_izquierda
 503+ 9BFF CD 57 9C         call modifica_parametros_1er_DESPLZ
 504+ 9C02 CD 7F 9C     	call Ciclo_completo_2
 505+ 9C05 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 506+ 9C08 CB BE        	res 7,(hl)
 507+ 9C0A C9           	ret
 508+ 9C0B
 509+ 9C0B              Desplaza_izquierda
 510+ 9C0B
 511+ 9C0B 3A E9 88     	ld a,(Vel_left)
 512+ 9C0E 47           	ld b,a
 513+ 9C0F 2A E4 88     	ld hl,(Puntero_DESPLZ_izq)
 514+ 9C12 23           1 inc hl
 515+ 9C13 23           	inc hl
 516+ 9C14 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 517+ 9C16 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 518+ 9C19 CD 36 8D     	call Extrae_address
 519+ 9C1C 22 D8 88     	ld (Puntero_objeto),hl
 520+ 9C1F
 521+ 9C1F              ; Modifica (Puntero_DESPLZ_der).
 522+ 9C1F
 523+ 9C1F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 524+ 9C1F              ; Cuántos movimientos hemos hecho ??
 525+ 9C1F              ; DE contiene (Puntero_DESPLZ_izq).
 526+ 9C1F
 527+ 9C1F 2A E0 88     7 ld hl,(Indice_Sprite_izq)
 528+ 9C22 EB           	ex de,hl
 529+ 9C23 A7           	and a
 530+ 9C24 ED 52        	sbc hl,de
 531+ 9C26 CB 3D        	srl l
 532+ 9C28 3E 08        6 ld a,8
 533+ 9C2A 95           	sub l
 534+ 9C2B 30 1E        	jr nc,3F
 535+ 9C2D
 536+ 9C2D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 537+ 9C2D              ; B="0".
 538+ 9C2D
 539+ 9C2D 04           4 inc b
 540+ 9C2E 3C           	inc a
 541+ 9C2F 20 FC        	jr nz,4B
 542+ 9C31 78           	ld a,b
 543+ 9C32 08           	ex af,af
 544+ 9C33 2A E0 88     	ld hl,(Indice_Sprite_izq)
 545+ 9C36 23           5 inc hl
 546+ 9C37 23           	inc hl
 547+ 9C38 10 FC        	djnz 5B
 548+ 9C3A 22 E4 88     	ld (Puntero_DESPLZ_izq),hl
 549+ 9C3D CD 36 8D     	call Extrae_address
 550+ 9C40 22 D8 88     	ld (Puntero_objeto),hl
 551+ 9C43
 552+ 9C43              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 553+ 9C43              ; _(Posicion_actual).
 554+ 9C43
 555+ 9C43 21 D6 88     	ld hl,Posicion_actual
 556+ 9C46 35           	dec (hl)
 557+ 9C47 08           	ex af,af
 558+ 9C48 6F           	ld l,a
 559+ 9C49 18 DD        	jr 6B
 560+ 9C4B
 561+ 9C4B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 562+ 9C4B
 563+ 9C4B 47           3 ld b,a
 564+ 9C4C 2A DE 88     	ld hl,(Indice_Sprite_der)
 565+ 9C4F 23           2 inc hl
 566+ 9C50 23           	inc hl
 567+ 9C51 10 FC        	djnz 2B
 568+ 9C53 22 E2 88     	ld (Puntero_DESPLZ_der),hl
 569+ 9C56 C9           8 ret
 570+ 9C57
 571+ 9C57              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C57              ;
 573+ 9C57              ;	modifica_parametros_1er_DESPLZ
 574+ 9C57              ;
 575+ 9C57              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 576+ 9C57              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 577+ 9C57              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 578+ 9C57
 579+ 9C57 3A DC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 580+ 9C5A A7           	and a
 581+ 9C5B 20 1E        	jr nz,1F
 582+ 9C5D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 583+ 9C5E 32 DC 88         ld (CTRL_DESPLZ),a
 584+ 9C61 21 D5 88     	ld hl,Columns
 585+ 9C64 34           	inc (hl)
 586+ 9C65 3A E8 88     	ld a,(Cuad_objeto)
 587+ 9C68 E6 01        	and 1
 588+ 9C6A 20 0F        	jr nz,1F
 589+ 9C6C 2A D6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 590+ 9C6F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 591+ 9C70 22 D6 88     	ld (Posicion_actual),hl
 592+ 9C73 CD 4C 9D     	call Genera_coordenadas
 593+ 9C76 CD D2 9C     	call Dec_CTRL_DESPLZ
 594+ 9C79 18 03        	jr 2F
 595+ 9C7B CD D2 9C     1 call Dec_CTRL_DESPLZ
 596+ 9C7E C9           2 ret
 597+ 9C7F
 598+ 9C7F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 599+ 9C7F
 600+ 9C7F 3A DC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 601+ 9C82 FE F7        	cp $f7
 602+ 9C84 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 603+ 9C86 30 2C        	jr nc,3F
 604+ 9C88
 605+ 9C88              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 606+ 9C88
 607+ 9C88 06 00        	ld b,0
 608+ 9C8A 04           4 inc b
 609+ 9C8B 3C           	inc a
 610+ 9C8C FE F7        	cp $f7
 611+ 9C8E 20 FA        	jr nz,4B
 612+ 9C90 3E FF        	ld a,$ff
 613+ 9C92 90           	sub b
 614+ 9C93 32 DC 88     	ld (CTRL_DESPLZ),a
 615+ 9C96 18 1C        	jr 3F
 616+ 9C98
 617+ 9C98              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 618+ 9C98
 619+ 9C98 21 D5 88     1 ld hl,Columns
 620+ 9C9B 35           	dec (hl)
 621+ 9C9C AF           	xor a
 622+ 9C9D 32 DC 88     	ld (CTRL_DESPLZ),a
 623+ 9CA0 3A E8 88     	ld a,(Cuad_objeto)
 624+ 9CA3 E6 01        	and 1
 625+ 9CA5 28 0A        	jr z,2F
 626+ 9CA7 2A D6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 627+ 9CAA 2B           	dec hl
 628+ 9CAB 22 D6 88     	ld (Posicion_actual),hl
 629+ 9CAE CD 4C 9D     	call Genera_coordenadas
 630+ 9CB1
 631+ 9CB1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 632+ 9CB1
 633+ 9CB1 CD 60 8D     2 call Inicia_puntero_objeto_izq
 634+ 9CB4 C9           3 ret
 635+ 9CB5
 636+ 9CB5              ; ---------- ---------- ---------- ---------- ---------- ----------
 637+ 9CB5              ;
 638+ 9CB5              ;	19/10/22
 639+ 9CB5              ;
 640+ 9CB5              ;	(cp 29) para un Amadeus de 3 Columns.
 641+ 9CB5              ;	(cp 30)   ""  ""    ""     2 Columns.
 642+ 9CB5
 643+ 9CB5 3A DA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 644+ 9CB8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 645+ 9CBA C9           	ret
 646+ 9CBB
 647+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 648+ 9CBB              ;
 649+ 9CBB              ;	19/10/22
 650+ 9CBB              ;
 651+ 9CBB              ;	(cp 2) para un Amadeus de 3 Columns.
 652+ 9CBB              ;	(cp 1)   ""  ""    ""     2 Columns.
 653+ 9CBB
 654+ 9CBB 3A DA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 655+ 9CBE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 656+ 9CC0 C9           	ret
 657+ 9CC1
 658+ 9CC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 659+ 9CC1              ;
 660+ 9CC1              ;	24/7/22
 661+ 9CC1              ;
 662+ 9CC1              ;	Inc_CTRL_DESPLZ
 663+ 9CC1              ;
 664+ 9CC1              ;
 665+ 9CC1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 666+ 9CC1
 667+ 9CC1 21 DC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 668+ 9CC4 3A EA 88     	ld a,(Vel_right)
 669+ 9CC7 A7           	and a
 670+ 9CC8 28 06        	jr z,1F
 671+ 9CCA 47           	ld b,a
 672+ 9CCB 34           3 inc (hl)
 673+ 9CCC 10 FD        	djnz 3B
 674+ 9CCE 18 01        	jr 2F
 675+ 9CD0 34           1 inc (hl)
 676+ 9CD1 C9           2 ret
 677+ 9CD2
 678+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 679+ 9CD2              ;
 680+ 9CD2              ;	5/2/23
 681+ 9CD2              ;
 682+ 9CD2              ;	Dec_CTRL_DESPLZ
 683+ 9CD2              ;
 684+ 9CD2              ;
 685+ 9CD2              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 686+ 9CD2
 687+ 9CD2 21 DC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 688+ 9CD5 3A E9 88     	ld a,(Vel_left)
 689+ 9CD8 A7           	and a
 690+ 9CD9 28 06        	jr z,1F
 691+ 9CDB 47           	ld b,a
 692+ 9CDC 35           3 dec (hl)
 693+ 9CDD 10 FD        	djnz 3B
 694+ 9CDF 18 01        	jr 2F
 695+ 9CE1 35           1 dec (hl)
 696+ 9CE2 C9           2 ret
 697+ 9CE3
 698+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 699+ 9CE3
 700+ 9CE3 2A D6 88     Reaparece_derecha ld hl,(Posicion_actual)
 701+ 9CE6 01 1F 00     	ld bc,31
 702+ 9CE9 A7           	and a
 703+ 9CEA ED 4A        	adc hl,bc
 704+ 9CEC 22 D6 88     	ld (Posicion_actual),hl
 705+ 9CEF 21 04 89     	ld hl,Ctrl_0														; $xxx1
 706+ 9CF2 CB C6        	set 0,(hl)
 707+ 9CF4 C9           	ret
 708+ 9CF5
 709+ 9CF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 710+ 9CF5
 711+ 9CF5 2A D6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 712+ 9CF8 01 1F 00     	ld bc,31
 713+ 9CFB A7           	and a
 714+ 9CFC ED 42        	sbc hl,bc
 715+ 9CFE 22 D6 88     	ld (Posicion_actual),hl 											; $xx1x
 716+ 9D01 21 04 89     	ld hl,Ctrl_0
 717+ 9D04 CB CE        	set 1,(hl)
 718+ 9D06 C9           	ret
 719+ 9D07
 720+ 9D07              ; ---------- ---------- ---------- ---------- ---------- ----------
 721+ 9D07
 722+ 9D07 24           Reaparece_abajo inc h
 723+ 9D08 01 E0 17     	ld bc,$17e0
 724+ 9D0B A7           	and a
 725+ 9D0C ED 4A        	adc hl,bc
 726+ 9D0E 22 D6 88     	ld (Posicion_actual),hl
 727+ 9D11 21 04 89     	ld hl,Ctrl_0
 728+ 9D14 CB D6        	set 2,(hl)
 729+ 9D16 C9           	ret
 730+ 9D17
 731+ 9D17              ; ---------- ---------- ---------- ---------- ---------- ----------
 732+ 9D17
 733+ 9D17 01 E0 17     Reaparece_arriba ld bc,$17e0
 734+ 9D1A A7           	and a
 735+ 9D1B ED 42        	sbc hl,bc
 736+ 9D1D 22 D6 88     	ld (Posicion_actual),hl
 737+ 9D20 21 04 89     	ld hl,Ctrl_0
 738+ 9D23 CB DE        	set 3,(hl)
 739+ 9D25 C9           	ret
 740+ 9D26
 741+ 9D26              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 742+ 9D26              ;
 743+ 9D26              ;	15/07/23
 744+ 9D26
 745+ 9D26              Reinicio
 746+ 9D26
 747+ 9D26              ; Vamos a reiniciar los punteros y variables de movimiento.
 748+ 9D26
 749+ 9D26 AF           	xor a
 750+ 9D27 21 09 89     	ld hl,Puntero_indice_mov_bucle
 751+ 9D2A CD 48 9D     	call Limpia_contenido_hl
 752+ 9D2D
 753+ 9D2D 21 D6 88     	ld hl,Posicion_actual
 754+ 9D30 CD 48 9D     	call Limpia_contenido_hl
 755+ 9D33
 756+ 9D33 CD 84 A0     	call Inicializa_Puntero_indice_mov
 757+ 9D36 CD 08 A0     	call Inicia_Puntero_mov
 758+ 9D39
 759+ 9D39 21 0B 89     	ld hl,Incrementa_puntero
 760+ 9D3C 06 05        	ld b,5
 761+ 9D3E 77           1 ld (hl),a
 762+ 9D3F 23           	inc hl
 763+ 9D40 10 FC        	djnz 1B
 764+ 9D42
 765+ 9D42 21 15 89     	ld hl,Ctrl_2
 766+ 9D45 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 767+ 9D47
 768+ 9D47 C9           	ret
 769+ 9D48
 770+ 9D48 77           Limpia_contenido_hl	ld (hl),a
 771+ 9D49 23           	inc hl
 772+ 9D4A 77           	ld (hl),a
 773+ 9D4B C9           	ret
 774+ 9D4C
 775+ 9D4C
# file closed: Direcciones.asm
1827  9D4C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D4C              ; ------------------------------------------------------------------------
   2+ 9D4C              ;
   3+ 9D4C              ;	02/04/23
   4+ 9D4C              ;
   5+ 9D4C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D4C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D4C              ;
   8+ 9D4C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D4C              ;
  10+ 9D4C              ;	Modifica: A,BC y DE.
  11+ 9D4C
  12+ 9D4C C5           Genera_coordenadas push bc
  13+ 9D4D E5           	push hl
  14+ 9D4E D5           	push de
  15+ 9D4F
  16+ 9D4F 2A D6 88     	ld hl,(Posicion_actual)
  17+ 9D52
  18+ 9D52 7D           	ld a,l
  19+ 9D53 E6 1F        	and $1f
  20+ 9D55 32 DA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D58
  22+ 9D58 CD B5 99     	call calcula_tercio
  23+ 9D5B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D5C
  25+ 9D5C 1E 00        	ld e,0
  26+ 9D5E 7D           	ld a,l
  27+ 9D5F E6 E0        	and $e0
  28+ 9D61 28 01        	jr z,1F
  29+ 9D63 04           	inc b
  30+ 9D64
  31+ 9D64 04           1 inc b
  32+ 9D65 05           	dec b
  33+ 9D66 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D68              ;														; _ , salimos.
  35+ 9D68 1C           3 inc e
  36+ 9D69 D6 20        	sub 32
  37+ 9D6B 20 FB        	jr nz,3B
  38+ 9D6D 10 F5        	djnz 1B
  39+ 9D6F
  40+ 9D6F 7B           2 ld a,e
  41+ 9D70 32 DB 88     	ld (Coordenada_y),a
  42+ 9D73
  43+ 9D73 D1           	pop de
  44+ 9D74 E1           	pop hl
  45+ 9D75 C1           	pop bc
  46+ 9D76
  47+ 9D76 C9           	ret
  48+ 9D77
  49+ 9D77              ; ------------------------------------------------------------------------
  50+ 9D77              ;	28/05/23
  51+ 9D77              ;
  52+ 9D77              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D77              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D77              ;
  55+ 9D77              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D77              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D77              ;
  58+ 9D77              ;		DE="$120d"
  59+ 9D77              ;
  60+ 9D77              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D77              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D77              ;
  63+ 9D77              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D77
  65+ 9D77              ;	Modifica: A,BC y DE.
  66+ 9D77
  67+ 9D77
  68+ 9D77              Genera_coordenadas_disparo
  69+ 9D77
  70+ 9D77              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D77
  72+ 9D77 7D           	ld a,l
  73+ 9D78 E6 1F        	and $1f
  74+ 9D7A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D7B CD B5 99     	call calcula_tercio
  76+ 9D7E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D7F 1E 00        	ld e,0
  78+ 9D81 7D           	ld a,l
  79+ 9D82 E6 E0        	and $e0
  80+ 9D84 28 01        	jr z,1F
  81+ 9D86 04           	inc b
  82+ 9D87 1C           1 inc e
  83+ 9D88 D6 20        	sub 32
  84+ 9D8A 20 FB        	jr nz,1B
  85+ 9D8C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D8E C9           	ret
  87+ 9D8F
# file closed: Genera_coordenadas.asm
1828  9D8F              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D8F              ; Relojes y temporizaciones.
   2+ 9D8F
   3+ 9D8F              ; ------------------------------------------------------
   4+ 9D8F              ;
   5+ 9D8F              ;	16/7/23
   6+ 9D8F              ;
   7+ 9D8F              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D8F              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D8F              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D8F              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D8F              ;
  12+ 9D8F              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D8F              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D8F
  15+ 9D8F              ; Disparo_entidad db 1
  16+ 9D8F              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D8F              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D8F
  19+ 9D8F              Habilita_disparos
  20+ 9D8F
  21+ 9D8F 7E           	ld a,(hl)
  22+ 9D90 A7           	and a
  23+ 9D91 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D92
  25+ 9D92 EB           	ex de,hl
  26+ 9D93
  27+ 9D93 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D94 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D95
  30+ 9D95              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D95
  32+ 9D95 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D96 7E           	ld a,(hl)
  34+ 9D97 23           	inc hl
  35+ 9D98 77           	ld (hl),a
  36+ 9D99
  37+ 9D99 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D9A 3E 01        	ld a,1
  39+ 9D9C 77           	ld (hl),a
  40+ 9D9D C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1829  9D9E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D9E
   2+ 9D9E
   3+ 9D9E              ;   07/07/23
   4+ 9D9E              ;
   5+ 9D9E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D9E              ;
   7+ 9D9E              ;   Codificación:
   8+ 9D9E              ;
   9+ 9D9E              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D9E              ;
  11+ 9D9E              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D9E              ;
  13+ 9D9E              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D9E              ;
  15+ 9D9E              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D9E              ;
  17+ 9D9E              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D9E              ;                               ..... %01000010 Vel_up 4
  19+ 9D9E              ;                                               Vel_down 2
  20+ 9D9E              ;                               ..... $42
  21+ 9D9E              ;
  22+ 9D9E              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D9E              ;
  24+ 9D9E              ;                               ..... %01000010 Vel_left 4
  25+ 9D9E              ;                                               Vel_right 2
  26+ 9D9E              ;                               ..... $42
  27+ 9D9E              ;
  28+ 9D9E              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D9E              ;
  30+ 9D9E              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D9E              ;
  32+ 9D9E              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D9E              ;
  34+ 9D9E              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D9E              ;                                     $53
  36+ 9D9E              ;
  37+ 9D9E              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D9E              ;
  39+ 9D9E              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D9E              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D9E              ;
  42+ 9D9E              ;                       Arriba ..... $81
  43+ 9D9E              ;                       Arriba - izquierda ..... $a1
  44+ 9D9E              ;                       Arriba - derecha ..... $91
  45+ 9D9E              ;
  46+ 9D9E              ;                       Abajo ..... $41
  47+ 9D9E              ;                       Abajo - izquierda ..... $61
  48+ 9D9E              ;                       Abajo - derecha ..... $51
  49+ 9D9E              ;
  50+ 9D9E              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D9E              ;
  52+ 9D9E              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D9E              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D9E              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D9E              ;
  56+ 9D9E              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D9E              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D9E              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D9E              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D9E              ;
  61+ 9D9E              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D9E              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D9E              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D9E              ;
  65+ 9D9E              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D9E              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D9E              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D9E              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D9E
  70+ 9D9E              ; ----- ----- ----- ----- -----
  71+ 9D9E
  72+ 9D9E CA 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA0 D2 9D            defw F_1
  74+ 9DA2 DC 9D            defw F_2
  75+ 9DA4 E6 9D            defw Codo_abajo_derecha
  76+ 9DA6 1A 9E            defw Derecha_y_subiendo
  77+ 9DA8 24 9E            defw Derecha_y_subiendo_1
  78+ 9DAA 2E 9E            defw F_3
  79+ 9DAC 38 9E            defw F_4
  80+ 9DAE 42 9E            defw Derecha_y_bajando
  81+ 9DB0 4C 9E            defw Derecha_y_bajando_1
  82+ 9DB2 56 9E            defw Derecha_y_bajando_2
  83+ 9DB4 60 9E            defw Codo_derecha_abajo
  84+ 9DB6 90 9E            defw Codo_abajo_izq.
  85+ 9DB8 C4 9E            defw Izquierda_y_subiendo
  86+ 9DBA CE 9E            defw Izquierda_y_subiendo_1
  87+ 9DBC D8 9E            defw F_5
  88+ 9DBE E2 9E            defw F_6
  89+ 9DC0 EC 9E            defw Izquierda_y_bajando
  90+ 9DC2 F6 9E            defw Izquierda_y_bajando_1
  91+ 9DC4 00 9F            defw Izquierda_y_bajando_2
  92+ 9DC6 0A 9F            defw Codo_izquierda_abajo
  93+ 9DC8 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DCA
  95+ 9DCA 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DCE 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DD2
  98+ 9DD2 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DD6 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DDA 08 00
 100+ 9DDC 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE0 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DE4 0F FE
 102+ 9DE6
 103+ 9DE6 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DEA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DF2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DFA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DFE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E02 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E06 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E0A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E0E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E12 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E16 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E1A
 117+ 9E1A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E1E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E22 06 00
 119+ 9E24
 120+ 9E24 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E28 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E2C 02 00
 122+ 9E2E
 123+ 9E2E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E32 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E36 04 00
 125+ 9E38 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E3C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E40 08 00
 127+ 9E42
 128+ 9E42 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E46 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E4A 02 00
 130+ 9E4C
 131+ 9E4C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E50 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E54 06 00
 133+ 9E56
 134+ 9E56 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E5A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E5E 06 00
 136+ 9E60
 137+ 9E60              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E60
 139+ 9E60 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E64 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E68 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E6C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E74 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E7C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E80 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E84 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E88 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E8C 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E90
 152+ 9E90 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E94 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E98 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E9C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EA4 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EA8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EAC 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB0 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EB4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EB8 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EBC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC0 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EC4
 166+ 9EC4 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EC8 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ECC 06 00
 168+ 9ECE
 169+ 9ECE 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9ED2 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ED6 02 00
 171+ 9ED8
 172+ 9ED8 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EDC 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE0 04 00
 174+ 9EE2 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EE6 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EEA 08 00
 176+ 9EEC
 177+ 9EEC 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF0 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EF4 02 00
 179+ 9EF6
 180+ 9EF6 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EFA 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EFE 06 00
 182+ 9F00
 183+ 9F00 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F04 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F08 06 00
 185+ 9F0A
 186+ 9F0A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F0E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F12 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F16 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F1A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F1E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F22 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F26 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F2A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F2E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F32 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F36 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F3A
 199+ 9F3A              ; ----- ----- ----- ----- -----
 200+ 9F3A              ;
 201+ 9F3A              ;   28/12/23
 202+ 9F3A
 203+ 9F3A              Movimiento
 204+ 9F3A
 205+ 9F3A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F3A
 207+ 9F3A              ;    ld hl,(Posicion_actual)
 208+ 9F3A
 209+ 9F3A 3A 15 89         ld a,(Ctrl_2)
 210+ 9F3D CB 57            bit 2,a
 211+ 9F3F 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F41
 213+ 9F41 2A 07 89         ld hl,(Puntero_mov)
 214+ 9F44 7E               ld a,(hl)
 215+ 9F45
 216+ 9F45              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F45
 218+ 9F45              Inicia_desplazamiento.
 219+ 9F45
 220+ 9F45              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F45
 222+ 9F45 CD 45 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F48
 224+ 9F48              ; Iniciamos (Repetimos_mov).
 225+ 9F48
 226+ 9F48 7E               ld a,(hl)
 227+ 9F49 E6 0F            and $0f
 228+ 9F4B 32 0D 89         ld (Repetimos_desplazamiento),a
 229+ 9F4E 32 0E 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F51
 231+ 9F51              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F51
 233+ 9F51 23               inc hl
 234+ 9F52 7E               ld a,(hl)
 235+ 9F53 32 10 89         ld (Cola_de_desplazamiento),a
 236+ 9F56 2B               dec hl
 237+ 9F57
 238+ 9F57 21 15 89         ld hl,Ctrl_2
 239+ 9F5A CB D6            set 2,(hl)
 240+ 9F5C
 241+ 9F5C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F5C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F5C
 244+ 9F5C              Desplazamiento_iniciado
 245+ 9F5C
 246+ 9F5C CD 13 A0         call Aplica_desplazamiento
 247+ 9F5F
 248+ 9F5F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 249+ 9F5F
 250+ 9F5F 3A 36 89         ld a,(Ctrl_3)
 251+ 9F62 CB 57            bit 2,a
 252+ 9F64 C0               ret nz
 253+ 9F65
 254+ 9F65 3A 15 89         ld a,(Ctrl_2)
 255+ 9F68 CB 67            bit 4,a
 256+ 9F6A C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 257+ 9F6B
 258+ 9F6B 21 0D 89     3 ld hl,Repetimos_desplazamiento
 259+ 9F6E 35               dec (hl)
 260+ 9F6F C0               ret nz
 261+ 9F70
 262+ 9F70              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 263+ 9F70              ; Hay que volver a ejecutar este desplazamiento ???.
 264+ 9F70              ; Analiza (Cola_de_desplazamiento).
 265+ 9F70
 266+ 9F70 3A 10 89     Cola ld a,(Cola_de_desplazamiento)
 267+ 9F73 A7               and a
 268+ 9F74 CC 6E A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 269+ 9F77 28 30            jr z,Reinicia_el_movimiento
 270+ 9F79
 271+ 9F79 FE FF            cp $ff
 272+ 9F7B 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 273+ 9F7D
 274+ 9F7D FE FE            cp $fe
 275+ 9F7F CC EC 9F         call z,Fijamos_bucle
 276+ 9F82 28 25            jr z,Reinicia_el_movimiento
 277+ 9F84
 278+ 9F84 FE FD            cp $fd
 279+ 9F86 20 11            jr nz,1F
 280+ 9F88
 281+ 9F88              ; ---
 282+ 9F88              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 283+ 9F88
 284+ 9F88 3A 15 89         ld a,(Ctrl_2)
 285+ 9F8B CB 5F            bit 3,a
 286+ 9F8D 20 1A            jr nz,Reinicia_el_movimiento
 287+ 9F8F
 288+ 9F8F              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 289+ 9F8F
 290+ 9F8F 21 15 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 291+ 9F92 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 292+ 9F94
 293+ 9F94 CD FD 9F         call Inicia_Repetimos_movimiento
 294+ 9F97 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 295+ 9F99              ; ---
 296+ 9F99
 297+ 9F99 FE 01        1 cp 1
 298+ 9F9B CA D6 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 299+ 9F9E
 300+ 9F9E 3D               dec a
 301+ 9F9F 32 10 89         ld (Cola_de_desplazamiento),a
 302+ 9FA2
 303+ 9FA2 3A 0E 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 304+ 9FA5 32 0D 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 305+ 9FA8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 306+ 9FA8 C9               ret
 307+ 9FA9
 308+ 9FA9              Reinicia_el_movimiento
 309+ 9FA9
 310+ 9FA9 3A 15 89         ld a,(Ctrl_2)
 311+ 9FAC CB 5F            bit 3,a
 312+ 9FAE 28 1B            jr z,2F
 313+ 9FB0
 314+ 9FB0              ; (Cola_de_desplazamiento)="254".
 315+ 9FB0
 316+ 9FB0 21 0F 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 317+ 9FB3 35               dec (hl)
 318+ 9FB4 20 15            jr nz,2F
 319+ 9FB6
 320+ 9FB6              ; Fin de las repeticiones del último movimiento.
 321+ 9FB6
 322+ 9FB6 21 15 89         ld hl,Ctrl_2
 323+ 9FB9 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 324+ 9FBB
 325+ 9FBB 2A 07 89         ld hl,(Puntero_mov)
 326+ 9FBE 23               inc hl
 327+ 9FBF 23               inc hl
 328+ 9FC0 23               inc hl
 329+ 9FC1 22 07 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 330+ 9FC4              ;                                                               ; _ para ejecutar su mandato. :)
 331+ 9FC4 7E               ld a,(hl)
 332+ 9FC5 32 10 89         ld (Cola_de_desplazamiento),a
 333+ 9FC8
 334+ 9FC8 C3 70 9F         jp Cola
 335+ 9FCB
 336+ 9FCB CD 08 A0     2 call Inicia_Puntero_mov
 337+ 9FCE
 338+ 9FCE 21 15 89         ld hl,Ctrl_2
 339+ 9FD1 CB 96            res 2,(hl)
 340+ 9FD3
 341+ 9FD3 C3 3A 9F         jp Movimiento
 342+ 9FD6
 343+ 9FD6              Siguiente_desplazamiento
 344+ 9FD6
 345+ 9FD6              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 346+ 9FD6              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 347+ 9FD6
 348+ 9FD6 21 15 89         ld hl,Ctrl_2
 349+ 9FD9 CB 96            res 2,(hl)
 350+ 9FDB
 351+ 9FDB 2A 07 89         ld hl,(Puntero_mov)
 352+ 9FDE 23               inc hl
 353+ 9FDF 23               inc hl
 354+ 9FE0 22 07 89         ld (Puntero_mov),hl
 355+ 9FE3
 356+ 9FE3 7E               ld a,(hl)
 357+ 9FE4 A7               and a
 358+ 9FE5 CC 6E A0         call z,Incrementa_Puntero_indice_mov
 359+ 9FE8 CA A9 9F         jp z,Reinicia_el_movimiento
 360+ 9FEB
 361+ 9FEB C9               ret
 362+ 9FEC
 363+ 9FEC              ; Subrutinas -----------------------------------------
 364+ 9FEC              ; ---------- --------- --------- ---------- ----------
 365+ 9FEC              ;
 366+ 9FEC              ;   24/07/23
 367+ 9FEC              ;
 368+ 9FEC              ;   Fijamos_bucle
 369+ 9FEC              ;
 370+ 9FEC              ;
 371+ 9FEC
 372+ 9FEC              Fijamos_bucle
 373+ 9FEC
 374+ 9FEC 3A 0B 89         ld a,(Incrementa_puntero)
 375+ 9FEF 3C               inc a
 376+ 9FF0 32 0C 89         ld (Incrementa_puntero_backup),a
 377+ 9FF3
 378+ 9FF3 CD 6E A0         call Incrementa_Puntero_indice_mov
 379+ 9FF6 2A 05 89         ld hl,(Puntero_indice_mov)
 380+ 9FF9 22 09 89         ld (Puntero_indice_mov_bucle),hl
 381+ 9FFC C9               ret
 382+ 9FFD
 383+ 9FFD              ; ---------- --------- --------- ---------- ----------
 384+ 9FFD              ;
 385+ 9FFD              ;   07/7/23
 386+ 9FFD              ;
 387+ 9FFD              ;   Inicia_Repetimos_movimiento
 388+ 9FFD              ;
 389+ 9FFD              ;
 390+ 9FFD
 391+ 9FFD              Inicia_Repetimos_movimiento
 392+ 9FFD
 393+ 9FFD              ; Iniciamos (Repetimos_movimiento).
 394+ 9FFD
 395+ 9FFD DD 2A 07 89      ld ix,(Puntero_mov)
 396+ A001 DD 7E 02         ld a,(ix+2)
 397+ A004 32 0F 89         ld (Repetimos_movimiento),a
 398+ A007
 399+ A007 C9               ret
 400+ A008
 401+ A008              ; ---------- --------- --------- ---------- ----------
 402+ A008              ;
 403+ A008              ;   26/6/23
 404+ A008              ;
 405+ A008              ;   Inicia_Puntero_mov
 406+ A008              ;
 407+ A008              ;
 408+ A008
 409+ A008 2A 05 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 410+ A00B 5E               ld e,(hl)
 411+ A00C 23               inc hl
 412+ A00D 56               ld d,(hl)
 413+ A00E EB               ex de,hl
 414+ A00F 22 07 89         ld (Puntero_mov),hl
 415+ A012 C9               ret
 416+ A013
 417+ A013              ; ---------- --------- --------- ---------- ----------
 418+ A013              ;
 419+ A013              ;   27/06/23
 420+ A013              ;
 421+ A013              ;   Aplica_movimiento.
 422+ A013
 423+ A013              Aplica_desplazamiento
 424+ A013
 425+ A013              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 426+ A013
 427+ A013 2A 07 89         ld hl, (Puntero_mov)
 428+ A016
 429+ A016 7E               ld a,(hl)
 430+ A017 E6 F0            and $f0
 431+ A019 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 432+ A01A
 433+ A01A CB 7E            bit 7,(hl)
 434+ A01C 28 03            jr z,1F
 435+ A01E CD 38 9A         call Mov_up
 436+ A021 2A 07 89     1 ld hl, (Puntero_mov)
 437+ A024 CB 76            bit 6,(hl)
 438+ A026 28 09            jr z,2F
 439+ A028 CD FB 99         call Mov_down
 440+ A02B
 441+ A02B              ; Se ha aplicado reinicio ???
 442+ A02B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 443+ A02B
 444+ A02B 3A 36 89         ld a,(Ctrl_3)
 445+ A02E CB 57            bit 2,a
 446+ A030 C0               ret nz
 447+ A031
 448+ A031 2A 07 89     2 ld hl, (Puntero_mov)
 449+ A034 CB 6E            bit 5,(hl)
 450+ A036 28 03            jr z,3F
 451+ A038 CD 99 9B         call Mov_left
 452+ A03B 2A 07 89     3 ld hl, (Puntero_mov)
 453+ A03E CB 66            bit 4,(hl)
 454+ A040 C8               ret z
 455+ A041 CD 7B 9A         call Mov_right
 456+ A044 C9               ret
 457+ A045
 458+ A045              ; ---------- --------- --------- ---------- ----------
 459+ A045              ;
 460+ A045              ;   26/06/23
 461+ A045              ;
 462+ A045              ;   Ajusta_velocidad_desplazamiento.
 463+ A045
 464+ A045              Ajusta_velocidad_desplazamiento
 465+ A045
 466+ A045              ; 1er byte de la cadena de movimiento.
 467+ A045              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 468+ A045
 469+ A045 CD 63 A0         call Extrae_nibble_alto
 470+ A048
 471+ A048 32 EB 88         ld (Vel_up),a
 472+ A04B 79               ld a,c
 473+ A04C E6 0F            and $0f
 474+ A04E 32 EC 88         ld (Vel_down),a
 475+ A051
 476+ A051              ; Saltamos al 2º byte de la cadena de movimiento.
 477+ A051              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 478+ A051
 479+ A051 23               inc hl
 480+ A052 CD 63 A0         call Extrae_nibble_alto
 481+ A055
 482+ A055 32 E9 88         ld (Vel_left),a
 483+ A058 79               ld a,c
 484+ A059 E6 0F            and $0f
 485+ A05B 32 EA 88         ld (Vel_right),a
 486+ A05E
 487+ A05E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 488+ A05E
 489+ A05E 23               inc hl
 490+ A05F 22 07 89         ld (Puntero_mov),hl
 491+ A062 C9               ret
 492+ A063
 493+ A063 06 04        Extrae_nibble_alto ld b,4
 494+ A065 7E               ld a,(hl)
 495+ A066 4F               ld c,a
 496+ A067 E6 F0            and $f0
 497+ A069 CB 3F        1 srl a
 498+ A06B 10 FC            djnz 1B
 499+ A06D C9               ret
 500+ A06E
 501+ A06E              ; ---------- --------- --------- ---------- ----------
 502+ A06E              ;
 503+ A06E              ;   5/7/23
 504+ A06E              ;
 505+ A06E              ;   Incrementa_Puntero_indice_mov
 506+ A06E
 507+ A06E              Incrementa_Puntero_indice_mov
 508+ A06E
 509+ A06E 21 0B 89         ld hl,Incrementa_puntero
 510+ A071 34               inc (hl)
 511+ A072
 512+ A072 2A 05 89         ld hl,(Puntero_indice_mov)
 513+ A075 01 02 00         ld bc,2
 514+ A078 A7               and a
 515+ A079 09               add hl,bc
 516+ A07A 22 05 89         ld (Puntero_indice_mov),hl
 517+ A07D
 518+ A07D 7E               ld a,(hl)
 519+ A07E A7               and a
 520+ A07F
 521+ A07F              ;! STOP. Fin del patrón de movimiento de la entidad.
 522+ A07F
 523+ A07F              ;    jr z,$
 524+ A07F
 525+ A07F              ;! Reinicia el Patrón de movimiento.
 526+ A07F
 527+ A07F CC 84 A0         call z,Inicializa_Puntero_indice_mov
 528+ A082
 529+ A082 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 530+ A083
 531+ A083 C9               ret
 532+ A084
 533+ A084
 534+ A084              ; ---------- --------- --------- ---------- ----------
 535+ A084              ;
 536+ A084              ;   24/07/23
 537+ A084              ;
 538+ A084              ;   Inicializa_Puntero_indice_mov
 539+ A084
 540+ A084              Inicializa_Puntero_indice_mov
 541+ A084
 542+ A084              ; Existe etiqueta de bucle principal???
 543+ A084
 544+ A084 2A 09 89         ld hl,(Puntero_indice_mov_bucle)
 545+ A087 24               inc h
 546+ A088 25               dec h
 547+ A089 28 05            jr z,2F
 548+ A08B
 549+ A08B 22 05 89         ld (Puntero_indice_mov),hl
 550+ A08E 18 14            jr 3F
 551+ A090
 552+ A090              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 553+ A090
 554+ A090 3A 0B 89     2 ld a,(Incrementa_puntero)
 555+ A093 47               ld b,a
 556+ A094
 557+ A094 2A 05 89         ld hl,(Puntero_indice_mov)
 558+ A097 2B           1 dec hl
 559+ A098 2B               dec hl
 560+ A099 10 FC            djnz 1B
 561+ A09B 22 05 89         ld (Puntero_indice_mov),hl
 562+ A09E
 563+ A09E AF               xor a
 564+ A09F 32 0B 89         ld (Incrementa_puntero),a
 565+ A0A2 18 06            jr 4F
 566+ A0A4
 567+ A0A4 3A 0C 89     3 ld a,(Incrementa_puntero_backup)
 568+ A0A7 32 0B 89         ld (Incrementa_puntero),a
 569+ A0AA C9           4 ret
 570+ A0AB
 571+ A0AB
 572+ A0AB
# file closed: Patrones_de_mov.asm
1830  A0AB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0AB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0AB              ;
   3+ A0AB              ;	12/12/23
   4+ A0AB              ;
   5+ A0AB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0AB
   7+ A0AB              ;	ADC HL,SP	LD (addr),SP
   8+ A0AB              ;	ADD HL,SP	LD SP,(addr)
   9+ A0AB              ;	ADD IX,SP	LD SP,nn
  10+ A0AB              ; 	ADD IY,SP	LD SP,HL
  11+ A0AB              ;				LD SP,IX
  12+ A0AB              ;	DEC SP		LD SP,IY
  13+ A0AB
  14+ A0AB              ;	EX (SP),HL
  15+ A0AB              ;	EX (SP),IX
  16+ A0AB              ;	EX (SP),IY
  17+ A0AB
  18+ A0AB              ;	INC SP
  19+ A0AB
  20+ A0AB                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 ED 73 28 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 711A
  36+ 711A              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 711A
  38+ 711A 31 F4 88         ld sp,Variables_de_borrado+6
  39+ 711D
  40+ 711D E5               push hl
  41+ 711E DD E5            push ix
  42+ 7120 FD E5            push iy
  43+ 7122
  44+ 7122 31 00 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 7125 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 7127              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 7127
  48+ 7127 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 712A
  50+ 712A E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 712B DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 712D FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 712F
  54+ 712F              ; Disparo o entidad?
  55+ 712F
  56+ 712F 3A 17 89         ld a,(Ctrl_1)
  57+ 7132 CB 47            bit 0,a
  58+ 7134 28 05            jr z,2F
  59+ 7136
  60+ 7136 2A 30 89         ld hl,(Stack_snapshot_disparos)
  61+ 7139 18 0F            jr 4F
  62+ 713B
  63+ 713B              ; No es disparo. Entidad/Amadeus ????
  64+ 713B
  65+ 713B 3A 04 89     2 ld a,(Ctrl_0)
  66+ 713E CB 77            bit 6,a
  67+ 7140 28 05            jr z,7F
  68+ 7142
  69+ 7142              ; Guardamos foto de Amadeus.
  70+ 7142
  71+ 7142 2A 34 89         ld hl,(End_Snapshot_Amadeus)
  72+ 7145 18 03            jr 4F
  73+ 7147
  74+ 7147 2A 2E 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 714A
  76+ 714A 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 714C
  78+ 714C D1           1 pop de
  79+ 714D 73               ld (hl),e
  80+ 714E 23               inc hl
  81+ 714F 72               ld (hl),d
  82+ 7150 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 7151 10 F9            djnz 1B
  84+ 7153
  85+ 7153              ; Disparo o entidad ?
  86+ 7153
  87+ 7153 3A 17 89         ld a,(Ctrl_1)
  88+ 7156 CB 47            bit 0,a
  89+ 7158 28 05            jr z,5F
  90+ 715A
  91+ 715A 22 30 89         ld (Stack_snapshot_disparos),hl
  92+ 715D 18 13            jr 6F
  93+ 715F
  94+ 715F              ; Entidad o Amadeus ?
  95+ 715F
  96+ 715F 3A 04 89     5 ld a,(Ctrl_0)
  97+ 7162 CB 77            bit 6,a
  98+ 7164 28 09            jr z,8F
  99+ 7166
 100+ 7166 22 34 89         ld (End_Snapshot_Amadeus),hl
 101+ 7169 ED 7B 28 89      ld sp,(Stack)
 102+ 716D FB               ei
 103+ 716E C9               ret
 104+ 716F
 105+ 716F 22 2E 89     8 ld (Stack_snapshot),hl
 106+ 7172 ED 7B 28 89  6 ld sp,(Stack)
 107+ 7176
 108+ 7176 C9               ret
 109+ 7177
 110+ 7177              ; -----------------------------------------------------------------------------
 111+ 7177              ;
 112+ 7177              ;   21/11/23
 113+ 7177
 114+ 7177              Limpia_y_reinicia_Stack_Snapshot
 115+ 7177
 116+ 7177              ;   Limpia Album_de_fotos.
 117+ 7177
 118+ 7177 2A 2E 89         ld hl,(Stack_snapshot)
 119+ 717A 7D               ld a,l
 120+ 717B A7               and a
 121+ 717C C8               ret z   ;   Salimos si el álbum está vacío.
 122+ 717D
 123+ 717D 47               ld b,a
 124+ 717E 04               inc b
 125+ 717F
 126+ 717F 36 00        1 ld (hl),0
 127+ 7181 2D               dec l
 128+ 7182 10 FB            djnz 1B
 129+ 7184
 130+ 7184              ;   Reinicializa (Stack_snapshot).
 131+ 7184
 132+ 7184 AF               xor a
 133+ 7185 32 2E 89         ld (Stack_snapshot),a
 134+ 7188
 135+ 7188 C9               ret
# file closed: Guarda_foto_registros.asm
1831  7189
1832  7189              	SAVESNA "Pruebas.sna", START
1833  7189
1834  7189
1835  7189
1836  7189
# file closed: Banco_de_pruebas.asm
